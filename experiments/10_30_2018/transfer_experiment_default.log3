

Start learning from source dataset


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.8357608753980157;  // std dev = 0,148, 402,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=393 */
%   else if ( function(B, D), function(A, D) )
%   | then if ( location(B, E), location(A, E) )
%   | | then return 0.521707913615924;  // std dev = 0,472, 2.467,000 (wgt'ed) examples reached here.  /* #neg=830 #pos=1.637 */
%   | | else if ( phenotype(B, F), phenotype(A, F) )
%   | | | then return 0.5609791237787544;  // std dev = 0,457, 212,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=149 */
%   | | | else if ( complex(B, G), complex(A, H) )
%   | | | | then return 0.1856343152164726;  // std dev = 0,469, 171,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
%   | | | | else if ( location(A, I), enzyme(B, J) )
%   | | | | | then return 0.23843062524035727;  // std dev = 0,485, 213,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=81 */
%   | | | | | else if ( location(B, K), location(A, L) )
%   | | | | | | then if ( phenotype(B, M) )
%   | | | | | | | then return 0.3950220914416912;  // std dev = 0,499, 339,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=182 */
%   | | | | | | | else return 0.2863605220012714;  // std dev = 0,495, 397,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=170 */
%   | | | | | | else return 0.4378099520486637;  // std dev = 0,494, 295,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=171 */
%   | else return 0.22539960895395467;  // std dev = 0,482, 4.452,000 (wgt'ed) examples reached here.  /* #neg=2.817 #pos=1.635 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then return 0.41788705779697455;  // std dev = 0,475, 4.495,000 (wgt'ed) examples reached here.  /* #neg=1.657 #pos=2.838 */
%   else if ( complex(B, D), complex(A, E) )
%   | then return 0.09336384209664478;  // std dev = 0,441, 328,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=87 */
%   | else if ( phenotype(A, F), phenotype(B, F) )
%   | | then if ( complex(A, G), proteinclass(A, H) )
%   | | | then return 0.07843844178132064;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( proteinclass(B, I) )
%   | | | | then return 0.5784384417813208;  // std dev = 0,433, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | | else if ( location(A, J), location(B, J) )
%   | | | | | then return 0.46177177511465434;  // std dev = 0,482, 30,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | | | else if ( complex(A, K) )
%   | | | | | | then if ( enzyme(A, L) )
%   | | | | | | | then return 0.49510510844798733;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | | else return 0.32843844178132064;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | | | | else return 0.161771775114654;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.20066887014175205;  // std dev = 0,483, 4.062,000 (wgt'ed) examples reached here.  /* #neg=2.550 #pos=1.512 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then return 0.3398407296972196;  // std dev = 0,474, 4.495,000 (wgt'ed) examples reached here.  /* #neg=1.657 #pos=2.838 */
%   else if ( enzyme(B, D), phenotype(A, E) )
%   | then return 0.0779225680379827;  // std dev = 0,447, 355,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=99 */
%   | else if ( location(A, F), complex(B, G) )
%   | | then return 0.12011253596283349;  // std dev = 0,464, 742,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=235 */
%   | | else if ( function(B, H), complex(A, I) )
%   | | | then return 0.15942063763813602;  // std dev = 0,480, 1.303,000 (wgt'ed) examples reached here.  /* #neg=831 #pos=472 */
%   | | | else if ( function(B, J), phenotype(A, K) )
%   | | | | then return 0.15828361046120124;  // std dev = 0,480, 596,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=215 */
%   | | | | else if ( function(B, L), function(A, M) )
%   | | | | | then return 0.21558904450723126;  // std dev = 0,493, 1.377,000 (wgt'ed) examples reached here.  /* #neg=802 #pos=575 */
%   | | | | | else if ( phenotype(A, N), proteinclass(A, P) )
%   | | | | | | then return 0.5480146073249726;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | | | | else if ( proteinclass(A, Q) )
%   | | | | | | | then return -0.20198539267502735;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | | | else return 0.2980146073249727;  // std dev = 0,500, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then return 0.2654640280779317;  // std dev = 0,473, 4.495,000 (wgt'ed) examples reached here.  /* #neg=1.657 #pos=2.838 */
%   else if ( complex(A, D), function(B, E) )
%   | then return 0.11187946056825245;  // std dev = 0,471, 1.791,000 (wgt'ed) examples reached here.  /* #neg=1.190 #pos=601 */
%   | else if ( proteinclass(B, F), enzyme(B, G) )
%   | | then return 0.0491865941037408;  // std dev = 0,447, 132,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=37 */
%   | | else if ( enzyme(A, H), proteinclass(A, I) )
%   | | | then return 0.06653465941254046;  // std dev = 0,453, 101,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=30 */
%   | | | else if ( function(B, J), function(A, K) )
%   | | | | then return 0.16210339550903374;  // std dev = 0,488, 2.357,000 (wgt'ed) examples reached here.  /* #neg=1.426 #pos=931 */
%   | | | | else if ( complex(A, L) )
%   | | | | | then return 0.12805309984717125;  // std dev = 0,482, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | | | else if ( phenotype(B, M) )
%   | | | | | | then return 0.07905385308985576;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | | | else if ( enzyme(B, N) )
%   | | | | | | | then return 0.7457205197565223;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.2990436473736564;  // std dev = 0,495, 45,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.4632990168263587;  // std dev = 0,148, 402,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=393 */
%   else if ( location(B, D), location(A, D) )
%   | then return 0.1859603268600958;  // std dev = 0,481, 4.398,000 (wgt'ed) examples reached here.  /* #neg=2.013 #pos=2.385 */
%   | else if ( phenotype(B, E), phenotype(A, E) )
%   | | then return 0.25133204888832716;  // std dev = 0,461, 243,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=164 */
%   | | else if ( complex(B, F), location(A, G) )
%   | | | then return 0.0252148808601091;  // std dev = 0,465, 774,000 (wgt'ed) examples reached here.  /* #neg=516 #pos=258 */
%   | | | else if ( complex(A, H), function(B, I) )
%   | | | | then return 0.07050705192551177;  // std dev = 0,476, 1.230,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=447 */
%   | | | | else if ( function(B, J), phenotype(A, K) )
%   | | | | | then return 0.08316525442196794;  // std dev = 0,482, 671,000 (wgt'ed) examples reached here.  /* #neg=410 #pos=261 */
%   | | | | | else if ( location(B, L), location(A, M) )
%   | | | | | | then if ( proteinclass(B, N) )
%   | | | | | | | then return 0.09212050744159302;  // std dev = 0,488, 111,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=44 */
%   | | | | | | | else return 0.13487218548457977;  // std dev = 0,495, 528,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=231 */
%   | | | | | | else return 0.1722905028824814;  // std dev = 0,491, 591,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=291 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.3503643122019056;  // std dev = 0,148, 402,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=393 */
%   else if ( location(B, D), location(A, D) )
%   | then return 0.14393750457512414;  // std dev = 0,480, 4.398,000 (wgt'ed) examples reached here.  /* #neg=2.013 #pos=2.385 */
%   | else if ( phenotype(B, E), phenotype(A, E) )
%   | | then return 0.19009444612960644;  // std dev = 0,460, 243,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=164 */
%   | | else if ( complex(B, F), location(A, G) )
%   | | | then return 0.019949199486608574;  // std dev = 0,465, 774,000 (wgt'ed) examples reached here.  /* #neg=516 #pos=258 */
%   | | | else if ( enzyme(B, H), phenotype(A, I) )
%   | | | | then return -0.0015901543165338756;  // std dev = 0,458, 248,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=79 */
%   | | | | else if ( function(B, J), complex(A, K) )
%   | | | | | then return 0.06440346515829308;  // std dev = 0,478, 1.089,000 (wgt'ed) examples reached here.  /* #neg=685 #pos=404 */
%   | | | | | else if ( location(A, L), location(B, M) )
%   | | | | | | then if ( phenotype(A, N) )
%   | | | | | | | then return 0.06437677893023823;  // std dev = 0,483, 371,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=145 */
%   | | | | | | | else return 0.10027700510184313;  // std dev = 0,494, 639,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=275 */
%   | | | | | | else return 0.12605002466447;  // std dev = 0,490, 784,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=371 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then return 0.23344320651173647;  // std dev = 0,403, 823,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=639 */
%   else if ( location(A, D), location(B, D) )
%   | then return 0.10302126878377357;  // std dev = 0,472, 4.205,000 (wgt'ed) examples reached here.  /* #neg=1.917 #pos=2.288 */
%   | else if ( location(B, E), complex(A, F) )
%   | | then return 0.026522133926533107;  // std dev = 0,469, 1.178,000 (wgt'ed) examples reached here.  /* #neg=769 #pos=409 */
%   | | else if ( location(A, G), enzyme(B, H) )
%   | | | then return 0.014747537220624508;  // std dev = 0,466, 350,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=123 */
%   | | | else if ( phenotype(A, I), function(B, J) )
%   | | | | then return 0.051186165228801296;  // std dev = 0,482, 1.025,000 (wgt'ed) examples reached here.  /* #neg=631 #pos=394 */
%   | | | | else if ( location(A, K), location(B, L) )
%   | | | | | then if ( complex(B, M), proteinclass(A, N) )
%   | | | | | | then return -0.06744862110537563;  // std dev = 0,440, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | | | | else if ( phenotype(B, P) )
%   | | | | | | | then return 0.10863638755210589;  // std dev = 0,485, 245,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=115 */
%   | | | | | | | else return 0.07809026322115724;  // std dev = 0,494, 427,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=179 */
%   | | | | | else return 0.10374054525037754;  // std dev = 0,489, 672,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=321 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then return 0.17814912911112338;  // std dev = 0,403, 823,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=639 */
%   else if ( complex(A, D), complex(B, D) )
%   | then return 0.2641467561040596;  // std dev = 0,106, 269,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=266 */
%   | else if ( complex(A, E) )
%   | | then return 0.02861781704475149;  // std dev = 0,480, 3.216,000 (wgt'ed) examples reached here.  /* #neg=1.882 #pos=1.334 */
%   | | else if ( function(A, F), function(B, F) )
%   | | | then return 0.09877480018147491;  // std dev = 0,480, 2.026,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=1.226 */
%   | | | else if ( enzyme(A, G), phenotype(B, H) )
%   | | | | then return -0.0762719845967405;  // std dev = 0,424, 66,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | | | else if ( phenotype(A, I), location(B, J) )
%   | | | | | then return 0.029441933663339886;  // std dev = 0,473, 684,000 (wgt'ed) examples reached here.  /* #neg=450 #pos=234 */
%   | | | | | else if ( location(A, K), phenotype(B, L) )
%   | | | | | | then return 0.031669361248522904;  // std dev = 0,482, 403,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=148 */
%   | | | | | | else if ( enzyme(B, M), proteinclass(B, N) )
%   | | | | | | | then return -0.06245853033291157;  // std dev = 0,426, 62,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | | | | | | else return 0.08088407789292502;  // std dev = 0,493, 1.399,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=596 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.20048078373105482;  // std dev = 0,149, 402,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=393 */
%   else if ( complex(B, D), enzyme(B, E) )
%   | then return -0.037266901669653824;  // std dev = 0,470, 383,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=142 */
%   | else if ( phenotype(A, F), phenotype(B, F) )
%   | | then return 0.14114642606065103;  // std dev = 0,423, 653,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=492 */
%   | | else if ( enzyme(A, G), location(B, H) )
%   | | | then return 0.001991101333480241;  // std dev = 0,478, 910,000 (wgt'ed) examples reached here.  /* #neg=519 #pos=391 */
%   | | | else if ( location(A, I), location(B, I) )
%   | | | | then if ( phenotype(A, J), phenotype(B, K) )
%   | | | | | then if ( enzyme(B, L), complex(A, M) )
%   | | | | | | then return -0.08569742047963935;  // std dev = 0,450, 55,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | | | | else if ( proteinclass(A, N), proteinclass(B, N) )
%   | | | | | | | then return 0.4356101532669139;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | | | else return 0.02307367198883254;  // std dev = 0,494, 506,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=262 */
%   | | | | | else return 0.07710051858315879;  // std dev = 0,480, 2.725,000 (wgt'ed) examples reached here.  /* #neg=1.280 #pos=1.445 */
%   | | | | else return 0.03619879026369963;  // std dev = 0,482, 3.310,000 (wgt'ed) examples reached here.  /* #neg=1.985 #pos=1.325 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( location(B, C), location(A, C) )
%   then return 0.060880063799068206;  // std dev = 0,460, 4.782,000 (wgt'ed) examples reached here.  /* #neg=2.022 #pos=2.760 */
%   else if ( complex(B, D), function(A, E) )
%   | then return -0.010522058030987961;  // std dev = 0,465, 984,000 (wgt'ed) examples reached here.  /* #neg=607 #pos=377 */
%   | else if ( phenotype(B, F), proteinclass(B, G) )
%   | | then if ( location(B, H) )
%   | | | then return 0.10083160998469881;  // std dev = 0,480, 206,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=116 */
%   | | | else return -0.20999281833323333;  // std dev = 0,430, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( location(A, I), function(B, J) )
%   | | | then return 0.024656459018756446;  // std dev = 0,481, 2.664,000 (wgt'ed) examples reached here.  /* #neg=1.600 #pos=1.064 */
%   | | | else if ( function(A, K), phenotype(B, L) )
%   | | | | then return 0.15128912995176833;  // std dev = 0,447, 46,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | | | | else if ( enzyme(A, M) )
%   | | | | | then return -0.00590897252652795;  // std dev = 0,455, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | | | else if ( complex(A, N) )
%   | | | | | | then return -0.06394208059613735;  // std dev = 0,452, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | | | | else return 0.0766409030406549;  // std dev = 0,492, 219,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=112 */


Predicates from source: ['interaction(protein,protein).', 'location(protein,loc).', 'proteinclass(protein,class).', 'complex(protein,com).', 'enzyme(protein,enz).', 'phenotype(protein,phe).', 'function(protein,fun).'] 



Best mapping found: ['interaction(A,B) -> follows(A,B)', 'proteinclass(A,B) -> tweets(A,B)', 'function(A,B) -> tweets(A,B)', 'phenotype(A,B) -> tweets(A,B)', 'complex(A,B) -> tweets(A,B)', 'location(A,B) -> accounttype(A,B)', 'enzyme(A,B) -> tweets(A,B)'] 

Transferred target predicate: follows 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- tweets(A, C), tweets(B, C).;false;true
0;false,true,false,false;tweets(B, G), tweets(A, H).;false;true
0;false,true;accounttype(B, E), accounttype(A, E).;false;true
0;false,true,false,false,false,false;accounttype(B, K), accounttype(A, L).;true;false
0;false;tweets(B, D), tweets(A, D).;true;false
0;false,true,false,false,false;accounttype(A, I), tweets(B, J).;false;true
0;false,true,false;tweets(B, F), tweets(A, F).;false;true
0;false,true,false,false,false,false,true;tweets(B, M).;false;false
1;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true
1;false,false,true;tweets(A, G), tweets(A, H).;false;true
1;false,false,true,false,false,false;tweets(A, K).;true;false
1;false,false,true,false,false;accounttype(A, J), accounttype(B, J).;false;true
1;false;tweets(B, D), tweets(A, E).;false;true
1;false,false,true,false,false,false,true;tweets(A, L).;false;false
1;false,false;tweets(A, F), tweets(B, F).;true;false
1;false,false,true,false;tweets(B, I).;false;true
2;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true
2;false,false,false,false,false,false;tweets(A, N), tweets(A, P).;false;true
2;false,false,false,false;tweets(B, J), tweets(A, K).;false;true
2;false,false,false,false,false,false,false;tweets(A, Q).;false;false
2;false,false,false;tweets(B, H), tweets(A, I).;false;true
2;false;tweets(B, D), tweets(A, E).;false;true
2;false,false,false,false,false;tweets(B, L), tweets(A, M).;false;true
2;false,false;accounttype(A, F), tweets(B, G).;false;true
3;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true
3;false,false,false,false,false,false;tweets(B, M).;false;true
3;false,false,false,false;tweets(B, J), tweets(A, K).;false;true
3;false,false,false,false,false,false,false;tweets(B, N).;false;false
3;false,false,false;tweets(A, H), tweets(A, I).;false;true
3;false;tweets(A, D), tweets(B, E).;false;true
3;false,false,false,false,false;tweets(A, L).;false;true
3;false,false;tweets(B, F), tweets(B, G).;false;true
4;;follows(A, B) :- tweets(A, C), tweets(B, C).;false;true
4;false,false,false,false,false,false,true;tweets(B, N).;false;false
4;false,false,false,false,false,false;accounttype(B, L), accounttype(A, M).;true;false
4;false,false,false,false;tweets(A, H), tweets(B, I).;false;true
4;false,false,false;tweets(B, F), accounttype(A, G).;false;true
4;false;accounttype(B, D), accounttype(A, D).;false;true
4;false,false,false,false,false;tweets(B, J), tweets(A, K).;false;true
4;false,false;tweets(B, E), tweets(A, E).;false;true
5;;follows(A, B) :- tweets(A, C), tweets(B, C).;false;true
5;false,false,false,false,false,false,true;tweets(A, N).;false;false
5;false,false,false,false,false,false;accounttype(A, L), accounttype(B, M).;true;false
5;false,false,false,false;tweets(B, H), tweets(A, I).;false;true
5;false,false,false;tweets(B, F), accounttype(A, G).;false;true
5;false;accounttype(B, D), accounttype(A, D).;false;true
5;false,false,false,false,false;tweets(B, J), tweets(A, K).;false;true
5;false,false;tweets(B, E), tweets(A, E).;false;true
6;;follows(A, B) :- tweets(A, C), tweets(B, C).;false;true
6;false,false,false,false,false,true;tweets(B, M), tweets(A, N).;false;true
6;false,false,false,false;tweets(A, I), tweets(B, J).;false;true
6;false,false,false;accounttype(A, G), tweets(B, H).;false;true
6;false;accounttype(A, D), accounttype(B, D).;false;true
6;false,false,false,false,false,true,false;tweets(B, P).;false;false
6;false,false,false,false,false;accounttype(A, K), accounttype(B, L).;true;false
6;false,false;accounttype(B, E), tweets(A, F).;false;true
7;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true
7;false,false,false,false,false,false;accounttype(A, K), tweets(B, L).;false;true
7;false,false,false,false;tweets(A, G), tweets(B, H).;false;true
7;false,false,false,false,false,false,false;tweets(B, M), tweets(B, N).;false;false
7;false,false,false;tweets(A, F), tweets(B, F).;false;true
7;false;tweets(A, D), tweets(B, D).;false;true
7;false,false,false,false,false;tweets(A, I), accounttype(B, J).;false;true
7;false,false;tweets(A, E).;false;true
8;;follows(A, B) :- tweets(A, C), tweets(B, C).;false;true
8;false,false,false,false;accounttype(A, I), accounttype(B, I).;true;false
8;false,false,false;tweets(A, G), accounttype(B, H).;false;true
8;false;tweets(B, D), tweets(B, E).;false;true
8;false,false,false,false,true,true;tweets(B, L), tweets(A, M).;false;true
8;false,false,false,false,true,true,false;tweets(A, N), tweets(B, N).;false;false
8;false,false;tweets(A, F), tweets(B, F).;false;true
8;false,false,false,false,true;tweets(A, J), tweets(B, K).;true;false
9;;follows(A, B) :- accounttype(B, C), accounttype(A, C).;false;true
9;false,false,true;accounttype(B, H).;false;false
9;false,false,false,false,false,false;tweets(A, N).;false;false
9;false,false,false,false;tweets(A, K), tweets(B, L).;false;true
9;false,false,false;accounttype(A, I), tweets(B, J).;false;true
9;false;tweets(B, D), tweets(A, E).;false;true
9;false,false,false,false,false;tweets(A, M).;false;true
9;false,false;tweets(B, F), tweets(B, G).;true;true
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(A, C), tweets(B, C) )
%   then return 0.4813928686882688;  // std dev = 13,559, 783,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=488 */
%   else if ( tweets(B, D), tweets(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2339533109038852;  // std dev = 13,501, 777,000 (wgt'ed) examples reached here.  /* #neg=485 #pos=292 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.41219380971660635;  // std dev = 13,559, 783,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=488 */
%   else if ( tweets(B, D), tweets(A, E) )
%   | then return 0.17809649501346542;  // std dev = 8,826, 342,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=120 */
%   | else if ( tweets(A, F), tweets(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.22262160088158156;  // std dev = 10,198, 435,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=172 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.3355095906532138;  // std dev = 13,559, 783,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=488 */
%   else if ( tweets(B, D), tweets(A, E) )
%   | then return 0.15114199465579226;  // std dev = 8,826, 342,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=120 */
%   | else if ( accounttype(A, F), tweets(B, G) )
%   | | then return 0.3210900148664219;  // std dev = 7,303, 214,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=113 */
%   | | else if ( tweets(B, H), tweets(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(B, J), tweets(A, K) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, L), tweets(A, M) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(A, N), tweets(A, P) )
%   | | | | | | then return 0.05730133635206423;  // std dev = 6,126, 193,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=51 */
%   | | | | | | else if ( tweets(A, Q) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return 0.0787669174031375;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.2622156137744064;  // std dev = 13,559, 783,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=488 */
%   else if ( tweets(A, D), tweets(B, E) )
%   | then return 0.12588513954883168;  // std dev = 8,826, 342,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=120 */
%   | else if ( tweets(B, F), tweets(B, G) )
%   | | then return 0.2634645769927824;  // std dev = 7,303, 214,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=113 */
%   | | else if ( tweets(A, H), tweets(A, I) )
%   | | | then return 0.04773907601462518;  // std dev = 6,126, 193,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=51 */
%   | | | else if ( tweets(B, J), tweets(A, K) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, L) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(B, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( tweets(B, N) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return 0.06554122932328434;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(A, C), tweets(B, C) )
%   then return 0.19980894674687072;  // std dev = 13,559, 783,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=488 */
%   else if ( accounttype(B, D), accounttype(A, D) )
%   | then return 0.04918650133021743;  // std dev = 9,453, 422,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=131 */
%   | else if ( tweets(B, E), tweets(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(B, F), accounttype(A, G) )
%   | | | then return 0.2409638772398342;  // std dev = 8,052, 269,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=138 */
%   | | | else if ( tweets(A, H), tweets(B, I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, J), tweets(A, K) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( accounttype(B, L), accounttype(A, M) )
%   | | | | | | then if ( tweets(B, N) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return 0.04200090959655643;  // std dev = 4,105, 86,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(A, C), tweets(B, C) )
%   then return 0.15043686788636798;  // std dev = 13,559, 783,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=488 */
%   else if ( accounttype(B, D), accounttype(A, D) )
%   | then return 0.039656129650851225;  // std dev = 9,453, 422,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=131 */
%   | else if ( tweets(B, E), tweets(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(B, F), accounttype(A, G) )
%   | | | then return 0.19104473431045627;  // std dev = 8,040, 269,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=138 */
%   | | | else if ( tweets(B, H), tweets(A, I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, J), tweets(A, K) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( accounttype(A, L), accounttype(B, M) )
%   | | | | | | then if ( tweets(A, N) )
%   | | | | | | | then return 0.04060812375846516;  // std dev = 3,908, 77,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
%   | | | | | | | else return -0.016969489855943584;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(A, C), tweets(B, C) )
%   then return 0.11285600421201343;  // std dev = 13,559, 783,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=488 */
%   else if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.031816219596210504;  // std dev = 9,453, 422,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=131 */
%   | else if ( accounttype(B, E), tweets(A, F) )
%   | | then return 0.0590642012765471;  // std dev = 7,620, 254,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=93 */
%   | | else if ( accounttype(A, G), tweets(B, H) )
%   | | | then return 0.29838693409417827;  // std dev = 4,319, 92,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=66 */
%   | | | else if ( tweets(A, I), tweets(B, J) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( accounttype(A, K), accounttype(B, L) )
%   | | | | | then if ( tweets(B, M), tweets(A, N) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( tweets(B, P) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return -0.013895078888213366;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.08471702941180552;  // std dev = 13,559, 783,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=488 */
%   else if ( tweets(A, D), tweets(B, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( tweets(A, E) )
%   | | then return 0.030891673398895866;  // std dev = 10,698, 535,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=171 */
%   | | else if ( tweets(A, F), tweets(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, G), tweets(B, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, I), accounttype(B, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( accounttype(A, K), tweets(B, L) )
%   | | | | | | then return 0.11909097412099008;  // std dev = 7,024, 214,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=113 */
%   | | | | | | else if ( tweets(B, M), tweets(B, N) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return 0.0384020301618418;  // std dev = 2,386, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(A, C), tweets(B, C) )
%   then return 0.06374451308625508;  // std dev = 13,559, 783,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=488 */
%   else if ( tweets(B, D), tweets(B, E) )
%   | then return 0.05491347511761542;  // std dev = 11,252, 556,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=233 */
%   | else if ( tweets(A, F), tweets(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(A, G), accounttype(B, H) )
%   | | | then return 0.010444350494915705;  // std dev = 6,125, 193,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=51 */
%   | | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | | then if ( tweets(A, J), tweets(B, K) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return 0.054650296582954234;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | | else return -0.01834384507101147;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(B, C), accounttype(A, C) )
%   then return -0.055665646065329255;  // std dev = 13,570, 792,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=298 */
%   else if ( tweets(B, D), tweets(A, E) )
%   | then return 0.15262784617777206;  // std dev = 10,844, 590,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=393 */
%   | else if ( tweets(B, F), tweets(B, G) )
%   | | then if ( accounttype(B, H) )
%   | | | then return 0.18107300537346055;  // std dev = 4,319, 92,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=66 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( accounttype(A, I), tweets(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, K), tweets(B, L) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, M) )
%   | | | | | then return 0.01453306285043192;  // std dev = 3,908, 77,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
%   | | | | | else if ( tweets(A, N) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.01500850049058776;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
Results
   AUC ROC   = 0.736299
   AUC PR    = 0.708589
   CLL	      = -0.624495
   Precision = 0.625272 at threshold = 0.5
   Recall    = 0.810734
   F1        = 0.706027


Total learning time: 19.871 seconds
Total inference time: 1.087 seconds
AUC ROC: 0.736299


Structure after Parameter Learning
['follows(A, B)', {'': 'tweets(A, C), tweets(B, C)', 'false': 'tweets(B, D), tweets(A, D)'}, {'false,false': [13.501, 485, 292], 'false,true': [0.0, 0, 0], 'true': [13.559, 295, 488]}]
['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false': 'tweets(B, D), tweets(A, E)', 'false,false': 'tweets(A, F), tweets(B, F)'}, {'false,false,true': [0.0, 0, 0], 'false,true': [8.826, 222, 120], 'true': [13.559, 295, 488], 'false,false,false': [10.198, 263, 172]}]
['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false,false,false,false,false': 'tweets(A, N), tweets(A, P)', 'false,false,false,false': 'tweets(B, J), tweets(A, K)', 'false,false,false,false,false,false,false': 'tweets(A, Q)', 'false,false,false': 'tweets(B, H), tweets(A, I)', 'false': 'tweets(B, D), tweets(A, E)', 'false,false,false,false,false': 'tweets(B, L), tweets(A, M)', 'false,false': 'accounttype(A, F), tweets(B, G)'}, {'false,false,true': [7.303, 101, 113], 'false,false,false,true': [0.0, 0, 0], 'false,true': [8.826, 222, 120], 'true': [13.559, 295, 488], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,true': [6.126, 142, 51], 'false,false,false,false,false,false,false,false': [2.39, 20, 8], 'false,false,false,false,true': [0.0, 0, 0]}]
['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false,false,false,false,false': 'tweets(B, M)', 'false,false,false,false': 'tweets(B, J), tweets(A, K)', 'false,false,false,false,false,false,false': 'tweets(B, N)', 'false,false,false': 'tweets(A, H), tweets(A, I)', 'false': 'tweets(A, D), tweets(B, E)', 'false,false,false,false,false': 'tweets(A, L)', 'false,false': 'tweets(B, F), tweets(B, G)'}, {'false,false,true': [7.303, 101, 113], 'false,false,false,true': [6.126, 142, 51], 'false,true': [8.826, 222, 120], 'true': [13.559, 295, 488], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,false': [2.39, 20, 8], 'false,false,false,false,true': [0.0, 0, 0]}]
['follows(A, B)', {'': 'tweets(A, C), tweets(B, C)', 'false,false,false,false,false,false,true': 'tweets(B, N)', 'false,false,false,false,false,false': 'accounttype(B, L), accounttype(A, M)', 'false,false,false,false': 'tweets(A, H), tweets(B, I)', 'false,false,false': 'tweets(B, F), accounttype(A, G)', 'false': 'accounttype(B, D), accounttype(A, D)', 'false,false,false,false,false': 'tweets(B, J), tweets(A, K)', 'false,false': 'tweets(B, E), tweets(A, E)'}, {'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.052, 131, 138], 'false,true': [9.453, 291, 131], 'true': [13.559, 295, 488], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,true,true': [0.0, 0, 0], 'false,false,false,false,false,false,false': [0.0, 0, 0], 'false,false,false,false,false,false,true,false': [4.105, 63, 23], 'false,false,false,false,true': [0.0, 0, 0]}]
['follows(A, B)', {'': 'tweets(A, C), tweets(B, C)', 'false,false,false,false,false,false,true': 'tweets(A, N)', 'false,false,false,false,false,false': 'accounttype(A, L), accounttype(B, M)', 'false,false,false,false': 'tweets(B, H), tweets(A, I)', 'false,false,false': 'tweets(B, F), accounttype(A, G)', 'false': 'accounttype(B, D), accounttype(A, D)', 'false,false,false,false,false': 'tweets(B, J), tweets(A, K)', 'false,false': 'tweets(B, E), tweets(A, E)'}, {'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.04, 131, 138], 'false,true': [9.453, 291, 131], 'true': [13.559, 295, 488], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,true,true': [3.908, 56, 21], 'false,false,false,false,false,false,false': [0.0, 0, 0], 'false,false,false,false,false,false,true,false': [1.247, 7, 2], 'false,false,false,false,true': [0.0, 0, 0]}]
['follows(A, B)', {'': 'tweets(A, C), tweets(B, C)', 'false,false,false,false,false,true': 'tweets(B, M), tweets(A, N)', 'false,false,false,false': 'tweets(A, I), tweets(B, J)', 'false,false,false': 'accounttype(A, G), tweets(B, H)', 'false': 'accounttype(A, D), accounttype(B, D)', 'false,false,false,false,false,true,false': 'tweets(B, P)', 'false,false,false,false,false': 'accounttype(A, K), accounttype(B, L)', 'false,false': 'accounttype(B, E), tweets(A, F)'}, {'false,false,true': [7.62, 161, 93], 'false,false,false,true': [4.319, 26, 66], 'false,true': [9.453, 291, 131], 'true': [13.559, 295, 488], 'false,false,false,false,false,false': [0.0, 0, 0], 'false,false,false,false,false,true,true': [0.0, 0, 0], 'false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,true,false,false': [1.247, 7, 2], 'false,false,false,false,false,true,false,true': [0.0, 0, 0]}]
['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false,false,false,false,false': 'accounttype(A, K), tweets(B, L)', 'false,false,false,false': 'tweets(A, G), tweets(B, H)', 'false,false,false,false,false,false,false': 'tweets(B, M), tweets(B, N)', 'false,false,false': 'tweets(A, F), tweets(B, F)', 'false': 'tweets(A, D), tweets(B, D)', 'false,false,false,false,false': 'tweets(A, I), accounttype(B, J)', 'false,false': 'tweets(A, E)'}, {'false,false,true': [10.698, 364, 171], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true': [13.559, 295, 488], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,true': [7.024, 101, 113], 'false,false,false,false,false,false,false,false': [2.386, 20, 8], 'false,false,false,false,true': [0.0, 0, 0]}]
['follows(A, B)', {'': 'tweets(A, C), tweets(B, C)', 'false,false,false,false': 'accounttype(A, I), accounttype(B, I)', 'false,false,false': 'tweets(A, G), accounttype(B, H)', 'false': 'tweets(B, D), tweets(B, E)', 'false,false': 'tweets(A, F), tweets(B, F)', 'false,false,false,false,true': 'tweets(A, J), tweets(B, K)'}, {'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.125, 142, 51], 'false,true': [11.252, 323, 233], 'true': [13.559, 295, 488], 'false,false,false,false,true,false': [2.026, 13, 6], 'false,false,false,false,false': [1.247, 7, 2], 'false,false,false,false,true,true': [0.0, 0, 0]}]
['follows(A, B)', {'': 'accounttype(B, C), accounttype(A, C)', 'false,false,true': 'accounttype(B, H)', 'false,false,false,false,false,false': 'tweets(A, N)', 'false,false,false,false': 'tweets(A, K), tweets(B, L)', 'false,false,false': 'accounttype(A, I), tweets(B, J)', 'false': 'tweets(B, D), tweets(A, E)', 'false,false,false,false,false': 'tweets(A, M)', 'false,false': 'tweets(B, F), tweets(B, G)'}, {'false,false,true,true': [4.319, 26, 66], 'false,false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true': [10.844, 197, 393], 'true': [13.57, 494, 298], 'false,false,false,false,false,true': [3.908, 56, 21], 'false,false,false,false,false,false,false': [1.247, 7, 2], 'false,false,false,false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}]
{'': [0.2348109328335651, 0.2345754469306625], 'false': [nan, 0.23457544693066112]}
{'': [0.23481093283356422, 0.2345754469306623], 'false': [0.22776238842720542, 0.2390593209142536], 'false,false': [nan, 0.2390593209142534]}
{'': [0.2348109328335721, 0.23443000336656278], 'false,false,false,false,false,false': [0.19442132674702614, 0.2040816326530614], 'false,false,false,false': [nan, 0.1956962388157484], 'false,false,false,false,false,false,false': [nan, 0.2040816326530614], 'false,false,false': [nan, 0.1956962388157484], 'false': [0.22776238842720734, 0.23905932091425663], 'false,false,false,false,false': [nan, 0.1956962388157484], 'false,false': [0.24921390514455713, 0.1956962388157484]}
{'': [0.23481093283357016, 0.23113088023832556], 'false,false,false,false,false,false': [nan, 0.20408163265306137], 'false,false,false,false': [nan, 0.20408163265306137], 'false,false,false,false,false,false,false': [nan, 0.20408163265306137], 'false,false,false': [0.19442132674702542, 0.20408163265306137], 'false': [0.22776238842721114, 0.2334057964095308], 'false,false,false,false,false': [nan, 0.20408163265306137], 'false,false': [0.24921390514455438, 0.19568032207042757]}
{'': [0.23481093283357068, 0.22858660274778614], 'false,false,false,false,false,false,true': [nan, 0.1959866403991404], 'false,false,false,false,false,false': [0.1959866403991404, nan], 'false,false,false,false': [nan, 0.19598664039914082], 'false,false,false': [0.24101862141384808, 0.1959866403991404], 'false': [0.21177400454262085, 0.23737618710433683], 'false,false,false,false,false': [nan, 0.1959866403991404], 'false,false': [nan, 0.2373761871043361]}
{'': [0.2348109328335705, 0.225137402773208], 'false,false,false,false,false,false,true': [0.19834710743801678, 0.17283950617283955], 'false,false,false,false,false,false': [0.19598833748970618, nan], 'false,false,false,false': [nan, 0.19598833748970618], 'false,false,false': [0.24028723953644085, 0.19598833748970618], 'false': [0.2117561227957403, 0.23404946429182352], 'false,false,false,false,false': [nan, 0.19598833748970618], 'false,false': [nan, 0.23404946429182358]}
{'': [0.2348109328335711, 0.2228142025616753], 'false,false,false,false,false,true': [nan, 0.17283950617283952], 'false,false,false,false': [nan, 0.17283950617283952], 'false,false,false': [0.20274102079395095, 0.17283950617283952], 'false': [0.21174299794783577, 0.23182428383968173], 'false,false,false,false,false,true,false': [nan, 0.17283950617283952], 'false,false,false,false,false': [0.17283950617283952, nan], 'false,false': [0.22857475257468962, 0.20799208728478344]}
{'': [0.23481093283357002, 0.21966343551253023], 'false,false,false,false,false,false': [0.230556132463578, 0.20334685770923727], 'false,false,false,false': [nan, 0.22807409747079455], 'false,false,false,false,false,false,false': [nan, 0.20334685770923727], 'false,false,false': [nan, 0.22807409747079455], 'false': [nan, 0.21966343551253156], 'false,false,false,false,false': [nan, 0.22807409747079455], 'false,false': [0.21392191693727491, 0.22807409747079455]}
{'': [0.2348109328335657, 0.21891520132530992], 'false,false,false,false': [0.2160664819944598, 0.1728395061728394], 'false,false,false': [0.19439818007020285, 0.20333423051404295], 'false': [0.2276933976245501, 0.19557795919284449], 'false,false': [nan, 0.19557795919284457], 'false,false,false,false,true': [nan, 0.2160664819944598]}
{'': [0.23252171820694814, 0.20149040394951814], 'false,false,true': [0.2027410207939507, nan], 'false,false,false,false,false,false': [nan, 0.17283950617283947], 'false,false,false,false': [nan, 0.19575947905351662], 'false,false,false': [nan, 0.1957594790535166], 'false': [0.19929923279829528, 0.20655345429070668], 'false,false,false,false,false': [0.19834710743801598, 0.17283950617283947], 'false,false': [0.2027410207939507, 0.1957594790535166]}
******************************************
Performing Theory Revision
******************************************
Transfer was not sufficient.
Error in experiment of yeast->twitter


Start learning from source dataset


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.29742248788043835;  // std dev = 0,496, 881,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.08320693973988257;  // std dev = 0,418, 431,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.21000078695136523;  // std dev = 0,478, 216,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=76 */
%   | | | else return 0.12285481745245355;  // std dev = 0,441, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   else if ( tweets(A, G), tweets(B, G) )
%   | then return 0.6024609611016745;  // std dev = 0,436, 923,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.21599207235441564;  // std dev = 0,479, 204,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=73 */
%   | | | else return 0.1487472256978015;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6221240903790128;  // std dev = 0,425, 161,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=123 */
%   | | | else return 0.0803711573217344;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.25723214113392545;  // std dev = 0,496, 881,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.07277330557064207;  // std dev = 0,418, 431,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.18246784419926296;  // std dev = 0,478, 216,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=76 */
%   | | | else return 0.10723201841692384;  // std dev = 0,441, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5123987289272836;  // std dev = 0,436, 923,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.1876145268168287;  // std dev = 0,479, 204,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=73 */
%   | | | else return 0.1296585851710834;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.5285408270303866;  // std dev = 0,425, 161,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=123 */
%   | | | else return 0.07030324498182235;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.21576663551665903;  // std dev = 0,496, 881,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.03115047117770806;  // std dev = 0,395, 202,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1552281355457026;  // std dev = 0,478, 216,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=76 */
%   | | | else if ( tweets(A, H) )
%   | | | | then return 0.09135627341732067;  // std dev = 0,435, 229,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=58 */
%   | | | | else return 0.09247711112699178;  // std dev = 0,441, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   else if ( tweets(A, I), tweets(B, I) )
%   | then return 0.40919702000834823;  // std dev = 0,436, 923,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=687 */
%   | else if ( tweets(A, J) )
%   | | then if ( tweets(B, K) )
%   | | | then return 0.159454089196229;  // std dev = 0,479, 204,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=73 */
%   | | | else return 0.11137140369626213;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.40178680620996393;  // std dev = 0,432, 170,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=125 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.17610776954744106;  // std dev = 0,496, 881,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.026878674629769016;  // std dev = 0,395, 202,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.12955015907880066;  // std dev = 0,478, 216,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=76 */
%   | | | else if ( tweets(A, H) )
%   | | | | then return 0.07857319759792836;  // std dev = 0,435, 229,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=58 */
%   | | | | else return 0.07889088162483843;  // std dev = 0,441, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   else if ( tweets(B, I), tweets(A, I) )
%   | then return 0.31286341412170826;  // std dev = 0,436, 923,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=687 */
%   | else if ( tweets(A, J) )
%   | | then if ( tweets(B, K) )
%   | | | then return 0.13287394511475117;  // std dev = 0,479, 204,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=73 */
%   | | | else return 0.09439937096602727;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.30826533939881;  // std dev = 0,430, 170,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=125 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.14056830230644624;  // std dev = 0,496, 881,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.023120568783114862;  // std dev = 0,395, 202,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.10635087814434467;  // std dev = 0,478, 216,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=76 */
%   | | | else if ( tweets(A, H) )
%   | | | | then return 0.06695340223502426;  // std dev = 0,435, 229,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=58 */
%   | | | | else return 0.06665881008529792;  // std dev = 0,441, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   else if ( tweets(B, I), tweets(A, I) )
%   | then return 0.23508304327072274;  // std dev = 0,436, 923,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=687 */
%   | else if ( tweets(A, J) )
%   | | then if ( tweets(B, K) )
%   | | | then return 0.10886419484489684;  // std dev = 0,479, 204,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=73 */
%   | | | else return 0.07908428286053523;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.232514497629405;  // std dev = 0,430, 170,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=125 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11031577760918189;  // std dev = 0,496, 881,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.01983410631648578;  // std dev = 0,395, 202,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.08612305053188016;  // std dev = 0,478, 216,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=76 */
%   | | | else return 0.05649460809208335;  // std dev = 0,436, 263,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.17672741260232644;  // std dev = 0,436, 923,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.08795716345326504;  // std dev = 0,479, 204,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=73 */
%   | | | else return 0.19118806750879141;  // std dev = 0,425, 161,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.0655941935369208;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return -0.10809316566258555;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08552147450830092;  // std dev = 0,496, 881,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01697493426844076;  // std dev = 0,395, 202,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.06898376649304482;  // std dev = 0,478, 216,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=76 */
%   | | | else return 0.04736240840259947;  // std dev = 0,436, 263,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.13397465037896503;  // std dev = 0,436, 923,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07027900794692078;  // std dev = 0,479, 204,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=73 */
%   | | | else return 0.14518419420171796;  // std dev = 0,425, 161,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.053950196907977414;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return -0.08463528100864383;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D) )
%   | then if ( tweets(A, D) )
%   | | then return 0.06573485850951366;  // std dev = 0,496, 881,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=387 */
%   | | else if ( tweets(A, E) )
%   | | | then return 0.014498567187528169;  // std dev = 0,395, 202,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=39 */
%   | | | else return 0.05478307693709449;  // std dev = 0,478, 216,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=76 */
%   | else return 0.039469953996432876;  // std dev = 0,436, 263,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=67 */
%   else if ( tweets(B, F) )
%   | then if ( tweets(A, F) )
%   | | then return 0.10262238402223786;  // std dev = 0,436, 923,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=687 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.05566876247487021;  // std dev = 0,479, 204,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=73 */
%   | | | else return 0.11157553059040666;  // std dev = 0,425, 161,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=123 */
%   | else if ( tweets(A, H) )
%   | | then return 0.044066289665896534;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return -0.06693362576772229;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.05022909101445681;  // std dev = 0,496, 881,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.012361950744321237;  // std dev = 0,395, 202,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04321765133310576;  // std dev = 0,478, 216,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=76 */
%   | | | else return 0.03272791805240335;  // std dev = 0,436, 263,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.07938529942728224;  // std dev = 0,436, 923,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.04380255285333443;  // std dev = 0,479, 204,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=73 */
%   | | | else return 0.08672146087359107;  // std dev = 0,425, 161,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.03578969600106187;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return -0.05337221970024099;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.03822582217860304;  // std dev = 0,496, 881,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.010524507510426157;  // std dev = 0,395, 202,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.03392046220177964;  // std dev = 0,478, 216,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=76 */
%   | | | else return 0.02702410079781658;  // std dev = 0,436, 263,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.06193594330357851;  // std dev = 0,436, 923,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03429068845232888;  // std dev = 0,479, 204,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=73 */
%   | | | else return 0.06806427020025967;  // std dev = 0,425, 161,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.028934481462948563;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return -0.04284545332417866;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */


Predicates from source: ['follows(account,account).', 'tweets(account,word).', 'accounttype(account,type).'] 



Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> proteinclass(A,B)', 'tweets(A,B) -> location(A,B)'] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
0;true,false;location(A, E).;false;true
0;true;location(A, D), location(B, D).;false;true
0;false,false,true;location(B, I).;false;false
0;false,false,false;location(B, J).;false;false
0;false;location(A, G), location(B, G).;false;true
0;true,false,false;location(B, F).;false;false
0;false,false;location(A, H).;true;true
1;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
1;true,false;location(A, E).;false;true
1;true;location(A, D), location(B, D).;false;true
1;false,false,true;location(B, I).;false;false
1;false,false,false;location(B, J).;false;false
1;false;location(B, G), location(A, G).;false;true
1;true,false,false;location(B, F).;false;false
1;false,false;location(A, H).;true;true
2;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
2;true,false;location(A, E), location(B, F).;false;true
2;true;location(B, D), location(A, D).;false;true
2;true,false,false,false;location(A, H).;false;false
2;false,false,true;location(B, K).;false;false
2;false;location(A, I), location(B, I).;false;true
2;true,false,false;location(B, G).;false;true
2;false,false;location(A, J).;true;false
3;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
3;true,false;location(A, E), location(B, F).;false;true
3;true;location(B, D), location(A, D).;false;true
3;true,false,false,false;location(A, H).;false;false
3;false,false,true;location(B, K).;false;false
3;false;location(B, I), location(A, I).;false;true
3;true,false,false;location(B, G).;false;true
3;false,false;location(A, J).;true;false
4;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
4;true,false;location(A, E), location(B, F).;false;true
4;true;location(A, D), location(B, D).;false;true
4;true,false,false,false;location(A, H).;false;false
4;false,false,true;location(B, K).;false;false
4;false;location(B, I), location(A, I).;false;true
4;true,false,false;location(B, G).;false;true
4;false,false;location(A, J).;true;false
5;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
5;true,false;location(B, E), location(A, F).;false;true
5;false,true,false;location(A, I).;false;false
5;false,true;location(A, H).;false;true
5;true;location(A, D), location(B, D).;false;true
5;false;location(B, H).;true;true
5;true,false,false;location(B, G).;false;false
5;false,false;location(A, J).;false;false
6;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
6;true,false;location(A, E), location(B, F).;false;true
6;false,true,false;location(A, I).;false;false
6;false,true;location(A, H).;false;true
6;true;location(B, D), location(A, D).;false;true
6;false;location(B, H).;true;true
6;true,false,false;location(B, G).;false;false
6;false,false;location(A, J).;false;false
7;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
7;false,true,false;location(A, G).;false;false
7;true,true;location(A, D).;false;true
7;true;location(B, D).;true;false
7;false,true;location(A, F).;false;true
7;false,false;location(A, H).;false;false
7;true,true,false;location(A, E).;false;false
7;false;location(B, F).;true;true
8;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
8;true,false;location(A, E), location(B, F).;false;true
8;false,true,false;location(A, I).;false;false
8;false,true;location(A, H).;false;true
8;true;location(B, D), location(A, D).;false;true
8;false;location(B, H).;true;true
8;true,false,false;location(B, G).;false;false
8;false,false;location(A, J).;false;false
9;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
9;true,false;location(A, E), location(B, F).;false;true
9;false,true,false;location(A, I).;false;false
9;false,true;location(A, H).;false;true
9;true;location(A, D), location(B, D).;false;true
9;false;location(B, H).;true;true
9;true,false,false;location(B, G).;false;false
9;false,false;location(A, J).;false;false
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( location(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(A, G), location(B, G) )
%   | then return 0.4240171985725612;  // std dev = 22,188, 2.004,000 (wgt'ed) examples reached here.  /* #neg=870 #pos=1.134 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.26893101558546034;  // std dev = 17,854, 1.317,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=541 */
%   | | | else return 0.2967992418479746;  // std dev = 8,960, 326,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=143 */
%   | | else if ( location(B, J) )
%   | | | then return 0.35814893509951246;  // std dev = 6,245, 156,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
%   | | | else return 0.31968739663797385;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( location(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, G), location(A, G) )
%   | then return 0.3642133090378555;  // std dev = 22,188, 2.004,000 (wgt'ed) examples reached here.  /* #neg=870 #pos=1.134 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.232944746042287;  // std dev = 17,854, 1.317,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=541 */
%   | | | else return 0.2567016795018954;  // std dev = 8,960, 326,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=143 */
%   | | else if ( location(B, J) )
%   | | | then return 0.30874113578563733;  // std dev = 6,245, 156,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
%   | | | else return 0.27615825449321707;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( location(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( location(A, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(A, I), location(B, I) )
%   | then return 0.2992345624042232;  // std dev = 22,188, 2.004,000 (wgt'ed) examples reached here.  /* #neg=870 #pos=1.134 */
%   | else if ( location(A, J) )
%   | | then if ( location(B, K) )
%   | | | then return 0.19630120666153222;  // std dev = 17,854, 1.317,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=541 */
%   | | | else return 0.21534355339377295;  // std dev = 8,960, 326,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=143 */
%   | | else return 0.25444229854915723;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=84 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( location(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( location(A, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, I), location(A, I) )
%   | then return 0.23682930799885502;  // std dev = 22,188, 2.004,000 (wgt'ed) examples reached here.  /* #neg=870 #pos=1.134 */
%   | else if ( location(A, J) )
%   | | then if ( location(B, K) )
%   | | | then return 0.1613836114493294;  // std dev = 17,854, 1.317,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=541 */
%   | | | else return 0.17579016391803282;  // std dev = 8,960, 326,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=143 */
%   | | else return 0.20470371315798822;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=84 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( location(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( location(A, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, I), location(A, I) )
%   | then return 0.182601571949021;  // std dev = 22,188, 2.004,000 (wgt'ed) examples reached here.  /* #neg=870 #pos=1.134 */
%   | else if ( location(A, J) )
%   | | then if ( location(B, K) )
%   | | | then return 0.12997049020128254;  // std dev = 17,854, 1.317,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=541 */
%   | | | else return 0.14034174364059646;  // std dev = 8,960, 326,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=143 */
%   | | else return 0.16063928171178557;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=84 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(B, E), location(A, F) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( location(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, H) )
%   | then if ( location(A, H) )
%   | | then return 0.13862414884783117;  // std dev = 22,188, 2.004,000 (wgt'ed) examples reached here.  /* #neg=870 #pos=1.134 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1029915019381132;  // std dev = 17,854, 1.317,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=541 */
%   | | | else return 0.12558552271282694;  // std dev = 6,245, 156,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
%   | else if ( location(A, J) )
%   | | then return 0.11016055068679112;  // std dev = 8,960, 326,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=143 */
%   | | else return 0.1036105666494119;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( location(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, H) )
%   | then if ( location(A, H) )
%   | | then return 0.1044116192246005;  // std dev = 22,188, 2.004,000 (wgt'ed) examples reached here.  /* #neg=870 #pos=1.134 */
%   | | else if ( location(A, I) )
%   | | | then return 0.08062560471956848;  // std dev = 17,854, 1.317,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=541 */
%   | | | else return 0.0957383185037556;  // std dev = 6,245, 156,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
%   | else if ( location(A, J) )
%   | | then return 0.0854184163447508;  // std dev = 8,960, 326,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=143 */
%   | | else return 0.07946542638961626;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D) )
%   | then if ( location(A, D) )
%   | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( location(A, E) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, F) )
%   | then if ( location(A, F) )
%   | | then return 0.07838271976935045;  // std dev = 22,188, 2.004,000 (wgt'ed) examples reached here.  /* #neg=870 #pos=1.134 */
%   | | else if ( location(A, G) )
%   | | | then return 0.06255736093039294;  // std dev = 17,854, 1.317,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=541 */
%   | | | else return 0.07248588983429737;  // std dev = 6,245, 156,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
%   | else if ( location(A, H) )
%   | | then return 0.06566820464660914;  // std dev = 8,960, 326,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=143 */
%   | | else return 0.06053675410716143;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( location(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, H) )
%   | then if ( location(A, H) )
%   | | then return 0.05879012689852602;  // std dev = 22,188, 2.004,000 (wgt'ed) examples reached here.  /* #neg=870 #pos=1.134 */
%   | | else if ( location(A, I) )
%   | | | then return 0.04822769306170497;  // std dev = 17,854, 1.317,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=541 */
%   | | | else return 0.054659413743761646;  // std dev = 6,245, 156,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
%   | else if ( location(A, J) )
%   | | then return 0.05018704850931954;  // std dev = 8,960, 326,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=143 */
%   | | else return 0.045912689097178556;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( location(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, H) )
%   | then if ( location(A, H) )
%   | | then return 0.04410588019666211;  // std dev = 22,188, 2.004,000 (wgt'ed) examples reached here.  /* #neg=870 #pos=1.134 */
%   | | else if ( location(A, I) )
%   | | | then return 0.03700966694131225;  // std dev = 17,854, 1.317,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=541 */
%   | | | else return 0.041120785442017804;  // std dev = 6,245, 156,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
%   | else if ( location(A, J) )
%   | | then return 0.03820005188219509;  // std dev = 8,960, 326,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=143 */
%   | | else return 0.03471997696051254;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
Results
   AUC ROC   = 0.597815
   AUC PR    = 0.587162
   CLL	      = -0.675122
   Precision = 0.583665 at threshold = 0.5
   Recall    = 0.631106
   F1        = 0.606459


Total learning time: 70.051 seconds
Total inference time: 2.365 seconds
AUC ROC: 0.597815


Structure after Parameter Learning
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E)', 'true': 'location(A, D), location(B, D)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)', 'false': 'location(A, G), location(B, G)', 'true,false,false': 'location(B, F)', 'false,false': 'location(A, H)'}, {'true,false,true': [0.0, 1, 0], 'false,false,true,true': [17.854, 776, 541], 'false,false,false,true': [6.245, 78, 78], 'true,true': [0.0, 0, 12], 'false,true': [22.188, 870, 1134], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,false,false,false': [1.797, 7, 6], 'false,false,true,false': [8.96, 183, 143]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E)', 'true': 'location(A, D), location(B, D)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)', 'false': 'location(B, G), location(A, G)', 'true,false,false': 'location(B, F)', 'false,false': 'location(A, H)'}, {'true,false,true': [0.0, 1, 0], 'false,false,true,true': [17.854, 776, 541], 'false,false,false,true': [6.245, 78, 78], 'true,true': [4.21e-08, 0, 12], 'false,true': [22.188, 870, 1134], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,false,false,false': [1.797, 7, 6], 'false,false,true,false': [8.96, 183, 143]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'true': 'location(B, D), location(A, D)', 'true,false,false,false': 'location(A, H)', 'false,false,true': 'location(B, K)', 'false': 'location(A, I), location(B, I)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 1, 0], 'false,false,true,true': [17.854, 776, 541], 'true,true': [0.0, 0, 12], 'true,false,false,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,false': [0.0, 0, 1], 'false,false,false': [6.499, 85, 84], 'false,true': [22.188, 870, 1134], 'false,false,true,false': [8.96, 183, 143]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'true': 'location(B, D), location(A, D)', 'true,false,false,false': 'location(A, H)', 'false,false,true': 'location(B, K)', 'false': 'location(B, I), location(A, I)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 1, 0], 'false,false,true,true': [17.854, 776, 541], 'true,true': [4.21e-08, 0, 12], 'true,false,false,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,false': [0.0, 0, 1], 'false,false,false': [6.499, 85, 84], 'false,true': [22.188, 870, 1134], 'false,false,true,false': [8.96, 183, 143]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'true': 'location(A, D), location(B, D)', 'true,false,false,false': 'location(A, H)', 'false,false,true': 'location(B, K)', 'false': 'location(B, I), location(A, I)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 1, 0], 'false,false,true,true': [17.854, 776, 541], 'true,true': [0.0, 0, 12], 'true,false,false,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,false': [0.0, 0, 1], 'false,false,false': [6.499, 85, 84], 'false,true': [22.188, 870, 1134], 'false,false,true,false': [8.96, 183, 143]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(B, E), location(A, F)', 'false,true,false': 'location(A, I)', 'false,true': 'location(A, H)', 'true': 'location(A, D), location(B, D)', 'false': 'location(B, H)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 1, 0], 'false,false,true': [8.96, 183, 143], 'false,true,false,false': [6.245, 78, 78], 'true,true': [2.11e-08, 0, 12], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,false,false': [1.797, 7, 6], 'false,true,false,true': [17.854, 776, 541], 'false,true,true': [22.188, 870, 1134]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'false,true,false': 'location(A, I)', 'false,true': 'location(A, H)', 'true': 'location(B, D), location(A, D)', 'false': 'location(B, H)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 1, 0], 'false,false,true': [8.96, 183, 143], 'false,true,false,false': [6.245, 78, 78], 'true,true': [0.0, 0, 12], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,false,false': [1.797, 7, 6], 'false,true,false,true': [17.854, 776, 541], 'false,true,true': [22.188, 870, 1134]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'false,true,false': 'location(A, G)', 'true,true': 'location(A, D)', 'true': 'location(B, D)', 'false,true': 'location(A, F)', 'false,false': 'location(A, H)', 'true,true,false': 'location(A, E)', 'false': 'location(B, F)'}, {'true,true,false,true': [0.0, 1, 0], 'true,false': [0.0, 0, 1], 'false,true,false,false': [6.245, 78, 78], 'false,true,false,true': [17.854, 776, 541], 'false,false,true': [8.96, 183, 143], 'true,true,true': [1.05e-08, 0, 12], 'true,true,false,false': [0.0, 0, 0], 'false,false,false': [1.797, 7, 6], 'false,true,true': [22.188, 870, 1134]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'false,true,false': 'location(A, I)', 'false,true': 'location(A, H)', 'true': 'location(B, D), location(A, D)', 'false': 'location(B, H)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 1, 0], 'false,false,true': [8.96, 183, 143], 'false,true,false,false': [6.245, 78, 78], 'true,true': [1.05e-08, 0, 12], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,false,false': [1.797, 7, 6], 'false,true,false,true': [17.854, 776, 541], 'false,true,true': [22.188, 870, 1134]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'false,true,false': 'location(A, I)', 'false,true': 'location(A, H)', 'true': 'location(A, D), location(B, D)', 'false': 'location(B, H)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 1, 0], 'false,false,true': [8.96, 183, 143], 'false,true,false,false': [6.245, 78, 78], 'true,true': [0.0, 0, 12], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,false,false': [1.797, 7, 6], 'false,true,false,true': [17.854, 776, 541], 'false,true,true': [22.188, 870, 1134]}]
{'': [0.06632653061224467, 0.24999752778763393], 'false,false,true': [0.24204016283757349, 0.24623621513794633], 'true': [-1.4802973661668753e-16, 0.25], 'true,false': [0.0, 0.0], 'false,false,false': [0.25000000000000017, 0.24852071005917165], 'false': [0.2456613718670683, 0.244199815797561], 'true,false,false': [nan, 0.0], 'false,false': [0.2429962559026024, 0.2499912468050852]}
{'': [0.04734961562269018, 0.24847904692445089], 'false,false,true': [0.24204016283758056, 0.24623621513794006], 'true': [1.4802973661668753e-16, 0.178471628116294], 'true,false': [0.0, 0.0], 'false,false,false': [0.24999999999999728, 0.24852071005917153], 'false': [0.2456613718670183, 0.244012983183966], 'true,false,false': [nan, 0.0], 'false,false': [0.24296249857451874, 0.24996159148289088]}
{'': [0.02956838998856472, 0.24700076687229117], 'false,false,true': [0.24204016283757246, 0.2462362151379386], 'true': [-2.590520390792032e-16, 0.11145008534151415], 'true,false,false,false': [nan, 0.0], 'true,false': [0.0, 0.0], 'false': [0.2456613718670412, 0.2438334228055794], 'true,false,false': [nan, 0.0], 'false,false': [0.24293040572036084, 0.24993278258565102]}
{'': [0.017873348631603298, 0.24591039865395978], 'false,false,true': [0.24204016283758778, 0.24623621513794358], 'true': [1.4802973661668753e-16, 0.06736877561142735], 'true,false,false,false': [nan, 0.0], 'true,false': [0.0, 0.0], 'false': [0.24566137186705206, 0.2436990402211523], 'true,false,false': [nan, 0.0], 'false,false': [0.2429057433831656, 0.2499269387209083]}
{'': [0.011335346179263335, 0.24526194560559564], 'false,false,true': [0.24204016283758997, 0.24623621513794178], 'true': [-5.551115123125783e-17, 0.04272553559876201], 'true,false,false,false': [nan, 0.0], 'true,false': [0.0, 0.0], 'false': [0.24566137186705003, 0.24361502940967636], 'true,false,false': [nan, 0.0], 'false,false': [0.2428898408314024, 0.24992299610335075]}
{'': [0.007683456547799172, 0.2449297585891861], 'true,false': [0.0, 0.0], 'false,true,false': [0.24204016283758537, 0.25000000000000056], 'false,true': [0.2456613718670344, 0.24293149821038412], 'true': [3.700743415417188e-17, 0.028960720834012167], 'false': [0.24477466407154483, 0.24632540326741056], 'true,false,false': [nan, 0.0], 'false,false': [0.24623621513794236, 0.24852071005917153]}
{'': [0.005521825651246133, 0.24477359127380705], 'true,false': [0.0, 0.0], 'false,true,false': [0.24204016283757654, 0.2500000000000001], 'false,true': [0.24566137186705136, 0.24290478652569242], 'true': [-2.7755575615628914e-17, 0.02081303514700473], 'false': [0.24461374817611048, 0.24632512800627118], 'true,false,false': [nan, 0.0], 'false,false': [0.24623621513794605, 0.24852071005917153]}
{'': [0.004156781784582841, 0.244703645423319], 'false,true,false': [0.24204016283757862, 0.24999999999999964], 'false,true': [0.2456613718670402, 0.24289249399679688], 'true': [0.004450045861328565, 0.0], 'true,true,false': [0.0, nan], 'true,true': [9.25185853854297e-18, 0.0], 'false': [0.24454165560816327, 0.24632479218844758], 'false,false': [0.2462362151379424, 0.2485207100591716]}
{'': [0.0032444642995048717, 0.24467280732672583], 'true,false': [0.0, 0.0], 'false,true,false': [0.2420401628375871, 0.25000000000000017], 'false,true': [0.24566137186703788, 0.24288707689972217], 'true': [9.25185853854297e-18, 0.01222913466736446], 'false': [0.24450990716718052, 0.24632449489539834], 'true,false,false': [nan, 0.0], 'false,false': [0.24623621513794136, 0.24852071005917167]}
{'': [0.0026054913130845814, 0.24465918018833022], 'true,false': [0.0, 0.0], 'false,true,false': [0.24204016283758056, 0.2499999999999998], 'false,true': [0.245661371867051, 0.24288476023513775], 'true': [0.0, 0.009820698026241878], 'false': [0.244495918087661, 0.24632426775846444], 'true,false,false': [nan, 0.0], 'false,false': [0.24623621513794244, 0.2485207100591715]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '0;true,false;location(A, E).;true;true', '0;true;location(A, D), location(B, D).;true;true', '1;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '1;true,false;location(A, E).;true;true', '1;true;location(A, D), location(B, D).;true;true', '2;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '2;true,false;location(A, E), location(B, F).;true;true', '2;true;location(B, D), location(A, D).;true;true', '3;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '3;true,false;location(A, E), location(B, F).;true;true', '3;true;location(B, D), location(A, D).;true;true', '4;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '4;true,false;location(A, E), location(B, F).;true;true', '4;true;location(A, D), location(B, D).;true;true', '5;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '5;true,false;location(B, E), location(A, F).;true;true', '5;true;location(A, D), location(B, D).;true;true', '6;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '6;true,false;location(A, E), location(B, F).;true;true', '6;true;location(B, D), location(A, D).;true;true', '7;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '7;true,true;location(A, D).;true;true', '7;true;location(B, D).;true;true', '8;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '8;true,false;location(A, E), location(B, F).;true;true', '8;true;location(B, D), location(A, D).;true;true', '9;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '9;true,false;location(A, E), location(B, F).;true;true', '9;true;location(A, D), location(B, D).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( function(B, D), function(A, D) )
%   | then return 0.508737170393625;  // std dev = 0,477, 1.700,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=1.106 */
%   | else if ( enzyme(B, E), phenotype(A, F) )
%   | | then return 0.13131966680683013;  // std dev = 0,446, 205,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=56 */
%   | | else if ( location(A, G), location(B, G) )
%   | | | then if ( proteinclass(A, H) )
%   | | | | then return 0.15444523139580787;  // std dev = 0,457, 81,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | | | else if ( phenotype(B, I), phenotype(A, I) )
%   | | | | | then return 0.5456489350995123;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | | | else if ( complex(A, J) )
%   | | | | | | then if ( enzyme(B, K) )
%   | | | | | | | then return 0.23314893509951234;  // std dev = 0,484, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | | | | | else return 0.32926004621062005;  // std dev = 0,499, 225,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=106 */
%   | | | | | | else return 0.25998379748482897;  // std dev = 0,490, 545,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=219 */
%   | | | else return 0.22196216467149227;  // std dev = 0,481, 1.028,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=374 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.6622329172201352;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( function(B, D), function(A, D) )
%   | then return 0.4349490947845709;  // std dev = 0,477, 1.700,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=1.106 */
%   | else if ( phenotype(A, E), enzyme(B, F) )
%   | | then return 0.11457052769990925;  // std dev = 0,446, 205,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=56 */
%   | | else if ( proteinclass(A, G), function(B, H) )
%   | | | then return 0.1499365998056643;  // std dev = 0,465, 236,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=75 */
%   | | | else if ( location(A, I), location(B, I) )
%   | | | | then if ( complex(A, J) )
%   | | | | | then if ( proteinclass(B, K), phenotype(B, L) )
%   | | | | | | then return 0.013169829309833847;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | | | | else if ( phenotype(A, M), phenotype(B, N) )
%   | | | | | | | then return 0.441020087049477;  // std dev = 0,479, 33,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | | | | | else return 0.27543502619591437;  // std dev = 0,498, 206,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=95 */
%   | | | | | else return 0.22787337442058003;  // std dev = 0,491, 553,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=224 */
%   | | | | else return 0.19891499332736606;  // std dev = 0,483, 873,000 (wgt'ed) examples reached here.  /* #neg=550 #pos=323 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.5154428111118985;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( function(B, D), function(A, D) )
%   | then return 0.3524781482798325;  // std dev = 0,477, 1.700,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=1.106 */
%   | else if ( phenotype(A, E), function(B, F) )
%   | | then return 0.14295108576816318;  // std dev = 0,472, 982,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=339 */
%   | | else if ( phenotype(B, G), complex(B, H) )
%   | | | then return 0.09049471293719032;  // std dev = 0,457, 121,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | | else if ( location(B, I) )
%   | | | | then return 0.20203077124823937;  // std dev = 0,491, 868,000 (wgt'ed) examples reached here.  /* #neg=513 #pos=355 */
%   | | | | else if ( enzyme(A, J) )
%   | | | | | then return 0.133475955546337;  // std dev = 0,472, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | | | else if ( function(B, K), proteinclass(A, L) )
%   | | | | | | then return 0.006605293856137473;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | | else if ( enzyme(B, M) )
%   | | | | | | | then return 0.4655167545510434;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | | else return 0.27784168452303093;  // std dev = 0,500, 119,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=57 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.3875647182006322;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( function(B, D), function(A, D) )
%   | then return 0.2739485192867216;  // std dev = 0,477, 1.700,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=1.106 */
%   | else if ( phenotype(A, E), function(B, F) )
%   | | then return 0.11899014172532851;  // std dev = 0,472, 982,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=339 */
%   | | else if ( complex(B, G), phenotype(B, H) )
%   | | | then return 0.07525168414399537;  // std dev = 0,457, 121,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | | else if ( enzyme(B, I), location(B, J) )
%   | | | | then return 0.139529301856804;  // std dev = 0,485, 218,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=83 */
%   | | | | else if ( proteinclass(A, K), location(B, L) )
%   | | | | | then return 0.12930930561715173;  // std dev = 0,476, 57,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | | | else if ( proteinclass(B, M), location(A, N) )
%   | | | | | | then if ( complex(B, P) )
%   | | | | | | | then return 0.5039509742248132;  // std dev = 0,441, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | | | | | else return 0.2378880892000108;  // std dev = 0,499, 62,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=30 */
%   | | | | | | else return 0.17786207502783782;  // std dev = 0,493, 668,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=282 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.29398103437200096;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( phenotype(B, D), phenotype(A, D) )
%   | then return 0.40771101477373894;  // std dev = 0,364, 291,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=241 */
%   | else if ( location(A, E), location(B, E) )
%   | | then return 0.18417978984023833;  // std dev = 0,480, 1.824,000 (wgt'ed) examples reached here.  /* #neg=847 #pos=977 */
%   | | else if ( enzyme(B, F) )
%   | | | then return -0.009850867070304218;  // std dev = 0,456, 319,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=94 */
%   | | | else if ( location(B, G), phenotype(A, H) )
%   | | | | then return 0.05804478611267286;  // std dev = 0,479, 558,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=212 */
%   | | | | else if ( complex(A, I), complex(B, J) )
%   | | | | | then return -0.12807272806943423;  // std dev = 0,333, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | | | | then return 0.3023504823492148;  // std dev = 0,472, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | | | | else if ( proteinclass(B, M) )
%   | | | | | | | then return 0.07531380544293131;  // std dev = 0,489, 83,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=36 */
%   | | | | | | | else return 0.14603638450839312;  // std dev = 0,488, 711,000 (wgt'ed) examples reached here.  /* #neg=383 #pos=328 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.2288562690978686;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( phenotype(A, D), phenotype(B, D) )
%   | then return 0.30814556095495566;  // std dev = 0,363, 291,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=241 */
%   | else if ( location(A, E), location(B, E) )
%   | | then return 0.1427241461456533;  // std dev = 0,480, 1.824,000 (wgt'ed) examples reached here.  /* #neg=847 #pos=977 */
%   | | else if ( enzyme(B, F) )
%   | | | then return -0.007861986639647945;  // std dev = 0,456, 319,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=94 */
%   | | | else if ( function(B, G), phenotype(A, H) )
%   | | | | then return 0.051078213014199916;  // std dev = 0,478, 697,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=268 */
%   | | | | else if ( location(B, I), location(A, J) )
%   | | | | | then if ( phenotype(B, K), complex(A, L) )
%   | | | | | | then return -0.1502099575274131;  // std dev = 0,335, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | | | | else if ( complex(B, M), proteinclass(A, N) )
%   | | | | | | | then return -0.10859461402596216;  // std dev = 0,354, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | | | | | else return 0.1070679183958403;  // std dev = 0,494, 369,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=169 */
%   | | | | | else return 0.1513826433177868;  // std dev = 0,489, 289,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=148 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.18306311556471894;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( location(B, D), location(A, D) )
%   | then return 0.12426182426422405;  // std dev = 0,470, 2.004,000 (wgt'ed) examples reached here.  /* #neg=870 #pos=1.134 */
%   | else if ( enzyme(B, E) )
%   | | then return -4.781416845232874E-4;  // std dev = 0,457, 329,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=101 */
%   | | else if ( phenotype(B, F) )
%   | | | then return 0.1046746321432293;  // std dev = 0,476, 536,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=284 */
%   | | | else if ( location(B, G), phenotype(A, H) )
%   | | | | then return 0.008756685194516783;  // std dev = 0,470, 358,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=122 */
%   | | | | else if ( complex(B, I) )
%   | | | | | then return -0.058080178173260395;  // std dev = 0,463, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | | | else if ( proteinclass(A, J), enzyme(A, K) )
%   | | | | | | then return 0.2212131923577416;  // std dev = 0,467, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | | | | | | else if ( location(B, L), proteinclass(A, M) )
%   | | | | | | | then return 0.2288529224353139;  // std dev = 0,485, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | | | | | else return 0.07421658634351665;  // std dev = 0,485, 509,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=221 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.14991371797684416;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( phenotype(B, D), phenotype(A, D) )
%   | then return 0.20721682426942226;  // std dev = 0,363, 291,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=241 */
%   | else if ( location(A, E), location(B, E) )
%   | | then if ( enzyme(B, F), complex(A, G) )
%   | | | then return -0.04230873207659662;  // std dev = 0,473, 121,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
%   | | | else return 0.088762640320317;  // std dev = 0,478, 1.703,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=932 */
%   | | else if ( phenotype(A, H), function(B, I) )
%   | | | then return 0.015947699074247312;  // std dev = 0,469, 868,000 (wgt'ed) examples reached here.  /* #neg=555 #pos=313 */
%   | | | else if ( location(B, J), location(A, K) )
%   | | | | then if ( location(L, K), phenotype(L, M) )
%   | | | | | then return 0.03585922249378101;  // std dev = 0,484, 479,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=194 */
%   | | | | | else if ( complex(B, N), phenotype(B, P) )
%   | | | | | | then return -0.026524758325060252;  // std dev = 0,843, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | | else return 0.25348907892629546;  // std dev = 0,497, 27,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | | else return 0.08683686127461185;  // std dev = 0,486, 323,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=160 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.12515667139271322;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( function(B, D), function(A, D) )
%   | then return 0.08252134226248783;  // std dev = 0,462, 1.700,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=1.106 */
%   | else if ( complex(B, E), location(A, F) )
%   | | then return -0.00640209419316861;  // std dev = 0,463, 362,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=120 */
%   | | else if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.11839661056165912;  // std dev = 0,480, 46,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | | else if ( complex(A, I), enzyme(B, J) )
%   | | | | then return -0.04618705248348604;  // std dev = 0,413, 119,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=27 */
%   | | | | else if ( phenotype(B, K), enzyme(B, L) )
%   | | | | | then if ( location(A, M) )
%   | | | | | | then if ( location(B, M), proteinclass(B, N) )
%   | | | | | | | then return -0.0527074703215863;  // std dev = 0,477, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | | | | | else return 0.23357810596110223;  // std dev = 0,497, 51,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=29 */
%   | | | | | | else return -0.13418686835165672;  // std dev = 0,325, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | | | else return 0.0396400957873633;  // std dev = 0,483, 1.521,000 (wgt'ed) examples reached here.  /* #neg=924 #pos=597 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.10613658840585892;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( phenotype(A, D), phenotype(B, D) )
%   | then return 0.1452199678650673;  // std dev = 0,362, 291,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=241 */
%   | else if ( phenotype(A, E), enzyme(B, F) )
%   | | then return -0.037243676822497324;  // std dev = 0,459, 341,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=114 */
%   | | else if ( function(B, G), function(A, G) )
%   | | | then return 0.060959944782207336;  // std dev = 0,475, 1.303,000 (wgt'ed) examples reached here.  /* #neg=479 #pos=824 */
%   | | | else if ( location(B, H), location(A, H) )
%   | | | | then if ( proteinclass(A, I), complex(B, J) )
%   | | | | | then return -0.22704364826623008;  // std dev = 0,306, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | | | else if ( complex(A, K) )
%   | | | | | | then if ( phenotype(B, L), proteinclass(B, M) )
%   | | | | | | | then return -0.17968681051824195;  // std dev = 0,371, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | | | | | else return 0.056702466516056226;  // std dev = 0,496, 252,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=118 */
%   | | | | | | else return -0.0026938271461389622;  // std dev = 0,486, 590,000 (wgt'ed) examples reached here.  /* #neg=357 #pos=233 */
%   | | | | else return 0.04139410961925579;  // std dev = 0,475, 1.017,000 (wgt'ed) examples reached here.  /* #neg=648 #pos=369 */
Results
   AUC ROC   = 0.672705
   AUC PR    = 0.674872
   CLL	      = -0.646391
   Precision = 0.632819 at threshold = 0.5
   Recall    = 0.640485
   F1        = 0.636628


Total learning time: 76.827 seconds
Total inference time: 2.241 seconds
AUC ROC: 0.672705


Refined model AUC ROC: 0.672705


Dataset: twitter->yeast, Fold: 1, Type: transfer, Time: 00:09:30
{'Inference time': 2.241, 'CLL': -0.646391, 'Parameter Learning results': {'Inference time': 2.365, 'CLL': -0.675122, 'F1': 0.606459, 'AUC ROC': 0.597815, 'Recall': 0.631106, 'AUC PR': 0.587162, 'Precision': [0.583665, 0.5], 'Learning time': 70.051}, 'F1': 0.636628, 'AUC ROC': 0.672705, 'Mapping results': {'Finding best mapping': 0.02067875862121582, 'Generating mappings time': 0.07077312469482422, 'Total time': 5.397228240966797, 'Possible mappings': 98, 'Knowledge compiling time': 0.10725688934326172, 'Generating paths time': 5.198511123657227}, 'Recall': 0.640485, 'AUC PR': 0.674872, 'Precision': [0.632819, 0.5], 'Learning time': 146.878}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then return 0.511007744901141;  // std dev = 0,476, 1.714,000 (wgt'ed) examples reached here.  /* #neg=595 #pos=1.119 */
%   else if ( enzyme(B, D), phenotype(A, E) )
%   | then return 0.13131966680683013;  // std dev = 0,446, 205,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=56 */
%   | else if ( proteinclass(A, F), function(B, G) )
%   | | then return 0.1759455452690052;  // std dev = 0,466, 236,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=75 */
%   | | else if ( location(A, H), location(B, H) )
%   | | | then if ( complex(A, I) )
%   | | | | then if ( phenotype(A, J), complex(B, K) )
%   | | | | | then return 0.21109011157010057;  // std dev = 0,478, 34,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | | | else if ( phenotype(B, L) )
%   | | | | | | then return 0.42571650266707917;  // std dev = 0,495, 37,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   | | | | | | else if ( proteinclass(B, M) )
%   | | | | | | | then return 0.26723984419042146;  // std dev = 0,492, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | | | | | else return 0.34532842227900024;  // std dev = 0,500, 156,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=76 */
%   | | | | else return 0.26321222623874835;  // std dev = 0,491, 553,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=224 */
%   | | | else return 0.22813748034578513;  // std dev = 0,483, 873,000 (wgt'ed) examples reached here.  /* #neg=550 #pos=323 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then return 0.4368353788570761;  // std dev = 0,476, 1.714,000 (wgt'ed) examples reached here.  /* #neg=595 #pos=1.119 */
%   else if ( phenotype(A, D), enzyme(B, E) )
%   | then return 0.11457052769990925;  // std dev = 0,446, 205,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=56 */
%   | else if ( location(A, F), complex(B, G) )
%   | | then return 0.15946637498770688;  // std dev = 0,471, 318,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=106 */
%   | | else if ( phenotype(A, H), function(B, I) )
%   | | | then return 0.19532904814320814;  // std dev = 0,482, 645,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=239 */
%   | | | else if ( location(B, J), enzyme(B, K) )
%   | | | | then return 0.19326740715856172;  // std dev = 0,482, 201,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=74 */
%   | | | | else if ( function(B, L) )
%   | | | | | then if ( location(A, M), complex(A, N) )
%   | | | | | | then return 0.293010724855021;  // std dev = 0,499, 76,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=36 */
%   | | | | | | else return 0.24716459412729097;  // std dev = 0,494, 630,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=265 */
%   | | | | | else if ( proteinclass(A, P), phenotype(A, Q) )
%   | | | | | | then return 0.8280489630914584;  // std dev = 2,98e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | else return 0.2447156297581248;  // std dev = 0,493, 36,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then return 0.3538782104686037;  // std dev = 0,476, 1.714,000 (wgt'ed) examples reached here.  /* #neg=595 #pos=1.119 */
%   else if ( function(B, D), phenotype(A, E) )
%   | then return 0.14778799932130088;  // std dev = 0,474, 982,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=339 */
%   | else if ( phenotype(B, F), complex(B, G) )
%   | | then return 0.09690595735248192;  // std dev = 0,456, 121,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | else if ( phenotype(B, H), enzyme(B, I) )
%   | | | then if ( location(A, J) )
%   | | | | then if ( enzyme(A, K) )
%   | | | | | then return 0.7744430563154069;  // std dev = 0,023, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( enzyme(L, I), complex(L, M) )
%   | | | | | | then return 0.46163393703126626;  // std dev = 0,819, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else if ( complex(A, N) )
%   | | | | | | | then return 0.12088699968611945;  // std dev = 0,831, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | | else return 0.26928604125458033;  // std dev = 0,499, 38,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | | else return -0.0012347256183566136;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.20052682562541052;  // std dev = 0,491, 961,000 (wgt'ed) examples reached here.  /* #neg=565 #pos=396 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then return 0.4723770636872474;  // std dev = 0,364, 294,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=244 */
%   else if ( location(B, D), location(A, D) )
%   | then return 0.23257877348988656;  // std dev = 0,482, 1.833,000 (wgt'ed) examples reached here.  /* #neg=847 #pos=986 */
%   | else if ( enzyme(B, E) )
%   | | then return 0.027243949499364463;  // std dev = 0,455, 321,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=95 */
%   | | else if ( phenotype(A, F), function(B, G) )
%   | | | then return 0.10455876162219553;  // std dev = 0,478, 697,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=268 */
%   | | | else if ( phenotype(A, H), proteinclass(A, I) )
%   | | | | then return 0.6325766633358979;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( complex(A, J), complex(B, K) )
%   | | | | | then return -0.09105501472761707;  // std dev = 0,342, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | | | else if ( location(A, L), location(B, M) )
%   | | | | | | then if ( phenotype(B, N), complex(A, P) )
%   | | | | | | | then return -0.12730380747982278;  // std dev = 0,359, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | | | | | else return 0.16963273062510303;  // std dev = 0,493, 379,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=172 */
%   | | | | | | else return 0.2127015679810265;  // std dev = 0,491, 283,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=142 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then return 0.3598979210919269;  // std dev = 0,363, 294,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=244 */
%   else if ( location(A, D), location(B, D) )
%   | then if ( enzyme(B, E) )
%   | | then if ( proteinclass(A, F), proteinclass(B, G) )
%   | | | then return 0.4217067919600768;  // std dev = 0,339, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else if ( enzyme(A, E) )
%   | | | | then return 0.5660369317619117;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( phenotype(B, H) )
%   | | | | | then if ( complex(A, I), phenotype(A, J) )
%   | | | | | | then return 0.017443872603239628;  // std dev = 0,437, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | | | | else if ( enzyme(K, E), complex(K, L) )
%   | | | | | | | then return 0.3770166235961906;  // std dev = 0,402, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | | | | | else return 0.18158251430706004;  // std dev = 0,508, 65,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=34 */
%   | | | | | else return 0.05077711555618625;  // std dev = 0,484, 209,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=78 */
%   | | else return 0.19759800551780057;  // std dev = 0,479, 1.472,000 (wgt'ed) examples reached here.  /* #neg=651 #pos=821 */
%   | else return 0.09678208703469646;  // std dev = 0,481, 1.703,000 (wgt'ed) examples reached here.  /* #neg=1.018 #pos=685 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then return 0.17362872231603244;  // std dev = 0,464, 1.714,000 (wgt'ed) examples reached here.  /* #neg=595 #pos=1.119 */
%   else if ( complex(B, D), proteinclass(A, E) )
%   | then return -0.026962583342328046;  // std dev = 0,432, 52,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | else if ( phenotype(A, F), function(B, G) )
%   | | then return 0.06880408033982487;  // std dev = 0,470, 946,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=330 */
%   | | else if ( phenotype(B, H), complex(B, I) )
%   | | | then return 0.01653999072757366;  // std dev = 0,455, 113,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
%   | | | else if ( proteinclass(B, J), complex(B, K) )
%   | | | | then if ( enzyme(B, L) )
%   | | | | | then return 0.127419264029143;  // std dev = 0,482, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | | | else return 0.4439909394849362;  // std dev = 0,443, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | | else if ( location(B, M) )
%   | | | | | then return 0.09412648396288466;  // std dev = 0,490, 842,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=344 */
%   | | | | | else if ( location(A, N) )
%   | | | | | | then return 0.13685038368576674;  // std dev = 0,490, 135,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=61 */
%   | | | | | | else return 0.19315953704594035;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then return 0.2336577799606698;  // std dev = 0,361, 294,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=244 */
%   else if ( phenotype(A, D), enzyme(B, E) )
%   | then return -0.010311776167495516;  // std dev = 0,460, 341,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=114 */
%   | else if ( location(A, F), location(B, F) )
%   | | then return 0.11891218799041163;  // std dev = 0,476, 1.663,000 (wgt'ed) examples reached here.  /* #neg=746 #pos=917 */
%   | | else if ( location(A, G), location(B, H) )
%   | | | then if ( phenotype(B, I) )
%   | | | | then if ( location(J, G), location(J, H) )
%   | | | | | then if ( complex(J, K), phenotype(J, I) )
%   | | | | | | then return 0.15468073001771254;  // std dev = 0,479, 184,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=99 */
%   | | | | | | else if ( enzyme(A, L), proteinclass(J, M) )
%   | | | | | | | then return -0.15281606471681658;  // std dev = 0,435, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | | | | | else return 0.04803811366786541;  // std dev = 0,493, 156,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=62 */
%   | | | | | else return -0.10348566356493048;  // std dev = 0,432, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | | else return 0.024834520303128164;  // std dev = 0,479, 669,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=244 */
%   | | | else return 0.09985401896368701;  // std dev = 0,482, 480,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=225 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then return 0.18006127318664178;  // std dev = 0,361, 294,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=244 */
%   else if ( complex(B, D), complex(A, D) )
%   | then return 0.41394460213246487;  // std dev = 0,185, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( enzyme(B, E), phenotype(A, F) )
%   | | then return -0.009667901104831279;  // std dev = 0,460, 340,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=113 */
%   | | else if ( location(B, G), location(A, G) )
%   | | | then return 0.08538983209984881;  // std dev = 0,478, 1.636,000 (wgt'ed) examples reached here.  /* #neg=745 #pos=891 */
%   | | | else if ( phenotype(A, H), location(B, I) )
%   | | | | then return 0.02000385734155909;  // std dev = 0,478, 558,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=212 */
%   | | | | else if ( complex(A, J), enzyme(A, K) )
%   | | | | | then return 0.3502784082825275;  // std dev = 0,430, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | | | else if ( complex(A, L), function(B, M) )
%   | | | | | | then return 0.011366219193763741;  // std dev = 0,458, 156,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=54 */
%   | | | | | | else if ( proteinclass(B, N) )
%   | | | | | | | then return -0.001059510556185313;  // std dev = 0,481, 130,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=51 */
%   | | | | | | | else return 0.08285657645689885;  // std dev = 0,488, 675,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=313 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then return 0.08412402322313574;  // std dev = 0,458, 1.714,000 (wgt'ed) examples reached here.  /* #neg=595 #pos=1.119 */
%   else if ( complex(B, D), location(A, E) )
%   | then return 0.0027499715650962254;  // std dev = 0,465, 362,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=120 */
%   | else if ( proteinclass(B, F), enzyme(B, G) )
%   | | then return -0.04193492185343218;  // std dev = 0,422, 79,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | else if ( proteinclass(B, H), location(B, I) )
%   | | | then if ( proteinclass(A, J), phenotype(B, K) )
%   | | | | then return -0.20584366408008567;  // std dev = 0,370, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | | else if ( phenotype(B, L), phenotype(A, M) )
%   | | | | | then return 0.2922498004984792;  // std dev = 0,420, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | | | else if ( proteinclass(A, N), phenotype(A, P) )
%   | | | | | | then return 0.2907984120245367;  // std dev = 1,037, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | | else if ( phenotype(A, Q), complex(A, R) )
%   | | | | | | | then return 0.12077664338376157;  // std dev = 0,500, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | | | | | else return 0.060992917592213;  // std dev = 0,492, 69,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=30 */
%   | | | else return 0.037594897107726025;  // std dev = 0,481, 1.559,000 (wgt'ed) examples reached here.  /* #neg=955 #pos=604 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then return 0.12545493797852336;  // std dev = 0,360, 294,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=244 */
%   else if ( enzyme(B, D) )
%   | then return -9.95759282674282E-4;  // std dev = 0,469, 682,000 (wgt'ed) examples reached here.  /* #neg=422 #pos=260 */
%   | else if ( function(B, E), function(A, E) )
%   | | then return 0.0713267137628879;  // std dev = 0,471, 1.207,000 (wgt'ed) examples reached here.  /* #neg=431 #pos=776 */
%   | | else if ( location(A, F), location(B, F) )
%   | | | then if ( phenotype(B, G), enzyme(A, H) )
%   | | | | then return -0.22107025968661362;  // std dev = 0,350, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | | else if ( complex(A, I) )
%   | | | | | then if ( complex(B, J), phenotype(A, K) )
%   | | | | | | then return -0.03241878933276638;  // std dev = 0,466, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | | | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | | | | | then return 0.42378553057429896;  // std dev = 0,886, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | | else return 0.05347961163390528;  // std dev = 0,496, 209,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=98 */
%   | | | | | else return -0.006945339543677291;  // std dev = 0,486, 477,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=188 */
%   | | | else return 0.03632006332309716;  // std dev = 0,476, 906,000 (wgt'ed) examples reached here.  /* #neg=575 #pos=331 */
Results
   AUC ROC   = 0.681402
   AUC PR    = 0.679931
   CLL	      = -0.641168
   Precision = 0.626758 at threshold = 0.5
   Recall    = 0.644392
   F1        = 0.635453


Total learning time: 80.512 seconds
Total inference time: 2.698 seconds
AUC ROC: 0.681402


Dataset: twitter->yeast, Fold: 1, Type: scratch, Time: 00:10:54
{'Inference time': 2.698, 'CLL': -0.641168, 'F1': 0.635453, 'AUC ROC': 0.681402, 'Recall': 0.644392, 'AUC PR': 0.679931, 'Precision': [0.626758, 0.5], 'Learning time': 80.512}


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> proteinclass(A,B)', 'tweets(A,B) -> location(A,B)'] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
0;true,false;location(A, E).;false;true
0;true;location(A, D), location(B, D).;false;true
0;false,false,true;location(B, I).;false;false
0;false,false,false;location(B, J).;false;false
0;false;location(A, G), location(B, G).;false;true
0;true,false,false;location(B, F).;false;false
0;false,false;location(A, H).;true;true
1;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
1;true,false;location(A, E).;false;true
1;true;location(A, D), location(B, D).;false;true
1;false,false,true;location(B, I).;false;false
1;false,false,false;location(B, J).;false;false
1;false;location(B, G), location(A, G).;false;true
1;true,false,false;location(B, F).;false;false
1;false,false;location(A, H).;true;true
2;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
2;true,false;location(A, E), location(B, F).;false;true
2;true;location(B, D), location(A, D).;false;true
2;true,false,false,false;location(A, H).;false;false
2;false,false,true;location(B, K).;false;false
2;false;location(A, I), location(B, I).;false;true
2;true,false,false;location(B, G).;false;true
2;false,false;location(A, J).;true;false
3;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
3;true,false;location(A, E), location(B, F).;false;true
3;true;location(B, D), location(A, D).;false;true
3;true,false,false,false;location(A, H).;false;false
3;false,false,true;location(B, K).;false;false
3;false;location(B, I), location(A, I).;false;true
3;true,false,false;location(B, G).;false;true
3;false,false;location(A, J).;true;false
4;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
4;true,false;location(A, E), location(B, F).;false;true
4;true;location(A, D), location(B, D).;false;true
4;true,false,false,false;location(A, H).;false;false
4;false,false,true;location(B, K).;false;false
4;false;location(B, I), location(A, I).;false;true
4;true,false,false;location(B, G).;false;true
4;false,false;location(A, J).;true;false
5;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
5;true,false;location(B, E), location(A, F).;false;true
5;false,true,false;location(A, I).;false;false
5;false,true;location(A, H).;false;true
5;true;location(A, D), location(B, D).;false;true
5;false;location(B, H).;true;true
5;true,false,false;location(B, G).;false;false
5;false,false;location(A, J).;false;false
6;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
6;true,false;location(A, E), location(B, F).;false;true
6;false,true,false;location(A, I).;false;false
6;false,true;location(A, H).;false;true
6;true;location(B, D), location(A, D).;false;true
6;false;location(B, H).;true;true
6;true,false,false;location(B, G).;false;false
6;false,false;location(A, J).;false;false
7;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
7;false,true,false;location(A, G).;false;false
7;true,true;location(A, D).;false;true
7;true;location(B, D).;true;false
7;false,true;location(A, F).;false;true
7;false,false;location(A, H).;false;false
7;true,true,false;location(A, E).;false;false
7;false;location(B, F).;true;true
8;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
8;true,false;location(A, E), location(B, F).;false;true
8;false,true,false;location(A, I).;false;false
8;false,true;location(A, H).;false;true
8;true;location(B, D), location(A, D).;false;true
8;false;location(B, H).;true;true
8;true,false,false;location(B, G).;false;false
8;false,false;location(A, J).;false;false
9;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
9;true,false;location(A, E), location(B, F).;false;true
9;false,true,false;location(A, I).;false;false
9;false,true;location(A, H).;false;true
9;true;location(A, D), location(B, D).;false;true
9;false;location(B, H).;true;true
9;true,false,false;location(B, G).;false;false
9;false,false;location(A, J).;false;false
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.8126943896449667;  // std dev = 0,977, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( location(A, E) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(A, F), location(B, F) )
%   | then return 0.42208336132901564;  // std dev = 17,321, 1.220,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=688 */
%   | else if ( location(A, G) )
%   | | then if ( location(B, H) )
%   | | | then return 0.28744186439243696;  // std dev = 13,930, 792,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=340 */
%   | | | else return 0.24626082321139667;  // std dev = 8,241, 286,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=111 */
%   | | else if ( location(B, I) )
%   | | | then return 0.39148226843284567;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.683100856113155;  // std dev = 0,977, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( location(A, E) )
%   | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, F), location(A, F) )
%   | then return 0.362590621089442;  // std dev = 17,321, 1.220,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=688 */
%   | else if ( location(A, G) )
%   | | then if ( location(B, H) )
%   | | | then return 0.2487329423115389;  // std dev = 13,930, 792,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=340 */
%   | | | else return 0.2135650172929892;  // std dev = 8,241, 286,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=111 */
%   | | else if ( location(B, I) )
%   | | | then return 0.3368653790512674;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.5300155353258624;  // std dev = 0,977, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return -0.24358763124141355;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( location(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( location(A, H) )
%   | | | | then return 0.7564123687585864;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(A, I), location(B, I) )
%   | then return 0.297995591250554;  // std dev = 17,321, 1.220,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=688 */
%   | else if ( location(A, J) )
%   | | then if ( location(B, K) )
%   | | | then return 0.20897681992417905;  // std dev = 13,930, 792,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=340 */
%   | | | else return 0.18063046855865242;  // std dev = 8,241, 286,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=111 */
%   | | else return 0.25383430814378155;  // std dev = 1,969, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.3983314217012668;  // std dev = 0,977, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return -0.20153990976573688;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( location(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( location(A, H) )
%   | | | | then return 0.5930763483699759;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, I), location(A, I) )
%   | then return 0.23595331432212896;  // std dev = 17,321, 1.220,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=688 */
%   | else if ( location(A, J) )
%   | | then if ( location(B, K) )
%   | | | then return 0.1709977618454577;  // std dev = 13,930, 792,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=340 */
%   | | | else return 0.14936167933261268;  // std dev = 8,241, 286,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=111 */
%   | | else return 0.2041483952776509;  // std dev = 1,965, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.30338541379378164;  // std dev = 0,977, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return -0.17104524408847993;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( location(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( location(A, H) )
%   | | | | then return 0.4461153779689342;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, I), location(A, I) )
%   | then return 0.1820074331738911;  // std dev = 17,321, 1.220,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=688 */
%   | else if ( location(A, J) )
%   | | then if ( location(B, K) )
%   | | | then return 0.1369124557471146;  // std dev = 13,930, 792,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=340 */
%   | | | else return 0.1211676558040049;  // std dev = 8,241, 286,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=111 */
%   | | else return 0.16031110226537193;  // std dev = 1,961, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.23797203113877655;  // std dev = 0,977, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( location(B, E), location(A, F) )
%   | | then return -0.1481376915738407;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( location(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.34017955451523596;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( location(B, H) )
%   | then if ( location(A, H) )
%   | | then return 0.13822284856790668;  // std dev = 17,321, 1.220,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=688 */
%   | | else if ( location(A, I) )
%   | | | then return 0.10780410224603737;  // std dev = 13,930, 792,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=340 */
%   | | | else return 0.1447707945222244;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( location(A, J) )
%   | | then return 0.09679861644449744;  // std dev = 8,241, 286,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=111 */
%   | | else return -0.1901552224519951;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.19221486175035574;  // std dev = 0,977, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return -0.13040071218764215;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( location(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.26841606088731507;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( location(B, H) )
%   | then if ( location(A, H) )
%   | | then return 0.10413417815293581;  // std dev = 17,321, 1.220,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=688 */
%   | | else if ( location(A, I) )
%   | | | then return 0.08385061529401261;  // std dev = 13,930, 792,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=340 */
%   | | | else return 0.10987384344702242;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( location(A, J) )
%   | | then return 0.07641878278305417;  // std dev = 8,241, 286,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=111 */
%   | | else return -0.16257978600800665;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D) )
%   | then if ( location(A, D) )
%   | | then return 0.15915746001677739;  // std dev = 0,977, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( location(A, E) )
%   | | | then return -0.11631268922299792;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.21907075656220354;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( location(B, F) )
%   | then if ( location(A, F) )
%   | | then return 0.07818372975529836;  // std dev = 17,321, 1.220,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=688 */
%   | | else if ( location(A, G) )
%   | | | then return 0.06465344740598244;  // std dev = 13,930, 792,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=340 */
%   | | | else return 0.08284898141514235;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( location(A, H) )
%   | | then return 0.05979269578399668;  // std dev = 8,241, 286,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=111 */
%   | | else return -0.14163976395170533;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.13446805427235065;  // std dev = 0,977, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return -0.10488067038612629;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( location(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.18389763277512405;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( location(B, H) )
%   | then if ( location(A, H) )
%   | | then return 0.05864185450170098;  // std dev = 17,321, 1.220,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=688 */
%   | | else if ( location(A, I) )
%   | | | then return 0.04954776014323685;  // std dev = 13,930, 792,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=340 */
%   | | | else return 0.062267203435573314;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( location(A, J) )
%   | | then return 0.046474118816344376;  // std dev = 8,241, 286,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=111 */
%   | | else return -0.12527736261612635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.11547337831910905;  // std dev = 0,977, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return -0.09543450794478456;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( location(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15788386904838436;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( location(B, H) )
%   | then if ( location(A, H) )
%   | | then return 0.04399177846527187;  // std dev = 17,321, 1.220,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=688 */
%   | | else if ( location(A, I) )
%   | | | then return 0.03780980371460471;  // std dev = 13,930, 792,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=340 */
%   | | | else return 0.04672955752682833;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( location(A, J) )
%   | | then return 0.035945501775585864;  // std dev = 8,241, 286,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=111 */
%   | | else return -0.112181022143483;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
Results
   AUC ROC   = 0.589109
   AUC PR    = 0.57663
   CLL	      = -0.681194
   Precision = 0.579379 at threshold = 0.5
   Recall    = 0.620763
   F1        = 0.599357


Total learning time: 40.226 seconds
Total inference time: 2.404 seconds
AUC ROC: 0.589109


Structure after Parameter Learning
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E)', 'true': 'location(A, D), location(B, D)', 'false,false,true': 'location(B, H)', 'false,false,false': 'location(B, I)', 'false': 'location(A, F), location(B, F)', 'false,false': 'location(A, G)'}, {'true,false,true': [1.0, 2, 2], 'false,false,true,true': [13.93, 452, 340], 'false,false,false,true': [1.932, 7, 8], 'true,true': [0.977, 1, 21], 'false,true': [17.321, 532, 688], 'false,false,false,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [8.241, 175, 111]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E)', 'true': 'location(A, D), location(B, D)', 'false,false,true': 'location(B, H)', 'false,false,false': 'location(B, I)', 'false': 'location(B, F), location(A, F)', 'false,false': 'location(A, G)'}, {'true,false,true': [1.0, 2, 2], 'false,false,true,true': [13.93, 452, 340], 'false,false,false,true': [1.932, 7, 8], 'true,true': [0.977, 1, 21], 'false,true': [17.321, 532, 688], 'false,false,false,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [8.241, 175, 111]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'true': 'location(B, D), location(A, D)', 'true,false,false,false': 'location(A, H)', 'false,false,true': 'location(B, K)', 'false': 'location(A, I), location(B, I)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 2, 0], 'false,false,true,true': [13.93, 452, 340], 'true,true': [0.977, 1, 21], 'true,false,false,false,true': [0.0, 0, 2], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,false': [0.0, 0, 0], 'false,false,false': [1.969, 8, 8], 'false,true': [17.321, 532, 688], 'false,false,true,false': [8.241, 175, 111]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'true': 'location(B, D), location(A, D)', 'true,false,false,false': 'location(A, H)', 'false,false,true': 'location(B, K)', 'false': 'location(B, I), location(A, I)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 2, 0], 'false,false,true,true': [13.93, 452, 340], 'true,true': [0.977, 1, 21], 'true,false,false,false,true': [0.0, 0, 2], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,false': [0.0, 0, 0], 'false,false,false': [1.965, 8, 8], 'false,true': [17.321, 532, 688], 'false,false,true,false': [8.241, 175, 111]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'true': 'location(A, D), location(B, D)', 'true,false,false,false': 'location(A, H)', 'false,false,true': 'location(B, K)', 'false': 'location(B, I), location(A, I)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 2, 0], 'false,false,true,true': [13.93, 452, 340], 'true,true': [0.977, 1, 21], 'true,false,false,false,true': [0.0, 0, 2], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,false': [0.0, 0, 0], 'false,false,false': [1.961, 8, 8], 'false,true': [17.321, 532, 688], 'false,false,true,false': [8.241, 175, 111]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(B, E), location(A, F)', 'false,true,false': 'location(A, I)', 'false,true': 'location(A, H)', 'true': 'location(A, D), location(B, D)', 'false': 'location(B, H)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 2, 0], 'false,false,true': [8.241, 175, 111], 'false,true,false,false': [1.932, 7, 8], 'true,true': [0.977, 1, 21], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 2], 'false,false,false': [0.0, 1, 0], 'false,true,false,true': [13.93, 452, 340], 'false,true,true': [17.321, 532, 688]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'false,true,false': 'location(A, I)', 'false,true': 'location(A, H)', 'true': 'location(B, D), location(A, D)', 'false': 'location(B, H)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 2, 0], 'false,false,true': [8.241, 175, 111], 'false,true,false,false': [1.932, 7, 8], 'true,true': [0.977, 1, 21], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 2], 'false,false,false': [0.0, 1, 0], 'false,true,false,true': [13.93, 452, 340], 'false,true,true': [17.321, 532, 688]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'false,true,false': 'location(A, G)', 'true,true': 'location(A, D)', 'true': 'location(B, D)', 'false,true': 'location(A, F)', 'false,false': 'location(A, H)', 'true,true,false': 'location(A, E)', 'false': 'location(B, F)'}, {'true,true,false,true': [0.0, 2, 0], 'true,false': [0.0, 0, 2], 'false,true,false,false': [1.932, 7, 8], 'false,true,false,true': [13.93, 452, 340], 'false,false,true': [8.241, 175, 111], 'true,true,true': [0.977, 1, 21], 'true,true,false,false': [0.0, 0, 0], 'false,false,false': [0.0, 1, 0], 'false,true,true': [17.321, 532, 688]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'false,true,false': 'location(A, I)', 'false,true': 'location(A, H)', 'true': 'location(B, D), location(A, D)', 'false': 'location(B, H)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 2, 0], 'false,false,true': [8.241, 175, 111], 'false,true,false,false': [1.932, 7, 8], 'true,true': [0.977, 1, 21], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 2], 'false,false,false': [0.0, 1, 0], 'false,true,false,true': [13.93, 452, 340], 'false,true,true': [17.321, 532, 688]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'false,true,false': 'location(A, I)', 'false,true': 'location(A, H)', 'true': 'location(A, D), location(B, D)', 'false': 'location(B, H)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 2, 0], 'false,false,true': [8.241, 175, 111], 'false,true,false,false': [1.932, 7, 8], 'true,true': [0.977, 1, 21], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 2], 'false,false,false': [0.0, 1, 0], 'false,true,false,true': [13.93, 452, 340], 'false,true,true': [17.321, 532, 688]}]
{'': [0.10207100591716042, 0.24998132445474433], 'false,false,true': [0.24500051015202093, 0.23748105041811612], 'true': [0.04338842975206614, 0.25], 'true,false': [0.25, nan], 'false,false,false': [0.24888888888888885, 0.0], 'false': [0.24591238914271257, 0.24352960639551724], 'false,false': [0.24333610995417324, 0.24999999999999997]}
{'': [0.09341857904749677, 0.24842339825439774], 'false,false,true': [0.24500051015203844, 0.23748105041811463], 'true': [0.043388429752066866, 0.25], 'true,false': [0.25, nan], 'false,false,false': [0.24888888888888883, 0.0], 'false': [0.24591238914269473, 0.24335255182779086], 'false,false': [0.243246623675622, 0.24585660788535504]}
{'': [0.08491974375839978, 0.2469110144840909], 'false,false,true': [0.24500051015203406, 0.23748105041811637], 'true': [0.043388429752066256, 0.24999999999999997], 'true,false,false,false': [0.0, nan], 'true,false': [0.0, 0.0], 'false': [0.24591238914268937, 0.24318867619898427], 'true,false,false': [nan, 0.0], 'false,false': [0.24316217173762247, 0.2422710883403561]}
{'': [0.06633990331840373, 0.2458045129083611], 'false,false,true': [0.24500051015202542, 0.23748105041811537], 'true': [0.043388429752066096, 0.15785374942340044], 'true,false,false,false': [0.0, nan], 'true,false': [0.0, 0.0], 'false': [0.24591238914269606, 0.2430914278970518], 'true,false,false': [nan, 0.0], 'false,false': [0.24309679684117513, 0.24123932011324242]}
{'': [0.05494350235441509, 0.24514348426605148], 'false,false,true': [0.24500051015203428, 0.23748105041811124], 'true': [0.0433884297520662, 0.09522180835457358], 'true,false,false,false': [0.0, nan], 'true,false': [0.0, 0.0], 'false': [0.2459123891427031, 0.24302691952690278], 'true,false,false': [nan, 0.0], 'false,false': [0.24305387156514835, 0.2404617205059935]}
{'': [0.04850767598379345, 0.24480257905249192], 'true,false': [0.0, 0.0], 'false,true,false': [0.24500051015202665, 0.24888888888888888], 'false,true': [0.2459123891427016, 0.24509771302881161], 'true': [0.04338842975206622, 0.05961343320700496], 'false': [0.24579986422411654, 0.23693949831899735], 'true,false,false': [nan, 0.0], 'false,false': [0.237481050418112, 0.0]}
{'': [0.044806875842018735, 0.24462882574794198], 'true,false': [0.0, 0.0], 'false,true,false': [0.24500051015202334, 0.24888888888888888], 'false,true': [0.24591238914270167, 0.2450851383978148], 'true': [0.043388429752066075, 0.039763704621480475], 'false': [0.24567697958519558, 0.23685192233440458], 'true,false,false': [nan, 0.0], 'false,false': [0.23748105041811476, 0.0]}
{'': [0.04255168626466609, 0.24454815467924154], 'false,true,false': [0.24500051015202506, 0.24888888888888883], 'false,true': [0.2459123891427062, 0.2450788243218883], 'true': [0.045569406677894074, 0.0], 'true,true,false': [0.0, nan], 'true,true': [0.043388429752066075, 0.0], 'false': [0.24562222743372303, 0.2367944741428021], 'false,false': [0.23748105041811368, 0.0]}
{'': [0.04109455864150747, 0.24451070923121895], 'true,false': [0.0, 0.0], 'false,true,false': [0.24500051015202984, 0.24888888888888885], 'false,true': [0.2459123891427069, 0.24507573609687305], 'true': [0.043388429752066145, 0.020848227094172753], 'false': [0.24559809670914928, 0.23675601466367835], 'true,false,false': [nan, 0.0], 'false,false': [0.23748105041811218, 0.0]}
{'': [0.04010535090533802, 0.24449291742011098], 'true,false': [0.0, 0.0], 'false,true,false': [0.24500051015202623, 0.248888888888889], 'false,true': [0.24591238914270147, 0.245074236209595], 'true': [0.04338842975206612, 0.016042550030613313], 'false': [0.2455873722113216, 0.2367297750368084], 'true,false,false': [nan, 0.0], 'false,false': [0.23748105041811363, 0.0]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '0;false,false,false;location(B, I).;true;true', '0;false;location(A, F), location(B, F).;true;true', '0;false,false;location(A, G).;true;true', '1;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '1;false,false,false;location(B, I).;true;true', '1;false;location(B, F), location(A, F).;true;true', '1;false,false;location(A, G).;true;true', '2;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '2;true,false;location(A, E), location(B, F).;true;true', '2;true;location(B, D), location(A, D).;true;true', '3;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '3;true,false;location(A, E), location(B, F).;true;true', '3;true;location(B, D), location(A, D).;true;true', '4;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '4;true,false;location(A, E), location(B, F).;true;true', '4;true;location(A, D), location(B, D).;true;true', '5;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '5;true,false;location(B, E), location(A, F).;true;true', '5;false;location(B, H).;true;true', '5;true;location(A, D), location(B, D).;true;true', '5;false,false;location(A, J).;true;true', '6;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '6;true,false;location(A, E), location(B, F).;true;true', '6;false;location(B, H).;true;true', '6;true;location(B, D), location(A, D).;true;true', '6;false,false;location(A, J).;true;true', '7;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '7;false;location(B, F).;true;true', '7;true,true;location(A, D).;true;true', '7;true;location(B, D).;true;true', '7;false,false;location(A, H).;true;true', '8;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '8;true,false;location(A, E), location(B, F).;true;true', '8;false;location(B, H).;true;true', '8;true;location(B, D), location(A, D).;true;true', '8;false,false;location(A, J).;true;true', '9;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '9;true,false;location(A, E), location(B, F).;true;true', '9;false;location(B, H).;true;true', '9;true;location(A, D), location(B, D).;true;true', '9;false,false;location(A, J).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.7427643197148964;  // std dev = 0,319, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else if ( location(A, D), location(B, D) )
%   | then if ( complex(B, E), complex(A, E) )
%   | | then return 0.8334575770748209;  // std dev = 0,155, 81,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=79 */
%   | | else if ( phenotype(B, F) )
%   | | | then return 0.4827103386082798;  // std dev = 0,484, 570,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=356 */
%   | | | else if ( complex(B, G), proteinclass(B, H) )
%   | | | | then return 0.5889181658687423;  // std dev = 0,444, 52,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=38 */
%   | | | | else return 0.2740096701091803;  // std dev = 0,493, 517,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=215 */
%   | else if ( location(A, I) )
%   | | then return 0.276516282038283;  // std dev = 0,493, 1.078,000 (wgt'ed) examples reached here.  /* #neg=627 #pos=451 */
%   | | else if ( location(B, J) )
%   | | | then if ( proteinclass(B, K) )
%   | | | | then return 0.6359267128772901;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.6267773105285698;  // std dev = 0,319, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else if ( location(B, D), location(A, D) )
%   | then return 0.3614706712594197;  // std dev = 0,489, 1.220,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=688 */
%   | else if ( location(A, E) )
%   | | then if ( phenotype(B, F), location(B, G) )
%   | | | then if ( complex(A, H), complex(B, I) )
%   | | | | then return 0.1486371099421433;  // std dev = 0,469, 58,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | | else if ( phenotype(A, F) )
%   | | | | | then return 0.5269332559867661;  // std dev = 0,456, 85,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=60 */
%   | | | | | else if ( complex(B, J) )
%   | | | | | | then if ( enzyme(B, K), phenotype(A, L) )
%   | | | | | | | then return 0.8210509030455911;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.21390804590273443;  // std dev = 0,488, 56,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=22 */
%   | | | | | | else return 0.40490183472260755;  // std dev = 0,493, 161,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=94 */
%   | | | else return 0.17489705689175233;  // std dev = 0,478, 715,000 (wgt'ed) examples reached here.  /* #neg=462 #pos=253 */
%   | | else return 0.3039882028308469;  // std dev = 0,471, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.4905985021991658;  // std dev = 0,319, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else if ( function(B, D), function(A, D) )
%   | then if ( location(A, E), location(B, E) )
%   | | then return 0.4109499724240011;  // std dev = 0,456, 822,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=564 */
%   | | else if ( location(B, F), phenotype(B, G) )
%   | | | then if ( complex(B, H), location(A, I) )
%   | | | | then if ( complex(A, J) )
%   | | | | | then return 0.14699927681896102;  // std dev = 0,477, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | | | else if ( phenotype(A, G), proteinclass(A, K) )
%   | | | | | | then return 0.5081575957379153;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | | else if ( proteinclass(A, L) )
%   | | | | | | | then return -0.10144674709299345;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | | | | | else return 0.33499335477324615;  // std dev = 0,489, 46,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | | | | else return 0.4340045972210643;  // std dev = 0,462, 180,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=124 */
%   | | | else return 0.15314261583996988;  // std dev = 0,479, 209,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=75 */
%   | else return 0.11018003680007353;  // std dev = 0,474, 996,000 (wgt'ed) examples reached here.  /* #neg=661 #pos=335 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.36958488146981566;  // std dev = 0,319, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else if ( function(B, D), function(A, D) )
%   | then return 0.2837790248183934;  // std dev = 0,469, 1.318,000 (wgt'ed) examples reached here.  /* #neg=506 #pos=812 */
%   | else if ( proteinclass(A, E), location(B, F) )
%   | | then return -0.01063890291447649;  // std dev = 0,429, 200,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=49 */
%   | | else if ( location(B, G), location(A, G) )
%   | | | then return 0.0611055309975393;  // std dev = 0,473, 268,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=89 */
%   | | | else if ( location(A, H), function(B, I) )
%   | | | | then if ( complex(A, J), enzyme(A, K) )
%   | | | | | then if ( proteinclass(B, L) )
%   | | | | | | then return 0.7163294826791953;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.17601173658188415;  // std dev = 0,491, 64,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
%   | | | | | else return 0.12878492993076363;  // std dev = 0,479, 445,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=159 */
%   | | | | else if ( proteinclass(A, M), complex(A, N) )
%   | | | | | then return -0.22471345761215566;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0.4411913410971324;  // std dev = 0,459, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.2788073822335748;  // std dev = 0,319, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else if ( function(B, D), function(A, D) )
%   | then return 0.21932845039244375;  // std dev = 0,467, 1.318,000 (wgt'ed) examples reached here.  /* #neg=506 #pos=812 */
%   | else if ( location(B, E), proteinclass(A, F) )
%   | | then return -0.008627112766637057;  // std dev = 0,429, 200,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=49 */
%   | | else if ( location(B, G), location(A, G) )
%   | | | then return 0.04889356779998747;  // std dev = 0,474, 268,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=89 */
%   | | | else if ( phenotype(A, H), location(B, I) )
%   | | | | then return 0.07939754127758082;  // std dev = 0,468, 168,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=57 */
%   | | | | else if ( complex(A, J), location(B, K) )
%   | | | | | then return -0.0011419361129872691;  // std dev = 0,435, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | | | else if ( enzyme(A, L), proteinclass(A, M) )
%   | | | | | | then return -0.0654727576236357;  // std dev = 0,383, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | | | | else if ( phenotype(B, N), location(A, P) )
%   | | | | | | | then return 0.019596698499067783;  // std dev = 0,456, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | | | | | else return 0.1759776623373222;  // std dev = 0,492, 278,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=119 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.21453859266974698;  // std dev = 0,319, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else if ( location(B, D) )
%   | then return 0.12366193000081625;  // std dev = 0,469, 2.027,000 (wgt'ed) examples reached here.  /* #neg=991 #pos=1.036 */
%   | else if ( location(A, E) )
%   | | then if ( phenotype(A, F), function(B, G) )
%   | | | then return 0.07665725892173768;  // std dev = 0,481, 211,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=77 */
%   | | | else if ( complex(A, H) )
%   | | | | then return 0.017907684309511646;  // std dev = 0,454, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | | else if ( function(B, I) )
%   | | | | | then if ( proteinclass(B, J) )
%   | | | | | | then return 0.03403816583792337;  // std dev = 0,838, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else if ( function(K, I), proteinclass(K, L) )
%   | | | | | | | then return 0.5197774708857568;  // std dev = 0,864, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | | else return 0.2634422985720875;  // std dev = 0,497, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | | | else return 0.6680739681662952;  // std dev = 0,043, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.2725718918739083;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.16894795722437414;  // std dev = 0,319, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else if ( location(B, D) )
%   | then return 0.09528901264268992;  // std dev = 0,469, 2.027,000 (wgt'ed) examples reached here.  /* #neg=991 #pos=1.036 */
%   | else if ( location(A, E) )
%   | | then if ( phenotype(A, F), function(B, G) )
%   | | | then if ( enzyme(A, H), complex(A, I) )
%   | | | | then if ( enzyme(J, H), function(J, G) )
%   | | | | | then return 0.33017627651726117;  // std dev = 0,782, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( enzyme(K, H), proteinclass(K, L) )
%   | | | | | | then return -0.2753090433542331;  // std dev = 0,040, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | | else return 0.2545583522442793;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | | else return 0.045371585198196875;  // std dev = 0,477, 189,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=66 */
%   | | | else if ( complex(A, M) )
%   | | | | then return 0.014226676480887419;  // std dev = 0,454, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | | else return 0.24382060349620982;  // std dev = 0,475, 36,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | | else return -0.22197659430819838;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.13585367298708514;  // std dev = 0,319, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else if ( location(B, D) )
%   | then return 0.07304958276263315;  // std dev = 0,468, 2.027,000 (wgt'ed) examples reached here.  /* #neg=991 #pos=1.036 */
%   | else if ( location(A, E) )
%   | | then if ( complex(A, F), enzyme(A, G) )
%   | | | then if ( function(B, H), phenotype(A, I) )
%   | | | | then if ( enzyme(J, G), function(J, H) )
%   | | | | | then return 0.25314641922224174;  // std dev = 0,778, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( enzyme(K, G), proteinclass(K, L) )
%   | | | | | | then return -0.22400643435494874;  // std dev = 0,035, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | | else return 0.19784156110823078;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | | else return 0.34869632088623276;  // std dev = 0,794, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( phenotype(A, M), complex(B, N) )
%   | | | | then return -0.3269894993673072;  // std dev = 0,084, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else return 0.053604763733914616;  // std dev = 0,476, 258,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=98 */
%   | | else return -0.1860079390128349;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.11116936865299519;  // std dev = 0,319, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else if ( location(B, D) )
%   | then return 0.05583539399084725;  // std dev = 0,468, 2.027,000 (wgt'ed) examples reached here.  /* #neg=991 #pos=1.036 */
%   | else if ( location(A, E) )
%   | | then if ( complex(A, F), enzyme(A, G) )
%   | | | then return 0.129266378282634;  // std dev = 0,471, 25,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else if ( function(B, H), function(A, H) )
%   | | | | then return -0.024653031634556566;  // std dev = 0,470, 47,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | | else if ( proteinclass(A, I) )
%   | | | | | then return 0.019243324911771748;  // std dev = 0,458, 68,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | | | | else if ( complex(A, J) )
%   | | | | | | then return 0.016815557075452015;  // std dev = 0,471, 72,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | | | | | else if ( phenotype(A, K) )
%   | | | | | | | then return 0.07675495289960022;  // std dev = 0,489, 48,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | | | | | | else return 0.19130459858751395;  // std dev = 0,474, 26,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | else return -0.1594710230279904;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.09228303209630079;  // std dev = 0,319, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else if ( location(B, D) )
%   | then return 0.042607519352293295;  // std dev = 0,468, 2.027,000 (wgt'ed) examples reached here.  /* #neg=991 #pos=1.036 */
%   | else if ( location(A, E) )
%   | | then if ( complex(A, F), enzyme(A, G) )
%   | | | then return 0.09896033206274599;  // std dev = 0,470, 25,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else if ( phenotype(A, H), enzyme(B, I) )
%   | | | | then return 0.2987944667014399;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( phenotype(A, J), function(B, K) )
%   | | | | | then if ( function(A, K) )
%   | | | | | | then return -0.10443274723999539;  // std dev = 0,435, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | | | | else if ( proteinclass(A, L), complex(A, M) )
%   | | | | | | | then return 0.1312716505218899;  // std dev = 0,498, 33,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | | | | | else return 0.014512275973574372;  // std dev = 0,469, 122,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | | | else return 0.05505246025154045;  // std dev = 0,466, 72,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=32 */
%   | | else return -0.13923717603493949;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
Results
   AUC ROC   = 0.65407
   AUC PR    = 0.672931
   CLL	      = -0.659572
   Precision = 0.668126 at threshold = 0.5
   Recall    = 0.508172
   F1        = 0.577274


Total learning time: 46.666 seconds
Total inference time: 2.352 seconds
AUC ROC: 0.65407


Refined model AUC ROC: 0.65407


Dataset: twitter->yeast, Fold: 2, Type: transfer, Time: 00:12:30
{'Inference time': 2.352, 'CLL': -0.659572, 'Parameter Learning results': {'Inference time': 2.404, 'CLL': -0.681194, 'F1': 0.599357, 'AUC ROC': 0.589109, 'Recall': 0.620763, 'AUC PR': 0.57663, 'Precision': [0.579379, 0.5], 'Learning time': 40.226}, 'F1': 0.577274, 'AUC ROC': 0.65407, 'Mapping results': {'Finding best mapping': 0.012754440307617188, 'Generating mappings time': 0.04551839828491211, 'Total time': 4.018885374069214, 'Possible mappings': 98, 'Knowledge compiling time': 0.06098127365112305, 'Generating paths time': 3.899625062942505}, 'Recall': 0.508172, 'AUC PR': 0.672931, 'Precision': [0.668126, 0.5], 'Learning time': 86.892}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.8373156017661781;  // std dev = 0,143, 96,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=94 */
%   else if ( phenotype(B, D), location(B, E) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.5574732594238329;  // std dev = 0,459, 296,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=207 */
%   | | else if ( enzyme(B, F), phenotype(A, G) )
%   | | | then return 0.5367203636709416;  // std dev = 0,467, 84,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=57 */
%   | | | else if ( location(A, E), complex(B, H) )
%   | | | | then return 0.4938078498281927;  // std dev = 0,481, 129,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=82 */
%   | | | | else if ( complex(B, I), location(A, J) )
%   | | | | | then return 0.2189736773675522;  // std dev = 0,480, 97,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   | | | | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | | | | then return 0.6386367399775602;  // std dev = 0,414, 41,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=32 */
%   | | | | | | else if ( phenotype(A, M), proteinclass(A, N) )
%   | | | | | | | then return 0.14981560176617903;  // std dev = 0,455, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | | | | | else return 0.3707843141608838;  // std dev = 0,500, 277,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=142 */
%   | else return 0.2547538733711124;  // std dev = 0,489, 1.296,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=514 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.48497700145028505;  // std dev = 0,454, 844,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=585 */
%   | else if ( location(B, E), phenotype(B, F) )
%   | | then if ( complex(B, G), location(A, H) )
%   | | | then if ( complex(A, I) )
%   | | | | then return 0.15966126717061288;  // std dev = 0,475, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | | else if ( enzyme(B, J) )
%   | | | | | then return 0.7786935026228688;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else if ( phenotype(A, F) )
%   | | | | | | then return 0.46350352378351817;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | | | | else if ( proteinclass(A, K) )
%   | | | | | | | then return -0.059539067705634614;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | | | | | else return 0.343635535468968;  // std dev = 0,500, 35,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | | else return 0.47434012386437896;  // std dev = 0,462, 181,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=124 */
%   | | else return 0.18743361112717333;  // std dev = 0,481, 212,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=77 */
%   else return 0.15646741441143833;  // std dev = 0,472, 996,000 (wgt'ed) examples reached here.  /* #neg=661 #pos=335 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( location(B, C), phenotype(B, D) )
%   then return 0.32794133576058615;  // std dev = 0,470, 1.002,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=615 */
%   else if ( function(B, E), function(A, E) )
%   | then if ( location(B, F), location(A, F) )
%   | | then return 0.3684619229298222;  // std dev = 0,469, 316,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=203 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.028737277483598563;  // std dev = 0,423, 60,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else if ( enzyme(A, H), complex(A, I) )
%   | | | | then return 0.5731817219280428;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | else if ( enzyme(B, J), proteinclass(A, K) )
%   | | | | | then return -0.20459605584973484;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | else if ( proteinclass(A, L), complex(A, M) )
%   | | | | | | then return 0.08111822986455079;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | | | | else if ( enzyme(A, N) )
%   | | | | | | | then return 0.11119341783447552;  // std dev = 0,465, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | | | | | else return 0.23349918224550378;  // std dev = 0,496, 105,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=46 */
%   | else return 0.13990337277560164;  // std dev = 0,474, 810,000 (wgt'ed) examples reached here.  /* #neg=535 #pos=275 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.5121526296144869;  // std dev = 0,143, 96,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=94 */
%   else if ( function(B, D), function(A, D) )
%   | then if ( location(A, E), location(B, E) )
%   | | then return 0.2945273237334195;  // std dev = 0,471, 749,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=492 */
%   | | else if ( complex(B, F), complex(A, G) )
%   | | | then return 0.04320726800741321;  // std dev = 0,450, 72,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | | else if ( location(B, H), phenotype(B, I) )
%   | | | | then return 0.28673282898118435;  // std dev = 0,468, 244,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=157 */
%   | | | | else if ( proteinclass(B, J), enzyme(A, K) )
%   | | | | | then return 0.5121996456242374;  // std dev = 0,412, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | | | else if ( proteinclass(A, L), complex(B, M) )
%   | | | | | | then return -0.20931237282961984;  // std dev = 1,05e-08, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | | | | else if ( location(B, N), enzyme(B, P) )
%   | | | | | | | then return -0.0316397677635631;  // std dev = 0,384, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | | | | | else return 0.17639851487443545;  // std dev = 0,489, 149,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=62 */
%   | else return 0.10175757506917595;  // std dev = 0,473, 996,000 (wgt'ed) examples reached here.  /* #neg=661 #pos=335 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then return 0.21092193562094178;  // std dev = 0,460, 1.344,000 (wgt'ed) examples reached here.  /* #neg=509 #pos=835 */
%   else if ( location(B, D), proteinclass(A, E) )
%   | then return -0.010849178701046234;  // std dev = 0,429, 200,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=49 */
%   | else if ( phenotype(A, F), complex(B, G) )
%   | | then return -0.012965502337956637;  // std dev = 0,429, 68,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | else if ( phenotype(B, H), location(A, I) )
%   | | | then return 0.028656373218235973;  // std dev = 0,469, 117,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
%   | | | else if ( location(A, J), function(B, K) )
%   | | | | then if ( location(L, J), function(L, K) )
%   | | | | | then if ( phenotype(A, M), complex(A, N) )
%   | | | | | | then return 0.17175002858659608;  // std dev = 0,492, 235,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=97 */
%   | | | | | | else return 0.11049922265493857;  // std dev = 0,477, 330,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=116 */
%   | | | | | else return 0.025650737806454167;  // std dev = 0,442, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | | else if ( complex(A, P), proteinclass(A, Q) )
%   | | | | | then return -0.24101592886021242;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0.428262142876135;  // std dev = 0,467, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then return 0.16090291298460718;  // std dev = 0,459, 1.344,000 (wgt'ed) examples reached here.  /* #neg=509 #pos=835 */
%   else if ( location(B, D), location(A, E) )
%   | then return 0.048848578857534096;  // std dev = 0,464, 752,000 (wgt'ed) examples reached here.  /* #neg=513 #pos=239 */
%   | else if ( proteinclass(A, F) )
%   | | then return 0.04431908653618029;  // std dev = 0,458, 71,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | else if ( complex(A, G), function(B, H) )
%   | | | then return 0.10187043486351277;  // std dev = 0,482, 89,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=33 */
%   | | | else if ( phenotype(A, I), function(B, J) )
%   | | | | then if ( function(K, J), phenotype(K, I) )
%   | | | | | then return -0.06180297533807273;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else if ( enzyme(A, L) )
%   | | | | | | then return 0.23819702466192724;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | | | else return 0.14360243006733261;  // std dev = 0,491, 37,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | | else if ( complex(B, M), location(B, N) )
%   | | | | | then return -0.06443146023025796;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.35329382256165365;  // std dev = 0,474, 33,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then return 0.1793783880162701;  // std dev = 0,430, 336,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=244 */
%   else if ( complex(B, D), proteinclass(B, E) )
%   | then return 0.1851792752272221;  // std dev = 0,419, 175,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=113 */
%   | else if ( phenotype(B, F), enzyme(A, G) )
%   | | then return 0.16383187129858248;  // std dev = 0,426, 101,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=67 */
%   | | else if ( complex(B, H), complex(A, H) )
%   | | | then return 0.2898823093281789;  // std dev = 0,165, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else if ( location(B, I), enzyme(A, J) )
%   | | | | then return -0.03473013677781294;  // std dev = 0,466, 152,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=48 */
%   | | | | else if ( phenotype(A, K), phenotype(B, L) )
%   | | | | | then if ( complex(B, M) )
%   | | | | | | then return 0.0933446388225574;  // std dev = 0,475, 83,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=45 */
%   | | | | | | else if ( proteinclass(B, N), enzyme(B, P) )
%   | | | | | | | then return 0.1483824073843362;  // std dev = 0,463, 34,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | | | | | | else return -0.014910888620224876;  // std dev = 0,481, 169,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=74 */
%   | | | | | else return 0.07411854108617176;  // std dev = 0,475, 1.254,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=521 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.2534681348653736;  // std dev = 0,144, 96,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=94 */
%   else if ( phenotype(B, D), phenotype(A, D) )
%   | then return 0.12179276047295298;  // std dev = 0,450, 300,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=209 */
%   | else if ( enzyme(B, E), complex(B, F) )
%   | | then return -0.045478302982867064;  // std dev = 0,414, 81,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | else if ( enzyme(A, G), proteinclass(B, H) )
%   | | | then return 0.15883064113968104;  // std dev = 0,431, 65,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else if ( location(B, I), enzyme(A, J) )
%   | | | | then return 9.223388063459907E-4;  // std dev = 0,456, 200,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=80 */
%   | | | | else if ( phenotype(B, K), phenotype(A, L) )
%   | | | | | then if ( proteinclass(B, M), enzyme(B, N) )
%   | | | | | | then return 0.1122462171287652;  // std dev = 0,463, 34,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | | | | | else if ( complex(B, P) )
%   | | | | | | | then return 0.05636260553448297;  // std dev = 0,483, 99,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=53 */
%   | | | | | | | else return -0.008235313144698346;  // std dev = 0,482, 170,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=75 */
%   | | | | | else return 0.0713099974741652;  // std dev = 0,475, 1.295,000 (wgt'ed) examples reached here.  /* #neg=729 #pos=566 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.20601815721735747;  // std dev = 0,144, 96,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=94 */
%   else if ( function(B, D), function(A, D) )
%   | then if ( proteinclass(B, E), proteinclass(A, F) )
%   | | then return 0.14993576744143297;  // std dev = 0,431, 157,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=112 */
%   | | else if ( phenotype(B, G), location(A, H) )
%   | | | then return 0.08262851604786;  // std dev = 0,464, 659,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=426 */
%   | | | else if ( phenotype(A, I), enzyme(A, J) )
%   | | | | then return -0.11618201763805219;  // std dev = 0,462, 70,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | | else if ( location(A, K), location(B, K) )
%   | | | | | then if ( complex(B, L), proteinclass(B, M) )
%   | | | | | | then return 0.27945189148897015;  // std dev = 0,371, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | | | | else if ( phenotype(A, N), enzyme(B, P) )
%   | | | | | | | then return 0.25497547493320294;  // std dev = 0,414, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | | | | | else return 0.043841883437424956;  // std dev = 0,494, 164,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | | | | | else return -0.015469392592546432;  // std dev = 0,467, 161,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=57 */
%   | else return 0.026374172267102862;  // std dev = 0,468, 996,000 (wgt'ed) examples reached here.  /* #neg=661 #pos=335 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then return 0.0600817516699936;  // std dev = 0,451, 1.344,000 (wgt'ed) examples reached here.  /* #neg=509 #pos=835 */
%   else if ( location(B, D), proteinclass(A, E) )
%   | then return -0.048853160442648494;  // std dev = 0,428, 200,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=49 */
%   | else if ( complex(B, F), complex(A, G) )
%   | | then return -0.06877354852952647;  // std dev = 0,436, 53,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | else if ( proteinclass(A, H), enzyme(A, I) )
%   | | | then return -0.12526537004518298;  // std dev = 0,383, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else if ( location(A, J), phenotype(B, K) )
%   | | | | then return -0.015445534885375426;  // std dev = 0,466, 118,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | | | else if ( location(B, L), phenotype(A, M) )
%   | | | | | then return 0.026516003596558407;  // std dev = 0,468, 242,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=80 */
%   | | | | | else if ( complex(A, N) )
%   | | | | | | then return 0.04557328056142217;  // std dev = 0,479, 175,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=64 */
%   | | | | | | else if ( phenotype(A, P) )
%   | | | | | | | then return 0.048292366465168296;  // std dev = 0,480, 54,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | | | | | else return 0.15148981373650341;  // std dev = 0,492, 138,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=66 */
Results
   AUC ROC   = 0.660479
   AUC PR    = 0.688258
   CLL	      = -0.649141
   Precision = 0.684406 at threshold = 0.5
   Recall    = 0.502119
   F1        = 0.57926


Total learning time: 62.375 seconds
Total inference time: 4.744 seconds
AUC ROC: 0.660479


Dataset: twitter->yeast, Fold: 2, Type: scratch, Time: 00:13:37
{'Inference time': 4.744, 'CLL': -0.649141, 'F1': 0.57926, 'AUC ROC': 0.660479, 'Recall': 0.502119, 'AUC PR': 0.688258, 'Precision': [0.684406, 0.5], 'Learning time': 62.375}


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> proteinclass(A,B)', 'tweets(A,B) -> location(A,B)'] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
0;true,false;location(A, E).;false;true
0;true;location(A, D), location(B, D).;false;true
0;false,false,true;location(B, I).;false;false
0;false,false,false;location(B, J).;false;false
0;false;location(A, G), location(B, G).;false;true
0;true,false,false;location(B, F).;false;false
0;false,false;location(A, H).;true;true
1;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
1;true,false;location(A, E).;false;true
1;true;location(A, D), location(B, D).;false;true
1;false,false,true;location(B, I).;false;false
1;false,false,false;location(B, J).;false;false
1;false;location(B, G), location(A, G).;false;true
1;true,false,false;location(B, F).;false;false
1;false,false;location(A, H).;true;true
2;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
2;true,false;location(A, E), location(B, F).;false;true
2;true;location(B, D), location(A, D).;false;true
2;true,false,false,false;location(A, H).;false;false
2;false,false,true;location(B, K).;false;false
2;false;location(A, I), location(B, I).;false;true
2;true,false,false;location(B, G).;false;true
2;false,false;location(A, J).;true;false
3;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
3;true,false;location(A, E), location(B, F).;false;true
3;true;location(B, D), location(A, D).;false;true
3;true,false,false,false;location(A, H).;false;false
3;false,false,true;location(B, K).;false;false
3;false;location(B, I), location(A, I).;false;true
3;true,false,false;location(B, G).;false;true
3;false,false;location(A, J).;true;false
4;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
4;true,false;location(A, E), location(B, F).;false;true
4;true;location(A, D), location(B, D).;false;true
4;true,false,false,false;location(A, H).;false;false
4;false,false,true;location(B, K).;false;false
4;false;location(B, I), location(A, I).;false;true
4;true,false,false;location(B, G).;false;true
4;false,false;location(A, J).;true;false
5;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
5;true,false;location(B, E), location(A, F).;false;true
5;false,true,false;location(A, I).;false;false
5;false,true;location(A, H).;false;true
5;true;location(A, D), location(B, D).;false;true
5;false;location(B, H).;true;true
5;true,false,false;location(B, G).;false;false
5;false,false;location(A, J).;false;false
6;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
6;true,false;location(A, E), location(B, F).;false;true
6;false,true,false;location(A, I).;false;false
6;false,true;location(A, H).;false;true
6;true;location(B, D), location(A, D).;false;true
6;false;location(B, H).;true;true
6;true,false,false;location(B, G).;false;false
6;false,false;location(A, J).;false;false
7;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
7;false,true,false;location(A, G).;false;false
7;true,true;location(A, D).;false;true
7;true;location(B, D).;true;false
7;false,true;location(A, F).;false;true
7;false,false;location(A, H).;false;false
7;true,true,false;location(A, E).;false;false
7;false;location(B, F).;true;true
8;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
8;true,false;location(A, E), location(B, F).;false;true
8;false,true,false;location(A, I).;false;false
8;false,true;location(A, H).;false;true
8;true;location(B, D), location(A, D).;false;true
8;false;location(B, H).;true;true
8;true,false,false;location(B, G).;false;false
8;false,false;location(A, J).;false;false
9;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
9;true,false;location(A, E), location(B, F).;false;true
9;false,true,false;location(A, I).;false;false
9;false,true;location(A, H).;false;true
9;true;location(A, D), location(B, D).;false;true
9;false;location(B, H).;true;true
9;true,false,false;location(B, G).;false;false
9;false,false;location(A, J).;false;false
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.7867203636709409;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( location(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(B, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(A, G), location(B, G) )
%   | then return 0.46519854345459904;  // std dev = 13,517, 766,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=465 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.1746046313020398;  // std dev = 9,244, 395,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=125 */
%   | | | else return 0.22481560176617896;  // std dev = 5,279, 120,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | else if ( location(B, J) )
%   | | | then return 0.3248156017661778;  // std dev = 3,864, 60,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=28 */
%   | | | else return 0.42957750652808374;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.6622329172201352;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( location(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(B, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, G), location(A, G) )
%   | then return 0.39868335128604865;  // std dev = 13,517, 766,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=465 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.15199356984046228;  // std dev = 9,244, 395,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=125 */
%   | | | else return 0.19518809641219506;  // std dev = 5,279, 120,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | else if ( location(B, J) )
%   | | | then return 0.2805107770599861;  // std dev = 3,864, 60,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=28 */
%   | | | else return 0.3688769765977055;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.5154428111118985;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(B, G) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else if ( location(A, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(A, I), location(B, I) )
%   | then return 0.3253644746265446;  // std dev = 13,517, 766,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=465 */
%   | else if ( location(A, J) )
%   | | then if ( location(B, K) )
%   | | | then return 0.13002958834479061;  // std dev = 9,244, 395,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=125 */
%   | | | else return 0.1656570729718291;  // std dev = 5,279, 120,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | else return 0.2472111681641052;  // std dev = 4,291, 74,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=36 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.3875647182006322;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(B, G) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else if ( location(A, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, I), location(A, I) )
%   | then return 0.25516230459839695;  // std dev = 13,517, 766,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=465 */
%   | else if ( location(A, J) )
%   | | then if ( location(B, K) )
%   | | | then return 0.10949964946028251;  // std dev = 9,244, 395,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=125 */
%   | | | else return 0.13773249159869702;  // std dev = 5,279, 120,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | else return 0.19943226761764887;  // std dev = 4,291, 74,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=36 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.29398103437200096;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(B, G) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else if ( location(A, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, I), location(A, I) )
%   | then return 0.19502240939607837;  // std dev = 13,517, 766,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=465 */
%   | else if ( location(A, J) )
%   | | then if ( location(B, K) )
%   | | | then return 0.09095134043209166;  // std dev = 9,244, 395,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=125 */
%   | | | else return 0.11251796959820375;  // std dev = 5,279, 120,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | else return 0.15701041033965568;  // std dev = 4,290, 74,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=36 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2288562690978686;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( location(B, E), location(A, F) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(B, G) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, H) )
%   | then if ( location(A, H) )
%   | | then return 0.1471058124604501;  // std dev = 13,517, 766,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=465 */
%   | | else if ( location(A, I) )
%   | | | then return 0.07467127102728155;  // std dev = 9,244, 395,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=125 */
%   | | | else return 0.11026576188760767;  // std dev = 3,864, 60,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=28 */
%   | else if ( location(A, J) )
%   | | then return 0.09060636389747088;  // std dev = 5,279, 120,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | else return 0.169609577553989;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.18306311556471894;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(B, G) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, H) )
%   | then if ( location(A, H) )
%   | | then return 0.11041533356178422;  // std dev = 13,517, 766,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=465 */
%   | | else if ( location(A, I) )
%   | | | then return 0.06071965839552077;  // std dev = 9,244, 395,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=125 */
%   | | | else return 0.08459257484998321;  // std dev = 3,864, 60,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=28 */
%   | else if ( location(A, J) )
%   | | then return 0.07213646342991314;  // std dev = 5,279, 120,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | else return 0.12825253786808738;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D) )
%   | then if ( location(A, D) )
%   | | then return 0.14991371797684416;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( location(A, E) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, F) )
%   | then if ( location(A, F) )
%   | | then return 0.08283051912235428;  // std dev = 13,517, 766,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=465 */
%   | | else if ( location(A, G) )
%   | | | then return 0.0489922413879846;  // std dev = 9,244, 395,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=125 */
%   | | | else return 0.06443172271926856;  // std dev = 3,864, 60,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=28 */
%   | else if ( location(A, H) )
%   | | then return 0.05692898383935132;  // std dev = 5,279, 120,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | else return 0.09641512929341214;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.12515667139271322;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(B, G) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, H) )
%   | then if ( location(A, H) )
%   | | then return 0.0622245918105338;  // std dev = 13,517, 766,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=465 */
%   | | else if ( location(A, I) )
%   | | | then return 0.03928469908470959;  // std dev = 9,244, 395,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=125 */
%   | | | else return 0.04884685034234148;  // std dev = 3,864, 60,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=28 */
%   | else if ( location(A, J) )
%   | | then return 0.044627633599897444;  // std dev = 5,279, 120,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | else return 0.07233217695416896;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.10613658840585892;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(B, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, H) )
%   | then if ( location(A, H) )
%   | | then return 0.046841341075812115;  // std dev = 13,517, 766,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=465 */
%   | | else if ( location(A, I) )
%   | | | then return 0.03134564254342519;  // std dev = 9,244, 395,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=125 */
%   | | | else return 0.03691952126690833;  // std dev = 3,864, 60,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=28 */
%   | else if ( location(A, J) )
%   | | then return 0.03480772735163971;  // std dev = 5,279, 120,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | else return 0.054255890802425835;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
Results
   AUC ROC   = 0.580036
   AUC PR    = 0.567652
   CLL	      = -0.692576
   Precision = 0.569338 at threshold = 0.5
   Recall    = 0.605861
   F1        = 0.587032


Total learning time: 43.073 seconds
Total inference time: 2.206 seconds
AUC ROC: 0.580036


Structure after Parameter Learning
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E)', 'true': 'location(A, D), location(B, D)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)', 'false': 'location(A, G), location(B, G)', 'true,false,false': 'location(B, F)', 'false,false': 'location(A, H)'}, {'true,false,true': [0.0, 0, 1], 'false,false,true,true': [9.244, 270, 125], 'false,false,false,true': [3.864, 32, 28], 'true,true': [0.964, 1, 13], 'false,true': [13.517, 301, 465], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 1], 'false,false,false,false': [1.852, 6, 8], 'false,false,true,false': [5.279, 76, 44]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E)', 'true': 'location(A, D), location(B, D)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)', 'false': 'location(B, G), location(A, G)', 'true,false,false': 'location(B, F)', 'false,false': 'location(A, H)'}, {'true,false,true': [0.0, 0, 1], 'false,false,true,true': [9.244, 270, 125], 'false,false,false,true': [3.864, 32, 28], 'true,true': [0.964, 1, 13], 'false,true': [13.517, 301, 465], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 1], 'false,false,false,false': [1.852, 6, 8], 'false,false,true,false': [5.279, 76, 44]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'true': 'location(B, D), location(A, D)', 'true,false,false,false': 'location(A, H)', 'false,false,true': 'location(B, K)', 'false': 'location(A, I), location(B, I)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 0, 1], 'false,false,true,true': [9.244, 270, 125], 'true,true': [0.964, 1, 13], 'true,false,false,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false,false': [0.0, 0, 1], 'false,false,false': [4.291, 38, 36], 'false,true': [13.517, 301, 465], 'false,false,true,false': [5.279, 76, 44]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'true': 'location(B, D), location(A, D)', 'true,false,false,false': 'location(A, H)', 'false,false,true': 'location(B, K)', 'false': 'location(B, I), location(A, I)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 0, 1], 'false,false,true,true': [9.244, 270, 125], 'true,true': [0.964, 1, 13], 'true,false,false,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false,false': [0.0, 0, 1], 'false,false,false': [4.291, 38, 36], 'false,true': [13.517, 301, 465], 'false,false,true,false': [5.279, 76, 44]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'true': 'location(A, D), location(B, D)', 'true,false,false,false': 'location(A, H)', 'false,false,true': 'location(B, K)', 'false': 'location(B, I), location(A, I)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 0, 1], 'false,false,true,true': [9.244, 270, 125], 'true,true': [0.964, 1, 13], 'true,false,false,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false,false': [0.0, 0, 1], 'false,false,false': [4.29, 38, 36], 'false,true': [13.517, 301, 465], 'false,false,true,false': [5.279, 76, 44]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(B, E), location(A, F)', 'false,true,false': 'location(A, I)', 'false,true': 'location(A, H)', 'true': 'location(A, D), location(B, D)', 'false': 'location(B, H)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 0, 1], 'false,false,true': [5.279, 76, 44], 'false,true,false,false': [3.864, 32, 28], 'true,true': [0.964, 1, 13], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 1], 'false,false,false': [1.852, 6, 8], 'false,true,false,true': [9.244, 270, 125], 'false,true,true': [13.517, 301, 465]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'false,true,false': 'location(A, I)', 'false,true': 'location(A, H)', 'true': 'location(B, D), location(A, D)', 'false': 'location(B, H)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 0, 1], 'false,false,true': [5.279, 76, 44], 'false,true,false,false': [3.864, 32, 28], 'true,true': [0.964, 1, 13], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 1], 'false,false,false': [1.852, 6, 8], 'false,true,false,true': [9.244, 270, 125], 'false,true,true': [13.517, 301, 465]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'false,true,false': 'location(A, G)', 'true,true': 'location(A, D)', 'true': 'location(B, D)', 'false,true': 'location(A, F)', 'false,false': 'location(A, H)', 'true,true,false': 'location(A, E)', 'false': 'location(B, F)'}, {'true,true,false,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true,false,false': [3.864, 32, 28], 'false,true,false,true': [9.244, 270, 125], 'false,false,true': [5.279, 76, 44], 'true,true,true': [0.964, 1, 13], 'true,true,false,false': [0.0, 0, 1], 'false,false,false': [1.852, 6, 8], 'false,true,true': [13.517, 301, 465]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'false,true,false': 'location(A, I)', 'false,true': 'location(A, H)', 'true': 'location(B, D), location(A, D)', 'false': 'location(B, H)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 0, 1], 'false,false,true': [5.279, 76, 44], 'false,true,false,false': [3.864, 32, 28], 'true,true': [0.964, 1, 13], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 1], 'false,false,false': [1.852, 6, 8], 'false,true,false,true': [9.244, 270, 125], 'false,true,true': [13.517, 301, 465]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'true,false': 'location(A, E), location(B, F)', 'false,true,false': 'location(A, I)', 'false,true': 'location(A, H)', 'true': 'location(A, D), location(B, D)', 'false': 'location(B, H)', 'true,false,false': 'location(B, G)', 'false,false': 'location(A, J)'}, {'true,false,true': [0.0, 0, 1], 'false,false,true': [5.279, 76, 44], 'false,true,false,false': [3.864, 32, 28], 'true,true': [0.964, 1, 13], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 1], 'false,false,false': [1.852, 6, 8], 'false,true,false,true': [9.244, 270, 125], 'false,true,true': [13.517, 301, 465]}]
{'': [0.055363321799307655, 0.2499693631622604], 'false,false,true': [0.2163114885435052, 0.23222222222222316], 'true': [0.06632653061224467, 1.4802973661668753e-16], 'true,false': [0.0, 0.0], 'false,false,false': [0.24888888888889033, 0.24489795918367338], 'false': [0.23854038135101643, 0.22691044935302573], 'true,false,false': [0.0, 0.0], 'false,false': [0.2204694127627517, 0.24981738495252173]}
{'': [0.05509801454989445, 0.24494429472450072], 'false,false,true': [0.21631148854350032, 0.23222222222222186], 'true': [0.0663265306122444, 0.0], 'true,false': [0.0, 0.0], 'false,false,false': [0.2488888888888898, 0.24489795918367352], 'false': [0.23854038135101752, 0.22600027017885627], 'true,false,false': [0.0, 0.0], 'false,false': [0.2203522867454266, 0.2493316588689516]}
{'': [0.05485348758765968, 0.24010112789734517], 'false,false,true': [0.21631148854350302, 0.23222222222222158], 'true': [0.06632653061224501, 3.700743415417188e-17], 'true,false,false,false': [nan, 0.0], 'true,false': [0.0, 0.0], 'false': [0.23854038135102631, 0.22514230599438004], 'true,false,false': [0.0, 0.0], 'false,false': [0.220245691572889, 0.24885463989440584]}
{'': [0.05475219909254183, 0.23650996879317987], 'false,false,true': [0.21631148854349824, 0.2322222222222214], 'true': [0.06632653061224479, -3.700743415417188e-17], 'true,false,false,false': [nan, 0.0], 'true,false': [0.0, 0.0], 'false': [0.23854038135101452, 0.22451854821338646], 'true,false,false': [0.0, 0.0], 'false,false': [0.22016129745039034, 0.24876766524449798]}
{'': [0.05472569139277352, 0.23431754419770617], 'false,false,true': [0.2163114885435063, 0.23222222222222152], 'true': [0.06632653061224496, 0.0], 'true,false,false,false': [nan, 0.0], 'true,false': [0.0, 0.0], 'false': [0.23854038135101918, 0.22410539673846835], 'true,false,false': [0.0, 0.0], 'false,false': [0.22010196834496068, 0.24870997804158318]}
{'': [0.054722493304581905, 0.23314504342748799], 'true,false': [0.0, 0.0], 'false,true,false': [0.21631148854350693, 0.24888888888888908], 'false,true': [0.23854038135102035, 0.2207524505809694], 'true': [0.0663265306122449, 0.0], 'false': [0.23298456713716353, 0.23413052115238628], 'true,false,false': [0.0, 0.0], 'false,false': [0.23222222222222272, 0.24489795918367352]}
{'': [0.054725410228273555, 0.23255247341532287], 'true,false': [0.0, 0.0], 'false,true,false': [0.21631148854350424, 0.24888888888888913], 'false,true': [0.2385403813510193, 0.22067265285674145], 'true': [0.06632653061224485, 0.0], 'false': [0.2323885829332543, 0.23384118110733443], 'true,false,false': [0.0, 0.0], 'false,false': [0.23222222222222252, 0.24489795918367355]}
{'': [0.05472923264146621, 0.2322701823013189], 'false,true,false': [0.2163114885435044, 0.24888888888888872], 'false,true': [0.238540381351024, 0.22063469867834065], 'true': [0.058116531857770146, 0.0], 'true,true,false': [0.0, 0.0], 'true,true': [0.06632653061224492, 0.0], 'false': [0.23210435428508408, 0.23369243073674825], 'false,false': [0.23222222222222283, 0.2448979591836735]}
{'': [0.054732451578745234, 0.23213828649849333], 'true,false': [0.0, 0.0], 'false,true,false': [0.21631148854349824, 0.2488888888888886], 'false,true': [0.2385403813510249, 0.22061787681877126], 'true': [0.06632653061224489, -4.625929269271485e-18], 'false': [0.23197151453670706, 0.23361836571929462], 'true,false,false': [0.0, 0.0], 'false,false': [0.2322222222222222, 0.24489795918367346]}
{'': [0.054734734496015375, 0.2320771517861767], 'true,false': [0.0, 0.0], 'false,true,false': [0.21631148854350207, 0.24888888888888908], 'false,true': [0.2385403813510231, 0.22061096611369188], 'true': [0.0663265306122449, -2.3129646346357427e-18], 'false': [0.23191000335604772, 0.23358194101945948], 'true,false,false': [0.0, 0.0], 'false,false': [0.23222222222222272, 0.24489795918367346]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '0;true,false;location(A, E).;true;true', '0;true,false,false;location(B, F).;true;true', '0;true;location(A, D), location(B, D).;true;true', '1;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '1;true,false;location(A, E).;true;true', '1;true,false,false;location(B, F).;true;true', '1;true;location(A, D), location(B, D).;true;true', '2;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '2;true,false;location(A, E), location(B, F).;true;true', '2;true,false,false;location(B, G).;true;true', '2;true;location(B, D), location(A, D).;true;true', '3;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '3;true,false;location(A, E), location(B, F).;true;true', '3;true,false,false;location(B, G).;true;true', '3;true;location(B, D), location(A, D).;true;true', '4;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '4;true,false;location(A, E), location(B, F).;true;true', '4;true,false,false;location(B, G).;true;true', '4;true;location(A, D), location(B, D).;true;true', '5;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '5;true,false;location(B, E), location(A, F).;true;true', '5;true,false,false;location(B, G).;true;true', '5;true;location(A, D), location(B, D).;true;true', '6;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '6;true,false;location(A, E), location(B, F).;true;true', '6;true,false,false;location(B, G).;true;true', '6;true;location(B, D), location(A, D).;true;true', '7;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '7;true,true,false;location(A, E).;true;true', '7;true,true;location(A, D).;true;true', '7;true;location(B, D).;true;true', '8;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '8;true,false;location(A, E), location(B, F).;true;true', '8;true,false,false;location(B, G).;true;true', '8;true;location(B, D), location(A, D).;true;true', '9;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true', '9;true,false;location(A, E), location(B, F).;true;true', '9;true,false,false;location(B, G).;true;true', '9;true;location(A, D), location(B, D).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.7993254056877476;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( complex(B, D), complex(A, D) )
%   | then return 0.8494532829255977;  // std dev = 0,093, 115,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=114 */
%   | else if ( location(B, E), location(A, E) )
%   | | then if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.13939893509951237;  // std dev = 0,450, 64,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else if ( function(A, H), function(B, H) )
%   | | | | then return 0.5486251255756989;  // std dev = 0,462, 336,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=232 */
%   | | | | else if ( complex(A, I), phenotype(B, J) )
%   | | | | | then return 0.03206197857777315;  // std dev = 0,379, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | | | else if ( enzyme(A, K), proteinclass(A, L) )
%   | | | | | | then return 0.5724346493852266;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | | | else if ( enzyme(B, M) )
%   | | | | | | | then return 0.18314893509951236;  // std dev = 0,468, 40,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | | | | | else return 0.300771885919184;  // std dev = 0,497, 183,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=81 */
%   | | else return 0.20397517019320602;  // std dev = 0,476, 587,000 (wgt'ed) examples reached here.  /* #neg=384 #pos=203 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.6723676618346616;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( location(A, D), location(B, D) )
%   | then return 0.3962942094703298;  // std dev = 0,473, 766,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=465 */
%   | else if ( location(A, E) )
%   | | then return 0.1591893018959897;  // std dev = 0,469, 515,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=169 */
%   | | else if ( enzyme(B, F), proteinclass(B, G) )
%   | | | then return 0.8314620667612714;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( function(A, H), function(B, H) )
%   | | | | then if ( complex(B, I) )
%   | | | | | then if ( phenotype(A, J) )
%   | | | | | | then return 0.16479540009460478;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.2314620667612714;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | else return 0.5814620667612719;  // std dev = 0,433, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | | else if ( phenotype(A, K) )
%   | | | | | then return -0.16853793323872857;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | else return 0.22619890886653518;  // std dev = 0,489, 38,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.5225238410881435;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( location(A, D), location(B, D) )
%   | then return 0.3236669821286438;  // std dev = 0,469, 766,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=465 */
%   | else if ( function(A, E), function(B, E) )
%   | | then if ( location(A, F), location(B, G) )
%   | | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | | then return -0.10870253023773625;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | | else if ( phenotype(B, J), phenotype(A, J) )
%   | | | | | then return 0.6651069935717875;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | | else if ( phenotype(B, K), enzyme(A, L) )
%   | | | | | | then return 0.6079641364289304;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | else if ( complex(A, M), phenotype(A, N) )
%   | | | | | | | then return 0.05368408582807053;  // std dev = 0,426, 28,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | | | | | else return 0.20796413642893008;  // std dev = 0,490, 95,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=38 */
%   | | | else return 0.40683542636450293;  // std dev = 0,477, 59,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=37 */
%   | | else return 0.09896867302190276;  // std dev = 0,453, 383,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=112 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.3927742928882807;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( location(A, D), location(B, D) )
%   | then if ( complex(B, E), complex(A, E) )
%   | | then return 0.5485427546464219;  // std dev = 0,094, 113,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=112 */
%   | | else if ( complex(A, F) )
%   | | | then if ( enzyme(A, G) )
%   | | | | then return 4.7889071915280246E-4;  // std dev = 0,450, 64,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | | else if ( complex(B, H), phenotype(A, I) )
%   | | | | | then return 0.2800790420543693;  // std dev = 0,468, 63,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=40 */
%   | | | | | else if ( phenotype(A, J) )
%   | | | | | | then return 0.08517300410359246;  // std dev = 0,491, 72,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=30 */
%   | | | | | | else if ( proteinclass(B, K), complex(B, L) )
%   | | | | | | | then return -0.028472326241689765;  // std dev = 0,441, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | | | | | else return 0.21338912691903322;  // std dev = 0,493, 67,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=37 */
%   | | | else return 0.25447663373385276;  // std dev = 0,480, 374,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=224 */
%   | else return 0.125973288460125;  // std dev = 0,467, 589,000 (wgt'ed) examples reached here.  /* #neg=384 #pos=205 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.29850198038149095;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( function(A, D), function(B, D) )
%   | then return 0.25235719010613816;  // std dev = 0,439, 696,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=451 */
%   | else if ( phenotype(A, E), phenotype(B, F) )
%   | | then return -0.08831758934346513;  // std dev = 0,377, 62,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | | else if ( proteinclass(B, G), function(A, H) )
%   | | | then return -0.03875483656785457;  // std dev = 0,426, 72,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | | then return -0.1466768928384016;  // std dev = 0,320, 31,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | | else if ( proteinclass(A, K), enzyme(A, L) )
%   | | | | | then if ( proteinclass(M, K), phenotype(M, N) )
%   | | | | | | then if ( location(B, P), location(M, P) )
%   | | | | | | | then return 0.1183756717400227;  // std dev = 0,476, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | | | | | else return 0.35815978635045975;  // std dev = 0,493, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | | | | else return -0.044163510053894565;  // std dev = 0,702, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | else return 0.08593724725669892;  // std dev = 0,477, 465,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=171 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.23321722189777613;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( function(A, D), function(B, D) )
%   | then return 0.1939985483408729;  // std dev = 0,438, 696,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=451 */
%   | else if ( location(A, E), complex(B, F) )
%   | | then return -0.013396069381041544;  // std dev = 0,438, 182,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=51 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return -0.1439510389049441;  // std dev = 0,283, 28,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | | else if ( complex(A, I), enzyme(B, J) )
%   | | | | then if ( proteinclass(A, K) )
%   | | | | | then return 0.5548654999118562;  // std dev = 0,969, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | else if ( location(A, L), location(B, L) )
%   | | | | | | then return 0.2364481702432854;  // std dev = 0,504, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | | | | else return -0.06798190709332134;  // std dev = 0,902, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else if ( location(A, M), enzyme(B, N) )
%   | | | | | then return -0.12314534176934057;  // std dev = 0,385, 33,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | | | else return 0.08247803088963193;  // std dev = 0,476, 395,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=148 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.1874270393397717;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( complex(A, D), complex(B, D) )
%   | then return 0.31394456454845865;  // std dev = 0,101, 115,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=114 */
%   | else if ( complex(A, E), location(A, F) )
%   | | then return 0.019471977997870656;  // std dev = 0,457, 530,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=203 */
%   | | else if ( function(A, G), function(B, G) )
%   | | | then return 0.18082676625863986;  // std dev = 0,455, 314,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=210 */
%   | | | else if ( location(A, H), enzyme(B, I) )
%   | | | | then return -0.057607048435603804;  // std dev = 0,412, 55,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | | | else if ( location(A, J) )
%   | | | | | then if ( phenotype(B, K) )
%   | | | | | | then return -0.02618620486811615;  // std dev = 0,444, 72,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | | | | | else if ( phenotype(A, L) )
%   | | | | | | | then return 0.16361638609197918;  // std dev = 0,485, 51,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
%   | | | | | | | else return 0.07536611864238332;  // std dev = 0,485, 173,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=69 */
%   | | | | | else return 0.10936516064623163;  // std dev = 0,473, 45,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.15431037802711225;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( complex(A, D), complex(B, D) )
%   | then return 0.24986093273542095;  // std dev = 0,100, 115,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=114 */
%   | else if ( phenotype(A, E), phenotype(B, E) )
%   | | then return 0.26181651176559606;  // std dev = 0,411, 47,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=35 */
%   | | else if ( phenotype(A, F), complex(A, G) )
%   | | | then return -0.04267660141117021;  // std dev = 0,437, 263,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=83 */
%   | | | else if ( function(A, H), complex(B, I) )
%   | | | | then if ( enzyme(B, J), proteinclass(A, K) )
%   | | | | | then if ( phenotype(A, L) )
%   | | | | | | then return -0.12183498590698737;  // std dev = 0,712, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.43596232339295277;  // std dev = 0,999, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | else return 0.0063784345869268505;  // std dev = 0,464, 300,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=122 */
%   | | | | else if ( function(A, M), function(B, M) )
%   | | | | | then return 0.17576185343355782;  // std dev = 0,446, 253,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=174 */
%   | | | | | else return 0.04897371961922902;  // std dev = 0,471, 368,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=136 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.1295753122809483;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( function(A, D), function(B, D) )
%   | then return 0.09091381966164347;  // std dev = 0,427, 696,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=451 */
%   | else if ( location(A, E), phenotype(B, F) )
%   | | then return -0.03791277121458976;  // std dev = 0,422, 152,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=39 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return -0.10847552628420054;  // std dev = 0,319, 35,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else if ( enzyme(A, I), location(A, J) )
%   | | | | then if ( complex(B, K) )
%   | | | | | then return 0.4732725327145967;  // std dev = 0,993, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else if ( location(B, L), complex(A, M) )
%   | | | | | | then return -0.03626671293192282;  // std dev = 0,420, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | | | | else if ( proteinclass(A, N) )
%   | | | | | | | then return 0.2729483769624552;  // std dev = 0,479, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | | | | | else return 0.06814311538459139;  // std dev = 0,481, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | | else return 0.03510401742530612;  // std dev = 0,469, 427,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=153 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then return 0.11055711283622811;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( phenotype(B, D), phenotype(A, D) )
%   | then return 0.17609739794339763;  // std dev = 0,321, 85,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=72 */
%   | else if ( proteinclass(B, E), function(A, F) )
%   | | then return -0.016882452416545377;  // std dev = 0,443, 199,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=81 */
%   | | else if ( complex(A, G), complex(B, G) )
%   | | | then return 0.19749779180978477;  // std dev = 0,184, 69,000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | | else if ( complex(A, H), location(A, I) )
%   | | | | then return -0.01512241440499741;  // std dev = 0,452, 410,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=147 */
%   | | | | else if ( complex(B, J), function(A, K) )
%   | | | | | then if ( function(L, K), complex(L, M) )
%   | | | | | | then return -0.032110023623254824;  // std dev = 0,460, 156,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=63 */
%   | | | | | | else if ( phenotype(B, N) )
%   | | | | | | | then return 0.27021703116999457;  // std dev = 0,488, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | | | | | else return 0.03239368571282897;  // std dev = 0,472, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | | | else return 0.09594144311105147;  // std dev = 0,457, 412,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=226 */
Results
   AUC ROC   = 0.667016
   AUC PR    = 0.692071
   CLL	      = -0.65149
   Precision = 0.69353 at threshold = 0.5
   Recall    = 0.483897
   F1        = 0.570051


Total learning time: 32.979 seconds
Total inference time: 3.113 seconds
AUC ROC: 0.667016


Refined model AUC ROC: 0.667016


Dataset: twitter->yeast, Fold: 3, Type: transfer, Time: 00:15:03
{'Inference time': 3.113, 'CLL': -0.65149, 'Parameter Learning results': {'Inference time': 2.206, 'CLL': -0.692576, 'F1': 0.587032, 'AUC ROC': 0.580036, 'Recall': 0.605861, 'AUC PR': 0.567652, 'Precision': [0.569338, 0.5], 'Learning time': 43.073}, 'F1': 0.570051, 'AUC ROC': 0.667016, 'Mapping results': {'Finding best mapping': 0.013081550598144531, 'Generating mappings time': 0.04441118240356445, 'Total time': 3.5281219482421875, 'Possible mappings': 98, 'Knowledge compiling time': 0.0549464225769043, 'Generating paths time': 3.4156763553619385}, 'Recall': 0.483897, 'AUC PR': 0.692071, 'Precision': [0.69353, 0.5], 'Learning time': 76.05199999999999}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.8502124271630025;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( location(B, D), location(A, D) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then return 0.13939893509951237;  // std dev = 0,450, 64,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | else if ( enzyme(B, G) )
%   | | | then if ( complex(A, H) )
%   | | | | then if ( complex(B, I) )
%   | | | | | then return 0.25814893509951237;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | | | else return 0.524815601766179;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | | else return 0.265556342506919;  // std dev = 0,491, 54,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | | else if ( complex(A, J) )
%   | | | | then if ( function(A, K), function(B, K) )
%   | | | | | then return 0.4692600462106244;  // std dev = 0,487, 108,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=66 */
%   | | | | | else return 0.2102616111558493;  // std dev = 0,478, 71,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | | | | else return 0.4897278824679294;  // std dev = 0,482, 323,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=204 */
%   | else return 0.20730147747239058;  // std dev = 0,477, 590,000 (wgt'ed) examples reached here.  /* #neg=384 #pos=206 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( location(B, C), location(A, C) )
%   then return 0.40149177160369093;  // std dev = 0,474, 780,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=478 */
%   else if ( function(A, D), function(B, D) )
%   | then if ( location(A, E), location(B, F) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return -0.08567123904530832;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else if ( phenotype(A, I), phenotype(B, J) )
%   | | | | then if ( phenotype(A, J) )
%   | | | | | then return 0.6881382847642155;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | | else if ( location(K, F), phenotype(K, I) )
%   | | | | | | then return 0.08099542762135832;  // std dev = 0,433, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | | | | else return 0.6090108331366506;  // std dev = 0,875, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else if ( phenotype(B, L), enzyme(A, M) )
%   | | | | | then return 0.6309954276213584;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.19548140892976862;  // std dev = 0,481, 107,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=39 */
%   | | else return 0.4643287609546916;  // std dev = 0,482, 60,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=38 */
%   | else return 0.12498000321400698;  // std dev = 0,455, 384,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=113 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.6259000727895161;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( location(A, D), location(B, D) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then return 0.06012273947449347;  // std dev = 0,450, 64,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | else if ( phenotype(A, G), phenotype(B, G) )
%   | | | then return 0.4389275406043541;  // std dev = 0,446, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else if ( complex(A, H) )
%   | | | | then if ( proteinclass(A, I), phenotype(B, J) )
%   | | | | | then return -0.02070111858349096;  // std dev = 0,426, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | | | else if ( proteinclass(B, K), complex(B, L) )
%   | | | | | | then return 0.09723508500178049;  // std dev = 0,472, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | | | | else if ( function(A, M), function(B, M) )
%   | | | | | | | then return 0.3120637797729395;  // std dev = 0,489, 89,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=53 */
%   | | | | | | | else return 0.18392844892854535;  // std dev = 0,493, 75,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=32 */
%   | | | | else return 0.31610742080065696;  // std dev = 0,488, 365,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=218 */
%   | else return 0.15227563470220618;  // std dev = 0,471, 590,000 (wgt'ed) examples reached here.  /* #neg=384 #pos=206 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( location(A, C), location(B, C) )
%   then return 0.25479557155514343;  // std dev = 0,459, 780,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=478 */
%   else if ( location(A, D) )
%   | then return 0.10843775225942014;  // std dev = 0,463, 516,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=170 */
%   | else if ( function(A, E), function(B, E) )
%   | | then if ( complex(B, F) )
%   | | | then if ( proteinclass(B, G) )
%   | | | | then return 0.05966585196971267;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.22633251863637938;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4882372805411413;  // std dev = 0,426, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | else if ( proteinclass(A, H), complex(B, I) )
%   | | | then return 0.4550891887784046;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( phenotype(A, J) )
%   | | | | then return -0.011577477888262078;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else if ( enzyme(B, K) )
%   | | | | | then return 0.7884225221117379;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.11195193387644353;  // std dev = 0,468, 34,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then return 0.26332302913902533;  // std dev = 0,436, 712,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=466 */
%   else if ( location(A, D), complex(B, E) )
%   | then return -0.019984468427206088;  // std dev = 0,440, 182,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=51 */
%   | else if ( phenotype(A, F), enzyme(A, G) )
%   | | then return -0.16746734918803985;  // std dev = 0,287, 28,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | else if ( location(A, H), phenotype(B, I) )
%   | | | then return -0.033075313937275225;  // std dev = 0,440, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else if ( location(A, J), enzyme(B, K) )
%   | | | | then return 0.008015668124462522;  // std dev = 0,469, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | | else if ( location(B, L), phenotype(A, M) )
%   | | | | | then if ( proteinclass(B, N) )
%   | | | | | | then return 0.3927288015343208;  // std dev = 0,462, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | | | | else if ( location(A, P) )
%   | | | | | | | then return 0.17960560801138836;  // std dev = 0,499, 60,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=29 */
%   | | | | | | | else return -0.23885692412941015;  // std dev = 0,072, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0.08521077067447572;  // std dev = 0,474, 278,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=101 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then return 0.20264305405440308;  // std dev = 0,434, 712,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=466 */
%   else if ( phenotype(A, D), phenotype(B, E) )
%   | then return -0.102311359979335;  // std dev = 0,376, 62,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | else if ( location(A, F), proteinclass(B, G) )
%   | | then return -0.06278992764054864;  // std dev = 0,422, 67,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.01239077556485738;  // std dev = 0,446, 91,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=27 */
%   | | | else if ( proteinclass(A, J) )
%   | | | | then if ( complex(A, K), enzyme(B, L) )
%   | | | | | then return 0.7570769058654974;  // std dev = 0,045, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else if ( proteinclass(M, J), phenotype(M, N) )
%   | | | | | | then if ( phenotype(A, P), enzyme(B, Q) )
%   | | | | | | | then return -0.2661608072739447;  // std dev = 0,123, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | | | else return 0.2244343809202977;  // std dev = 0,499, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | | | | else return -0.039174710994855;  // std dev = 0,403, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | | else return 0.05059602459062485;  // std dev = 0,470, 360,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=129 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.30426151628132875;  // std dev = 0,091, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( complex(A, D), location(A, E) )
%   | then return 0.023290868771572774;  // std dev = 0,458, 530,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=203 */
%   | else if ( function(A, F), function(B, F) )
%   | | then return 0.19228413660158084;  // std dev = 0,454, 319,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=214 */
%   | | else if ( location(A, G), enzyme(B, H) )
%   | | | then return -0.07441213093457001;  // std dev = 0,412, 55,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | | else if ( phenotype(B, I), location(A, J) )
%   | | | | then return -0.03542263991547306;  // std dev = 0,447, 72,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | | | else if ( enzyme(B, K) )
%   | | | | | then return 0.39066040408253677;  // std dev = 0,374, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | | else if ( proteinclass(A, L) )
%   | | | | | | then if ( proteinclass(M, L), phenotype(M, N) )
%   | | | | | | | then return 0.1831606181316417;  // std dev = 0,487, 29,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | | | | | | else return -0.14568991730388833;  // std dev = 0,822, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | | else return 0.06485040828619869;  // std dev = 0,480, 229,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=90 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.24303065801618756;  // std dev = 0,091, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( function(A, D), function(B, D) )
%   | then if ( complex(A, E) )
%   | | then if ( phenotype(B, F), phenotype(A, F) )
%   | | | then return 0.3351417733131574;  // std dev = 0,370, 32,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | | else if ( enzyme(A, G), location(B, H) )
%   | | | | then return -0.11027754252211214;  // std dev = 0,422, 54,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | | else if ( proteinclass(A, I), enzyme(B, J) )
%   | | | | | then return 0.5554549486986621;  // std dev = 0,202, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else if ( complex(B, K) )
%   | | | | | | then return 0.07574165863466814;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=45 */
%   | | | | | | else if ( enzyme(B, L) )
%   | | | | | | | then return 0.2665681146531189;  // std dev = 0,439, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | | | | | else return -0.08587010463114601;  // std dev = 0,474, 81,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
%   | | else return 0.14539833373334424;  // std dev = 0,454, 319,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=214 */
%   | else return 0.018280917305852434;  // std dev = 0,456, 659,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=219 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.2002375829588721;  // std dev = 0,091, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( complex(A, D), phenotype(A, E) )
%   | then return -0.015308113661153179;  // std dev = 0,437, 298,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=110 */
%   | else if ( complex(B, F), function(A, G) )
%   | | then if ( phenotype(A, H), enzyme(B, I) )
%   | | | then return 0.2355927751489221;  // std dev = 0,437, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else if ( proteinclass(A, J) )
%   | | | | then if ( enzyme(B, K) )
%   | | | | | then return 0.4308491296289272;  // std dev = 0,958, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | else if ( location(A, L) )
%   | | | | | | then if ( function(B, G), proteinclass(B, M) )
%   | | | | | | | then return 0.372882429507977;  // std dev = 0,804, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | | else return -0.019197547113871533;  // std dev = 0,461, 46,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | | | | | else return 0.5278023568704958;  // std dev = 0,074, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return -0.030878506648595254;  // std dev = 0,459, 241,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=95 */
%   | | else return 0.08763168359815093;  // std dev = 0,461, 632,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=318 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.1692119475375172;  // std dev = 0,091, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( function(A, D), function(B, D) )
%   | then if ( phenotype(A, E), phenotype(B, E) )
%   | | then return 0.2160195762415338;  // std dev = 0,398, 43,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=35 */
%   | | else if ( phenotype(A, F), complex(A, G) )
%   | | | then return -0.04222680847801693;  // std dev = 0,454, 132,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=51 */
%   | | | else if ( complex(B, H) )
%   | | | | then if ( location(A, I), phenotype(A, J) )
%   | | | | | then return 0.12882353558356344;  // std dev = 0,426, 25,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | | | | | else if ( proteinclass(B, K), proteinclass(A, L) )
%   | | | | | | then return 0.2438394763870195;  // std dev = 0,416, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | | | | else if ( phenotype(B, M), location(A, N) )
%   | | | | | | | then return -0.014187331063900474;  // std dev = 0,475, 73,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=36 */
%   | | | | | | | else return -0.09549783339747903;  // std dev = 0,471, 51,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | | | else return 0.13430632127458333;  // std dev = 0,440, 255,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=176 */
%   | else return 0.0044094623307366415;  // std dev = 0,454, 659,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=219 */
Results
   AUC ROC   = 0.659792
   AUC PR    = 0.687567
   CLL	      = -0.654935
   Precision = 0.675545 at threshold = 0.5
   Recall    = 0.441922
   F1        = 0.534312


Total learning time: 31.488 seconds
Total inference time: 3.656 seconds
AUC ROC: 0.659792


Dataset: twitter->yeast, Fold: 3, Type: scratch, Time: 00:15:38
{'Inference time': 3.656, 'CLL': -0.654935, 'F1': 0.534312, 'AUC ROC': 0.659792, 'Recall': 0.441922, 'AUC PR': 0.687567, 'Precision': [0.675545, 0.5], 'Learning time': 31.488}


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> proteinclass(A,B)', 'tweets(A,B) -> location(A,B)'] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
0;true,false;location(A, E).;false;true
0;true;location(A, D), location(B, D).;false;true
0;false,false,true;location(B, I).;false;false
0;false,false,false;location(B, J).;false;false
0;false;location(A, G), location(B, G).;false;true
0;true,false,false;location(B, F).;false;false
0;false,false;location(A, H).;true;true
1;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
1;true,false;location(A, E).;false;true
1;true;location(A, D), location(B, D).;false;true
1;false,false,true;location(B, I).;false;false
1;false,false,false;location(B, J).;false;false
1;false;location(B, G), location(A, G).;false;true
1;true,false,false;location(B, F).;false;false
1;false,false;location(A, H).;true;true
2;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
2;true,false;location(A, E), location(B, F).;false;true
2;true;location(B, D), location(A, D).;false;true
2;true,false,false,false;location(A, H).;false;false
2;false,false,true;location(B, K).;false;false
2;false;location(A, I), location(B, I).;false;true
2;true,false,false;location(B, G).;false;true
2;false,false;location(A, J).;true;false
3;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
3;true,false;location(A, E), location(B, F).;false;true
3;true;location(B, D), location(A, D).;false;true
3;true,false,false,false;location(A, H).;false;false
3;false,false,true;location(B, K).;false;false
3;false;location(B, I), location(A, I).;false;true
3;true,false,false;location(B, G).;false;true
3;false,false;location(A, J).;true;false
4;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
4;true,false;location(A, E), location(B, F).;false;true
4;true;location(A, D), location(B, D).;false;true
4;true,false,false,false;location(A, H).;false;false
4;false,false,true;location(B, K).;false;false
4;false;location(B, I), location(A, I).;false;true
4;true,false,false;location(B, G).;false;true
4;false,false;location(A, J).;true;false
5;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
5;true,false;location(B, E), location(A, F).;false;true
5;false,true,false;location(A, I).;false;false
5;false,true;location(A, H).;false;true
5;true;location(A, D), location(B, D).;false;true
5;false;location(B, H).;true;true
5;true,false,false;location(B, G).;false;false
5;false,false;location(A, J).;false;false
6;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
6;true,false;location(A, E), location(B, F).;false;true
6;false,true,false;location(A, I).;false;false
6;false,true;location(A, H).;false;true
6;true;location(B, D), location(A, D).;false;true
6;false;location(B, H).;true;true
6;true,false,false;location(B, G).;false;false
6;false,false;location(A, J).;false;false
7;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
7;false,true,false;location(A, G).;false;false
7;true,true;location(A, D).;false;true
7;true;location(B, D).;true;false
7;false,true;location(A, F).;false;true
7;false,false;location(A, H).;false;false
7;true,true,false;location(A, E).;false;false
7;false;location(B, F).;true;true
8;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
8;true,false;location(A, E), location(B, F).;false;true
8;false,true,false;location(A, I).;false;false
8;false,true;location(A, H).;false;true
8;true;location(B, D), location(A, D).;false;true
8;false;location(B, H).;true;true
8;true,false,false;location(B, G).;false;false
8;false,false;location(A, J).;false;false
9;;interaction(A, B) :- proteinclass(A, C), proteinclass(B, C).;true;true
9;true,false;location(A, E), location(B, F).;false;true
9;false,true,false;location(A, I).;false;false
9;false,true;location(A, H).;false;true
9;true;location(A, D), location(B, D).;false;true
9;false;location(B, H).;true;true
9;true,false,false;location(B, G).;false;false
9;false,false;location(A, J).;false;false
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.8025933795439567;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(A, E), location(B, E) )
%   | then return 0.422887227110527;  // std dev = 13,359, 726,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=410 */
%   | else if ( location(A, F) )
%   | | then if ( location(B, G) )
%   | | | then return 0.25026030400902083;  // std dev = 10,136, 431,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=169 */
%   | | | else return 0.28790100121521583;  // std dev = 5,445, 121,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=52 */
%   | | else if ( location(B, H) )
%   | | | then return 0.36309943014901813;  // std dev = 5,025, 101,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=51 */
%   | | | else return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.6749928282743806;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, E), location(A, E) )
%   | then return 0.3632651906197423;  // std dev = 13,359, 726,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=410 */
%   | else if ( location(A, F) )
%   | | then if ( location(B, G) )
%   | | | then return 0.21698750157995508;  // std dev = 10,136, 431,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=169 */
%   | | | else return 0.24912413616867224;  // std dev = 5,445, 121,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=52 */
%   | | else if ( location(B, H) )
%   | | | then return 0.31292472305954394;  // std dev = 5,025, 101,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=51 */
%   | | | else return 0.2616318086752123;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.5243568433454531;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(A, E), location(B, E) )
%   | then return 0.29851074387917914;  // std dev = 13,359, 726,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=410 */
%   | else if ( location(A, F) )
%   | | then if ( location(B, G) )
%   | | | then return 0.18340688452546972;  // std dev = 10,136, 431,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=169 */
%   | | | else return 0.2092898548229491;  // std dev = 5,445, 121,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=52 */
%   | | else return 0.2563701800266616;  // std dev = 5,242, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.3941295564832444;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, E), location(A, E) )
%   | then return 0.2363176237846338;  // std dev = 13,359, 726,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=410 */
%   | else if ( location(A, F) )
%   | | then if ( location(B, G) )
%   | | | then return 0.15150268371943176;  // std dev = 10,136, 431,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=169 */
%   | | | else return 0.1712339598537786;  // std dev = 5,445, 121,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=52 */
%   | | else return 0.20610801939342588;  // std dev = 5,242, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.29968717683406026;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, E), location(A, E) )
%   | then return 0.1822545418609436;  // std dev = 13,359, 726,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=410 */
%   | else if ( location(A, F) )
%   | | then if ( location(B, G) )
%   | | | then return 0.12274557072066919;  // std dev = 10,136, 431,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=169 */
%   | | | else return 0.13708194695906042;  // std dev = 5,445, 121,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=52 */
%   | | else return 0.16161247626758962;  // std dev = 5,242, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2343670862132291;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, E) )
%   | then if ( location(A, E) )
%   | | then return 0.13838971634281047;  // std dev = 13,359, 726,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=410 */
%   | | else if ( location(A, F) )
%   | | | then return 0.09791655015204913;  // std dev = 10,136, 431,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=169 */
%   | | | else return 0.1273828406550366;  // std dev = 5,025, 101,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=51 */
%   | else if ( location(A, G) )
%   | | then return 0.10792087942151267;  // std dev = 5,445, 121,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=52 */
%   | | else return 0.09276932495105397;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.18858213257239667;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, E) )
%   | then if ( location(A, E) )
%   | | then return 0.1042494785869554;  // std dev = 13,359, 726,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=410 */
%   | | else if ( location(A, F) )
%   | | | then return 0.07718349929407871;  // std dev = 10,136, 431,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=169 */
%   | | | else return 0.0970139860744741;  // std dev = 5,025, 101,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=51 */
%   | else if ( location(A, G) )
%   | | then return 0.08392846615247017;  // std dev = 5,445, 121,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=52 */
%   | | else return 0.07133842231529977;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D) )
%   | then if ( location(A, D) )
%   | | then return 0.15547760632357;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, E) )
%   | then if ( location(A, E) )
%   | | then return 0.0782663590107801;  // std dev = 13,359, 726,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=410 */
%   | | else if ( location(A, F) )
%   | | | then return 0.06029847726884973;  // std dev = 10,136, 431,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=169 */
%   | | | else return 0.07339028121583846;  // std dev = 5,025, 101,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=51 */
%   | else if ( location(A, G) )
%   | | then return 0.06470388108108938;  // std dev = 5,445, 121,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=52 */
%   | | else return 0.05450728884720471;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.13075154824103719;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, E) )
%   | then if ( location(A, E) )
%   | | then return 0.05870336479660253;  // std dev = 13,359, 726,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=410 */
%   | | else if ( location(A, F) )
%   | | | then return 0.04679667834442611;  // std dev = 10,136, 431,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=169 */
%   | | | else return 0.05530374328359808;  // std dev = 5,025, 101,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=51 */
%   | else if ( location(A, G) )
%   | | then return 0.049579509064677244;  // std dev = 5,445, 121,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=52 */
%   | | else return 0.04146574824171337;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( proteinclass(A, C), proteinclass(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.11173701477636547;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, E) )
%   | then if ( location(A, E) )
%   | | then return 0.044039067682095256;  // std dev = 13,359, 726,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=410 */
%   | | else if ( location(A, F) )
%   | | | then return 0.03614205648133985;  // std dev = 10,136, 431,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=169 */
%   | | | else return 0.04158331654756478;  // std dev = 5,025, 101,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=51 */
%   | else if ( location(A, G) )
%   | | then return 0.03782912295504773;  // std dev = 5,445, 121,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=52 */
%   | | else return 0.03145077790860642;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
Results
   AUC ROC   = 0.588608
   AUC PR    = 0.575311
   CLL	      = -0.680115
   Precision = 0.577761 at threshold = 0.5
   Recall    = 0.618669
   F1        = 0.597516


Total learning time: 10.996 seconds
Total inference time: 2.588 seconds
AUC ROC: 0.588608


Structure after Parameter Learning
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'false,false,true': 'location(B, G)', 'true': 'location(A, D), location(B, D)', 'false,false,false': 'location(B, H)', 'false': 'location(A, E), location(B, E)', 'false,false': 'location(A, F)'}, {'false,false,true,true': [10.136, 262, 169], 'true,false': [0.0, 0, 0], 'false,false,false,true': [5.025, 50, 51], 'false,true': [13.359, 316, 410], 'false,false,false,false': [1.491, 5, 4], 'true,true': [0.972, 1, 17], 'false,false,true,false': [5.445, 69, 52]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'false,false,true': 'location(B, G)', 'true': 'location(A, D), location(B, D)', 'false,false,false': 'location(B, H)', 'false': 'location(B, E), location(A, E)', 'false,false': 'location(A, F)'}, {'false,false,true,true': [10.136, 262, 169], 'true,false': [0.0, 0, 0], 'false,false,false,true': [5.025, 50, 51], 'false,true': [13.359, 316, 410], 'false,false,false,false': [1.491, 5, 4], 'true,true': [0.972, 1, 17], 'false,false,true,false': [5.445, 69, 52]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'false,false,true': 'location(B, G)', 'false': 'location(A, E), location(B, E)', 'true': 'location(B, D), location(A, D)', 'false,false': 'location(A, F)'}, {'false,false,true,true': [10.136, 262, 169], 'true,false': [0.0, 0, 0], 'false,true': [13.359, 316, 410], 'false,false,false': [5.242, 55, 55], 'true,true': [0.972, 1, 17], 'false,false,true,false': [5.445, 69, 52]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'false,false,true': 'location(B, G)', 'false': 'location(B, E), location(A, E)', 'true': 'location(B, D), location(A, D)', 'false,false': 'location(A, F)'}, {'false,false,true,true': [10.136, 262, 169], 'true,false': [0.0, 0, 0], 'false,true': [13.359, 316, 410], 'false,false,false': [5.242, 55, 55], 'true,true': [0.972, 1, 17], 'false,false,true,false': [5.445, 69, 52]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'false,false,true': 'location(B, G)', 'false': 'location(B, E), location(A, E)', 'true': 'location(A, D), location(B, D)', 'false,false': 'location(A, F)'}, {'false,false,true,true': [10.136, 262, 169], 'true,false': [0.0, 0, 0], 'false,true': [13.359, 316, 410], 'false,false,false': [5.242, 55, 55], 'true,true': [0.972, 1, 17], 'false,false,true,false': [5.445, 69, 52]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'false,true,false': 'location(A, F)', 'false,true': 'location(A, E)', 'true': 'location(A, D), location(B, D)', 'false': 'location(B, E)', 'false,false': 'location(A, G)'}, {'true,false': [0.0, 0, 0], 'false,true,false,false': [5.025, 50, 51], 'false,true,false,true': [10.136, 262, 169], 'false,false,true': [5.445, 69, 52], 'true,true': [0.972, 1, 17], 'false,false,false': [1.491, 5, 4], 'false,true,true': [13.359, 316, 410]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'false,true,false': 'location(A, F)', 'false,true': 'location(A, E)', 'true': 'location(B, D), location(A, D)', 'false': 'location(B, E)', 'false,false': 'location(A, G)'}, {'true,false': [0.0, 0, 0], 'false,true,false,false': [5.025, 50, 51], 'false,true,false,true': [10.136, 262, 169], 'false,false,true': [5.445, 69, 52], 'true,true': [0.972, 1, 17], 'false,false,false': [1.491, 5, 4], 'false,true,true': [13.359, 316, 410]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'false,true,false': 'location(A, F)', 'true,true': 'location(A, D)', 'true': 'location(B, D)', 'false,true': 'location(A, E)', 'false': 'location(B, E)', 'false,false': 'location(A, G)'}, {'true,false': [0.0, 0, 0], 'false,true,false,false': [5.025, 50, 51], 'false,true,false,true': [10.136, 262, 169], 'false,false,true': [5.445, 69, 52], 'true,true,true': [0.972, 1, 17], 'false,false,false': [1.491, 5, 4], 'true,true,false': [0.0, 0, 0], 'false,true,true': [13.359, 316, 410]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'false,true,false': 'location(A, F)', 'false,true': 'location(A, E)', 'true': 'location(B, D), location(A, D)', 'false': 'location(B, E)', 'false,false': 'location(A, G)'}, {'true,false': [0.0, 0, 0], 'false,true,false,false': [5.025, 50, 51], 'false,true,false,true': [10.136, 262, 169], 'false,false,true': [5.445, 69, 52], 'true,true': [0.972, 1, 17], 'false,false,false': [1.491, 5, 4], 'false,true,true': [13.359, 316, 410]}]
['interaction(A, B)', {'': 'proteinclass(A, C), proteinclass(B, C)', 'false,true,false': 'location(A, F)', 'false,true': 'location(A, E)', 'true': 'location(A, D), location(B, D)', 'false': 'location(B, E)', 'false,false': 'location(A, G)'}, {'true,false': [0.0, 0, 0], 'false,true,false,false': [5.025, 50, 51], 'false,true,false,true': [10.136, 262, 169], 'false,false,true': [5.445, 69, 52], 'true,true': [0.972, 1, 17], 'false,false,false': [1.491, 5, 4], 'false,true,true': [13.359, 316, 410]}]
{'': [0.05246913580246885, 0.24996677989186356], 'false,false,true': [0.23836004328142438, 0.2450652277849875], 'true': [0.05246913580246885, nan], 'false,false,false': [0.24997549259876486, 0.2469135802469134], 'false': [0.24580895354748797, 0.2430974525606765], 'false,false': [0.24007233249317658, 0.24999999999999992]}
{'': [0.052469135802469445, 0.24820935838770655], 'false,false,true': [0.23836004328142288, 0.2450652277849875], 'true': [0.052469135802469445, nan], 'false,false,false': [0.2499754925987656, 0.24691358024691354], 'false': [0.24580895354750537, 0.2426481763833818], 'false,false': [0.24000659968146093, 0.2499226208796494]}
{'': [0.05246913580246934, 0.24650406643573217], 'false,false,true': [0.238360043281417, 0.2450652277849867], 'false': [0.2458089535474942, 0.24221738525687717], 'true': [0.05246913580246934, nan], 'false,false': [0.23994449936465628, 0.2498476098859317]}
{'': [0.052469135802468925, 0.24524159356340597], 'false,false,true': [0.23836004328142618, 0.24506522778498777], 'false': [0.24580895354750504, 0.241897683916015], 'true': [0.052469135802468925, nan], 'false,false': [0.23989647299873304, 0.2498321038816162]}
{'': [0.052469135802469064, 0.24448187824338297], 'false,false,true': [0.23836004328141783, 0.2450652277849875], 'false': [0.24580895354748974, 0.24169626332049324], 'true': [0.052469135802469064, nan], 'false,false': [0.23986501652166978, 0.24982162695139884]}
{'': [0.05246913580246916, 0.24408697303776586], 'false,true,false': [0.23836004328142138, 0.2499754925987652], 'false,true': [0.24580895354749144, 0.2406987765614839], 'true': [0.05246913580246916, nan], 'false': [0.24394479634132038, 0.24520798362392102], 'false,false': [0.2450652277849868, 0.2469135802469136]}
{'': [0.05246913580246915, 0.24389659028662056], 'false,true,false': [0.2383600432814202, 0.24997549259876414], 'false,true': [0.245808953547498, 0.24062571619386794], 'true': [0.05246913580246915, nan], 'false': [0.2437495043434203, 0.2452034046431783], 'false,false': [0.2450652277849881, 0.2469135802469136]}
{'': [0.05246913580246913, 0.24381025372957144], 'false,true,false': [0.23836004328142502, 0.24997549259876412], 'false,true': [0.24580895354749488, 0.24059159372539785], 'true': [0.05246913580246913, nan], 'true,true': [0.05246913580246913, nan], 'false': [0.24366106717845673, 0.24519989028484165], 'false,false': [0.24506522778498785, 0.24691358024691348]}
{'': [0.05246913580246912, 0.24377194663963853], 'false,true,false': [0.23836004328142124, 0.24997549259876503], 'false,true': [0.24580895354749108, 0.24057636298536136], 'true': [0.05246913580246912, nan], 'false': [0.24362197476060019, 0.24519743279341133], 'false,false': [0.24506522778498807, 0.24691358024691354]}
{'': [0.05246913580246914, 0.24375504524720545], 'false,true,false': [0.23836004328142016, 0.24997549259876461], 'false,true': [0.24580895354749677, 0.24056978577173782], 'true': [0.05246913580246914, nan], 'false': [0.24360484212084083, 0.24519581219199285], 'false,false': [0.24506522778498702, 0.2469135802469136]}
******************************************
Performing Theory Revision
******************************************
Transfer was not sufficient.
Error in experiment of twitter->yeast


Start learning from source dataset


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048793;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.12544463852839202;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360676;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.1015963294878365;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.0926912761892606;  // std dev = 1,41e-07, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839678;  // std dev = 9,88e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07877675473109143;  // std dev = 4,21e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07324622576333706;  // std dev = 8,43e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420308;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06419184008202611;  // std dev = 6,99e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */


Predicates from source: ['workedunder(person,person).', 'movie(movie,person).', 'actor(person).', 'director(person).'] 



Best mapping found: ['movie(A,B) -> publication(A,B)', 'workedunder(A,B) -> advisedby(A,B)', 'actor(A) -> student(A)', 'director(A) -> professor(A)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.535568289938222;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.14185106490048777;  // std dev = 1,05e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.4572074133792135;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.36893705839760765;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.28527019316610924;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.21559914934332675;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.09269127618926093;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.16177893311781763;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.08518475138839683;  // std dev = 1,58e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.12156320581776346;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.09179048401490923;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.06970499337531842;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.053217952626247136;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.0641918400820262;  // std dev = 7,45e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
Results
   AUC ROC   = 0.949704
   AUC PR    = 0.939729
   CLL	      = -0.273854
   Precision = 0.866667 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.928571


Total learning time: 5.161 seconds
Total inference time: 0.662 seconds
AUC ROC: 0.949704


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.05e-08, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [5.16e-08, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.67e-08, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [4.21e-08, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.29e-08, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.58e-08, 25, 0], 'true,true': [2.11e-08, 0, 14]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [7.45e-09, 25, 0], 'true,true': [0.0, 0, 14]}]
{'': [0.17283950617284127, 4.440892098500626e-18], 'true': [-2.5376526277146434e-16, 0.21852237252861578]}
{'': [0.16527937223485065, -4.440892098500626e-18], 'true': [1.9032394707859825e-16, 0.21852237252861595]}
{'': [0.15798655603348136, 1.1102230246251566e-17], 'true': [-2.5376526277146434e-16, 0.21852237252861598]}
{'': [0.15428574723631744, -4.440892098500626e-18], 'true': [1.2688263138573217e-16, 0.21852237252861606]}
{'': [0.15290559825609437, 6.661338147750939e-18], 'true': [-3.172065784643304e-17, 0.218522372528616]}
{'': [0.1524070085560816, 9.992007221626408e-18], 'true': [3.172065784643304e-17, 0.21852237252861603]}
{'': [0.15220468125189954, -1.1102230246251566e-18], 'true': [-3.172065784643304e-17, 0.218522372528616]}
{'': [0.15209727309240345, -1.1102230246251566e-18], 'true': [0.0, 0.21852237252861603]}
{'': [0.15201547471739796, -4.440892098500626e-18], 'true': [-1.9825411154020653e-17, 0.21852237252861606]}
{'': [0.15193648071008423, 2.220446049250313e-18], 'true': [0.0, 0.21852237252861603]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else if ( publication(H, B) )
%   | | | | then if ( tempadvisedby(I, B) )
%   | | | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.14185106490048777;  // std dev = 1,05e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.1771985653050586;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( inphase(A, G), inphase(E, G) )
%   | | | | then return 0.07769635804062927;  // std dev = 0,786, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.5765998742001945;  // std dev = 0,919, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.786424204891965;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.1314431676465775;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.5634658750306112;  // std dev = 0,865, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.15287984713060612;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( inphase(A, G), inphase(E, G) )
%   | | | | then return 0.06646712977737634;  // std dev = 0,782, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.4625904681178872;  // std dev = 0,929, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.62836893179253;  // std dev = 0,103, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.10944121048668624;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.44859261720652943;  // std dev = 0,858, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.01040140851628284;  // std dev = 0,738, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.1663973046424418;  // std dev = 0,837, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else if ( publication(H, B) )
%   | | | | then if ( tempadvisedby(I, B) )
%   | | | | | then return 0.3666348679303928;  // std dev = 0,957, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then return 0.44961027660149133;  // std dev = 0,080, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.24920181933415578;  // std dev = 1,080, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.14910412685162935;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( inphase(A, G), inphase(D, G) )
%   | | | | then return 0.0358574881265921;  // std dev = 0,712, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.28080348869338173;  // std dev = 0,967, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, A), projectmember(I, B) )
%   | | | then return 0.46522140789553984;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.046558423850852904;  // std dev = 0,802, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.26510636942488713;  // std dev = 0,842, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926093;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.13124217564806792;  // std dev = 0,040, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.019199213184032705;  // std dev = 0,672, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.22257276367453233;  // std dev = 0,986, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B), publication(I, A) )
%   | | | then return 0.35330095270488365;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.036956348073181024;  // std dev = 0,802, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.20370028832430384;  // std dev = 0,844, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839683;  // std dev = 1,58e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.11704801562971334;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( inphase(A, G), inphase(D, G) )
%   | | | | then return 0.014772334368250553;  // std dev = 0,667, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.17300720046135823;  // std dev = 0,987, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, A), projectmember(I, B) )
%   | | | then return 0.27730651493180336;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.02920389489328303;  // std dev = 0,801, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.1589998700441229;  // std dev = 0,847, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.10552683960163102;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, E) )
%   | | | | then return 0.003771252113423426;  // std dev = 0,636, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.14236647406547473;  // std dev = 0,999, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.2127172161346413;  // std dev = 0,044, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.02299785144123928;  // std dev = 0,801, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.11627568463831865;  // std dev = 0,848, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.09600585892542891;  // std dev = 0,030, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.0031206262315211647;  // std dev = 0,636, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.1131253711462479;  // std dev = 0,996, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.17934678075053762;  // std dev = 0,038, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.01806206546037083;  // std dev = 0,801, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.0920947537916897;  // std dev = 0,849, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.009204770534840631;  // std dev = 0,165, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return 0.0025814143960043445;  // std dev = 0,635, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(H, A) )
%   | | | | then return 0.15087409212085257;  // std dev = 0,708, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else if ( tempadvisedby(I, B) )
%   | | | | | then if ( publication(J, B) )
%   | | | | | | then return 0.09088497028898027;  // std dev = 0,993, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | else return 0.17838866963716404;  // std dev = 0,065, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(K, B) )
%   | | | | | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | else return -0.013728020051445652;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 7,45e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
Results
   AUC ROC   = 0.945513
   AUC PR    = 0.878467
   CLL	      = -0.307893
   Precision = 0.893333 at threshold = 0.5
   Recall    = 0.858974
   F1        = 0.875817


Total learning time: 8.446 seconds
Total inference time: 0.814 seconds
AUC ROC: 0.945513


Refined model AUC ROC: 0.945513


Dataset: imdb->uwcse, Fold: 1, Type: transfer, Time: 00:16:20
{'Inference time': 0.814, 'CLL': -0.307893, 'Parameter Learning results': {'Inference time': 0.662, 'CLL': -0.273854, 'F1': 0.928571, 'AUC ROC': 0.949704, 'Recall': 1.0, 'AUC PR': 0.939729, 'Precision': [0.866667, 0.5], 'Learning time': 5.161}, 'F1': 0.875817, 'AUC ROC': 0.945513, 'Mapping results': {'Finding best mapping': 0.024556636810302734, 'Generating mappings time': 0.06228494644165039, 'Total time': 2.5610554218292236, 'Possible mappings': 288, 'Knowledge compiling time': 0.012205839157104492, 'Generating paths time': 2.4620025157928467}, 'Recall': 0.858974, 'AUC PR': 0.878467, 'Precision': [0.893333, 0.5], 'Learning time': 13.607}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else if ( publication(H, B) )
%   | | | | then if ( tempadvisedby(I, B) )
%   | | | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.1771985653050586;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, E) )
%   | | | | then return 0.10092203251355424;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.786424204891965;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.1314431676465775;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.5634658750306112;  // std dev = 0,865, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.15287984713060612;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, E) )
%   | | | | then return 0.08766131137288703;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.62836893179253;  // std dev = 0,103, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.10944121048668624;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.44859261720652943;  // std dev = 0,858, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.13415343367266858;  // std dev = 0,027, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, E) )
%   | | | | then return 0.07538519128728272;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B), publication(I, A) )
%   | | | then return 0.5067640693766904;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.08985969552365518;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.3489929244939743;  // std dev = 0,857, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.11934956110669992;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.06425253627198277;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, A), projectmember(I, B) )
%   | | | then return 0.38232151811705767;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.07293629928480853;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.26406157938807623;  // std dev = 0,857, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.10738510048559341;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.05433785763527831;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.28578013742560454;  // std dev = 0,039, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.058652293664100574;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.19200601639991932;  // std dev = 0,858, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.0975332649390276;  // std dev = 0,021, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.045644627153578615;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(H, B), publication(I, A) )
%   | | | then return 0.11242045567218922;  // std dev = 0,445, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then return 0.26355053794323713;  // std dev = 0,075, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.11271105539411952;  // std dev = 1,094, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.08929115160039476;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.038122875969536014;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else if ( projectmember(I, B) )
%   | | | | then return 0.2064764236504808;  // std dev = 0,050, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.023267062934124377;  // std dev = 0,808, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.11127416126100423;  // std dev = 0,851, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.08230113590826413;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(E, D) )
%   | | | | then return 0.1150203403110675;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.038530802665471264;  // std dev = 0,938, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( projectmember(G, B), publication(H, A) )
%   | | | then return 0.1874440037689823;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.01827016478979678;  // std dev = 0,808, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.09635663553056395;  // std dev = 0,854, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return -0.0074065052791030305;  // std dev = 0,164, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return 0.014828329850808168;  // std dev = 0,862, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(H, A) )
%   | | | | then return 0.15388675248639355;  // std dev = 0,708, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else if ( tempadvisedby(I, B) )
%   | | | | | then if ( publication(J, B) )
%   | | | | | | then return 0.08203235629501877;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | else return 0.17958435295200795;  // std dev = 0,066, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(K, B) )
%   | | | | | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | else return -0.022367925687350538;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
Results
   AUC ROC   = 0.878945
   AUC PR    = 0.762797
   CLL	      = -0.395452
   Precision = 0.821429 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.851852


Total learning time: 8.232 seconds
Total inference time: 0.786 seconds
AUC ROC: 0.878945


Dataset: imdb->uwcse, Fold: 1, Type: scratch, Time: 00:16:29
{'Inference time': 0.786, 'CLL': -0.395452, 'F1': 0.851852, 'AUC ROC': 0.878945, 'Recall': 0.884615, 'AUC PR': 0.762797, 'Precision': [0.821429, 0.5], 'Learning time': 8.232}


Best mapping found: ['movie(A,B) -> publication(A,B)', 'workedunder(A,B) -> advisedby(A,B)', 'actor(A) -> student(A)', 'director(A) -> professor(A)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7043027812533584;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5956068723141557;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.46863440886780416;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3540171821738477;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.1015963294878363;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.26620552619924287;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.20307171050188988;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.08518475138839686;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1579278943667103;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.12508565429655724;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.10063530397647748;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08201840165050943;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.06419184008202618;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
Results
   AUC ROC   = 0.929472
   AUC PR    = 0.918777
   CLL	      = -0.290507
   Precision = 0.823009 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.902913


Total learning time: 2.485 seconds
Total inference time: 0.68 seconds
AUC ROC: 0.929472


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [2.98e-08, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [1.05e-08, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [3.33e-08, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [5.27e-09, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [7.45e-09, 18, 0], 'true,true': [1.83e-08, 0, 9]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [7.45e-09, 0, 9]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9]}]
{'': [0.08264462809917356, -9.25185853854297e-18], 'true': [-2.9605947323337506e-16, 0.1301775147928993]}
{'': [0.08063200586027203, 0.0], 'true': [9.868649107779169e-17, 0.13017751479289957]}
{'': [0.07874151912392335, 6.1679056923619804e-18], 'true': [-1.4802973661668753e-16, 0.13017751479289946]}
{'': [0.07789770458547739, -1.5419764230904951e-18], 'true': [1.2335811384723962e-16, 0.13017751479289938]}
{'': [0.07764125846417015, 1.5419764230904951e-18], 'true': [-3.700743415417188e-17, 0.13017751479289938]}
{'': [0.07757925968481666, 3.0839528461809902e-18], 'true': [3.700743415417188e-17, 0.1301775147928994]}
{'': [0.07757245843873052, -3.854941057726238e-18], 'true': [-2.4671622769447922e-17, 0.1301775147928994]}
{'': [0.07757700245374001, -7.709882115452476e-19], 'true': [6.1679056923619804e-18, 0.13017751479289943]}
{'': [0.07757946176858431, -1.5419764230904951e-18], 'true': [-3.0839528461809902e-18, 0.13017751479289938]}
{'': [0.07757644395816753, 0.0], 'true': [0.0, 0.1301775147928994]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.4068585879990681;  // std dev = 0,766, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.6175030309659435;  // std dev = 0,354, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7302664973147039;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.3218969203777237;  // std dev = 0,756, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.48845798554678616;  // std dev = 0,355, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5662835398208704;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.23923900726314914;  // std dev = 0,742, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return 0.5061299356632769;  // std dev = 0,115, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3383670325761128;  // std dev = 0,343, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.1015963294878363;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.1435738409498909;  // std dev = 0,695, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.292734896387344;  // std dev = 0,359, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3339582136078992;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.1086373068329895;  // std dev = 0,695, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.22282717250569334;  // std dev = 0,358, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2644433109164689;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08518475138839686;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.07634719328559476;  // std dev = 0,689, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.28453148662136585;  // std dev = 0,166, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12347451602911018;  // std dev = 0,904, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.058424259462378246;  // std dev = 0,690, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return 0.2520733913775002;  // std dev = 0,126, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10913414576504199;  // std dev = 0,343, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.004541864446679737;  // std dev = 0,631, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.13119987214179368;  // std dev = 0,360, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.16023982537600037;  // std dev = 0,060, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.0035908214737755406;  // std dev = 0,631, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.1060205980960457;  // std dev = 0,359, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.13999663011504024;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06419184008202618;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
Results
   AUC ROC   = 0.959475
   AUC PR    = 0.953759
   CLL	      = -0.27363
   Precision = 0.823009 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.902913


Total learning time: 3.704 seconds
Total inference time: 0.727 seconds
AUC ROC: 0.959475


Refined model AUC ROC: 0.959475


Dataset: imdb->uwcse, Fold: 2, Type: transfer, Time: 00:16:40
{'Inference time': 0.727, 'CLL': -0.27363, 'Parameter Learning results': {'Inference time': 0.68, 'CLL': -0.290507, 'F1': 0.902913, 'AUC ROC': 0.929472, 'Recall': 1.0, 'AUC PR': 0.918777, 'Precision': [0.823009, 0.5], 'Learning time': 2.485}, 'F1': 0.902913, 'AUC ROC': 0.959475, 'Mapping results': {'Finding best mapping': 0.02429366111755371, 'Generating mappings time': 0.05935382843017578, 'Total time': 2.3406944274902344, 'Possible mappings': 288, 'Knowledge compiling time': 0.010274171829223633, 'Generating paths time': 2.24676775932312}, 'Recall': 1.0, 'AUC PR': 0.953759, 'Precision': [0.823009, 0.5], 'Learning time': 6.189}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.4068585879990681;  // std dev = 0,766, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.6175030309659435;  // std dev = 0,354, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7302664973147039;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.39431058662709007;  // std dev = 0,801, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then return 0.567468700604235;  // std dev = 0,098, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4491964093967777;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.30109636264093637;  // std dev = 0,796, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then return 0.4270218758972438;  // std dev = 0,101, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3390893982104104;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.33299153701351053;  // std dev = 0,059, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.10577736987702314;  // std dev = 0,689, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(E, B) )
%   | | then return 0.301751862901626;  // std dev = 0,359, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.3258003419390091;  // std dev = 0,078, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.26377329073856487;  // std dev = 0,052, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.08047815581287898;  // std dev = 0,690, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(E, B) )
%   | | then return 0.2292441583357236;  // std dev = 0,358, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.25884941737918243;  // std dev = 0,070, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.11879296057539457;  // std dev = 0,724, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.20402980545450922;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.27348106052145776;  // std dev = 0,141, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.13167430581091288;  // std dev = 0,907, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109179;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.179620377939304;  // std dev = 0,057, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.012414427741551734;  // std dev = 0,668, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.15051742887155065;  // std dev = 0,358, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.18982726270956451;  // std dev = 0,067, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.06768381132434284;  // std dev = 0,702, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.1486860509343958;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.21036281619456315;  // std dev = 0,144, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.07506338685948753;  // std dev = 0,907, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.13764800526629703;  // std dev = 0,058, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.02298546531451018;  // std dev = 0,649, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.10657975744519896;  // std dev = 0,357, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.14303070298781403;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.0641918400820262;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
Results
   AUC ROC   = 0.957047
   AUC PR    = 0.928404
   CLL	      = -0.280522
   Precision = 0.823009 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.902913


Total learning time: 4.457 seconds
Total inference time: 0.769 seconds
AUC ROC: 0.957047


Dataset: imdb->uwcse, Fold: 2, Type: scratch, Time: 00:16:45
{'Inference time': 0.769, 'CLL': -0.280522, 'F1': 0.902913, 'AUC ROC': 0.957047, 'Recall': 1.0, 'AUC PR': 0.928404, 'Precision': [0.823009, 0.5], 'Learning time': 4.457}


Best mapping found: ['movie(A,B) -> publication(A,B)', 'workedunder(A,B) -> advisedby(A,B)', 'actor(A) -> student(A)', 'director(A) -> professor(A)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.08518475138839687;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06419184008202622;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
Results
   AUC ROC   = 0.894231
   AUC PR    = 0.825397
   CLL	      = -0.313006
   Precision = 0.825397 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.904348


Total learning time: 1.649 seconds
Total inference time: 0.868 seconds
AUC ROC: 0.894231


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.98e-08, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.98e-08, 0, 8], 'false': [3.73e-09, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.49e-08, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [7.45e-09, 0, 8], 'false': [2.63e-09, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
{'': [-2.9605947323337506e-16, -9.25185853854297e-18], 'true': [0.0, -2.220446049250313e-16]}
{'': [9.868649107779169e-17, 0.0], 'true': [0.0, 1.1102230246251565e-16]}
{'': [-1.4802973661668753e-16, -1.5419764230904951e-18], 'true': [0.0, -1.1102230246251565e-16]}
{'': [1.2335811384723962e-16, 1.5419764230904951e-18], 'true': [0.0, 1.1102230246251565e-16]}
{'': [-3.700743415417188e-17, -1.5419764230904951e-18], 'true': [0.0, -4.163336342344337e-17]}
{'': [3.700743415417188e-17, 0.0], 'true': [0.0, 2.7755575615628914e-17]}
{'': [-2.4671622769447922e-17, 0.0], 'true': [0.0, -2.0816681711721685e-17]}
{'': [6.1679056923619804e-18, 7.709882115452476e-19], 'true': [0.0, 6.938893903907228e-18]}
{'': [-3.0839528461809902e-18, 0.0], 'true': [0.0, -3.469446951953614e-18]}
{'': [0.0, -7.709882115452476e-19], 'true': [0.0, 0.0]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.7194734122109544;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( publication(D, A) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
Results
   AUC ROC   = 0.894231
   AUC PR    = 0.825397
   CLL	      = -0.313006
   Precision = 0.825397 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.904348


Total learning time: 2.386 seconds
Total inference time: 0.834 seconds
AUC ROC: 0.894231


Refined model AUC ROC: 0.894231


Dataset: imdb->uwcse, Fold: 3, Type: transfer, Time: 00:16:54
{'Inference time': 0.834, 'CLL': -0.313006, 'Parameter Learning results': {'Inference time': 0.868, 'CLL': -0.313006, 'F1': 0.904348, 'AUC ROC': 0.894231, 'Recall': 1.0, 'AUC PR': 0.825397, 'Precision': [0.825397, 0.5], 'Learning time': 1.649}, 'F1': 0.904348, 'AUC ROC': 0.894231, 'Mapping results': {'Finding best mapping': 0.024316787719726562, 'Generating mappings time': 0.0587460994720459, 'Total time': 2.4729514122009277, 'Possible mappings': 288, 'Knowledge compiling time': 0.008920669555664062, 'Generating paths time': 2.380963087081909}, 'Recall': 1.0, 'AUC PR': 0.825397, 'Precision': [0.825397, 0.5], 'Learning time': 4.035}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
Results
   AUC ROC   = 0.860577
   AUC PR    = 0.781955
   CLL	      = -0.382487
   Precision = 0.781955 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.877637


Total learning time: 1.47 seconds
Total inference time: 0.594 seconds
AUC ROC: 0.860577


Dataset: imdb->uwcse, Fold: 3, Type: scratch, Time: 00:16:56
{'Inference time': 0.594, 'CLL': -0.382487, 'F1': 0.877637, 'AUC ROC': 0.860577, 'Recall': 1.0, 'AUC PR': 0.781955, 'Precision': [0.781955, 0.5], 'Learning time': 1.47}


Best mapping found: ['movie(A,B) -> publication(A,B)', 'workedunder(A,B) -> advisedby(A,B)', 'actor(A) -> student(A)', 'director(A) -> professor(A)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.6581489350995123;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.1418510649004878;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.5580193346218546;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.44194861002444086;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,67e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.33541139495094296;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.1015963294878363;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.25176837314502193;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.19047961032437166;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.14620194507639928;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.11389369465607467;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.0898995618030186;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.06842697784420275;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.07174810215160457;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.06419184008202618;  // std dev = 3,73e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
Results
   AUC ROC   = 0.930938
   AUC PR    = 0.920612
   CLL	      = -0.287685
   Precision = 0.824742 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.903955


Total learning time: 4.445 seconds
Total inference time: 0.713 seconds
AUC ROC: 0.930938


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [4.21e-08, 0, 13]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [1.67e-08, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [4.21e-08, 0, 13]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [9.13e-09, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [1.05e-08, 28, 0], 'true,true': [2.11e-08, 0, 13]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [3.73e-09, 28, 0], 'true,true': [0.0, 0, 13]}]
{'': [0.11426592797784099, -7.93016446160826e-18], 'true': [-2.7328566760003855e-16, 0.15999999999999973]}
{'': [0.11113013243095493, -3.96508223080413e-18], 'true': [1.3664283380001927e-16, 0.1599999999999999]}
{'': [0.10815835949511798, 9.912705577010326e-18], 'true': [-2.7328566760003855e-16, 0.16000000000000003]}
{'': [0.1067802978383715, -5.9476233462061954e-18], 'true': [1.3664283380001927e-16, 0.16000000000000006]}
{'': [0.10633295765097943, 2.9738116731030977e-18], 'true': [-5.124106267500723e-17, 0.15999999999999998]}
{'': [0.10620510347417647, 3.96508223080413e-18], 'true': [3.416070845000482e-17, 0.16000000000000006]}
{'': [0.10617228822061624, -2.9738116731030977e-18], 'true': [-3.416070845000482e-17, 0.16]}
{'': [0.10616221825031717, 0.0], 'true': [0.0, 0.16]}
{'': [0.10615204765393826, -2.9738116731030977e-18], 'true': [-1.2810265668751807e-17, 0.15999999999999998]}
{'': [0.1061355654998577, 4.956352788505163e-19], 'true': [0.0, 0.15999999999999998]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6581489350995123;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5580193346218546;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.3162031823561261;  // std dev = 1,035, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | else return 0.44194861002444086;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.11231637819360636;  // std dev = 1,67e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.2501756292864693;  // std dev = 1,032, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | else return 0.335411394950943;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.1015963294878363;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.1933744200145414;  // std dev = 1,030, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.2697478132793615;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else if ( publication(G, A) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.25176837314502193;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.0922698251884222;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2062525881598365;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.2835787570269663;  // std dev = 0,098, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19047961032437172;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.06981266499022032;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16095555079641394;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.23020619266555972;  // std dev = 0,087, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14620194507639933;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.05262295397269369;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12802275604229368;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.19231705975472324;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11389369465607464;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.03957982871574563;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10349083403071088;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.16443394211963297;  // std dev = 0,069, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08989956180301868;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.06842697784420275;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.029732735208956584;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08478440748267765;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.14323269917026543;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07174810215160456;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.06419184008202618;  // std dev = 3,73e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
Results
   AUC ROC   = 0.930313
   AUC PR    = 0.894491
   CLL	      = -0.277677
   Precision = 0.857143 at threshold = 0.5
   Recall    = 0.975
   F1        = 0.912281


Total learning time: 5.6 seconds
Total inference time: 0.767 seconds
AUC ROC: 0.930313


Refined model AUC ROC: 0.930313


Dataset: imdb->uwcse, Fold: 4, Type: transfer, Time: 00:17:11
{'Inference time': 0.767, 'CLL': -0.277677, 'Parameter Learning results': {'Inference time': 0.713, 'CLL': -0.287685, 'F1': 0.903955, 'AUC ROC': 0.930938, 'Recall': 1.0, 'AUC PR': 0.920612, 'Precision': [0.824742, 0.5], 'Learning time': 4.445}, 'F1': 0.912281, 'AUC ROC': 0.930313, 'Mapping results': {'Finding best mapping': 0.0243222713470459, 'Generating mappings time': 0.06166839599609375, 'Total time': 2.508160352706909, 'Possible mappings': 288, 'Knowledge compiling time': 0.012231111526489258, 'Generating paths time': 2.4099318981170654}, 'Recall': 0.975, 'AUC PR': 0.894491, 'Precision': [0.857143, 0.5], 'Learning time': 10.045}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | else return 0.6581489350995123;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.14185106490048774;  // std dev = 1,83e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else if ( publication(G, A) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.5580193346218546;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.32092546969114216;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.47050602002862973;  // std dev = 0,353, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.11231637819360639;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.15206564481433005;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.35956168755121826;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.4917295800910854;  // std dev = 0,185, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3283011454111516;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.10159632948783635;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.1168184335310849;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.27055285276925933;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.37578832685758157;  // std dev = 0,183, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.24646216764042536;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(C, B) )
%   | | | then return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.08885822246897802;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(C, F), tempadvisedby(G, F) )
%   | | | then return 0.2973123206986854;  // std dev = 0,165, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2535017435929123;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(H, B) )
%   | | then return 0.20682443889196778;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.18664483997474218;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.2093122107205329;  // std dev = 0,007, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.06718842860896591;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1613668391878321;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.24081226061835007;  // std dev = 0,148, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14342178447152354;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | then return 0.22417205597453643;  // std dev = 0,094, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(D, A) )
%   | | | then return 0.17716143199889633;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(G, A) )
%   | | | | then return 0.050626092185623875;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.07118267995017653;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), tempadvisedby(J, I) )
%   | | | then return 0.20178956430120273;  // std dev = 0,131, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17524289030198756;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.11184577395029441;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15136568752622845;  // std dev = 0,011, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.03806982384014668;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10644814081042785;  // std dev = 0,347, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.17178378301484876;  // std dev = 0,117, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08836255789636806;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.06842697784420275;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.13293135373342044;  // std dev = 0,010, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.028594955185828427;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08707760452560434;  // std dev = 0,347, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.1492019994600219;  // std dev = 0,105, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07057394790379391;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.0641918400820262;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
Results
   AUC ROC   = 0.928047
   AUC PR    = 0.883652
   CLL	      = -0.277761
   Precision = 0.83871 at threshold = 0.5
   Recall    = 0.975
   F1        = 0.901734


Total learning time: 15.224 seconds
Total inference time: 0.803 seconds
AUC ROC: 0.928047


Dataset: imdb->uwcse, Fold: 4, Type: scratch, Time: 00:17:27
{'Inference time': 0.803, 'CLL': -0.277761, 'F1': 0.901734, 'AUC ROC': 0.928047, 'Recall': 0.975, 'AUC PR': 0.883652, 'Precision': [0.83871, 0.5], 'Learning time': 15.224}


Best mapping found: ['movie(A,B) -> publication(A,B)', 'workedunder(A,B) -> advisedby(A,B)', 'actor(A) -> student(A)', 'director(A) -> professor(A)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5640312880406888;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.48074388375574334;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.386198448632422;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.11231637819360639;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2971060494206917;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.22385468926999735;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1679716628061756;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12658100414000711;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.07877675473109173;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.09607868392277003;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.07347328777965571;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.05656520765532164;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.06419184008202622;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
Results
   AUC ROC   = 0.945797
   AUC PR    = 0.937284
   CLL	      = -0.272526
   Precision = 0.850877 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.919431


Total learning time: 5.572 seconds
Total inference time: 0.715 seconds
AUC ROC: 0.945797


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [3.73e-09, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [2.63e-09, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
{'': [0.1814058956916096, -5.046468293750712e-18], 'true': [0.0, 0.20761245674740453]}
{'': [0.17685507625002705, 0.0], 'true': [0.0, 0.20761245674740458]}
{'': [0.17247995015100465, -2.523234146875356e-18], 'true': [0.0, 0.20761245674740486]}
{'': [0.17030274222106967, -2.523234146875356e-18], 'true': [0.0, 0.20761245674740486]}
{'': [0.16951377794370398, -1.261617073437678e-18], 'true': [0.0, 0.20761245674740483]}
{'': [0.16923971667658838, 1.261617073437678e-18], 'true': [0.0, 0.2076124567474048]}
{'': [0.1691340043119816, 0.0], 'true': [0.0, 0.2076124567474048]}
{'': [0.1690793453910904, 0.0], 'true': [0.0, 0.20761245674740483]}
{'': [0.1690361610985065, 6.30808536718839e-19], 'true': [0.0, 0.20761245674740486]}
{'': [0.16899197074053585, -1.261617073437678e-18], 'true': [0.0, 0.2076124567474049]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), inphase(E, F) )
%   | | | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( yearsinprogram(A, E), yearsinprogram(D, E) )
%   | | | then return 0.10773234383231141;  // std dev = 0,784, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(F, B) )
%   | | | | then if ( publication(F, G), inphase(G, H) )
%   | | | | | then return 0.4973839334745775;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.7670719622367216;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.76783633424493;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( yearsinprogram(A, E), yearsinprogram(D, E) )
%   | | | then return 0.08843382486912417;  // std dev = 0,782, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(F, B) )
%   | | | | then if ( publication(F, G), projectmember(H, G) )
%   | | | | | then return 0.3736886272113765;  // std dev = 0,845, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.6300427430524156;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6065083237249159;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360639;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), projectmember(F, E) )
%   | | | then return 0.2829882715802352;  // std dev = 0,843, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3889274012021207;  // std dev = 0,284, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.1863286378864268;  // std dev = 1,131, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B) )
%   | | | then if ( publication(E, F), projectmember(G, F) )
%   | | | | then return 0.2124763784944058;  // std dev = 0,843, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.28254202613410573;  // std dev = 0,741, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.08135269353561171;  // std dev = 1,069, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.3811643887324823;  // std dev = 0,109, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( yearsinprogram(A, E), yearsinprogram(D, E) )
%   | | | then return -0.046293597780544406;  // std dev = 0,743, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(F, B) )
%   | | | | then if ( publication(F, G), inphase(G, H) )
%   | | | | | then return 0.12933977912466038;  // std dev = 0,812, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.35841786555175953;  // std dev = 0,079, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.14771635795339821;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2974221989310408;  // std dev = 0,098, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( yearsinprogram(A, E), yearsinprogram(D, E) )
%   | | | then return -0.035715209978518236;  // std dev = 0,743, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(F, B) )
%   | | | | then if ( publication(F, G), inphase(G, H) )
%   | | | | | then return 0.09971211882861475;  // std dev = 0,813, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.2813794488340851;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.1133224963303554;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.23999590407510354;  // std dev = 0,086, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( yearsinprogram(A, E), yearsinprogram(D, E) )
%   | | | then return -0.02763565228848767;  // std dev = 0,744, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(F, B) )
%   | | | | then if ( publication(F, G), projectmember(H, G) )
%   | | | | | then return 0.06385222880785868;  // std dev = 0,802, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.24682192490852187;  // std dev = 0,082, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.08612701176133751;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.19947090874249673;  // std dev = 0,076, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), projectmember(F, E) )
%   | | | then return 0.05049782145052534;  // std dev = 0,803, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15502126410240527;  // std dev = 0,266, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.0388805426670811;  // std dev = 1,059, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( yearsinprogram(A, E), yearsinprogram(D, E) )
%   | | | then return -0.04912718338365627;  // std dev = 0,735, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( projectmember(F, B) )
%   | | | | then return 0.11425454933562722;  // std dev = 1,020, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return 0.047715847455271486;  // std dev = 0,798, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.15567436388587885;  // std dev = 0,077, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06419184008202622;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
Results
   AUC ROC   = 0.956372
   AUC PR    = 0.933397
   CLL	      = -0.260759
   Precision = 0.87 at threshold = 0.5
   Recall    = 0.896907
   F1        = 0.883249


Total learning time: 5.342 seconds
Total inference time: 0.808 seconds
AUC ROC: 0.956372


Refined model AUC ROC: 0.956372


Dataset: imdb->uwcse, Fold: 5, Type: transfer, Time: 00:17:42
{'Inference time': 0.808, 'CLL': -0.260759, 'Parameter Learning results': {'Inference time': 0.715, 'CLL': -0.272526, 'F1': 0.919431, 'AUC ROC': 0.945797, 'Recall': 1.0, 'AUC PR': 0.937284, 'Precision': [0.850877, 0.5], 'Learning time': 5.572}, 'F1': 0.883249, 'AUC ROC': 0.956372, 'Mapping results': {'Finding best mapping': 0.024665117263793945, 'Generating mappings time': 0.06067538261413574, 'Total time': 2.391594648361206, 'Possible mappings': 288, 'Knowledge compiling time': 0.010205745697021484, 'Generating paths time': 2.296044111251831}, 'Recall': 0.896907, 'AUC PR': 0.933397, 'Precision': [0.87, 0.5], 'Learning time': 10.914}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(C, D), inphase(D, E) )
%   | | | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(C, D), projectmember(E, D) )
%   | | | then return 0.5072279478556496;  // std dev = 0,878, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6101519416923331;  // std dev = 0,344, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(D, E), projectmember(F, E) )
%   | | | | then return 0.4026285776105345;  // std dev = 0,880, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.4264602692870844;  // std dev = 0,878, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1564123687585864;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.6361754988555826;  // std dev = 0,148, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( yearsinprogram(A, D), yearsinprogram(C, D) )
%   | | then return -0.074264636103769;  // std dev = 0,730, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(E, B) )
%   | | | then if ( publication(E, F), inphase(F, G) )
%   | | | | then if ( publication(H, A) )
%   | | | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.27781178594892364;  // std dev = 0,848, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.5596007495536477;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2264524488939288;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.4847765716450808;  // std dev = 0,166, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, E), inphase(E, F) )
%   | | | then if ( inphase(A, F) )
%   | | | | then return 0.3758480995979383;  // std dev = 0,153, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.14921900171626679;  // std dev = 0,829, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20486790924614984;  // std dev = 0,748, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.09157760921265855;  // std dev = 1,074, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.36999683934084926;  // std dev = 0,160, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, E), inphase(E, F) )
%   | | | then if ( inphase(A, F) )
%   | | | | then return 0.294022220277653;  // std dev = 0,136, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.11231895650318886;  // std dev = 0,829, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1554324076019063;  // std dev = 0,750, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.07176851272394706;  // std dev = 1,073, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.29061151148195785;  // std dev = 0,145, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( yearsinprogram(A, D), yearsinprogram(C, D) )
%   | | then return -0.11966432487456959;  // std dev = 0,736, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.05661570187963186;  // std dev = 0,478, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( projectmember(F, B) )
%   | | | | then return 0.323879958411318;  // std dev = 0,817, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else return 0.1424214048123696;  // std dev = 0,822, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.23576998106283223;  // std dev = 0,128, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), projectmember(E, D) )
%   | | then return 0.09777484746287379;  // std dev = 0,797, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.1788765064052548;  // std dev = 0,782, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.16491043076394507;  // std dev = 0,027, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.058412599072299766;  // std dev = 1,050, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, E), inphase(E, F) )
%   | | | then if ( inphase(A, F) )
%   | | | | then return 0.19951271113015287;  // std dev = 0,092, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.03706070741571502;  // std dev = 0,844, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05495162836527398;  // std dev = 0,696, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.0020728880348230283;  // std dev = 1,017, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.17769479878077843;  // std dev = 0,121, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, E), inphase(E, F) )
%   | | | then if ( inphase(A, F) )
%   | | | | then return 0.1698233874245934;  // std dev = 0,081, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.028590659259493334;  // std dev = 0,843, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.043819556846533214;  // std dev = 0,698, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.0015837817060512683;  // std dev = 1,017, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.15374862763758904;  // std dev = 0,109, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
Results
   AUC ROC   = 0.95026
   AUC PR    = 0.941442
   CLL	      = -0.273747
   Precision = 0.849057 at threshold = 0.5
   Recall    = 0.927835
   F1        = 0.8867


Total learning time: 7.654 seconds
Total inference time: 0.842 seconds
AUC ROC: 0.95026


Dataset: imdb->uwcse, Fold: 5, Type: scratch, Time: 00:17:51
{'Inference time': 0.842, 'CLL': -0.273747, 'F1': 0.8867, 'AUC ROC': 0.95026, 'Recall': 0.927835, 'AUC PR': 0.941442, 'Precision': [0.849057, 0.5], 'Learning time': 7.654}


Start learning from source dataset


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( inphase(A, G), inphase(E, G) )
%   | | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else if ( publication(D, H), professor(H) )
%   | | | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then if ( inphase(A, K), inphase(I, K) )
%   | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7032193576347228;  // std dev = 0,362, 71,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=60 */
%   else return -0.14185106490048768;  // std dev = 6,83e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( publication(F, B) )
%   | | | then if ( publication(E, G), professor(G) )
%   | | | | then return 0.006763802938225112;  // std dev = 0,906, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return 0.508243899526118;  // std dev = 0,732, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.46267478360834063;  // std dev = 1,116, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | | then if ( inphase(A, J), inphase(H, J) )
%   | | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( publication(K, B) )
%   | | | | then return 0.62684939153616;  // std dev = 0,328, 57,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=50 */
%   | | | | else return 0.46394212336573387;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.12544463852839155;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5553664367462842;  // std dev = 1,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.4246244871606586;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( inphase(A, G), inphase(E, G) )
%   | | | | then return -0.16809256771732173;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else if ( publication(D, H), professor(H) )
%   | | | | | then return 0.15334461434755284;  // std dev = 1,113, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | | else return 0.6067346964522805;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then if ( publication(J, I) )
%   | | | | then return 0.30181993057174494;  // std dev = 0,491, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | else return 0.42292054917571065;  // std dev = 0,399, 35,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | | | else return 0.5115996307057012;  // std dev = 0,311, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.1123163781936063;  // std dev = 4,94e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.11427129016417308;  // std dev = 0,366, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.3117203568107152;  // std dev = 1,072, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return 0.489584411996005;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.34686629280129017;  // std dev = 0,369, 57,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=47 */
%   | | | | else if ( projectmember(J, B) )
%   | | | | | then return 0.15228762638745588;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else if ( publication(K, A) )
%   | | | | | | then return 0.1969393166804945;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return 0.3709443088050371;  // std dev = 0,921, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783624;  // std dev = 4,59e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( inphase(A, E), inphase(D, E) )
%   | | | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | | | then return -0.06197102810760041;  // std dev = 0,399, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | | else if ( projectmember(H, B) )
%   | | | | | then return 0.26035466643296457;  // std dev = 0,861, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.09882561629702194;  // std dev = 0,932, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else if ( projectmember(I, B) )
%   | | | | then if ( publication(J, A) )
%   | | | | | then return 0.16487453367140772;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.21999819254383624;  // std dev = 0,818, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.26936404651337187;  // std dev = 0,379, 35,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=27 */
%   | | else return 0.29655419868116933;  // std dev = 0,307, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.09269127618926107;  // std dev = 1,05e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( inphase(A, E), inphase(D, E) )
%   | | | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | | | then return -0.04903854190021315;  // std dev = 0,399, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | | else if ( projectmember(H, B) )
%   | | | | | then return 0.19549764451730692;  // std dev = 0,862, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.07630200179437616;  // std dev = 0,929, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else if ( publication(I, A), publication(J, B) )
%   | | | | then return 0.10136242569541544;  // std dev = 0,376, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | | else if ( projectmember(K, B) )
%   | | | | | then return 0.14800740253783365;  // std dev = 0,438, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | | else return 0.23880675493833164;  // std dev = 0,372, 27,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | else return 0.2275684623018176;  // std dev = 0,307, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.0851847513883968;  // std dev = 2,58e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.20975771563253545;  // std dev = 5,96e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( inphase(A, E), inphase(D, E) )
%   | | | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | | | then return -0.038953351497323645;  // std dev = 0,400, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | | else if ( projectmember(H, B) )
%   | | | | | then return 0.1478720630660635;  // std dev = 0,862, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.059031808312441904;  // std dev = 0,928, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else if ( publication(I, A), publication(J, B) )
%   | | | | then return 0.08031303304175658;  // std dev = 0,375, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | | else if ( publication(K, B) )
%   | | | | | then return 0.171112525746614;  // std dev = 0,371, 26,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | | | | else return 0.16605435852089778;  // std dev = 0,434, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.17875440320216868;  // std dev = 0,308, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.07877675473109164;  // std dev = 4,71e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(E, A), tempadvisedby(F, B) )
%   | | | then return 0.023916062824156127;  // std dev = 0,345, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.14298373826770902;  // std dev = 0,339, 64,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=54 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then if ( projectmember(H, B) )
%   | | | | then if ( publication(I, A) )
%   | | | | | then return 0.12357257749937678;  // std dev = 0,858, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return -0.02669911162060634;  // std dev = 1,093, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return 0.2143075279878365;  // std dev = 0,560, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( publication(J, A) )
%   | | | | then return -0.018706783404267974;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.02836576012984693;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( inphase(A, E), inphase(D, E) )
%   | | | then if ( projectmember(F, B) )
%   | | | | then return 0.11079919132002616;  // std dev = 0,853, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else if ( yearsinprogram(A, G), yearsinprogram(D, G) )
%   | | | | | then return 0.16186311632953618;  // std dev = 0,901, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return -0.16395657378863135;  // std dev = 0,351, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else if ( publication(H, B) )
%   | | | | then return 0.09553293767904017;  // std dev = 0,372, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | | else if ( projectmember(I, B) )
%   | | | | | then return -0.03295039252839014;  // std dev = 1,089, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return 0.32228897057280065;  // std dev = 0,154, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.12267320503540646;  // std dev = 0,306, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.06842697784420271;  // std dev = 1,97e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801106;  // std dev = 1,83e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.05775242164344277;  // std dev = 0,381, 45,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=31 */
%   | | | else return 0.13037855738177903;  // std dev = 0,252, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then if ( projectmember(G, B) )
%   | | | | then if ( publication(H, A) )
%   | | | | | then return 0.09487132029596199;  // std dev = 0,850, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return -0.03260508542923859;  // std dev = 1,088, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return 0.12903094317654223;  // std dev = 0,469, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( publication(I, A) )
%   | | | | then return -0.04068243845298377;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return -9.380410626387281E-4;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06419184008202626;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */


Predicates from source: ['advisedby(person,person).', 'professor(person).', 'inphase(person,prequals).', 'projectmember(project,person).', 'student(person).', 'tempadvisedby(person,person).', 'yearsinprogram(person,year).', 'publication(title,person).'] 



Best mapping found: ['publication(A,B) -> movie(A,B)', 'yearsinprogram(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'student(A) -> director(A)', 'professor(A) -> female(A)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- director(A), female(B).;true;false
0;true,false;movie(D, A).;true;true
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,false,true;genre(A, K), genre(I, K).;false;false
0;true,false,true;genre(A, G), genre(E, G).;false;true
0;true,false,true,false;movie(D, H), female(H).;false;false
0;true,false,false;movie(J, I).;true;false
1;;workedunder(B, A) :- director(A), female(B).;true;false
1;true,false;movie(E, A).;true;true
1;true;movie(C, A), movie(C, B).;false;true
1;true,false,false,false;movie(K, B).;false;false
1;true,false,false,true;genre(A, J), genre(H, J).;false;false
1;true,false,true;movie(F, B).;true;false
1;true,false,true,true;movie(E, G), female(G).;false;false
1;true,false,false;movie(I, H).;true;true
2;;workedunder(B, A) :- director(A), female(B).;true;false
2;true,false;movie(D, A).;true;false
2;true,false,true,false;movie(D, H), female(H).;false;false
2;true;movie(C, B), movie(C, A).;false;true
2;true,false,true;genre(A, G), genre(E, G).;false;true
3;;workedunder(B, A) :- director(A), female(B).;true;false
3;true,false;movie(D, A).;true;true
3;true;movie(C, B), movie(C, A).;false;true
3;true,false,false,false;movie(I, B).;false;true
3;true,false,true;movie(F, B).;false;false
3;true,false,false,false,false;movie(K, A).;false;false
3;true,false,false;movie(G, A), movie(H, B).;false;true
4;;workedunder(B, A) :- female(B), director(A).;true;false
4;true;movie(C, B), movie(C, A).;false;false
5;;workedunder(B, A) :- director(A), female(B).;true;false
5;true;movie(C, B), movie(C, A).;false;false
6;;workedunder(B, A) :- female(B), director(A).;true;false
6;true;movie(C, B), movie(C, A).;false;false
7;;workedunder(B, A) :- female(B), director(A).;true;false
7;true,false;movie(D, B).;true;true
7;true,false,false;movie(J, A).;false;false
7;true;movie(C, A), movie(C, B).;false;true
7;true,false,true;movie(E, A).;false;false
8;;workedunder(B, A) :- director(A), female(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(B, A) :- female(B), director(A).;true;false
9;true,false;movie(D, B).;false;true
9;true,false,false;movie(I, A).;false;false
9;true;movie(C, A), movie(C, B).;false;true
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.19932540568774737;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.17328911846492814;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.14767008630297251;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.12357779612058116;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.10180665778558552;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.08278216065690536;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 2,98e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.06660456442738757;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.05314094933548597;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.04212175139001405;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 7,45e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.03321810241282468;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
Results
   AUC ROC   = 0.735684
   AUC PR    = 0.80099
   CLL	      = -0.534654
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.43865
   F1        = 0.609808


Total learning time: 1.713 seconds
Total inference time: 0.887 seconds
AUC ROC: 0.735684


Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [4.371, 56, 29], 'true,true': [1.58e-07, 0, 27]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [4.371, 56, 29], 'true,true': [0.0, 0, 27]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [4.371, 56, 29], 'true,true': [0.0, 0, 27]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [4.371, 56, 29], 'true,true': [0.0, 0, 27]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [4.371, 56, 29], 'true,true': [0.0, 0, 27]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [4.371, 56, 29], 'true,true': [0.0, 0, 27]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [4.371, 56, 29], 'true,true': [2.98e-08, 0, 27]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [4.371, 56, 29], 'true,true': [0.0, 0, 27]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [4.371, 56, 29], 'true,true': [0.0, 0, 27]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [4.371, 56, 29], 'true,true': [7.45e-09, 0, 27]}]
{'': [9.210739167260557e-16, 0.22477508650519049], 'true': [9.210739167260557e-16, nan]}
{'': [-2.631639762074445e-16, 0.22477508650519035], 'true': [-2.631639762074445e-16, nan]}
{'': [-2.631639762074445e-16, 0.22477508650519015], 'true': [-2.631639762074445e-16, nan]}
{'': [-9.868649107779169e-17, 0.2247750865051904], 'true': [-9.868649107779169e-17, nan]}
{'': [0.0, 0.2247750865051901], 'true': [0.0, nan]}
{'': [-1.644774851296528e-17, 0.22477508650519024], 'true': [-1.644774851296528e-17, nan]}
{'': [3.289549702593056e-17, 0.22477508650519026], 'true': [3.289549702593056e-17, nan]}
{'': [-3.289549702593056e-17, 0.2247750865051905], 'true': [-3.289549702593056e-17, nan]}
{'': [-3.700743415417188e-17, 0.22477508650519018], 'true': [-3.700743415417188e-17, nan]}
{'': [2.05596856412066e-18, 0.22477508650519035], 'true': [2.05596856412066e-18, nan]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), female(A).;true;true', '1;;workedunder(A, B) :- director(B), female(A).;true;true', '2;;workedunder(A, B) :- director(B), female(A).;true;true', '3;;workedunder(A, B) :- director(B), female(A).;true;true', '4;;workedunder(A, B) :- female(A), director(B).;true;true', '5;;workedunder(A, B) :- director(B), female(A).;true;true', '6;;workedunder(A, B) :- female(A), director(B).;true;true', '7;;workedunder(A, B) :- female(A), director(B).;true;true', '8;;workedunder(A, B) :- director(B), female(A).;true;true', '9;;workedunder(A, B) :- female(A), director(B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( actor(A), director(B) )
%   | then return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( director(B), actor(A) )
%   | then return 0.7194734122109546;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( actor(A), director(B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.11231637819360632;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.41751358415831;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( actor(B) )
%   | then return -0.10159632948783623;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0.40020992037010517;  // std dev = 0,093, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.3207118471601494;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( director(B), actor(A) )
%   | then return 0.32449318661391113;  // std dev = 3,65e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.09361423502092618;  // std dev = 0,051, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.25517224256948956;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( actor(B) )
%   | then return -0.08511285429832592;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0.24471932199137159;  // std dev = 0,070, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.2097577156325355;  // std dev = 2,98e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( actor(A), director(B) )
%   | then return 0.21375949343951559;  // std dev = 4,71e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.08023909955770366;  // std dev = 0,085, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.17709649774527747;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( director(B), actor(A) )
%   | then return 0.1800260946316327;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.07452263553021486;  // std dev = 0,080, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.15274385809367083;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( actor(A), director(B) )
%   | then return 0.15496263773274954;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.06955077419652707;  // std dev = 0,075, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.13400703000801117;  // std dev = 7,45e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( director(B), actor(A) )
%   | then return 0.1357368230742041;  // std dev = 2,98e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.06518886713009552;  // std dev = 0,071, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
Results
   AUC ROC   = 0.943308
   AUC PR    = 0.892574
   CLL	      = -0.19844
   Precision = 0.910615 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.953216


Total learning time: 2.005 seconds
Total inference time: 0.963 seconds
AUC ROC: 0.943308


Refined model AUC ROC: 0.943308


Dataset: uwcse->imdb, Fold: 1, Type: transfer, Time: 00:18:12
{'Inference time': 0.963, 'CLL': -0.19844, 'Parameter Learning results': {'Inference time': 0.887, 'CLL': -0.534654, 'F1': 0.609808, 'AUC ROC': 0.735684, 'Recall': 0.43865, 'AUC PR': 0.80099, 'Precision': [1.0, 0.5], 'Learning time': 1.713}, 'F1': 0.953216, 'AUC ROC': 0.943308, 'Mapping results': {'Finding best mapping': 0.7679605484008789, 'Generating mappings time': 0.23463153839111328, 'Total time': 3.5194592475891113, 'Possible mappings': 2592, 'Knowledge compiling time': 0.01382589340209961, 'Generating paths time': 2.503035068511963}, 'Recall': 1.0, 'AUC PR': 0.892574, 'Precision': [0.910615, 0.5], 'Learning time': 3.718}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.14185106490048768;  // std dev = 5,37e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.11231637819360632;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.10159632948783626;  // std dev = 2,79e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.09269127618926103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.0851847513883968;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07877675473109179;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
Results
   AUC ROC   = 0.95092
   AUC PR    = 0.910615
   CLL	      = -0.195966
   Precision = 0.910615 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.953216


Total learning time: 1.845 seconds
Total inference time: 0.769 seconds
AUC ROC: 0.95092


Dataset: uwcse->imdb, Fold: 1, Type: scratch, Time: 00:18:15
{'Inference time': 0.769, 'CLL': -0.195966, 'F1': 0.953216, 'AUC ROC': 0.95092, 'Recall': 1.0, 'AUC PR': 0.910615, 'Precision': [0.910615, 0.5], 'Learning time': 1.845}


Best mapping found: ['publication(A,B) -> movie(A,B)', 'yearsinprogram(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'student(A) -> director(A)', 'professor(A) -> female(A)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- director(A), female(B).;true;false
0;true,false;movie(D, A).;true;true
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,false,true;genre(A, K), genre(I, K).;false;false
0;true,false,true;genre(A, G), genre(E, G).;false;true
0;true,false,true,false;movie(D, H), female(H).;false;false
0;true,false,false;movie(J, I).;true;false
1;;workedunder(B, A) :- director(A), female(B).;true;false
1;true,false;movie(E, A).;true;true
1;true;movie(C, A), movie(C, B).;false;true
1;true,false,false,false;movie(K, B).;false;false
1;true,false,false,true;genre(A, J), genre(H, J).;false;false
1;true,false,true;movie(F, B).;true;false
1;true,false,true,true;movie(E, G), female(G).;false;false
1;true,false,false;movie(I, H).;true;true
2;;workedunder(B, A) :- director(A), female(B).;true;false
2;true,false;movie(D, A).;true;false
2;true,false,true,false;movie(D, H), female(H).;false;false
2;true;movie(C, B), movie(C, A).;false;true
2;true,false,true;genre(A, G), genre(E, G).;false;true
3;;workedunder(B, A) :- director(A), female(B).;true;false
3;true,false;movie(D, A).;true;true
3;true;movie(C, B), movie(C, A).;false;true
3;true,false,false,false;movie(I, B).;false;true
3;true,false,true;movie(F, B).;false;false
3;true,false,false,false,false;movie(K, A).;false;false
3;true,false,false;movie(G, A), movie(H, B).;false;true
4;;workedunder(B, A) :- female(B), director(A).;true;false
4;true;movie(C, B), movie(C, A).;false;false
5;;workedunder(B, A) :- director(A), female(B).;true;false
5;true;movie(C, B), movie(C, A).;false;false
6;;workedunder(B, A) :- female(B), director(A).;true;false
6;true;movie(C, B), movie(C, A).;false;false
7;;workedunder(B, A) :- female(B), director(A).;true;false
7;true,false;movie(D, B).;true;true
7;true,false,false;movie(J, A).;false;false
7;true;movie(C, A), movie(C, B).;false;true
7;true,false,true;movie(E, A).;false;false
8;;workedunder(B, A) :- director(A), female(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(B, A) :- female(B), director(A).;true;false
9;true,false;movie(D, B).;false;true
9;true,false,false;movie(I, A).;false;false
9;true;movie(C, A), movie(C, B).;false;true
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.25814893509951203;  // std dev = 4,775, 95,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(E, A) )
%   | | | then if ( movie(D, F), female(F) )
%   | | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.2237336544841055;  // std dev = 4,775, 95,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1888683221574976;  // std dev = 4,775, 95,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(E, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.15570029437174354;  // std dev = 4,775, 95,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.1258262822937207;  // std dev = 4,775, 95,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.10008916917880603;  // std dev = 4,775, 95,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.07866279780602642;  // std dev = 4,775, 95,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.06127260860742246;  // std dev = 4,775, 95,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.047415491488114615;  // std dev = 4,775, 95,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.036517889972878866;  // std dev = 4,775, 95,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=38 */
Results
   AUC ROC   = 0.746399
   AUC PR    = 0.811178
   CLL	      = -0.516486
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.462963
   F1        = 0.632911


Total learning time: 1.869 seconds
Total inference time: 0.943 seconds
AUC ROC: 0.746399


Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true,false': 'movie(D, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'genre(B, E), genre(F, E)'}, {'true,false,true,true': [0.0, 1, 0], 'true,true': [0.0, 0, 20], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [4.775, 57, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true,false': 'movie(D, B)', 'true,false,true,true': 'movie(D, F), female(F)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, A)'}, {'true,true': [7.3e-08, 0, 20], 'true,false,true,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.775, 57, 38], 'true,false,true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true,false': 'movie(D, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'genre(B, E), genre(F, E)'}, {'true,false,true,true': [0.0, 1, 0], 'true,true': [0.0, 0, 20], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [4.775, 57, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true,false': 'movie(D, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,true': [5.16e-08, 0, 20], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [4.775, 57, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 1, 0], 'false': [4.775, 57, 38], 'true,true': [2.11e-08, 0, 20]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 1, 0], 'false': [4.775, 57, 38], 'true,true': [1.49e-08, 0, 20]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 1, 0], 'false': [4.775, 57, 38], 'true,true': [0.0, 0, 20]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,true': [0.0, 0, 20], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [4.775, 57, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 1, 0], 'false': [4.775, 57, 38], 'true,true': [0.0, 0, 20]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'false': [4.775, 57, 38], 'true,true': [0.0, 0, 20], 'true,false,false': [0.0, 0, 0]}]
{'': [0.04535147392290242, 0.24000000000000035], 'true,false': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false,true': [0.0, nan]}
{'': [0.03237580555397633, 0.24000000000000019], 'true,false': [0.0, nan], 'true,false,true,true': [0.0, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false,true': [0.0, nan]}
{'': [0.02021770255628346, 0.24000000000000016], 'true,false': [0.0, nan], 'true': [-2.6645352591003756e-16, 0.0], 'true,false,true': [0.0, nan]}
{'': [0.012221093081438202, 0.24000000000000019], 'true,false': [0.0, nan], 'true': [1.3322676295501878e-16, 0.0], 'true,false,true': [0.0, nan]}
{'': [0.007750664054197215, 0.2400000000000003], 'true': [2.2204460492503132e-17, 0.0]}
{'': [0.005253645502768649, 0.24000000000000005], 'true': [1.1102230246251566e-17, 0.0]}
{'': [0.0037756072829033234, 0.2400000000000006], 'true': [-2.7755575615628914e-17, 0.0]}
{'': [0.0028422439552702977, 0.2399999999999995], 'true,false': [0.0, nan], 'true': [-2.2204460492503132e-17, 0.0], 'true,false,true': [0.0, nan]}
{'': [0.002218437127866534, 0.24000000000000005], 'true': [-3.3306690738754695e-17, 0.0]}
{'': [0.0017815325217672335, 0.2400000000000007], 'true,false': [0.0, nan], 'true': [0.0, 0.0]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), female(A).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), female(A).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- director(B), female(A).;true;true', '2;true;movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- director(B), female(A).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- female(A), director(B).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), female(A).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- female(A), director(B).;true;true', '6;true;movie(C, A), movie(C, B).;true;true', '7;;workedunder(A, B) :- female(A), director(B).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- director(B), female(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- female(A), director(B).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.8581489350995115;  // std dev = 2,60e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.14185106490048768;  // std dev = 5,16e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.5553664367462843;  // std dev = 1,26e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.11231637819360632;  // std dev = 3,33e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.10159632948783626;  // std dev = 2,79e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then return 0.3207118471601495;  // std dev = 2,11e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.08518475138839679;  // std dev = 1,05e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.20975771563253542;  // std dev = 5,96e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then return 0.1770964977452775;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.1527438580936709;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.0684269778442027;  // std dev = 1,67e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then return 0.1340070300080111;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
Results
   AUC ROC   = 0.989226
   AUC PR    = 0.986907
   CLL	      = -0.136056
   Precision = 0.961424 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.980333


Total learning time: 2.181 seconds
Total inference time: 1.094 seconds
AUC ROC: 0.989226


Refined model AUC ROC: 0.989226


Dataset: uwcse->imdb, Fold: 2, Type: transfer, Time: 00:18:25
{'Inference time': 1.094, 'CLL': -0.136056, 'Parameter Learning results': {'Inference time': 0.943, 'CLL': -0.516486, 'F1': 0.632911, 'AUC ROC': 0.746399, 'Recall': 0.462963, 'AUC PR': 0.811178, 'Precision': [1.0, 0.5], 'Learning time': 1.869}, 'F1': 0.980333, 'AUC ROC': 0.989226, 'Mapping results': {'Finding best mapping': 0.9331488609313965, 'Generating mappings time': 0.26326847076416016, 'Total time': 3.881071090698242, 'Possible mappings': 2592, 'Knowledge compiling time': 0.014315128326416016, 'Generating paths time': 2.670332193374634}, 'Recall': 1.0, 'AUC PR': 0.986907, 'Precision': [0.961424, 0.5], 'Learning time': 4.05}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.8581489350995115;  // std dev = 2,60e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6813641993271577;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.719473412210955;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5288038212098718;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.5553664367462843;  // std dev = 1,26e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.39742934112412265;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.4175135841583102;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.10159632948783626;  // std dev = 2,79e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3025884514838787;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3207118471601495;  // std dev = 2,11e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.09269127618926104;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23719304019103774;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.08518475138839679;  // std dev = 1,05e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.19142843787805347;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.20975771563253542;  // std dev = 5,96e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.07877675473109176;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15835970847973962;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1770964977452775;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.13366131757790028;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1527438580936709;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.0684269778442027;  // std dev = 1,67e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11466128853019192;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1340070300080111;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
Results
   AUC ROC   = 0.95779
   AUC PR    = 0.925491
   CLL	      = -0.19503
   Precision = 0.912676 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954345


Total learning time: 2.26 seconds
Total inference time: 0.906 seconds
AUC ROC: 0.95779


Dataset: uwcse->imdb, Fold: 2, Type: scratch, Time: 00:18:29
{'Inference time': 0.906, 'CLL': -0.19503, 'F1': 0.954345, 'AUC ROC': 0.95779, 'Recall': 1.0, 'AUC PR': 0.925491, 'Precision': [0.912676, 0.5], 'Learning time': 2.26}


Best mapping found: ['publication(A,B) -> movie(A,B)', 'yearsinprogram(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'student(A) -> director(A)', 'professor(A) -> female(A)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- director(A), female(B).;true;false
0;true,false;movie(D, A).;true;true
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,false,true;genre(A, K), genre(I, K).;false;false
0;true,false,true;genre(A, G), genre(E, G).;false;true
0;true,false,true,false;movie(D, H), female(H).;false;false
0;true,false,false;movie(J, I).;true;false
1;;workedunder(B, A) :- director(A), female(B).;true;false
1;true,false;movie(E, A).;true;true
1;true;movie(C, A), movie(C, B).;false;true
1;true,false,false,false;movie(K, B).;false;false
1;true,false,false,true;genre(A, J), genre(H, J).;false;false
1;true,false,true;movie(F, B).;true;false
1;true,false,true,true;movie(E, G), female(G).;false;false
1;true,false,false;movie(I, H).;true;true
2;;workedunder(B, A) :- director(A), female(B).;true;false
2;true,false;movie(D, A).;true;false
2;true,false,true,false;movie(D, H), female(H).;false;false
2;true;movie(C, B), movie(C, A).;false;true
2;true,false,true;genre(A, G), genre(E, G).;false;true
3;;workedunder(B, A) :- director(A), female(B).;true;false
3;true,false;movie(D, A).;true;true
3;true;movie(C, B), movie(C, A).;false;true
3;true,false,false,false;movie(I, B).;false;true
3;true,false,true;movie(F, B).;false;false
3;true,false,false,false,false;movie(K, A).;false;false
3;true,false,false;movie(G, A), movie(H, B).;false;true
4;;workedunder(B, A) :- female(B), director(A).;true;false
4;true;movie(C, B), movie(C, A).;false;false
5;;workedunder(B, A) :- director(A), female(B).;true;false
5;true;movie(C, B), movie(C, A).;false;false
6;;workedunder(B, A) :- female(B), director(A).;true;false
6;true;movie(C, B), movie(C, A).;false;false
7;;workedunder(B, A) :- female(B), director(A).;true;false
7;true,false;movie(D, B).;true;true
7;true,false,false;movie(J, A).;false;false
7;true;movie(C, A), movie(C, B).;false;true
7;true,false,true;movie(E, A).;false;false
8;;workedunder(B, A) :- director(A), female(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(B, A) :- female(B), director(A).;true;false
9;true,false;movie(D, B).;false;true
9;true,false,false;movie(I, A).;false;false
9;true;movie(C, A), movie(C, B).;false;true
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1,19e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else if ( movie(D, G), female(G) )
%   | | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.21273060840628433;  // std dev = 7,579, 251,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109536;  // std dev = 3,04e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(E, A) )
%   | | | then if ( movie(D, F), female(F) )
%   | | | | then return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.18481325200183607;  // std dev = 7,579, 251,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 3,91e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else if ( movie(D, G), female(G) )
%   | | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.15715502486723248;  // std dev = 7,579, 251,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831014;  // std dev = 1,74e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(E, A) )
%   | | | then return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.13106707520471592;  // std dev = 7,579, 251,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015033;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.10749929765702576;  // std dev = 7,579, 251,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.08696232026046591;  // std dev = 7,579, 251,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253578;  // std dev = 1,01e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.06957740607137172;  // std dev = 7,579, 251,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.0551897231387374;  // std dev = 7,579, 251,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15274385809367122;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.04348672552329418;  // std dev = 7,579, 251,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1340070300080109;  // std dev = 5,96e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.03409117052861068;  // std dev = 7,579, 251,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=89 */
Results
   AUC ROC   = 0.702963
   AUC PR    = 0.776462
   CLL	      = -0.557553
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.397059
   F1        = 0.568421


Total learning time: 2.78 seconds
Total inference time: 0.845 seconds
AUC ROC: 0.702963


Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true,false': 'movie(D, B)', 'true,false,true,false': 'movie(D, G), female(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'genre(B, E), genre(F, E)'}, {'true,true': [1.19e-07, 0, 89], 'true,false,true,false,true': [0.0, 6, 0], 'true,false,true,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.579, 162, 89], 'true,false,true,false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true,false': 'movie(D, B)', 'true,false,true,true': 'movie(D, F), female(F)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, A)'}, {'true,true': [3.04e-07, 0, 89], 'true,false,true,true,true': [7.45e-09, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.579, 162, 89], 'true,false,true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true,false': 'movie(D, B)', 'true,false,true,false': 'movie(D, G), female(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'genre(B, E), genre(F, E)'}, {'true,true': [3.91e-07, 0, 89], 'true,false,true,false,true': [0.0, 6, 0], 'true,false,true,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.579, 162, 89], 'true,false,true,false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true,false': 'movie(D, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, A)'}, {'true,false,true,true': [0.0, 16, 0], 'true,true': [1.74e-07, 0, 89], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [7.579, 162, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [9.13e-09, 16, 0], 'false': [7.579, 162, 89], 'true,true': [0.0, 0, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [1.05e-08, 16, 0], 'false': [7.579, 162, 89], 'true,true': [0.0, 0, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 16, 0], 'false': [7.579, 162, 89], 'true,true': [1.01e-07, 0, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, B)'}, {'true,false,true,true': [0.0, 16, 0], 'true,true': [9.42e-08, 0, 89], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [7.579, 162, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 16, 0], 'false': [7.579, 162, 89], 'true,true': [0.0, 0, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [7.45e-09, 16, 0], 'false': [7.579, 162, 89], 'true,true': [5.96e-08, 0, 89], 'true,false,false': [0.0, 0, 0]}]
{'': [0.12916099773242762, 0.22885351026174214], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true,false': [-6.938893903907228e-18, nan], 'true': [1.5967252488991015e-16, -6.938893903907228e-18], 'true,false,true': [-1.1102230246251566e-17, -6.938893903907228e-18]}
{'': [0.09220629421772533, 0.22885351026174203], 'true,false': [3.469446951953614e-18, nan], 'true,false,true,true': [3.469446951953614e-18, nan], 'true': [1.037871411784416e-15, 3.469446951953614e-18], 'true,false,true': [3.469446951953614e-18, nan]}
{'': [0.05758001688029691, 0.228853510261742], 'true,false': [1.214306433183765e-17, nan], 'true,false,true,false': [0.0, nan], 'true': [1.7164796425665342e-15, 1.214306433183765e-17], 'true,false,true': [0.0, 0.0]}
{'': [0.034805673095935644, 0.22885351026174236], 'true,false': [-6.938893903907228e-18, nan], 'true': [3.3930411539105907e-16, -6.938893903907228e-18], 'true,false,true': [-6.938893903907228e-18, nan]}
{'': [0.022073891226353212, 0.2288535102617432], 'true': [-3.3930411539105907e-16, 5.204170427930421e-18]}
{'': [0.014962382391885092, 0.2288535102617425], 'true': [-3.991813122247754e-17, 6.938893903907228e-18]}
{'': [0.010752929541708851, 0.22885351026174153], 'true': [1.1476462726462293e-16, -1.734723475976807e-18]}
{'': [0.008094710784609913, 0.22885351026174053], 'true,false': [0.0, nan], 'true': [9.979532805619384e-17, 0.0], 'true,false,true': [0.0, nan]}
{'': [0.006318108940163956, 0.22885351026174167], 'true': [-7.484649604214538e-17, 0.0]}
{'': [0.005073804621993111, 0.22885351026174297], 'true,false': [3.469446951953614e-18, nan], 'true': [3.991813122247754e-17, 3.469446951953614e-18]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), female(A).;true;true', '0;true,false;genre(B, E), genre(F, E).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), female(A).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- director(B), female(A).;true;true', '2;true,false;genre(B, E), genre(F, E).;true;true', '2;true;movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- director(B), female(A).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- female(A), director(B).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), female(A).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- female(A), director(B).;true;true', '6;true;movie(C, A), movie(C, B).;true;true', '7;;workedunder(A, B) :- female(A), director(B).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- director(B), female(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- female(A), director(B).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1,19e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( genre(B, D), genre(E, D) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.8581489350995118;  // std dev = 1,19e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.14185106490048788;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109536;  // std dev = 3,33e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.12544463852839138;  // std dev = 1,86e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109536;  // std dev = 3,33e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.12544463852839138;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then if ( female(A) )
%   | | | | then return -0.12544463852839124;  // std dev = 6,45e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | | else if ( female(B) )
%   | | | | | then return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | | | else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.1254446385283913;  // std dev = 4,93e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 4,15e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( genre(B, D), genre(E, D) )
%   | | then return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.5553664367462835;  // std dev = 4,15e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360635;  // std dev = 2,63e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else if ( actor(A) )
%   | | | | then return -0.11231637819360639;  // std dev = 1,86e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | | else return -0.11231637819360636;  // std dev = 1,86e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.10159632948783628;  // std dev = 1,32e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.1015963294878364;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015033;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926094;  // std dev = 2,28e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716015033;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.08518475138839685;  // std dev = 2,63e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then if ( movie(E, A), movie(E, B) )
%   | | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return -0.08518475138839685;  // std dev = 2,63e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.08518475138839679;  // std dev = 2,63e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,32e-09, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.08518475138839682;  // std dev = 9,31e-10, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253578;  // std dev = 1,09e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253578;  // std dev = 1,09e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07877675473109172;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( actor(A) )
%   | | | then if ( female(A) )
%   | | | | then return -0.07877675473109179;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | | else return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527714;  // std dev = 9,86e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 9,86e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15274385809367122;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367122;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06842697784420272;  // std dev = 9,31e-10, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( actor(A) )
%   | | | then if ( female(A) )
%   | | | | then return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | | else return -0.06842697784420267;  // std dev = 2,63e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06842697784420271;  // std dev = 1,32e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202619;  // std dev = 1,86e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06419184008202619;  // std dev = 1,61e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.361 seconds
Total inference time: 0.979 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb, Fold: 3, Type: transfer, Time: 00:18:42
{'Inference time': 0.979, 'CLL': -0.094637, 'Parameter Learning results': {'Inference time': 0.845, 'CLL': -0.557553, 'F1': 0.568421, 'AUC ROC': 0.702963, 'Recall': 0.397059, 'AUC PR': 0.776462, 'Precision': [1.0, 0.5], 'Learning time': 2.78}, 'F1': 1.0, 'AUC ROC': 1.0, 'Mapping results': {'Finding best mapping': 0.7573847770690918, 'Generating mappings time': 0.23371458053588867, 'Total time': 3.5550577640533447, 'Possible mappings': 2592, 'Knowledge compiling time': 0.01588129997253418, 'Generating paths time': 2.5480709075927734}, 'Recall': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 7.141}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.14185106490048788;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.12544463852839113;  // std dev = 8,16e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360624;  // std dev = 8,69e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.10159632948783641;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.09269127618926104;  // std dev = 3,33e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.08518475138839679;  // std dev = 3,94e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109165;  // std dev = 5,77e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07324622576333704;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06842697784420267;  // std dev = 4,71e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06419184008202625;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.182 seconds
Total inference time: 0.74 seconds
AUC ROC: 1.0


Dataset: uwcse->imdb, Fold: 3, Type: scratch, Time: 00:18:46
{'Inference time': 0.74, 'CLL': -0.094637, 'F1': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.182}


Best mapping found: ['publication(A,B) -> movie(A,B)', 'yearsinprogram(A,B) -> movie(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'student(A) -> director(A)', 'professor(A) -> female(A)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- director(A), female(B).;true;false
0;true,false;movie(D, A).;true;true
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,false,true;genre(A, K), genre(I, K).;false;false
0;true,false,true;genre(A, G), genre(E, G).;false;true
0;true,false,true,false;movie(D, H), female(H).;false;false
0;true,false,false;movie(J, I).;true;false
1;;workedunder(B, A) :- director(A), female(B).;true;false
1;true,false;movie(E, A).;true;true
1;true;movie(C, A), movie(C, B).;false;true
1;true,false,false,false;movie(K, B).;false;false
1;true,false,false,true;genre(A, J), genre(H, J).;false;false
1;true,false,true;movie(F, B).;true;false
1;true,false,true,true;movie(E, G), female(G).;false;false
1;true,false,false;movie(I, H).;true;true
2;;workedunder(B, A) :- director(A), female(B).;true;false
2;true,false;movie(D, A).;true;false
2;true,false,true,false;movie(D, H), female(H).;false;false
2;true;movie(C, B), movie(C, A).;false;true
2;true,false,true;genre(A, G), genre(E, G).;false;true
3;;workedunder(B, A) :- director(A), female(B).;true;false
3;true,false;movie(D, A).;true;true
3;true;movie(C, B), movie(C, A).;false;true
3;true,false,false,false;movie(I, B).;false;true
3;true,false,true;movie(F, B).;false;false
3;true,false,false,false,false;movie(K, A).;false;false
3;true,false,false;movie(G, A), movie(H, B).;false;true
4;;workedunder(B, A) :- female(B), director(A).;true;false
4;true;movie(C, B), movie(C, A).;false;false
5;;workedunder(B, A) :- director(A), female(B).;true;false
5;true;movie(C, B), movie(C, A).;false;false
6;;workedunder(B, A) :- female(B), director(A).;true;false
6;true;movie(C, B), movie(C, A).;false;false
7;;workedunder(B, A) :- female(B), director(A).;true;false
7;true,false;movie(D, B).;true;true
7;true,false,false;movie(J, A).;false;false
7;true;movie(C, A), movie(C, B).;false;true
7;true,false,true;movie(E, A).;false;false
8;;workedunder(B, A) :- director(A), female(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(B, A) :- female(B), director(A).;true;false
9;true,false;movie(D, B).;false;true
9;true,false,false;movie(I, A).;false;false
9;true;movie(C, A), movie(C, B).;false;true
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.2997073766579535;  // std dev = 4,357, 77,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(E, A) )
%   | | | then if ( movie(D, F), female(F) )
%   | | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.25917655742961093;  // std dev = 4,357, 77,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.2173166635052926;  // std dev = 4,357, 77,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(E, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.17727045754799345;  // std dev = 4,357, 77,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.1413969444699839;  // std dev = 4,357, 77,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.11088306052587805;  // std dev = 4,357, 77,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.0858978963909006;  // std dev = 4,357, 77,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.06597828264195327;  // std dev = 4,357, 77,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.050382708254619754;  // std dev = 4,357, 77,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, A) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.0383201135660994;  // std dev = 4,357, 77,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=34 */
Results
   AUC ROC   = 0.749227
   AUC PR    = 0.814346
   CLL	      = -0.518054
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.47181
   F1        = 0.641129


Total learning time: 2.379 seconds
Total inference time: 0.861 seconds
AUC ROC: 0.749227


Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true,false': 'movie(D, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'genre(B, E), genre(F, E)'}, {'true,false,true,true': [0.0, 2, 0], 'true,true': [0.0, 0, 11], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [4.357, 43, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true,false': 'movie(D, B)', 'true,false,true,true': 'movie(D, F), female(F)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, A)'}, {'true,true': [4.21e-08, 0, 11], 'true,false,true,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.357, 43, 34], 'true,false,true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true,false': 'movie(D, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'genre(B, E), genre(F, E)'}, {'true,false,true,true': [0.0, 2, 0], 'true,true': [0.0, 0, 11], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [4.357, 43, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true,false': 'movie(D, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,true': [4.21e-08, 0, 11], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [4.357, 43, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 2, 0], 'false': [4.357, 43, 34], 'true,true': [0.0, 0, 11]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 2, 0], 'false': [4.357, 43, 34], 'true,true': [2.11e-08, 0, 11]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 2, 0], 'false': [4.357, 43, 34], 'true,true': [0.0, 0, 11]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, B)'}, {'true,false,true,true': [0.0, 2, 0], 'true,true': [7.45e-09, 0, 11], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [4.357, 43, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 2, 0], 'false': [4.357, 43, 34], 'true,true': [7.45e-09, 0, 11]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 2, 0], 'false': [4.357, 43, 34], 'true,true': [5.27e-09, 0, 11], 'true,false,false': [0.0, 0, 0]}]
{'': [0.13017751479289916, 0.2465845842469223], 'true,false': [0.0, nan], 'true': [-1.6148698540002277e-16, 0.0], 'true,false,true': [0.0, nan]}
{'': [0.09293197203688684, 0.24658458424692178], 'true,false': [0.0, nan], 'true,false,true,true': [0.0, nan], 'true': [1.6148698540002277e-16, 0.0], 'true,false,true': [0.0, nan]}
{'': [0.058033180532859226, 0.24658458424692184], 'true,false': [0.0, nan], 'true': [-2.0185873175002846e-16, 0.0], 'true,false,true': [0.0, nan]}
{'': [0.035079599134944475, 0.24658458424692176], 'true,false': [0.0, nan], 'true': [1.6148698540002277e-16, 0.0], 'true,false,true': [0.0, nan]}
{'': [0.022247616169769523, 0.24658458424692253], 'true': [-6.055761952500853e-17, 0.0]}
{'': [0.015080138659130613, 0.24658458424692192], 'true': [4.0371746350005693e-17, 0.0]}
{'': [0.010837556762937359, 0.24658458424692203], 'true': [-2.5232341468753557e-17, 0.0]}
{'': [0.008158417412435698, 0.24658458424692226], 'true,false': [0.0, nan], 'true': [5.046468293750712e-18, 0.0], 'true,false,true': [0.0, nan]}
{'': [0.006367833436260795, 0.24658458424692176], 'true': [5.046468293750712e-18, 0.0]}
{'': [0.005113736250350803, 0.2465845842469219], 'true,false': [0.0, nan], 'true': [2.523234146875356e-18, 0.0]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), female(A).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), female(A).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- director(B), female(A).;true;true', '2;true;movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- director(B), female(A).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- female(A), director(B).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), female(A).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- female(A), director(B).;true;true', '6;true;movie(C, A), movie(C, B).;true;true', '7;;workedunder(A, B) :- female(A), director(B).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- director(B), female(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- female(A), director(B).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0.8025933795439559;  // std dev = 0,229, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0.6749928282743816;  // std dev = 0,229, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0.524356843345453;  // std dev = 0,229, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0.3941295564832445;  // std dev = 0,229, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0.29968717683406043;  // std dev = 0,229, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B) )
%   | | then return 0.28992264176878463;  // std dev = 4,21e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(A), actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 1,49e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.39763105480980604;  // std dev = 0,625, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.23403201954239966;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( actor(A), actor(B) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.3404508025571596;  // std dev = 0,563, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B) )
%   | | then return 0.1947063533857358;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(A), actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 7,45e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.29097686863711114;  // std dev = 0,497, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.16597574808260665;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( actor(A), actor(B) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.24946382820712962;  // std dev = 0,435, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.14425417544433386;  // std dev = 3,49e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( actor(A), actor(B) )
%   | | then return -0.06419184008202622;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.2153668441378428;  // std dev = 0,380, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
Results
   AUC ROC   = 0.992947
   AUC PR    = 0.991385
   CLL	      = -0.134994
   Precision = 0.973988 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986823


Total learning time: 2.58 seconds
Total inference time: 0.902 seconds
AUC ROC: 0.992947


Refined model AUC ROC: 0.992947


Dataset: uwcse->imdb, Fold: 4, Type: transfer, Time: 00:18:57
{'Inference time': 0.902, 'CLL': -0.134994, 'Parameter Learning results': {'Inference time': 0.861, 'CLL': -0.518054, 'F1': 0.641129, 'AUC ROC': 0.749227, 'Recall': 0.47181, 'AUC PR': 0.814346, 'Precision': [1.0, 0.5], 'Learning time': 2.379}, 'F1': 0.986823, 'AUC ROC': 0.992947, 'Mapping results': {'Finding best mapping': 0.7545621395111084, 'Generating mappings time': 0.2630329132080078, 'Total time': 3.7446343898773193, 'Possible mappings': 2592, 'Knowledge compiling time': 0.01412343978881836, 'Generating paths time': 2.7129087448120117}, 'Recall': 1.0, 'AUC PR': 0.991385, 'Precision': [0.973988, 0.5], 'Learning time': 4.959}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
Results
   AUC ROC   = 0.986647
   AUC PR    = 0.973988
   CLL	      = -0.122206
   Precision = 0.973988 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986823


Total learning time: 2.048 seconds
Total inference time: 0.768 seconds
AUC ROC: 0.986647


Dataset: uwcse->imdb, Fold: 4, Type: scratch, Time: 00:19:00
{'Inference time': 0.768, 'CLL': -0.122206, 'F1': 0.986823, 'AUC ROC': 0.986647, 'Recall': 1.0, 'AUC PR': 0.973988, 'Precision': [0.973988, 0.5], 'Learning time': 2.048}


Best mapping found: ['publication(A,B) -> movie(A,B)', 'yearsinprogram(A,B) -> movie(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'student(A) -> director(A)', 'professor(A) -> female(A)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- director(A), female(B).;true;false
0;true,false;movie(D, A).;true;true
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,false,true;genre(A, K), genre(I, K).;false;false
0;true,false,true;genre(A, G), genre(E, G).;false;true
0;true,false,true,false;movie(D, H), female(H).;false;false
0;true,false,false;movie(J, I).;true;false
1;;workedunder(B, A) :- director(A), female(B).;true;false
1;true,false;movie(E, A).;true;true
1;true;movie(C, A), movie(C, B).;false;true
1;true,false,false,false;movie(K, B).;false;false
1;true,false,false,true;genre(A, J), genre(H, J).;false;false
1;true,false,true;movie(F, B).;true;false
1;true,false,true,true;movie(E, G), female(G).;false;false
1;true,false,false;movie(I, H).;true;true
2;;workedunder(B, A) :- director(A), female(B).;true;false
2;true,false;movie(D, A).;true;false
2;true,false,true,false;movie(D, H), female(H).;false;false
2;true;movie(C, B), movie(C, A).;false;true
2;true,false,true;genre(A, G), genre(E, G).;false;true
3;;workedunder(B, A) :- director(A), female(B).;true;false
3;true,false;movie(D, A).;true;true
3;true;movie(C, B), movie(C, A).;false;true
3;true,false,false,false;movie(I, B).;false;true
3;true,false,true;movie(F, B).;false;false
3;true,false,false,false,false;movie(K, A).;false;false
3;true,false,false;movie(G, A), movie(H, B).;false;true
4;;workedunder(B, A) :- female(B), director(A).;true;false
4;true;movie(C, B), movie(C, A).;false;false
5;;workedunder(B, A) :- director(A), female(B).;true;false
5;true;movie(C, B), movie(C, A).;false;false
6;;workedunder(B, A) :- female(B), director(A).;true;false
6;true;movie(C, B), movie(C, A).;false;false
7;;workedunder(B, A) :- female(B), director(A).;true;false
7;true,false;movie(D, B).;true;true
7;true,false,false;movie(J, A).;false;false
7;true;movie(C, A), movie(C, B).;false;true
7;true,false,true;movie(E, A).;false;false
8;;workedunder(B, A) :- director(A), female(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(B, A) :- female(B), director(A).;true;false
9;true,false;movie(D, B).;false;true
9;true,false,false;movie(I, A).;false;false
9;true;movie(C, A), movie(C, B).;false;true
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1865071440547361;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.16225396791530478;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.13854723578839204;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.11632142708232386;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.0962366464154517;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.07864334234677384;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.06362098674257853;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.051053199608650256;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.040706395457497595;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.03229376271200775;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
Results
   AUC ROC   = 0.733994
   AUC PR    = 0.799672
   CLL	      = -0.53894
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.436202
   F1        = 0.607438


Total learning time: 1.915 seconds
Total inference time: 0.839 seconds
AUC ROC: 0.733994


Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [3.844, 45, 22], 'true,true': [8.43e-08, 0, 23]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [3.844, 45, 22], 'true,true': [5.96e-08, 0, 23]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [3.844, 45, 22], 'true,true': [0.0, 0, 23]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [3.844, 45, 22], 'true,true': [4.21e-08, 0, 23]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [3.844, 45, 22], 'true,true': [2.98e-08, 0, 23]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [3.844, 45, 22], 'true,true': [0.0, 0, 23]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [3.844, 45, 22], 'true,true': [1.49e-08, 0, 23]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [3.844, 45, 22], 'true,true': [0.0, 0, 23]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [3.844, 45, 22], 'true,true': [2.58e-08, 0, 23]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [3.844, 45, 22], 'true,true': [0.0, 0, 23]}]
{'': [3.089316242435218e-16, 0.22053909556694143], 'true': [3.089316242435218e-16, nan]}
{'': [1.544658121217609e-16, 0.22053909556694146], 'true': [1.544658121217609e-16, nan]}
{'': [-2.703151712130816e-16, 0.22053909556694146], 'true': [-2.703151712130816e-16, nan]}
{'': [7.723290606088045e-17, 0.2205390955669415], 'true': [7.723290606088045e-17, nan]}
{'': [3.8616453030440226e-17, 0.22053909556694173], 'true': [3.8616453030440226e-17, nan]}
{'': [-9.654113257610057e-18, 0.22053909556694148], 'true': [-9.654113257610057e-18, nan]}
{'': [9.654113257610057e-18, 0.22053909556694148], 'true': [9.654113257610057e-18, nan]}
{'': [-2.896233977283017e-17, 0.22053909556694107], 'true': [-2.896233977283017e-17, nan]}
{'': [2.896233977283017e-17, 0.22053909556694143], 'true': [2.896233977283017e-17, nan]}
{'': [0.0, 0.22053909556694135], 'true': [0.0, nan]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), female(A).;true;true', '1;;workedunder(A, B) :- director(B), female(A).;true;true', '2;;workedunder(A, B) :- director(B), female(A).;true;true', '3;;workedunder(A, B) :- director(B), female(A).;true;true', '4;;workedunder(A, B) :- female(A), director(B).;true;true', '5;;workedunder(A, B) :- director(B), female(A).;true;true', '6;;workedunder(A, B) :- female(A), director(B).;true;true', '7;;workedunder(A, B) :- female(A), director(B).;true;true', '8;;workedunder(A, B) :- director(B), female(A).;true;true', '9;;workedunder(A, B) :- female(A), director(B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( actor(B) )
%   | then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( actor(B) )
%   | then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( actor(B) )
%   | then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( actor(B) )
%   | then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( actor(B) )
%   | then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( actor(B) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( actor(B) )
%   | then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.1352095945470413;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.15969859666808095;  // std dev = 2,79e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(B) )
%   | | | then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.1288676370195173;  // std dev = 0,215, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
Results
   AUC ROC   = 0.948388
   AUC PR    = 0.89892
   CLL	      = -0.246154
   Precision = 0.864103 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.927098


Total learning time: 1.91 seconds
Total inference time: 0.81 seconds
AUC ROC: 0.948388


Refined model AUC ROC: 0.948388


Dataset: uwcse->imdb, Fold: 5, Type: transfer, Time: 00:19:10
{'Inference time': 0.81, 'CLL': -0.246154, 'Parameter Learning results': {'Inference time': 0.839, 'CLL': -0.53894, 'F1': 0.607438, 'AUC ROC': 0.733994, 'Recall': 0.436202, 'AUC PR': 0.799672, 'Precision': [1.0, 0.5], 'Learning time': 1.915}, 'F1': 0.927098, 'AUC ROC': 0.948388, 'Mapping results': {'Finding best mapping': 0.8548364639282227, 'Generating mappings time': 0.2641119956970215, 'Total time': 3.6283226013183594, 'Possible mappings': 2592, 'Knowledge compiling time': 0.014652252197265625, 'Generating paths time': 2.4947149753570557}, 'Recall': 1.0, 'AUC PR': 0.89892, 'Precision': [0.864103, 0.5], 'Learning time': 3.825}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1352095945470413;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14656735148626743;  // std dev = 0,086, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( female(A) )
%   | then return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.1288676370195173;  // std dev = 0,215, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
Results
   AUC ROC   = 0.992472
   AUC PR    = 0.990625
   CLL	      = -0.241338
   Precision = 0.864103 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.927098


Total learning time: 2.292 seconds
Total inference time: 0.777 seconds
AUC ROC: 0.992472


Dataset: uwcse->imdb, Fold: 5, Type: scratch, Time: 00:19:13
{'Inference time': 0.777, 'CLL': -0.241338, 'F1': 0.927098, 'AUC ROC': 0.992472, 'Recall': 1.0, 'AUC PR': 0.990625, 'Precision': [0.864103, 0.5], 'Learning time': 2.292}


Start learning from source dataset


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048793;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.12544463852839202;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360676;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.1015963294878365;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.0926912761892606;  // std dev = 1,41e-07, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839678;  // std dev = 9,88e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07877675473109143;  // std dev = 4,21e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07324622576333706;  // std dev = 8,43e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420308;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06419184008202611;  // std dev = 6,99e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */


Predicates from source: ['workedunder(person,person).', 'movie(movie,person).', 'actor(person).', 'director(person).'] 



Best mapping found: ['movie(A,B) -> haswordauthor(B,A)', 'workedunder(A,B) -> sameauthor(A,B)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,257, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.7743793015916559;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.7194734122109542;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.7194734122109544;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6522963629326777;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.5112632570804502;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.42338438085038665;  // std dev = 0,025, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.38180021108627393;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.32470506794042236;  // std dev = 0,023, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.2910097048833148;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.2579013284323635;  // std dev = 0,020, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.2608583437789282;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.2239613124025462;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.2116873686511041;  // std dev = 0,017, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.18049281336899037;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.18044743879008165;  // std dev = 0,023, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.18144860361955106;  // std dev = 7,45e-09, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.1450121079790968;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.15528490482632468;  // std dev = 0,021, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.15603741380474298;  // std dev = 1,29e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.12043571627423971;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
Results
   AUC ROC   = 0.591354
   AUC PR    = 0.942615
   CLL	      = -0.316568
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 3.964 seconds
Total inference time: 1.385 seconds
AUC ROC: 0.591354


Structure after Parameter Learning
['sameauthor(A, B)', {}, {}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'false': 'haswordauthor(B, E), haswordvenue(F, E)'}, {'false,false': [0.277, 16, 175], 'false,true': [0.0, 0, 12], 'true': [5.96e-08, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)', 'false': 'haswordauthor(A, E), haswordvenue(F, E)'}, {'false,false': [0.277, 16, 175], 'false,true': [4.21e-08, 0, 12], 'true': [5.96e-08, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)'}, {'false': [0.269, 16, 187], 'true': [0.0, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)', 'false': 'haswordauthor(A, E), haswordvenue(F, E)'}, {'false,false': [0.277, 16, 175], 'false,true': [4.21e-08, 0, 12], 'true': [0.025, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)'}, {'false': [0.269, 16, 187], 'true': [0.023, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)', 'false': 'haswordauthor(A, E), haswordvenue(F, E)'}, {'false,false': [0.277, 16, 175], 'false,true': [0.0, 0, 12], 'true': [0.02, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)'}, {'false': [0.269, 16, 187], 'true': [0.017, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'false': 'haswordauthor(B, E), haswordvenue(F, E)'}, {'false,false': [0.277, 16, 175], 'false,true': [7.45e-09, 0, 12], 'true': [0.023, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'false': 'haswordauthor(B, E), haswordvenue(F, E)'}, {'false,false': [0.277, 16, 175], 'false,true': [1.29e-08, 0, 12], 'true': [0.021, 0, 22]}]
{}
{'': [1.6148698540002277e-16, 0.07260549879881219], 'false': [-1.4802973661668753e-16, 0.07675228200981987]}
{'': [1.6148698540002277e-16, 0.072466195903888], 'false': [1.4802973661668753e-16, 0.07675228200981689]}
{'': [-2.8260222445003984e-16, 0.07233740593589187]}
{'': [2.8721878166594227e-05, 0.0722861401718938], 'false': [1.4802973661668753e-16, 0.07675228200981289]}
{'': [2.3151630403935158e-05, 0.0722706285620215]}
{'': [1.762799076254762e-05, 0.07229092039033173], 'false': [-6.47630097698008e-17, 0.07675228200981293]}
{'': [1.3396402611488455e-05, 0.07228475909497473]}
{'': [2.482002922514871e-05, 0.07228904198874664], 'false': [4.625929269271485e-18, 0.07675228200981336]}
{'': [1.9519797143495822e-05, 0.07228569721453519], 'false': [1.3877787807814457e-17, 0.0767522820098134]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['1;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '1;false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '2;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '2;false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '4;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '4;false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '5;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '6;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '6;false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '7;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '8;false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '9;false;haswordauthor(B, E), haswordvenue(F, E).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,257, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.7743793015916559;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.7194734122109542;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.7194734122109544;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6522963629326777;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.5084923766825963;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.4175135841583099;  // std dev = 3,65e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.38248971182395336;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.32071184716014955;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.28963045876610616;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.2551722425694895;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.22469902866599087;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.20975771563253573;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.17892938407342124;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.17709649774527747;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.14576927148011082;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.1527438580936709;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.12100982548335812;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
Results
   AUC ROC   = 0.482701
   AUC PR    = 0.908872
   CLL	      = -0.318113
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 2.936 seconds
Total inference time: 1.636 seconds
AUC ROC: 0.482701


Refined model AUC ROC: 0.482701


Dataset: imdb->cora, Fold: 1, Type: transfer, Time: 00:19:32
{'Inference time': 1.636, 'CLL': -0.318113, 'Parameter Learning results': {'Inference time': 1.385, 'CLL': -0.316568, 'F1': 0.954114, 'AUC ROC': 0.591354, 'Recall': 1.0, 'AUC PR': 0.942615, 'Precision': [0.912254, 0.5], 'Learning time': 3.964}, 'F1': 0.954114, 'AUC ROC': 0.482701, 'Mapping results': {'Finding best mapping': 0.0018339157104492188, 'Generating mappings time': 0.05157732963562012, 'Total time': 3.2542672157287598, 'Possible mappings': 26, 'Knowledge compiling time': 0.08340883255004883, 'Generating paths time': 3.1174402236938477}, 'Recall': 1.0, 'AUC PR': 0.908872, 'Precision': [0.912254, 0.5], 'Learning time': 6.9}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.7793312011093614;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,257, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.727998561682503;  // std dev = 0,037, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.6553612110941444;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.56383635071952;  // std dev = 0,045, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.5711365746839924;  // std dev = 5,16e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.5065550079700099;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,256, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.4238778836283327;  // std dev = 0,045, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.42931494060794423;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.38097710296889226;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.325063032352481;  // std dev = 0,040, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.32872404951297396;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.2885625795666314;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.2581587632552567;  // std dev = 0,035, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.2261213748855748;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.21275843078422832;  // std dev = 0,034, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.18033405629086702;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.1812076385401446;  // std dev = 0,038, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.18519107369119392;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.1446524438942474;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
Results
   AUC ROC   = 0.591354
   AUC PR    = 0.942615
   CLL	      = -0.325243
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 3.752 seconds
Total inference time: 1.343 seconds
AUC ROC: 0.591354


Dataset: imdb->cora, Fold: 1, Type: scratch, Time: 00:19:37
{'Inference time': 1.343, 'CLL': -0.325243, 'F1': 0.954114, 'AUC ROC': 0.591354, 'Recall': 1.0, 'AUC PR': 0.942615, 'Precision': [0.912254, 0.5], 'Learning time': 3.752}


Best mapping found: ['movie(A,B) -> haswordauthor(B,A)', 'workedunder(A,B) -> sameauthor(A,B)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6249475655895573;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5553664367462839;  // std dev = 9,42e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4893127157293235;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583102;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3686658221249624;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2780496975590654;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21383763039487122;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.17449004180223807;  // std dev = 0,297, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.17834409829411335;  // std dev = 0,016, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.13400787530437122;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.15369036730010918;  // std dev = 0,014, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.10961903128940303;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.13474602974937386;  // std dev = 0,013, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.09094513771883095;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
Results
   AUC ROC   = 0.569243
   AUC PR    = 0.934792
   CLL	      = -0.253558
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 4.952 seconds
Total inference time: 2.05 seconds
AUC ROC: 0.569243


Structure after Parameter Learning
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'true,false,true': [0.0, 0, 12], 'false': [0.0, 12, 0], 'true,true': [1.46e-07, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'true,false,true': [4.21e-08, 0, 12], 'false': [5.27e-09, 12, 0], 'true,true': [0.0, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'true,false,true': [0.0, 0, 12], 'false': [9.13e-09, 12, 0], 'true,true': [9.42e-08, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'true,false,true': [2.11e-08, 0, 12], 'false': [0.0, 12, 0], 'true,true': [0.0, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'true,false,true': [0.0, 0, 12], 'false': [5.27e-09, 12, 0], 'true,true': [2.98e-08, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'true,false,true': [2.11e-08, 0, 12], 'false': [5.27e-09, 12, 0], 'true,true': [0.0, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'true,false': [0.297, 8, 72], 'false': [3.73e-09, 12, 0], 'true,true': [0.0, 0, 50]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'true,false,true': [1.05e-08, 0, 12], 'false': [3.73e-09, 12, 0], 'true,true': [0.016, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'true,false,true': [1.05e-08, 0, 12], 'false': [2.63e-09, 12, 0], 'true,true': [0.014, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'true,false,true': [0.0, 0, 12], 'false': [5.89e-09, 12, 0], 'true,true': [0.013, 0, 50], 'true,false,false': [0.322, 8, 60]}]
{'': [0.05775147928994478, -1.1564823173178714e-17], 'true,false': [-1.4802973661668753e-16, 0.10380622837370185], 'true': [4.263256414560601e-16, 0.0899999999999987]}
{'': [0.05652766809753122, 2.3129646346357427e-18], 'true,false': [1.4802973661668753e-16, 0.10380622837370253], 'true': [-5.684341886080802e-16, 0.08937452391678224]}
{'': [0.055387092507768736, 6.938893903907228e-18], 'true,false': [-1.8503717077085943e-16, 0.1038062283737019], 'true': [1.7763568394002506e-16, 0.08879158861031984]}
{'': [0.05489389779165834, 0.0], 'true,false': [3.700743415417188e-17, 0.10380622837370153], 'true': [-3.552713678800501e-16, 0.08853952235924378]}
{'': [0.0547526880238895, 2.3129646346357427e-18], 'true,false': [-5.551115123125783e-17, 0.10380622837370218], 'true': [1.7763568394002505e-17, 0.08846735164124145]}
{'': [0.0547248701960579, 2.3129646346357427e-18], 'true,false': [3.700743415417188e-17, 0.10380622837370251], 'true': [-2.6645352591003756e-17, 0.0884531342635096]}
{'': [0.054728109414152716, 1.1564823173178713e-18], 'true': [-8.881784197001253e-18, 0.0884547897913058]}
{'': [0.05478570548430206, 1.1564823173178713e-18], 'true,false': [9.25185853854297e-18, 0.10380622837370251], 'true': [4.9289392432205755e-06, 0.08847201436408866]}
{'': [0.05478072062639818, 5.782411586589357e-19], 'true,false': [9.25185853854297e-18, 0.10380622837370253], 'true': [3.886867365041624e-06, 0.08847241233022665]}
{'': [0.05477537230790952, 2.8912057932946786e-18], 'true,false': [0.0, 0.10380622837370243], 'true': [3.1251297827061817e-06, 0.0884717207550065]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '0;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '0;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '1;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '2;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '3;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '4;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '5;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '7;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '8;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '9;true;haswordauthor(A, D), haswordvenue(E, D).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6249475655895573;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5553664367462839;  // std dev = 9,42e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4893127157293235;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583102;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3686658221249624;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2780496975590654;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21383763039487122;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1682663346557149;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1351817638661356;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.11050708250003509;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.13400703000801098;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.09163300171566717;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
Results
   AUC ROC   = 0.573001
   AUC PR    = 0.935755
   CLL	      = -0.25356
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 4.046 seconds
Total inference time: 1.897 seconds
AUC ROC: 0.573001


Refined model AUC ROC: 0.573001


Dataset: imdb->cora, Fold: 2, Type: transfer, Time: 00:19:54
{'Inference time': 1.897, 'CLL': -0.25356, 'Parameter Learning results': {'Inference time': 2.05, 'CLL': -0.253558, 'F1': 0.971831, 'AUC ROC': 0.569243, 'Recall': 1.0, 'AUC PR': 0.934792, 'Precision': [0.945205, 0.5], 'Learning time': 4.952}, 'F1': 0.971831, 'AUC ROC': 0.573001, 'Mapping results': {'Finding best mapping': 0.0018649101257324219, 'Generating mappings time': 0.053537845611572266, 'Total time': 3.079456090927124, 'Possible mappings': 26, 'Knowledge compiling time': 0.08211684226989746, 'Generating paths time': 2.941930055618286}, 'Recall': 1.0, 'AUC PR': 0.935755, 'Precision': [0.945205, 0.5], 'Learning time': 8.998000000000001}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6249475655895573;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5553664367462839;  // std dev = 9,42e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4893127157293235;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583102;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3686658221249624;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.284449019999228;  // std dev = 0,297, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.2568409765876957;  // std dev = 0,021, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21242105641234063;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.21093764469098414;  // std dev = 0,018, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.16725010837700433;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.17796260746571224;  // std dev = 0,016, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.13443319728825037;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.15340134689320578;  // std dev = 0,014, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.10994089684951637;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.134520646625173;  // std dev = 0,013, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.09119452003363988;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
Results
   AUC ROC   = 0.569243
   AUC PR    = 0.934792
   CLL	      = -0.253563
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 8.685 seconds
Total inference time: 2.895 seconds
AUC ROC: 0.569243


Dataset: imdb->cora, Fold: 2, Type: scratch, Time: 00:20:06
{'Inference time': 2.895, 'CLL': -0.253563, 'F1': 0.971831, 'AUC ROC': 0.569243, 'Recall': 1.0, 'AUC PR': 0.934792, 'Precision': [0.945205, 0.5], 'Learning time': 8.685}


Best mapping found: ['movie(A,B) -> haswordauthor(B,A)', 'workedunder(A,B) -> sameauthor(A,B)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.7405018762759829;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.842019902841446;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.6249475655895571;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7065881724562119;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.4893127157293236;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.5468696938740781;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,156, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.3686658221249617;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.4110177498156749;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.27804969755906545;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.3239868081601485;  // std dev = 1,05e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3142446320364998;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.21383763039487166;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.24921651191739846;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,156, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.16826633465571472;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.20364683239232817;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.13518176386613595;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.18058931296567846;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1702664859447046;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
Results
   AUC ROC   = 0.310525
   AUC PR    = 0.866163
   CLL	      = -0.35359
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 5.277 seconds
Total inference time: 1.545 seconds
AUC ROC: 0.310525


Structure after Parameter Learning
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true': 'haswordauthor(B, C)'}, {'false,true': [0.0, 0, 7], 'true,false': [0.0, 0, 7], 'false,false': [0.126, 2, 122], 'true,true': [0.322, 2, 15]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)', 'false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true': 'haswordauthor(A, C)'}, {'false,true': [2.11e-08, 0, 7], 'true,false': [2.11e-08, 0, 7], 'false,false': [0.126, 2, 122], 'true,true': [0.322, 2, 15]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)', 'true': 'haswordauthor(A, C)'}, {'true,false': [0.0, 0, 7], 'false': [0.123, 2, 129], 'true,true': [0.322, 2, 15]}]
['sameauthor(A, B)', {}, {}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)', 'true': 'haswordauthor(A, C)'}, {'true,false': [2.58e-08, 0, 7], 'false': [0.123, 2, 129], 'true,true': [0.322, 2, 15]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)', 'false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true': 'haswordauthor(A, C)'}, {'false,true': [1.05e-08, 0, 7], 'true,false': [0.0, 0, 7], 'false,false': [0.126, 2, 122], 'true,true': [0.322, 2, 15]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)', 'true': 'haswordauthor(A, C)'}, {'true,false': [1.29e-08, 0, 7], 'false': [0.123, 2, 129], 'true,true': [0.322, 2, 15]}]
['sameauthor(A, B)', {}, {}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)', 'true': 'haswordauthor(A, C)'}, {'true,false': [0.0, 0, 7], 'false': [0.123, 2, 129], 'true,true': [0.322, 2, 15]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true': 'haswordauthor(B, C)'}, {'false,true': [5.27e-09, 0, 7], 'true,false': [5.27e-09, 0, 7], 'false,false': [0.126, 2, 122], 'true,true': [0.322, 2, 15]}]
{'': [0.07638888888888928, 0.015034088922561424], 'false': [-2.5376526277146434e-16, 0.015868886576486736], 'true': [0.10380622837370206, -2.5376526277146434e-16]}
{'': [0.07537538597626736, 0.015029328539751419], 'false': [6.344131569286608e-17, 0.015868886576483526], 'true': [0.10380622837370226, 6.344131569286608e-17]}
{'': [0.07443081487783428, 0.015025006309058207], 'true': [0.10380622837370232, -6.344131569286608e-17]}
{}
{'': [0.07402237419322043, 0.015025070741555109], 'true': [0.10380622837370244, 9.516197353929913e-17]}
{'': [0.07390543090016016, 0.015025731334105636], 'false': [1.586032892321652e-17, 0.01586888657648274], 'true': [0.10380622837370246, -3.172065784643304e-17]}
{'': [0.07388239348253833, 0.01502471657802062], 'true': [0.10380622837370239, 2.3790493384824782e-17]}
{}
{'': [0.07388507605072714, 0.015025559887934577], 'true': [0.10380622837370244, -1.586032892321652e-17]}
{'': [0.0739553833208032, 0.01502329030554786], 'false': [3.96508223080413e-18, 0.015868886576482947], 'true': [0.10380622837370246, 3.96508223080413e-18]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '0;false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '0;true;haswordauthor(B, C).;true;true', '1;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '1;false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '1;true;haswordauthor(A, C).;true;true', '2;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '2;true;haswordauthor(A, C).;true;true', '4;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '4;true;haswordauthor(A, C).;true;true', '5;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '5;false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '5;true;haswordauthor(A, C).;true;true', '6;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '6;true;haswordauthor(A, C).;true;true', '8;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '8;true;haswordauthor(A, C).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '9;false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '9;true;haswordauthor(B, C).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.7405018762759829;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.842019902841446;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.6249475655895571;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7065881724562119;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.4893127157293236;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5463900390345181;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.3686658221249617;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.4110183242668963;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.27804969755906545;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.3221285216985266;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.31469053869484864;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.21383763039487166;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.2561386748621782;  // std dev = 1,67e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.25631833474548915;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.24876068054735304;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.16826633465571472;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.21044015727038046;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.21056697212947229;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.20321936164789212;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,156, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.13518176386613595;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.17759687466560306;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.1707947494502403;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.11050708250003544;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.15409041195196402;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.15312333831025016;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.14586282204624312;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
Results
   AUC ROC   = 0.310525
   AUC PR    = 0.866163
   CLL	      = -0.345355
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 5.013 seconds
Total inference time: 1.542 seconds
AUC ROC: 0.310525


Refined model AUC ROC: 0.310525


Dataset: imdb->cora, Fold: 3, Type: transfer, Time: 00:20:23
{'Inference time': 1.542, 'CLL': -0.345355, 'Parameter Learning results': {'Inference time': 1.545, 'CLL': -0.35359, 'F1': 0.949713, 'AUC ROC': 0.310525, 'Recall': 1.0, 'AUC PR': 0.866163, 'Precision': [0.904241, 0.5], 'Learning time': 5.277}, 'F1': 0.949713, 'AUC ROC': 0.310525, 'Mapping results': {'Finding best mapping': 0.0018279552459716797, 'Generating mappings time': 0.05234026908874512, 'Total time': 3.238694667816162, 'Possible mappings': 26, 'Knowledge compiling time': 0.12684297561645508, 'Generating paths time': 3.0576765537261963}, 'Recall': 1.0, 'AUC PR': 0.866163, 'Precision': [0.904241, 0.5], 'Learning time': 10.29}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.7405018762759829;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.8428817595269913;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.6249475655895571;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.7225444580317083;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7064154257736425;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.4893127157293236;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.5583760131117234;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5462204477130396;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.3686658221249617;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.41101749649998687;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.27804969755906545;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.31476498874362463;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.21383763039487166;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.2593048547344839;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.24864519837666368;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.16826633465571472;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.21267271845785457;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.20313758086402664;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.13518176386613595;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.17082028008066302;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,156, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,156, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
Results
   AUC ROC   = 0.310525
   AUC PR    = 0.866163
   CLL	      = -0.353585
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 5.7 seconds
Total inference time: 1.625 seconds
AUC ROC: 0.310525


Dataset: imdb->cora, Fold: 3, Type: scratch, Time: 00:20:30
{'Inference time': 1.625, 'CLL': -0.353585, 'F1': 0.949713, 'AUC ROC': 0.310525, 'Recall': 1.0, 'AUC PR': 0.866163, 'Precision': [0.904241, 0.5], 'Learning time': 5.7}


Best mapping found: ['movie(A,B) -> haswordauthor(B,A)', 'workedunder(A,B) -> sameauthor(A,B)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.7931082846930064;  // std dev = 0,247, 123,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=115 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.7236857844001434;  // std dev = 0,040, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109543;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.6590169170934779;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5595372742338629;  // std dev = 0,049, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.51270763291731;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.4206455572320447;  // std dev = 0,049, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.3854903448899568;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.3228558845378201;  // std dev = 0,044, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.2923949366913633;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.25664653328029147;  // std dev = 0,038, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.22756813088250044;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.21080576217403807;  // std dev = 0,033, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253567;  // std dev = 2,36e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.18195415627495878;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.1778693445163467;  // std dev = 0,029, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.1489180598054542;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.15333289068042064;  // std dev = 0,026, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.12748243607282558;  // std dev = 0,246, 123,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=115 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.13360609379365634;  // std dev = 0,015, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.13961548209244373;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.10479813005487512;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
Results
   AUC ROC   = 0.614653
   AUC PR    = 0.933172
   CLL	      = -0.248071
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 6.72 seconds
Total inference time: 2.256 seconds
AUC ROC: 0.614653


Structure after Parameter Learning
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'true,false': [0.247, 8, 115], 'false': [0.0, 8, 0], 'true,true': [2.31e-07, 0, 43]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'true,false,true': [4.21e-08, 0, 14], 'false': [0.0, 8, 0], 'true,true': [0.04, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'true,false,true': [0.0, 0, 14], 'false': [0.0, 8, 0], 'true,true': [0.049, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'true,false,true': [4.21e-08, 0, 14], 'false': [3.73e-09, 8, 0], 'true,true': [0.049, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'true,false,true': [0.0, 0, 14], 'false': [0.0, 8, 0], 'true,true': [0.044, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'true,false,true': [2.11e-08, 0, 14], 'false': [3.73e-09, 8, 0], 'true,true': [0.038, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'true,false,true': [2.36e-08, 0, 14], 'false': [0.0, 8, 0], 'true,true': [0.033, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'true,false,true': [0.0, 0, 14], 'false': [2.63e-09, 8, 0], 'true,true': [0.029, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'true,false': [0.246, 8, 115], 'false': [0.0, 8, 0], 'true,true': [0.026, 0, 43]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'true,false,true': [0.0, 0, 14], 'false': [0.0, 8, 0], 'true,true': [0.015, 0, 43], 'true,false,false': [0.261, 8, 101]}]
{'': [0.045870227899556054, -6.938893903907228e-18], 'true': [1.2393187251629655e-15, 0.06081036420120637]}
{'': [0.04557932904993595, 0.0], 'true,false': [1.2688263138573217e-16, 0.06800774345593652], 'true': [3.675559316735446e-05, 0.06063568827413749]}
{'': [0.04514442452973001, -1.734723475976807e-18], 'true,false': [-2.5376526277146434e-16, 0.06800774345593877], 'true': [5.625423924325934e-05, 0.06045057776073108]}
{'': [0.04493724148216312, 1.734723475976807e-18], 'true,false': [1.2688263138573217e-16, 0.06800774345593756], 'true': [5.535234292077651e-05, 0.060370461430220006]}
{'': [0.04486960307580228, 0.0], 'true,false': [-3.172065784643304e-17, 0.06800774345593753], 'true': [4.474112621785847e-05, 0.060347903739466024]}
{'': [0.04485060398680033, 1.734723475976807e-18], 'true,false': [3.172065784643304e-17, 0.06800774345593788], 'true': [3.417253826075536e-05, 0.06034388318119735]}
{'': [0.04484685110450151, 0.0], 'true,false': [3.9650822308041306e-17, 0.06800774345593763], 'true': [2.603978456714864e-05, 0.06034499784314353]}
{'': [0.04484745609809021, 8.673617379884035e-19], 'true,false': [0.0, 0.06800774345593794], 'true': [2.0147706666403764e-05, 0.06034711466021122]}
{'': [0.04484879709650666, 0.0], 'true': [1.5896865614581046e-05, 0.0603489875527717]}
{'': [0.044866176956946925, 0.0], 'true,false': [-1.586032892321652e-17, 0.06800774345593795], 'true': [5.449180435796543e-06, 0.06038929915831831]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '0;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '1;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '2;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '3;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '4;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '5;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '6;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '7;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '9;true;haswordauthor(A, D), haswordvenue(E, D).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.7847544396866669;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109543;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.6606509628169522;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.555366436746284;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5143368162338069;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.3867546553091642;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.2932830468274971;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.22818664181664933;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.20975771563253548;  // std dev = 5,77e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253567;  // std dev = 2,36e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.182395484606894;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.14924297758418867;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.15274385809367091;  // std dev = 1,49e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.12448430009556492;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.1340070300080109;  // std dev = 3,49e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.13400703000801095;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.10546563923252868;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
Results
   AUC ROC   = 0.624499
   AUC PR    = 0.936044
   CLL	      = -0.248029
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 4.068 seconds
Total inference time: 1.865 seconds
AUC ROC: 0.624499


Refined model AUC ROC: 0.624499


Dataset: imdb->cora, Fold: 4, Type: transfer, Time: 00:20:49
{'Inference time': 1.865, 'CLL': -0.248029, 'Parameter Learning results': {'Inference time': 2.256, 'CLL': -0.248071, 'F1': 0.970326, 'AUC ROC': 0.614653, 'Recall': 1.0, 'AUC PR': 0.933172, 'Precision': [0.942363, 0.5], 'Learning time': 6.72}, 'F1': 0.970326, 'AUC ROC': 0.624499, 'Mapping results': {'Finding best mapping': 0.0018014907836914062, 'Generating mappings time': 0.05198502540588379, 'Total time': 3.1728551387786865, 'Possible mappings': 26, 'Knowledge compiling time': 0.11441159248352051, 'Generating paths time': 3.004650354385376}, 'Recall': 1.0, 'AUC PR': 0.936044, 'Precision': [0.942363, 0.5], 'Learning time': 10.788}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.7847544396866669;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.6673462009593596;  // std dev = 0,246, 123,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=115 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5595443199101157;  // std dev = 0,039, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.5175683865428967;  // std dev = 0,246, 123,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=115 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.42063955698081634;  // std dev = 0,039, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.4267335670585573;  // std dev = 2,98e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.384289713215705;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.3228446559864074;  // std dev = 0,035, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.2955831970013567;  // std dev = 0,246, 123,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=115 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.25733227335354614;  // std dev = 0,037, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.2303726995781424;  // std dev = 0,246, 123,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=115 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.212179322763226;  // std dev = 0,041, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.21842988883607273;  // std dev = 1,05e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.18012767574765712;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.17887743372158998;  // std dev = 0,036, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.1834314764331979;  // std dev = 1,05e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.1475721129921952;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.15409805516090697;  // std dev = 0,032, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.15753278707738597;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.12321610132488725;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.13506645766766268;  // std dev = 0,029, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.13773466451763272;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.1044777068508934;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
Results
   AUC ROC   = 0.614653
   AUC PR    = 0.933172
   CLL	      = -0.248165
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 5.854 seconds
Total inference time: 2.573 seconds
AUC ROC: 0.614653


Dataset: imdb->cora, Fold: 4, Type: scratch, Time: 00:20:58
{'Inference time': 2.573, 'CLL': -0.248165, 'F1': 0.970326, 'AUC ROC': 0.614653, 'Recall': 1.0, 'AUC PR': 0.933172, 'Precision': [0.942363, 0.5], 'Learning time': 5.854}


Best mapping found: ['movie(A,B) -> haswordauthor(B,A)', 'workedunder(A,B) -> sameauthor(A,B)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.7194734122109543;  // std dev = 8,43e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.5553664367462837;  // std dev = 1,46e-07, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.5553664367462838;  // std dev = 8,43e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.31924068717900794;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.31924068717900794;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.4175135841583103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.3207118471601498;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.2397212075113599;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.25089233022153795;  // std dev = 0,398, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.18046108143334116;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.26866729539754597;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.17774141899777565;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.25517224256948967;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.21924663995047622;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.13524194948903226;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.13722535067088382;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.2097577156325356;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.1770964977452773;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.1840255203809288;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.104109171624494;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.10557046829371092;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.1770964977452774;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.15274385809367072;  // std dev = 3,65e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.15798015563983803;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.08100772544619032;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.08209998479453744;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.15274385809367083;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.13400703000801095;  // std dev = 4,47e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.13808177591042103;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.06361287114822929;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else return 0.11424399831015246;  // std dev = 0,230, 88,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=82 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
Results
   AUC ROC   = 0.625837
   AUC PR    = 0.937179
   CLL	      = -0.263314
   Precision = 0.946746 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972644


Total learning time: 14.926 seconds
Total inference time: 5.26 seconds
AUC ROC: 0.625837


Structure after Parameter Learning
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true': 'haswordvenue(D, C)', 'true,false,false,true': 'author(K, A), venue(K, J)', 'true,false,true': 'author(G, B), venue(G, F)', 'true,false,true,false': 'author(H, A), venue(H, F)', 'true,false,false': 'haswordauthor(B, I), haswordvenue(J, I)', 'true,false,false,true,false': 'author(L, B), venue(L, J)'}, {'true,false,false,true,true': [0.0, 0, 5], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,false,true,false,true': [0.0, 0, 4], 'true,false,false,false': [0.0, 0, 54], 'true,true': [0.0, 0, 62], 'true,false,true,true': [0.0, 0, 5], 'true,false,false,true,false,false': [0.427, 6, 19], 'false': [0.0, 6, 0], 'true,false,true,false,false': [0.427, 6, 19]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true': 'haswordvenue(D, C)', 'true,false,false,true': 'author(K, B), venue(K, J)', 'true,false,true': 'author(G, A), venue(G, F)', 'true,false,true,false': 'author(H, B), venue(H, F)', 'true,false,false': 'haswordauthor(A, I), haswordvenue(J, I)', 'true,false,false,true,false': 'author(L, A), venue(L, J)'}, {'true,false,false,true,true': [0.0, 0, 5], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,false,true,false,true': [0.0, 0, 4], 'true,false,false,false': [0.0, 0, 54], 'true,true': [8.43e-08, 0, 62], 'true,false,true,true': [0.0, 0, 5], 'true,false,false,true,false,false': [0.427, 6, 19], 'false': [0.0, 6, 0], 'true,false,true,false,false': [0.427, 6, 19]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true': 'haswordvenue(D, C)', 'true,false,false,true': 'author(K, B), venue(K, J)', 'true,false,true': 'author(G, A), venue(G, F)', 'true,false,true,false': 'author(H, B), venue(H, F)', 'true,false,false': 'haswordauthor(A, I), haswordvenue(J, I)', 'true,false,false,true,false': 'author(L, A), venue(L, J)'}, {'true,false,false,true,true': [0.0, 0, 5], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,false,true,false,true': [0.0, 0, 4], 'true,false,false,false': [8.43e-08, 0, 54], 'true,true': [1.46e-07, 0, 62], 'true,false,true,true': [0.0, 0, 5], 'true,false,false,true,false,false': [0.427, 6, 19], 'false': [0.0, 6, 0], 'true,false,true,false,false': [0.427, 6, 19]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true': 'haswordvenue(D, C)', 'true,false,false,true': 'author(K, A), venue(K, J)', 'true,false,true': 'author(G, B), venue(G, F)', 'true,false,true,false': 'author(H, A), venue(H, F)', 'true,false,false': 'haswordauthor(B, I), haswordvenue(J, I)', 'true,false,false,true,false': 'author(L, B), venue(L, J)'}, {'true,false,false,true,true': [1.49e-08, 0, 5], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,false,true,false,true': [0.0, 0, 4], 'true,false,false,false': [0.0, 0, 54], 'true,true': [0.0, 0, 62], 'true,false,true,true': [1.49e-08, 0, 5], 'true,false,false,true,false,false': [0.427, 6, 19], 'false': [0.0, 6, 0], 'true,false,true,false,false': [0.427, 6, 19]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true': 'haswordvenue(D, C)', 'true,false,false,true': 'author(K, A), venue(K, J)', 'true,false,true': 'author(G, A), venue(G, F)', 'true,false,true,false': 'author(H, B), venue(H, F)', 'true,false,false': 'haswordauthor(B, I), haswordvenue(J, I)'}, {'true,false,false,true,true': [0.0, 0, 5], 'true,false,true,false,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 54], 'true,true': [0.0, 0, 62], 'true,false,true,true': [0.0, 0, 4], 'false': [2.63e-09, 6, 0], 'true,false,true,false,false': [0.427, 6, 19], 'true,false,false,true,false': [0.398, 6, 23]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true': 'haswordvenue(D, C)', 'true,false,false,true': 'author(K, B), venue(K, J)', 'true,false,true': 'author(G, B), venue(G, F)', 'true,false,true,false': 'author(H, A), venue(H, F)', 'true,false,false': 'haswordauthor(B, I), haswordvenue(J, I)', 'true,false,false,true,false': 'author(L, A), venue(L, J)'}, {'true,false,false,true,true': [0.0, 0, 4], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,false,true,false,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 54], 'true,true': [0.0, 0, 62], 'true,false,true,true': [0.0, 0, 5], 'true,false,false,true,false,false': [0.427, 6, 19], 'false': [2.63e-09, 6, 0], 'true,false,true,false,false': [0.427, 6, 19]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true': 'haswordvenue(D, C)', 'true,false,false,true': 'author(K, B), venue(K, J)', 'true,false,true': 'author(G, B), venue(G, F)', 'true,false,true,false': 'author(H, A), venue(H, F)', 'true,false,false': 'haswordauthor(A, I), haswordvenue(J, I)', 'true,false,false,true,false': 'author(L, A), venue(L, J)'}, {'true,false,false,true,true': [0.0, 0, 5], 'true,false,true,false,true': [0.0, 0, 5], 'true,false,false,true,false,true': [0.0, 0, 4], 'true,false,false,false': [0.0, 0, 54], 'true,true': [0.0, 0, 62], 'true,false,true,true': [0.0, 0, 4], 'true,false,false,true,false,false': [0.427, 6, 19], 'false': [0.0, 6, 0], 'true,false,true,false,false': [0.427, 6, 19]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true': 'haswordvenue(D, C)', 'true,false,false,true': 'author(K, B), venue(K, J)', 'true,false,true': 'author(G, B), venue(G, F)', 'true,false,true,false': 'author(H, A), venue(H, F)', 'true,false,false': 'haswordauthor(A, I), haswordvenue(J, I)', 'true,false,false,true,false': 'author(L, A), venue(L, J)'}, {'true,false,false,true,true': [0.0, 0, 5], 'true,false,true,false,true': [0.0, 0, 5], 'true,false,false,true,false,true': [0.0, 0, 4], 'true,false,false,false': [0.0, 0, 54], 'true,true': [0.0, 0, 62], 'true,false,true,true': [0.0, 0, 4], 'true,false,false,true,false,false': [0.427, 6, 19], 'false': [0.0, 6, 0], 'true,false,true,false,false': [0.427, 6, 19]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true': 'haswordvenue(D, C)', 'true,false,false,true': 'author(K, A), venue(K, J)', 'true,false,true': 'author(G, A), venue(G, F)', 'true,false,true,false': 'author(H, B), venue(H, F)', 'true,false,false': 'haswordauthor(A, I), haswordvenue(J, I)', 'true,false,false,true,false': 'author(L, B), venue(L, J)'}, {'true,false,false,true,true': [0.0, 0, 4], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,false,true,false,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 54], 'true,true': [3.65e-08, 0, 62], 'true,false,true,true': [0.0, 0, 5], 'true,false,false,true,false,false': [0.427, 6, 19], 'false': [1.86e-09, 6, 0], 'true,false,true,false,false': [0.427, 6, 19]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true,false,true,false': 'author(H, B), venue(H, F)', 'true': 'haswordvenue(D, C)', 'true,false,true': 'author(G, A), venue(G, F)'}, {'true,true': [4.47e-08, 0, 62], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,true,true': [0.0, 0, 5], 'true,false,false': [0.23, 6, 82], 'false': [0.0, 6, 0], 'true,false,true,false,false': [0.427, 6, 19]}]
{'': [0.060964083175810056, -6.938893903907228e-18], 'true,false': [0.14532871972318476, 0.0635330578512397], 'true': [-6.87622002348484e-16, 0.08868583714055676], 'true,false,false,true': [0.0, 0.1640903686087999], 'true,false,true': [0.0, 0.1640903686087999], 'true,false,true,false': [0.0, 0.18239999999999973], 'true,false,false': [0.14532871972318476, 0.0], 'true,false,false,true,false': [0.0, 0.18239999999999973]}
{'': [0.05702809044246478, -2.3129646346357427e-18], 'true,false': [0.14145757136736722, 0.059487947766625755], 'true': [1.1460366705808067e-16, 0.08387525127726578], 'true,false,false,true': [0.0, 0.1617254340074918], 'true,false,true': [0.0, 0.1617254340074918], 'true,false,true,false': [0.0, 0.18239999999999984], 'true,false,false': [0.14145757136736734, -3.289549702593056e-16], 'true,false,false,true,false': [0.0, 0.18239999999999984]}
{'': [0.053272870314488914, 0.0], 'true,false': [0.13776421743888317, 0.05562862183825561], 'true': [3.43811001174242e-16, 0.0792856064061817], 'true,false,false,true': [-4.4408920985006264e-17, 0.15946911632149502], 'true,false,true': [-4.4408920985006264e-17, 0.159469116321495], 'true,false,true,false': [0.0, 0.18239999999999995], 'true,false,false': [0.1377642174388833, 1.3158198810372225e-16], 'true,false,false,true,false': [0.0, 0.18239999999999995]}
{'': [0.051476419756637526, 0.0], 'true,false': [0.13599736290065606, 0.05378236836158465], 'true': [-3.1516008440972187e-16, 0.07708997743956934], 'true,false,false,true': [4.4408920985006264e-17, 0.15838972203099944], 'true,false,true': [4.4408920985006264e-17, 0.15838972203099944], 'true,false,true,false': [0.0, 0.1824000000000001], 'true,false,false': [0.13599736290065617, -3.618504672852362e-16], 'true,false,false,true,false': [0.0, 0.1824000000000001]}
{'': [0.05086331937800782, 1.1564823173178713e-18], 'true,false': [0.13539436317898956, 0.053152271028458535], 'true': [-2.1488187573390127e-16, 0.07634064373546039], 'true,false,false,true': [-2.2204460492503132e-17, 0.15802134170163137], 'true,false,true': [0.0, 0.1529110394042666], 'true,false,true,false': [-2.2204460492503132e-17, 0.1824], 'true,false,false': [0.1353943631789896, -8.22387425648264e-17]}
{'': [0.05072691106882453, 1.1564823173178713e-18], 'true,false': [0.13520406181628034, 0.053072461432053214], 'true': [-2.865091676452017e-17, 0.07618787534993916], 'true,false,false,true': [0.0, 0.15283271283874914], 'true,false,true': [0.0, 0.15790508413773024], 'true,false,true,false': [0.0, 0.18239999999999998], 'true,false,false': [0.13548428666418472, -3.289549702593056e-17], 'true,false,false,true,false': [0.0, 0.18240000000000006]}
{'': [0.05064543133441777, -1.1564823173178713e-18], 'true,false': [0.13533006446465462, 0.05288816977633213], 'true': [-5.0139104337910294e-17, 0.07608360663741998], 'true,false,false,true': [-5.551115123125783e-18, 0.15786693745147815], 'true,false,true': [0.0, 0.1527711943616602], 'true,false,true,false': [-5.551115123125783e-18, 0.18240000000000006], 'true,false,false': [0.13514161971674687, 0.0], 'true,false,false,true,false': [0.0, 0.1824000000000001]}
{'': [0.05060552430817312, 0.0], 'true,false': [0.135246986357035, 0.05285868508527143], 'true': [-2.5069552168955147e-17, 0.07603210723147866], 'true,false,false,true': [0.0, 0.15784969951118982], 'true,false,true': [0.0, 0.1527398819130919], 'true,false,true,false': [0.0, 0.18239999999999998], 'true,false,false': [0.135113403027724, -4.5231308410654523e-17], 'true,false,false,true,false': [0.0, 0.18240000000000006]}
{'': [0.05057323089072161, 5.782411586589357e-19], 'true,false': [0.13518709599319514, 0.052833177558711135], 'true': [2.1488187573390126e-17, 0.07599091167360404], 'true,false,false,true': [0.0, 0.15269313289370895], 'true,false,true': [0.0, 0.15794586860997817], 'true,false,true,false': [0.0, 0.18240000000000006], 'true,false,false': [0.13508899246350212, -2.05596856412066e-17], 'true,false,false,true,false': [0.0, 0.18240000000000006]}
{'': [0.0505381276512058, -5.782411586589357e-19], 'true,false': [0.1351334870665471, 0.05280243692134607], 'true,false,true,false': [0.0, 0.1824], 'true': [3.223228136008519e-17, 0.07594684712030679], 'true,false,true': [0.0, 0.15790078689375509]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '0;true,false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '0;true;haswordvenue(D, C).;true;true', '0;true,false,false,true;author(K, A), venue(K, J).;true;true', '0;true,false,true;author(G, B), venue(G, F).;true;true', '0;true,false,true,false;author(H, A), venue(H, F).;true;true', '0;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true', '0;true,false,false,true,false;author(L, B), venue(L, J).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;true,false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '1;true;haswordvenue(D, C).;true;true', '1;true,false,false,true;author(K, B), venue(K, J).;true;true', '1;true,false,true;author(G, A), venue(G, F).;true;true', '1;true,false,true,false;author(H, B), venue(H, F).;true;true', '1;true,false,false;haswordauthor(A, I), haswordvenue(J, I).;true;true', '1;true,false,false,true,false;author(L, A), venue(L, J).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;true,false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '2;true;haswordvenue(D, C).;true;true', '2;true,false,false,true;author(K, B), venue(K, J).;true;true', '2;true,false,true;author(G, A), venue(G, F).;true;true', '2;true,false,true,false;author(H, B), venue(H, F).;true;true', '2;true,false,false;haswordauthor(A, I), haswordvenue(J, I).;true;true', '2;true,false,false,true,false;author(L, A), venue(L, J).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;true,false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '3;true;haswordvenue(D, C).;true;true', '3;true,false,false,true;author(K, A), venue(K, J).;true;true', '3;true,false,true;author(G, B), venue(G, F).;true;true', '3;true,false,true,false;author(H, A), venue(H, F).;true;true', '3;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true', '3;true,false,false,true,false;author(L, B), venue(L, J).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;true,false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '4;true;haswordvenue(D, C).;true;true', '4;true,false,false,true;author(K, A), venue(K, J).;true;true', '4;true,false,true;author(G, A), venue(G, F).;true;true', '4;true,false,true,false;author(H, B), venue(H, F).;true;true', '4;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;true,false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '5;true;haswordvenue(D, C).;true;true', '5;true,false,false,true;author(K, B), venue(K, J).;true;true', '5;true,false,true;author(G, B), venue(G, F).;true;true', '5;true,false,true,false;author(H, A), venue(H, F).;true;true', '5;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true', '5;true,false,false,true,false;author(L, A), venue(L, J).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;true,false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '6;true;haswordvenue(D, C).;true;true', '6;true,false,false,true;author(K, B), venue(K, J).;true;true', '6;true,false,true;author(G, B), venue(G, F).;true;true', '6;true,false,true,false;author(H, A), venue(H, F).;true;true', '6;true,false,false;haswordauthor(A, I), haswordvenue(J, I).;true;true', '6;true,false,false,true,false;author(L, A), venue(L, J).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;true,false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '7;true;haswordvenue(D, C).;true;true', '7;true,false,false,true;author(K, B), venue(K, J).;true;true', '7;true,false,true;author(G, B), venue(G, F).;true;true', '7;true,false,true,false;author(H, A), venue(H, F).;true;true', '7;true,false,false;haswordauthor(A, I), haswordvenue(J, I).;true;true', '7;true,false,false,true,false;author(L, A), venue(L, J).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;true,false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '8;true;haswordvenue(D, C).;true;true', '8;true,false,false,true;author(K, A), venue(K, J).;true;true', '8;true,false,true;author(G, A), venue(G, F).;true;true', '8;true,false,true,false;author(H, B), venue(H, F).;true;true', '8;true,false,false;haswordauthor(A, I), haswordvenue(J, I).;true;true', '8;true,false,false,true,false;author(L, B), venue(L, J).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;true,false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '9;true,false,true,false;author(H, B), venue(H, F).;true;true', '9;true;haswordvenue(D, C).;true;true', '9;true,false,true;author(G, A), venue(G, F).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.7194734122109543;  // std dev = 8,43e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.5553664367462837;  // std dev = 1,46e-07, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.5553664367462838;  // std dev = 8,43e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.31924068717900794;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.31924068717900794;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.4175135841583103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.3207118471601498;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.2397212075113599;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.25089233022153795;  // std dev = 0,398, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.18046108143334116;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.26866729539754597;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.17774141899777565;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.25517224256948967;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.21924663995047622;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.13524194948903226;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.13722535067088382;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.2097577156325356;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.1770964977452773;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.1840255203809288;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.104109171624494;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.10557046829371092;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.1770964977452774;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.15274385809367072;  // std dev = 3,65e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.15798015563983803;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.08100772544619032;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.08209998479453744;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.15274385809367083;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.13400703000801095;  // std dev = 4,47e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.13808177591042103;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.06361287114822929;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.06444115843154939;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.13400703000801079;  // std dev = 5,05e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
Results
   AUC ROC   = 0.633929
   AUC PR    = 0.940131
   CLL	      = -0.263888
   Precision = 0.946746 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972644


Total learning time: 6.964 seconds
Total inference time: 4.984 seconds
AUC ROC: 0.633929


Refined model AUC ROC: 0.633929


Dataset: imdb->cora, Fold: 5, Type: transfer, Time: 00:21:36
{'Inference time': 4.984, 'CLL': -0.263888, 'Parameter Learning results': {'Inference time': 5.26, 'CLL': -0.263314, 'F1': 0.972644, 'AUC ROC': 0.625837, 'Recall': 1.0, 'AUC PR': 0.937179, 'Precision': [0.946746, 0.5], 'Learning time': 14.926}, 'F1': 0.972644, 'AUC ROC': 0.633929, 'Mapping results': {'Finding best mapping': 0.001840829849243164, 'Generating mappings time': 0.09038496017456055, 'Total time': 4.674018859863281, 'Possible mappings': 26, 'Knowledge compiling time': 0.1444716453552246, 'Generating paths time': 4.43731427192688}, 'Recall': 1.0, 'AUC PR': 0.940131, 'Precision': [0.946746, 0.5], 'Learning time': 21.89}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.7194734122109543;  // std dev = 8,43e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.5553664367462837;  // std dev = 1,46e-07, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.5553664367462838;  // std dev = 8,43e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.31924068717900794;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.31924068717900794;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.4175135841583103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.3207118471601498;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.2397212075113599;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.2397212075113599;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.18046108143334116;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.18046108143334116;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.25517224256948967;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.13722535067088382;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.14722981480352537;  // std dev = 0,397, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.2097577156325356;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.1770964977452773;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.18639358048713128;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.10331145251271515;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.10557046829371092;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.1770964977452774;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.15274385809367072;  // std dev = 3,65e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.1597606742684976;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.08041108947177426;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.08209998479453744;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.15274385809367083;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.13400703000801095;  // std dev = 4,47e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.13946141011932311;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.06316016365162888;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.0740364510627855;  // std dev = 0,397, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.13400703000801079;  // std dev = 5,05e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
Results
   AUC ROC   = 0.633929
   AUC PR    = 0.940131
   CLL	      = -0.263714
   Precision = 0.946746 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972644


Total learning time: 15.325 seconds
Total inference time: 4.816 seconds
AUC ROC: 0.633929


Dataset: imdb->cora, Fold: 5, Type: scratch, Time: 00:21:56
{'Inference time': 4.816, 'CLL': -0.263714, 'F1': 0.972644, 'AUC ROC': 0.633929, 'Recall': 1.0, 'AUC PR': 0.940131, 'Precision': [0.946746, 0.5], 'Learning time': 15.325}


Start learning from source dataset


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.41010705840311323;  // std dev = 0,497, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then if ( samebib(G, H), venue(H, A) )
%   | | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.15814893509951236;  // std dev = 0,458, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else return 0.1419835215656733;  // std dev = 0,451, 532,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=151 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.6082674590294416;  // std dev = 0,394, 26,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then if ( samebib(F, G), venue(G, A) )
%   | | | | then return 0.7517946635322563;  // std dev = 0,215, 41,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | | | else return -0.19942484866286608;  // std dev = 2,98e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else if ( author(H, E), venue(H, A) )
%   | | | | then return -0.02295426042757199;  // std dev = 0,381, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | | else return 0.35871468622085523;  // std dev = 0,497, 43,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=24 */
%   | else return 0.35202370278567024;  // std dev = 0,497, 5.005,000 (wgt'ed) examples reached here.  /* #neg=2.245 #pos=2.760 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, A) )
%   | | then return 0.06795644400828794;  // std dev = 0,382, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.13082081649506622;  // std dev = 0,451, 58,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | else return 0.12380614562619952;  // std dev = 0,451, 532,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2901341495645619;  // std dev = 0,496, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4887202242344147;  // std dev = 1,154, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1712343585007996;  // std dev = 0,034, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.16509021819879757;  // std dev = 0,030, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.11318861330342488;  // std dev = 0,450, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return 0.10649409944935567;  // std dev = 0,448, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else return 0.10591959844878777;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.42814999699794043;  // std dev = 0,394, 26,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.24565988466982056;  // std dev = 0,403, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else if ( author(G, E), venue(G, A) )
%   | | | | then return -0.06903779878907457;  // std dev = 0,381, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | | else return 0.2353636661092123;  // std dev = 0,497, 43,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=24 */
%   | else return 0.23013353776006945;  // std dev = 0,497, 5.005,000 (wgt'ed) examples reached here.  /* #neg=2.245 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then return 0.08894647261063159;  // std dev = 0,440, 67,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return -0.0050786374441736575;  // std dev = 0,816, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.10397268167268742;  // std dev = 0,456, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else return 0.08993294991894636;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.17820216504129513;  // std dev = 0,496, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.389377592054638;  // std dev = 1,161, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15428435232177184;  // std dev = 0,030, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.06747790892933093;  // std dev = 0,440, 55,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | else return 0.07554111158576145;  // std dev = 0,450, 532,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=151 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.27900862883990324;  // std dev = 0,394, 26,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.15697640207860583;  // std dev = 0,399, 72,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=41 */
%   | | | else return 0.058812154914182145;  // std dev = 0,475, 55,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=25 */
%   | else return 0.13549317079733164;  // std dev = 0,497, 5.005,000 (wgt'ed) examples reached here.  /* #neg=2.245 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then return 0.06141751687210451;  // std dev = 0,433, 67,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.035289037153494796;  // std dev = 0,827, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( author(L, J), venue(L, B) )
%   | | | | then return 0.07812320369768659;  // std dev = 1,093, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else return 0.07344480798082513;  // std dev = 0,457, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else return 0.06280869848181368;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.40278615556560604;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16469091747036776;  // std dev = 0,426, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then if ( samebib(G, H), venue(H, B) )
%   | | | | then if ( author(H, E) )
%   | | | | | then return 0.3965885563531156;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | | | else return 0.4315527552358654;  // std dev = 0,239, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | | else return -0.3134188340270842;  // std dev = 0,080, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else if ( author(I, E), venue(I, B) )
%   | | | | then return -0.24209857595505432;  // std dev = 0,214, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | | else return 0.12490494493142895;  // std dev = 0,497, 43,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=24 */
%   | else return 0.10224921246831457;  // std dev = 0,497, 5.005,000 (wgt'ed) examples reached here.  /* #neg=2.245 #pos=2.760 */
%   else return 0.0516812105479736;  // std dev = 0,448, 599,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=170 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0769369185959773;  // std dev = 0,495, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.17234476902487875;  // std dev = 0,060, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then if ( samebib(G, H), venue(H, A) )
%   | | | | then return 0.3535528625600269;  // std dev = 1,171, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return -0.18040259869349362;  // std dev = 0,029, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05132696421749561;  // std dev = 0,453, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return -0.027934490491961377;  // std dev = 0,726, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( author(L, J), venue(L, A) )
%   | | | | then return 0.0179857607172013;  // std dev = 1,048, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else return 0.05490371950572637;  // std dev = 0,457, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else return 0.04250325808481762;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05778472104422664;  // std dev = 0,495, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.14921654789265112;  // std dev = 0,053, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then if ( samebib(G, H), venue(H, B) )
%   | | | | then return 0.27481045981546387;  // std dev = 1,163, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return -0.1524329278855375;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04730209729321156;  // std dev = 0,453, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.041735694381589694;  // std dev = 0,750, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( author(L, J), venue(L, B) )
%   | | | | then return 0.007761443134823784;  // std dev = 1,046, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else return 0.04124940631549459;  // std dev = 0,457, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else return 0.03464776142351472;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.043386034496985665;  // std dev = 0,495, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.13130731190079434;  // std dev = 0,048, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then if ( samebib(G, H), venue(H, B) )
%   | | | | then return 0.20781469788102722;  // std dev = 1,163, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return -0.13377696140956405;  // std dev = 0,020, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.03829427279107112;  // std dev = 0,453, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.03517577125305302;  // std dev = 0,753, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( author(L, J), venue(L, B) )
%   | | | | then return 0.0061501450811639186;  // std dev = 1,046, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else return 0.03330169446410613;  // std dev = 0,457, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else return 0.028118542828079393;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */


Predicates from source: ['samevenue(venue,venue).', 'author(class,author).', 'haswordauthor(author,word).', 'haswordvenue(venue,word).', 'samebib(class,class).', 'venue(class,venue).'] 



Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;false;movie(D, A), movie(D, E).;true;false
0;false,true;movie(F, E), movie(F, B).;false;true
0;false,true,false,true;genre(A, H).;false;false
0;false,true,false;genre(E, G), genre(B, G).;true;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true,true,false,true;genre(A, G).;false;false
1;true,true;movie(C, E).;false;true
1;true;movie(D, A), movie(D, E).;true;false
1;false,true;genre(J, K), genre(A, K).;false;false
1;true,true,false,false;genre(E, H), genre(A, H).;false;false
1;true,true,false;genre(E, F), genre(B, F).;true;true
1;false;movie(I, A), movie(I, J).;true;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true,false;genre(E, H), genre(B, H).;false;false
2;false,true;genre(E, F), genre(A, F).;true;true
2;false;movie(D, B), movie(D, E).;true;true
2;false,false;movie(I, A), movie(I, J).;false;false
2;false,true,true;genre(B, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,false,true;genre(K, L), genre(B, L).;false;false
3;true,true;movie(C, E).;false;true
3;true;movie(D, A), movie(D, E).;true;false
3;false,false;movie(J, B), movie(J, K).;true;false
3;true,true,false,false;genre(E, G), genre(A, G).;false;false
3;true,true,false;genre(E, F), genre(B, F).;false;true
3;false;movie(H, A), movie(H, I).;false;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false;movie(D, B), movie(D, E).;true;false
4;false,true;genre(E, F), genre(A, F).;true;false
4;false,true,true;genre(B, G).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false,true;genre(J, K), genre(A, K).;false;true
5;true,true;movie(D, B).;false;true
5;true;movie(D, A), movie(D, E).;true;false
5;false,false;movie(I, A), movie(I, J).;true;false
5;true,true,false;genre(E, F), genre(A, F).;false;false
5;false;movie(G, B), movie(G, H).;false;true
5;false,false,true,false;genre(J, L), genre(B, L).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
6;true,true,false,true;genre(B, H).;true;false
6;true,true;movie(D, B).;true;true
6;true;movie(D, A), movie(D, E).;true;false
6;true,true,true;genre(E, F), genre(A, F).;false;false
6;true,true,false,false;genre(E, I), genre(B, I).;false;false
6;true,true,false;genre(E, G), genre(A, G).;true;true
6;true,true,false,true,true;genre(E, H).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false,false,true;genre(J, K), genre(B, K).;false;true
7;false,true,false;genre(E, G), genre(B, G).;true;false
7;false,true;movie(F, E), movie(F, B).;false;true
7;false;movie(D, A), movie(D, E).;true;true
7;false,true,false,true;genre(A, H).;false;false
7;false,false;movie(I, B), movie(I, J).;true;false
7;false,false,true,false;genre(J, L), genre(A, L).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false,false,true;genre(J, K), genre(A, K).;false;true
8;false,true,false;genre(E, G), genre(A, G).;true;false
8;false,true;movie(F, E), movie(F, A).;false;true
8;false;movie(D, B), movie(D, E).;true;true
8;false,true,false,true;genre(B, H).;false;false
8;false,false;movie(I, A), movie(I, J).;true;false
8;false,false,true,false;genre(J, L), genre(B, L).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false,false,true;genre(J, K), genre(A, K).;false;true
9;false,true,false;genre(E, G), genre(A, G).;true;false
9;false,true;movie(F, E), movie(F, A).;false;true
9;false;movie(D, B), movie(D, E).;true;true
9;false,true,false,true;genre(B, H).;false;false
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,false,true,false;genre(J, L), genre(B, L).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6359267128772905;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.5398498420741679;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then if ( genre(G, H), genre(A, H) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839133;  // std dev = 2,11e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4289562725350857;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.3264400476801364;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then return -0.10159632948783634;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24503149911444566;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926103;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.18482045881522097;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then return -0.08518475138839679;  // std dev = 2,24e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then if ( genre(E, F), genre(A, F) )
%   | | | then return -0.6366896337089866;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.16331036629101367;  // std dev = 3,347, 70,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1095631722929125;  // std dev = 3,452, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08584098948038044;  // std dev = 3,453, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then if ( genre(B, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06793016729667914;  // std dev = 3,455, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then if ( genre(B, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06419184008202622;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.900307
   AUC PR    = 0.83376
   CLL	      = -0.330655
   Precision = 0.802956 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.89071


Total learning time: 2.054 seconds
Total inference time: 1.044 seconds
AUC ROC: 0.900307


Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'false,true,false,false': [1.83e-08, 25, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [3.528, 16, 56], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 15, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, A), movie(F, G)', 'true,true': 'movie(C, E)', 'true': 'movie(D, A), movie(D, E)', 'false,true': 'genre(G, H), genre(A, H)'}, {'true,false': [0.0, 0, 0], 'false,true,false': [2.11e-08, 37, 0], 'true,true,true': [3.528, 16, 56], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'genre(E, H), genre(B, H)', 'false,true,true': 'genre(B, G)'}, {'false,true,true,false': [2.63e-09, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [3.528, 16, 56], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 37, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, A), movie(F, G)', 'true,true': 'movie(C, E)', 'true': 'movie(D, A), movie(D, E)'}, {'true,true,true': [3.528, 16, 56], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [1.05e-08, 40, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,true': 'genre(B, G)'}, {'false,true,true,false': [2.63e-09, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.528, 16, 56], 'false,true,false': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B), movie(F, G)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,true,true': [3.528, 16, 56], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [2.24e-08, 40, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(E, F), genre(A, F)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,true,true,true': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [3.347, 14, 56], 'false': [5.27e-09, 40, 0], 'true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'false,true,false,false': [0.0, 25, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [3.452, 16, 56], 'false,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 15, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false,true': 'genre(B, H)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'false,true,false,false': [0.0, 22, 0], 'true': [3.453, 16, 56], 'false,true,false,true,true': [0.0, 0, 0], 'false,true,false,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 15, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false,true': 'genre(B, H)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'false,true,false,false': [5.27e-09, 22, 0], 'true': [3.455, 16, 56], 'false,true,false,true,true': [0.0, 0, 0], 'false,true,false,true,false': [1.32e-09, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [7.9e-09, 15, 0]}]
{'': [0.1728395061728392, 4.163336342344337e-17], 'false': [4.163336342344337e-17, nan], 'false,true': [-1.4802973661668754e-17, 1.3322676295501878e-17], 'false,true,false': [nan, 1.3322676295501878e-17]}
{'': [0.17283950617283914, 2.4980018054066023e-17], 'false': [2.4980018054066023e-17, nan], 'true,true': [0.17283950617283914, nan], 'true': [0.17283950617283914, nan], 'false,true': [0.0, 1.200241107702872e-17]}
{'': [0.1728395061728386, -5.551115123125783e-18], 'false': [-5.551115123125783e-18, nan], 'false,true': [2.3129646346357427e-18, -9.00180830777154e-18], 'false,true,false': [nan, -9.00180830777154e-18], 'false,true,true': [nan, 2.3129646346357427e-18]}
{'': [0.17283950617284027, 2.7755575615628915e-18], 'false': [2.7755575615628915e-18, nan], 'true,true': [0.17283950617284027, nan], 'true': [0.17283950617284027, nan]}
{'': [0.17283950617283927, -4.163336342344337e-18], 'false': [-4.163336342344337e-18, nan], 'false,true': [2.3129646346357427e-18, -6.00120553851436e-18], 'false,true,true': [nan, 2.3129646346357427e-18]}
{'': [0.17283950617283952, 1.2490009027033011e-17], 'false': [1.2490009027033011e-17, nan], 'true,true': [0.17283950617283952, nan], 'true': [0.17283950617283952, nan]}
{'': [0.17283950617283939, 6.938893903907229e-19], 'true,true,true': [0.0, 0.15999999999999986], 'true,true': [0.17283950617283939, nan], 'true': [0.17283950617283939, nan]}
{'': [0.16552339843243413, 2.7755575615628915e-18], 'false': [2.7755575615628915e-18, nan], 'false,true': [9.251858538542971e-19, -1.1102230246251566e-18], 'false,true,false': [nan, -1.1102230246251566e-18]}
{'': [0.1656472711843066, 6.938893903907229e-19], 'false': [6.938893903907229e-19, nan], 'false,true': [9.251858538542971e-19, -4.440892098500626e-18], 'false,true,false,true': [nan, -5.782411586589357e-19], 'false,true,false': [-5.782411586589357e-19, -3.784851220313033e-18]}
{'': [0.16576698022409575, -2.0816681711721684e-18], 'false': [-2.0816681711721684e-18, nan], 'false,true': [4.163336342344337e-18, 5.551115123125783e-19], 'false,true,false,true': [nan, 5.782411586589357e-19], 'false,true,false': [5.782411586589357e-19, 1.261617073437678e-18]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false;movie(F, E), movie(F, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;genre(G, H), genre(A, H).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;genre(E, F), genre(A, F).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;genre(E, F), genre(A, F).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;true;genre(E, F), genre(A, F).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false;movie(F, E), movie(F, B).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;false;movie(F, E), movie(F, A).;true;true', '8;false,false;genre(E, G), genre(A, G).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;movie(F, E), movie(F, A).;true;true', '9;false,false;genre(E, G), genre(A, G).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( female(A) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839686;  // std dev = 2,08e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.08518475138839686;  // std dev = 2,08e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( director(B) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else if ( female(A) )
%   | | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07877675473109172;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06842697784420272;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801087;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094729
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.936 seconds
Total inference time: 1.484 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb, Fold: 1, Type: transfer, Time: 00:26:01
{'Inference time': 1.484, 'CLL': -0.094729, 'Parameter Learning results': {'Inference time': 1.044, 'CLL': -0.330655, 'F1': 0.89071, 'AUC ROC': 0.900307, 'Recall': 1.0, 'AUC PR': 0.83376, 'Precision': [0.802956, 0.5], 'Learning time': 2.054}, 'F1': 1.0, 'AUC ROC': 1.0, 'Mapping results': {'Finding best mapping': 0.02791595458984375, 'Generating mappings time': 0.06489253044128418, 'Total time': 4.930551767349243, 'Possible mappings': 126, 'Knowledge compiling time': 0.3641178607940674, 'Generating paths time': 4.473618268966675}, 'Recall': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 5.99}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.14185106490048768;  // std dev = 5,37e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.11231637819360632;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.10159632948783626;  // std dev = 2,79e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.09269127618926103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.0851847513883968;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07877675473109179;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
Results
   AUC ROC   = 0.95092
   AUC PR    = 0.910615
   CLL	      = -0.195966
   Precision = 0.910615 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.953216


Total learning time: 1.668 seconds
Total inference time: 0.747 seconds
AUC ROC: 0.95092


Dataset: cora->imdb, Fold: 1, Type: scratch, Time: 00:26:04
{'Inference time': 0.747, 'CLL': -0.195966, 'F1': 0.953216, 'AUC ROC': 0.95092, 'Recall': 1.0, 'AUC PR': 0.910615, 'Precision': [0.910615, 0.5], 'Learning time': 1.668}


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;false;movie(D, A), movie(D, E).;true;false
0;false,true;movie(F, E), movie(F, B).;false;true
0;false,true,false,true;genre(A, H).;false;false
0;false,true,false;genre(E, G), genre(B, G).;true;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true,true,false,true;genre(A, G).;false;false
1;true,true;movie(C, E).;false;true
1;true;movie(D, A), movie(D, E).;true;false
1;false,true;genre(J, K), genre(A, K).;false;false
1;true,true,false,false;genre(E, H), genre(A, H).;false;false
1;true,true,false;genre(E, F), genre(B, F).;true;true
1;false;movie(I, A), movie(I, J).;true;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true,false;genre(E, H), genre(B, H).;false;false
2;false,true;genre(E, F), genre(A, F).;true;true
2;false;movie(D, B), movie(D, E).;true;true
2;false,false;movie(I, A), movie(I, J).;false;false
2;false,true,true;genre(B, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,false,true;genre(K, L), genre(B, L).;false;false
3;true,true;movie(C, E).;false;true
3;true;movie(D, A), movie(D, E).;true;false
3;false,false;movie(J, B), movie(J, K).;true;false
3;true,true,false,false;genre(E, G), genre(A, G).;false;false
3;true,true,false;genre(E, F), genre(B, F).;false;true
3;false;movie(H, A), movie(H, I).;false;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false;movie(D, B), movie(D, E).;true;false
4;false,true;genre(E, F), genre(A, F).;true;false
4;false,true,true;genre(B, G).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false,true;genre(J, K), genre(A, K).;false;true
5;true,true;movie(D, B).;false;true
5;true;movie(D, A), movie(D, E).;true;false
5;false,false;movie(I, A), movie(I, J).;true;false
5;true,true,false;genre(E, F), genre(A, F).;false;false
5;false;movie(G, B), movie(G, H).;false;true
5;false,false,true,false;genre(J, L), genre(B, L).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
6;true,true,false,true;genre(B, H).;true;false
6;true,true;movie(D, B).;true;true
6;true;movie(D, A), movie(D, E).;true;false
6;true,true,true;genre(E, F), genre(A, F).;false;false
6;true,true,false,false;genre(E, I), genre(B, I).;false;false
6;true,true,false;genre(E, G), genre(A, G).;true;true
6;true,true,false,true,true;genre(E, H).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false,false,true;genre(J, K), genre(B, K).;false;true
7;false,true,false;genre(E, G), genre(B, G).;true;false
7;false,true;movie(F, E), movie(F, B).;false;true
7;false;movie(D, A), movie(D, E).;true;true
7;false,true,false,true;genre(A, H).;false;false
7;false,false;movie(I, B), movie(I, J).;true;false
7;false,false,true,false;genre(J, L), genre(A, L).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false,false,true;genre(J, K), genre(A, K).;false;true
8;false,true,false;genre(E, G), genre(A, G).;true;false
8;false,true;movie(F, E), movie(F, A).;false;true
8;false;movie(D, B), movie(D, E).;true;true
8;false,true,false,true;genre(B, H).;false;false
8;false,false;movie(I, A), movie(I, J).;true;false
8;false,false,true,false;genre(J, L), genre(B, L).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false,false,true;genre(J, K), genre(A, K).;false;true
9;false,true,false;genre(E, G), genre(A, G).;true;false
9;false,true;movie(F, E), movie(F, A).;false;true
9;false;movie(D, B), movie(D, E).;true;true
9;false,true,false,true;genre(B, H).;false;false
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,false,true,false;genre(J, L), genre(B, L).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.675050343550217;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.57180708071823;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then if ( genre(G, H), genre(A, H) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.45176579324149735;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.34222392063374174;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then return -0.1015963294878363;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.25697900587735223;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.19495307730525124;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then if ( genre(E, F), genre(A, F) )
%   | | | then return -0.6665848929340992;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.16198653563732937;  // std dev = 3,153, 70,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11808222449367026;  // std dev = 3,215, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09388616228918915;  // std dev = 3,216, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06842697784420271;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07552767702897926;  // std dev = 3,217, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.896605
   AUC PR    = 0.828645
   CLL	      = -0.336006
   Precision = 0.796069 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.886457


Total learning time: 2.353 seconds
Total inference time: 1.297 seconds
AUC ROC: 0.896605


Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.259, 13, 58], 'false,false': [0.0, 0, 0], 'false,true,true': [4.71e-08, 45, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, A), movie(F, G)', 'true,true': 'movie(C, E)', 'true': 'movie(D, A), movie(D, E)', 'false,true': 'genre(G, H), genre(A, H)'}, {'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 41, 0], 'true,true,true': [3.259, 13, 58], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 4, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'genre(E, H), genre(B, H)', 'false,true,true': 'genre(B, G)'}, {'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 1, 0], 'true': [3.259, 13, 58], 'false,false': [0.0, 0, 0], 'false,true,false,false': [1.05e-08, 43, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, A), movie(F, G)', 'true,true': 'movie(C, E)', 'true': 'movie(D, A), movie(D, E)'}, {'true,true,true': [3.259, 13, 58], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [1.05e-08, 45, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,true': 'genre(B, G)'}, {'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'true': [3.259, 13, 58], 'false,true,false': [0.0, 44, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B), movie(F, G)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,true,true': [3.259, 13, 58], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [2.11e-08, 45, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(E, F), genre(A, F)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [3.153, 12, 58], 'false': [0.0, 45, 0], 'true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.215, 13, 58], 'false,false': [0.0, 0, 0], 'false,true,true': [1.29e-08, 45, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.216, 13, 58], 'false,false': [0.0, 0, 0], 'false,true,true': [1.05e-08, 45, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.217, 13, 58], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 45, 0]}]
{'': [0.1495734973219595, 4.9343245538895844e-17], 'false': [4.9343245538895844e-17, nan], 'false,true': [4.9343245538895844e-17, nan]}
{'': [0.14957349732195865, -2.960594732333751e-17], 'false': [-2.960594732333751e-17, nan], 'true,true': [0.14957349732195865, nan], 'true': [0.14957349732195865, nan], 'false,true': [0.0, -2.4370749321040022e-17]}
{'': [0.1495734973219593, 7.401486830834377e-18], 'false': [7.401486830834377e-18, nan], 'false,true': [0.0, 5.046468293750712e-18], 'false,true,false': [0.0, 2.581914010756178e-18], 'false,true,true': [0.0, nan]}
{'': [0.14957349732195965, 2.4671622769447924e-18], 'false': [2.4671622769447924e-18, nan], 'true,true': [0.14957349732195965, nan], 'true': [0.14957349732195965, nan]}
{'': [0.1495734973219603, -1.603655480014115e-17], 'false': [-1.603655480014115e-17, nan], 'false,true': [0.0, -1.6401021954689813e-17], 'false,true,true': [0.0, nan]}
{'': [0.14957349732195974, 9.86864910777917e-18], 'false': [9.86864910777917e-18, nan], 'true,true': [0.14957349732195974, nan], 'true': [0.14957349732195974, nan]}
{'': [0.14957349732196001, 0.0], 'true,true,true': [0.0, 0.14204081632653068], 'true,true': [0.14957349732196001, nan], 'true': [0.14957349732196001, nan]}
{'': [0.14561400111731967, 3.7007434154171884e-18], 'false': [3.7007434154171884e-18, nan], 'false,true': [3.7007434154171884e-18, nan]}
{'': [0.14570831315339103, 2.4671622769447924e-18], 'false': [2.4671622769447924e-18, nan], 'false,true': [2.4671622769447924e-18, nan]}
{'': [0.14579676213928355, -1.8503717077085942e-18], 'false': [-1.8503717077085942e-18, nan], 'false,true': [-1.8503717077085942e-18, nan]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;genre(G, H), genre(A, H).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;genre(E, F), genre(A, F).;true;true', '2;false,false;genre(E, H), genre(B, H).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;genre(E, F), genre(A, F).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;true;genre(E, F), genre(A, F).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(D, F), genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( female(A) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( female(A) )
%   | then return -0.08518475138839685;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839682;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( director(B) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109172;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return -0.07324622576333704;  // std dev = 9,31e-10, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1340070300080111;  // std dev = 2,63e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 9,31e-10, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06419184008202619;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
Results
   AUC ROC   = 0.99537
   AUC PR    = 0.990826
   CLL	      = -0.121002
   Precision = 0.972973 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986301


Total learning time: 3.588 seconds
Total inference time: 1.178 seconds
AUC ROC: 0.99537


Refined model AUC ROC: 0.99537


Dataset: cora->imdb, Fold: 2, Type: transfer, Time: 00:26:18
{'Inference time': 1.178, 'CLL': -0.121002, 'Parameter Learning results': {'Inference time': 1.297, 'CLL': -0.336006, 'F1': 0.886457, 'AUC ROC': 0.896605, 'Recall': 1.0, 'AUC PR': 0.828645, 'Precision': [0.796069, 0.5], 'Learning time': 2.353}, 'F1': 0.986301, 'AUC ROC': 0.99537, 'Mapping results': {'Finding best mapping': 0.030170917510986328, 'Generating mappings time': 0.06714820861816406, 'Total time': 4.853814363479614, 'Possible mappings': 126, 'Knowledge compiling time': 0.3515036106109619, 'Generating paths time': 4.40498423576355}, 'Recall': 1.0, 'AUC PR': 0.990826, 'Precision': [0.972973, 0.5], 'Learning time': 5.941000000000001}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.8581489350995115;  // std dev = 2,60e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6813641993271577;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.719473412210955;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5288038212098718;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.5553664367462843;  // std dev = 1,26e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.39742934112412265;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.4175135841583102;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.10159632948783626;  // std dev = 2,79e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3025884514838787;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3207118471601495;  // std dev = 2,11e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.09269127618926104;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23719304019103774;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.08518475138839679;  // std dev = 1,05e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.19142843787805347;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.20975771563253542;  // std dev = 5,96e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.07877675473109176;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15835970847973962;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1770964977452775;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.13366131757790028;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1527438580936709;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.0684269778442027;  // std dev = 1,67e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11466128853019192;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1340070300080111;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
Results
   AUC ROC   = 0.95779
   AUC PR    = 0.925491
   CLL	      = -0.19503
   Precision = 0.912676 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954345


Total learning time: 2.35 seconds
Total inference time: 0.877 seconds
AUC ROC: 0.95779


Dataset: cora->imdb, Fold: 2, Type: scratch, Time: 00:26:21
{'Inference time': 0.877, 'CLL': -0.19503, 'F1': 0.954345, 'AUC ROC': 0.95779, 'Recall': 1.0, 'AUC PR': 0.925491, 'Precision': [0.912676, 0.5], 'Learning time': 2.35}


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;false;movie(D, A), movie(D, E).;true;false
0;false,true;movie(F, E), movie(F, B).;false;true
0;false,true,false,true;genre(A, H).;false;false
0;false,true,false;genre(E, G), genre(B, G).;true;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true,true,false,true;genre(A, G).;false;false
1;true,true;movie(C, E).;false;true
1;true;movie(D, A), movie(D, E).;true;false
1;false,true;genre(J, K), genre(A, K).;false;false
1;true,true,false,false;genre(E, H), genre(A, H).;false;false
1;true,true,false;genre(E, F), genre(B, F).;true;true
1;false;movie(I, A), movie(I, J).;true;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true,false;genre(E, H), genre(B, H).;false;false
2;false,true;genre(E, F), genre(A, F).;true;true
2;false;movie(D, B), movie(D, E).;true;true
2;false,false;movie(I, A), movie(I, J).;false;false
2;false,true,true;genre(B, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,false,true;genre(K, L), genre(B, L).;false;false
3;true,true;movie(C, E).;false;true
3;true;movie(D, A), movie(D, E).;true;false
3;false,false;movie(J, B), movie(J, K).;true;false
3;true,true,false,false;genre(E, G), genre(A, G).;false;false
3;true,true,false;genre(E, F), genre(B, F).;false;true
3;false;movie(H, A), movie(H, I).;false;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false;movie(D, B), movie(D, E).;true;false
4;false,true;genre(E, F), genre(A, F).;true;false
4;false,true,true;genre(B, G).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false,true;genre(J, K), genre(A, K).;false;true
5;true,true;movie(D, B).;false;true
5;true;movie(D, A), movie(D, E).;true;false
5;false,false;movie(I, A), movie(I, J).;true;false
5;true,true,false;genre(E, F), genre(A, F).;false;false
5;false;movie(G, B), movie(G, H).;false;true
5;false,false,true,false;genre(J, L), genre(B, L).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
6;true,true,false,true;genre(B, H).;true;false
6;true,true;movie(D, B).;true;true
6;true;movie(D, A), movie(D, E).;true;false
6;true,true,true;genre(E, F), genre(A, F).;false;false
6;true,true,false,false;genre(E, I), genre(B, I).;false;false
6;true,true,false;genre(E, G), genre(A, G).;true;true
6;true,true,false,true,true;genre(E, H).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false,false,true;genre(J, K), genre(B, K).;false;true
7;false,true,false;genre(E, G), genre(B, G).;true;false
7;false,true;movie(F, E), movie(F, B).;false;true
7;false;movie(D, A), movie(D, E).;true;true
7;false,true,false,true;genre(A, H).;false;false
7;false,false;movie(I, B), movie(I, J).;true;false
7;false,false,true,false;genre(J, L), genre(A, L).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false,false,true;genre(J, K), genre(A, K).;false;true
8;false,true,false;genre(E, G), genre(A, G).;true;false
8;false,true;movie(F, E), movie(F, A).;false;true
8;false;movie(D, B), movie(D, E).;true;true
8;false,true,false,true;genre(B, H).;false;false
8;false,false;movie(I, A), movie(I, J).;true;false
8;false,false,true,false;genre(J, L), genre(B, L).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false,false,true;genre(J, K), genre(A, K).;false;true
9;false,true,false;genre(E, G), genre(A, G).;true;false
9;false,true;movie(F, E), movie(F, A).;false;true
9;false;movie(D, B), movie(D, E).;true;true
9;false,true,false,true;genre(B, H).;false;false
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,false,true,false;genre(J, L), genre(B, L).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6457595545685355;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then if ( genre(A, H) )
%   | | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.14185106490048766;  // std dev = 7,88e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.54789521854257;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then if ( genre(G, H), genre(A, H) )
%   | | then return -0.12544463852839138;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.43471726830400137;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.11231637819360629;  // std dev = 5,37e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.3304125955184558;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then return -0.1015963294878364;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2479976539753087;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.09269127618926103;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.1872945372763586;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then return -0.08518475138839678;  // std dev = 5,77e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then if ( genre(E, F), genre(A, F) )
%   | | | then return -0.6443000116869168;  // std dev = 2,98e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.19138073948679254;  // std dev = 5,408, 213,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109154;  // std dev = 7,22e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11222585782129231;  // std dev = 5,849, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then if ( genre(A, H) )
%   | | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08835292656538167;  // std dev = 5,855, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then if ( genre(B, H) )
%   | | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.0684269778442027;  // std dev = 2,98e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0702807223205001;  // std dev = 5,860, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then if ( genre(B, H) )
%   | | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.892157
   AUC PR    = 0.822581
   CLL	      = -0.327087
   Precision = 0.809524 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.894737


Total learning time: 4.009 seconds
Total inference time: 0.895 seconds
AUC ROC: 0.892157


Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false,true': 'genre(A, H)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'false,true,false,false': [7.88e-08, 107, 0], 'true': [6.149, 48, 178], 'false,true,false,true,true': [0.0, 1, 0], 'false,true,false,true,false': [0.0, 5, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 17, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, A), movie(F, G)', 'true,true': 'movie(C, E)', 'true': 'movie(D, A), movie(D, E)', 'false,true': 'genre(G, H), genre(A, H)'}, {'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 113, 0], 'true,true,true': [6.149, 48, 178], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 17, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'genre(E, H), genre(B, H)', 'false,true,true': 'genre(B, G)'}, {'false,true,true,false': [0.0, 10, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false,true': [1.05e-08, 23, 0], 'true': [6.149, 48, 178], 'false,false': [0.0, 0, 0], 'false,true,false,false': [5.37e-08, 96, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, A), movie(F, G)', 'true,true': 'movie(C, E)', 'true': 'movie(D, A), movie(D, E)'}, {'true,true,true': [6.149, 48, 178], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 130, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,true': 'genre(B, G)'}, {'false,true,true,false': [0.0, 10, 0], 'false,true,true,true': [0.0, 1, 0], 'true': [6.149, 48, 178], 'false,true,false': [0.0, 119, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B), movie(F, G)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,true,true': [6.149, 48, 178], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [5.77e-08, 130, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(E, F), genre(A, F)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,true,true,true': [2.98e-08, 13, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [5.408, 35, 178], 'false': [7.22e-08, 130, 0], 'true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false,true': 'genre(A, H)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'false,true,false,false': [0.0, 107, 0], 'true': [5.849, 48, 178], 'false,true,false,true,true': [0.0, 1, 0], 'false,true,false,true,false': [0.0, 5, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 17, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false,true': 'genre(B, H)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'false,true,false,false': [2.98e-08, 105, 0], 'true': [5.855, 48, 178], 'false,true,false,true,true': [0.0, 1, 0], 'false,true,false,true,false': [2.63e-09, 7, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 17, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false,true': 'genre(B, H)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'false,true,false,false': [0.0, 105, 0], 'true': [5.86, 48, 178], 'false,true,false,true,true': [0.0, 1, 0], 'false,true,false,true,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 17, 0]}]
{'': [0.1672801315686487, -3.75767792950053e-17], 'false': [-3.75767792950053e-17, nan], 'false,true': [-3.2653618371328133e-18, 5.1089909097794814e-17], 'false,true,false,true': [0.0, -2.7755575615628915e-18], 'false,true,false': [-6.938893903907228e-18, 5.810513026075585e-17]}
{'': [0.16728013156864405, 3.416070845000482e-18], 'false': [3.416070845000482e-18, nan], 'true,true': [0.16728013156864405, nan], 'true': [0.16728013156864405, nan], 'false,true': [3.2653618371328133e-18, -9.824982518806695e-18]}
{'': [0.16728013156864113, 7.51535585900106e-17], 'false': [7.51535585900106e-17, nan], 'false,true': [5.046468293750712e-18, 4.291618414517412e-17], 'false,true,false': [4.827056628805028e-18, 3.0068540250264654e-17], 'false,true,true': [0.0, 0.0]}
{'': [0.16728013156864066, -3.586874387250506e-17], 'false': [-3.586874387250506e-17, nan], 'true,true': [0.16728013156864066, nan], 'true': [0.16728013156864066, nan]}
{'': [0.16728013156864205, 4.4408920985006264e-17], 'false': [4.4408920985006264e-17, nan], 'false,true': [1.261617073437678e-18, 0.0], 'false,true,true': [0.0, -1.3877787807814458e-18]}
{'': [0.16728013156864305, 2.5620531337503614e-17], 'false': [2.5620531337503614e-17, nan], 'true,true': [0.16728013156864305, nan], 'true': [0.16728013156864305, nan]}
{'': [0.16728013156864288, 4.013883242875566e-17], 'true,true,true': [6.832141690000964e-17, 0.13731843329145427], 'true,true': [0.16728013156864288, nan], 'true': [0.16728013156864288, nan]}
{'': [0.151367451650026, 2.5620531337503614e-17], 'false': [2.5620531337503614e-17, nan], 'false,true': [0.0, 4.9124912594033475e-18], 'false,true,false,true': [0.0, -6.938893903907229e-19], 'false,true,false': [0.0, -1.0375916117992116e-18]}
{'': [0.15167419194525736, 2.7328566760003855e-17], 'false': [2.7328566760003855e-17, nan], 'false,true': [-8.163404592832033e-19, 2.456245629701674e-17], 'false,true,false,true': [0.0, 9.912705577010326e-19], 'false,true,false': [0.0, 8.458842092382146e-18]}
{'': [0.1519663206622279, -1.4518301091252048e-17], 'false': [-1.4518301091252048e-17, nan], 'false,true': [3.2653618371328133e-18, -1.6211221156031047e-17], 'false,true,false,true': [0.0, -4.956352788505163e-19], 'false,true,false': [0.0, -5.28677630773884e-18]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false,false,true;genre(A, H).;true;true', '0;false;movie(F, E), movie(F, B).;true;true', '0;false,false;genre(E, G), genre(B, G).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;genre(G, H), genre(A, H).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;genre(E, F), genre(A, F).;true;true', '2;false,true;genre(B, G).;true;true', '2;false,false;genre(E, H), genre(B, H).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;genre(E, F), genre(A, F).;true;true', '4;false,true;genre(B, G).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;true;genre(E, F), genre(A, F).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false,false,true;genre(A, H).;true;true', '7;false;movie(F, E), movie(F, B).;true;true', '7;false,false;genre(E, G), genre(B, G).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;false,false,true;genre(B, H).;true;true', '8;false;movie(F, E), movie(F, A).;true;true', '8;false,false;genre(E, G), genre(A, G).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false,false,true;genre(B, H).;true;true', '9;false;movie(F, E), movie(F, A).;true;true', '9;false,false;genre(E, G), genre(A, G).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048774;  // std dev = 2,58e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.14185106490048788;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 6,45e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 1,86e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then if ( female(A) )
%   | | | | then if ( female(B) )
%   | | | | | then return -0.12544463852839138;  // std dev = 1,86e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | | | else return -0.12544463852839138;  // std dev = 1,86e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | | else return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else if ( female(B) )
%   | | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | else return -0.12544463852839138;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.11231637819360639;  // std dev = 3,73e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( genre(D, E), genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360635;  // std dev = 3,48e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( genre(D, G), genre(B, G) )
%   | | then return -0.11231637819360638;  // std dev = 2,28e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else if ( actor(A) )
%   | | | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | | else return -0.11231637819360635;  // std dev = 3,48e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else if ( actor(A) )
%   | | | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(A) )
%   | | | then if ( female(A) )
%   | | | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | else return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.1015963294878364;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( genre(D, E), genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else if ( actor(B) )
%   | | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then if ( female(A) )
%   | | | | then return -0.08518475138839687;  // std dev = 1,61e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | | else if ( female(B) )
%   | | | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | | else return -0.08518475138839687;  // std dev = 1,61e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08518475138839687;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(B) )
%   | then return -0.0851847513883968;  // std dev = 1,32e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.08518475138839679;  // std dev = 2,79e-09, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then if ( actor(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( female(A) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( female(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then if ( female(B) )
%   | | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 9,31e-10, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420275;  // std dev = 1,86e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then if ( female(B) )
%   | | | | then if ( female(A) )
%   | | | | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | | | else return -0.0684269778442027;  // std dev = 1,61e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | | else return -0.06842697784420274;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then if ( female(A) )
%   | | | | then if ( female(B) )
%   | | | | | then return -0.06419184008202618;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | else return -0.06419184008202618;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | else return -0.06419184008202618;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else if ( female(B) )
%   | | | | then return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06419184008202619;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06419184008202626;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.744 seconds
Total inference time: 1.362 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb, Fold: 3, Type: transfer, Time: 00:26:39
{'Inference time': 1.362, 'CLL': -0.094637, 'Parameter Learning results': {'Inference time': 0.895, 'CLL': -0.327087, 'F1': 0.894737, 'AUC ROC': 0.892157, 'Recall': 1.0, 'AUC PR': 0.822581, 'Precision': [0.809524, 0.5], 'Learning time': 4.009}, 'F1': 1.0, 'AUC ROC': 1.0, 'Mapping results': {'Finding best mapping': 0.02729058265686035, 'Generating mappings time': 0.06980085372924805, 'Total time': 5.61597752571106, 'Possible mappings': 126, 'Knowledge compiling time': 0.41495466232299805, 'Generating paths time': 5.103923797607422}, 'Recall': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 8.753}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.14185106490048788;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.12544463852839113;  // std dev = 8,16e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360624;  // std dev = 8,69e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.10159632948783641;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.09269127618926104;  // std dev = 3,33e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.08518475138839679;  // std dev = 3,94e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109165;  // std dev = 5,77e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07324622576333704;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06842697784420267;  // std dev = 4,71e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06419184008202625;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.068 seconds
Total inference time: 0.75 seconds
AUC ROC: 1.0


Dataset: cora->imdb, Fold: 3, Type: scratch, Time: 00:26:43
{'Inference time': 0.75, 'CLL': -0.094637, 'F1': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.068}


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;false;movie(D, A), movie(D, E).;true;false
0;false,true;movie(F, E), movie(F, B).;false;true
0;false,true,false,true;genre(A, H).;false;false
0;false,true,false;genre(E, G), genre(B, G).;true;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true,true,false,true;genre(A, G).;false;false
1;true,true;movie(C, E).;false;true
1;true;movie(D, A), movie(D, E).;true;false
1;false,true;genre(J, K), genre(A, K).;false;false
1;true,true,false,false;genre(E, H), genre(A, H).;false;false
1;true,true,false;genre(E, F), genre(B, F).;true;true
1;false;movie(I, A), movie(I, J).;true;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true,false;genre(E, H), genre(B, H).;false;false
2;false,true;genre(E, F), genre(A, F).;true;true
2;false;movie(D, B), movie(D, E).;true;true
2;false,false;movie(I, A), movie(I, J).;false;false
2;false,true,true;genre(B, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,false,true;genre(K, L), genre(B, L).;false;false
3;true,true;movie(C, E).;false;true
3;true;movie(D, A), movie(D, E).;true;false
3;false,false;movie(J, B), movie(J, K).;true;false
3;true,true,false,false;genre(E, G), genre(A, G).;false;false
3;true,true,false;genre(E, F), genre(B, F).;false;true
3;false;movie(H, A), movie(H, I).;false;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false;movie(D, B), movie(D, E).;true;false
4;false,true;genre(E, F), genre(A, F).;true;false
4;false,true,true;genre(B, G).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false,true;genre(J, K), genre(A, K).;false;true
5;true,true;movie(D, B).;false;true
5;true;movie(D, A), movie(D, E).;true;false
5;false,false;movie(I, A), movie(I, J).;true;false
5;true,true,false;genre(E, F), genre(A, F).;false;false
5;false;movie(G, B), movie(G, H).;false;true
5;false,false,true,false;genre(J, L), genre(B, L).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
6;true,true,false,true;genre(B, H).;true;false
6;true,true;movie(D, B).;true;true
6;true;movie(D, A), movie(D, E).;true;false
6;true,true,true;genre(E, F), genre(A, F).;false;false
6;true,true,false,false;genre(E, I), genre(B, I).;false;false
6;true,true,false;genre(E, G), genre(A, G).;true;true
6;true,true,false,true,true;genre(E, H).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false,false,true;genre(J, K), genre(B, K).;false;true
7;false,true,false;genre(E, G), genre(B, G).;true;false
7;false,true;movie(F, E), movie(F, B).;false;true
7;false;movie(D, A), movie(D, E).;true;true
7;false,true,false,true;genre(A, H).;false;false
7;false,false;movie(I, B), movie(I, J).;true;false
7;false,false,true,false;genre(J, L), genre(A, L).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false,false,true;genre(J, K), genre(A, K).;false;true
8;false,true,false;genre(E, G), genre(A, G).;true;false
8;false,true;movie(F, E), movie(F, A).;false;true
8;false;movie(D, B), movie(D, E).;true;true
8;false,true,false,true;genre(B, H).;false;false
8;false,false;movie(I, A), movie(I, J).;true;false
8;false,false,true,false;genre(J, L), genre(B, L).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false,false,true;genre(J, K), genre(A, K).;false;true
9;false,true,false;genre(E, G), genre(A, G).;true;false
9;false,true;movie(F, E), movie(F, A).;false;true
9;false;movie(D, B), movie(D, E).;true;true
9;false,true,false,true;genre(B, H).;false;false
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,false,true,false;genre(J, L), genre(B, L).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6914822684328457;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then if ( genre(A, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.5851860008555362;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then if ( genre(G, H), genre(A, H) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839136;  // std dev = 1,05e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4612598391067561;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.3488463256948414;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.26212705508354156;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.19945264276423463;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then return -0.0851847513883968;  // std dev = 2,11e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then if ( genre(E, F), genre(A, F) )
%   | | | then return -0.6788199670535011;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1702366367200838;  // std dev = 2,606, 53,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12223360962726514;  // std dev = 2,685, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then if ( genre(A, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09786528457367165;  // std dev = 2,686, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07933014541797825;  // std dev = 2,688, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202618;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.894659
   AUC PR    = 0.82598
   CLL	      = -0.329748
   Precision = 0.794811 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.885677


Total learning time: 2.129 seconds
Total inference time: 1.063 seconds
AUC ROC: 0.894659


Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false,true': 'genre(A, H)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'false,true,false,false': [0.0, 7, 0], 'true': [2.739, 9, 45], 'false,true,false,true,true': [0.0, 0, 0], 'false,true,false,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [2.11e-08, 26, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, A), movie(F, G)', 'true,true': 'movie(C, E)', 'true': 'movie(D, A), movie(D, E)', 'false,true': 'genre(G, H), genre(A, H)'}, {'true,false': [0.0, 0, 0], 'false,true,false': [1.05e-08, 34, 0], 'true,true,true': [2.739, 9, 45], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'genre(E, H), genre(B, H)', 'false,true,true': 'genre(B, G)'}, {'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 4, 0], 'true': [2.739, 9, 45], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 30, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, A), movie(F, G)', 'true,true': 'movie(C, E)', 'true': 'movie(D, A), movie(D, E)'}, {'true,true,true': [2.739, 9, 45], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,true': 'genre(B, G)'}, {'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [2.739, 9, 45], 'false,true,false': [0.0, 34, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B), movie(F, G)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,true,true': [2.739, 9, 45], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [2.11e-08, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(E, F), genre(A, F)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [2.606, 8, 45], 'false': [0.0, 36, 0], 'true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false,true': 'genre(A, H)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'false,true,false,false': [2.63e-09, 7, 0], 'true': [2.685, 9, 45], 'false,true,false,true,true': [0.0, 0, 0], 'false,true,false,true,false': [1.86e-09, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 26, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'false,true,false,false': [2.63e-09, 10, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [2.686, 9, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 26, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'false,true,false,false': [2.63e-09, 10, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [2.688, 9, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 26, 0]}]
{'': [0.13888888888888942, 3.700743415417188e-17], 'false': [3.700743415417188e-17, nan], 'false,true': [1.708035422500241e-17, -1.1102230246251566e-17], 'false,true,false,true': [nan, 0.0], 'false,true,false': [0.0, -7.93016446160826e-18]}
{'': [0.13888888888888837, 9.25185853854297e-18], 'false': [9.25185853854297e-18, nan], 'true,true': [0.13888888888888837, nan], 'true': [0.13888888888888837, nan], 'false,true': [0.0, 3.2653618371328133e-18]}
{'': [0.13888888888888817, -1.0793834961633467e-17], 'false': [-1.0793834961633467e-17, nan], 'false,true': [0.0, -1.1428766429964846e-17], 'false,true,false': [0.0, -7.401486830834377e-18], 'false,true,true': [nan, 0.0]}
{'': [0.13888888888888903, -1.5419764230904951e-18], 'false': [-1.5419764230904951e-18, nan], 'true,true': [0.13888888888888903, nan], 'true': [0.13888888888888903, nan]}
{'': [0.1388888888888892, -9.25185853854297e-18], 'false': [-9.25185853854297e-18, nan], 'false,true': [0.0, -6.530723674265627e-18], 'false,true,true': [nan, 0.0]}
{'': [0.13888888888888878, 1.2335811384723961e-17], 'false': [1.2335811384723961e-17, nan], 'true,true': [0.13888888888888878, nan], 'true': [0.13888888888888878, nan]}
{'': [0.1388888888888888, -7.709882115452476e-19], 'true,true,true': [0.0, 0.1281594873620505], 'true,true': [0.1388888888888888, nan], 'true': [0.1388888888888888, nan]}
{'': [0.13350505303389096, 2.3129646346357427e-18], 'false': [2.3129646346357427e-18, nan], 'false,true': [-1.0675221390626506e-18, 6.938893903907229e-19], 'false,true,false,true': [nan, 1.1564823173178713e-18], 'false,true,false': [1.1564823173178713e-18, 9.912705577010326e-19]}
{'': [0.13365178477934964, -1.5419764230904951e-18], 'false': [-1.5419764230904951e-18, nan], 'false,true': [-4.803849625781927e-18, 6.938893903907229e-19], 'false,true,false': [nan, 6.938893903907229e-19]}
{'': [0.13378821832175497, -1.5419764230904951e-18], 'false': [-1.5419764230904951e-18, nan], 'false,true': [0.0, 6.938893903907229e-19], 'false,true,false': [nan, 6.938893903907229e-19]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false;movie(F, E), movie(F, B).;true;true', '0;false,false;genre(E, G), genre(B, G).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;genre(G, H), genre(A, H).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;genre(E, F), genre(A, F).;true;true', '2;false,false;genre(E, H), genre(B, H).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;genre(E, F), genre(A, F).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;true;genre(E, F), genre(A, F).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false;movie(F, E), movie(F, B).;true;true', '7;false,false;genre(E, G), genre(B, G).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;false;movie(F, E), movie(F, A).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;movie(F, E), movie(F, A).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839136;  // std dev = 1,05e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(D, F), genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(B) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( actor(A), actor(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(A), actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839683;  // std dev = 3,09e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.2097577156325355;  // std dev = 7,90e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.07877675473109177;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( actor(A), actor(B) )
%   | | | | then return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801095;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13400703000801115;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06419184008202622;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.995549
   AUC PR    = 0.991176
   CLL	      = -0.119985
   Precision = 0.973988 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986823


Total learning time: 3.215 seconds
Total inference time: 1.59 seconds
AUC ROC: 0.995549


Refined model AUC ROC: 0.995549


Dataset: cora->imdb, Fold: 4, Type: transfer, Time: 00:26:56
{'Inference time': 1.59, 'CLL': -0.119985, 'Parameter Learning results': {'Inference time': 1.063, 'CLL': -0.329748, 'F1': 0.885677, 'AUC ROC': 0.894659, 'Recall': 1.0, 'AUC PR': 0.82598, 'Precision': [0.794811, 0.5], 'Learning time': 2.129}, 'F1': 0.986823, 'AUC ROC': 0.995549, 'Mapping results': {'Finding best mapping': 0.02714228630065918, 'Generating mappings time': 0.0644528865814209, 'Total time': 4.959485292434692, 'Possible mappings': 126, 'Knowledge compiling time': 0.4568026065826416, 'Generating paths time': 4.411081075668335}, 'Recall': 1.0, 'AUC PR': 0.991176, 'Precision': [0.973988, 0.5], 'Learning time': 5.343999999999999}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
Results
   AUC ROC   = 0.986647
   AUC PR    = 0.973988
   CLL	      = -0.122206
   Precision = 0.973988 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986823


Total learning time: 2.305 seconds
Total inference time: 0.82 seconds
AUC ROC: 0.986647


Dataset: cora->imdb, Fold: 4, Type: scratch, Time: 00:27:00
{'Inference time': 0.82, 'CLL': -0.122206, 'F1': 0.986823, 'AUC ROC': 0.986647, 'Recall': 1.0, 'AUC PR': 0.973988, 'Precision': [0.973988, 0.5], 'Learning time': 2.305}


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;false;movie(D, A), movie(D, E).;true;false
0;false,true;movie(F, E), movie(F, B).;false;true
0;false,true,false,true;genre(A, H).;false;false
0;false,true,false;genre(E, G), genre(B, G).;true;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true,true,false,true;genre(A, G).;false;false
1;true,true;movie(C, E).;false;true
1;true;movie(D, A), movie(D, E).;true;false
1;false,true;genre(J, K), genre(A, K).;false;false
1;true,true,false,false;genre(E, H), genre(A, H).;false;false
1;true,true,false;genre(E, F), genre(B, F).;true;true
1;false;movie(I, A), movie(I, J).;true;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true,false;genre(E, H), genre(B, H).;false;false
2;false,true;genre(E, F), genre(A, F).;true;true
2;false;movie(D, B), movie(D, E).;true;true
2;false,false;movie(I, A), movie(I, J).;false;false
2;false,true,true;genre(B, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,false,true;genre(K, L), genre(B, L).;false;false
3;true,true;movie(C, E).;false;true
3;true;movie(D, A), movie(D, E).;true;false
3;false,false;movie(J, B), movie(J, K).;true;false
3;true,true,false,false;genre(E, G), genre(A, G).;false;false
3;true,true,false;genre(E, F), genre(B, F).;false;true
3;false;movie(H, A), movie(H, I).;false;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false;movie(D, B), movie(D, E).;true;false
4;false,true;genre(E, F), genre(A, F).;true;false
4;false,true,true;genre(B, G).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false,true;genre(J, K), genre(A, K).;false;true
5;true,true;movie(D, B).;false;true
5;true;movie(D, A), movie(D, E).;true;false
5;false,false;movie(I, A), movie(I, J).;true;false
5;true,true,false;genre(E, F), genre(A, F).;false;false
5;false;movie(G, B), movie(G, H).;false;true
5;false,false,true,false;genre(J, L), genre(B, L).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
6;true,true,false,true;genre(B, H).;true;false
6;true,true;movie(D, B).;true;true
6;true;movie(D, A), movie(D, E).;true;false
6;true,true,true;genre(E, F), genre(A, F).;false;false
6;true,true,false,false;genre(E, I), genre(B, I).;false;false
6;true,true,false;genre(E, G), genre(A, G).;true;true
6;true,true,false,true,true;genre(E, H).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false,false,true;genre(J, K), genre(B, K).;false;true
7;false,true,false;genre(E, G), genre(B, G).;true;false
7;false,true;movie(F, E), movie(F, B).;false;true
7;false;movie(D, A), movie(D, E).;true;true
7;false,true,false,true;genre(A, H).;false;false
7;false,false;movie(I, B), movie(I, J).;true;false
7;false,false,true,false;genre(J, L), genre(A, L).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false,false,true;genre(J, K), genre(A, K).;false;true
8;false,true,false;genre(E, G), genre(A, G).;true;false
8;false,true;movie(F, E), movie(F, A).;false;true
8;false;movie(D, B), movie(D, E).;true;true
8;false,true,false,true;genre(B, H).;false;false
8;false,false;movie(I, A), movie(I, J).;true;false
8;false,false,true,false;genre(J, L), genre(B, L).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false,false,true;genre(J, K), genre(A, K).;false;true
9;false,true,false;genre(E, G), genre(A, G).;true;false
9;false,true;movie(F, E), movie(F, A).;false;true
9;false;movie(D, B), movie(D, E).;true;true
9;false,true,false,true;genre(B, H).;false;false
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,false,true,false;genre(J, L), genre(B, L).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6763307532813305;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.5728505077589577;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then if ( genre(G, H), genre(A, H) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.45250734201965864;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.3427398908536803;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2573771265051454;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926097;  // std dev = 7,45e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.19529825339842172;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then return -0.0851847513883968;  // std dev = 2,24e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then if ( genre(E, F), genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1506364669407767;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11808890552787839;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09389442014327214;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07554408412491911;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.897626
   AUC PR    = 0.830049
   CLL	      = -0.340511
   Precision = 0.79669 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.886842


Total learning time: 1.675 seconds
Total inference time: 1.62 seconds
AUC ROC: 0.897626


Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'false,true,false,false': [0.0, 6, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [2.86, 10, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [2.58e-08, 29, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, A), movie(F, G)', 'true,true': 'movie(C, E)', 'true': 'movie(D, A), movie(D, E)', 'false,true': 'genre(G, H), genre(A, H)'}, {'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 34, 0], 'true,true,true': [2.86, 10, 45], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'genre(E, H), genre(B, H)', 'false,true,true': 'genre(B, G)'}, {'false,true,true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'true': [2.86, 10, 45], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 33, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, A), movie(F, G)', 'true,true': 'movie(C, E)', 'true': 'movie(D, A), movie(D, E)'}, {'true,true,true': [2.86, 10, 45], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 35, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,true': 'genre(B, G)'}, {'false,true,true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [2.86, 10, 45], 'false,true,false': [7.45e-09, 34, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B), movie(F, G)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,true,true': [2.86, 10, 45], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [2.24e-08, 35, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(E, F), genre(A, F)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [2.86, 10, 45], 'false': [0.0, 35, 0], 'true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'false,true,false,false': [2.63e-09, 6, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [2.86, 10, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 29, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'false,true,false,false': [1.86e-09, 6, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [2.86, 10, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 29, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'false,true,false,false': [0.0, 6, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [2.86, 10, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 29, 0]}]
{'': [0.14876033057851296, 3.489272363107635e-17], 'false': [3.489272363107635e-17, nan], 'false,true': [2.2970131543968756e-17, -6.938893903907228e-18], 'false,true,false': [nan, 0.0]}
{'': [0.14876033057851185, 6.3441315692866086e-18], 'false': [6.3441315692866086e-18, nan], 'true,true': [0.14876033057851185, nan], 'true': [0.14876033057851185, nan], 'false,true': [0.0, -3.2653618371328133e-18]}
{'': [0.1487603305785119, -1.2688263138573217e-17], 'false': [-1.2688263138573217e-17, nan], 'false,true': [0.0, -1.6326809185664067e-18], 'false,true,false': [0.0, -1.6821560979169039e-18], 'false,true,true': [nan, 0.0]}
{'': [0.1487603305785124, -3.1720657846433043e-18], 'false': [-3.1720657846433043e-18, nan], 'true,true': [0.1487603305785124, nan], 'true': [0.1487603305785124, nan]}
{'': [0.14876033057851232, -9.516197353929913e-18], 'false': [-9.516197353929913e-18, nan], 'false,true': [0.0, 1.6326809185664067e-18], 'false,true,true': [nan, 0.0]}
{'': [0.1487603305785126, 1.4274296030894868e-17], 'false': [1.4274296030894868e-17, nan], 'true,true': [0.1487603305785126, nan], 'true': [0.1487603305785126, nan]}
{'': [0.1487603305785126, 0.0], 'true,true,true': [nan, 0.14876033057851257], 'true,true': [0.1487603305785126, nan], 'true': [0.1487603305785126, nan]}
{'': [0.1487603305785124, 3.1720657846433043e-18], 'false': [3.1720657846433043e-18, nan], 'false,true': [1.914177628664063e-18, 0.0], 'false,true,false': [nan, 1.1564823173178713e-18]}
{'': [0.1487603305785125, -2.3790493384824783e-18], 'false': [-2.3790493384824783e-18, nan], 'false,true': [-5.742532885992189e-18, 5.782411586589357e-19], 'false,true,false': [nan, 5.782411586589357e-19]}
{'': [0.1487603305785124, -1.5860328923216522e-18], 'false': [-1.5860328923216522e-18, nan], 'false,true': [-4.785444071660157e-19, -5.782411586589357e-19], 'false,true,false': [nan, -5.782411586589357e-19]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false;movie(F, E), movie(F, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;genre(G, H), genre(A, H).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;genre(E, F), genre(A, F).;true;true', '2;false,false;genre(E, H), genre(B, H).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;genre(E, F), genre(A, F).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false;movie(F, E), movie(F, B).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;false;movie(F, E), movie(F, A).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;movie(F, E), movie(F, A).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839136;  // std dev = 1,05e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(D, F), genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then return -0.08518475138839686;  // std dev = 2,08e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.08518475138839687;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( female(B) )
%   | then return -0.07877675473109172;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07324622576333704;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202619;  // std dev = 1,61e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06419184008202618;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.986647
   AUC PR    = 0.973988
   CLL	      = -0.122206
   Precision = 0.973988 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986823


Total learning time: 2.904 seconds
Total inference time: 1.458 seconds
AUC ROC: 0.986647


Refined model AUC ROC: 0.986647


Dataset: cora->imdb, Fold: 5, Type: transfer, Time: 00:27:13
{'Inference time': 1.458, 'CLL': -0.122206, 'Parameter Learning results': {'Inference time': 1.62, 'CLL': -0.340511, 'F1': 0.886842, 'AUC ROC': 0.897626, 'Recall': 1.0, 'AUC PR': 0.830049, 'Precision': [0.79669, 0.5], 'Learning time': 1.675}, 'F1': 0.986823, 'AUC ROC': 0.986647, 'Mapping results': {'Finding best mapping': 0.027004718780517578, 'Generating mappings time': 0.06531906127929688, 'Total time': 5.0928497314453125, 'Possible mappings': 126, 'Knowledge compiling time': 0.5045092105865479, 'Generating paths time': 4.496009588241577}, 'Recall': 1.0, 'AUC PR': 0.973988, 'Precision': [0.973988, 0.5], 'Learning time': 4.579}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1352095945470413;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.14656735148626743;  // std dev = 0,086, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(A) )
%   | then return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.1288676370195173;  // std dev = 0,215, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
Results
   AUC ROC   = 0.992472
   AUC PR    = 0.990625
   CLL	      = -0.241338
   Precision = 0.864103 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.927098


Total learning time: 2.216 seconds
Total inference time: 0.81 seconds
AUC ROC: 0.992472


Dataset: cora->imdb, Fold: 5, Type: scratch, Time: 00:27:17
{'Inference time': 0.81, 'CLL': -0.241338, 'F1': 0.927098, 'AUC ROC': 0.992472, 'Recall': 1.0, 'AUC PR': 0.990625, 'Precision': [0.864103, 0.5], 'Learning time': 2.216}


Start learning from source dataset


