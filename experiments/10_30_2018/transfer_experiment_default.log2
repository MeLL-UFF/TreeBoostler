

Start learning from source dataset


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048793;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.12544463852839202;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360676;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.1015963294878365;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.0926912761892606;  // std dev = 1,41e-07, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839678;  // std dev = 9,88e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07877675473109143;  // std dev = 4,21e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07324622576333706;  // std dev = 8,43e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420308;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06419184008202611;  // std dev = 6,99e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */


Predicates from source: ['workedunder(person,person).', 'movie(movie,person).', 'actor(person).', 'director(person).'] 



Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'actor(A) -> student(A)', 'movie(A,B) -> publication(A,B)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.535568289938222;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.14185106490048777;  // std dev = 1,05e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.4572074133792135;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.36893705839760765;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.28527019316610924;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.21559914934332675;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.09269127618926093;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.16177893311781763;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.08518475138839683;  // std dev = 1,58e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.12156320581776346;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.09179048401490923;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.06970499337531842;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.053217952626247136;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.0641918400820262;  // std dev = 7,45e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
Results
   AUC ROC   = 0.949704
   AUC PR    = 0.939729
   CLL	      = -0.273854
   Precision = 0.866667 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.928571


Total learning time: 5.653 seconds
Total inference time: 0.72 seconds
AUC ROC: 0.949704


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.05e-08, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [5.16e-08, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.67e-08, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [4.21e-08, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.29e-08, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.58e-08, 25, 0], 'true,true': [2.11e-08, 0, 14]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [7.45e-09, 25, 0], 'true,true': [0.0, 0, 14]}]
{'': [0.17283950617284127, 4.440892098500626e-18], 'true': [-2.5376526277146434e-16, 0.21852237252861578]}
{'': [0.16527937223485065, -4.440892098500626e-18], 'true': [1.9032394707859825e-16, 0.21852237252861595]}
{'': [0.15798655603348136, 1.1102230246251566e-17], 'true': [-2.5376526277146434e-16, 0.21852237252861598]}
{'': [0.15428574723631744, -4.440892098500626e-18], 'true': [1.2688263138573217e-16, 0.21852237252861606]}
{'': [0.15290559825609437, 6.661338147750939e-18], 'true': [-3.172065784643304e-17, 0.218522372528616]}
{'': [0.1524070085560816, 9.992007221626408e-18], 'true': [3.172065784643304e-17, 0.21852237252861603]}
{'': [0.15220468125189954, -1.1102230246251566e-18], 'true': [-3.172065784643304e-17, 0.218522372528616]}
{'': [0.15209727309240345, -1.1102230246251566e-18], 'true': [0.0, 0.21852237252861603]}
{'': [0.15201547471739796, -4.440892098500626e-18], 'true': [-1.9825411154020653e-17, 0.21852237252861606]}
{'': [0.15193648071008423, 2.220446049250313e-18], 'true': [0.0, 0.21852237252861603]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then if ( publication(I, G) )
%   | | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.14185106490048777;  // std dev = 1,05e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( inphase(A, G), inphase(E, G) )
%   | | | | then return 0.07285541203228035;  // std dev = 0,791, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.5753089552646349;  // std dev = 0,917, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else if ( projectmember(I, B) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.15338124287523539;  // std dev = 0,785, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.5634658750306112;  // std dev = 0,865, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.02900001727658332;  // std dev = 0,811, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.21636768726718617;  // std dev = 0,831, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else if ( publication(H, B) )
%   | | | | then if ( tempadvisedby(I, B) )
%   | | | | | then return 0.45925309617591337;  // std dev = 0,923, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then return 0.5807778598504975;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.317786101213749;  // std dev = 1,084, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.1289227794117419;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( inphase(A, G), inphase(D, G) )
%   | | | | then return 0.034932135153899035;  // std dev = 0,708, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.3710209628951226;  // std dev = 0,963, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.4789635865660879;  // std dev = 0,078, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.07928632335131379;  // std dev = 0,771, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.3477233114381827;  // std dev = 0,837, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.1151342125350373;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( inphase(A, G), inphase(D, G) )
%   | | | | then return 0.02920099494653148;  // std dev = 0,705, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.2819253250441176;  // std dev = 0,970, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B), publication(I, A) )
%   | | | then return 0.38391739976977785;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.06425437820723318;  // std dev = 0,769, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.26972205913309705;  // std dev = 0,838, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926093;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.004284818445833147;  // std dev = 0,687, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return 0.07279351715929525;  // std dev = 0,365, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( publication(H, B) )
%   | | | | then if ( tempadvisedby(I, B) )
%   | | | | | then return 0.220121301293505;  // std dev = 0,981, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( projectmember(J, B) )
%   | | | | | then return 0.28559876368932535;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else if ( publication(K, A) )
%   | | | | | | then return 0.05167770046916829;  // std dev = 0,768, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.19884038725546926;  // std dev = 0,840, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08518475138839683;  // std dev = 1,58e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.10867361767085565;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( inphase(A, G), inphase(E, G) )
%   | | | | then return 0.011686192573577683;  // std dev = 0,657, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.17551284805255446;  // std dev = 0,992, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.2188513101867053;  // std dev = 0,038, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else if ( projectmember(I, B) )
%   | | | | then return 0.231145275387692;  // std dev = 0,037, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.0413139180649514;  // std dev = 0,767, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.15331642343081203;  // std dev = 0,842, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.09859891031752281;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.0065998180559574265;  // std dev = 0,645, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.14007424334741664;  // std dev = 0,995, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.18377539809846258;  // std dev = 0,033, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else if ( projectmember(I, B) )
%   | | | | then return 0.1926966448037993;  // std dev = 0,032, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.03287360689444672;  // std dev = 0,766, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.11985418970929447;  // std dev = 0,844, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.0901858291035561;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( inphase(A, G), inphase(D, G) )
%   | | | | then return 3.3342093570537523E-4;  // std dev = 0,627, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.11536645480285009;  // std dev = 1,001, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.1578164332755481;  // std dev = 0,030, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else if ( projectmember(I, B) )
%   | | | | then return 0.16451991321785378;  // std dev = 0,028, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.026061860812303456;  // std dev = 0,766, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.09487781678037314;  // std dev = 0,846, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.08306206920864682;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return -0.0017114544023453665;  // std dev = 0,620, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.09429370798632841;  // std dev = 1,001, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.1379716563248418;  // std dev = 0,027, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else if ( projectmember(I, B) )
%   | | | | then return 0.14316276067523823;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.020602675252834473;  // std dev = 0,765, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.07591493552449846;  // std dev = 0,847, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 7,45e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
Results
   AUC ROC   = 0.934172
   AUC PR    = 0.847725
   CLL	      = -0.315901
   Precision = 0.893333 at threshold = 0.5
   Recall    = 0.858974
   F1        = 0.875817


Total learning time: 8.083 seconds
Total inference time: 0.773 seconds
AUC ROC: 0.934172


Refined model AUC ROC: 0.934172


Dataset: imdb->uwcse, Fold: 1, Type: transfer, Time: 00:00:24
{'Recall': 0.858974, 'AUC PR': 0.847725, 'Mapping results': {'Generating paths time': 2.5918946266174316, 'Finding best mapping': 0.025458574295043945, 'Generating mappings time': 0.06696128845214844, 'Knowledge compiling time': 0.021986961364746094, 'Possible mappings': 288, 'Total time': 2.706310510635376}, 'F1': 0.875817, 'AUC ROC': 0.934172, 'Inference time': 0.773, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.939729, 'F1': 0.928571, 'AUC ROC': 0.949704, 'Inference time': 0.72, 'Precision': [0.866667, 0.5], 'Learning time': 5.653, 'CLL': -0.273854}, 'Precision': [0.893333, 0.5], 'Learning time': 13.736, 'CLL': -0.315901}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else if ( projectmember(I, B) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.05048502256292622;  // std dev = 0,888, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.2901227418012715;  // std dev = 1,052, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else if ( publication(H, B) )
%   | | | | then if ( tempadvisedby(I, B) )
%   | | | | | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then return 0.7451706938182211;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.3880937972657321;  // std dev = 1,085, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.15094659658194162;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.08772072933183805;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.6303029226683476;  // std dev = 0,094, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.11106361382453789;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.4471540315188485;  // std dev = 0,862, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.1326276583395764;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.07543960484966095;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, A), projectmember(I, B) )
%   | | | then return 0.5053561452154022;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.09128203284830573;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.34936632664756284;  // std dev = 0,861, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.11811773000250862;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, E) )
%   | | | | then return 0.06430141054043803;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.3644122938010804;  // std dev = 0,059, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.07415046115658304;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.2541268278694821;  // std dev = 0,860, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.10637133156038377;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.05438102360017571;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B), publication(I, A) )
%   | | | then return 0.299780558469411;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.059666994700557176;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.2006850476559381;  // std dev = 0,862, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.09668525362820939;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.04568220632808851;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.23216984383490172;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.04765320992751598;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.1462496116939191;  // std dev = 0,862, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), tempadvisedby(D, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.1770964977452774;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(E, A) )
%   | | | then return -0.0885718323060564;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(F, D) )
%   | | | | then return 0.038155195660526504;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | then return 0.08022222596640907;  // std dev = 0,418, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.2360958852044902;  // std dev = 0,080, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.17709649774527736;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | else return 0.08572960500248678;  // std dev = 1,099, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.08168358808362712;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(E, D) )
%   | | | | then return 0.1150478549448883;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.03853538843777473;  // std dev = 0,938, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(G, A), projectmember(H, B) )
%   | | | then return 0.1883884679826543;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.020073392468510604;  // std dev = 0,808, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.09427800471796276;  // std dev = 0,857, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.05483967205173032;  // std dev = 0,828, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.0028638938413384357;  // std dev = 0,335, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( tempadvisedby(F, B), publication(G, A) )
%   | | | then return 0.045257784850664465;  // std dev = 0,402, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then return 0.18226902107681006;  // std dev = 0,065, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(I, B) )
%   | | | | | then return 0.13400703000801117;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | | else return 0.0529632061517207;  // std dev = 1,103, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
Results
   AUC ROC   = 0.884533
   AUC PR    = 0.778351
   CLL	      = -0.396411
   Precision = 0.821429 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.851852


Total learning time: 9.625 seconds
Total inference time: 0.768 seconds
AUC ROC: 0.884533


Dataset: imdb->uwcse, Fold: 1, Type: scratch, Time: 00:00:34
{'Recall': 0.884615, 'AUC PR': 0.778351, 'F1': 0.851852, 'AUC ROC': 0.884533, 'Inference time': 0.768, 'Precision': [0.821429, 0.5], 'Learning time': 9.625, 'CLL': -0.396411}


Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'actor(A) -> student(A)', 'movie(A,B) -> publication(A,B)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7043027812533584;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5956068723141557;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.46863440886780416;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3540171821738477;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.1015963294878363;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.26620552619924287;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.20307171050188988;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.08518475138839686;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1579278943667103;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.12508565429655724;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.10063530397647748;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08201840165050943;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.06419184008202618;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
Results
   AUC ROC   = 0.929472
   AUC PR    = 0.918777
   CLL	      = -0.290507
   Precision = 0.823009 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.902913


Total learning time: 2.688 seconds
Total inference time: 0.812 seconds
AUC ROC: 0.929472


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [2.98e-08, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [1.05e-08, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [3.33e-08, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [5.27e-09, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [7.45e-09, 18, 0], 'true,true': [1.83e-08, 0, 9]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [7.45e-09, 0, 9]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9]}]
{'': [0.08264462809917356, -9.25185853854297e-18], 'true': [-2.9605947323337506e-16, 0.1301775147928993]}
{'': [0.08063200586027203, 0.0], 'true': [9.868649107779169e-17, 0.13017751479289957]}
{'': [0.07874151912392335, 6.1679056923619804e-18], 'true': [-1.4802973661668753e-16, 0.13017751479289946]}
{'': [0.07789770458547739, -1.5419764230904951e-18], 'true': [1.2335811384723962e-16, 0.13017751479289938]}
{'': [0.07764125846417015, 1.5419764230904951e-18], 'true': [-3.700743415417188e-17, 0.13017751479289938]}
{'': [0.07757925968481666, 3.0839528461809902e-18], 'true': [3.700743415417188e-17, 0.1301775147928994]}
{'': [0.07757245843873052, -3.854941057726238e-18], 'true': [-2.4671622769447922e-17, 0.1301775147928994]}
{'': [0.07757700245374001, -7.709882115452476e-19], 'true': [6.1679056923619804e-18, 0.13017751479289943]}
{'': [0.07757946176858431, -1.5419764230904951e-18], 'true': [-3.0839528461809902e-18, 0.13017751479289938]}
{'': [0.07757644395816753, 0.0], 'true': [0.0, 0.1301775147928994]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.4068585879990681;  // std dev = 0,766, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.6175030309659435;  // std dev = 0,354, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7302664973147039;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.3218969203777237;  // std dev = 0,756, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.48845798554678616;  // std dev = 0,355, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5662835398208704;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.23923900726314914;  // std dev = 0,742, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return 0.5061299356632769;  // std dev = 0,115, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3383670325761128;  // std dev = 0,343, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.1015963294878363;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.1435738409498909;  // std dev = 0,695, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.292734896387344;  // std dev = 0,359, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3339582136078992;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.1086373068329895;  // std dev = 0,695, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.22282717250569334;  // std dev = 0,358, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2644433109164689;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08518475138839686;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.07634719328559476;  // std dev = 0,689, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.28453148662136585;  // std dev = 0,166, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12347451602911018;  // std dev = 0,904, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.058424259462378246;  // std dev = 0,690, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.23189575990711875;  // std dev = 0,144, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09876269247655324;  // std dev = 0,905, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.001985923873855285;  // std dev = 0,634, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.13260263320555588;  // std dev = 0,360, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1563434266509847;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.0015677619473233317;  // std dev = 0,634, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.1070696771690778;  // std dev = 0,359, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.13698533494924417;  // std dev = 0,056, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06419184008202618;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
Results
   AUC ROC   = 0.955775
   AUC PR    = 0.935903
   CLL	      = -0.274247
   Precision = 0.823009 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.902913


Total learning time: 3.696 seconds
Total inference time: 0.722 seconds
AUC ROC: 0.955775


Refined model AUC ROC: 0.955775


Dataset: imdb->uwcse, Fold: 2, Type: transfer, Time: 00:00:46
{'Recall': 1.0, 'AUC PR': 0.935903, 'Mapping results': {'Generating paths time': 2.409458637237549, 'Finding best mapping': 0.024664640426635742, 'Generating mappings time': 0.06214618682861328, 'Knowledge compiling time': 0.010190248489379883, 'Possible mappings': 288, 'Total time': 2.506464958190918}, 'F1': 0.902913, 'AUC ROC': 0.955775, 'Inference time': 0.722, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.918777, 'F1': 0.902913, 'AUC ROC': 0.929472, 'Inference time': 0.812, 'Precision': [0.823009, 0.5], 'Learning time': 2.688, 'CLL': -0.290507}, 'Precision': [0.823009, 0.5], 'Learning time': 6.384, 'CLL': -0.274247}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.4068585879990681;  // std dev = 0,766, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.6175030309659435;  // std dev = 0,354, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7302664973147039;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.39431058662709007;  // std dev = 0,801, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then return 0.567468700604235;  // std dev = 0,098, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4491964093967777;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.30109636264093637;  // std dev = 0,796, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then return 0.4270218758972438;  // std dev = 0,101, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3390893982104104;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.33299153701351053;  // std dev = 0,059, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.10577736987702314;  // std dev = 0,689, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(E, B) )
%   | | then return 0.301751862901626;  // std dev = 0,359, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.3258003419390091;  // std dev = 0,078, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.16434774612475342;  // std dev = 0,753, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then return 0.26815743468832365;  // std dev = 0,146, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.18279197950292048;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.22027177262702607;  // std dev = 0,063, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0271856447887792;  // std dev = 0,675, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(E, B) )
%   | | then return 0.18898979819432166;  // std dev = 0,358, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.21306765112523474;  // std dev = 0,077, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07877675473109179;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.1849515936487561;  // std dev = 0,056, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.021120773580783975;  // std dev = 0,676, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(E, B) )
%   | | then return 0.14863070792301164;  // std dev = 0,358, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.17965291705788447;  // std dev = 0,069, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.06696613812885338;  // std dev = 0,701, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.14602247132920512;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.21920575223467625;  // std dev = 0,147, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.07380692183395886;  // std dev = 0,907, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.05321966157962732;  // std dev = 0,704, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.12873779147528552;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1849738899769207;  // std dev = 0,129, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.06059669374068255;  // std dev = 0,907, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
Results
   AUC ROC   = 0.94456
   AUC PR    = 0.916285
   CLL	      = -0.284644
   Precision = 0.823009 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.902913


Total learning time: 4.602 seconds
Total inference time: 0.832 seconds
AUC ROC: 0.94456


Dataset: imdb->uwcse, Fold: 2, Type: scratch, Time: 00:00:51
{'Recall': 1.0, 'AUC PR': 0.916285, 'F1': 0.902913, 'AUC ROC': 0.94456, 'Inference time': 0.832, 'Precision': [0.823009, 0.5], 'Learning time': 4.602, 'CLL': -0.284644}


Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'actor(A) -> student(A)', 'movie(A,B) -> publication(A,B)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.08518475138839687;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06419184008202622;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
Results
   AUC ROC   = 0.894231
   AUC PR    = 0.825397
   CLL	      = -0.313006
   Precision = 0.825397 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.904348


Total learning time: 1.375 seconds
Total inference time: 0.716 seconds
AUC ROC: 0.894231


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.98e-08, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.98e-08, 0, 8], 'false': [3.73e-09, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.49e-08, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [7.45e-09, 0, 8], 'false': [2.63e-09, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
{'': [-2.9605947323337506e-16, -9.25185853854297e-18], 'true': [0.0, -2.220446049250313e-16]}
{'': [9.868649107779169e-17, 0.0], 'true': [0.0, 1.1102230246251565e-16]}
{'': [-1.4802973661668753e-16, -1.5419764230904951e-18], 'true': [0.0, -1.1102230246251565e-16]}
{'': [1.2335811384723962e-16, 1.5419764230904951e-18], 'true': [0.0, 1.1102230246251565e-16]}
{'': [-3.700743415417188e-17, -1.5419764230904951e-18], 'true': [0.0, -4.163336342344337e-17]}
{'': [3.700743415417188e-17, 0.0], 'true': [0.0, 2.7755575615628914e-17]}
{'': [-2.4671622769447922e-17, 0.0], 'true': [0.0, -2.0816681711721685e-17]}
{'': [6.1679056923619804e-18, 7.709882115452476e-19], 'true': [0.0, 6.938893903907228e-18]}
{'': [-3.0839528461809902e-18, 0.0], 'true': [0.0, -3.469446951953614e-18]}
{'': [0.0, -7.709882115452476e-19], 'true': [0.0, 0.0]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.7194734122109544;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( publication(D, A) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
Results
   AUC ROC   = 0.894231
   AUC PR    = 0.825397
   CLL	      = -0.313006
   Precision = 0.825397 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.904348


Total learning time: 2.097 seconds
Total inference time: 0.761 seconds
AUC ROC: 0.894231


Refined model AUC ROC: 0.894231


Dataset: imdb->uwcse, Fold: 3, Type: transfer, Time: 00:00:59
{'Recall': 1.0, 'AUC PR': 0.825397, 'Mapping results': {'Generating paths time': 2.0970146656036377, 'Finding best mapping': 0.02461409568786621, 'Generating mappings time': 0.061337947845458984, 'Knowledge compiling time': 0.008925199508666992, 'Possible mappings': 288, 'Total time': 2.191896915435791}, 'F1': 0.904348, 'AUC ROC': 0.894231, 'Inference time': 0.761, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.825397, 'F1': 0.904348, 'AUC ROC': 0.894231, 'Inference time': 0.716, 'Precision': [0.825397, 0.5], 'Learning time': 1.375, 'CLL': -0.313006}, 'Precision': [0.825397, 0.5], 'Learning time': 3.472, 'CLL': -0.313006}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
Results
   AUC ROC   = 0.860577
   AUC PR    = 0.781955
   CLL	      = -0.382487
   Precision = 0.781955 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.877637


Total learning time: 1.464 seconds
Total inference time: 0.606 seconds
AUC ROC: 0.860577


Dataset: imdb->uwcse, Fold: 3, Type: scratch, Time: 00:01:01
{'Recall': 1.0, 'AUC PR': 0.781955, 'F1': 0.877637, 'AUC ROC': 0.860577, 'Inference time': 0.606, 'Precision': [0.781955, 0.5], 'Learning time': 1.464, 'CLL': -0.382487}


Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'actor(A) -> student(A)', 'movie(A,B) -> publication(A,B)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.6581489350995123;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.1418510649004878;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.5580193346218546;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.44194861002444086;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,67e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.33541139495094296;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.1015963294878363;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.25176837314502193;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.19047961032437166;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.14620194507639928;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.11389369465607467;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.0898995618030186;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.06842697784420275;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.07174810215160457;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.06419184008202618;  // std dev = 3,73e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
Results
   AUC ROC   = 0.930938
   AUC PR    = 0.920612
   CLL	      = -0.287685
   Precision = 0.824742 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.903955


Total learning time: 4.574 seconds
Total inference time: 0.714 seconds
AUC ROC: 0.930938


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [4.21e-08, 0, 13]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [1.67e-08, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [4.21e-08, 0, 13]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [9.13e-09, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [1.05e-08, 28, 0], 'true,true': [2.11e-08, 0, 13]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [3.73e-09, 28, 0], 'true,true': [0.0, 0, 13]}]
{'': [0.11426592797784099, -7.93016446160826e-18], 'true': [-2.7328566760003855e-16, 0.15999999999999973]}
{'': [0.11113013243095493, -3.96508223080413e-18], 'true': [1.3664283380001927e-16, 0.1599999999999999]}
{'': [0.10815835949511798, 9.912705577010326e-18], 'true': [-2.7328566760003855e-16, 0.16000000000000003]}
{'': [0.1067802978383715, -5.9476233462061954e-18], 'true': [1.3664283380001927e-16, 0.16000000000000006]}
{'': [0.10633295765097943, 2.9738116731030977e-18], 'true': [-5.124106267500723e-17, 0.15999999999999998]}
{'': [0.10620510347417647, 3.96508223080413e-18], 'true': [3.416070845000482e-17, 0.16000000000000006]}
{'': [0.10617228822061624, -2.9738116731030977e-18], 'true': [-3.416070845000482e-17, 0.16]}
{'': [0.10616221825031717, 0.0], 'true': [0.0, 0.16]}
{'': [0.10615204765393826, -2.9738116731030977e-18], 'true': [-1.2810265668751807e-17, 0.15999999999999998]}
{'': [0.1061355654998577, 4.956352788505163e-19], 'true': [0.0, 0.15999999999999998]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | else return 0.6581489350995123;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | else return 0.5580193346218546;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.32092546969114216;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | else return 0.44194861002444086;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.11231637819360636;  // std dev = 1,67e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.15206564481433005;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.37562288191419213;  // std dev = 0,348, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.1015963294878363;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.1168184335310849;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2697478132793615;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.3881277225858783;  // std dev = 0,202, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2418296599434983;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.08885822246897802;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2062525881598365;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.304300268061593;  // std dev = 0,187, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1832988861745807;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.06718842860896591;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16095555079641394;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.2461784291673272;  // std dev = 0,168, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14099387630814547;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.050626092185623875;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12802275604229368;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.2048393854504526;  // std dev = 0,150, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11005499980448766;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.03806982384014668;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10349083403071088;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.17445274157370047;  // std dev = 0,134, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0870167842841696;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.06842697784420275;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.028594955185828427;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08478440748267765;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.15140581374829573;  // std dev = 0,121, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0695446667008144;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.06419184008202618;  // std dev = 3,73e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
Results
   AUC ROC   = 0.933594
   AUC PR    = 0.899207
   CLL	      = -0.275741
   Precision = 0.857143 at threshold = 0.5
   Recall    = 0.975
   F1        = 0.912281


Total learning time: 7.575 seconds
Total inference time: 0.939 seconds
AUC ROC: 0.933594


Refined model AUC ROC: 0.933594


Dataset: imdb->uwcse, Fold: 4, Type: transfer, Time: 00:01:18
{'Recall': 0.975, 'AUC PR': 0.899207, 'Mapping results': {'Generating paths time': 2.4145073890686035, 'Finding best mapping': 0.024616479873657227, 'Generating mappings time': 0.0646963119506836, 'Knowledge compiling time': 0.01240396499633789, 'Possible mappings': 288, 'Total time': 2.5162296295166016}, 'F1': 0.912281, 'AUC ROC': 0.933594, 'Inference time': 0.939, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.920612, 'F1': 0.903955, 'AUC ROC': 0.930938, 'Inference time': 0.714, 'Precision': [0.824742, 0.5], 'Learning time': 4.574, 'CLL': -0.287685}, 'Precision': [0.857143, 0.5], 'Learning time': 12.149000000000001, 'CLL': -0.275741}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | else return 0.6581489350995123;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.14185106490048774;  // std dev = 1,83e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else if ( publication(G, A) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.5580193346218546;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.32092546969114216;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | else return 0.44194861002444086;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.11231637819360639;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.15206564481433005;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.37562288191419213;  // std dev = 0,348, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.10159632948783635;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.1168184335310849;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2697478132793615;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.3881277225858783;  // std dev = 0,202, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2418296599434983;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.08885822246897802;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2062525881598365;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.304300268061593;  // std dev = 0,187, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1832988861745807;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.06718842860896591;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16095555079641394;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.2461784291673272;  // std dev = 0,168, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14099387630814547;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.050626092185623875;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12802275604229368;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.2048393854504526;  // std dev = 0,150, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11005499980448766;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.03806982384014668;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10349083403071088;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.17445274157370047;  // std dev = 0,134, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0870167842841696;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.06842697784420275;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.028594955185828427;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08478440748267765;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.15140581374829573;  // std dev = 0,121, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0695446667008144;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.0641918400820262;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
Results
   AUC ROC   = 0.933594
   AUC PR    = 0.899207
   CLL	      = -0.275741
   Precision = 0.857143 at threshold = 0.5
   Recall    = 0.975
   F1        = 0.912281


Total learning time: 8.307 seconds
Total inference time: 0.796 seconds
AUC ROC: 0.933594


Dataset: imdb->uwcse, Fold: 4, Type: scratch, Time: 00:01:27
{'Recall': 0.975, 'AUC PR': 0.899207, 'F1': 0.912281, 'AUC ROC': 0.933594, 'Inference time': 0.796, 'Precision': [0.857143, 0.5], 'Learning time': 8.307, 'CLL': -0.275741}


Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'actor(A) -> student(A)', 'movie(A,B) -> publication(A,B)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5640312880406888;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.48074388375574334;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.386198448632422;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.11231637819360639;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2971060494206917;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.22385468926999735;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1679716628061756;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12658100414000711;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.07877675473109173;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.09607868392277003;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.07347328777965571;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.05656520765532164;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.06419184008202622;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
Results
   AUC ROC   = 0.945797
   AUC PR    = 0.937284
   CLL	      = -0.272526
   Precision = 0.850877 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.919431


Total learning time: 3.084 seconds
Total inference time: 0.701 seconds
AUC ROC: 0.945797


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [3.73e-09, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [2.63e-09, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
{'': [0.1814058956916096, -5.046468293750712e-18], 'true': [0.0, 0.20761245674740453]}
{'': [0.17685507625002705, 0.0], 'true': [0.0, 0.20761245674740458]}
{'': [0.17247995015100465, -2.523234146875356e-18], 'true': [0.0, 0.20761245674740486]}
{'': [0.17030274222106967, -2.523234146875356e-18], 'true': [0.0, 0.20761245674740486]}
{'': [0.16951377794370398, -1.261617073437678e-18], 'true': [0.0, 0.20761245674740483]}
{'': [0.16923971667658838, 1.261617073437678e-18], 'true': [0.0, 0.2076124567474048]}
{'': [0.1691340043119816, 0.0], 'true': [0.0, 0.2076124567474048]}
{'': [0.1690793453910904, 0.0], 'true': [0.0, 0.20761245674740483]}
{'': [0.1690361610985065, 6.30808536718839e-19], 'true': [0.0, 0.20761245674740486]}
{'': [0.16899197074053585, -1.261617073437678e-18], 'true': [0.0, 0.2076124567474049]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), inphase(E, F) )
%   | | | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B) )
%   | | | then if ( publication(E, F), projectmember(G, F) )
%   | | | | then return 0.5072279478556496;  // std dev = 0,878, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.5552591449794353;  // std dev = 0,881, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.20874113578563502;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.76783633424493;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B) )
%   | | | then if ( publication(E, F), projectmember(G, F) )
%   | | | | then return 0.4026285776105345;  // std dev = 0,880, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.43920582473019837;  // std dev = 0,878, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.17436242104626806;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.6065083237249159;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360639;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( yearsinprogram(A, E), yearsinprogram(D, E) )
%   | | | then return -0.06193881354918923;  // std dev = 0,729, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(F, B) )
%   | | | | then if ( publication(F, G), inphase(G, H) )
%   | | | | | then return 0.28307370050841596;  // std dev = 0,854, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.5630857387929004;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.24245111972092537;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.4576853134698804;  // std dev = 0,072, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B) )
%   | | | then if ( publication(E, F), projectmember(G, F) )
%   | | | | then return 0.20157857253341888;  // std dev = 0,842, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.28318111056083095;  // std dev = 0,809, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10558288084513598;  // std dev = 1,074, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.34882818107469316;  // std dev = 0,067, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B) )
%   | | | then if ( publication(E, F), inphase(F, G) )
%   | | | | then return 0.21600251328581271;  // std dev = 0,889, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else return 0.15013045636087838;  // std dev = 0,758, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0832505822378535;  // std dev = 1,074, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.2747150839258366;  // std dev = 0,059, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B) )
%   | | | then if ( publication(E, F), projectmember(G, F) )
%   | | | | then return 0.10918607207512396;  // std dev = 0,852, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.16962597587015107;  // std dev = 0,801, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.06502138050550643;  // std dev = 1,073, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.22373743195380502;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( projectmember(E, B) )
%   | | | then return 0.12818499636698902;  // std dev = 0,424, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.05006848939463263;  // std dev = 0,425, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.18745106130543746;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( yearsinprogram(A, E), yearsinprogram(D, E) )
%   | | | then return -0.18615639524996144;  // std dev = 0,699, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( projectmember(F, B) )
%   | | | | then return 0.1696659756570781;  // std dev = 1,023, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return 0.101769424182627;  // std dev = 0,859, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.16066413406761157;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), projectmember(F, E) )
%   | | | then return 0.0370158770150662;  // std dev = 0,837, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12621754855296954;  // std dev = 0,291, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.02484746575103076;  // std dev = 1,060, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.06419184008202622;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
Results
   AUC ROC   = 0.957966
   AUC PR    = 0.940709
   CLL	      = -0.261639
   Precision = 0.849057 at threshold = 0.5
   Recall    = 0.927835
   F1        = 0.8867


Total learning time: 5.11 seconds
Total inference time: 0.767 seconds
AUC ROC: 0.957966


Refined model AUC ROC: 0.957966


Dataset: imdb->uwcse, Fold: 5, Type: transfer, Time: 00:01:40
{'Recall': 0.927835, 'AUC PR': 0.940709, 'Mapping results': {'Generating paths time': 2.316441774368286, 'Finding best mapping': 0.025807619094848633, 'Generating mappings time': 0.06630802154541016, 'Knowledge compiling time': 0.010308504104614258, 'Possible mappings': 288, 'Total time': 2.418872594833374}, 'F1': 0.8867, 'AUC ROC': 0.957966, 'Inference time': 0.767, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.937284, 'F1': 0.919431, 'AUC ROC': 0.945797, 'Inference time': 0.701, 'Precision': [0.850877, 0.5], 'Learning time': 3.084, 'CLL': -0.272526}, 'Precision': [0.849057, 0.5], 'Learning time': 8.194, 'CLL': -0.261639}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(C, D), inphase(D, E) )
%   | | | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(C, D), projectmember(E, D) )
%   | | | then return 0.5072279478556496;  // std dev = 0,878, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6101519416923331;  // std dev = 0,344, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(D, E), projectmember(F, E) )
%   | | | | then return 0.4026285776105345;  // std dev = 0,880, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.4264602692870844;  // std dev = 0,878, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1564123687585864;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.6361754988555826;  // std dev = 0,148, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(D, E), inphase(E, F) )
%   | | | | then return 0.32465376513501865;  // std dev = 0,874, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else return 0.3043835523940772;  // std dev = 0,884, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1264524488939288;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.4847765716450808;  // std dev = 0,166, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(D, E), projectmember(F, E) )
%   | | | | then return 0.22851116879384656;  // std dev = 0,885, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.24389184717400222;  // std dev = 0,874, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.10061855766907954;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.36999683934084926;  // std dev = 0,160, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(D, E), inphase(E, F) )
%   | | | | then return 0.1862617765663751;  // std dev = 0,872, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else return 0.17029423724581624;  // std dev = 0,886, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.07909732167218819;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.29061151148195785;  // std dev = 0,145, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( yearsinprogram(A, D), yearsinprogram(C, D) )
%   | | then return -0.21509176875011815;  // std dev = 0,701, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.07272369997388638;  // std dev = 0,475, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( projectmember(F, B) )
%   | | | | then return 0.35546538040523556;  // std dev = 0,820, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else return 0.1496816094679753;  // std dev = 0,881, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.23576998106283223;  // std dev = 0,128, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.19795735391110159;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(D, E), projectmember(F, E) )
%   | | | | then return 0.07184959193428742;  // std dev = 0,858, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.14368843544385831;  // std dev = 0,819, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.01750043596356655;  // std dev = 1,028, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.1967588123723631;  // std dev = 0,114, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.1683918696790495;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(D, E), projectmember(F, E) )
%   | | | | then return 0.056375494228243006;  // std dev = 0,858, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.11232549221065613;  // std dev = 0,822, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.013406475896714242;  // std dev = 1,027, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.16803529568257855;  // std dev = 0,101, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.1461079084644158;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(D, E), projectmember(F, E) )
%   | | | | then return 0.04453002454874583;  // std dev = 0,859, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.08892558758205571;  // std dev = 0,825, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.010259501214824506;  // std dev = 1,027, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.14620081901243698;  // std dev = 0,091, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
Results
   AUC ROC   = 0.958285
   AUC PR    = 0.947272
   CLL	      = -0.265593
   Precision = 0.849057 at threshold = 0.5
   Recall    = 0.927835
   F1        = 0.8867


Total learning time: 6.286 seconds
Total inference time: 1.012 seconds
AUC ROC: 0.958285


Dataset: imdb->uwcse, Fold: 5, Type: scratch, Time: 00:01:48
{'Recall': 0.927835, 'AUC PR': 0.947272, 'F1': 0.8867, 'AUC ROC': 0.958285, 'Inference time': 1.012, 'Precision': [0.849057, 0.5], 'Learning time': 6.286, 'CLL': -0.265593}


Start learning from source dataset


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( inphase(A, G), inphase(E, G) )
%   | | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else if ( publication(D, H), professor(H) )
%   | | | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then if ( yearsinprogram(A, J), yearsinprogram(I, J) )
%   | | | | then return 0.3581489350995123;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | | else return 0.6816783468642175;  // std dev = 0,381, 34,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=28 */
%   | | | else return 0.7470378239884004;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.14185106490048768;  // std dev = 6,83e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B), publication(F, A) )
%   | | | then if ( publication(F, G), professor(G) )
%   | | | | then return 0.006763802938225112;  // std dev = 0,906, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return 0.508243899526118;  // std dev = 0,732, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( inphase(A, H), inphase(D, H) )
%   | | | | then if ( tempadvisedby(I, B), publication(J, I) )
%   | | | | | then return 0.19772836215798636;  // std dev = 1,116, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | else if ( projectmember(K, B) )
%   | | | | | | then return 0.520791908329285;  // std dev = 0,822, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | else return 0.38886566003988376;  // std dev = 1,054, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return 0.5839666806952923;  // std dev = 0,380, 34,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=28 */
%   | | else return 0.6302322013528499;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.12544463852839155;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5553664367462842;  // std dev = 1,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( inphase(A, F), inphase(E, F) )
%   | | | then return 0.04208973665038638;  // std dev = 0,717, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(D, G), professor(G) )
%   | | | | then if ( publication(H, B) )
%   | | | | | then return 0.03226337811870854;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else return 0.41955807307794335;  // std dev = 0,894, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.6067346964522805;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.47878188025763335;  // std dev = 0,349, 64,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=54 */
%   | | | else if ( projectmember(J, B) )
%   | | | | then return 0.2532872588930942;  // std dev = 1,061, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return 0.387772311071686;  // std dev = 0,419, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.1123163781936063;  // std dev = 4,94e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.11516110153641959;  // std dev = 0,441, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( tempadvisedby(F, B), publication(G, A) )
%   | | | then if ( publication(G, H), professor(H) )
%   | | | | then if ( publication(I, B) )
%   | | | | | then return 0.027710970085348997;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else return 0.29317936503891046;  // std dev = 1,079, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return 0.4568259020121077;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.38444520091404827;  // std dev = 0,323, 57,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=50 */
%   | | | | else if ( projectmember(K, B) )
%   | | | | | then return 0.1942122831512748;  // std dev = 1,059, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return 0.29270334034444784;  // std dev = 0,419, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.10159632948783624;  // std dev = 4,59e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A), publication(F, B) )
%   | | | then return 0.07984380719371367;  // std dev = 0,342, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else if ( inphase(A, G), inphase(D, G) )
%   | | | | then if ( projectmember(H, B) )
%   | | | | | then return 0.3185670364752894;  // std dev = 0,812, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else if ( yearsinprogram(A, I), yearsinprogram(D, I) )
%   | | | | | | then return 0.3796126560262977;  // std dev = 0,839, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | else return -0.0984204125756885;  // std dev = 1,004, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else if ( publication(J, B) )
%   | | | | | then return 0.27595674094719813;  // std dev = 0,358, 26,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | | | | else return 0.24615373408375255;  // std dev = 0,434, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.28912441352846674;  // std dev = 0,310, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.09269127618926107;  // std dev = 1,05e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( inphase(A, F), inphase(D, F) )
%   | | | then return -0.023494984176307403;  // std dev = 0,612, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(E, G), professor(G) )
%   | | | | then if ( tempadvisedby(H, G), publication(I, H) )
%   | | | | | then return 0.19326856162525682;  // std dev = 0,701, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return -0.037843999477148116;  // std dev = 1,034, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.32964364422433956;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(J, B), publication(K, A) )
%   | | | then return 0.3252777877337052;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else if ( publication(L, B) )
%   | | | | then return 0.20233111833449524;  // std dev = 0,356, 57,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=47 */
%   | | | | else return 0.1248282884881909;  // std dev = 0,441, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.0851847513883968;  // std dev = 2,58e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253545;  // std dev = 5,96e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.04178127952504982;  // std dev = 0,331, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else if ( publication(E, G), inphase(G, H) )
%   | | | | then if ( inphase(D, H), inphase(A, H) )
%   | | | | | then return -0.09050587199151892;  // std dev = 1,112, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | else return 0.21621180319002886;  // std dev = 0,317, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | | else if ( publication(E, I), student(I) )
%   | | | | | then return 0.07672081182672352;  // std dev = 0,803, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return -0.024837314069004985;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.20771138020472069;  // std dev = 0,252, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.11310704092415387;  // std dev = 0,431, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   else return -0.07877675473109173;  // std dev = 2,98e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.03475439987213229;  // std dev = 0,331, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else if ( publication(E, G), inphase(G, H) )
%   | | | | then if ( inphase(D, H), inphase(A, H) )
%   | | | | | then return -0.06804869555748969;  // std dev = 1,112, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | else return 0.1701181314170426;  // std dev = 0,317, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | | else if ( publication(E, I), student(I) )
%   | | | | | then return 0.06014721490953362;  // std dev = 0,804, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return -0.019513816354878772;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.16814064806784204;  // std dev = 0,252, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.08717862913572771;  // std dev = 0,431, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   else return -0.07324622576333704;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( inphase(A, F), inphase(D, F) )
%   | | | then if ( publication(E, G), inphase(G, F) )
%   | | | | then return -0.09424208539092019;  // std dev = 0,426, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | | else return 0.1380697221856326;  // std dev = 0,691, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( publication(E, H), inphase(H, I) )
%   | | | | then return 0.11136693979239809;  // std dev = 0,333, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | | else if ( publication(E, J), student(J) )
%   | | | | | then return 0.04748258495582047;  // std dev = 0,806, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.08952538965715176;  // std dev = 0,865, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(K, B) )
%   | | | then return 0.050739384162108644;  // std dev = 0,459, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.12324524411702698;  // std dev = 0,303, 40,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   else return -0.06842697784420271;  // std dev = 1,97e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.13400703000801106;  // std dev = 1,83e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, D) )
%   | | | then return 0.0011832025202617386;  // std dev = 0,401, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else if ( yearsinprogram(A, G), yearsinprogram(D, G) )
%   | | | | then return -0.03425609232348029;  // std dev = 0,768, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( publication(E, H), inphase(H, I) )
%   | | | | | then if ( inphase(D, I) )
%   | | | | | | then return -0.023174616974060886;  // std dev = 0,579, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else if ( inphase(A, I) )
%   | | | | | | | then return 0.10455900734735592;  // std dev = 0,301, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | | | | | else return 0.050593440086370366;  // std dev = 0,397, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | | | else return 0.14620843995334942;  // std dev = 0,321, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.09044168662972824;  // std dev = 0,338, 49,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=41 */
%   else return -0.06419184008202626;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */


Predicates from source: ['advisedby(person,person).', 'yearsinprogram(person,year).', 'professor(person).', 'student(person).', 'projectmember(project,person).', 'publication(title,person).', 'inphase(person,prequals).', 'tempadvisedby(person,person).'] 



Best mapping found: ['yearsinprogram(A,B) -> genre(A,B)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- director(A), actor(B).;true;false
0;true,false;movie(D, A).;true;false
0;true,false,true;genre(A, G), genre(E, G).;false;true
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true,false;movie(D, H), actor(H).;false;false
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,false;movie(D, A).;true;true
2;true,false,true;genre(A, F), genre(E, F).;false;true
2;true;movie(C, B), movie(C, A).;false;true
2;true,false,true,false;movie(D, G), actor(G).;true;false
2;true,false,true,false,true;movie(H, B).;false;false
2;true,false,false;movie(I, B).;false;false
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,false;movie(E, D).;false;true
3;true;movie(C, A), movie(C, B).;false;true
3;true,false,false,false;movie(J, B).;false;false
3;true,false,false,true;movie(G, H), actor(H).;true;false
3;true,false,false;movie(G, A).;true;true
3;true,false,false,true,true;movie(I, B).;false;false
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(B, A) :- director(A), actor(B).;true;false
5;true,false;movie(E, A).;true;true
5;true,false,true;genre(A, F), genre(D, F).;false;true
5;true;movie(C, B), movie(C, A).;false;true
5;true,false,false,false;movie(L, B).;false;false
5;true,false,true,false;movie(E, G), actor(G).;true;false
5;true,false,true,false,true;movie(I, H).;false;false
5;true,false,false;movie(J, B), movie(K, A).;false;true
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true,false;movie(E, B).;true;true
6;true,false,true;movie(F, A).;false;true
6;true;movie(C, A), movie(C, B).;false;true
6;true,false,true,false;movie(E, G), genre(G, H).;true;true
6;true,false,true,false,false;movie(E, I), director(I).;false;false
6;true,false,true,false,true;genre(D, H), genre(A, H).;false;false
6;true,false,false;movie(J, B).;false;false
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,false;movie(E, B).;true;true
7;true,false,true;movie(F, A).;false;true
7;true;movie(C, B), movie(C, A).;false;true
7;true,false,true,false;movie(E, G), genre(G, H).;true;true
7;true,false,true,false,false;movie(E, I), director(I).;false;false
7;true,false,true,false,true;genre(D, H), genre(A, H).;false;false
7;true,false,false;movie(J, B).;false;false
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,false;movie(E, B).;true;false
8;true,false,true;genre(A, F), genre(D, F).;true;true
8;true;movie(C, B), movie(C, A).;false;true
8;true,false,true,true;movie(E, G), genre(G, F).;false;false
8;true,false,true,false;movie(E, H), genre(H, I).;false;true
8;true,false,true,false,false;movie(E, J), director(J).;false;false
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,false;movie(E, B).;true;false
9;true,false,true;movie(F, D).;false;true
9;true;movie(C, B), movie(C, A).;false;true
9;true,false,true,false;genre(A, G), genre(D, G).;false;true
9;true,false,true,false,false;movie(E, H), genre(H, I).;true;false
9;true,false,true,false,false,true;genre(D, I).;false;true
9;true,false,true,false,false,true,false;genre(A, I).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099086
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.616 seconds
Total inference time: 0.833 seconds
AUC ROC: 1.0


Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [5.77e-08, 56, 0], 'true,true': [0.0, 0, 56]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 56, 0], 'true,true': [0.0, 0, 56]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [3.94e-08, 56, 0], 'true,true': [1.03e-07, 0, 56]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [3.8e-08, 56, 0], 'true,true': [0.0, 0, 56]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 56, 0], 'true,true': [0.0, 0, 56]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [1.83e-08, 56, 0], 'true,true': [0.0, 0, 56]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [1.83e-08, 56, 0], 'true,true': [0.0, 0, 56]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [1.29e-08, 56, 0], 'true,true': [0.0, 0, 56]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [1.67e-08, 56, 0], 'true,true': [0.0, 0, 56]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 56, 0], 'true,true': [5.16e-08, 0, 56]}]
{'': [-1.2688263138573217e-16, 5.947623346206196e-17], 'true': [-1.2688263138573217e-16, nan]}
{'': [-1.9032394707859825e-16, -3.766828119263924e-17], 'true': [-1.9032394707859825e-16, nan]}
{'': [1.9032394707859825e-16, 2.7755575615628914e-17], 'true': [1.9032394707859825e-16, nan]}
{'': [-3.489272363107635e-16, 2.577303450022685e-17], 'true': [-3.489272363107635e-16, nan]}
{'': [-1.2688263138573217e-16, -9.912705577010326e-19], 'true': [-1.2688263138573217e-16, nan]}
{'': [-3.172065784643304e-17, 5.9476233462061954e-18], 'true': [-3.172065784643304e-17, nan]}
{'': [-1.586032892321652e-17, 5.9476233462061954e-18], 'true': [-1.586032892321652e-17, nan]}
{'': [-3.9650822308041306e-17, 2.9738116731030977e-18], 'true': [-3.9650822308041306e-17, nan]}
{'': [-1.1895246692412391e-17, 4.956352788505163e-18], 'true': [-1.1895246692412391e-17, nan]}
{'': [4.7580986769649563e-17, -1.982541115402065e-18], 'true': [4.7580986769649563e-17, nan]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.09269127618926105;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
Results
   AUC ROC   = 0.95092
   AUC PR    = 0.910615
   CLL	      = -0.195966
   Precision = 0.910615 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.953216


Total learning time: 1.259 seconds
Total inference time: 0.784 seconds
AUC ROC: 0.95092


Refined model AUC ROC: 0.95092


Dataset: uwcse->imdb, Fold: 1, Type: transfer, Time: 00:02:13
{'Recall': 1.0, 'AUC PR': 0.910615, 'Mapping results': {'Generating paths time': 2.5337445735931396, 'Finding best mapping': 0.796818733215332, 'Generating mappings time': 0.531822919845581, 'Knowledge compiling time': 0.01393270492553711, 'Possible mappings': 2592, 'Total time': 3.876326560974121}, 'F1': 0.953216, 'AUC ROC': 0.95092, 'Inference time': 0.784, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.833, 'Precision': [1.0, 0.5], 'Learning time': 1.616, 'CLL': -0.099086}, 'Precision': [0.910615, 0.5], 'Learning time': 2.875, 'CLL': -0.195966}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.14185106490048768;  // std dev = 5,37e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.11231637819360632;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.10159632948783626;  // std dev = 2,79e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.09269127618926103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.0851847513883968;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07877675473109179;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
Results
   AUC ROC   = 0.95092
   AUC PR    = 0.910615
   CLL	      = -0.195966
   Precision = 0.910615 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.953216


Total learning time: 1.7 seconds
Total inference time: 0.775 seconds
AUC ROC: 0.95092


Dataset: uwcse->imdb, Fold: 1, Type: scratch, Time: 00:02:16
{'Recall': 1.0, 'AUC PR': 0.910615, 'F1': 0.953216, 'AUC ROC': 0.95092, 'Inference time': 0.775, 'Precision': [0.910615, 0.5], 'Learning time': 1.7, 'CLL': -0.195966}


Best mapping found: ['yearsinprogram(A,B) -> genre(A,B)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- director(A), actor(B).;true;false
0;true,false;movie(D, A).;true;false
0;true,false,true;genre(A, G), genre(E, G).;false;true
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true,false;movie(D, H), actor(H).;false;false
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,false;movie(D, A).;true;true
2;true,false,true;genre(A, F), genre(E, F).;false;true
2;true;movie(C, B), movie(C, A).;false;true
2;true,false,true,false;movie(D, G), actor(G).;true;false
2;true,false,true,false,true;movie(H, B).;false;false
2;true,false,false;movie(I, B).;false;false
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,false;movie(E, D).;false;true
3;true;movie(C, A), movie(C, B).;false;true
3;true,false,false,false;movie(J, B).;false;false
3;true,false,false,true;movie(G, H), actor(H).;true;false
3;true,false,false;movie(G, A).;true;true
3;true,false,false,true,true;movie(I, B).;false;false
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(B, A) :- director(A), actor(B).;true;false
5;true,false;movie(E, A).;true;true
5;true,false,true;genre(A, F), genre(D, F).;false;true
5;true;movie(C, B), movie(C, A).;false;true
5;true,false,false,false;movie(L, B).;false;false
5;true,false,true,false;movie(E, G), actor(G).;true;false
5;true,false,true,false,true;movie(I, H).;false;false
5;true,false,false;movie(J, B), movie(K, A).;false;true
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true,false;movie(E, B).;true;true
6;true,false,true;movie(F, A).;false;true
6;true;movie(C, A), movie(C, B).;false;true
6;true,false,true,false;movie(E, G), genre(G, H).;true;true
6;true,false,true,false,false;movie(E, I), director(I).;false;false
6;true,false,true,false,true;genre(D, H), genre(A, H).;false;false
6;true,false,false;movie(J, B).;false;false
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,false;movie(E, B).;true;true
7;true,false,true;movie(F, A).;false;true
7;true;movie(C, B), movie(C, A).;false;true
7;true,false,true,false;movie(E, G), genre(G, H).;true;true
7;true,false,true,false,false;movie(E, I), director(I).;false;false
7;true,false,true,false,true;genre(D, H), genre(A, H).;false;false
7;true,false,false;movie(J, B).;false;false
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,false;movie(E, B).;true;false
8;true,false,true;genre(A, F), genre(D, F).;true;true
8;true;movie(C, B), movie(C, A).;false;true
8;true,false,true,true;movie(E, G), genre(G, F).;false;false
8;true,false,true,false;movie(E, H), genre(H, I).;false;true
8;true,false,true,false,false;movie(E, J), director(J).;false;false
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,false;movie(E, B).;true;false
9;true,false,true;movie(F, D).;false;true
9;true;movie(C, B), movie(C, A).;false;true
9;true,false,true,false;genre(A, G), genre(D, G).;false;true
9;true,false,true,false,false;movie(E, H), genre(H, I).;true;false
9;true,false,true,false,false,true;genre(D, I).;false;true
9;true,false,true,false,false,true,false;genre(A, I).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360629;  // std dev = 4,08e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783621;  // std dev = 3,49e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926105;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109175;  // std dev = 1,97e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then if ( movie(D, G), genre(G, E) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095245
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.706 seconds
Total inference time: 0.838 seconds
AUC ROC: 1.0


Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'genre(B, E), genre(F, E)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [5.96e-08, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 1, 0], 'false': [0.0, 57, 0], 'true,true': [0.0, 0, 58]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'genre(B, E), genre(F, E)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [4.08e-08, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.19e-07, 0, 58], 'true,false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [3.49e-08, 57, 0], 'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 1, 0], 'false': [0.0, 57, 0], 'true,true': [0.0, 0, 58]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'genre(B, E), genre(F, E)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [1.83e-08, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [1.97e-08, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [1.05e-08, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E), genre(F, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,true': 'movie(D, G), genre(G, E)'}, {'true,false,true,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'false': [1.83e-08, 57, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true,true': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [3.94e-08, 0, 58], 'true,false,true,true': [0.0, 1, 0]}]
{'': [0.016661878770467882, 6.232831015439475e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-3.675221047035001e-16, 0.0]}
{'': [0.011894690526567029, -3.895519384649672e-17], 'true': [-1.2250736823450003e-16, 0.0]}
{'': [0.0074278712436747505, 2.921639538487254e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [2.4501473646900006e-16, 0.0]}
{'': [0.004489961488609621, 2.1425356615573195e-17], 'true,false': [0.0, nan], 'true': [-3.3689526264487507e-16, 0.0]}
{'': [0.002847550778199424, -9.73879846162418e-19], 'true': [-1.5313421029312505e-16, 0.0]}
{'': [0.0019301600785667096, 5.843279076974508e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-3.062684205862501e-17, 0.0]}
{'': [0.0013871370738595256, 6.817158923136926e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-2.2970131543968756e-17, 0.0]}
{'': [0.0010442245890247297, 1.947759692324836e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-3.062684205862501e-17, 0.0]}
{'': [0.0008150414371814251, 5.843279076974508e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false,true,true': [nan, 0.0]}
{'': [0.0006545251198185025, -2.434699615406045e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [2.6798486801296883e-17, 0.0]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360629;  // std dev = 4,08e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783621;  // std dev = 3,49e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926105;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109175;  // std dev = 1,97e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420268;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.554 seconds
Total inference time: 0.81 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb, Fold: 2, Type: transfer, Time: 00:02:25
{'Recall': 1.0, 'AUC PR': 1.0, 'Mapping results': {'Generating paths time': 2.570030450820923, 'Finding best mapping': 0.7621710300445557, 'Generating mappings time': 0.5293369293212891, 'Knowledge compiling time': 0.014226436614990234, 'Possible mappings': 2592, 'Total time': 3.8757710456848145}, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.81, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.838, 'Precision': [1.0, 0.5], 'Learning time': 1.706, 'CLL': -0.095245}, 'Precision': [1.0, 0.5], 'Learning time': 3.26, 'CLL': -0.094637}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.8581489350995115;  // std dev = 2,60e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6813641993271577;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.719473412210955;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5288038212098718;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.5553664367462843;  // std dev = 1,26e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.39742934112412265;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.4175135841583102;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.10159632948783626;  // std dev = 2,79e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3025884514838787;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3207118471601495;  // std dev = 2,11e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.09269127618926104;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23719304019103774;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.08518475138839679;  // std dev = 1,05e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.19142843787805347;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.20975771563253542;  // std dev = 5,96e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.07877675473109176;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15835970847973962;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1770964977452775;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.13366131757790028;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1527438580936709;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.0684269778442027;  // std dev = 1,67e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11466128853019192;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1340070300080111;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
Results
   AUC ROC   = 0.95779
   AUC PR    = 0.925491
   CLL	      = -0.19503
   Precision = 0.912676 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954345


Total learning time: 2.302 seconds
Total inference time: 0.794 seconds
AUC ROC: 0.95779


Dataset: uwcse->imdb, Fold: 2, Type: scratch, Time: 00:02:28
{'Recall': 1.0, 'AUC PR': 0.925491, 'F1': 0.954345, 'AUC ROC': 0.95779, 'Inference time': 0.794, 'Precision': [0.912676, 0.5], 'Learning time': 2.302, 'CLL': -0.19503}


Best mapping found: ['yearsinprogram(A,B) -> genre(A,B)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- director(A), actor(B).;true;false
0;true,false;movie(D, A).;true;false
0;true,false,true;genre(A, G), genre(E, G).;false;true
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true,false;movie(D, H), actor(H).;false;false
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,false;movie(D, A).;true;true
2;true,false,true;genre(A, F), genre(E, F).;false;true
2;true;movie(C, B), movie(C, A).;false;true
2;true,false,true,false;movie(D, G), actor(G).;true;false
2;true,false,true,false,true;movie(H, B).;false;false
2;true,false,false;movie(I, B).;false;false
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,false;movie(E, D).;false;true
3;true;movie(C, A), movie(C, B).;false;true
3;true,false,false,false;movie(J, B).;false;false
3;true,false,false,true;movie(G, H), actor(H).;true;false
3;true,false,false;movie(G, A).;true;true
3;true,false,false,true,true;movie(I, B).;false;false
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(B, A) :- director(A), actor(B).;true;false
5;true,false;movie(E, A).;true;true
5;true,false,true;genre(A, F), genre(D, F).;false;true
5;true;movie(C, B), movie(C, A).;false;true
5;true,false,false,false;movie(L, B).;false;false
5;true,false,true,false;movie(E, G), actor(G).;true;false
5;true,false,true,false,true;movie(I, H).;false;false
5;true,false,false;movie(J, B), movie(K, A).;false;true
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true,false;movie(E, B).;true;true
6;true,false,true;movie(F, A).;false;true
6;true;movie(C, A), movie(C, B).;false;true
6;true,false,true,false;movie(E, G), genre(G, H).;true;true
6;true,false,true,false,false;movie(E, I), director(I).;false;false
6;true,false,true,false,true;genre(D, H), genre(A, H).;false;false
6;true,false,false;movie(J, B).;false;false
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,false;movie(E, B).;true;true
7;true,false,true;movie(F, A).;false;true
7;true;movie(C, B), movie(C, A).;false;true
7;true,false,true,false;movie(E, G), genre(G, H).;true;true
7;true,false,true,false,false;movie(E, I), director(I).;false;false
7;true,false,true,false,true;genre(D, H), genre(A, H).;false;false
7;true,false,false;movie(J, B).;false;false
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,false;movie(E, B).;true;false
8;true,false,true;genre(A, F), genre(D, F).;true;true
8;true;movie(C, B), movie(C, A).;false;true
8;true,false,true,true;movie(E, G), genre(G, F).;false;false
8;true,false,true,false;movie(E, H), genre(H, I).;false;true
8;true,false,true,false,false;movie(E, J), director(J).;false;false
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,false;movie(E, B).;true;false
9;true,false,true;movie(F, D).;false;true
9;true;movie(C, B), movie(C, A).;false;true
9;true,false,true,false;genre(A, G), genre(D, G).;false;true
9;true,false,true,false,false;movie(E, H), genre(H, I).;true;false
9;true,false,true,false,false,true;genre(D, I).;false;true
9;true,false,true,false,false,true,false;genre(A, I).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else if ( movie(D, G), actor(G) )
%   | | | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048788;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.12544463852839113;  // std dev = 8,16e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else if ( movie(D, G), actor(G) )
%   | | | | then if ( movie(H, A) )
%   | | | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 1,00e-07, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783641;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.09269127618926104;  // std dev = 3,33e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else if ( movie(D, G), actor(G) )
%   | | | | then if ( movie(H, I) )
%   | | | | | then return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 5,77e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109157;  // std dev = 7,22e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then if ( movie(D, G), genre(G, E) )
%   | | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else if ( movie(D, H), genre(H, I) )
%   | | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 5,96e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.972 seconds
Total inference time: 0.801 seconds
AUC ROC: 1.0


Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'genre(B, E), genre(F, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false': 'movie(D, G), actor(G)'}, {'false': [0.0, 152, 0], 'true,true': [1.09e-06, 0, 178], 'true,false,true,false,true': [0.0, 11, 0], 'true,false,true,true': [0.0, 15, 0], 'true,false,true,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 26, 0], 'false': [8.16e-08, 152, 0], 'true,true': [0.0, 0, 178]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'genre(B, E), genre(F, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false': 'movie(D, G), actor(G)', 'true,false,true,false,true': 'movie(H, A)'}, {'false': [1e-07, 152, 0], 'true,true': [5.9e-07, 0, 178], 'true,false,true,true': [1.39e-08, 15, 0], 'true,false,true,false,false': [0.0, 0, 0], 'true,false,true,false,true,true': [7.45e-09, 11, 0], 'true,false,true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.0, 152, 0], 'true,false,true': [0.0, 26, 0], 'true,true': [3.77e-07, 0, 178], 'true,false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [7.45e-09, 26, 0], 'false': [3.33e-08, 152, 0], 'true,true': [3.58e-07, 0, 178]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'genre(B, E), genre(F, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false': 'movie(D, G), actor(G)', 'true,false,true,false,true': 'movie(H, I)'}, {'false': [5.77e-08, 152, 0], 'true,true': [3.63e-07, 0, 178], 'true,false,true,true': [9.13e-09, 15, 0], 'true,false,true,false,false': [0.0, 0, 0], 'true,false,true,false,true,true': [0.0, 11, 0], 'true,false,true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [7.22e-08, 152, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [3e-07, 0, 178], 'true,false,true,true': [0.0, 26, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 152, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 178], 'true,false,true,true': [0.0, 26, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E), genre(F, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,true': 'movie(D, G), genre(G, E)', 'true,false,true,false': 'movie(D, H), genre(H, I)'}, {'true,false,true,true,false': [1.86e-09, 5, 0], 'true,true': [0.0, 0, 178], 'true,false,true,false,true': [2.63e-09, 11, 0], 'true,false,true,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.96e-08, 152, 0], 'true,false,true,true,true': [2.63e-09, 10, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 152, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [7.6e-08, 0, 178], 'true,false,true,true': [0.0, 26, 0]}]
{'': [0.11120722798924111, -4.382459307730881e-17], 'true,false': [1.708035422500241e-17, nan], 'true,false,true': [-1.4802973661668754e-17, -1.0092936587501423e-17], 'true': [6.706246045376226e-15, 1.708035422500241e-17], 'true,false,true,false': [-1.0092936587501423e-17, nan]}
{'': [0.07938934015015162, 4.382459307730881e-17], 'true': [-3.193450497798203e-15, -4.270088556250602e-18]}
{'': [0.04957622019997617, 6.573688961596321e-17], 'true,false': [-2.135044278125301e-18, nan], 'true,false,true': [1.295260195396016e-17, 5.046468293750712e-18], 'true': [1.9559884299013994e-15, -2.135044278125301e-18], 'true,false,true,false': [5.046468293750712e-18, nan], 'true,false,true,false,true': [5.046468293750712e-18, nan]}
{'': [0.029967579155102845, -3.5059674461847047e-17], 'true,false': [-1.2810265668751807e-17, nan], 'true': [7.983626244495507e-16, -1.2810265668751807e-17]}
{'': [0.01900555351317545, 7.304098846218135e-18], 'true': [7.185263620045957e-16, 2.135044278125301e-18]}
{'': [0.012882565938082893, 2.1912296538654406e-17], 'true,false': [9.607699251563854e-18, nan], 'true,false,true': [5.551115123125783e-18, -5.046468293750712e-18], 'true': [7.384854276158345e-16, 9.607699251563854e-18], 'true,false,true,false': [-5.046468293750712e-18, nan], 'true,false,true,false,true': [-5.046468293750712e-18, nan]}
{'': [0.009258239778964167, 3.432926457722524e-17], 'true,false': [-2.135044278125301e-18, nan], 'true,false,true': [-2.135044278125301e-18, nan], 'true': [5.03966406683779e-16, -2.135044278125301e-18]}
{'': [0.006969521477341647, -5.843279076974508e-18], 'true,false': [-1.0675221390626506e-18, nan], 'true,false,true': [-1.0675221390626506e-18, nan], 'true': [-1.6965205769552953e-16, -1.0675221390626506e-18]}
{'': [0.005439872668258625, 2.337311630789803e-17], 'true,false': [-4.803849625781927e-18, nan], 'true,false,true': [9.251858538542971e-19, 6.30808536718839e-19], 'true': [-4.490789762528723e-17, -4.803849625781927e-18], 'true,false,true,true': [6.938893903907229e-19, 6.938893903907229e-19], 'true,false,true,false': [6.30808536718839e-19, nan]}
{'': [0.004368530417670789, -8.034508730839949e-18], 'true,false': [-1.6012832085939759e-18, nan], 'true,false,true': [-1.6012832085939759e-18, nan], 'true': [3.2433481618263e-17, -1.6012832085939759e-18]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true,false;genre(B, E), genre(F, E).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true,false;genre(B, E), genre(F, E).;true;true', '2;true;movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true,false;genre(B, E), genre(F, E).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true,false;genre(B, E), genre(F, E).;true;true', '8;true,false,true;movie(D, G), genre(G, E).;true;true', '8;true;movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D), genre(E, D) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048788;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then if ( female(B) )
%   | | | | then return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | | else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else if ( female(B) )
%   | | | | then return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | | else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360635;  // std dev = 3,48e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.11231637819360638;  // std dev = 2,28e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.11231637819360636;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.1015963294878364;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926094;  // std dev = 2,28e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.09269127618926101;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( genre(B, D), genre(E, D) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839682;  // std dev = 1,86e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.08518475138839679;  // std dev = 2,63e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( female(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.08518475138839679;  // std dev = 7,45e-09, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07324622576333704;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420271;  // std dev = 1,32e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( female(A) )
%   | | | then if ( movie(D, A), movie(D, B) )
%   | | | | then return -0.0684269778442027;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | else return -0.0684269778442027;  // std dev = 1,61e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else if ( movie(E, A), movie(E, B) )
%   | | | | then return -0.0684269778442027;  // std dev = 9,31e-10, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | | else return -0.0684269778442027;  // std dev = 1,32e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06419184008202625;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.171 seconds
Total inference time: 0.937 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb, Fold: 3, Type: transfer, Time: 00:02:41
{'Recall': 1.0, 'AUC PR': 1.0, 'Mapping results': {'Generating paths time': 2.5275137424468994, 'Finding best mapping': 0.7717461585998535, 'Generating mappings time': 0.5279819965362549, 'Knowledge compiling time': 0.01566171646118164, 'Possible mappings': 2592, 'Total time': 3.8429102897644043}, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.937, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.801, 'Precision': [1.0, 0.5], 'Learning time': 2.972, 'CLL': -0.094637}, 'Precision': [1.0, 0.5], 'Learning time': 6.143, 'CLL': -0.094637}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.14185106490048788;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.12544463852839113;  // std dev = 8,16e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360624;  // std dev = 8,69e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.10159632948783641;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.09269127618926104;  // std dev = 3,33e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.08518475138839679;  // std dev = 3,94e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109165;  // std dev = 5,77e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07324622576333704;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06842697784420267;  // std dev = 4,71e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06419184008202625;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.917 seconds
Total inference time: 0.723 seconds
AUC ROC: 1.0


Dataset: uwcse->imdb, Fold: 3, Type: scratch, Time: 00:02:44
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.723, 'Precision': [1.0, 0.5], 'Learning time': 2.917, 'CLL': -0.094637}


Best mapping found: ['yearsinprogram(A,B) -> genre(A,B)', 'inphase(A,B) -> movie(B,A)', 'professor(A) -> actor(A)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- director(A), actor(B).;true;false
0;true,false;movie(D, A).;true;false
0;true,false,true;movie(G, A), movie(G, E).;false;true
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true,false;movie(D, H), actor(H).;false;false
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,false;movie(D, A).;true;true
2;true,false,true;movie(F, A), movie(F, E).;false;true
2;true;movie(C, B), movie(C, A).;false;true
2;true,false,true,false;movie(D, G), actor(G).;true;false
2;true,false,true,false,true;movie(H, B).;false;false
2;true,false,false;movie(I, B).;false;false
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,false;movie(E, D).;false;true
3;true;movie(C, A), movie(C, B).;false;true
3;true,false,false,false;movie(J, B).;false;false
3;true,false,false,true;movie(G, H), actor(H).;true;false
3;true,false,false;movie(G, A).;true;true
3;true,false,false,true,true;movie(I, B).;false;false
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(B, A) :- director(A), actor(B).;true;false
5;true,false;movie(E, A).;true;true
5;true,false,true;movie(F, A), movie(F, D).;false;true
5;true;movie(C, B), movie(C, A).;false;true
5;true,false,false,false;movie(L, B).;false;false
5;true,false,true,false;movie(E, G), actor(G).;true;false
5;true,false,true,false,true;movie(I, H).;false;false
5;true,false,false;movie(J, B), movie(K, A).;false;true
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true,false;movie(E, B).;true;true
6;true,false,true;movie(F, A).;false;true
6;true;movie(C, A), movie(C, B).;false;true
6;true,false,true,false;movie(E, G), movie(H, G).;true;true
6;true,false,true,false,false;movie(E, I), director(I).;false;false
6;true,false,true,false,true;movie(H, D), movie(H, A).;false;false
6;true,false,false;movie(J, B).;false;false
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,false;movie(E, B).;true;true
7;true,false,true;movie(F, A).;false;true
7;true;movie(C, B), movie(C, A).;false;true
7;true,false,true,false;movie(E, G), movie(H, G).;true;true
7;true,false,true,false,false;movie(E, I), director(I).;false;false
7;true,false,true,false,true;movie(H, D), movie(H, A).;false;false
7;true,false,false;movie(J, B).;false;false
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,false;movie(E, B).;true;false
8;true,false,true;movie(F, A), movie(F, D).;true;true
8;true;movie(C, B), movie(C, A).;false;true
8;true,false,true,true;movie(E, G), movie(F, G).;false;false
8;true,false,true,false;movie(E, H), movie(I, H).;false;true
8;true,false,true,false,false;movie(E, J), director(J).;false;false
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,false;movie(E, B).;true;false
9;true,false,true;movie(F, D).;false;true
9;true;movie(C, B), movie(C, A).;false;true
9;true,false,true,false;genre(A, G), genre(D, G).;false;true
9;true,false,true,false,false;movie(E, H), movie(I, H).;true;false
9;true,false,true,false,false,true;movie(I, D).;false;true
9;true,false,true,false,false,true,false;movie(I, A).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(E, B), movie(E, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(E, B), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.092691276189261;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(E, B), movie(E, F) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B), movie(E, F) )
%   | | | then if ( movie(D, G), movie(E, G) )
%   | | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202622;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.564 seconds
Total inference time: 0.9 seconds
AUC ROC: 1.0


Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(E, B), movie(E, F)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [4.34e-08, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.23e-07, 0, 45], 'true,false,true,true': [0.0, 4, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 4, 0], 'false': [0.0, 41, 0], 'true,true': [0.0, 0, 45]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(E, B), movie(E, F)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 4, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.0, 41, 0], 'true,false,true': [0.0, 4, 0], 'true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 4, 0], 'false': [0.0, 41, 0], 'true,true': [2.98e-08, 0, 45]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(E, B), movie(E, F)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [1.67e-08, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 4, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.0, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [5.58e-08, 0, 45], 'true,false,true,true': [0.0, 4, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [1.05e-08, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 4, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B), movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,true': 'movie(D, G), movie(E, G)'}, {'true,false,true,true,false': [0.0, 3, 0], 'true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [5.27e-09, 41, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.36e-08, 0, 45], 'true,false,true,true': [0.0, 4, 0]}]
{'': [0.07496876301541104, 4.603363760640893e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [1.105288700071267e-15, 0.0]}
{'': [0.05351918877289897, -2.4370749321040022e-17], 'true': [-9.473903143468002e-16, 0.0]}
{'': [0.03342110014406096, -2.7078610356711136e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0]}
{'': [0.020202215093805483, -6.769652589177784e-18], 'true,false': [0.0, nan], 'true': [-4.144832625267251e-16, 0.0]}
{'': [0.012812322212040247, -1.0831444142684454e-17], 'true': [1.973729821555834e-17, 0.0]}
{'': [0.008684597667842037, 6.769652589177784e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-2.960594732333751e-17, 0.0]}
{'': [0.0062413099982688465, -2.7078610356711136e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [6.908054375445419e-17, 0.0]}
{'': [0.004698403272997808, 2.7078610356711136e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-8.388351741612294e-17, 0.0]}
{'': [0.003667212395044684, 6.769652589177784e-19], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0], 'true,false,true,true': [0.0, -5.782411586589357e-19]}
{'': [0.002944982331900951, -2.030895776753335e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [1.2335811384723961e-17, 0.0]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true,false;movie(D, G), movie(E, G).;true;true', '8;true;movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.092691276189261;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 3,73e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202622;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.606 seconds
Total inference time: 0.823 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb, Fold: 4, Type: transfer, Time: 00:02:54
{'Recall': 1.0, 'AUC PR': 1.0, 'Mapping results': {'Generating paths time': 2.589725971221924, 'Finding best mapping': 0.7424607276916504, 'Generating mappings time': 0.5295019149780273, 'Knowledge compiling time': 0.013976097106933594, 'Possible mappings': 2592, 'Total time': 3.875671625137329}, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.823, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.9, 'Precision': [1.0, 0.5], 'Learning time': 1.564, 'CLL': -0.094637}, 'Precision': [1.0, 0.5], 'Learning time': 3.17, 'CLL': -0.094637}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
Results
   AUC ROC   = 0.986647
   AUC PR    = 0.973988
   CLL	      = -0.122206
   Precision = 0.973988 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986823


Total learning time: 2.045 seconds
Total inference time: 0.776 seconds
AUC ROC: 0.986647


Dataset: uwcse->imdb, Fold: 4, Type: scratch, Time: 00:02:57
{'Recall': 1.0, 'AUC PR': 0.973988, 'F1': 0.986823, 'AUC ROC': 0.986647, 'Inference time': 0.776, 'Precision': [0.973988, 0.5], 'Learning time': 2.045, 'CLL': -0.122206}


Best mapping found: ['yearsinprogram(A,B) -> genre(A,B)', 'inphase(A,B) -> movie(B,A)', 'professor(A) -> actor(A)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- director(A), actor(B).;true;false
0;true,false;movie(D, A).;true;false
0;true,false,true;movie(G, A), movie(G, E).;false;true
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true,false;movie(D, H), actor(H).;false;false
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,false;movie(D, A).;true;true
2;true,false,true;movie(F, A), movie(F, E).;false;true
2;true;movie(C, B), movie(C, A).;false;true
2;true,false,true,false;movie(D, G), actor(G).;true;false
2;true,false,true,false,true;movie(H, B).;false;false
2;true,false,false;movie(I, B).;false;false
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,false;movie(E, D).;false;true
3;true;movie(C, A), movie(C, B).;false;true
3;true,false,false,false;movie(J, B).;false;false
3;true,false,false,true;movie(G, H), actor(H).;true;false
3;true,false,false;movie(G, A).;true;true
3;true,false,false,true,true;movie(I, B).;false;false
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(B, A) :- director(A), actor(B).;true;false
5;true,false;movie(E, A).;true;true
5;true,false,true;movie(F, A), movie(F, D).;false;true
5;true;movie(C, B), movie(C, A).;false;true
5;true,false,false,false;movie(L, B).;false;false
5;true,false,true,false;movie(E, G), actor(G).;true;false
5;true,false,true,false,true;movie(I, H).;false;false
5;true,false,false;movie(J, B), movie(K, A).;false;true
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true,false;movie(E, B).;true;true
6;true,false,true;movie(F, A).;false;true
6;true;movie(C, A), movie(C, B).;false;true
6;true,false,true,false;movie(E, G), movie(H, G).;true;true
6;true,false,true,false,false;movie(E, I), director(I).;false;false
6;true,false,true,false,true;movie(H, D), movie(H, A).;false;false
6;true,false,false;movie(J, B).;false;false
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,false;movie(E, B).;true;true
7;true,false,true;movie(F, A).;false;true
7;true;movie(C, B), movie(C, A).;false;true
7;true,false,true,false;movie(E, G), movie(H, G).;true;true
7;true,false,true,false,false;movie(E, I), director(I).;false;false
7;true,false,true,false,true;movie(H, D), movie(H, A).;false;false
7;true,false,false;movie(J, B).;false;false
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,false;movie(E, B).;true;false
8;true,false,true;movie(F, A), movie(F, D).;true;true
8;true;movie(C, B), movie(C, A).;false;true
8;true,false,true,true;movie(E, G), movie(F, G).;false;false
8;true,false,true,false;movie(E, H), movie(I, H).;false;true
8;true,false,true,false,false;movie(E, J), director(J).;false;false
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,false;movie(E, B).;true;false
9;true,false,true;movie(F, D).;false;true
9;true;movie(C, B), movie(C, A).;false;true
9;true,false,true,false;genre(A, G), genre(D, G).;false;true
9;true,false,true,false,false;movie(E, H), movie(I, H).;true;false
9;true,false,true,false,false,true;movie(I, D).;false;true
9;true,false,true,false,false,true,false;movie(I, A).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(E, B), movie(E, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(E, B), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(E, B), movie(E, F) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B), movie(E, F) )
%   | | | then if ( movie(D, G), movie(E, G) )
%   | | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094789
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.721 seconds
Total inference time: 1.009 seconds
AUC ROC: 1.0


Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(E, B), movie(E, F)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [4.59e-08, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.23e-07, 0, 45], 'true,false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 1, 0], 'false': [0.0, 44, 0], 'true,true': [0.0, 0, 45]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(E, B), movie(E, F)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [1.49e-08, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [7.45e-09, 44, 0], 'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 1, 0], 'false': [0.0, 44, 0], 'true,true': [2.98e-08, 0, 45]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(E, B), movie(E, F)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [2.24e-08, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.0, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [5.58e-08, 0, 45], 'true,false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [1.05e-08, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B), movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,true': 'movie(D, G), movie(E, G)'}, {'true,false,true,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [9.13e-09, 44, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.36e-08, 0, 45], 'true,false,true,true': [0.0, 1, 0]}]
{'': [0.021266540642723226, 4.794144879063176e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [1.105288700071267e-15, 0.0]}
{'': [0.015181896531630958, -2.7755575615628914e-17], 'true': [-9.473903143468002e-16, 0.0]}
{'': [0.009480631078200644, 5.046468293750712e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0]}
{'': [0.005730803218362994, 1.261617073437678e-18], 'true,false': [0.0, nan], 'true': [-4.144832625267251e-16, 0.0]}
{'': [0.003634497357172579, -1.5139404881252134e-17], 'true': [1.973729821555834e-17, 0.0]}
{'': [0.0024635773866361816, 1.1354553660939102e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-2.960594732333751e-17, 0.0]}
{'': [0.0017704850314087769, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [6.908054375445419e-17, 0.0]}
{'': [0.0013328055598378111, 2.523234146875356e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-8.388351741612294e-17, 0.0]}
{'': [0.0010402855577152684, 1.8924256101565167e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0], 'true,false,true,true': [0.0, nan]}
{'': [0.0008354090948599093, -2.523234146875356e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [1.2335811384723961e-17, 0.0]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.572 seconds
Total inference time: 0.803 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb, Fold: 5, Type: transfer, Time: 00:03:06
{'Recall': 1.0, 'AUC PR': 1.0, 'Mapping results': {'Generating paths time': 2.4517292976379395, 'Finding best mapping': 0.7566542625427246, 'Generating mappings time': 0.5274603366851807, 'Knowledge compiling time': 0.014634370803833008, 'Possible mappings': 2592, 'Total time': 3.7504849433898926}, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.803, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.009, 'Precision': [1.0, 0.5], 'Learning time': 1.721, 'CLL': -0.094789}, 'Precision': [1.0, 0.5], 'Learning time': 3.293, 'CLL': -0.094637}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1352095945470413;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14656735148626743;  // std dev = 0,086, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( female(A) )
%   | then return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.1288676370195173;  // std dev = 0,215, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
Results
   AUC ROC   = 0.992472
   AUC PR    = 0.990625
   CLL	      = -0.241338
   Precision = 0.864103 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.927098


Total learning time: 2.308 seconds
Total inference time: 0.81 seconds
AUC ROC: 0.992472


Dataset: uwcse->imdb, Fold: 5, Type: scratch, Time: 00:03:09
{'Recall': 1.0, 'AUC PR': 0.990625, 'F1': 0.927098, 'AUC ROC': 0.992472, 'Inference time': 0.81, 'Precision': [0.864103, 0.5], 'Learning time': 2.308, 'CLL': -0.241338}


Start learning from source dataset


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048793;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.12544463852839202;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360676;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.1015963294878365;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.0926912761892606;  // std dev = 1,41e-07, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839678;  // std dev = 9,88e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07877675473109143;  // std dev = 4,21e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07324622576333706;  // std dev = 8,43e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420308;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06419184008202611;  // std dev = 6,99e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */


Predicates from source: ['workedunder(person,person).', 'movie(movie,person).', 'actor(person).', 'director(person).'] 



Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.7793312011093614;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.727998561682503;  // std dev = 0,037, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.7194734122109544;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6513332194009414;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.56383635071952;  // std dev = 0,045, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.5103566290743161;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.4238778836283327;  // std dev = 0,045, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.38383924552449394;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.32788732957739325;  // std dev = 0,052, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.33291195187805817;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.28794680475712386;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.2600961352098729;  // std dev = 0,046, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.22588503280050448;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.21381078133251777;  // std dev = 0,042, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.18019684668026678;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,256, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.182393760220072;  // std dev = 0,047, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.1872997968122061;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.14436239516008753;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.15676591551543162;  // std dev = 0,042, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.1604408545609691;  // std dev = 1,29e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.11994274336053963;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
Results
   AUC ROC   = 0.591354
   AUC PR    = 0.942615
   CLL	      = -0.314766
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 3.222 seconds
Total inference time: 1.442 seconds
AUC ROC: 0.591354


Structure after Parameter Learning
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)'}, {'false': [0.269, 16, 187], 'true': [5.96e-08, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)', 'false': 'haswordauthor(A, E), haswordvenue(F, E)'}, {'false,true': [4.21e-08, 0, 12], 'false,false': [0.277, 16, 175], 'true': [0.037, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)'}, {'false': [0.269, 16, 187], 'true': [0.045, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)'}, {'false': [0.269, 16, 187], 'true': [0.045, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'false': 'haswordauthor(B, E), haswordvenue(F, E)'}, {'false,true': [0.0, 0, 12], 'false,false': [0.277, 16, 175], 'true': [0.052, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)'}, {'false': [0.269, 16, 187], 'true': [0.046, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)'}, {'false': [0.269, 16, 187], 'true': [0.042, 0, 22]}]
['sameauthor(A, B)', {}, {}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'false': 'haswordauthor(B, E), haswordvenue(F, E)'}, {'false,true': [0.0, 0, 12], 'false,false': [0.277, 16, 175], 'true': [0.047, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'false': 'haswordauthor(B, E), haswordvenue(F, E)'}, {'false,true': [1.29e-08, 0, 12], 'false,false': [0.277, 16, 175], 'true': [0.042, 0, 22]}]
{'': [1.6148698540002277e-16, 0.07260549879881219]}
{'': [6.0565144593496065e-05, 0.07247344471340147], 'false': [1.4802973661668753e-16, 0.07675228200980998]}
{'': [9.321068307575267e-05, 0.07234248189380078]}
{'': [9.172710758806072e-05, 0.07234050822550815]}
{'': [0.00012490922087761045, 0.07232765521363653], 'false': [-5.551115123125783e-17, 0.07675228200981388]}
{'': [9.511998373212815e-05, 0.07230400287148481]}
{'': [8.118417284979691e-05, 0.07231984336685486]}
{}
{'': [0.0001005068713798069, 0.07231774147546072], 'false': [0.0, 0.07675228200981313]}
{'': [7.891274680234388e-05, 0.07230642172135335], 'false': [1.3877787807814457e-17, 0.07675228200981339]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '1;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '1;false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '2;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '3;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '4;false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '6;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '8;false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '9;false;haswordauthor(B, E), haswordvenue(F, E).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.7793312011093614;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.727998561682503;  // std dev = 0,037, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.7194734122109544;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6513332194009414;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.56383635071952;  // std dev = 0,045, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.5103566290743161;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.4238778836283327;  // std dev = 0,045, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.42849871894668085;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.38103341473357183;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.3224760165015653;  // std dev = 0,029, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.33291195187805817;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.2886023233358396;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.25638592297760193;  // std dev = 0,026, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.26348057794650354;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.22398092238445308;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.210980526036149;  // std dev = 0,024, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.21495039356242082;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.1784163422588734;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.1773594269223881;  // std dev = 0,018, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.14755939484204622;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.15294551668570888;  // std dev = 0,016, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.16111213274334527;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.12037098563196115;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.13416597956026013;  // std dev = 0,014, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.14050661238621776;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.10150913907582505;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
Results
   AUC ROC   = 0.591354
   AUC PR    = 0.942615
   CLL	      = -0.309779
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 2.606 seconds
Total inference time: 1.367 seconds
AUC ROC: 0.591354


Refined model AUC ROC: 0.591354


Dataset: imdb->cora, Fold: 1, Type: transfer, Time: 00:03:28
{'Recall': 1.0, 'AUC PR': 0.942615, 'Mapping results': {'Generating paths time': 2.8998594284057617, 'Finding best mapping': 0.0018267631530761719, 'Generating mappings time': 0.053124427795410156, 'Knowledge compiling time': 0.06620121002197266, 'Possible mappings': 26, 'Total time': 3.0210180282592773}, 'F1': 0.954114, 'AUC ROC': 0.591354, 'Inference time': 1.367, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.942615, 'F1': 0.954114, 'AUC ROC': 0.591354, 'Inference time': 1.442, 'Precision': [0.912254, 0.5], 'Learning time': 3.222, 'CLL': -0.314766}, 'Precision': [0.912254, 0.5], 'Learning time': 5.827999999999999, 'CLL': -0.309779}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.7743793015916559;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,256, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.7194734122109542;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.7194734122109544;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6522963629326777;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.5084923766825963;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.4175135841583099;  // std dev = 3,65e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.38456008851366885;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.32465063930363586;  // std dev = 0,017, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.29101212581935665;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.2578615199736998;  // std dev = 0,015, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.2261441102944278;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.21165766312977172;  // std dev = 0,013, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.18044559808637725;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.1837315022774484;  // std dev = 0,034, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.18068422231018855;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.14463703511579012;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.15776669578379615;  // std dev = 0,030, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.1554600944439141;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.1201511658717681;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
Results
   AUC ROC   = 0.591354
   AUC PR    = 0.942615
   CLL	      = -0.316343
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 3.602 seconds
Total inference time: 1.393 seconds
AUC ROC: 0.591354


Dataset: imdb->cora, Fold: 1, Type: scratch, Time: 00:03:33
{'Recall': 1.0, 'AUC PR': 0.942615, 'F1': 0.954114, 'AUC ROC': 0.591354, 'Inference time': 1.393, 'Precision': [0.912254, 0.5], 'Learning time': 3.602, 'CLL': -0.316343}


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6249475655895573;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5553664367462839;  // std dev = 9,42e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4893127157293235;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583102;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3686658221249624;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2780496975590654;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21383763039487122;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1682663346557149;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1351817638661356;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.11050708250003509;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.13400703000801098;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.09163300171566717;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
Results
   AUC ROC   = 0.573001
   AUC PR    = 0.935755
   CLL	      = -0.25356
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 5.214 seconds
Total inference time: 1.895 seconds
AUC ROC: 0.573001


Structure after Parameter Learning
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [0.0, 12, 0], 'true,false,true': [0.0, 0, 12], 'true,true': [1.46e-07, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [5.27e-09, 12, 0], 'true,false,true': [4.21e-08, 0, 12], 'true,true': [0.0, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'false': [9.13e-09, 12, 0], 'true,false,true': [0.0, 0, 12], 'true,true': [9.42e-08, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [0.0, 12, 0], 'true,false,true': [2.11e-08, 0, 12], 'true,true': [0.0, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [5.27e-09, 12, 0], 'true,false,true': [0.0, 0, 12], 'true,true': [2.98e-08, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [5.27e-09, 12, 0], 'true,false,true': [2.11e-08, 0, 12], 'true,true': [0.0, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'false': [3.73e-09, 12, 0], 'true,false,true': [0.0, 0, 12], 'true,true': [0.0, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [3.73e-09, 12, 0], 'true,false,true': [1.05e-08, 0, 12], 'true,true': [0.0, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [2.63e-09, 12, 0], 'true,false,true': [1.05e-08, 0, 12], 'true,true': [0.0, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [5.89e-09, 12, 0], 'true,false,true': [0.0, 0, 12], 'true,true': [2.98e-08, 0, 50], 'true,false,false': [0.322, 8, 60]}]
{'': [0.05775147928994478, -1.1564823173178714e-17], 'true,false': [-1.4802973661668753e-16, 0.10380622837370185], 'true': [4.263256414560601e-16, 0.0899999999999987]}
{'': [0.05652766809753122, 2.3129646346357427e-18], 'true,false': [1.4802973661668753e-16, 0.10380622837370253], 'true': [-5.684341886080802e-16, 0.08937452391678224]}
{'': [0.055387092507768736, 6.938893903907228e-18], 'true,false': [-1.8503717077085943e-16, 0.1038062283737019], 'true': [1.7763568394002506e-16, 0.08879158861031984]}
{'': [0.05489389779165834, 0.0], 'true,false': [3.700743415417188e-17, 0.10380622837370153], 'true': [-3.552713678800501e-16, 0.08853952235924378]}
{'': [0.0547526880238895, 2.3129646346357427e-18], 'true,false': [-5.551115123125783e-17, 0.10380622837370218], 'true': [1.7763568394002505e-17, 0.08846735164124145]}
{'': [0.0547248701960579, 2.3129646346357427e-18], 'true,false': [3.700743415417188e-17, 0.10380622837370251], 'true': [-2.6645352591003756e-17, 0.0884531342635096]}
{'': [0.054728109414152716, 1.1564823173178713e-18], 'true,false': [-2.7755575615628914e-17, 0.10380622837370236], 'true': [-8.881784197001253e-18, 0.0884547897913058]}
{'': [0.05473691816509228, 1.1564823173178713e-18], 'true,false': [9.25185853854297e-18, 0.1038062283737025], 'true': [-5.773159728050814e-17, 0.08845929184445746]}
{'': [0.054743678807078595, 5.782411586589357e-19], 'true,false': [9.25185853854297e-18, 0.10380622837370244], 'true': [-3.552713678800501e-17, 0.08846274713224686]}
{'': [0.05474657588790153, 2.8912057932946786e-18], 'true,false': [0.0, 0.10380622837370251], 'true': [1.7763568394002505e-17, 0.0884642277975465]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '0;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '0;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '1;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '2;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '3;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '4;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '5;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '6;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '7;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '8;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '9;true;haswordauthor(A, D), haswordvenue(E, D).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6249475655895573;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5553664367462839;  // std dev = 9,42e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4893127157293235;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583102;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3686658221249624;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2780496975590654;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21383763039487122;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1682663346557149;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1351817638661356;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.11050708250003509;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.13400703000801098;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.09163300171566717;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
Results
   AUC ROC   = 0.573001
   AUC PR    = 0.935755
   CLL	      = -0.25356
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 3.234 seconds
Total inference time: 1.896 seconds
AUC ROC: 0.573001


Refined model AUC ROC: 0.573001


Dataset: imdb->cora, Fold: 2, Type: transfer, Time: 00:03:49
{'Recall': 1.0, 'AUC PR': 0.935755, 'Mapping results': {'Generating paths time': 2.863649368286133, 'Finding best mapping': 0.002304553985595703, 'Generating mappings time': 0.053296566009521484, 'Knowledge compiling time': 0.08168649673461914, 'Possible mappings': 26, 'Total time': 3.0009443759918213}, 'F1': 0.971831, 'AUC ROC': 0.573001, 'Inference time': 1.896, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.935755, 'F1': 0.971831, 'AUC ROC': 0.573001, 'Inference time': 1.895, 'Precision': [0.945205, 0.5], 'Learning time': 5.214, 'CLL': -0.25356}, 'Precision': [0.945205, 0.5], 'Learning time': 8.448, 'CLL': -0.25356}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6249475655895573;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5553664367462839;  // std dev = 9,42e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.499220773881868;  // std dev = 0,298, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.4208050190658723;  // std dev = 0,041, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583102;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.36619101959563904;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.32295649078154026;  // std dev = 0,037, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.27627363646021824;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.25671064343184136;  // std dev = 0,033, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21258517876828603;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.21084828774453157;  // std dev = 0,028, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253567;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.167367880534948;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.17789878843265086;  // std dev = 0,025, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.13451997766132667;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.15335407213094096;  // std dev = 0,022, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.11000655346283453;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.134484523743318;  // std dev = 0,020, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.0912453807999745;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
Results
   AUC ROC   = 0.569243
   AUC PR    = 0.934792
   CLL	      = -0.25356
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 6.041 seconds
Total inference time: 1.849 seconds
AUC ROC: 0.569243


Dataset: imdb->cora, Fold: 2, Type: scratch, Time: 00:03:57
{'Recall': 1.0, 'AUC PR': 0.934792, 'F1': 0.971831, 'AUC ROC': 0.569243, 'Inference time': 1.849, 'Precision': [0.945205, 0.5], 'Learning time': 6.041, 'CLL': -0.25356}


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,159, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.7405018762759829;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.8428817595269913;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,157, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.6249475655895571;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.7072772824591879;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.4893127157293236;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.5621373548453931;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.5465083744889508;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.3686658221249617;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.4196693904753851;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.42255431364470397;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.41024333007818775;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.27804969755906545;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.3221737233794529;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.31468597579970253;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.21383763039487166;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.25616950302699215;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.25931407969424386;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.24858746283074093;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,156, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.16826633465571472;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.21046191879784515;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.20360873526702297;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
Results
   AUC ROC   = 0.310525
   AUC PR    = 0.866163
   CLL	      = -0.367114
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 4.322 seconds
Total inference time: 1.486 seconds
AUC ROC: 0.310525


Structure after Parameter Learning
['sameauthor(A, B)', {}, {}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'true': 'haswordauthor(B, C)'}, {'true,false': [0.0, 0, 7], 'false': [0.123, 2, 129], 'true,true': [0.322, 2, 15]}]
['sameauthor(A, B)', {}, {}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'true': 'haswordauthor(B, C)'}, {'true,false': [2.11e-08, 0, 7], 'false': [0.123, 2, 129], 'true,true': [0.322, 2, 15]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)', 'true': 'haswordauthor(A, C)'}, {'true,false': [2.11e-08, 0, 7], 'false': [0.123, 2, 129], 'true,true': [0.322, 2, 15]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true': 'haswordauthor(B, C)'}, {'true,false': [0.0, 0, 7], 'false,false': [0.126, 2, 122], 'true,true': [0.322, 2, 15], 'false,true': [2.11e-08, 0, 7]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'true': 'haswordauthor(B, C)'}, {'true,false': [0.0, 0, 7], 'false': [0.123, 2, 129], 'true,true': [0.322, 2, 15]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true': 'haswordauthor(B, C)'}, {'true,false': [1.29e-08, 0, 7], 'false,false': [0.126, 2, 122], 'true,true': [0.322, 2, 15], 'false,true': [0.0, 0, 7]}]
['sameauthor(A, B)', {}, {}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'true': 'haswordauthor(B, C)'}, {'true,false': [0.0, 0, 7], 'false': [0.123, 2, 129], 'true,true': [0.322, 2, 15]}]
{}
{'': [0.07638888888888928, 0.015034088922561424], 'true': [0.10380622837370206, -2.5376526277146434e-16]}
{}
{'': [0.07537538597626736, 0.015034088922559797], 'true': [0.10380622837370226, 6.344131569286608e-17]}
{'': [0.07462508527064986, 0.015025360296099102], 'true': [0.10380622837370232, 6.344131569286608e-17]}
{'': [0.07406684633788764, 0.015028596696171402], 'false': [6.344131569286608e-17, 0.01586888657648258], 'true': [0.10380622837370244, -6.344131569286608e-17]}
{'': [0.07393164202320801, 0.015025966955919956], 'true': [0.10380622837370246, 0.0]}
{'': [0.07389963139217894, 0.015026750533004715], 'false': [-3.172065784643304e-17, 0.015868886576482968], 'true': [0.10380622837370239, 2.3790493384824782e-17]}
{}
{'': [0.07389725136750165, 0.015025575283915718], 'true': [0.10380622837370244, 0.0]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['1;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '1;true;haswordauthor(B, C).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '3;true;haswordauthor(B, C).;true;true', '4;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '4;true;haswordauthor(A, C).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '5;false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '5;true;haswordauthor(B, C).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '6;true;haswordauthor(B, C).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '7;false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '7;true;haswordauthor(B, C).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '9;true;haswordauthor(B, C).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.7405018762759829;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.842019902841446;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.6249475655895571;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.7072766967179156;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.4893127157293236;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.5583761575509713;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5462205918713086;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.3686658221249617;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.4197495030960376;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.41052467473154514;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.27804969755906545;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.32222806251010144;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.31468521317793513;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.21383763039487166;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.2563193498928253;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.2562065624337894;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.24875676623203333;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.16826633465571472;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.2105676886367318;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.20360514258351212;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.13518176386613595;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.17769034688541407;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.1786396824031582;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1703445246950426;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,156, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.11050708250003544;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.15319420313448098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.14629921249807507;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
Results
   AUC ROC   = 0.310525
   AUC PR    = 0.866163
   CLL	      = -0.3453
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 3.117 seconds
Total inference time: 1.577 seconds
AUC ROC: 0.310525


Refined model AUC ROC: 0.310525


Dataset: imdb->cora, Fold: 3, Type: transfer, Time: 00:04:11
{'Recall': 1.0, 'AUC PR': 0.866163, 'Mapping results': {'Generating paths time': 2.9287095069885254, 'Finding best mapping': 0.0018155574798583984, 'Generating mappings time': 0.052852630615234375, 'Knowledge compiling time': 0.10798311233520508, 'Possible mappings': 26, 'Total time': 3.091367244720459}, 'F1': 0.949713, 'AUC ROC': 0.310525, 'Inference time': 1.577, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.866163, 'F1': 0.949713, 'AUC ROC': 0.310525, 'Inference time': 1.486, 'Precision': [0.904241, 0.5], 'Learning time': 4.322, 'CLL': -0.367114}, 'Precision': [0.904241, 0.5], 'Learning time': 7.439, 'CLL': -0.3453}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.7405018762759829;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.8428817595269913;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.6249475655895571;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.7072772824591879;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.4893127157293236;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.5468701792728726;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.3686658221249617;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.4110166992801579;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.27804969755906545;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.3300307640035068;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3139017317454428;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.21383763039487166;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.24921393193127336;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.16826633465571472;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.20364452612163494;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.13518176386613595;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.17081608872633067;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.11050708250003544;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.14631813274513317;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,156, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
Results
   AUC ROC   = 0.308061
   AUC PR    = 0.859435
   CLL	      = -0.345004
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 6.26 seconds
Total inference time: 1.456 seconds
AUC ROC: 0.308061


Dataset: imdb->cora, Fold: 3, Type: scratch, Time: 00:04:19
{'Recall': 1.0, 'AUC PR': 0.859435, 'F1': 0.949713, 'AUC ROC': 0.308061, 'Inference time': 1.456, 'Precision': [0.904241, 0.5], 'Learning time': 6.26, 'CLL': -0.345004}


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.7847544396866669;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.6673462009593596;  // std dev = 0,246, 123,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=115 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5595443199101157;  // std dev = 0,039, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5127135911039297;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.42063955698081634;  // std dev = 0,039, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.38549496418446655;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.3228446559864074;  // std dev = 0,035, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.2923981807319483;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.25663462660433184;  // std dev = 0,031, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.23071206457095397;  // std dev = 0,246, 123,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=115 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.21079478508603372;  // std dev = 0,027, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.21384100569704875;  // std dev = 1,49e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.18135884965309884;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.1778596711433659;  // std dev = 0,024, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.18008565397034948;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.1484795944882402;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.15332447876289576;  // std dev = 0,021, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.15500767146873587;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.12390514773097062;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.13446147517807674;  // std dev = 0,019, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.13577188307272348;  // std dev = 1,05e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.10501465173884653;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
Results
   AUC ROC   = 0.614653
   AUC PR    = 0.933172
   CLL	      = -0.248058
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 5.85 seconds
Total inference time: 1.724 seconds
AUC ROC: 0.614653


Structure after Parameter Learning
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [0.0, 8, 0], 'true,false,true': [0.0, 0, 14], 'true,true': [2.31e-07, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'true,false': [0.246, 8, 115], 'false': [0.0, 8, 0], 'true,true': [0.0, 0, 43]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'false': [0.0, 8, 0], 'true,false,true': [0.0, 0, 14], 'true,true': [0.039, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'false': [3.73e-09, 8, 0], 'true,false,true': [4.21e-08, 0, 14], 'true,true': [0.039, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'false': [0.0, 8, 0], 'true,false,true': [0.0, 0, 14], 'true,true': [0.035, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'true,false': [0.246, 8, 115], 'false': [3.73e-09, 8, 0], 'true,true': [0.031, 0, 43]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'false': [0.0, 8, 0], 'true,false,true': [1.49e-08, 0, 14], 'true,true': [0.027, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'false': [2.63e-09, 8, 0], 'true,false,true': [0.0, 0, 14], 'true,true': [0.024, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'false': [0.0, 8, 0], 'true,false,true': [0.0, 0, 14], 'true,true': [0.021, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'false': [0.0, 8, 0], 'true,false,true': [1.05e-08, 0, 14], 'true,true': [0.019, 0, 43], 'true,false,false': [0.261, 8, 101]}]
{'': [0.045870227899556054, -6.938893903907228e-18], 'true,false': [-2.5376526277146434e-16, 0.06800774345594017], 'true': [1.2393187251629655e-15, 0.06081036420120637]}
{'': [0.045435824886256033, 0.0], 'true': [-9.914549801303723e-16, 0.06061602878162254]}
{'': [0.04513920886668934, -1.734723475976807e-18], 'true,false': [-2.5376526277146434e-16, 0.0680077434559386], 'true': [3.615618029936237e-05, 0.06045052649032511]}
{'': [0.04493196312173105, 1.734723475976807e-18], 'true,false': [1.2688263138573217e-16, 0.06800774345593819], 'true': [3.5532032978538125e-05, 0.060370431591246]}
{'': [0.04486528530819553, 0.0], 'true,false': [-3.172065784643304e-17, 0.06800774345593785], 'true': [2.8694668592633104e-05, 0.06034788520920356]}
{'': [0.044847278020479726, 1.734723475976807e-18], 'true': [2.1903211116598484e-05, 0.06034387059967873]}
{'': [0.04486601887671332, 0.0], 'true,false': [1.586032892321652e-17, 0.06800774345593803], 'true': [1.6683493467307607e-05, 0.06037344732352761]}
{'': [0.04486127739568944, 8.673617379884035e-19], 'true,false': [-3.96508223080413e-18, 0.06800774345593796], 'true': [1.2904666293995059e-05, 0.060367783959655974]}
{'': [0.04485916916484689, 0.0], 'true,false': [-7.93016446160826e-18, 0.06800774345593791], 'true': [1.0179774619060451e-05, 0.06036459901709306]}
{'': [0.044857721079083014, 0.0], 'true,false': [7.93016446160826e-18, 0.06800774345593807], 'true': [8.187333958823713e-06, 0.06036244455165661]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '0;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '0;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '2;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '3;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '4;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '6;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '7;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '8;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '9;true;haswordauthor(B, D), haswordvenue(E, D).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.7847544396866669;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.6606509628169522;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.555366436746284;  // std dev = 9,42e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5143368162338069;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.3867546553091642;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.2932830468274971;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.22818664181664933;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.2097577156325356;  // std dev = 3,65e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.182395484606894;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.14924297758418867;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.15274385809367086;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.12448430009556492;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.1340070300080109;  // std dev = 3,65e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.10546563923252868;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
Results
   AUC ROC   = 0.624499
   AUC PR    = 0.936044
   CLL	      = -0.248029
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 4.126 seconds
Total inference time: 1.774 seconds
AUC ROC: 0.624499


Refined model AUC ROC: 0.624499


Dataset: imdb->cora, Fold: 4, Type: transfer, Time: 00:04:37
{'Recall': 1.0, 'AUC PR': 0.936044, 'Mapping results': {'Generating paths time': 2.928600549697876, 'Finding best mapping': 0.0018551349639892578, 'Generating mappings time': 0.05231428146362305, 'Knowledge compiling time': 0.10454607009887695, 'Possible mappings': 26, 'Total time': 3.08732271194458}, 'F1': 0.970326, 'AUC ROC': 0.624499, 'Inference time': 1.774, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.933172, 'F1': 0.970326, 'AUC ROC': 0.614653, 'Inference time': 1.724, 'Precision': [0.942363, 0.5], 'Learning time': 5.85, 'CLL': -0.248058}, 'Precision': [0.942363, 0.5], 'Learning time': 9.975999999999999, 'CLL': -0.248029}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.7847544396866669;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.6606509628169522;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.555366436746284;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5143368162338069;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.3867546553091642;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.2932830468274971;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.22818664181664933;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.20975771563253548;  // std dev = 5,77e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.18550988488623524;  // std dev = 0,246, 123,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=115 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.17825603228807432;  // std dev = 0,011, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.1487044338777372;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.15362332924627742;  // std dev = 0,010, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.12407577113676425;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.1346935322070354;  // std dev = 0,009, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.13400703000801095;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.10514754710964339;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
Results
   AUC ROC   = 0.614653
   AUC PR    = 0.933172
   CLL	      = -0.248078
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 6.456 seconds
Total inference time: 1.736 seconds
AUC ROC: 0.614653


Dataset: imdb->cora, Fold: 4, Type: scratch, Time: 00:04:45
{'Recall': 1.0, 'AUC PR': 0.933172, 'F1': 0.970326, 'AUC ROC': 0.614653, 'Inference time': 1.736, 'Precision': [0.942363, 0.5], 'Learning time': 6.456, 'CLL': -0.248078}


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.7194734122109543;  // std dev = 8,43e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.5553664367462837;  // std dev = 1,46e-07, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( author(F, A), venue(F, E) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(G, B), venue(G, E) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | then if ( author(J, B), venue(J, I) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(K, A), venue(K, I) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else return 0.5553664367462838;  // std dev = 8,43e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.33561950334222496;  // std dev = 0,392, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then if ( author(J, A), venue(J, I) )
%   | | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.3327955695209806;  // std dev = 0,398, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.4175135841583103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.3207118471601498;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.3388085385399061;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.2356346875847745;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.3394414362766045;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.23633904255546376;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.26748568628104785;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.17746873718480147;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.2679152101720519;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.17798428457073107;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.25517224256948967;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.21841917799816435;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.13504305403656594;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.21872003884331614;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.13541909146350936;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.2097577156325356;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.1770964977452773;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.18342368326354153;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.10396257386587603;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.18364255996957402;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.10423972664270063;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.1770964977452774;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.15274385809367072;  // std dev = 3,65e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else return 0.12369959794482444;  // std dev = 0,276, 122,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=110 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.13400703000801095;  // std dev = 4,47e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.1417969074540495;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.1374135635596383;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.05455830596243268;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.1374135635596383;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.14194808691274574;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.05475592338416149;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.13741356355963846;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
Results
   AUC ROC   = 0.621875
   AUC PR    = 0.934613
   CLL	      = -0.26297
   Precision = 0.946746 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972644


Total learning time: 14.539 seconds
Total inference time: 4.167 seconds
AUC ROC: 0.621875


Structure after Parameter Learning
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true,false,true': 'author(G, B), venue(G, F)', 'true,false,false,true,false': 'author(L, B), venue(L, J)', 'true': 'haswordvenue(D, C)', 'true,false,true,false': 'author(H, A), venue(H, F)', 'true,false,false,true': 'author(K, A), venue(K, J)', 'true,false,false': 'haswordauthor(B, I), haswordvenue(J, I)'}, {'true,false,false,true,false,true': [0.0, 0, 4], 'true,false,false,true,false,false': [0.427, 6, 19], 'true,true': [0.0, 0, 62], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,true,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 54], 'true,false,true,false,false': [0.427, 6, 19], 'false': [0.0, 6, 0], 'true,false,false,true,true': [0.0, 0, 5]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true,false,true': 'author(G, A), venue(G, F)', 'true,false,false,true,false': 'author(L, A), venue(L, J)', 'true': 'haswordvenue(D, C)', 'true,false,true,false': 'author(H, B), venue(H, F)', 'true,false,false,true': 'author(K, B), venue(K, J)', 'true,false,false': 'haswordauthor(A, I), haswordvenue(J, I)'}, {'true,false,false,true,false,true': [0.0, 0, 4], 'true,false,false,true,false,false': [0.427, 6, 19], 'true,true': [8.43e-08, 0, 62], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,true,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 54], 'true,false,true,false,false': [0.427, 6, 19], 'false': [0.0, 6, 0], 'true,false,false,true,true': [0.0, 0, 5]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, H), haswordvenue(I, H)', 'true,false,true': 'author(J, B), venue(J, I)', 'true,true': 'haswordauthor(A, D)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)', 'true,true,false': 'author(F, A), venue(F, E)', 'true,true,false,false': 'author(G, B), venue(G, E)', 'true,false,true,false': 'author(K, A), venue(K, I)'}, {'false': [0.0, 6, 0], 'true,true,false,false,true': [0.0, 0, 4], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,true,true': [0.0, 0, 5], 'true,false,true,false,false': [0.427, 6, 19], 'true,true,false,false,false': [0.427, 6, 19], 'true,true,true': [1.46e-07, 0, 62], 'true,false,false': [8.43e-08, 0, 54], 'true,true,false,true': [0.0, 0, 5]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true,false,true': 'author(G, A), venue(G, F)', 'true': 'haswordvenue(D, C)', 'true,false,false,true': 'author(J, A), venue(J, I)', 'true,false,false': 'haswordauthor(B, H), haswordvenue(I, H)'}, {'true,false,false,true,false': [0.398, 6, 23], 'true,false,true,false': [0.392, 6, 24], 'true,true': [0.0, 0, 62], 'true,false,true,true': [0.0, 0, 4], 'true,false,false,false': [0.0, 0, 54], 'false': [0.0, 6, 0], 'true,false,false,true,true': [1.49e-08, 0, 5]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true,false,true': 'author(G, B), venue(G, F)', 'true,false,false,true,false': 'author(L, A), venue(L, J)', 'true': 'haswordvenue(D, C)', 'true,false,true,false': 'author(H, A), venue(H, F)', 'true,false,false,true': 'author(K, B), venue(K, J)', 'true,false,false': 'haswordauthor(B, I), haswordvenue(J, I)'}, {'true,false,false,true,false,true': [0.0, 0, 5], 'true,false,false,true,false,false': [0.427, 6, 19], 'true,true': [0.0, 0, 62], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,true,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 54], 'true,false,true,false,false': [0.427, 6, 19], 'false': [2.63e-09, 6, 0], 'true,false,false,true,true': [0.0, 0, 4]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true,false,true': 'author(G, B), venue(G, F)', 'true,false,false,true,false': 'author(L, A), venue(L, J)', 'true': 'haswordvenue(D, C)', 'true,false,true,false': 'author(H, A), venue(H, F)', 'true,false,false,true': 'author(K, B), venue(K, J)', 'true,false,false': 'haswordauthor(B, I), haswordvenue(J, I)'}, {'true,false,false,true,false,true': [0.0, 0, 5], 'true,false,false,true,false,false': [0.427, 6, 19], 'true,true': [0.0, 0, 62], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,true,true': [7.45e-09, 0, 5], 'true,false,false,false': [0.0, 0, 54], 'true,false,true,false,false': [0.427, 6, 19], 'false': [2.63e-09, 6, 0], 'true,false,false,true,true': [0.0, 0, 4]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true,false,true': 'author(G, B), venue(G, F)', 'true,false,false,true,false': 'author(L, A), venue(L, J)', 'true': 'haswordvenue(D, C)', 'true,false,true,false': 'author(H, A), venue(H, F)', 'true,false,false,true': 'author(K, B), venue(K, J)', 'true,false,false': 'haswordauthor(B, I), haswordvenue(J, I)'}, {'true,false,false,true,false,true': [0.0, 0, 5], 'true,false,false,true,false,false': [0.427, 6, 19], 'true,true': [0.0, 0, 62], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,true,true': [5.27e-09, 0, 5], 'true,false,false,false': [0.0, 0, 54], 'true,false,true,false,false': [0.427, 6, 19], 'false': [0.0, 6, 0], 'true,false,false,true,true': [0.0, 0, 4]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true,false,true': 'author(G, B), venue(G, F)', 'true,false,false,true,false': 'author(L, B), venue(L, J)', 'true': 'haswordvenue(D, C)', 'true,false,true,false': 'author(H, A), venue(H, F)', 'true,false,false,true': 'author(K, A), venue(K, J)', 'true,false,false': 'haswordauthor(B, I), haswordvenue(J, I)'}, {'true,false,false,true,false,true': [0.0, 0, 4], 'true,false,false,true,false,false': [0.427, 6, 19], 'true,true': [0.0, 0, 62], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,true,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 54], 'true,false,true,false,false': [0.427, 6, 19], 'false': [0.0, 6, 0], 'true,false,false,true,true': [0.0, 0, 5]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true': 'haswordvenue(D, C)'}, {'true,false': [0.276, 12, 110], 'false': [1.86e-09, 6, 0], 'true,true': [3.65e-08, 0, 62]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true,false,true': 'author(G, B), venue(G, F)', 'true,false,false,true,false': 'author(L, B), venue(L, J)', 'true': 'haswordvenue(D, C)', 'true,false,true,false': 'author(H, A), venue(H, F)', 'true,false,false,true': 'author(K, A), venue(K, J)', 'true,false,false': 'haswordauthor(B, I), haswordvenue(J, I)'}, {'true,false,false,true,false,true': [0.0, 0, 4], 'true,false,false,true,false,false': [0.427, 6, 19], 'true,true': [4.47e-08, 0, 62], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,true,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 54], 'true,false,true,false,false': [0.427, 6, 19], 'false': [0.0, 6, 0], 'true,false,false,true,true': [0.0, 0, 5]}]
{'': [0.060964083175810056, -6.938893903907228e-18], 'true,false': [0.14532871972318476, 0.0635330578512397], 'true,false,true': [0.0, 0.1640903686087999], 'true,false,false,true,false': [0.0, 0.18239999999999973], 'true': [-6.87622002348484e-16, 0.08868583714055676], 'true,false,true,false': [0.0, 0.18239999999999973], 'true,false,false,true': [0.0, 0.1640903686087999], 'true,false,false': [0.14532871972318476, 0.0]}
{'': [0.05702809044246478, -2.3129646346357427e-18], 'true,false': [0.14145757136736722, 0.059487947766625755], 'true,false,true': [0.0, 0.1617254340074918], 'true,false,false,true,false': [0.0, 0.18239999999999984], 'true': [1.1460366705808067e-16, 0.08387525127726578], 'true,false,true,false': [0.0, 0.18239999999999984], 'true,false,false,true': [0.0, 0.1617254340074918], 'true,false,false': [0.14145757136736734, -3.289549702593056e-16]}
{'': [0.053272870314488914, 0.0], 'true,false': [0.1377642174388833, 1.3158198810372225e-16], 'true,false,true': [-4.4408920985006264e-17, 0.15946911632149502], 'true,true': [3.43811001174242e-16, 0.13776421743888317], 'true': [0.051108409414953315, 0.05562862183825561], 'true,true,false,false': [0.0, 0.18239999999999995], 'true,true,false': [-4.4408920985006264e-17, 0.159469116321495], 'true,false,true,false': [0.0, 0.18239999999999995]}
{'': [0.051476419756637526, 0.0], 'true,false': [0.13599736290065606, 0.05378236836158465], 'true,false,true': [0.0, 0.15334132809454235], 'true': [-3.1516008440972187e-16, 0.07708997743956934], 'true,false,false,true': [4.4408920985006264e-17, 0.15838972203099944], 'true,false,false': [0.13599736290065617, -3.618504672852362e-16]}
{'': [0.05104292855666157, 1.1564823173178713e-18], 'true,false': [0.13590049096283163, 0.053322053790350085], 'true,false,true': [0.0, 0.15810203603821815], 'true,false,false,true,false': [-2.2204460492503132e-17, 0.18239999999999995], 'true': [-2.1488187573390127e-16, 0.07660761118911832], 'true,false,true,false': [0.0, 0.18240000000000012], 'true,false,false,true': [0.0, 0.15298871807734166], 'true,false,false': [0.1358130385630448, -8.22387425648264e-17]}
{'': [0.050785209589074794, 1.1564823173178713e-18], 'true,false': [0.13551876927629927, 0.053062383954956216], 'true,false,true': [1.1102230246251566e-17, 0.15795931447670236], 'true,false,false,true,false': [0.0, 0.18239999999999998], 'true': [-2.865091676452017e-17, 0.07627407068909359], 'true,false,true,false': [0.0, 0.18239999999999987], 'true,false,false,true': [0.0, 0.15282749734166926], 'true,false,false': [0.13546431869370223, -3.289549702593056e-17]}
{'': [0.05068541474380924, -1.1564823173178713e-18], 'true,false': [0.13535352572681983, 0.05296281661368545], 'true,false,true': [5.551115123125783e-18, 0.15790514633262784], 'true,false,false,true,false': [-5.551115123125783e-18, 0.18239999999999998], 'true': [-5.0139104337910294e-17, 0.07614243696445766], 'true,false,true,false': [0.0, 0.18239999999999998], 'true,false,false,true': [0.0, 0.1527675320893533], 'true,false,false': [0.13531685997283907, 0.0]}
{'': [0.05063406816653505, 0.0], 'true,false': [0.1352637683703028, 0.05291193888552659], 'true,false,true': [0.0, 0.15787735681593323], 'true,false,false,true,false': [0.0, 0.18239999999999998], 'true': [-2.5069552168955147e-17, 0.07607404734127647], 'true,false,true,false': [0.0, 0.1824000000000001], 'true,false,false,true': [0.0, 0.15799105944593758], 'true,false,false': [0.13523776094254591, -4.5231308410654523e-17]}
{'': [0.05059414210421898, 5.782411586589357e-19], 'true': [2.1488187573390126e-17, 0.07602167314702603]}
{'': [0.050882721893285236, -5.782411586589357e-19], 'true,false': [0.13553477970934297, 0.05321832657916375], 'true,false,true': [0.0, 0.1580576686934006], 'true,false,false,true,false': [0.0, 0.1824], 'true': [3.223228136008519e-17, 0.07643420831351865], 'true,false,true,false': [0.0, 0.18239999999999998], 'true,false,false,true': [0.0, 0.15814535949831102], 'true,false,false': [0.13551444140228605, -4.5231308410654523e-17]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '0;true,false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '0;true,false,true;author(G, B), venue(G, F).;true;true', '0;true,false,false,true,false;author(L, B), venue(L, J).;true;true', '0;true;haswordvenue(D, C).;true;true', '0;true,false,true,false;author(H, A), venue(H, F).;true;true', '0;true,false,false,true;author(K, A), venue(K, J).;true;true', '0;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;true,false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '1;true,false,true;author(G, A), venue(G, F).;true;true', '1;true,false,false,true,false;author(L, A), venue(L, J).;true;true', '1;true;haswordvenue(D, C).;true;true', '1;true,false,true,false;author(H, B), venue(H, F).;true;true', '1;true,false,false,true;author(K, B), venue(K, J).;true;true', '1;true,false,false;haswordauthor(A, I), haswordvenue(J, I).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;true,false;haswordauthor(A, H), haswordvenue(I, H).;true;true', '2;true,false,true;author(J, B), venue(J, I).;true;true', '2;true,true;haswordauthor(A, D).;true;true', '2;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '2;true,true,false;author(F, A), venue(F, E).;true;true', '2;true,true,false,false;author(G, B), venue(G, E).;true;true', '2;true,false,true,false;author(K, A), venue(K, I).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;true,false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '3;true,false,true;author(G, A), venue(G, F).;true;true', '3;true;haswordvenue(D, C).;true;true', '3;true,false,false,true;author(J, A), venue(J, I).;true;true', '3;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;true,false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '4;true,false,true;author(G, B), venue(G, F).;true;true', '4;true,false,false,true,false;author(L, A), venue(L, J).;true;true', '4;true;haswordvenue(D, C).;true;true', '4;true,false,true,false;author(H, A), venue(H, F).;true;true', '4;true,false,false,true;author(K, B), venue(K, J).;true;true', '4;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;true,false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '5;true,false,true;author(G, B), venue(G, F).;true;true', '5;true,false,false,true,false;author(L, A), venue(L, J).;true;true', '5;true;haswordvenue(D, C).;true;true', '5;true,false,true,false;author(H, A), venue(H, F).;true;true', '5;true,false,false,true;author(K, B), venue(K, J).;true;true', '5;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;true,false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '6;true,false,true;author(G, B), venue(G, F).;true;true', '6;true,false,false,true,false;author(L, A), venue(L, J).;true;true', '6;true;haswordvenue(D, C).;true;true', '6;true,false,true,false;author(H, A), venue(H, F).;true;true', '6;true,false,false,true;author(K, B), venue(K, J).;true;true', '6;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;true,false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '7;true,false,true;author(G, B), venue(G, F).;true;true', '7;true,false,false,true,false;author(L, B), venue(L, J).;true;true', '7;true;haswordvenue(D, C).;true;true', '7;true,false,true,false;author(H, A), venue(H, F).;true;true', '7;true,false,false,true;author(K, A), venue(K, J).;true;true', '7;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;true;haswordvenue(D, C).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;true,false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '9;true,false,true;author(G, B), venue(G, F).;true;true', '9;true,false,false,true,false;author(L, B), venue(L, J).;true;true', '9;true;haswordvenue(D, C).;true;true', '9;true,false,true,false;author(H, A), venue(H, F).;true;true', '9;true,false,false,true;author(K, A), venue(K, J).;true;true', '9;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.7194734122109543;  // std dev = 8,43e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.5553664367462837;  // std dev = 1,46e-07, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( author(F, A), venue(F, E) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(G, B), venue(G, E) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | then if ( author(J, B), venue(J, I) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(K, A), venue(K, I) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else return 0.5553664367462838;  // std dev = 8,43e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.33561950334222496;  // std dev = 0,392, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then if ( author(J, A), venue(J, I) )
%   | | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.3327955695209806;  // std dev = 0,398, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.4175135841583103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.3207118471601498;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.3388085385399061;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.2356346875847745;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.3394414362766045;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.23633904255546376;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.26748568628104785;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.17746873718480147;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.2679152101720519;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.17798428457073107;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.25517224256948967;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.21841917799816435;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.13504305403656594;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.21872003884331614;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.13541909146350936;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.2097577156325356;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.1770964977452773;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.18342368326354153;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.10396257386587603;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.18364255996957402;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.10423972664270063;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.1770964977452774;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.15274385809367072;  // std dev = 3,65e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.15752691620665993;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.08089810087661249;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.09166899263512836;  // std dev = 0,397, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.15274385809367083;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.13400703000801095;  // std dev = 4,47e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.1377301080791009;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.06352970569915176;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.14589429728802572;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.06145776682749521;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.13400703000801079;  // std dev = 5,05e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
Results
   AUC ROC   = 0.630748
   AUC PR    = 0.937958
   CLL	      = -0.26373
   Precision = 0.946746 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972644


Total learning time: 7.777 seconds
Total inference time: 4.5 seconds
AUC ROC: 0.630748


Refined model AUC ROC: 0.630748


Dataset: imdb->cora, Fold: 5, Type: transfer, Time: 00:05:20
{'Recall': 1.0, 'AUC PR': 0.937958, 'Mapping results': {'Generating paths time': 3.036966562271118, 'Finding best mapping': 0.0018396377563476562, 'Generating mappings time': 0.05153036117553711, 'Knowledge compiling time': 0.07714962959289551, 'Possible mappings': 26, 'Total time': 3.1674911975860596}, 'F1': 0.972644, 'AUC ROC': 0.630748, 'Inference time': 4.5, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.934613, 'F1': 0.972644, 'AUC ROC': 0.621875, 'Inference time': 4.167, 'Precision': [0.946746, 0.5], 'Learning time': 14.539, 'CLL': -0.26297}, 'Precision': [0.946746, 0.5], 'Learning time': 22.316, 'CLL': -0.26373}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.7194734122109543;  // std dev = 8,43e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.5553664367462837;  // std dev = 1,46e-07, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.5553664367462838;  // std dev = 8,43e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.31924068717900794;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.31924068717900794;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.4175135841583103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.3207118471601498;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.2397212075113599;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.2397212075113599;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( author(F, B), venue(F, E) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(G, A), venue(G, E) )
%   | | | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.18046108143334116;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | then if ( author(J, A), venue(J, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(K, B), venue(K, I) )
%   | | | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.18046108143334116;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else return 0.25517224256948967;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.13722535067088382;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.13722535067088382;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.2097577156325356;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.1770964977452773;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.10557046829371092;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.10557046829371092;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.1770964977452774;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.15274385809367072;  // std dev = 3,65e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09184396731855582;  // std dev = 0,397, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then if ( author(J, A), venue(J, I) )
%   | | | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.09387396367772635;  // std dev = 0,391, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | | else return 0.15274385809367083;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.13400703000801095;  // std dev = 4,47e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.14098720990740865;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.061953695186359285;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.14123324161617057;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.062381745014367454;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.13400703000801079;  // std dev = 5,05e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
Results
   AUC ROC   = 0.630357
   AUC PR    = 0.937926
   CLL	      = -0.263678
   Precision = 0.946746 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972644


Total learning time: 15.108 seconds
Total inference time: 4.222 seconds
AUC ROC: 0.630357


Dataset: imdb->cora, Fold: 5, Type: scratch, Time: 00:05:40
{'Recall': 1.0, 'AUC PR': 0.937926, 'F1': 0.972644, 'AUC ROC': 0.630357, 'Inference time': 4.222, 'Precision': [0.946746, 0.5], 'Learning time': 15.108, 'CLL': -0.263678}


Start learning from source dataset


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.41010705840311323;  // std dev = 0,497, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else return 0.14195527900601865;  // std dev = 0,451, 599,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=170 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.35253327464070716;  // std dev = 0,497, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.16002464453021695;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then if ( samebib(G, H), venue(H, B) )
%   | | | | then return 0.5066420221364497;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return -0.16002464453021698;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.13997535546978268;  // std dev = 0,458, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else return 0.12380994193595392;  // std dev = 0,451, 532,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.5460325385442826;  // std dev = 0,394, 26,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.3204297830907809;  // std dev = 0,493, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else if ( author(G, E), venue(G, A) )
%   | | | | then return -0.08518918091273064;  // std dev = 0,381, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | | else return 0.2964797657356959;  // std dev = 0,497, 43,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=24 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.357387849899594;  // std dev = 0,486, 63,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=39 */
%   | | | else if ( author(K, I), venue(K, B) )
%   | | | | then return -0.07415976914802477;  // std dev = 0,390, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | | else return 0.2716735641853083;  // std dev = 0,499, 45,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   | | else return 0.29027630952434547;  // std dev = 0,497, 4.881,000 (wgt'ed) examples reached here.  /* #neg=2.187 #pos=2.694 */
%   else return 0.1062963544298035;  // std dev = 0,450, 599,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=170 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23044454437567738;  // std dev = 0,497, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.15293388947522343;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then if ( samebib(G, H), venue(H, A) )
%   | | | | then return 0.47282415323435417;  // std dev = 1,154, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return -0.1934201048031078;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.10524497881948093;  // std dev = 0,456, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else return 0.08993424453016184;  // std dev = 0,450, 532,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=151 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.17827362770494257;  // std dev = 0,497, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.13415536708716466;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then if ( samebib(G, H), venue(H, A) )
%   | | | | then return 0.38826665986383374;  // std dev = 1,154, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return -0.16501759758519122;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0882183202062524;  // std dev = 0,456, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then if ( samebib(K, L), venue(L, B) )
%   | | | | then return 0.32215413859041053;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return -0.1649514378966212;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.07520175240535315;  // std dev = 0,452, 49,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else return 0.07545963524034979;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return 0.2780124574902511;  // std dev = 0,421, 28,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then if ( samebib(G, H), venue(H, B) )
%   | | | | then return 0.5365509105131552;  // std dev = 0,213, 43,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | | else return -0.37790765177067526;  // std dev = 0,246, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.0355572877991851;  // std dev = 0,499, 55,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=25 */
%   | else return 0.13534791448720407;  // std dev = 0,497, 5.005,000 (wgt'ed) examples reached here.  /* #neg=2.245 #pos=2.760 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then return 0.06040750347934335;  // std dev = 0,432, 67,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, B) )
%   | | | then return -0.0372987192036846;  // std dev = 0,761, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.07229183760811389;  // std dev = 0,455, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else return 0.06276192324486059;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10235484045418074;  // std dev = 0,496, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.12581771507617898;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.06992222141532731;  // std dev = 0,449, 61,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return -0.05026356126384285;  // std dev = 0,744, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( author(J, H), venue(J, B) )
%   | | | | then return 0.03227973386749623;  // std dev = 1,049, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else return 0.06175181081761101;  // std dev = 0,457, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else return 0.05178420808678379;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07694902878681871;  // std dev = 0,495, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else return 0.041990809632516925;  // std dev = 0,448, 599,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=170 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.057756735183055644;  // std dev = 0,495, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.27415916793851075;  // std dev = 1,157, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.14813000415389024;  // std dev = 0,036, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.11688326740266408;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0438656775817211;  // std dev = 0,455, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return -0.04925685883922929;  // std dev = 0,756, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( author(L, J), venue(L, A) )
%   | | | | then return 0.017697803165616824;  // std dev = 1,050, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else return 0.04102739748262853;  // std dev = 0,457, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else return 0.034682153665080956;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04333710265525602;  // std dev = 0,495, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.10486325274970892;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then if ( samebib(G, H), venue(H, B) )
%   | | | | then return 0.2876154216359849;  // std dev = 1,181, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return -0.1560083537732877;  // std dev = 0,026, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.03254345635093491;  // std dev = 0,452, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.05361685535980018;  // std dev = 0,683, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( author(L, J), venue(L, B) )
%   | | | | then return -0.02101025482804301;  // std dev = 1,022, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else return 0.034101226806621754;  // std dev = 0,457, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else return 0.02814699533238654;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */


Predicates from source: ['samevenue(venue,venue).', 'author(class,author).', 'venue(class,venue).', 'haswordvenue(venue,word).', 'haswordauthor(author,word).', 'samebib(class,class).'] 



Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false;movie(D, B), movie(D, E).;true;false
1;false,true,false;genre(E, G), genre(A, G).;true;false
1;false,true;movie(F, E), movie(F, A).;false;true
1;false,true,false,true;genre(B, H).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
2;true,false;movie(H, B), movie(H, I).;true;false
2;true,false,true;genre(I, J), genre(A, J).;false;true
2;true,true;movie(C, E).;false;true
2;true;movie(D, A), movie(D, E).;true;true
2;true,true,false;genre(E, F), genre(B, F).;false;true
2;true,true,false,false;genre(E, G), genre(A, G).;false;false
2;true,false,true,false;genre(I, K), genre(B, K).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false;movie(D, A), movie(D, E).;true;false
3;false,true,false;genre(E, G), genre(B, G).;true;false
3;false,true;movie(F, E), movie(F, B).;false;true
3;false,true,false,true;genre(A, H).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,false,true;genre(J, K), genre(A, K).;true;false
4;false,false;movie(I, B), movie(I, J).;true;false
4;false,true;movie(F, E), movie(F, B).;false;true
4;false,false,true,true;genre(B, L).;false;false
4;false,true,false,true;genre(A, H).;false;false
4;false;movie(D, A), movie(D, E).;true;true
4;false,true,false;genre(E, G), genre(B, G).;true;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false,true;genre(L, M), genre(B, M).;false;false
5;false,false;movie(K, B), movie(K, L).;true;false
5;true,true;movie(F, E), movie(F, B).;false;true
5;true;movie(D, A), movie(D, E).;true;false
5;true,true,false;genre(E, G), genre(A, G).;true;false
5;false;movie(I, A), movie(I, J).;false;true
5;true,true,false,true;genre(B, H).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false,false,true;genre(H, I), genre(A, I).;false;true
6;false,false;movie(G, A), movie(G, H).;true;false
6;false,true;movie(F, E), movie(F, A).;false;false
6;false;movie(D, B), movie(D, E).;true;true
6;false,false,true,false;genre(H, J), genre(B, J).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false,true,true;genre(A, G).;false;false
8;false,false;movie(I, B), movie(I, J).;true;false
8;false,true;genre(E, F), genre(B, F).;true;true
8;false,false,true;genre(J, K), genre(B, K).;false;true
8;false;movie(D, A), movie(D, E).;true;true
8;false,true,false;movie(H, E), movie(H, B).;false;false
8;false,false,true,false;genre(J, L), genre(A, L).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false,false,true;genre(J, K), genre(A, K).;false;true
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,true;movie(F, E), movie(F, A).;false;true
9;false,true,false,true;genre(B, H).;false;false
9;false;movie(D, B), movie(D, E).;true;true
9;false,true,false;genre(E, G), genre(A, G).;true;false
9;false,false,true,false;genre(J, L), genre(B, L).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6359267128772905;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5398498420741679;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.1254446385283914;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then if ( genre(B, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.4289562725350857;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3264400476801364;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24503149911444566;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return 0.18482045881522097;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then return -0.08518475138839679;  // std dev = 2,24e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14108814406879144;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10912169797108989;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08540523411308515;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06751926396403501;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then if ( genre(B, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06419184008202622;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.877301
   AUC PR    = 0.802956
   CLL	      = -0.343299
   Precision = 0.802956 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.89071


Total learning time: 1.794 seconds
Total inference time: 0.929 seconds
AUC ROC: 0.877301


Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [4.08e-08, 40, 0], 'true': [3.528, 16, 56]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false,true': 'genre(B, H)'}, {'false,true,false,true,false': [0.0, 3, 0], 'true': [3.528, 16, 56], 'false,true,false,true,true': [0.0, 0, 0], 'false,true,true': [7.45e-09, 15, 0], 'false,true,false,false': [0.0, 22, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, E)', 'true': 'movie(D, A), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 40, 0], 'true,true,true': [3.528, 16, 56], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)'}, {'false,true,true': [0.0, 15, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 25, 0], 'true': [3.528, 16, 56], 'false,true,false,true': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)'}, {'false,true,true': [7.45e-09, 15, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [9.13e-09, 25, 0], 'true': [3.528, 16, 56], 'false,true,false,true': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'true,true': 'movie(F, E), movie(F, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false,true': [2.24e-08, 40, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [3.528, 16, 56], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,true': [0.0, 15, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 25, 0], 'true': [3.528, 16, 56]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [1.05e-08, 40, 0], 'true': [3.528, 16, 56]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,true': 'genre(E, F), genre(B, F)'}, {'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 25, 0], 'true': [3.528, 16, 56], 'false,true,false,true': [3.73e-09, 15, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false,true': 'genre(B, H)'}, {'false,true,false,true,false': [1.32e-09, 3, 0], 'true': [3.528, 16, 56], 'false,true,false,true,true': [0.0, 0, 0], 'false,true,true': [7.9e-09, 15, 0], 'false,true,false,false': [5.27e-09, 22, 0], 'false,false': [0.0, 0, 0]}]
{'': [0.1728395061728392, 4.163336342344337e-17]}
{'': [0.17283950617283914, -2.4980018054066023e-17], 'false': [-2.4980018054066023e-17, nan], 'false,true,false': [-4.625929269271485e-18, -5.046468293750712e-18], 'false,true': [3.7007434154171884e-18, -6.661338147750939e-18], 'false,true,false,true': [nan, -4.625929269271485e-18]}
{'': [0.1728395061728386, -5.551115123125783e-18], 'true,true': [0.1728395061728386, nan], 'true': [0.1728395061728386, nan]}
{'': [0.17283950617284027, 2.7755575615628915e-18], 'false': [2.7755575615628915e-18, nan], 'false,true,false': [nan, -2.220446049250313e-18], 'false,true': [-5.551115123125783e-18, -2.220446049250313e-18]}
{'': [0.17283950617283927, -1.3877787807814457e-17], 'false': [-1.3877787807814457e-17, nan], 'false,true,false': [nan, 3.3306690738754695e-18], 'false,true': [3.7007434154171884e-18, 3.3306690738754695e-18]}
{'': [0.17283950617283952, 1.2490009027033011e-17], 'false': [1.2490009027033011e-17, nan], 'true,true': [0.17283950617283952, nan], 'true': [0.17283950617283952, nan]}
{'': [0.17283950617283939, 6.938893903907229e-19], 'false': [6.938893903907229e-19, nan], 'false,true': [0.0, -1.1102230246251566e-18]}
{'': [0.17283950617283936, 2.7755575615628915e-18]}
{'': [0.17283950617283939, 6.938893903907229e-19], 'false': [6.938893903907229e-19, nan], 'false,true,false': [9.251858538542971e-19, -4.440892098500626e-18], 'false,true': [nan, 6.938893903907229e-19]}
{'': [0.17283950617283966, -2.0816681711721684e-18], 'false': [-2.0816681711721684e-18, nan], 'false,true,false': [5.782411586589357e-19, 1.261617073437678e-18], 'false,true': [4.163336342344337e-18, 5.551115123125783e-19], 'false,true,false,true': [nan, 5.782411586589357e-19]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;movie(F, E), movie(F, A).;true;true', '1;false,false;genre(E, G), genre(A, G).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;movie(F, E), movie(F, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;movie(F, E), movie(F, B).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;movie(F, E), movie(F, A).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;false;movie(G, E), movie(G, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;movie(F, E), movie(F, A).;true;true', '9;false,false;genre(E, G), genre(A, G).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.09269127618926101;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07877675473109172;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06842697784420272;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801087;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.28 seconds
Total inference time: 1.372 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb, Fold: 1, Type: transfer, Time: 00:11:21
{'Recall': 1.0, 'AUC PR': 1.0, 'Mapping results': {'Generating paths time': 4.359273195266724, 'Finding best mapping': 0.026527881622314453, 'Generating mappings time': 0.06948733329772949, 'Knowledge compiling time': 0.3413259983062744, 'Possible mappings': 126, 'Total time': 4.796620845794678}, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.372, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.802956, 'F1': 0.89071, 'AUC ROC': 0.877301, 'Inference time': 0.929, 'Precision': [0.802956, 0.5], 'Learning time': 1.794, 'CLL': -0.343299}, 'Precision': [1.0, 0.5], 'Learning time': 5.074, 'CLL': -0.094637}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.14185106490048768;  // std dev = 5,37e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.11231637819360632;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.10159632948783626;  // std dev = 2,79e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.09269127618926103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.0851847513883968;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07877675473109179;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
Results
   AUC ROC   = 0.95092
   AUC PR    = 0.910615
   CLL	      = -0.195966
   Precision = 0.910615 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.953216


Total learning time: 1.542 seconds
Total inference time: 0.761 seconds
AUC ROC: 0.95092


Dataset: cora->imdb, Fold: 1, Type: scratch, Time: 00:11:23
{'Recall': 1.0, 'AUC PR': 0.910615, 'F1': 0.953216, 'AUC ROC': 0.95092, 'Inference time': 0.761, 'Precision': [0.910615, 0.5], 'Learning time': 1.542, 'CLL': -0.195966}


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false;movie(D, B), movie(D, E).;true;false
1;false,true,false;genre(E, G), genre(A, G).;true;false
1;false,true;movie(F, E), movie(F, A).;false;true
1;false,true,false,true;genre(B, H).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
2;true,false;movie(H, B), movie(H, I).;true;false
2;true,false,true;genre(I, J), genre(A, J).;false;true
2;true,true;movie(C, E).;false;true
2;true;movie(D, A), movie(D, E).;true;true
2;true,true,false;genre(E, F), genre(B, F).;false;true
2;true,true,false,false;genre(E, G), genre(A, G).;false;false
2;true,false,true,false;genre(I, K), genre(B, K).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false;movie(D, A), movie(D, E).;true;false
3;false,true,false;genre(E, G), genre(B, G).;true;false
3;false,true;movie(F, E), movie(F, B).;false;true
3;false,true,false,true;genre(A, H).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,false,true;genre(J, K), genre(A, K).;true;false
4;false,false;movie(I, B), movie(I, J).;true;false
4;false,true;movie(F, E), movie(F, B).;false;true
4;false,false,true,true;genre(B, L).;false;false
4;false,true,false,true;genre(A, H).;false;false
4;false;movie(D, A), movie(D, E).;true;true
4;false,true,false;genre(E, G), genre(B, G).;true;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false,true;genre(L, M), genre(B, M).;false;false
5;false,false;movie(K, B), movie(K, L).;true;false
5;true,true;movie(F, E), movie(F, B).;false;true
5;true;movie(D, A), movie(D, E).;true;false
5;true,true,false;genre(E, G), genre(A, G).;true;false
5;false;movie(I, A), movie(I, J).;false;true
5;true,true,false,true;genre(B, H).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false,false,true;genre(H, I), genre(A, I).;false;true
6;false,false;movie(G, A), movie(G, H).;true;false
6;false,true;movie(F, E), movie(F, A).;false;false
6;false;movie(D, B), movie(D, E).;true;true
6;false,false,true,false;genre(H, J), genre(B, J).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false,true,true;genre(A, G).;false;false
8;false,false;movie(I, B), movie(I, J).;true;false
8;false,true;genre(E, F), genre(B, F).;true;true
8;false,false,true;genre(J, K), genre(B, K).;false;true
8;false;movie(D, A), movie(D, E).;true;true
8;false,true,false;movie(H, E), movie(H, B).;false;false
8;false,false,true,false;genre(J, L), genre(A, L).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false,false,true;genre(J, K), genre(A, K).;false;true
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,true;movie(F, E), movie(F, A).;false;true
9;false,true,false,true;genre(B, H).;false;false
9;false;movie(D, B), movie(D, E).;true;true
9;false,true,false;genre(E, G), genre(A, G).;true;false
9;false,false,true,false;genre(J, L), genre(B, L).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.675050343550217;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.57180708071823;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.45176579324149735;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.34222392063374174;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.1015963294878363;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.25697900587735223;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return 0.19495307730525124;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15031651551660505;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11778459534750191;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09360338078063743;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07526644324801013;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.871914
   AUC PR    = 0.796069
   CLL	      = -0.353645
   Precision = 0.796069 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.886457


Total learning time: 2.021 seconds
Total inference time: 0.915 seconds
AUC ROC: 0.871914


Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [4.71e-08, 45, 0], 'true': [3.259, 13, 58]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,true': [0.0, 45, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.259, 13, 58]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, E)', 'true': 'movie(D, A), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [1.83e-08, 45, 0], 'true,true,true': [3.259, 13, 58], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)'}, {'false,true,true': [1.05e-08, 45, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.259, 13, 58]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)'}, {'false,true,true': [0.0, 45, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.259, 13, 58]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'true,true': 'movie(F, E), movie(F, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false,true': [2.11e-08, 45, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [3.259, 13, 58], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,true': [0.0, 45, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.259, 13, 58]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [1.29e-08, 45, 0], 'true': [3.259, 13, 58]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'movie(H, E), movie(H, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true': [3.259, 13, 58], 'false,true,false,true': [9.13e-09, 44, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,true': [0.0, 45, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.259, 13, 58]}]
{'': [0.1495734973219595, 4.9343245538895844e-17]}
{'': [0.14957349732195865, -2.960594732333751e-17], 'false': [-2.960594732333751e-17, nan], 'false,true': [-2.960594732333751e-17, nan]}
{'': [0.1495734973219593, 7.401486830834377e-18], 'true,true': [0.1495734973219593, nan], 'true': [0.1495734973219593, nan]}
{'': [0.14957349732195965, 2.4671622769447924e-18], 'false': [2.4671622769447924e-18, nan], 'false,true': [2.4671622769447924e-18, nan]}
{'': [0.1495734973219603, -1.7270135938613546e-17], 'false': [-1.7270135938613546e-17, nan], 'false,true': [-1.7270135938613546e-17, nan]}
{'': [0.14957349732195974, 9.86864910777917e-18], 'false': [9.86864910777917e-18, nan], 'true,true': [0.14957349732195974, nan], 'true': [0.14957349732195974, nan]}
{'': [0.14957349732196001, 0.0], 'false': [0.0, nan], 'false,true': [0.0, nan]}
{'': [0.14957349732195996, 3.7007434154171884e-18]}
{'': [0.14957349732195985, 2.4671622769447924e-18], 'false': [2.4671622769447924e-18, nan], 'false,true,false': [1.8924256101565167e-18, nan], 'false,true': [0.0, 1.8924256101565167e-18], 'false,true,true': [0.0, nan]}
{'': [0.14957349732195993, -1.8503717077085942e-18], 'false': [-1.8503717077085942e-18, nan], 'false,true': [-1.8503717077085942e-18, nan]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;false;genre(E, F), genre(B, F).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.11231637819360635;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.1015963294878363;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.09269127618926101;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1340070300080111;  // std dev = 2,63e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.06419184008202625;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
Results
   AUC ROC   = 0.986111
   AUC PR    = 0.972973
   CLL	      = -0.123312
   Precision = 0.972973 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986301


Total learning time: 2.034 seconds
Total inference time: 0.797 seconds
AUC ROC: 0.986111


Refined model AUC ROC: 0.986111


Dataset: cora->imdb, Fold: 2, Type: transfer, Time: 00:11:35
{'Recall': 1.0, 'AUC PR': 0.972973, 'Mapping results': {'Generating paths time': 4.504266023635864, 'Finding best mapping': 0.026559829711914062, 'Generating mappings time': 0.06984162330627441, 'Knowledge compiling time': 0.35098910331726074, 'Possible mappings': 126, 'Total time': 4.95166277885437}, 'F1': 0.986301, 'AUC ROC': 0.986111, 'Inference time': 0.797, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.796069, 'F1': 0.886457, 'AUC ROC': 0.871914, 'Inference time': 0.915, 'Precision': [0.796069, 0.5], 'Learning time': 2.021, 'CLL': -0.353645}, 'Precision': [0.972973, 0.5], 'Learning time': 4.055, 'CLL': -0.123312}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.8581489350995115;  // std dev = 2,60e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6813641993271577;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.719473412210955;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5288038212098718;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.5553664367462843;  // std dev = 1,26e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.39742934112412265;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.4175135841583102;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.10159632948783626;  // std dev = 2,79e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3025884514838787;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3207118471601495;  // std dev = 2,11e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.09269127618926104;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23719304019103774;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.08518475138839679;  // std dev = 1,05e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.19142843787805347;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.20975771563253542;  // std dev = 5,96e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.07877675473109176;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15835970847973962;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1770964977452775;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.13366131757790028;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1527438580936709;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.0684269778442027;  // std dev = 1,67e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11466128853019192;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1340070300080111;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
Results
   AUC ROC   = 0.95779
   AUC PR    = 0.925491
   CLL	      = -0.19503
   Precision = 0.912676 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954345


Total learning time: 1.987 seconds
Total inference time: 0.837 seconds
AUC ROC: 0.95779


Dataset: cora->imdb, Fold: 2, Type: scratch, Time: 00:11:38
{'Recall': 1.0, 'AUC PR': 0.925491, 'F1': 0.954345, 'AUC ROC': 0.95779, 'Inference time': 0.837, 'Precision': [0.912676, 0.5], 'Learning time': 1.987, 'CLL': -0.19503}


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false;movie(D, B), movie(D, E).;true;false
1;false,true,false;genre(E, G), genre(A, G).;true;false
1;false,true;movie(F, E), movie(F, A).;false;true
1;false,true,false,true;genre(B, H).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
2;true,false;movie(H, B), movie(H, I).;true;false
2;true,false,true;genre(I, J), genre(A, J).;false;true
2;true,true;movie(C, E).;false;true
2;true;movie(D, A), movie(D, E).;true;true
2;true,true,false;genre(E, F), genre(B, F).;false;true
2;true,true,false,false;genre(E, G), genre(A, G).;false;false
2;true,false,true,false;genre(I, K), genre(B, K).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false;movie(D, A), movie(D, E).;true;false
3;false,true,false;genre(E, G), genre(B, G).;true;false
3;false,true;movie(F, E), movie(F, B).;false;true
3;false,true,false,true;genre(A, H).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,false,true;genre(J, K), genre(A, K).;true;false
4;false,false;movie(I, B), movie(I, J).;true;false
4;false,true;movie(F, E), movie(F, B).;false;true
4;false,false,true,true;genre(B, L).;false;false
4;false,true,false,true;genre(A, H).;false;false
4;false;movie(D, A), movie(D, E).;true;true
4;false,true,false;genre(E, G), genre(B, G).;true;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false,true;genre(L, M), genre(B, M).;false;false
5;false,false;movie(K, B), movie(K, L).;true;false
5;true,true;movie(F, E), movie(F, B).;false;true
5;true;movie(D, A), movie(D, E).;true;false
5;true,true,false;genre(E, G), genre(A, G).;true;false
5;false;movie(I, A), movie(I, J).;false;true
5;true,true,false,true;genre(B, H).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false,false,true;genre(H, I), genre(A, I).;false;true
6;false,false;movie(G, A), movie(G, H).;true;false
6;false,true;movie(F, E), movie(F, A).;false;false
6;false;movie(D, B), movie(D, E).;true;true
6;false,false,true,false;genre(H, J), genre(B, J).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false,true,true;genre(A, G).;false;false
8;false,false;movie(I, B), movie(I, J).;true;false
8;false,true;genre(E, F), genre(B, F).;true;true
8;false,false,true;genre(J, K), genre(B, K).;false;true
8;false;movie(D, A), movie(D, E).;true;true
8;false,true,false;movie(H, E), movie(H, B).;false;false
8;false,false,true,false;genre(J, L), genre(A, L).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false,false,true;genre(J, K), genre(A, K).;false;true
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,true;movie(F, E), movie(F, A).;false;true
9;false,true,false,true;genre(B, H).;false;false
9;false;movie(D, B), movie(D, E).;true;true
9;false,true,false;genre(E, G), genre(A, G).;true;false
9;false,false,true,false;genre(J, L), genre(B, L).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6457595545685355;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else return -0.14185106490048788;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.54789521854257;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then if ( genre(B, H) )
%   | | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1254446385283912;  // std dev = 6,99e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.43471726830400137;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360617;  // std dev = 9,88e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3304125955184558;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then if ( genre(A, H) )
%   | | | | then return -0.10159632948783633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10159632948783624;  // std dev = 4,94e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2479976539753087;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then if ( genre(A, H) )
%   | | | | then return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return 0.1872945372763586;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then return -0.08518475138839678;  // std dev = 5,87e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14331060778211052;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.07877675473109157;  // std dev = 6,32e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11118632302397771;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else return -0.07324622576333717;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08734274915357479;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420272;  // std dev = 4,56e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06842697784420265;  // std dev = 5,05e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06933654587454749;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then if ( genre(B, H) )
%   | | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.882353
   AUC PR    = 0.809524
   CLL	      = -0.334717
   Precision = 0.809524 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.894737


Total learning time: 3.35 seconds
Total inference time: 1.254 seconds
AUC ROC: 0.882353


Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 130, 0], 'true': [6.149, 48, 178]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false,true': 'genre(B, H)'}, {'false,true,false,true,false': [0.0, 7, 0], 'true': [6.149, 48, 178], 'false,true,false,true,true': [0.0, 1, 0], 'false,true,true': [0.0, 17, 0], 'false,true,false,false': [6.99e-08, 105, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, E)', 'true': 'movie(D, A), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [9.88e-08, 130, 0], 'true,true,true': [6.149, 48, 178], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false,true': 'genre(A, H)'}, {'false,true,false,true,false': [0.0, 5, 0], 'true': [6.149, 48, 178], 'false,true,false,true,true': [0.0, 1, 0], 'false,true,true': [0.0, 17, 0], 'false,true,false,false': [4.94e-08, 107, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false,true': 'genre(A, H)'}, {'false,true,false,true,false': [0.0, 5, 0], 'true': [6.149, 48, 178], 'false,true,false,true,true': [0.0, 1, 0], 'false,true,true': [0.0, 17, 0], 'false,true,false,false': [0.0, 107, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'true,true': 'movie(F, E), movie(F, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false,true': [5.87e-08, 130, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [6.149, 48, 178], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,true': [0.0, 17, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [6.32e-08, 113, 0], 'true': [6.149, 48, 178]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 130, 0], 'true': [6.149, 48, 178]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'movie(H, E), movie(H, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'false,false': [0.0, 0, 0], 'false,true,true,false': [4.56e-09, 10, 0], 'true': [6.149, 48, 178], 'false,true,false,true': [2.63e-09, 12, 0], 'false,true,false,false': [5.05e-08, 107, 0], 'false,true,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false,true': 'genre(B, H)'}, {'false,true,false,true,false': [0.0, 7, 0], 'true': [6.149, 48, 178], 'false,true,false,true,true': [0.0, 1, 0], 'false,true,true': [0.0, 17, 0], 'false,true,false,false': [0.0, 105, 0], 'false,false': [0.0, 0, 0]}]
{'': [0.1672801315686487, -3.75767792950053e-17]}
{'': [0.16728013156864405, 5.124106267500723e-17], 'false': [5.124106267500723e-17, nan], 'false,true,false': [0.0, 4.65236315081018e-17], 'false,true': [0.0, 5.501990210531749e-17], 'false,true,false,true': [0.0, -1.982541115402065e-18]}
{'': [0.16728013156864113, 7.51535585900106e-17], 'true,true': [0.16728013156864113, nan], 'true': [0.16728013156864113, nan]}
{'': [0.16728013156864066, -3.586874387250506e-17], 'false': [-3.586874387250506e-17, nan], 'false,true,false': [-2.3129646346357427e-18, 2.2827015459582657e-17], 'false,true': [-4.89804275569922e-18, -1.1789979022568034e-17], 'false,true,false,true': [0.0, 0.0]}
{'': [0.16728013156864205, 4.7824991830006746e-17], 'false': [4.7824991830006746e-17, nan], 'false,true,false': [0.0, -4.1503664471968466e-18], 'false,true': [-4.89804275569922e-18, 4.126492657898812e-17], 'false,true,false,true': [0.0, 0.0]}
{'': [0.16728013156864305, 2.6474549048753734e-17], 'false': [2.6474549048753734e-17, nan], 'true,true': [0.16728013156864305, nan], 'true': [0.16728013156864305, nan]}
{'': [0.16728013156864288, 4.013883242875566e-17], 'false': [4.013883242875566e-17, nan], 'false,true': [-8.163404592832033e-19, 3.53699370677041e-17]}
{'': [0.16728013156864271, -1.1102230246251566e-17]}
{'': [0.16728013156864274, 2.7328566760003855e-17], 'false': [2.7328566760003855e-17, nan], 'false,true,false': [5.782411586589357e-19, 2.386460707138187e-17], 'false,true': [1.8924256101565167e-18, 9.329605248950896e-18], 'false,true,true': [0.0, 2.0816681711721684e-18]}
{'': [0.167280131568643, -1.4518301091252048e-17], 'false': [-1.4518301091252048e-17, nan], 'false,true,false': [0.0, -5.28677630773884e-18], 'false,true': [-8.163404592832033e-19, -1.6211221156031047e-17], 'false,true,false,true': [0.0, -4.956352788505163e-19]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;movie(F, E), movie(F, A).;true;true', '1;false,false;genre(E, G), genre(A, G).;true;true', '1;false,false,true;genre(B, H).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;movie(F, E), movie(F, B).;true;true', '3;false,false;genre(E, G), genre(B, G).;true;true', '3;false,false,true;genre(A, H).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;movie(F, E), movie(F, B).;true;true', '4;false,false;genre(E, G), genre(B, G).;true;true', '4;false,false,true;genre(A, H).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;movie(F, E), movie(F, A).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;false;genre(E, F), genre(B, F).;true;true', '8;false,false;movie(H, E), movie(H, B).;true;true', '8;false,true;genre(A, G).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;movie(F, E), movie(F, A).;true;true', '9;false,false;genre(E, G), genre(A, G).;true;true', '9;false,false,true;genre(B, H).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048774;  // std dev = 2,58e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.14185106490048788;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.12544463852839108;  // std dev = 8,16e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360635;  // std dev = 3,48e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( actor(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.1015963294878364;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.092691276189261;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926101;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( actor(A) )
%   | | | then if ( actor(B) )
%   | | | | then return -0.09269127618926105;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | | else return -0.09269127618926098;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then if ( female(A) )
%   | | | | then return -0.08518475138839687;  // std dev = 1,61e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | | else return -0.08518475138839685;  // std dev = 2,63e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.08518475138839687;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(B) )
%   | then return -0.0851847513883968;  // std dev = 2,63e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839679;  // std dev = 2,28e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.08518475138839682;  // std dev = 3,48e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( actor(A) )
%   | | | then if ( female(A) )
%   | | | | then return -0.07877675473109179;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | | else return -0.07877675473109179;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( actor(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then if ( female(B) )
%   | | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else if ( female(B) )
%   | | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | else return -0.07324622576333704;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420275;  // std dev = 1,86e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( movie(F, D), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then if ( female(B) )
%   | | | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | | else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else if ( actor(A) )
%   | | | | then if ( actor(B) )
%   | | | | | then return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then if ( female(B) )
%   | | | | then return -0.06419184008202618;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return -0.06419184008202618;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(B) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( actor(B) )
%   | | | | then return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | | else return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06419184008202626;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.479 seconds
Total inference time: 1.839 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb, Fold: 3, Type: transfer, Time: 00:11:55
{'Recall': 1.0, 'AUC PR': 1.0, 'Mapping results': {'Generating paths time': 4.422700643539429, 'Finding best mapping': 0.02660965919494629, 'Generating mappings time': 0.07023167610168457, 'Knowledge compiling time': 0.4474062919616699, 'Possible mappings': 126, 'Total time': 4.966954946517944}, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.839, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.809524, 'F1': 0.894737, 'AUC ROC': 0.882353, 'Inference time': 1.254, 'Precision': [0.809524, 0.5], 'Learning time': 3.35, 'CLL': -0.334717}, 'Precision': [1.0, 0.5], 'Learning time': 8.829, 'CLL': -0.094637}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.14185106490048788;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.12544463852839113;  // std dev = 8,16e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360624;  // std dev = 8,69e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.10159632948783641;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.09269127618926104;  // std dev = 3,33e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.08518475138839679;  // std dev = 3,94e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109165;  // std dev = 5,77e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07324622576333704;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06842697784420267;  // std dev = 4,71e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06419184008202625;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.149 seconds
Total inference time: 0.712 seconds
AUC ROC: 1.0


Dataset: cora->imdb, Fold: 3, Type: scratch, Time: 00:11:59
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.712, 'Precision': [1.0, 0.5], 'Learning time': 3.149, 'CLL': -0.094637}


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false;movie(D, B), movie(D, E).;true;false
1;false,true,false;genre(E, G), genre(A, G).;true;false
1;false,true;movie(F, E), movie(F, A).;false;true
1;false,true,false,true;genre(B, H).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
2;true,false;movie(H, B), movie(H, I).;true;false
2;true,false,true;genre(I, J), genre(A, J).;false;true
2;true,true;movie(C, E).;false;true
2;true;movie(D, A), movie(D, E).;true;true
2;true,true,false;genre(E, F), genre(B, F).;false;true
2;true,true,false,false;genre(E, G), genre(A, G).;false;false
2;true,false,true,false;genre(I, K), genre(B, K).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false;movie(D, A), movie(D, E).;true;false
3;false,true,false;genre(E, G), genre(B, G).;true;false
3;false,true;movie(F, E), movie(F, B).;false;true
3;false,true,false,true;genre(A, H).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,false,true;genre(J, K), genre(A, K).;true;false
4;false,false;movie(I, B), movie(I, J).;true;false
4;false,true;movie(F, E), movie(F, B).;false;true
4;false,false,true,true;genre(B, L).;false;false
4;false,true,false,true;genre(A, H).;false;false
4;false;movie(D, A), movie(D, E).;true;true
4;false,true,false;genre(E, G), genre(B, G).;true;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false,true;genre(L, M), genre(B, M).;false;false
5;false,false;movie(K, B), movie(K, L).;true;false
5;true,true;movie(F, E), movie(F, B).;false;true
5;true;movie(D, A), movie(D, E).;true;false
5;true,true,false;genre(E, G), genre(A, G).;true;false
5;false;movie(I, A), movie(I, J).;false;true
5;true,true,false,true;genre(B, H).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false,false,true;genre(H, I), genre(A, I).;false;true
6;false,false;movie(G, A), movie(G, H).;true;false
6;false,true;movie(F, E), movie(F, A).;false;false
6;false;movie(D, B), movie(D, E).;true;true
6;false,false,true,false;genre(H, J), genre(B, J).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false,true,true;genre(A, G).;false;false
8;false,false;movie(I, B), movie(I, J).;true;false
8;false,true;genre(E, F), genre(B, F).;true;true
8;false,false,true;genre(J, K), genre(B, K).;false;true
8;false;movie(D, A), movie(D, E).;true;true
8;false,true,false;movie(H, E), movie(H, B).;false;false
8;false,false,true,false;genre(J, L), genre(A, L).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false,false,true;genre(J, K), genre(A, K).;false;true
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,true;movie(F, E), movie(F, A).;false;true
9;false,true,false,true;genre(B, H).;false;false
9;false;movie(D, B), movie(D, E).;true;true
9;false,true,false;genre(E, G), genre(A, G).;true;false
9;false,false,true,false;genre(J, L), genre(B, L).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6914822684328457;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5851860008555362;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.4612598391067561;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3488463256948414;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then if ( genre(A, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.26212705508354156;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then if ( genre(A, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return 0.19945264276423463;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then return -0.0851847513883968;  // std dev = 2,24e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15451336627983223;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07877675473109179;  // std dev = 5,27e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12179491558002803;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else return -0.07324622576333704;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09745354768081677;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07895233872555114;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.87092
   AUC PR    = 0.794811
   CLL	      = -0.343872
   Precision = 0.794811 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.885677


Total learning time: 1.659 seconds
Total inference time: 0.936 seconds
AUC ROC: 0.87092


Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [3.65e-08, 36, 0], 'true': [2.739, 9, 45]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,true': [0.0, 26, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [5.27e-09, 10, 0], 'true': [2.739, 9, 45], 'false,true,false,true': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, E)', 'true': 'movie(D, A), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 36, 0], 'true,true,true': [2.739, 9, 45], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false,true': 'genre(A, H)'}, {'false,true,false,true,false': [0.0, 3, 0], 'true': [2.739, 9, 45], 'false,true,false,true,true': [0.0, 0, 0], 'false,true,true': [0.0, 26, 0], 'false,true,false,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false,true': 'genre(A, H)'}, {'false,true,false,true,false': [1.86e-09, 3, 0], 'true': [2.739, 9, 45], 'false,true,false,true,true': [0.0, 0, 0], 'false,true,true': [7.45e-09, 26, 0], 'false,true,false,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'true,true': 'movie(F, E), movie(F, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false,true': [2.24e-08, 36, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [2.739, 9, 45], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,true': [5.27e-09, 26, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 10, 0], 'true': [2.739, 9, 45]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [9.13e-09, 36, 0], 'true': [2.739, 9, 45]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'movie(H, E), movie(H, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'true': [2.739, 9, 45], 'false,true,false,true': [0.0, 25, 0], 'false,true,false,false': [2.63e-09, 7, 0], 'false,true,true,true': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,true': [0.0, 26, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [3.73e-09, 10, 0], 'true': [2.739, 9, 45], 'false,true,false,true': [0.0, 0, 0]}]
{'': [0.13888888888888942, 3.700743415417188e-17]}
{'': [0.13888888888888837, 9.25185853854297e-18], 'false': [9.25185853854297e-18, nan], 'false,true,false': [nan, 2.7755575615628915e-18], 'false,true': [-4.270088556250602e-18, 2.7755575615628915e-18]}
{'': [0.13888888888888817, -1.0793834961633467e-17], 'true,true': [0.13888888888888817, nan], 'true': [0.13888888888888817, nan]}
{'': [0.13888888888888903, 0.0], 'false': [0.0, nan], 'false,true,false': [-1.1564823173178713e-18, -1.982541115402065e-18], 'false,true': [-2.135044278125301e-18, -5.551115123125783e-18], 'false,true,false,true': [nan, -1.1564823173178713e-18]}
{'': [0.1388888888888892, -7.709882115452476e-18], 'false': [-7.709882115452476e-18, nan], 'false,true,false': [1.1564823173178713e-18, 0.0], 'false,true': [2.135044278125301e-18, 1.3877787807814458e-18], 'false,true,false,true': [nan, 1.1564823173178713e-18]}
{'': [0.13888888888888878, 1.3877787807814457e-17], 'false': [1.3877787807814457e-17, nan], 'true,true': [0.13888888888888878, nan], 'true': [0.13888888888888878, nan]}
{'': [0.1388888888888888, 7.709882115452476e-19], 'false': [7.709882115452476e-19, nan], 'false,true': [1.0675221390626506e-18, -1.3877787807814458e-18]}
{'': [0.13888888888888876, 2.3129646346357427e-18]}
{'': [0.13888888888888878, -1.5419764230904951e-18], 'false': [-1.5419764230904951e-18, nan], 'false,true,false': [-4.440892098500626e-18, 9.912705577010326e-19], 'false,true': [0.0, -3.469446951953614e-18], 'false,true,true': [nan, 0.0]}
{'': [0.1388888888888889, -7.709882115452476e-19], 'false': [-7.709882115452476e-19, nan], 'false,true,false': [nan, 1.3877787807814458e-18], 'false,true': [0.0, 1.3877787807814458e-18]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;movie(F, E), movie(F, A).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;movie(F, E), movie(F, B).;true;true', '3;false,false;genre(E, G), genre(B, G).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;movie(F, E), movie(F, B).;true;true', '4;false,false;genre(E, G), genre(B, G).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;movie(F, E), movie(F, A).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;false;genre(E, F), genre(B, F).;true;true', '8;false,false;movie(H, E), movie(H, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;movie(F, E), movie(F, A).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.12544463852839133;  // std dev = 1,83e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783627;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.09269127618926105;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(A) )
%   | then return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(A), actor(B) )
%   | | | then return -0.08518475138839683;  // std dev = 3,09e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(A), actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1527438580936709;  // std dev = 5,89e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(F, D), movie(F, B) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801095;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13400703000801115;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.06419184008202622;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.992947
   AUC PR    = 0.991385
   CLL	      = -0.122206
   Precision = 0.973988 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986823


Total learning time: 2.877 seconds
Total inference time: 1.339 seconds
AUC ROC: 0.992947


Refined model AUC ROC: 0.992947


Dataset: cora->imdb, Fold: 4, Type: transfer, Time: 00:12:11
{'Recall': 1.0, 'AUC PR': 0.991385, 'Mapping results': {'Generating paths time': 4.39937162399292, 'Finding best mapping': 0.026477575302124023, 'Generating mappings time': 0.07004380226135254, 'Knowledge compiling time': 0.4573705196380615, 'Possible mappings': 126, 'Total time': 4.95327091217041}, 'F1': 0.986823, 'AUC ROC': 0.992947, 'Inference time': 1.339, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.794811, 'F1': 0.885677, 'AUC ROC': 0.87092, 'Inference time': 0.936, 'Precision': [0.794811, 0.5], 'Learning time': 1.659, 'CLL': -0.343872}, 'Precision': [0.973988, 0.5], 'Learning time': 4.536, 'CLL': -0.122206}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
Results
   AUC ROC   = 0.986647
   AUC PR    = 0.973988
   CLL	      = -0.122206
   Precision = 0.973988 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986823


Total learning time: 1.92 seconds
Total inference time: 0.817 seconds
AUC ROC: 0.986647


Dataset: cora->imdb, Fold: 4, Type: scratch, Time: 00:12:14
{'Recall': 1.0, 'AUC PR': 0.973988, 'F1': 0.986823, 'AUC ROC': 0.986647, 'Inference time': 0.817, 'Precision': [0.973988, 0.5], 'Learning time': 1.92, 'CLL': -0.122206}


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false;movie(D, B), movie(D, E).;true;false
1;false,true,false;genre(E, G), genre(A, G).;true;false
1;false,true;movie(F, E), movie(F, A).;false;true
1;false,true,false,true;genre(B, H).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
2;true,false;movie(H, B), movie(H, I).;true;false
2;true,false,true;genre(I, J), genre(A, J).;false;true
2;true,true;movie(C, E).;false;true
2;true;movie(D, A), movie(D, E).;true;true
2;true,true,false;genre(E, F), genre(B, F).;false;true
2;true,true,false,false;genre(E, G), genre(A, G).;false;false
2;true,false,true,false;genre(I, K), genre(B, K).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false;movie(D, A), movie(D, E).;true;false
3;false,true,false;genre(E, G), genre(B, G).;true;false
3;false,true;movie(F, E), movie(F, B).;false;true
3;false,true,false,true;genre(A, H).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,false,true;genre(J, K), genre(A, K).;true;false
4;false,false;movie(I, B), movie(I, J).;true;false
4;false,true;movie(F, E), movie(F, B).;false;true
4;false,false,true,true;genre(B, L).;false;false
4;false,true,false,true;genre(A, H).;false;false
4;false;movie(D, A), movie(D, E).;true;true
4;false,true,false;genre(E, G), genre(B, G).;true;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false,true;genre(L, M), genre(B, M).;false;false
5;false,false;movie(K, B), movie(K, L).;true;false
5;true,true;movie(F, E), movie(F, B).;false;true
5;true;movie(D, A), movie(D, E).;true;false
5;true,true,false;genre(E, G), genre(A, G).;true;false
5;false;movie(I, A), movie(I, J).;false;true
5;true,true,false,true;genre(B, H).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false,false,true;genre(H, I), genre(A, I).;false;true
6;false,false;movie(G, A), movie(G, H).;true;false
6;false,true;movie(F, E), movie(F, A).;false;false
6;false;movie(D, B), movie(D, E).;true;true
6;false,false,true,false;genre(H, J), genre(B, J).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false,true,true;genre(A, G).;false;false
8;false,false;movie(I, B), movie(I, J).;true;false
8;false,true;genre(E, F), genre(B, F).;true;true
8;false,false,true;genre(J, K), genre(B, K).;false;true
8;false;movie(D, A), movie(D, E).;true;true
8;false,true,false;movie(H, E), movie(H, B).;false;false
8;false,false,true,false;genre(J, L), genre(A, L).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false,false,true;genre(J, K), genre(A, K).;false;true
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,true;movie(F, E), movie(F, A).;false;true
9;false,true,false,true;genre(B, H).;false;false
9;false;movie(D, B), movie(D, E).;true;true
9;false,true,false;genre(E, G), genre(A, G).;true;false
9;false,false,true,false;genre(J, L), genre(B, L).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6763307532813305;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5728505077589577;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.45250734201965864;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3427398908536803;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2573771265051454;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return 0.19529825339842172;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then return -0.0851847513883968;  // std dev = 2,24e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15063646694077648;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07877675473109179;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11808890552787839;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09389442014327214;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07554408412491911;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.872404
   AUC PR    = 0.79669
   CLL	      = -0.343345
   Precision = 0.79669 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.886842


Total learning time: 1.941 seconds
Total inference time: 1.186 seconds
AUC ROC: 0.872404


Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [3.49e-08, 35, 0], 'true': [2.86, 10, 45]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,true': [0.0, 29, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 6, 0], 'true': [2.86, 10, 45], 'false,true,false,true': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, E)', 'true': 'movie(D, A), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 35, 0], 'true,true,true': [2.86, 10, 45], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)'}, {'false,true,true': [0.0, 29, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 6, 0], 'true': [2.86, 10, 45], 'false,true,false,true': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)'}, {'false,true,true': [0.0, 29, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [2.63e-09, 6, 0], 'true': [2.86, 10, 45], 'false,true,false,true': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'true,true': 'movie(F, E), movie(F, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false,true': [2.24e-08, 35, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [2.86, 10, 45], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,true': [5.27e-09, 29, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0], 'true': [2.86, 10, 45]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [1.05e-08, 35, 0], 'true': [2.86, 10, 45]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'movie(H, E), movie(H, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'true': [2.86, 10, 45], 'false,true,false,true': [0.0, 28, 0], 'false,true,false,false': [1.86e-09, 6, 0], 'false,true,true,true': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,true': [0.0, 29, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 6, 0], 'true': [2.86, 10, 45], 'false,true,false,true': [0.0, 0, 0]}]
{'': [0.14876033057851296, 3.489272363107635e-17]}
{'': [0.14876033057851185, 6.3441315692866086e-18], 'false': [6.3441315692866086e-18, nan], 'false,true,false': [nan, -2.3129646346357427e-18], 'false,true': [-5.742532885992189e-18, -2.3129646346357427e-18]}
{'': [0.1487603305785119, -1.2688263138573217e-17], 'true,true': [0.1487603305785119, nan], 'true': [0.1487603305785119, nan]}
{'': [0.1487603305785124, -1.5860328923216522e-18], 'false': [-1.5860328923216522e-18, nan], 'false,true,false': [nan, -1.1564823173178713e-18], 'false,true': [0.0, -2.3129646346357427e-18]}
{'': [0.14876033057851232, -6.3441315692866086e-18], 'false': [-6.3441315692866086e-18, nan], 'false,true,false': [nan, 1.1564823173178713e-18], 'false,true': [0.0, 0.0]}
{'': [0.1487603305785126, 1.4274296030894868e-17], 'false': [1.4274296030894868e-17, nan], 'true,true': [0.1487603305785126, nan], 'true': [0.1487603305785126, nan]}
{'': [0.1487603305785126, 0.0], 'false': [0.0, nan], 'false,true': [9.570888143320315e-19, -1.1564823173178713e-18]}
{'': [0.1487603305785124, 3.1720657846433043e-18]}
{'': [0.1487603305785125, -2.3790493384824783e-18], 'false': [-2.3790493384824783e-18, nan], 'false,true,false': [-5.9476233462061954e-18, 5.782411586589357e-19], 'false,true': [0.0, -8.163404592832033e-19], 'false,true,true': [nan, 0.0]}
{'': [0.1487603305785124, -1.5860328923216522e-18], 'false': [-1.5860328923216522e-18, nan], 'false,true,false': [nan, -5.782411586589357e-19], 'false,true': [-4.785444071660157e-19, -5.782411586589357e-19]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;movie(F, E), movie(F, A).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;movie(F, E), movie(F, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;movie(F, E), movie(F, B).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;movie(F, E), movie(F, A).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;false;genre(E, F), genre(B, F).;true;true', '8;false,false;movie(H, E), movie(H, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;movie(F, E), movie(F, A).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.12544463852839136;  // std dev = 1,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.092691276189261;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then return -0.08518475138839686;  // std dev = 2,08e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.08518475138839687;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109172;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(A) )
%   | then return -0.07324622576333704;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07324622576333704;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( movie(F, D), movie(F, B) )
%   | | then return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202619;  // std dev = 1,61e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.986647
   AUC PR    = 0.973988
   CLL	      = -0.122206
   Precision = 0.973988 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986823


Total learning time: 3.334 seconds
Total inference time: 1.418 seconds
AUC ROC: 0.986647


Refined model AUC ROC: 0.986647


Dataset: cora->imdb, Fold: 5, Type: transfer, Time: 00:12:28
{'Recall': 1.0, 'AUC PR': 0.973988, 'Mapping results': {'Generating paths time': 4.338152170181274, 'Finding best mapping': 0.026148080825805664, 'Generating mappings time': 0.06980228424072266, 'Knowledge compiling time': 0.44826269149780273, 'Possible mappings': 126, 'Total time': 4.88237190246582}, 'F1': 0.986823, 'AUC ROC': 0.986647, 'Inference time': 1.418, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.79669, 'F1': 0.886842, 'AUC ROC': 0.872404, 'Inference time': 1.186, 'Precision': [0.79669, 0.5], 'Learning time': 1.941, 'CLL': -0.343345}, 'Precision': [0.973988, 0.5], 'Learning time': 5.275, 'CLL': -0.122206}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1352095945470413;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14656735148626743;  // std dev = 0,086, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( female(A) )
%   | then return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.1288676370195173;  // std dev = 0,215, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
Results
   AUC ROC   = 0.992472
   AUC PR    = 0.990625
   CLL	      = -0.241338
   Precision = 0.864103 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.927098


Total learning time: 2.337 seconds
Total inference time: 0.826 seconds
AUC ROC: 0.992472


Dataset: cora->imdb, Fold: 5, Type: scratch, Time: 00:12:31
{'Recall': 1.0, 'AUC PR': 0.990625, 'F1': 0.927098, 'AUC ROC': 0.992472, 'Inference time': 0.826, 'Precision': [0.864103, 0.5], 'Learning time': 2.337, 'CLL': -0.241338}


Start learning from source dataset


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then return 0.35814893509950774;  // std dev = 0,500, 704,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=352 */
%   else if ( interaction(A, A) )
%   | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(D, A) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( interaction(E, D) )
%   | | | | then if ( interaction(E, E) )
%   | | | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else if ( interaction(A, F) )
%   | | | | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else if ( function(A, G), function(D, G) )
%   | | | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( enzyme(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.3087411357856357;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.3087411357856355;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( complex(A, E) )
%   | | then return 0.308741135785636;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0.3087411357856355;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, F) )
%   | | then return 0.3087411357856372;  // std dev = 0,500, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.30874113578563517;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.3087411357856376;  // std dev = 0,500, 184,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=92 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.30874113578563755;  // std dev = 0,500, 166,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=83 */
%   | | else return 0.30874113578563755;  // std dev = 0,500, 174,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( complex(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then if ( complex(E, C), enzyme(E, F) )
%   | | | then return 0.2564123687585871;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.25641236875858725;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.2564123687585871;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2564123687585871;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( location(A, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.2564123687585872;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.25641236875858725;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( phenotype(A, K) )
%   | then return 0.25641236875858875;  // std dev = 0,500, 370,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=185 */
%   | else return 0.25641236875858875;  // std dev = 0,500, 320,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=160 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( location(A, C) )
%   | then if ( enzyme(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.20613740734454034;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.20613740734454034;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, F) )
%   | | | then if ( phenotype(A, G) )
%   | | | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | | | then return 0.20613740734454034;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0.20613740734454034;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | | else return 0.20613740734454034;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else if ( interaction(A, J), complex(J, K) )
%   | | | | then return 0.20613740734454034;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.20613740734454034;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.20613740734453967;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0.20613740734453145;  // std dev = 0,500, 690,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=345 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, C) )
%   | then if ( interaction(C, A) )
%   | | then return 0.16162857548414777;  // std dev = 0,500, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | else if ( interaction(D, A) )
%   | | | then if ( interaction(A, D) )
%   | | | | then return 0.1616285754841486;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | | else return 0.16162857548414836;  // std dev = 0,500, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else if ( enzyme(C, E) )
%   | | | | then return 0.1616285754841486;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | | else return 0.16162857548414863;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( interaction(C, A) )
%   | | then return 0.16162857548414916;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else return 0.1616285754841499;  // std dev = 0,500, 184,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=92 */
%   else if ( phenotype(A, F) )
%   | then return 0.16162857548414997;  // std dev = 0,500, 166,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=83 */
%   | else return 0.16162857548414994;  // std dev = 0,500, 174,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A) )
%   | then return 0.12455597792081831;  // std dev = 0,500, 616,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=308 */
%   | else return 0.12455597792082078;  // std dev = 0,500, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   else if ( interaction(A, A) )
%   | then return 0.12455597792081939;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(E, F) )
%   | | | then if ( interaction(A, F) )
%   | | | | then return 0.1245559779208201;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else if ( interaction(F, E) )
%   | | | | | then return 0.12455597792081974;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0.12455597792081964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12455597792081974;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.12455597792081974;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12455597792081978;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( location(A, C) )
%   | then if ( complex(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.09492800936730728;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | | then return 0.09492800936730748;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.09492800936730748;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, H) )
%   | | | then if ( phenotype(A, I) )
%   | | | | then return 0.09492800936730748;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.0949280093673075;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( interaction(A, J), complex(J, K) )
%   | | | | then return 0.0949280093673075;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.0949280093673075;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.0949280093673065;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0.09492800936731301;  // std dev = 0,500, 690,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=345 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.07186088850055918;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.07186088850055933;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0.07186088850055938;  // std dev = 0,500, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.0718608885005589;  // std dev = 0,500, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | | else return 0.07186088850055869;  // std dev = 0,500, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | else return 0.07186088850055845;  // std dev = 0,500, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   else if ( complex(A, E) )
%   | then return 0.07186088850055924;  // std dev = 0,500, 108,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=54 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.07186088850055919;  // std dev = 0,500, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | else return 0.07186088850055904;  // std dev = 0,500, 130,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=65 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.054183073759547264;  // std dev = 0,500, 398,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=199 */
%   else if ( location(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then if ( complex(A, G) )
%   | | | | then return 0.05418307375954919;  // std dev = 0,500, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | | else return 0.0541830737595492;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.05418307375954959;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   | | else if ( complex(A, H) )
%   | | | then if ( enzyme(A, I) )
%   | | | | then return 0.054183073759549207;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | | else return 0.054183073759549207;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.05418307375954949;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.05418307375954767;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.05418307375954767;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A) )
%   | then return 0.040760253233058805;  // std dev = 0,500, 616,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=308 */
%   | else return 0.04076025323305639;  // std dev = 0,500, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   else if ( enzyme(A, E) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.040760253233055724;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04076025323305521;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.040760253233055085;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.040760253233056015;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( interaction(H, I) )
%   | | | | then return 0.04076025323305521;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.04076025323305521;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.04076025323305509;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */


Predicates from source: ['proteinclass(protein,class).', 'complex(protein,com).', 'interaction(protein,protein).', 'function(protein,fun).', 'enzyme(protein,enz).', 'location(protein,loc).', 'phenotype(protein,phe).'] 



Best mapping found: ['proteinclass(A,B) -> tweets(A,B)', 'phenotype(A,B) -> follows(A,B)', 'enzyme(A,B) -> follows(A,B)', 'function(A,B) -> accounttype(A,B)', 'interaction(A,B) -> follows(B,A)', 'complex(A,B) -> follows(A,B)', 'location(A,B) -> follows(A,B)'] 

Transferred target predicate: tweets 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;tweets(A, B) :- follows(A, C).;false;true
0;false,false,true;follows(D, D).;false;true
0;false,false;follows(A, D).;true;false
0;false,false,true,false,true,false;follows(F, A).;false;false
0;false;follows(A, A).;false;true
0;false,false,true,false,false;accounttype(A, G), accounttype(D, G).;false;false
0;false,false,true,false,true;follows(E, E).;false;true
0;false,false,true,false;follows(D, E).;true;true
1;;tweets(A, B) :- follows(A, A).;true;true
1;true,false;follows(A, E).;false;false
1;false,false;follows(A, G).;false;false
1;true,true;follows(A, D).;false;false
1;true;follows(A, C).;true;true
1;false;follows(F, A).;true;true
1;false,true;follows(F, F).;false;true
1;false,true,false;follows(A, F).;false;false
2;;tweets(A, B) :- follows(A, A).;true;true
2;true,false;follows(A, I).;true;false
2;true,false,true;follows(A, J).;false;false
2;true,true;follows(A, D).;true;true
2;true;follows(A, C).;true;true
2;true,true,false;follows(A, G), follows(G, H).;false;false
2;false;follows(A, K).;false;false
2;true,true,true;follows(E, C), follows(E, F).;false;false
3;;tweets(A, B) :- follows(A, A).;true;false
3;true,true;follows(A, D).;true;true
3;true;follows(A, C).;true;false
3;true,true,false,false;follows(J, A), follows(J, K).;false;false
3;true,true,false;follows(A, F).;true;true
3;true,true,false,true,true;follows(H, A), follows(H, I).;false;false
3;true,true,true;follows(A, E).;false;false
3;true,true,false,true;follows(A, G).;true;false
4;;tweets(A, B) :- follows(C, A).;true;true
4;true,false;follows(A, C).;false;false
4;true,true;follows(A, C).;false;true
4;true;follows(C, C).;true;true
4;true,true,false,false;follows(C, E).;false;false
4;true,true,false;follows(A, D).;true;true
4;false;follows(A, F).;false;false
4;true,true,false,true;follows(D, A).;false;false
5;;tweets(A, B) :- follows(A, C).;true;true
5;false,false,true;follows(F, E).;true;false
5;false,false;follows(E, A).;true;true
5;true;follows(A, D).;false;false
5;false,false,true,true;follows(F, A).;false;true
5;false,false,false;follows(A, G).;false;false
5;false;follows(A, A).;false;true
5;false,false,true,true,false;follows(E, F).;false;false
6;;tweets(A, B) :- follows(A, A).;true;false
6;true,true;follows(A, D).;true;true
6;true;follows(A, C).;true;false
6;true,true,false;follows(A, H).;true;true
6;true,true,true,false;follows(A, F), follows(F, G).;false;false
6;true,true,false,false;follows(J, A), follows(J, K).;false;false
6;true,true,true;follows(A, E).;false;true
6;true,true,false,true;follows(A, I).;false;false
7;;tweets(A, B) :- follows(C, A).;true;true
7;true,false;follows(D, C).;true;false
7;true,false,true;follows(D, A).;false;false
7;true,true;follows(C, C).;true;false
7;true;follows(A, C).;true;true
7;false;follows(A, E).;false;true
7;true,true,true;follows(A, A).;false;false
7;false,false;follows(A, F).;false;false
8;;tweets(A, B) :- follows(C, A).;false;true
8;false,true,true;follows(A, F).;true;false
8;false,false;follows(A, J).;false;false
8;false,true;follows(A, E).;true;true
8;false,true,false,true;follows(A, I).;false;false
8;false;follows(A, D).;true;true
8;false,true,false;follows(A, H).;true;false
8;false,true,true,true;follows(A, G).;false;false
9;;tweets(A, B) :- follows(A, C).;true;true
9;false,true,true;follows(A, G).;false;false
9;false,false;follows(H, A).;true;false
9;true;follows(A, D).;false;false
9;false,false,true;follows(A, H).;false;true
9;false;follows(A, E).;true;true
9;false,true;follows(F, A).;true;false
9;false,false,true,false;follows(I, H).;false;false
WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then return 0.35814893509950746;  // std dev = 17,321, 1.200,000 (wgt'ed) examples reached here.  /* #neg=600 #pos=600 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3581489350995135;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, C) )
%   | | | then return 0.3087411357856261;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | | | else return 0.3087411357856375;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | else if ( follows(A, D) )
%   | | then return 0.30874113578563733;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, C) )
%   | then return 0.25641236875856865;  // std dev = 17,321, 1.200,000 (wgt'ed) examples reached here.  /* #neg=600 #pos=600 */
%   | else return 0.2564123687585881;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.20613740734455446;  // std dev = 18,358, 1.348,000 (wgt'ed) examples reached here.  /* #neg=674 #pos=674 */
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, C) )
%   | | then return 0.1616285754841449;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | | else return 0.1616285754841453;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   else if ( follows(A, D) )
%   | then return 0.16162857548414916;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(A, D) )
%   | then return 0.12455597792081839;  // std dev = 17,321, 1.200,000 (wgt'ed) examples reached here.  /* #neg=600 #pos=600 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(E, A) )
%   | | then if ( follows(F, E) )
%   | | | then if ( follows(F, A) )
%   | | | | then return 0.12455597792081392;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.09492800936731728;  // std dev = 18,358, 1.348,000 (wgt'ed) examples reached here.  /* #neg=674 #pos=674 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.07186088850056575;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | else if ( follows(D, C) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.07186088850055238;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | | else return 0.07186088850055776;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else return 0.07186088850055791;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( follows(A, E) )
%   | then return 0.07186088850055698;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then return 0.054183073759547895;  // std dev = 17,436, 1.216,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=608 */
%   else if ( follows(A, D) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(A, F) )
%   | | | then if ( follows(A, G) )
%   | | | | then return 0.05418307375954854;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(A, D) )
%   | then return 0.04076025323305321;  // std dev = 17,321, 1.200,000 (wgt'ed) examples reached here.  /* #neg=600 #pos=600 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(F, A) )
%   | | then if ( follows(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( follows(G, F) )
%   | | | | then return 0.040760253233052754;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.697046
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 235.05700000000002 seconds
Total inference time: 1.265 seconds
AUC ROC: 0.5


Structure after Parameter Learning
['tweets(A, B)', {'': 'follows(A, C)', 'false': 'follows(A, A)', 'false,false': 'follows(A, D)'}, {'false,true': [0.0, 0, 0], 'false,false,false': [6.083, 74, 74], 'true': [17.321, 600, 600], 'false,false,true': [0.0, 0, 0]}]
['tweets(A, B)', {'': 'follows(A, A)', 'false': 'follows(C, A)', 'false,false': 'follows(A, D)', 'false,true,false': 'follows(A, C)', 'false,true': 'follows(C, C)'}, {'false,false,true': [5.745, 66, 66], 'true': [0.0, 0, 0], 'false,true,false,true': [15.922, 507, 507], 'false,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [7.106, 101, 101]}]
['tweets(A, B)', {'': 'follows(A, A)', 'false': 'follows(A, C)'}, {'false,true': [17.321, 600, 600], 'false,false': [6.083, 74, 74], 'true': [0.0, 0, 0]}]
['tweets(A, B)', {'': 'follows(A, A)'}, {'false': [18.358, 674, 674], 'true': [0.0, 0, 0]}]
['tweets(A, B)', {'': 'follows(C, A)', 'true,false': 'follows(A, C)', 'false': 'follows(A, D)', 'true': 'follows(C, C)'}, {'false,false': [0.0, 0, 0], 'true,false,true': [15.922, 507, 507], 'true,true': [0.0, 0, 0], 'false,true': [5.745, 66, 66], 'true,false,false': [7.106, 101, 101]}]
['tweets(A, B)', {'': 'follows(A, C)', 'false,false,true': 'follows(F, E)', 'false,false': 'follows(E, A)', 'true': 'follows(A, D)', 'false,false,true,true': 'follows(F, A)', 'false': 'follows(A, A)'}, {'true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [17.321, 600, 600], 'false,true': [0.0, 0, 0], 'false,false,true,true,true': [6.083, 74, 74], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true,false': [0.0, 0, 0]}]
['tweets(A, B)', {'': 'follows(A, A)'}, {'false': [18.358, 674, 674], 'true': [0.0, 0, 0]}]
['tweets(A, B)', {'': 'follows(C, A)', 'true,false': 'follows(D, C)', 'true,false,true': 'follows(D, A)', 'true,true': 'follows(C, C)', 'true': 'follows(A, C)', 'false': 'follows(A, E)'}, {'true,false,true,false': [2.915, 17, 17], 'false,false': [0.0, 0, 0], 'false,true': [5.745, 66, 66], 'true,false,true,true': [6.083, 74, 74], 'true,true,false': [15.922, 507, 507], 'true,false,false': [2.236, 10, 10], 'true,true,true': [0.0, 0, 0]}]
['tweets(A, B)', {'': 'follows(C, A)', 'false': 'follows(A, D)', 'false,true': 'follows(A, E)', 'false,true,true': 'follows(A, F)', 'false,true,true,true': 'follows(A, G)'}, {'false,true,true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true': [17.436, 608, 608], 'false,true,true,true,true': [5.745, 66, 66], 'false,true,false': [0.0, 0, 0]}]
['tweets(A, B)', {'': 'follows(A, C)', 'false,false,true': 'follows(A, F)', 'false,false': 'follows(F, A)', 'true': 'follows(A, D)', 'false': 'follows(A, E)', 'false,false,true,false': 'follows(G, F)'}, {'true,false': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'true,true': [17.321, 600, 600], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,false,true': [6.083, 74, 74]}]
{'': [0.24999999999999284, 0.24999999999999947], 'false': [nan, 0.24999999999999947], 'false,false': [nan, 0.24999999999999947]}
{'': [nan, 0.2500000000000011], 'false': [0.25000000000000727, 0.2499999999999986], 'false,false': [0.2499999999999986, nan], 'false,true,false': [0.25000000000000844, 0.250000000000001], 'false,true': [nan, 0.25000000000000727]}
{'': [nan, 0.24999999999999986], 'false': [0.2500000000000008, 0.24999999999999986]}
{'': [nan, 0.2500000000000039]}
{'': [0.2499999999999899, 0.24999999999999983], 'false': [0.24999999999999983, nan], 'true': [nan, 0.2499999999999899], 'true,false': [0.24999999999999517, 0.24999999999999845]}
{'': [0.25000000000000494, 0.2500000000000005], 'false,false,true': [0.2500000000000005, nan], 'false,false': [0.2500000000000005, nan], 'true': [0.25000000000000494, nan], 'false,false,true,true': [0.2500000000000005, nan], 'false': [nan, 0.2500000000000005]}
{'': [nan, 0.2500000000000081]}
{'': [0.24999999999999947, 0.2500000000000005], 'true,false': [0.24999999999999983, 0.24999999999999994], 'true,false,true': [0.25000000000000017, 0.25], 'true,true': [nan, 0.25000000000000094], 'true': [0.25000000000000094, 0.24999999999999972], 'false': [0.2500000000000005, nan]}
{'': [0.2500000000000059, 0.25000000000000067], 'false': [0.25000000000000067, nan], 'false,true': [0.25000000000000067, nan], 'false,true,true': [0.25000000000000067, nan], 'false,true,true,true': [0.25000000000000067, nan]}
{'': [0.24999999999999417, 0.24999999999999953], 'false,false,true': [nan, 0.24999999999999953], 'false,false': [0.24999999999999953, nan], 'true': [0.24999999999999417, nan], 'false': [nan, 0.24999999999999953], 'false,false,true,false': [0.24999999999999953, nan]}
******************************************
Performing Theory Revision
******************************************
Transfer was not sufficient.
Error in experiment of yeast->twitter


Start learning from source dataset


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D) )
%   | then if ( follows(D, A) )
%   | | then if ( tweets(D, C) )
%   | | | then if ( follows(D, E), follows(E, A) )
%   | | | | then if ( tweets(E, C) )
%   | | | | | then if ( follows(E, D) )
%   | | | | | | then return 0.35814893509951157;  // std dev = 0,500, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   | | | | | | else return 0.35814893509951234;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | | | else return 0.35814893509951234;  // std dev = 0,500, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | | else if ( follows(A, F), follows(F, D) )
%   | | | | | then return 0.35814893509951135;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | | | else return 0.35814893509951234;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.3581489350995123;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.3581489350995129;  // std dev = 0,500, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | else return 0.3581489350995113;  // std dev = 0,500, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0.35814893509951345;  // std dev = 0,500, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A) )
%   | then if ( tweets(D, C) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.3087411357856377;  // std dev = 0,500, 276,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=138 */
%   | | | else if ( follows(A, E) )
%   | | | | then return 0.3087411357856347;  // std dev = 0,500, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | | else return 0.3087411357856348;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else return 0.30874113578563506;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( follows(A, F) )
%   | | then if ( follows(F, G) )
%   | | | then if ( follows(A, G) )
%   | | | | then return 0.3087411357856348;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | | else return 0.3087411357856347;  // std dev = 0,500, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.30874113578563483;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.3087411357856351;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0.3087411357856373;  // std dev = 0,500, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then return 0.25641236875858875;  // std dev = 0,500, 424,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=212 */
%   else if ( follows(A, D) )
%   | then if ( follows(D, A) )
%   | | then if ( follows(D, E), follows(E, A) )
%   | | | then return 0.2564123687585856;  // std dev = 0,500, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else if ( follows(A, F), follows(D, F) )
%   | | | | then return 0.2564123687585856;  // std dev = 0,500, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | | else return 0.2564123687585858;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( follows(D, G) )
%   | | | then if ( follows(A, G) )
%   | | | | then return 0.25641236875858564;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | | else return 0.2564123687585856;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.2564123687585857;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( follows(H, A) )
%   | | then return 0.2564123687585858;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.2564123687585857;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.20613740734454167;  // std dev = 0,500, 352,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=176 */
%   | else if ( follows(C, D) )
%   | | then if ( follows(A, D) )
%   | | | then if ( follows(D, C) )
%   | | | | then return 0.20613740734453886;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | | else return 0.20613740734453936;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.20613740734453875;  // std dev = 0,500, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | else return 0.20613740734453892;  // std dev = 0,500, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   else if ( tweets(A, E) )
%   | then if ( follows(F, A) )
%   | | then return 0.2061374073445397;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else return 0.20613740734453945;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( follows(G, A) )
%   | | then return 0.2061374073445391;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.20613740734453925;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.16162857548414433;  // std dev = 0,500, 352,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=176 */
%   | else if ( follows(C, D) )
%   | | then return 0.16162857548414683;  // std dev = 0,500, 108,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=54 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.16162857548414625;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else if ( tweets(A, F) )
%   | | | | then return 0.16162857548414628;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | | else return 0.16162857548414625;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( tweets(A, G) )
%   | then if ( follows(H, A) )
%   | | then return 0.16162857548414608;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else return 0.1616285754841464;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( follows(I, A) )
%   | | then return 0.16162857548414622;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.16162857548414605;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A) )
%   | then if ( tweets(D, C) )
%   | | then if ( follows(A, D) )
%   | | | then if ( follows(D, E), follows(E, A) )
%   | | | | then if ( tweets(E, C) )
%   | | | | | then if ( follows(E, D) )
%   | | | | | | then if ( follows(A, E) )
%   | | | | | | | then return 0.12455597792081893;  // std dev = 0,500, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | | | | | | | else return 0.12455597792081885;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | | | | else return 0.12455597792081856;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | | | else return 0.12455597792081877;  // std dev = 0,500, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | | else return 0.12455597792081817;  // std dev = 0,500, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return 0.12455597792081967;  // std dev = 0,500, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | | else return 0.12455597792081921;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.12455597792081956;  // std dev = 0,500, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   else return 0.12455597792082043;  // std dev = 0,500, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then return 0.0949280093673078;  // std dev = 0,500, 432,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=216 */
%   else if ( follows(A, D) )
%   | then if ( follows(D, E) )
%   | | then if ( follows(E, D) )
%   | | | then if ( follows(A, E) )
%   | | | | then return 0.09492800936730639;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | | else if ( tweets(A, F) )
%   | | | | | then return 0.09492800936730639;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | | | else return 0.09492800936730632;  // std dev = 0,500, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.09492800936730626;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.09492800936730643;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.09492800936730632;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( tweets(A, H) )
%   | | then return 0.09492800936730661;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.09492800936730632;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( tweets(A, D) )
%   | | then if ( tweets(C, D) )
%   | | | then if ( follows(C, E), follows(E, A) )
%   | | | | then if ( tweets(E, D) )
%   | | | | | then if ( follows(E, C) )
%   | | | | | | then return 0.07186088850055895;  // std dev = 0,500, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   | | | | | | else if ( follows(E, F), follows(F, A) )
%   | | | | | | | then return 0.0718608885005576;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | | else return 0.07186088850055761;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | | | else return 0.07186088850055757;  // std dev = 0,500, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | | else return 0.07186088850055815;  // std dev = 0,500, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return 0.07186088850055805;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.07186088850055758;  // std dev = 0,500, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else return 0.07186088850055836;  // std dev = 0,500, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   else return 0.07186088850055884;  // std dev = 0,500, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.054183073759546896;  // std dev = 0,500, 352,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=176 */
%   | else if ( follows(C, D) )
%   | | then return 0.05418307375954927;  // std dev = 0,500, 108,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=54 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.05418307375954879;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else if ( tweets(A, F) )
%   | | | | then return 0.05418307375954893;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | | else return 0.05418307375954878;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( follows(G, A) )
%   | then if ( tweets(A, H) )
%   | | then return 0.054183073759549144;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else return 0.05418307375954856;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( tweets(A, I) )
%   | | then return 0.05418307375954901;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.05418307375954878;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( tweets(A, D) )
%   | | then if ( tweets(C, D) )
%   | | | then if ( follows(C, E), follows(E, A) )
%   | | | | then return 0.040760253233054794;  // std dev = 0,500, 200,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=100 */
%   | | | | else return 0.040760253233056376;  // std dev = 0,500, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return 0.04076025323305636;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.040760253233056355;  // std dev = 0,500, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else return 0.04076025323305566;  // std dev = 0,500, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   else if ( follows(F, A) )
%   | then if ( tweets(A, G) )
%   | | then return 0.04076025323305629;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else return 0.04076025323305555;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( tweets(A, H) )
%   | | then return 0.04076025323305599;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.04076025323305567;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */


Predicates from source: ['accounttype(account,type).', 'tweets(account,word).', 'follows(account,account).'] 



Best mapping found: ['tweets(A,B) -> function(A,B)', 'accounttype(A,B) -> complex(A,B)', 'follows(A,B) -> interaction(A,B)'] 

Transferred target predicate: complex 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;complex(A, B) :- function(A, C).;true;false
0;true,true,true,true;interaction(D, E), interaction(E, A).;true;true
0;true,true;interaction(D, A).;true;false
0;true;interaction(A, D).;true;false
0;true,true,true,true,true,true;interaction(E, D).;false;false
0;true,true,true,true,false;interaction(A, F), interaction(F, D).;false;false
0;true,true,true;function(D, C).;true;false
0;true,true,true,true,true;function(E, C).;true;false
1;;complex(A, B) :- function(A, C).;true;false
1;true,false;interaction(A, F).;true;false
1;true,false,true;interaction(F, G).;true;false
1;true,true;function(D, C).;true;false
1;true;interaction(D, A).;true;true
1;true,false,true,true;interaction(A, G).;false;false
1;true,true,true,false;interaction(A, E).;false;false
1;true,true,true;interaction(A, D).;false;true
2;;complex(A, B) :- function(A, C).;false;true
2;false,true,true;interaction(D, E), interaction(E, A).;false;true
2;false,false;interaction(H, A).;false;false
2;false,true,true,false;interaction(A, F), interaction(D, F).;false;false
2;false,true;interaction(D, A).;true;true
2;false,true,false,true;interaction(A, G).;false;false
2;false;interaction(A, D).;true;true
2;false,true,false;interaction(D, G).;true;false
3;;complex(A, B) :- interaction(A, C).;true;true
3;true,false;interaction(C, D).;true;false
3;true,false,true;interaction(A, D).;true;false
3;true;interaction(C, A).;false;true
3;true,false,true,true;interaction(D, C).;false;false
3;false;function(A, E).;true;true
3;false,true;interaction(F, A).;false;false
3;false,false;interaction(G, A).;false;false
4;;complex(A, B) :- interaction(A, C).;true;true
4;true,false;interaction(C, D).;false;true
4;false,false;interaction(I, A).;false;false
4;true;interaction(C, A).;false;true
4;true,false,false,false;function(A, F).;false;false
4;false;function(A, G).;true;true
4;false,true;interaction(H, A).;false;false
4;true,false,false;interaction(E, A).;false;true
5;;complex(A, B) :- function(A, C).;true;false
5;true,true,true,true;interaction(D, E), interaction(E, A).;true;false
5;true,true;function(D, C).;true;false
5;true;interaction(D, A).;true;false
5;true,true,true,true,true,true;interaction(E, D).;true;false
5;true,true,true,true,true,true,true;interaction(A, E).;false;false
5;true,true,true;interaction(A, D).;true;false
5;true,true,true,true,true;function(E, C).;true;false
6;;complex(A, B) :- interaction(C, A).;false;true
6;false,true,true;interaction(E, D).;true;false
6;false,false;function(A, H).;false;false
6;false,true;interaction(D, E).;true;true
6;false,true,true,true,false;function(A, F).;false;false
6;false;interaction(A, D).;true;true
6;false,true,false;function(A, G).;false;false
6;false,true,true,true;interaction(A, E).;false;true
7;;complex(A, B) :- interaction(C, A).;true;false
7;true,true,true,true;interaction(C, E), interaction(E, A).;true;false
7;true,true;function(A, D).;true;false
7;true;interaction(A, C).;true;false
7;true,true,true,true,true,true;interaction(E, C).;false;true
7;true,true,true;function(C, D).;true;false
7;true,true,true,true,true;function(E, D).;true;false
7;true,true,true,true,true,true,false;interaction(E, F), interaction(F, A).;false;false
8;;complex(A, B) :- interaction(A, C).;true;true
8;true,false;interaction(C, D).;false;true
8;false,false;function(A, I).;false;false
8;true;interaction(C, A).;false;true
8;true,false,false,false;function(A, F).;false;false
8;false;interaction(G, A).;true;true
8;false,true;function(A, H).;false;false
8;true,false,false;interaction(E, A).;false;true
9;;complex(A, B) :- interaction(A, C).;true;true
9;true,true,true,true;interaction(C, E), interaction(E, A).;false;false
9;false,false;function(A, H).;false;false
9;true,true;function(A, D).;true;false
9;true;interaction(C, A).;true;false
9;false;interaction(F, A).;true;true
9;false,true;function(A, G).;false;false
9;true,true,true;function(C, D).;true;false
WILL Produced-Tree #1
% FOR complex(A, B):
%   if ( function(A, C) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(D, A) )
%   | | then if ( function(D, C) )
%   | | | then if ( interaction(D, E), interaction(E, A) )
%   | | | | then if ( function(E, C) )
%   | | | | | then if ( interaction(E, D) )
%   | | | | | | then return 0.35814893509951146;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else if ( interaction(A, F), interaction(F, D) )
%   | | | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.35814893509951157;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | else return 0.3581489350995132;  // std dev = 5,000, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR complex(A, B):
%   if ( function(A, C) )
%   then if ( interaction(D, A) )
%   | then if ( function(D, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3087411357856347;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else if ( interaction(A, E) )
%   | | | | then return 0.3087411357856348;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | | else return 0.3087411357856347;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else return 0.3087411357856347;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G) )
%   | | | then if ( interaction(A, G) )
%   | | | | then return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | | else return 0.3087411357856351;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3087411357856351;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR complex(A, B):
%   if ( function(A, C) )
%   then return 0.2564123687585885;  // std dev = 7,746, 240,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=120 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.20613740734453895;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then if ( interaction(D, C) )
%   | | | | then return 0.20613740734453945;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | | else return 0.20613740734453945;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.20613740734453945;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.20613740734453928;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( function(A, E) )
%   | then if ( interaction(F, A) )
%   | | then return 0.20613740734453923;  // std dev = 5,000, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.1616285754841467;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( interaction(C, D) )
%   | | then return 0.16162857548414625;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.16162857548414644;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else if ( function(A, F) )
%   | | | | then return 0.16162857548414644;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, G) )
%   | then if ( interaction(H, A) )
%   | | then return 0.16162857548414716;  // std dev = 5,000, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR complex(A, B):
%   if ( function(A, C) )
%   then if ( interaction(D, A) )
%   | then if ( function(D, C) )
%   | | then if ( interaction(A, D) )
%   | | | then if ( interaction(D, E), interaction(E, A) )
%   | | | | then if ( function(E, C) )
%   | | | | | then if ( interaction(E, D) )
%   | | | | | | then if ( interaction(A, E) )
%   | | | | | | | then return 0.12455597792081935;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return 0.12455597792081952;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | | | else return 0.12455597792081952;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.1245559779208194;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.12455597792082017;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | else return 0.12455597792081903;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | else return 0.12455597792081968;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then return 0.09492800936730751;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E) )
%   | | then if ( interaction(E, D) )
%   | | | then if ( interaction(A, E) )
%   | | | | then return 0.09492800936730661;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | | else if ( function(A, F) )
%   | | | | | then return 0.09492800936730661;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09492800936730661;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( function(A, G) )
%   | | | then return 0.09492800936730661;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( function(A, D) )
%   | | then if ( function(C, D) )
%   | | | then if ( interaction(C, E), interaction(E, A) )
%   | | | | then if ( function(E, D) )
%   | | | | | then if ( interaction(E, C) )
%   | | | | | | then return 0.07186088850055841;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | | | | else if ( interaction(E, F), interaction(F, A) )
%   | | | | | | | then return 0.07186088850055825;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return 0.07186088850055826;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.07186088850055826;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.07186088850055898;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   else return 0.0718608885005585;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
WILL Produced-Tree #9
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.054183073759549456;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( interaction(C, D) )
%   | | then return 0.05418307375954934;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.05418307375954888;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else if ( function(A, F) )
%   | | | | then return 0.054183073759549234;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then if ( function(A, H) )
%   | | then return 0.05418307375954887;  // std dev = 5,000, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( function(A, D) )
%   | | then if ( function(C, D) )
%   | | | then if ( interaction(C, E), interaction(E, A) )
%   | | | | then return 0.040760253233056314;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | | else return 0.04076025323305599;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.04076025323305624;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   else if ( interaction(F, A) )
%   | then if ( function(A, G) )
%   | | then return 0.040760253233055856;  // std dev = 5,000, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695978
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.623 seconds
Total inference time: 1.849 seconds
AUC ROC: 0.5


Structure after Parameter Learning
['complex(A, B)', {'': 'function(A, C)', 'true,true,true,true': 'interaction(D, E), interaction(E, A)', 'true,true': 'interaction(D, A)', 'true': 'interaction(A, D)', 'true,true,true,true,true,true': 'interaction(E, D)', 'true,true,true,true,false': 'interaction(A, F), interaction(F, D)', 'true,true,true': 'function(D, C)', 'true,true,true,true,true': 'function(E, C)'}, {'true,false': [5.0, 50, 50], 'false': [0.0, 0, 0], 'true,true,true,true,false,true': [0.707, 1, 1], 'true,true,false': [4.416, 39, 39], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true,true,true,true': [3.317, 22, 22], 'true,true,true,true,false,false': [1.581, 5, 5], 'true,true,true,true,true,false': [1.0, 2, 2], 'true,true,true,true,true,true,false': [0.707, 1, 1]}]
['complex(A, B)', {'': 'function(A, C)', 'true,false': 'interaction(A, F)', 'true,false,true': 'interaction(F, G)', 'true,true': 'function(D, C)', 'true': 'interaction(D, A)', 'true,false,true,true': 'interaction(A, G)', 'true,true,true,false': 'interaction(A, E)', 'true,true,true': 'interaction(A, D)'}, {'true,true,true,true': [3.937, 31, 31], 'true,false,true,false': [1.414, 4, 4], 'true,true,false': [3.536, 25, 25], 'true,false,true,true,false': [1.225, 3, 3], 'true,true,true,false,false': [3.937, 31, 31], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true,true': [1.581, 5, 5], 'true,true,true,false,true': [3.24, 21, 21]}]
['complex(A, B)', {'': 'function(A, C)'}, {'false': [0.0, 0, 0], 'true': [7.746, 120, 120]}]
['complex(A, B)', {'': 'interaction(A, C)', 'true,false': 'interaction(C, D)', 'true,false,true': 'interaction(A, D)', 'true': 'interaction(C, A)', 'true,false,true,true': 'interaction(D, C)', 'false': 'function(A, E)', 'false,true': 'interaction(F, A)'}, {'true,false,true,true,false': [1.732, 6, 6], 'false,false': [0.0, 0, 0], 'true,true': [3.937, 31, 31], 'true,false,true,false': [2.121, 9, 9], 'false,true,true': [5.0, 50, 50], 'true,false,false': [2.55, 13, 13], 'false,true,false': [0.0, 0, 0], 'true,false,true,true,true': [2.345, 11, 11]}]
['complex(A, B)', {'': 'interaction(A, C)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)', 'true,false,false,false': 'function(A, F)', 'false': 'function(A, G)', 'false,true': 'interaction(H, A)', 'true,false,false': 'interaction(E, A)'}, {'true,false,true': [3.606, 26, 26], 'true,true': [3.937, 31, 31], 'true,false,false,false,false': [0.0, 0, 0], 'true,false,false,false,true': [1.414, 4, 4], 'false,true,true': [5.0, 50, 50], 'true,false,false,true': [2.121, 9, 9], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['complex(A, B)', {'': 'function(A, C)', 'true,true,true,true': 'interaction(D, E), interaction(E, A)', 'true,true': 'function(D, C)', 'true': 'interaction(D, A)', 'true,true,true,true,true,true': 'interaction(E, D)', 'true,true,true,true,true,true,true': 'interaction(A, E)', 'true,true,true': 'interaction(A, D)', 'true,true,true,true,true': 'function(E, C)'}, {'true,true,true,true,true,true,true,false': [0.0, 0, 0], 'true,false': [2.449, 12, 12], 'true,true,true,true,true,true,true,true': [3.317, 22, 22], 'true,true,false': [3.536, 25, 25], 'true,true,true,false': [5.099, 52, 52], 'false': [0.0, 0, 0], 'true,true,true,true,false': [1.732, 6, 6], 'true,true,true,true,true,false': [1.0, 2, 2], 'true,true,true,true,true,true,false': [0.707, 1, 1]}]
['complex(A, B)', {'': 'interaction(C, A)', 'false,true,true': 'interaction(E, D)', 'false,true': 'interaction(D, E)', 'false,true,true,true,false': 'function(A, F)', 'false': 'interaction(A, D)', 'false,true,false': 'function(A, G)', 'false,true,true,true': 'interaction(A, E)'}, {'false,true,true,true,false,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true,false,true': [1.0, 2, 2], 'true': [7.348, 108, 108], 'false,true,true,true,true': [1.414, 4, 4], 'false,true,true,false': [1.0, 2, 2], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [1.414, 4, 4]}]
['complex(A, B)', {'': 'interaction(C, A)', 'true,true,true,true': 'interaction(C, E), interaction(E, A)', 'true,true': 'function(A, D)', 'true': 'interaction(A, C)', 'true,true,true,true,true,true': 'interaction(E, C)', 'true,true,true': 'function(C, D)', 'true,true,true,true,true': 'function(E, D)', 'true,true,true,true,true,true,false': 'interaction(E, F), interaction(F, A)'}, {'true,false': [6.205, 77, 77], 'true,true,true,true,true,true,false,false': [0.0, 0, 0], 'true,true,true,true,true,true,false,true': [0.707, 1, 1], 'false': [2.449, 12, 12], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true,true,true,true': [3.317, 22, 22], 'true,true,true,true,false': [1.732, 6, 6], 'true,true,true,true,true,false': [1.0, 2, 2]}]
['complex(A, B)', {'': 'interaction(A, C)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)', 'true,false,false,false': 'function(A, F)', 'false': 'interaction(G, A)', 'false,true': 'function(A, H)', 'true,false,false': 'interaction(E, A)'}, {'true,false,true': [3.606, 26, 26], 'true,true': [3.937, 31, 31], 'true,false,false,false,false': [0.0, 0, 0], 'true,false,false,false,true': [1.414, 4, 4], 'false,true,true': [5.0, 50, 50], 'true,false,false,true': [2.121, 9, 9], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['complex(A, B)', {'': 'interaction(A, C)', 'true,true,true,true': 'interaction(C, E), interaction(E, A)', 'true,true': 'function(A, D)', 'true': 'interaction(C, A)', 'false': 'interaction(F, A)', 'false,true': 'function(A, G)', 'true,true,true': 'function(C, D)'}, {'true,false': [4.416, 39, 39], 'false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [5.0, 50, 50], 'true,true,true,true,false': [1.732, 6, 6], 'false,true,false': [0.0, 0, 0], 'true,true,true,true,true': [3.536, 25, 25]}]
{'': [0.25000000000000344, nan], 'true,true,true,true': [0.25000000000000133, 0.25], 'true,true': [0.25000000000000155, 0.2500000000000014], 'true': [0.24999999999999956, 0.25000000000000006], 'true,true,true,true,true,true': [0.2500000000000011, 0.25], 'true,true,true,true,false': [0.25, 0.24999999999999983], 'true,true,true': [0.25000000000000155, nan], 'true,true,true,true,true': [0.2500000000000012, 0.25]}
{'': [0.25000000000000033, nan], 'true,false': [0.25000000000000006, nan], 'true,false,true': [0.2499999999999999, 0.24999999999999997], 'true,true': [0.24999999999999725, 0.25000000000000094], 'true': [0.25000000000000044, 0.25000000000000006], 'true,false,true,true': [0.25, 0.24999999999999997], 'true,true,true,false': [0.2500000000000004, 0.250000000000001], 'true,true,true': [0.2500000000000012, 0.24999999999999803]}
{'': [0.24999999999999634, nan]}
{'': [0.2499999999999998, 0.25000000000000033], 'true,false': [0.2499999999999998, 0.2500000000000003], 'true,false,true': [0.2499999999999999, 0.2500000000000002], 'false,true': [0.25000000000000033, nan], 'true,false,true,true': [0.2500000000000002, 0.24999999999999997], 'false': [0.25000000000000033, nan], 'true': [0.25000000000000044, 0.2500000000000007]}
{'': [0.24999999999999964, 0.24999999999999928], 'true,false': [0.2499999999999998, 0.2500000000000002], 'true': [0.24999999999999978, 0.24999999999999958], 'true,false,false,false': [0.25, nan], 'false': [0.24999999999999928, nan], 'false,true': [0.24999999999999928, nan], 'true,false,false': [0.2500000000000002, 0.25]}
{'': [0.2500000000000009, nan], 'true,true,true,true': [0.25, 0.25000000000000006], 'true,true': [0.250000000000001, 0.24999999999999975], 'true': [0.2500000000000009, 0.24999999999999978], 'true,true,true,true,true,true': [0.25, 0.25], 'true,true,true,true,true,true,true': [0.25, nan], 'true,true,true': [0.24999999999999997, 0.2499999999999994], 'true,true,true,true,true': [0.25, 0.25]}
{'': [0.25000000000000094, 0.2500000000000001], 'false,true,true': [0.25000000000000006, 0.25], 'false,true': [0.2500000000000001, 0.25], 'false,true,true,true,false': [0.25, nan], 'false': [0.2500000000000001, nan], 'false,true,false': [0.25, nan], 'false,true,true,true': [0.25, 0.25]}
{'': [0.250000000000001, 0.25000000000000006], 'true,true,true,true': [0.24999999999999972, 0.24999999999999997], 'true,true': [0.2499999999999998, nan], 'true': [0.2499999999999998, 0.2500000000000001], 'true,true,true,true,true,true': [0.24999999999999975, 0.25], 'true,true,true': [0.2499999999999998, nan], 'true,true,true,true,true': [0.24999999999999972, 0.25], 'true,true,true,true,true,true,false': [0.25, nan]}
{'': [0.24999999999999986, 0.25000000000000033], 'true,false': [0.2500000000000002, 0.24999999999999997], 'false,true': [0.25000000000000033, nan], 'true,false,false,false': [0.25, nan], 'false': [0.25000000000000033, nan], 'true': [0.2500000000000002, 0.24999999999999978], 'true,false,false': [0.24999999999999994, 0.25]}
{'': [0.25, 0.24999999999999967], 'true,true,true,true': [0.25, 0.25], 'true,true': [0.24999999999999994, nan], 'true': [0.24999999999999994, 0.24999999999999992], 'false': [0.24999999999999967, nan], 'false,true': [0.24999999999999967, nan], 'true,true,true': [0.24999999999999994, nan]}
******************************************
Performing Theory Revision
******************************************
Transfer was not sufficient.
Error in experiment of twitter->yeast


Start learning from source dataset


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048793;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.12544463852839202;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360676;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.1015963294878365;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.0926912761892606;  // std dev = 1,41e-07, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839678;  // std dev = 9,88e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07877675473109143;  // std dev = 4,21e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07324622576333706;  // std dev = 8,43e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420308;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06419184008202611;  // std dev = 6,99e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */


Predicates from source: ['workedunder(person,person).', 'movie(movie,person).', 'actor(person).', 'director(person).'] 



Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'actor(A) -> student(A)', 'movie(A,B) -> publication(A,B)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.535568289938222;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.14185106490048777;  // std dev = 1,05e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.4572074133792135;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.36893705839760765;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.28527019316610924;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.21559914934332675;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.09269127618926093;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.16177893311781763;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.08518475138839683;  // std dev = 1,58e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.12156320581776346;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.09179048401490923;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.06970499337531842;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.053217952626247136;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.0641918400820262;  // std dev = 7,45e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
Results
   AUC ROC   = 0.949704
   AUC PR    = 0.939729
   CLL	      = -0.273854
   Precision = 0.866667 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.928571


Total learning time: 4.731 seconds
Total inference time: 0.536 seconds
AUC ROC: 0.949704


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.05e-08, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [5.16e-08, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.67e-08, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [4.21e-08, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.29e-08, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.58e-08, 25, 0], 'true,true': [2.11e-08, 0, 14]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [7.45e-09, 25, 0], 'true,true': [0.0, 0, 14]}]
{'': [0.17283950617284127, 4.440892098500626e-18], 'true': [-2.5376526277146434e-16, 0.21852237252861578]}
{'': [0.16527937223485065, -4.440892098500626e-18], 'true': [1.9032394707859825e-16, 0.21852237252861595]}
{'': [0.15798655603348136, 1.1102230246251566e-17], 'true': [-2.5376526277146434e-16, 0.21852237252861598]}
{'': [0.15428574723631744, -4.440892098500626e-18], 'true': [1.2688263138573217e-16, 0.21852237252861606]}
{'': [0.15290559825609437, 6.661338147750939e-18], 'true': [-3.172065784643304e-17, 0.218522372528616]}
{'': [0.1524070085560816, 9.992007221626408e-18], 'true': [3.172065784643304e-17, 0.21852237252861603]}
{'': [0.15220468125189954, -1.1102230246251566e-18], 'true': [-3.172065784643304e-17, 0.218522372528616]}
{'': [0.15209727309240345, -1.1102230246251566e-18], 'true': [0.0, 0.21852237252861603]}
{'': [0.15201547471739796, -4.440892098500626e-18], 'true': [-1.9825411154020653e-17, 0.21852237252861606]}
{'': [0.15193648071008423, 2.220446049250313e-18], 'true': [0.0, 0.21852237252861603]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else if ( publication(H, B) )
%   | | | | then if ( tempadvisedby(I, B) )
%   | | | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.14185106490048777;  // std dev = 1,05e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.1771985653050586;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( inphase(A, G), inphase(E, G) )
%   | | | | then return 0.07769635804062927;  // std dev = 0,786, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.5765998742001945;  // std dev = 0,919, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.786424204891965;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.1314431676465775;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.5634658750306112;  // std dev = 0,865, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.15287984713060612;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( inphase(A, G), inphase(E, G) )
%   | | | | then return 0.06646712977737634;  // std dev = 0,782, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.4625904681178872;  // std dev = 0,929, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.62836893179253;  // std dev = 0,103, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.10944121048668624;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.44859261720652943;  // std dev = 0,858, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, E) )
%   | | | then return 0.01040140851628284;  // std dev = 0,738, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.22036703604528363;  // std dev = 0,429, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( projectmember(G, B), publication(H, A) )
%   | | | then return 0.5067640693766904;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.08985969552365518;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.3489929244939743;  // std dev = 0,857, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.008855691456165105;  // std dev = 0,737, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return 0.07292556475505654;  // std dev = 0,496, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( publication(H, B) )
%   | | | | then if ( tempadvisedby(I, B) )
%   | | | | | then return 0.3135063480287713;  // std dev = 0,961, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( projectmember(J, B) )
%   | | | | | then return 0.36307940567207064;  // std dev = 0,067, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else if ( publication(K, A) )
%   | | | | | | then return 0.07293629928480853;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.25580328159826954;  // std dev = 0,856, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926093;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.3009484401690543;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18663813594659054;  // std dev = 0,104, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.03786107201059241;  // std dev = 0,724, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(I, B) )
%   | | | | then if ( tempadvisedby(J, B) )
%   | | | | | then return 0.2378531606833525;  // std dev = 0,963, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.2694191703355336;  // std dev = 0,060, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then return 0.30296883088972465;  // std dev = 0,084, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.14649947413836129;  // std dev = 1,088, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.08518475138839683;  // std dev = 1,58e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.2416354562805857;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16036928186413557;  // std dev = 0,093, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.031661934743500625;  // std dev = 0,721, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(I, B) )
%   | | | | then if ( tempadvisedby(J, B) )
%   | | | | | then return 0.18221506442031873;  // std dev = 0,962, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.21988494972062408;  // std dev = 0,052, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then return 0.24360439287319866;  // std dev = 0,073, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.11297029972712606;  // std dev = 1,089, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.20014802791754271;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14022293412106232;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.026380806675927182;  // std dev = 0,719, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(I, B) )
%   | | | | then if ( tempadvisedby(J, B) )
%   | | | | | then return 0.14151833474390235;  // std dev = 0,959, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.18456021042973017;  // std dev = 0,046, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then return 0.20190092058417752;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.08706396317354351;  // std dev = 1,089, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( inphase(A, F), inphase(D, F) )
%   | | | then return -0.030533931573423368;  // std dev = 0,574, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06836606493345332;  // std dev = 0,407, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.15842921514563177;  // std dev = 0,041, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else if ( projectmember(H, B) )
%   | | | | then return 0.1591028575519858;  // std dev = 0,038, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(I, A) )
%   | | | | | then return 0.03627124573715015;  // std dev = 0,755, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.08730591144575436;  // std dev = 0,839, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.1106161940312721;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( inphase(A, G), inphase(D, G) )
%   | | | | then return -0.014565061624515208;  // std dev = 0,575, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.13105850085788182;  // std dev = 1,028, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.13846203535503274;  // std dev = 0,037, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else if ( projectmember(I, B) )
%   | | | | then return 0.13900000939832965;  // std dev = 0,034, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.028902260193255442;  // std dev = 0,754, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.07024176157504665;  // std dev = 0,841, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 7,45e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
Results
   AUC ROC   = 0.934172
   AUC PR    = 0.847725
   CLL	      = -0.311178
   Precision = 0.884615 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.884615


Total learning time: 6.186 seconds
Total inference time: 0.813 seconds
AUC ROC: 0.934172


Refined model AUC ROC: 0.934172


Dataset: imdb->uwcse, Fold: 1, Type: transfer, Time: 00:39:35
{'Recall': 0.884615, 'AUC PR': 0.847725, 'Mapping results': {'Generating paths time': 2.143399715423584, 'Finding best mapping': 0.024742841720581055, 'Generating mappings time': 0.06221580505371094, 'Knowledge compiling time': 0.009496450424194336, 'Possible mappings': 288, 'Total time': 2.2398593425750732}, 'F1': 0.884615, 'AUC ROC': 0.934172, 'Inference time': 0.813, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.939729, 'F1': 0.928571, 'AUC ROC': 0.949704, 'Inference time': 0.536, 'Precision': [0.866667, 0.5], 'Learning time': 4.731, 'CLL': -0.273854}, 'Precision': [0.884615, 0.5], 'Learning time': 10.917, 'CLL': -0.311178}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else if ( projectmember(I, B) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.05048502256292622;  // std dev = 0,888, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.2901227418012715;  // std dev = 1,052, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else if ( publication(H, B) )
%   | | | | then if ( tempadvisedby(I, B) )
%   | | | | | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then return 0.7451706938182211;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.3880937972657321;  // std dev = 1,085, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.15094659658194162;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.08772072933183805;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.6303029226683476;  // std dev = 0,094, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.11106361382453789;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.4471540315188485;  // std dev = 0,862, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.1326276583395764;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.07543960484966095;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, A), projectmember(I, B) )
%   | | | then return 0.5053561452154022;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.09128203284830573;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.34936632664756284;  // std dev = 0,861, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.11811773000250862;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, E) )
%   | | | | then return 0.06430141054043803;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.3644122938010804;  // std dev = 0,059, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.07415046115658304;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.2541268278694821;  // std dev = 0,860, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.10637133156038377;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.05438102360017571;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B), publication(I, A) )
%   | | | then return 0.299780558469411;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.059666994700557176;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.2006850476559381;  // std dev = 0,862, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.09668525362820939;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.04568220632808851;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.23216984383490172;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.04765320992751598;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.1462496116939191;  // std dev = 0,862, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.20096187599261373;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13692805525759352;  // std dev = 0,168, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then if ( publication(I, G) )
%   | | | | then return 0.038155195660526504;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else if ( tempadvisedby(J, B) )
%   | | | | then return 0.2360958852044902;  // std dev = 0,080, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(K, B) )
%   | | | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | | else return 0.08572960500248678;  // std dev = 1,099, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.07813195411361244;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(E, D) )
%   | | | | then return 0.1150478549448883;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.03853538843777473;  // std dev = 0,938, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | | then return 0.06418416627305484;  // std dev = 0,369, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( tempadvisedby(I, B) )
%   | | | | then return 0.19659677620242558;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(J, B) )
%   | | | | | then return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | | else return 0.06692353375766436;  // std dev = 1,099, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.07269092228032073;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.014853376219516885;  // std dev = 0,862, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.08203142772242573;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.15075722172592537;  // std dev = 0,038, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.13400703000801117;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.020579097979225285;  // std dev = 0,790, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.06348340147173301;  // std dev = 0,850, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
Results
   AUC ROC   = 0.886999
   AUC PR    = 0.783218
   CLL	      = -0.400721
   Precision = 0.821429 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.851852


Total learning time: 9.471 seconds
Total inference time: 0.732 seconds
AUC ROC: 0.886999


Dataset: imdb->uwcse, Fold: 1, Type: scratch, Time: 00:39:45
{'Recall': 0.884615, 'AUC PR': 0.783218, 'F1': 0.851852, 'AUC ROC': 0.886999, 'Inference time': 0.732, 'Precision': [0.821429, 0.5], 'Learning time': 9.471, 'CLL': -0.400721}


Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'actor(A) -> student(A)', 'movie(A,B) -> publication(A,B)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7043027812533584;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5956068723141557;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.46863440886780416;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3540171821738477;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.1015963294878363;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.26620552619924287;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.20307171050188988;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.08518475138839686;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1579278943667103;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.12508565429655724;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.10063530397647748;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08201840165050943;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.06419184008202618;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
Results
   AUC ROC   = 0.929472
   AUC PR    = 0.918777
   CLL	      = -0.290507
   Precision = 0.823009 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.902913


Total learning time: 1.944 seconds
Total inference time: 0.708 seconds
AUC ROC: 0.929472


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [2.98e-08, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [1.05e-08, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [3.33e-08, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [5.27e-09, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [7.45e-09, 18, 0], 'true,true': [1.83e-08, 0, 9]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [7.45e-09, 0, 9]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9]}]
{'': [0.08264462809917356, -9.25185853854297e-18], 'true': [-2.9605947323337506e-16, 0.1301775147928993]}
{'': [0.08063200586027203, 0.0], 'true': [9.868649107779169e-17, 0.13017751479289957]}
{'': [0.07874151912392335, 6.1679056923619804e-18], 'true': [-1.4802973661668753e-16, 0.13017751479289946]}
{'': [0.07789770458547739, -1.5419764230904951e-18], 'true': [1.2335811384723962e-16, 0.13017751479289938]}
{'': [0.07764125846417015, 1.5419764230904951e-18], 'true': [-3.700743415417188e-17, 0.13017751479289938]}
{'': [0.07757925968481666, 3.0839528461809902e-18], 'true': [3.700743415417188e-17, 0.1301775147928994]}
{'': [0.07757245843873052, -3.854941057726238e-18], 'true': [-2.4671622769447922e-17, 0.1301775147928994]}
{'': [0.07757700245374001, -7.709882115452476e-19], 'true': [6.1679056923619804e-18, 0.13017751479289943]}
{'': [0.07757946176858431, -1.5419764230904951e-18], 'true': [-3.0839528461809902e-18, 0.13017751479289938]}
{'': [0.07757644395816753, 0.0], 'true': [0.0, 0.1301775147928994]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.4068585879990681;  // std dev = 0,766, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.6175030309659435;  // std dev = 0,354, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7302664973147039;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.3218969203777237;  // std dev = 0,756, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.48845798554678616;  // std dev = 0,355, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5662835398208704;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.23923900726314914;  // std dev = 0,742, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return 0.5061299356632769;  // std dev = 0,115, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3383670325761128;  // std dev = 0,343, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.1015963294878363;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.1435738409498909;  // std dev = 0,695, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.292734896387344;  // std dev = 0,359, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3339582136078992;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.1086373068329895;  // std dev = 0,695, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.22282717250569334;  // std dev = 0,358, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2644433109164689;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08518475138839686;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.07634719328559476;  // std dev = 0,689, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.28453148662136585;  // std dev = 0,166, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12347451602911018;  // std dev = 0,904, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.03401417725085232;  // std dev = 0,661, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.1500274318294708;  // std dev = 0,359, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.18106580610535886;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.02641787053019477;  // std dev = 0,662, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.12007008148601629;  // std dev = 0,358, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1558946220505283;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.014863485250288763;  // std dev = 0,656, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return 0.2310393491978655;  // std dev = 0,147, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05951236251002866;  // std dev = 0,343, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.06419184008202618;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
Results
   AUC ROC   = 0.959475
   AUC PR    = 0.953759
   CLL	      = -0.274262
   Precision = 0.823009 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.902913


Total learning time: 3.229 seconds
Total inference time: 0.755 seconds
AUC ROC: 0.959475


Refined model AUC ROC: 0.959475


Dataset: imdb->uwcse, Fold: 2, Type: transfer, Time: 00:39:55
{'Recall': 1.0, 'AUC PR': 0.953759, 'Mapping results': {'Generating paths time': 2.2028398513793945, 'Finding best mapping': 0.018947124481201172, 'Generating mappings time': 0.04727363586425781, 'Knowledge compiling time': 0.010088205337524414, 'Possible mappings': 288, 'Total time': 2.2791531085968018}, 'F1': 0.902913, 'AUC ROC': 0.959475, 'Inference time': 0.755, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.918777, 'F1': 0.902913, 'AUC ROC': 0.929472, 'Inference time': 0.708, 'Precision': [0.823009, 0.5], 'Learning time': 1.944, 'CLL': -0.290507}, 'Precision': [0.823009, 0.5], 'Learning time': 5.173, 'CLL': -0.274262}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.4068585879990681;  // std dev = 0,766, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.6175030309659435;  // std dev = 0,354, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7302664973147039;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.39431058662709007;  // std dev = 0,801, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then return 0.567468700604235;  // std dev = 0,098, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4491964093967777;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.30109636264093637;  // std dev = 0,796, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then return 0.4270218758972438;  // std dev = 0,101, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3390893982104104;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.33299153701351053;  // std dev = 0,059, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.10577736987702314;  // std dev = 0,689, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(E, B) )
%   | | then return 0.301751862901626;  // std dev = 0,359, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.3258003419390091;  // std dev = 0,078, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.16434774612475342;  // std dev = 0,753, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then return 0.26815743468832365;  // std dev = 0,146, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.18279197950292048;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839686;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.22027177262702607;  // std dev = 0,063, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0271856447887792;  // std dev = 0,675, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(E, B) )
%   | | then return 0.18898979819432166;  // std dev = 0,358, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.21306765112523474;  // std dev = 0,077, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07877675473109179;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.09222520162416295;  // std dev = 0,724, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then return 0.1912047522241803;  // std dev = 0,164, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.10290819234578642;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.16205497499610433;  // std dev = 0,064, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.012064415438260645;  // std dev = 0,664, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(E, B) )
%   | | then return 0.12856534153202312;  // std dev = 0,358, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.15515012154626479;  // std dev = 0,075, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.05308728232538215;  // std dev = 0,702, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.1263701923291556;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.19362646573757164;  // std dev = 0,135, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.05913301143625784;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
Results
   AUC ROC   = 0.957047
   AUC PR    = 0.928404
   CLL	      = -0.28334
   Precision = 0.823009 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.902913


Total learning time: 4.441 seconds
Total inference time: 0.728 seconds
AUC ROC: 0.957047


Dataset: imdb->uwcse, Fold: 2, Type: scratch, Time: 00:40:00
{'Recall': 1.0, 'AUC PR': 0.928404, 'F1': 0.902913, 'AUC ROC': 0.957047, 'Inference time': 0.728, 'Precision': [0.823009, 0.5], 'Learning time': 4.441, 'CLL': -0.28334}


Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'actor(A) -> student(A)', 'movie(A,B) -> publication(A,B)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.08518475138839687;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06419184008202622;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
Results
   AUC ROC   = 0.894231
   AUC PR    = 0.825397
   CLL	      = -0.313006
   Precision = 0.825397 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.904348


Total learning time: 1.363 seconds
Total inference time: 0.588 seconds
AUC ROC: 0.894231


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.98e-08, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.98e-08, 0, 8], 'false': [3.73e-09, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.49e-08, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [7.45e-09, 0, 8], 'false': [2.63e-09, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
{'': [-2.9605947323337506e-16, -9.25185853854297e-18], 'true': [0.0, -2.220446049250313e-16]}
{'': [9.868649107779169e-17, 0.0], 'true': [0.0, 1.1102230246251565e-16]}
{'': [-1.4802973661668753e-16, -1.5419764230904951e-18], 'true': [0.0, -1.1102230246251565e-16]}
{'': [1.2335811384723962e-16, 1.5419764230904951e-18], 'true': [0.0, 1.1102230246251565e-16]}
{'': [-3.700743415417188e-17, -1.5419764230904951e-18], 'true': [0.0, -4.163336342344337e-17]}
{'': [3.700743415417188e-17, 0.0], 'true': [0.0, 2.7755575615628914e-17]}
{'': [-2.4671622769447922e-17, 0.0], 'true': [0.0, -2.0816681711721685e-17]}
{'': [6.1679056923619804e-18, 7.709882115452476e-19], 'true': [0.0, 6.938893903907228e-18]}
{'': [-3.0839528461809902e-18, 0.0], 'true': [0.0, -3.469446951953614e-18]}
{'': [0.0, -7.709882115452476e-19], 'true': [0.0, 0.0]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.7194734122109544;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( publication(D, A) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
Results
   AUC ROC   = 0.894231
   AUC PR    = 0.825397
   CLL	      = -0.313006
   Precision = 0.825397 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.904348


Total learning time: 1.881 seconds
Total inference time: 0.749 seconds
AUC ROC: 0.894231


Refined model AUC ROC: 0.894231


Dataset: imdb->uwcse, Fold: 3, Type: transfer, Time: 00:40:07
{'Recall': 1.0, 'AUC PR': 0.825397, 'Mapping results': {'Generating paths time': 2.1048879623413086, 'Finding best mapping': 0.024225950241088867, 'Generating mappings time': 0.05920529365539551, 'Knowledge compiling time': 0.027152299880981445, 'Possible mappings': 288, 'Total time': 2.21547794342041}, 'F1': 0.904348, 'AUC ROC': 0.894231, 'Inference time': 0.749, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.825397, 'F1': 0.904348, 'AUC ROC': 0.894231, 'Inference time': 0.588, 'Precision': [0.825397, 0.5], 'Learning time': 1.363, 'CLL': -0.313006}, 'Precision': [0.825397, 0.5], 'Learning time': 3.2439999999999998, 'CLL': -0.313006}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
Results
   AUC ROC   = 0.860577
   AUC PR    = 0.781955
   CLL	      = -0.382487
   Precision = 0.781955 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.877637


Total learning time: 1.593 seconds
Total inference time: 0.62 seconds
AUC ROC: 0.860577


Dataset: imdb->uwcse, Fold: 3, Type: scratch, Time: 00:40:10
{'Recall': 1.0, 'AUC PR': 0.781955, 'F1': 0.877637, 'AUC ROC': 0.860577, 'Inference time': 0.62, 'Precision': [0.781955, 0.5], 'Learning time': 1.593, 'CLL': -0.382487}


Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'actor(A) -> student(A)', 'movie(A,B) -> publication(A,B)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.6581489350995123;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.1418510649004878;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.5580193346218546;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.44194861002444086;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,67e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.33541139495094296;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.1015963294878363;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.25176837314502193;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.19047961032437166;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.14620194507639928;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.11389369465607467;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.0898995618030186;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.06842697784420275;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.07174810215160457;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.06419184008202618;  // std dev = 3,73e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
Results
   AUC ROC   = 0.930938
   AUC PR    = 0.920612
   CLL	      = -0.287685
   Precision = 0.824742 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.903955


Total learning time: 3.647 seconds
Total inference time: 0.682 seconds
AUC ROC: 0.930938


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [4.21e-08, 0, 13]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [1.67e-08, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [4.21e-08, 0, 13]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [9.13e-09, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [1.05e-08, 28, 0], 'true,true': [2.11e-08, 0, 13]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [0.0, 28, 0], 'true,true': [0.0, 0, 13]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'false': [3.73e-09, 28, 0], 'true,true': [0.0, 0, 13]}]
{'': [0.11426592797784099, -7.93016446160826e-18], 'true': [-2.7328566760003855e-16, 0.15999999999999973]}
{'': [0.11113013243095493, -3.96508223080413e-18], 'true': [1.3664283380001927e-16, 0.1599999999999999]}
{'': [0.10815835949511798, 9.912705577010326e-18], 'true': [-2.7328566760003855e-16, 0.16000000000000003]}
{'': [0.1067802978383715, -5.9476233462061954e-18], 'true': [1.3664283380001927e-16, 0.16000000000000006]}
{'': [0.10633295765097943, 2.9738116731030977e-18], 'true': [-5.124106267500723e-17, 0.15999999999999998]}
{'': [0.10620510347417647, 3.96508223080413e-18], 'true': [3.416070845000482e-17, 0.16000000000000006]}
{'': [0.10617228822061624, -2.9738116731030977e-18], 'true': [-3.416070845000482e-17, 0.16]}
{'': [0.10616221825031717, 0.0], 'true': [0.0, 0.16]}
{'': [0.10615204765393826, -2.9738116731030977e-18], 'true': [-1.2810265668751807e-17, 0.15999999999999998]}
{'': [0.1061355654998577, 4.956352788505163e-19], 'true': [0.0, 0.15999999999999998]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | else return 0.6581489350995123;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.29279418357704884;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.7378036050524781;  // std dev = 0,063, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5580193346218546;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.32179135359137706;  // std dev = 1,064, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.5508356073090463;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | else return 0.44194861002444086;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.11231637819360636;  // std dev = 1,67e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.25338379018630225;  // std dev = 1,061, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else if ( publication(G, A) )
%   | | | | then return 0.41416150302966437;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.335411394950943;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.1015963294878363;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.11630209914019296;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2697478132793615;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.3656344861562387;  // std dev = 0,163, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25176837314502193;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.08845440675949645;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2062525881598365;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.28774307747422717;  // std dev = 0,149, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19047961032437172;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.06687813801874865;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16095555079641394;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.23385370307527314;  // std dev = 0,133, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14620194507639933;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.050390127715258984;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12802275604229368;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.195436797022055;  // std dev = 0,118, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11389369465607464;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.03789145300779695;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10349083403071088;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.1670922149429385;  // std dev = 0,106, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08989956180301868;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.06842697784420275;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.02846058072933244;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08478440748267765;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.1455073254604743;  // std dev = 0,095, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07174810215160456;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.06419184008202618;  // std dev = 3,73e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
Results
   AUC ROC   = 0.930313
   AUC PR    = 0.894491
   CLL	      = -0.276667
   Precision = 0.857143 at threshold = 0.5
   Recall    = 0.975
   F1        = 0.912281


Total learning time: 6.829 seconds
Total inference time: 0.753 seconds
AUC ROC: 0.930313


Refined model AUC ROC: 0.930313


Dataset: imdb->uwcse, Fold: 4, Type: transfer, Time: 00:40:25
{'Recall': 0.975, 'AUC PR': 0.894491, 'Mapping results': {'Generating paths time': 2.2480628490448, 'Finding best mapping': 0.01890730857849121, 'Generating mappings time': 0.04892539978027344, 'Knowledge compiling time': 0.03162980079650879, 'Possible mappings': 288, 'Total time': 2.3475306034088135}, 'F1': 0.912281, 'AUC ROC': 0.930313, 'Inference time': 0.753, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.920612, 'F1': 0.903955, 'AUC ROC': 0.930938, 'Inference time': 0.682, 'Precision': [0.824742, 0.5], 'Learning time': 3.647, 'CLL': -0.287685}, 'Precision': [0.857143, 0.5], 'Learning time': 10.475999999999999, 'CLL': -0.276667}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | else return 0.6581489350995123;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.14185106490048774;  // std dev = 1,83e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | | then return 0.29279418357704884;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7378036050524781;  // std dev = 0,063, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(F, B) )
%   | | then return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.5580193346218546;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.32179135359137706;  // std dev = 1,064, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.5508356073090463;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | else return 0.44194861002444086;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.11231637819360639;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.25338379018630225;  // std dev = 1,061, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.41416150302966437;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | else return 0.335411394950943;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.10159632948783635;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.11630209914019296;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2697478132793615;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.3656344861562387;  // std dev = 0,163, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25176837314502193;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.08845440675949645;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2062525881598365;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.21826917236718746;  // std dev = 0,343, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.06687813801874865;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16095555079641394;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.2462092721502723;  // std dev = 0,137, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13993905498080142;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.050390127715258984;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12802275604229368;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.204365889280189;  // std dev = 0,122, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10927629171421978;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.03789145300779695;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10349083403071088;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.173766485573492;  // std dev = 0,109, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08643106177876599;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.06842697784420275;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.02846058072933244;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08478440748267765;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.15064777535489823;  // std dev = 0,098, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06909633480116835;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.0641918400820262;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
Results
   AUC ROC   = 0.930313
   AUC PR    = 0.894491
   CLL	      = -0.276313
   Precision = 0.857143 at threshold = 0.5
   Recall    = 0.975
   F1        = 0.912281


Total learning time: 8.772 seconds
Total inference time: 0.781 seconds
AUC ROC: 0.930313


Dataset: imdb->uwcse, Fold: 4, Type: scratch, Time: 00:40:34
{'Recall': 0.975, 'AUC PR': 0.894491, 'F1': 0.912281, 'AUC ROC': 0.930313, 'Inference time': 0.781, 'Precision': [0.857143, 0.5], 'Learning time': 8.772, 'CLL': -0.276313}


Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'actor(A) -> student(A)', 'movie(A,B) -> publication(A,B)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5640312880406888;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.48074388375574334;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.386198448632422;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.11231637819360639;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2971060494206917;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.22385468926999735;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1679716628061756;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12658100414000711;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.07877675473109173;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.09607868392277003;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.07347328777965571;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.05656520765532164;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.06419184008202622;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
Results
   AUC ROC   = 0.945797
   AUC PR    = 0.937284
   CLL	      = -0.272526
   Precision = 0.850877 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.919431


Total learning time: 2.298 seconds
Total inference time: 0.713 seconds
AUC ROC: 0.945797


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [3.73e-09, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [2.63e-09, 11, 0], 'true,true': [0.0, 0, 4]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 11, 0], 'true,true': [0.0, 0, 4]}]
{'': [0.1814058956916096, -5.046468293750712e-18], 'true': [0.0, 0.20761245674740453]}
{'': [0.17685507625002705, 0.0], 'true': [0.0, 0.20761245674740458]}
{'': [0.17247995015100465, -2.523234146875356e-18], 'true': [0.0, 0.20761245674740486]}
{'': [0.17030274222106967, -2.523234146875356e-18], 'true': [0.0, 0.20761245674740486]}
{'': [0.16951377794370398, -1.261617073437678e-18], 'true': [0.0, 0.20761245674740483]}
{'': [0.16923971667658838, 1.261617073437678e-18], 'true': [0.0, 0.2076124567474048]}
{'': [0.1691340043119816, 0.0], 'true': [0.0, 0.2076124567474048]}
{'': [0.1690793453910904, 0.0], 'true': [0.0, 0.20761245674740483]}
{'': [0.1690361610985065, 6.30808536718839e-19], 'true': [0.0, 0.20761245674740486]}
{'': [0.16899197074053585, -1.261617073437678e-18], 'true': [0.0, 0.2076124567474049]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), inphase(E, F) )
%   | | | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( yearsinprogram(A, E), yearsinprogram(D, E) )
%   | | | then return 0.10773234383231141;  // std dev = 0,784, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(F, B) )
%   | | | | then if ( publication(F, G), inphase(G, H) )
%   | | | | | then return 0.4973839334745775;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.7670719622367216;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.76783633424493;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B) )
%   | | | then if ( publication(E, F), projectmember(G, F) )
%   | | | | then return 0.3736886272113765;  // std dev = 0,845, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.4727817200619806;  // std dev = 0,816, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.16343411569781238;  // std dev = 1,083, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.6065083237249159;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360639;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B) )
%   | | | then if ( publication(E, F), projectmember(G, F) )
%   | | | | then return 0.2829882715802352;  // std dev = 0,843, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.3633801169911698;  // std dev = 0,806, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.13269764846375826;  // std dev = 1,082, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4576853134698804;  // std dev = 0,072, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( yearsinprogram(A, E), yearsinprogram(D, E) )
%   | | | then return -0.05490652993105466;  // std dev = 0,733, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(F, B) )
%   | | | | then if ( publication(F, G), inphase(G, H) )
%   | | | | | then return 0.21038921255930196;  // std dev = 0,841, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.42771618262766437;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.19782840118340017;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.34882818107469316;  // std dev = 0,067, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( yearsinprogram(A, E), yearsinprogram(D, E) )
%   | | | then return -0.04238563842329979;  // std dev = 0,734, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(F, B) )
%   | | | | then if ( publication(F, G), projectmember(H, G) )
%   | | | | | then return 0.13567170023793926;  // std dev = 0,818, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.3586877123177847;  // std dev = 0,070, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.1545612382642534;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2747150839258366;  // std dev = 0,059, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B) )
%   | | | then if ( publication(E, F), projectmember(G, F) )
%   | | | | then return 0.10432481476996969;  // std dev = 0,819, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.19779883608939489;  // std dev = 0,728, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.04642700633673791;  // std dev = 1,051, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.22373743195380502;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( yearsinprogram(A, E), yearsinprogram(D, E) )
%   | | | then return -0.06832103544012953;  // std dev = 0,724, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( projectmember(F, B) )
%   | | | | then return 0.1682574295223266;  // std dev = 1,022, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return 0.095214173792515;  // std dev = 0,817, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.18745106130543746;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), projectmember(F, E) )
%   | | | then return 0.05336952343299195;  // std dev = 0,815, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14973745572595246;  // std dev = 0,272, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.03716483651708576;  // std dev = 1,051, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( yearsinprogram(A, E), yearsinprogram(D, E) )
%   | | | then return -0.07992770198681333;  // std dev = 0,718, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( projectmember(F, B) )
%   | | | | then return 0.12054299674146403;  // std dev = 1,023, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return 0.056371242344824136;  // std dev = 0,812, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.14708501495885262;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06419184008202622;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
Results
   AUC ROC   = 0.958391
   AUC PR    = 0.941273
   CLL	      = -0.260525
   Precision = 0.87 at threshold = 0.5
   Recall    = 0.896907
   F1        = 0.883249


Total learning time: 4.976 seconds
Total inference time: 0.826 seconds
AUC ROC: 0.958391


Refined model AUC ROC: 0.958391


Dataset: imdb->uwcse, Fold: 5, Type: transfer, Time: 00:40:46
{'Recall': 0.896907, 'AUC PR': 0.941273, 'Mapping results': {'Generating paths time': 2.1135637760162354, 'Finding best mapping': 0.019293785095214844, 'Generating mappings time': 0.0483853816986084, 'Knowledge compiling time': 0.010511636734008789, 'Possible mappings': 288, 'Total time': 2.1917593479156494}, 'F1': 0.883249, 'AUC ROC': 0.958391, 'Inference time': 0.826, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.937284, 'F1': 0.919431, 'AUC ROC': 0.945797, 'Inference time': 0.713, 'Precision': [0.850877, 0.5], 'Learning time': 2.298, 'CLL': -0.272526}, 'Precision': [0.87, 0.5], 'Learning time': 7.274, 'CLL': -0.260525}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(C, D), inphase(D, E) )
%   | | | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(D, E), projectmember(F, E) )
%   | | | | then return 0.5072279478556496;  // std dev = 0,878, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.5552591449794353;  // std dev = 0,881, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.20874113578563502;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.7557456037364363;  // std dev = 0,065, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(C, E), projectmember(F, E) )
%   | | | | then return 0.4026285776105345;  // std dev = 0,880, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.43920582473019837;  // std dev = 0,878, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5698021410586026;  // std dev = 0,029, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.25615201886290023;  // std dev = 1,184, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.11231637819360639;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(D, E), projectmember(F, E) )
%   | | | | then return 0.3068185169456188;  // std dev = 0,882, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.3332020780522794;  // std dev = 0,877, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1265041823895948;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.4728142761955487;  // std dev = 0,156, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(D, E), inphase(E, F) )
%   | | | | then return 0.25055682747586167;  // std dev = 0,876, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else return 0.22994621269104967;  // std dev = 0,882, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.10066231358530939;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.36123480553973486;  // std dev = 0,150, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( yearsinprogram(A, D), yearsinprogram(C, D) )
%   | | then return -0.1774118718715152;  // std dev = 0,708, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.1111624938501289;  // std dev = 0,499, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( projectmember(F, B) )
%   | | | | then return 0.3821398458466892;  // std dev = 0,823, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else return 0.19574671664354548;  // std dev = 0,884, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.2844027869620622;  // std dev = 0,136, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A), tempadvisedby(D, B) )
%   | | then return 0.2346251267207976;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(C, E), projectmember(F, E) )
%   | | | then return 0.10263802004674769;  // std dev = 0,858, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then return 0.18125389316950294;  // std dev = 0,817, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else return 0.19693875904618374;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.07966539613253586;  // std dev = 1,067, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.19513203144882174;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(D, E), projectmember(F, E) )
%   | | | | then return 0.0795807834554847;  // std dev = 0,859, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.13989850922349129;  // std dev = 0,820, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.010154443886013076;  // std dev = 1,029, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.20495936667875497;  // std dev = 0,130, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.16629256489142386;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(D, E), projectmember(F, E) )
%   | | | | then return 0.062244341613936605;  // std dev = 0,859, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.10952022186663782;  // std dev = 0,823, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.007763357577322183;  // std dev = 1,029, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.1742981055135568;  // std dev = 0,116, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.144497546597123;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(D, E), projectmember(F, E) )
%   | | | | then return 0.049038509895830196;  // std dev = 0,859, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.08681117684212296;  // std dev = 0,826, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.005931861801989369;  // std dev = 1,029, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.15111718459166937;  // std dev = 0,104, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
Results
   AUC ROC   = 0.958285
   AUC PR    = 0.947272
   CLL	      = -0.264685
   Precision = 0.849057 at threshold = 0.5
   Recall    = 0.927835
   F1        = 0.8867


Total learning time: 5.738 seconds
Total inference time: 0.916 seconds
AUC ROC: 0.958285


Dataset: imdb->uwcse, Fold: 5, Type: scratch, Time: 00:40:53
{'Recall': 0.927835, 'AUC PR': 0.947272, 'F1': 0.8867, 'AUC ROC': 0.958285, 'Inference time': 0.916, 'Precision': [0.849057, 0.5], 'Learning time': 5.738, 'CLL': -0.264685}


Start learning from source dataset


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then if ( projectmember(F, B) )
%   | | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else if ( inphase(A, G), inphase(D, G) )
%   | | | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else if ( publication(E, H), professor(H) )
%   | | | | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( inphase(A, I), inphase(D, I) )
%   | | | | then return 0.44148226843284566;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | | else return 0.691482268432845;  // std dev = 0,373, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | | else return 0.7470378239884004;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.14185106490048768;  // std dev = 6,83e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then if ( publication(F, B) )
%   | | | | then if ( publication(E, G), professor(G) )
%   | | | | | then return 0.006763802938225112;  // std dev = 0,906, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | | else return 0.508243899526118;  // std dev = 0,732, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.46267478360834063;  // std dev = 1,116, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else if ( yearsinprogram(A, H), yearsinprogram(D, H) )
%   | | | | then if ( inphase(A, I), inphase(D, I) )
%   | | | | | then return 0.39551868464348716;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return 0.09974133989596427;  // std dev = 0,799, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.5830878470141942;  // std dev = 0,378, 34,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=28 */
%   | | else return 0.6302322013528499;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.12544463852839155;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.5553664367462842;  // std dev = 1,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( tempadvisedby(D, B) )
%   | | | then if ( publication(E, A) )
%   | | | | then return 0.1662795146175638;  // std dev = 0,411, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | | else return 0.4274296903915923;  // std dev = 0,405, 35,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=27 */
%   | | | else return 0.5351708066784474;  // std dev = 0,253, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else if ( publication(F, A), projectmember(G, B) )
%   | | then return 0.4246244871606586;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.2699887286359754;  // std dev = 1,087, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else if ( publication(I, A) )
%   | | | | then return 0.27712157957480726;  // std dev = 1,055, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return 0.4455630745553556;  // std dev = 0,922, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1123163781936063;  // std dev = 4,94e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( publication(E, F), professor(F) )
%   | | | then if ( publication(G, B) )
%   | | | | then return -0.017821059921224774;  // std dev = 0,905, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return 0.2959315201806431;  // std dev = 1,095, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.3698987830469169;  // std dev = 0,681, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(H, A), publication(I, B) )
%   | | | then return 0.47191937090694713;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.34766326258647806;  // std dev = 0,364, 57,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=47 */
%   | | | | else if ( projectmember(K, B) )
%   | | | | | then return 0.2082282372315259;  // std dev = 1,087, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return 0.29178820451116816;  // std dev = 0,415, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.10159632948783624;  // std dev = 4,59e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.022440561157138147;  // std dev = 0,432, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.2814102265462396;  // std dev = 0,331, 65,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=54 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then if ( projectmember(H, B) )
%   | | | | | then if ( inphase(A, I), inphase(G, I) )
%   | | | | | | then return 0.31713840310679103;  // std dev = 0,808, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | else return 0.10601344814616565;  // std dev = 1,094, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return 0.31151173834275914;  // std dev = 0,710, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.1301866515648992;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.17198713353969897;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.09269127618926107;  // std dev = 1,05e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( inphase(A, F), inphase(E, F) )
%   | | | then return -0.09314623891355622;  // std dev = 0,616, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(D, G), professor(G) )
%   | | | | then if ( publication(H, B) )
%   | | | | | then return -0.03651438601552689;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else return 0.2479908141674083;  // std dev = 0,895, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.4051670017473235;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then if ( inphase(A, K), inphase(I, K) )
%   | | | | then return 0.20793892724455146;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return -0.006858810603944623;  // std dev = 0,883, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.21301883864164334;  // std dev = 0,348, 71,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=60 */
%   else return -0.0851847513883968;  // std dev = 2,58e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253545;  // std dev = 5,96e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.004128461124947154;  // std dev = 0,423, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else if ( publication(F, B), publication(G, A) )
%   | | | | then return 0.09839162339252294;  // std dev = 0,357, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | | else if ( publication(H, B) )
%   | | | | | then return 0.1613404880819403;  // std dev = 0,377, 28,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   | | | | | else if ( projectmember(I, B) )
%   | | | | | | then if ( inphase(A, J), inphase(D, J) )
%   | | | | | | | then return 0.20476850554487291;  // std dev = 0,827, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | | else return 0.021685541557571585;  // std dev = 1,092, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | | else return 0.20408766869459424;  // std dev = 0,639, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1766464128920462;  // std dev = 0,306, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.07877675473109173;  // std dev = 2,98e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.15605777562231563;  // std dev = 0,862, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( inphase(A, G), inphase(E, G) )
%   | | | | then return -0.2643198733549574;  // std dev = 0,174, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else return 0.12088337359120377;  // std dev = 0,356, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.13900633646670327;  // std dev = 0,340, 64,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=54 */
%   | | | else if ( projectmember(I, B) )
%   | | | | then return 0.015330473914601206;  // std dev = 1,065, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.006052642088474817;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.12289748800307217;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( inphase(A, F), inphase(D, F) )
%   | | | then return 0.005462507848111942;  // std dev = 0,879, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.040094164396175386;  // std dev = 0,883, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.11384285735979018;  // std dev = 0,326, 65,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=54 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then if ( projectmember(I, B) )
%   | | | | | then return 0.05936256640315269;  // std dev = 0,460, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | | | else return 0.15368767072099426;  // std dev = 0,565, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.00469694282372816;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.019104408970997078;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06842697784420271;  // std dev = 1,97e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.13400703000801106;  // std dev = 1,83e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.011065839533922523;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.09329155561944401;  // std dev = 0,326, 65,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=54 */
%   | | | else if ( publication(G, A), projectmember(H, B) )
%   | | | | then return 0.10533258893960817;  // std dev = 0,863, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else if ( projectmember(I, B) )
%   | | | | | then return -0.0026580139233430165;  // std dev = 1,065, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else if ( tempadvisedby(J, B) )
%   | | | | | | then return 0.12173741773903667;  // std dev = 0,566, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | else if ( publication(K, A) )
%   | | | | | | | then return 0.0036467285094803716;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | | else return 0.015363431460879262;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06419184008202626;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */


Predicates from source: ['advisedby(person,person).', 'yearsinprogram(person,year).', 'professor(person).', 'student(person).', 'projectmember(project,person).', 'publication(title,person).', 'inphase(person,prequals).', 'tempadvisedby(person,person).'] 



Best mapping found: ['yearsinprogram(A,B) -> genre(A,B)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- director(A), actor(B).;true;false
0;true;movie(C, B), movie(C, A).;false;false
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,false;movie(F, A).;false;true
2;true,false,false;movie(I, A).;false;false
2;true,true;movie(C, A).;false;false
2;true;movie(C, B).;true;true
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,false;movie(E, A).;true;true
3;true,false,true;movie(E, F), actor(F).;true;false
3;true;movie(C, A), movie(C, B).;false;true
3;true,false,true,true;movie(G, B).;false;false
3;true,false,false,false;movie(J, B).;false;false
3;true,false,false;movie(H, A), movie(I, B).;false;true
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true,false;movie(E, D).;false;true
4;true,false,false;movie(F, B).;false;true
4;true;movie(C, A), movie(C, B).;false;true
4;true,false,false,false;movie(J, A).;false;false
5;;workedunder(B, A) :- director(A), actor(B).;true;false
5;true,false;movie(D, A).;true;true
5;true,false,true;genre(A, F), genre(E, F).;false;true
5;true;movie(C, A), movie(C, B).;false;true
5;true,false,true,false;movie(D, G), actor(G).;true;false
5;true,false,true,false,true;movie(H, B).;false;false
5;true,false,false;movie(J, I).;true;false
5;true,false,false,true;genre(A, K), genre(I, K).;false;false
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,false;movie(D, A).;true;true
7;true,false,true;genre(A, G), genre(E, G).;false;false
7;true;movie(C, B), movie(C, A).;false;true
7;true,false,false,false;movie(J, A).;false;false
7;true,false,false;movie(H, B).;false;true
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,false;movie(E, D).;true;true
8;true,false,true;genre(A, F), genre(D, F).;false;false
8;true;movie(C, B), movie(C, A).;false;true
8;true,false,false,false;movie(J, A).;false;false
8;true,false,false;movie(G, B).;false;true
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,false;movie(E, D).;false;true
9;true;movie(C, B), movie(C, A).;false;true
9;true,false,false,false,false;movie(K, A).;false;false
9;true,false,false,false;movie(G, A).;false;true
9;true,false,false;movie(F, B).;false;true
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099086
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.579 seconds
Total inference time: 0.821 seconds
AUC ROC: 1.0


Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [5.77e-08, 56, 0], 'true,true': [0.0, 0, 56]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 56, 0], 'true,true': [0.0, 0, 56]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [3.94e-08, 56, 0], 'true,true,true': [1.03e-07, 0, 56], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [3.8e-08, 56, 0], 'true,true': [0.0, 0, 56]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 56, 0], 'true,true': [0.0, 0, 56]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [1.83e-08, 56, 0], 'true,true': [0.0, 0, 56]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [1.83e-08, 56, 0], 'true,true': [0.0, 0, 56]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [1.29e-08, 56, 0], 'true,true': [0.0, 0, 56]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [1.67e-08, 56, 0], 'true,true': [0.0, 0, 56]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 56, 0], 'true,true': [5.16e-08, 0, 56]}]
{'': [-1.2688263138573217e-16, 5.947623346206196e-17], 'true': [-1.2688263138573217e-16, nan]}
{'': [-1.9032394707859825e-16, -3.766828119263924e-17], 'true': [-1.9032394707859825e-16, nan]}
{'': [1.9032394707859825e-16, 2.7755575615628914e-17], 'true,true': [1.9032394707859825e-16, nan], 'true': [1.9032394707859825e-16, nan]}
{'': [-3.489272363107635e-16, 2.577303450022685e-17], 'true': [-3.489272363107635e-16, nan]}
{'': [-1.2688263138573217e-16, -9.912705577010326e-19], 'true': [-1.2688263138573217e-16, nan]}
{'': [-3.172065784643304e-17, 5.9476233462061954e-18], 'true': [-3.172065784643304e-17, nan]}
{'': [-1.586032892321652e-17, 5.9476233462061954e-18], 'true': [-1.586032892321652e-17, nan]}
{'': [-3.9650822308041306e-17, 2.9738116731030977e-18], 'true': [-3.9650822308041306e-17, nan]}
{'': [-1.1895246692412391e-17, 4.956352788505163e-18], 'true': [-1.1895246692412391e-17, nan]}
{'': [4.7580986769649563e-17, -1.982541115402065e-18], 'true': [4.7580986769649563e-17, nan]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.09269127618926105;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
Results
   AUC ROC   = 0.95092
   AUC PR    = 0.910615
   CLL	      = -0.195966
   Precision = 0.910615 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.953216


Total learning time: 1.472 seconds
Total inference time: 0.715 seconds
AUC ROC: 0.95092


Refined model AUC ROC: 0.95092


Dataset: uwcse->imdb, Fold: 1, Type: transfer, Time: 00:41:13
{'Recall': 1.0, 'AUC PR': 0.910615, 'Mapping results': {'Generating paths time': 2.239889621734619, 'Finding best mapping': 0.5868589878082275, 'Generating mappings time': 0.4101521968841553, 'Knowledge compiling time': 0.013906717300415039, 'Possible mappings': 2592, 'Total time': 3.250814437866211}, 'F1': 0.953216, 'AUC ROC': 0.95092, 'Inference time': 0.715, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.821, 'Precision': [1.0, 0.5], 'Learning time': 1.579, 'CLL': -0.099086}, 'Precision': [0.910615, 0.5], 'Learning time': 3.051, 'CLL': -0.195966}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.14185106490048768;  // std dev = 5,37e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.11231637819360632;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.10159632948783626;  // std dev = 2,79e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.09269127618926103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.0851847513883968;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07877675473109179;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
Results
   AUC ROC   = 0.95092
   AUC PR    = 0.910615
   CLL	      = -0.195966
   Precision = 0.910615 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.953216


Total learning time: 1.735 seconds
Total inference time: 0.723 seconds
AUC ROC: 0.95092


Dataset: uwcse->imdb, Fold: 1, Type: scratch, Time: 00:41:15
{'Recall': 1.0, 'AUC PR': 0.910615, 'F1': 0.953216, 'AUC ROC': 0.95092, 'Inference time': 0.723, 'Precision': [0.910615, 0.5], 'Learning time': 1.735, 'CLL': -0.195966}


Best mapping found: ['yearsinprogram(A,B) -> genre(A,B)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- director(A), actor(B).;true;false
0;true;movie(C, B), movie(C, A).;false;false
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,false;movie(F, A).;false;true
2;true,false,false;movie(I, A).;false;false
2;true,true;movie(C, A).;false;false
2;true;movie(C, B).;true;true
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,false;movie(E, A).;true;true
3;true,false,true;movie(E, F), actor(F).;true;false
3;true;movie(C, A), movie(C, B).;false;true
3;true,false,true,true;movie(G, B).;false;false
3;true,false,false,false;movie(J, B).;false;false
3;true,false,false;movie(H, A), movie(I, B).;false;true
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true,false;movie(E, D).;false;true
4;true,false,false;movie(F, B).;false;true
4;true;movie(C, A), movie(C, B).;false;true
4;true,false,false,false;movie(J, A).;false;false
5;;workedunder(B, A) :- director(A), actor(B).;true;false
5;true,false;movie(D, A).;true;true
5;true,false,true;genre(A, F), genre(E, F).;false;true
5;true;movie(C, A), movie(C, B).;false;true
5;true,false,true,false;movie(D, G), actor(G).;true;false
5;true,false,true,false,true;movie(H, B).;false;false
5;true,false,false;movie(J, I).;true;false
5;true,false,false,true;genre(A, K), genre(I, K).;false;false
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,false;movie(D, A).;true;true
7;true,false,true;genre(A, G), genre(E, G).;false;false
7;true;movie(C, B), movie(C, A).;false;true
7;true,false,false,false;movie(J, A).;false;false
7;true,false,false;movie(H, B).;false;true
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,false;movie(E, D).;true;true
8;true,false,true;genre(A, F), genre(D, F).;false;false
8;true;movie(C, B), movie(C, A).;false;true
8;true,false,false,false;movie(J, A).;false;false
8;true,false,false;movie(G, B).;false;true
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,false;movie(E, D).;false;true
9;true;movie(C, B), movie(C, A).;false;true
9;true,false,false,false,false;movie(K, A).;false;false
9;true,false,false,false;movie(G, A).;false;true
9;true,false,false;movie(F, B).;false;true
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360629;  // std dev = 4,08e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then if ( movie(F, A) )
%   | | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783621;  // std dev = 3,49e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109175;  // std dev = 1,97e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then if ( genre(B, F), genre(E, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094897
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.872 seconds
Total inference time: 0.863 seconds
AUC ROC: 1.0


Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 1, 0], 'false': [5.96e-08, 57, 0], 'true,true': [0.0, 0, 58]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 1, 0], 'false': [0.0, 57, 0], 'true,true': [0.0, 0, 58]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [4.08e-08, 57, 0], 'true,true,true': [1.19e-07, 0, 58], 'true,true,false': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,true': 'movie(F, A)'}, {'true,false,true,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'false': [3.49e-08, 57, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.0, 57, 0], 'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'genre(B, E), genre(F, E)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [1.83e-08, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 1, 0], 'false': [1.97e-08, 57, 0], 'true,true': [0.0, 0, 58]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, B)', 'true,false,true': 'genre(B, E), genre(F, E)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [1.05e-08, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, E)', 'true,false,true': 'genre(B, F), genre(E, F)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [1.83e-08, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 57, 0], 'true,false,true': [0.0, 1, 0], 'true,true': [3.94e-08, 0, 58], 'true,false,false': [0.0, 0, 0]}]
{'': [0.016661878770467882, 6.232831015439475e-17], 'true': [-3.675221047035001e-16, 0.0]}
{'': [0.011894690526567029, -3.895519384649672e-17], 'true': [-1.2250736823450003e-16, 0.0]}
{'': [0.0074278712436747505, 2.921639538487254e-17], 'true,true': [2.4501473646900006e-16, 0.0], 'true': [0.0074278712436747505, nan]}
{'': [0.004489961488609621, 2.1425356615573195e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-3.3689526264487507e-16, 0.0], 'true,false,true,true': [0.0, nan]}
{'': [0.002847550778199424, -9.73879846162418e-19], 'true,false': [0.0, nan], 'true': [-1.5313421029312505e-16, 0.0]}
{'': [0.0019301600785667096, 5.843279076974508e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-3.062684205862501e-17, 0.0]}
{'': [0.0013871370738595256, 6.817158923136926e-18], 'true': [-2.2970131543968756e-17, 0.0]}
{'': [0.0010442245890247297, 1.947759692324836e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-3.062684205862501e-17, 0.0]}
{'': [0.0008150414371814251, 5.843279076974508e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [0.0, 0.0]}
{'': [0.0006545251198185025, -2.434699615406045e-18], 'true,false': [0.0, nan], 'true': [2.6798486801296883e-17, 0.0]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5235720169872421;  // std dev = 0,142, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360629;  // std dev = 4,08e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4201866713108457;  // std dev = 0,028, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.17599461219552054;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783621;  // std dev = 3,49e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32252949040305123;  // std dev = 0,025, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.15190745212917164;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926105;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25641501541367834;  // std dev = 0,022, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.13335372167226833;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21063695601315544;  // std dev = 0,019, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11868109989829433;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109175;  // std dev = 1,97e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17774221520768183;  // std dev = 0,017, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10681831899809359;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15323425430155166;  // std dev = 0,015, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09704666830458525;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420268;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1343902625415024;  // std dev = 0,013, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08886881781560399;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096198
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.617 seconds
Total inference time: 0.813 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb, Fold: 2, Type: transfer, Time: 00:41:24
{'Recall': 1.0, 'AUC PR': 1.0, 'Mapping results': {'Generating paths time': 2.1184470653533936, 'Finding best mapping': 0.6147446632385254, 'Generating mappings time': 0.40753793716430664, 'Knowledge compiling time': 0.03455543518066406, 'Possible mappings': 2592, 'Total time': 3.17529296875}, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.813, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.863, 'Precision': [1.0, 0.5], 'Learning time': 1.872, 'CLL': -0.094897}, 'Precision': [1.0, 0.5], 'Learning time': 3.489, 'CLL': -0.096198}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.8581489350995115;  // std dev = 2,60e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6813641993271577;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.719473412210955;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5288038212098718;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.5553664367462843;  // std dev = 1,26e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.39742934112412265;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.4175135841583102;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.10159632948783626;  // std dev = 2,79e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3025884514838787;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3207118471601495;  // std dev = 2,11e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.09269127618926104;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23719304019103774;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.08518475138839679;  // std dev = 1,05e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.19142843787805347;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.20975771563253542;  // std dev = 5,96e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.07877675473109176;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15835970847973962;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1770964977452775;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.13366131757790028;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1527438580936709;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.0684269778442027;  // std dev = 1,67e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11466128853019192;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1340070300080111;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
Results
   AUC ROC   = 0.95779
   AUC PR    = 0.925491
   CLL	      = -0.19503
   Precision = 0.912676 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954345


Total learning time: 2.034 seconds
Total inference time: 0.771 seconds
AUC ROC: 0.95779


Dataset: uwcse->imdb, Fold: 2, Type: scratch, Time: 00:41:27
{'Recall': 1.0, 'AUC PR': 0.925491, 'F1': 0.954345, 'AUC ROC': 0.95779, 'Inference time': 0.771, 'Precision': [0.912676, 0.5], 'Learning time': 2.034, 'CLL': -0.19503}


Best mapping found: ['yearsinprogram(A,B) -> genre(A,B)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- director(A), actor(B).;true;false
0;true;movie(C, B), movie(C, A).;false;false
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,false;movie(F, A).;false;true
2;true,false,false;movie(I, A).;false;false
2;true,true;movie(C, A).;false;false
2;true;movie(C, B).;true;true
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,false;movie(E, A).;true;true
3;true,false,true;movie(E, F), actor(F).;true;false
3;true;movie(C, A), movie(C, B).;false;true
3;true,false,true,true;movie(G, B).;false;false
3;true,false,false,false;movie(J, B).;false;false
3;true,false,false;movie(H, A), movie(I, B).;false;true
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true,false;movie(E, D).;false;true
4;true,false,false;movie(F, B).;false;true
4;true;movie(C, A), movie(C, B).;false;true
4;true,false,false,false;movie(J, A).;false;false
5;;workedunder(B, A) :- director(A), actor(B).;true;false
5;true,false;movie(D, A).;true;true
5;true,false,true;genre(A, F), genre(E, F).;false;true
5;true;movie(C, A), movie(C, B).;false;true
5;true,false,true,false;movie(D, G), actor(G).;true;false
5;true,false,true,false,true;movie(H, B).;false;false
5;true,false,false;movie(J, I).;true;false
5;true,false,false,true;genre(A, K), genre(I, K).;false;false
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,false;movie(D, A).;true;true
7;true,false,true;genre(A, G), genre(E, G).;false;false
7;true;movie(C, B), movie(C, A).;false;true
7;true,false,false,false;movie(J, A).;false;false
7;true,false,false;movie(H, B).;false;true
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,false;movie(E, D).;true;true
8;true,false,true;genre(A, F), genre(D, F).;false;false
8;true;movie(C, B), movie(C, A).;false;true
8;true,false,false,false;movie(J, A).;false;false
8;true,false,false;movie(G, B).;false;true
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,false;movie(E, D).;false;true
9;true;movie(C, B), movie(C, A).;false;true
9;true,false,false,false,false;movie(K, A).;false;false
9;true,false,false,false;movie(G, A).;false;true
9;true,false,false;movie(F, B).;false;true
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.14185106490048788;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.12544463852839113;  // std dev = 8,16e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 1,00e-07, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then if ( movie(F, A) )
%   | | | | then return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783641;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926104;  // std dev = 3,33e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else if ( movie(D, G), actor(G) )
%   | | | | then if ( movie(H, A) )
%   | | | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 5,77e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109157;  // std dev = 7,22e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B) )
%   | | then if ( genre(B, E), genre(F, E) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then if ( genre(B, F), genre(E, F) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 5,96e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.197 seconds
Total inference time: 0.737 seconds
AUC ROC: 1.0


Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [2.11e-08, 26, 0], 'false': [0.0, 152, 0], 'true,true': [1.09e-06, 0, 178]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 26, 0], 'false': [8.16e-08, 152, 0], 'true,true': [0.0, 0, 178]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [1e-07, 152, 0], 'true,true,true': [5.9e-07, 0, 178], 'true,true,false': [0.0, 26, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,true': 'movie(F, A)'}, {'true,false,true,true,false': [0.0, 0, 0], 'true,true': [3.77e-07, 0, 178], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 152, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true,true': [0.0, 26, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [3.33e-08, 152, 0], 'true,false,true': [7.45e-09, 26, 0], 'true,true': [3.58e-07, 0, 178], 'true,false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'genre(B, E), genre(F, E)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false': 'movie(D, G), actor(G)', 'true,false,true,false,true': 'movie(H, A)'}, {'false': [5.77e-08, 152, 0], 'true,true': [3.63e-07, 0, 178], 'true,false,true,true': [9.13e-09, 15, 0], 'true,false,true,false,false': [0.0, 0, 0], 'true,false,true,false,true,true': [5.27e-09, 11, 0], 'true,false,true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 26, 0], 'false': [7.22e-08, 152, 0], 'true,true': [3e-07, 0, 178]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, B)', 'true,false,true': 'genre(B, E), genre(F, E)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 152, 0], 'true,false,true,false': [2.63e-09, 11, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 178], 'true,false,true,true': [3.73e-09, 15, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, E)', 'true,false,true': 'genre(B, F), genre(E, F)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [5.96e-08, 152, 0], 'true,false,true,false': [2.63e-09, 11, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 178], 'true,false,true,true': [3.73e-09, 15, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 152, 0], 'true,false,true': [0.0, 26, 0], 'true,true': [7.6e-08, 0, 178], 'true,false,false': [0.0, 0, 0]}]
{'': [0.11120722798924111, -4.382459307730881e-17], 'true': [6.706246045376226e-15, 1.708035422500241e-17]}
{'': [0.07938934015015162, 4.382459307730881e-17], 'true': [-3.193450497798203e-15, -4.270088556250602e-18]}
{'': [0.04957622019997617, 6.573688961596321e-17], 'true,true': [1.9559884299013994e-15, -2.135044278125301e-18], 'true': [0.04957622019997617, nan]}
{'': [0.029967579155102845, -3.5059674461847047e-17], 'true,false': [-2.135044278125301e-18, nan], 'true,false,true': [-2.135044278125301e-18, nan], 'true': [7.983626244495507e-16, -2.135044278125301e-18], 'true,false,true,true': [-2.135044278125301e-18, nan]}
{'': [0.01900555351317545, 7.304098846218135e-18], 'true,false': [2.135044278125301e-18, nan], 'true': [7.185263620045957e-16, 2.135044278125301e-18]}
{'': [0.012882565938082893, 2.1912296538654406e-17], 'true,false': [1.1742743529689156e-17, nan], 'true,false,true': [5.551115123125783e-18, 2.523234146875356e-18], 'true': [7.384854276158345e-16, 1.1742743529689156e-17], 'true,false,true,false': [2.523234146875356e-18, nan], 'true,false,true,false,true': [2.523234146875356e-18, nan]}
{'': [0.009258239778964167, 3.432926457722524e-17], 'true': [5.03966406683779e-16, -2.135044278125301e-18]}
{'': [0.006969521477341647, -5.843279076974508e-18], 'true,false': [-1.0675221390626506e-18, nan], 'true,false,true': [9.251858538542971e-19, 6.30808536718839e-19], 'true': [-1.6965205769552953e-16, -1.0675221390626506e-18]}
{'': [0.005439872668258625, 2.337311630789803e-17], 'true,false': [-4.803849625781927e-18, nan], 'true,false,true': [9.251858538542971e-19, 6.30808536718839e-19], 'true': [-4.490789762528723e-17, -4.803849625781927e-18]}
{'': [0.004368530417670789, -8.034508730839949e-18], 'true,false': [-1.6012832085939759e-18, nan], 'true': [3.2433481618263e-17, -1.6012832085939759e-18]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true,false;genre(B, E), genre(F, E).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true,false;genre(B, E), genre(F, E).;true;true', '7;true;movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true,false;genre(B, F), genre(E, F).;true;true', '8;true;movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.14185106490048788;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.12544463852839113;  // std dev = 8,16e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.45362429351734823;  // std dev = 0,240, 105,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=89 */
%   | | else return 0.4879237281664969;  // std dev = 0,201, 99,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 1,00e-07, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4382227224339493;  // std dev = 0,056, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.16792756177003845;  // std dev = 0,012, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.10159632948783641;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3347964182718767;  // std dev = 0,051, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14575285321884227;  // std dev = 0,011, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.09269127618926104;  // std dev = 3,33e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.264765238107548;  // std dev = 0,045, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D), genre(E, D) )
%   | | then return -0.1283282650606194;  // std dev = 0,007, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.12879527676381636;  // std dev = 0,006, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839679;  // std dev = 5,77e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.21942317066887213;  // std dev = 1,26e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.21360504054703822;  // std dev = 6,66e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.11346208158762652;  // std dev = 9,10e-05, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.11695218845239327;  // std dev = 7,63e-05, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07877675473109157;  // std dev = 7,22e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.18415385836381393;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.17991322672264512;  // std dev = 6,66e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( genre(B, D), genre(E, D) )
%   | | then if ( female(A) )
%   | | | then return -0.10255595954663024;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10542651857588518;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.10251298459128623;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10538248199203429;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07324622576333707;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1580767679426138;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1548772884595503;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( genre(B, D), genre(E, D) )
%   | | then if ( female(A) )
%   | | | then return -0.09349419110339881;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.09588913052959744;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.09345825889961228;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09585246722058516;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420265;  // std dev = 5,96e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1381567122375107;  // std dev = 7,15e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1356703710002809;  // std dev = 6,99e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.08585433513753662;  // std dev = 5,90e-05, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.08787660776641845;  // std dev = 4,90e-05, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06419184008202625;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096153
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.538 seconds
Total inference time: 0.789 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb, Fold: 3, Type: transfer, Time: 00:41:38
{'Recall': 1.0, 'AUC PR': 1.0, 'Mapping results': {'Generating paths time': 2.060189962387085, 'Finding best mapping': 0.6760642528533936, 'Generating mappings time': 0.4086308479309082, 'Knowledge compiling time': 0.01551675796508789, 'Possible mappings': 2592, 'Total time': 3.1604089736938477}, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.789, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.737, 'Precision': [1.0, 0.5], 'Learning time': 2.197, 'CLL': -0.094637}, 'Precision': [1.0, 0.5], 'Learning time': 5.734999999999999, 'CLL': -0.096153}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.14185106490048788;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.12544463852839113;  // std dev = 8,16e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360624;  // std dev = 8,69e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.10159632948783641;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.09269127618926104;  // std dev = 3,33e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.08518475138839679;  // std dev = 3,94e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109165;  // std dev = 5,77e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07324622576333704;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06842697784420267;  // std dev = 4,71e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06419184008202625;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.073 seconds
Total inference time: 0.694 seconds
AUC ROC: 1.0


Dataset: uwcse->imdb, Fold: 3, Type: scratch, Time: 00:41:42
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.694, 'Precision': [1.0, 0.5], 'Learning time': 3.073, 'CLL': -0.094637}


Best mapping found: ['yearsinprogram(A,B) -> genre(A,B)', 'inphase(A,B) -> movie(B,A)', 'professor(A) -> actor(A)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- director(A), actor(B).;true;false
0;true;movie(C, B), movie(C, A).;false;false
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,false;movie(F, A).;false;true
2;true,false,false;movie(I, A).;false;false
2;true,true;movie(C, A).;false;false
2;true;movie(C, B).;true;true
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,false;movie(E, A).;true;true
3;true,false,true;movie(E, F), actor(F).;true;false
3;true;movie(C, A), movie(C, B).;false;true
3;true,false,true,true;movie(G, B).;false;false
3;true,false,false,false;movie(J, B).;false;false
3;true,false,false;movie(H, A), movie(I, B).;false;true
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true,false;movie(E, D).;false;true
4;true,false,false;movie(F, B).;false;true
4;true;movie(C, A), movie(C, B).;false;true
4;true,false,false,false;movie(J, A).;false;false
5;;workedunder(B, A) :- director(A), actor(B).;true;false
5;true,false;movie(D, A).;true;true
5;true,false,true;movie(F, A), movie(F, E).;false;true
5;true;movie(C, A), movie(C, B).;false;true
5;true,false,true,false;movie(D, G), actor(G).;true;false
5;true,false,true,false,true;movie(H, B).;false;false
5;true,false,false;movie(J, I).;true;false
5;true,false,false,true;movie(K, A), movie(K, I).;false;false
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,false;movie(D, A).;true;true
7;true,false,true;movie(G, A), movie(G, E).;false;false
7;true;movie(C, B), movie(C, A).;false;true
7;true,false,false,false;movie(J, A).;false;false
7;true,false,false;movie(H, B).;false;true
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,false;movie(E, D).;true;true
8;true,false,true;movie(F, A), movie(F, D).;false;false
8;true;movie(C, B), movie(C, A).;false;true
8;true,false,false,false;movie(J, A).;false;false
8;true,false,false;movie(G, B).;false;true
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,false;movie(E, D).;false;true
9;true;movie(C, B), movie(C, A).;false;true
9;true,false,false,false,false;movie(K, A).;false;false
9;true,false,false,false;movie(G, A).;false;true
9;true,false,false;movie(F, B).;false;true
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then if ( movie(F, A) )
%   | | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.092691276189261;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(E, B), movie(E, F) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(E, B), movie(E, F) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, B), movie(F, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202622;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.901 seconds
Total inference time: 0.793 seconds
AUC ROC: 1.0


Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 4, 0], 'false': [4.34e-08, 41, 0], 'true,true': [2.23e-07, 0, 45]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 4, 0], 'false': [0.0, 41, 0], 'true,true': [0.0, 0, 45]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 4, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,true': 'movie(F, A)'}, {'true,false,true,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true,true': [0.0, 4, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.0, 41, 0], 'true,false,true': [0.0, 4, 0], 'true,true': [2.98e-08, 0, 45], 'true,false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(E, B), movie(E, F)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [1.67e-08, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 4, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 4, 0], 'false': [0.0, 41, 0], 'true,true': [5.58e-08, 0, 45]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(E, B), movie(E, F)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [1.05e-08, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 4, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, B), movie(F, E)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [5.27e-09, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 4, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 41, 0], 'true,false,true': [0.0, 4, 0], 'true,true': [2.36e-08, 0, 45], 'true,false,false': [0.0, 0, 0]}]
{'': [0.07496876301541104, 4.603363760640893e-17], 'true': [1.105288700071267e-15, 0.0]}
{'': [0.05351918877289897, -2.4370749321040022e-17], 'true': [-9.473903143468002e-16, 0.0]}
{'': [0.03342110014406096, -2.7078610356711136e-18], 'true,true': [-3.947459643111668e-17, 0.0], 'true': [0.03342110014406096, nan]}
{'': [0.020202215093805483, -6.769652589177784e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-4.144832625267251e-16, 0.0], 'true,false,true,true': [0.0, nan]}
{'': [0.012812322212040247, -1.0831444142684454e-17], 'true,false': [0.0, nan], 'true': [1.973729821555834e-17, 0.0]}
{'': [0.008684597667842037, 6.769652589177784e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-2.960594732333751e-17, 0.0]}
{'': [0.0062413099982688465, -2.7078610356711136e-18], 'true': [6.908054375445419e-17, 0.0]}
{'': [0.004698403272997808, 2.7078610356711136e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-8.388351741612294e-17, 0.0]}
{'': [0.003667212395044684, 6.769652589177784e-19], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0]}
{'': [0.002944982331900951, -2.030895776753335e-18], 'true,false': [0.0, nan], 'true': [1.2335811384723961e-17, 0.0]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.45264600367860897;  // std dev = 0,241, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.5182729470274015;  // std dev = 0,153, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4305028161823657;  // std dev = 0,046, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17058576081074134;  // std dev = 0,009, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3295498217432774;  // std dev = 0,042, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1477897299437972;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.092691276189261;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.26120468699820715;  // std dev = 0,037, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13012958468047142;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21401643767939021;  // std dev = 0,032, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11609631305298077;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18021787578706777;  // std dev = 0,028, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10470447268847477;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15511031148332063;  // std dev = 0,025, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09528855276200292;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13585362489860853;  // std dev = 0,022, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08738532299926997;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202622;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097273
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.219 seconds
Total inference time: 0.689 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb, Fold: 4, Type: transfer, Time: 00:41:51
{'Recall': 1.0, 'AUC PR': 1.0, 'Mapping results': {'Generating paths time': 2.4783811569213867, 'Finding best mapping': 0.757910966873169, 'Generating mappings time': 0.5260937213897705, 'Knowledge compiling time': 0.013905525207519531, 'Possible mappings': 2592, 'Total time': 3.7762985229492188}, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.689, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.793, 'Precision': [1.0, 0.5], 'Learning time': 1.901, 'CLL': -0.094637}, 'Precision': [1.0, 0.5], 'Learning time': 3.12, 'CLL': -0.097273}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
Results
   AUC ROC   = 0.986647
   AUC PR    = 0.973988
   CLL	      = -0.122206
   Precision = 0.973988 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986823


Total learning time: 1.962 seconds
Total inference time: 0.76 seconds
AUC ROC: 0.986647


Dataset: uwcse->imdb, Fold: 4, Type: scratch, Time: 00:41:54
{'Recall': 1.0, 'AUC PR': 0.973988, 'F1': 0.986823, 'AUC ROC': 0.986647, 'Inference time': 0.76, 'Precision': [0.973988, 0.5], 'Learning time': 1.962, 'CLL': -0.122206}


Best mapping found: ['yearsinprogram(A,B) -> genre(A,B)', 'inphase(A,B) -> movie(B,A)', 'professor(A) -> actor(A)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- director(A), actor(B).;true;false
0;true;movie(C, B), movie(C, A).;false;false
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,false;movie(F, A).;false;true
2;true,false,false;movie(I, A).;false;false
2;true,true;movie(C, A).;false;false
2;true;movie(C, B).;true;true
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,false;movie(E, A).;true;true
3;true,false,true;movie(E, F), actor(F).;true;false
3;true;movie(C, A), movie(C, B).;false;true
3;true,false,true,true;movie(G, B).;false;false
3;true,false,false,false;movie(J, B).;false;false
3;true,false,false;movie(H, A), movie(I, B).;false;true
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true,false;movie(E, D).;false;true
4;true,false,false;movie(F, B).;false;true
4;true;movie(C, A), movie(C, B).;false;true
4;true,false,false,false;movie(J, A).;false;false
5;;workedunder(B, A) :- director(A), actor(B).;true;false
5;true,false;movie(D, A).;true;true
5;true,false,true;movie(F, A), movie(F, E).;false;true
5;true;movie(C, A), movie(C, B).;false;true
5;true,false,true,false;movie(D, G), actor(G).;true;false
5;true,false,true,false,true;movie(H, B).;false;false
5;true,false,false;movie(J, I).;true;false
5;true,false,false,true;movie(K, A), movie(K, I).;false;false
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,false;movie(D, A).;true;true
7;true,false,true;movie(G, A), movie(G, E).;false;false
7;true;movie(C, B), movie(C, A).;false;true
7;true,false,false,false;movie(J, A).;false;false
7;true,false,false;movie(H, B).;false;true
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,false;movie(E, D).;true;true
8;true,false,true;movie(F, A), movie(F, D).;false;false
8;true;movie(C, B), movie(C, A).;false;true
8;true,false,false,false;movie(J, A).;false;false
8;true,false,false;movie(G, B).;false;true
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,false;movie(E, D).;false;true
9;true;movie(C, B), movie(C, A).;false;true
9;true,false,false,false,false;movie(K, A).;false;false
9;true,false,false,false;movie(G, A).;false;true
9;true,false,false;movie(F, B).;false;true
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then if ( movie(F, A) )
%   | | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(E, B), movie(E, F) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(E, B), movie(E, F) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, B), movie(F, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.201 seconds
Total inference time: 0.865 seconds
AUC ROC: 1.0


Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 1, 0], 'false': [4.59e-08, 44, 0], 'true,true': [2.23e-07, 0, 45]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 1, 0], 'false': [0.0, 44, 0], 'true,true': [0.0, 0, 45]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [1.49e-08, 44, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,true': 'movie(F, A)'}, {'true,false,true,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [7.45e-09, 44, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.0, 44, 0], 'true,false,true': [0.0, 1, 0], 'true,true': [2.98e-08, 0, 45], 'true,false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(E, B), movie(E, F)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [2.24e-08, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 1, 0], 'false': [0.0, 44, 0], 'true,true': [5.58e-08, 0, 45]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(E, B), movie(E, F)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [1.05e-08, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, B), movie(F, E)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [9.13e-09, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 44, 0], 'true,false,true': [0.0, 1, 0], 'true,true': [2.36e-08, 0, 45], 'true,false,false': [0.0, 0, 0]}]
{'': [0.021266540642723226, 4.794144879063176e-17], 'true': [1.105288700071267e-15, 0.0]}
{'': [0.015181896531630958, -2.7755575615628914e-17], 'true': [-9.473903143468002e-16, 0.0]}
{'': [0.009480631078200644, 5.046468293750712e-18], 'true,true': [-3.947459643111668e-17, 0.0], 'true': [0.009480631078200644, nan]}
{'': [0.005730803218362994, 1.261617073437678e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-4.144832625267251e-16, 0.0], 'true,false,true,true': [0.0, nan]}
{'': [0.003634497357172579, -1.5139404881252134e-17], 'true,false': [0.0, nan], 'true': [1.973729821555834e-17, 0.0]}
{'': [0.0024635773866361816, 1.1354553660939102e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-2.960594732333751e-17, 0.0]}
{'': [0.0017704850314087769, 0.0], 'true': [6.908054375445419e-17, 0.0]}
{'': [0.0013328055598378111, 2.523234146875356e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-8.388351741612294e-17, 0.0]}
{'': [0.0010402855577152684, 1.8924256101565167e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0]}
{'': [0.0008354090948599093, -2.523234146875356e-18], 'true,false': [0.0, nan], 'true': [1.2335811384723961e-17, 0.0]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.5263367491402023;  // std dev = 0,136, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4209731337415502;  // std dev = 0,024, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17639591428470983;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3230626689993596;  // std dev = 0,021, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15221218711536175;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25677834525752036;  // std dev = 0,019, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13359182574522357;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21089321123947788;  // std dev = 0,016, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11887165848449138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17792989854764027;  // std dev = 0,014, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10697393710222045;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15337645429128072;  // std dev = 0,013, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09717594596820812;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13450115743062455;  // std dev = 0,011, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08897779532965315;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09613
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.639 seconds
Total inference time: 0.826 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb, Fold: 5, Type: transfer, Time: 00:42:03
{'Recall': 1.0, 'AUC PR': 1.0, 'Mapping results': {'Generating paths time': 2.4624104499816895, 'Finding best mapping': 0.7591898441314697, 'Generating mappings time': 0.5269918441772461, 'Knowledge compiling time': 0.013828039169311523, 'Possible mappings': 2592, 'Total time': 3.7624268531799316}, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.826, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.865, 'Precision': [1.0, 0.5], 'Learning time': 1.201, 'CLL': -0.094637}, 'Precision': [1.0, 0.5], 'Learning time': 2.84, 'CLL': -0.09613}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1352095945470413;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14656735148626743;  // std dev = 0,086, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( female(B) )
%   | then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.1288676370195173;  // std dev = 0,215, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
Results
   AUC ROC   = 0.992472
   AUC PR    = 0.990625
   CLL	      = -0.241338
   Precision = 0.864103 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.927098


Total learning time: 1.986 seconds
Total inference time: 0.805 seconds
AUC ROC: 0.992472


Dataset: uwcse->imdb, Fold: 5, Type: scratch, Time: 00:42:06
{'Recall': 1.0, 'AUC PR': 0.990625, 'F1': 0.927098, 'AUC ROC': 0.992472, 'Inference time': 0.805, 'Precision': [0.864103, 0.5], 'Learning time': 1.986, 'CLL': -0.241338}


Start learning from source dataset


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048793;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.12544463852839202;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360676;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.1015963294878365;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.0926912761892606;  // std dev = 1,41e-07, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839678;  // std dev = 9,88e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07877675473109143;  // std dev = 4,21e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07324622576333706;  // std dev = 8,43e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420308;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06419184008202611;  // std dev = 6,99e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */


Predicates from source: ['workedunder(person,person).', 'movie(movie,person).', 'actor(person).', 'director(person).'] 



Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,257, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.7793312011093614;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.727998561682503;  // std dev = 0,037, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.7194734122109544;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6513332194009414;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.56383635071952;  // std dev = 0,045, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.5075287877546114;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.4238778836283327;  // std dev = 0,045, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.38385181684901754;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.325063032352481;  // std dev = 0,040, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.29093859167848835;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.2581587632552567;  // std dev = 0,035, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.22608223947271291;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.21605557902700917;  // std dev = 0,049, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.17994201912074456;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.18172116083778056;  // std dev = 0,043, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.1887415887703554;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.14434145969418472;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.156255686546454;  // std dev = 0,038, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.12238566036638951;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
Results
   AUC ROC   = 0.591354
   AUC PR    = 0.942615
   CLL	      = -0.314562
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 3.212 seconds
Total inference time: 1.293 seconds
AUC ROC: 0.591354


Structure after Parameter Learning
['sameauthor(A, B)', {}, {}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)'}, {'false': [0.269, 16, 187], 'true': [5.96e-08, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'false': 'haswordauthor(B, E), haswordvenue(F, E)'}, {'false,true': [4.21e-08, 0, 12], 'false,false': [0.277, 16, 175], 'true': [0.037, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'false': 'haswordauthor(B, E), haswordvenue(F, E)'}, {'false,true': [0.0, 0, 12], 'false,false': [0.277, 16, 175], 'true': [0.045, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)'}, {'false': [0.269, 16, 187], 'true': [0.045, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)'}, {'false': [0.269, 16, 187], 'true': [0.04, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)'}, {'false': [0.269, 16, 187], 'true': [0.035, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)'}, {'false': [0.269, 16, 187], 'true': [0.049, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)', 'false': 'haswordauthor(A, E), haswordvenue(F, E)'}, {'false,true': [0.0, 0, 12], 'false,false': [0.277, 16, 175], 'true': [0.043, 0, 22]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)'}, {'false': [0.269, 16, 187], 'true': [0.038, 0, 22]}]
{}
{'': [1.6148698540002277e-16, 0.07260549879881219]}
{'': [6.0565144593496065e-05, 0.07247344471340147], 'false': [1.4802973661668753e-16, 0.07675228200980998]}
{'': [9.321068307575267e-05, 0.07234248189380078], 'false': [-2.590520390792032e-16, 0.07675228200981359]}
{'': [9.172710758802035e-05, 0.07228639174459106]}
{'': [7.39266452626937e-05, 0.07230191286126844]}
{'': [5.627066943307431e-05, 0.07232253354482446]}
{'': [0.00010717934048008118, 0.07230546385887213]}
{'': [8.253215326536385e-05, 0.07232484684795443], 'false': [0.0, 0.07675228200981338]}
{'': [6.483379361071906e-05, 0.0723114292054427]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['1;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '2;false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '3;false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '7;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '8;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '8;false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '9;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.7743793015916559;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.7194734122109542;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.6562674200328733;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.5638472497639966;  // std dev = 0,036, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.5075330649418172;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.4238672599566172;  // std dev = 0,036, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.3817402808730763;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.32504393109610147;  // std dev = 0,032, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.2909698955637334;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.2581387339817235;  // std dev = 0,028, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.22611458509511717;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.21185865369667337;  // std dev = 0,025, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.18042447487826963;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.18270989302337945;  // std dev = 0,039, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.14687936590708864;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.1569995544934051;  // std dev = 0,035, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.16191452120306868;  // std dev = 1,49e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.11977133490406823;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.13732792118999446;  // std dev = 0,031, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.14112636968167766;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.10104235828650501;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
Results
   AUC ROC   = 0.591354
   AUC PR    = 0.942615
   CLL	      = -0.308856
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 3.352 seconds
Total inference time: 1.373 seconds
AUC ROC: 0.591354


Refined model AUC ROC: 0.591354


Dataset: imdb->cora, Fold: 1, Type: transfer, Time: 00:42:23
{'Recall': 1.0, 'AUC PR': 0.942615, 'Mapping results': {'Generating paths time': 2.8724944591522217, 'Finding best mapping': 0.00180816650390625, 'Generating mappings time': 0.050405263900756836, 'Knowledge compiling time': 0.06500458717346191, 'Possible mappings': 26, 'Total time': 2.9897210597991943}, 'F1': 0.954114, 'AUC ROC': 0.591354, 'Inference time': 1.373, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.942615, 'F1': 0.954114, 'AUC ROC': 0.591354, 'Inference time': 1.293, 'Precision': [0.912254, 0.5], 'Learning time': 3.212, 'CLL': -0.314562}, 'Precision': [0.912254, 0.5], 'Learning time': 6.564, 'CLL': -0.308856}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.7793312011093614;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.727998561682503;  // std dev = 0,037, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.6553612110941444;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.5630109959081899;  // std dev = 0,042, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.5104620848489115;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.431139086542117;  // std dev = 0,075, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.3830379281928938;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.33006015527843285;  // std dev = 0,068, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.2903415358617158;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.26159755687107616;  // std dev = 0,059, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.2256510974089967;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.2206034856427845;  // std dev = 0,078, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.22433353993734592;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.17657365810208173;  // std dev = 0,277, 191,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=175 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.18506205452538566;  // std dev = 0,069, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.146615530658053;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.15879316069042698;  // std dev = 0,061, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.12205903753108054;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then return 0.1391800264702512;  // std dev = 0,056, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0.10313812229135658;  // std dev = 0,269, 203,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=187 */
Results
   AUC ROC   = 0.591354
   AUC PR    = 0.942615
   CLL	      = -0.305931
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 3.886 seconds
Total inference time: 1.444 seconds
AUC ROC: 0.591354


Dataset: imdb->cora, Fold: 1, Type: scratch, Time: 00:42:29
{'Recall': 1.0, 'AUC PR': 0.942615, 'F1': 0.954114, 'AUC ROC': 0.591354, 'Inference time': 1.444, 'Precision': [0.912254, 0.5], 'Learning time': 3.886, 'CLL': -0.305931}


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6249475655895573;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5553664367462839;  // std dev = 9,42e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4893127157293235;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583102;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3686658221249624;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2780496975590654;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21383763039487122;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1682663346557149;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1351817638661356;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.11050708250003509;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.13400703000801098;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.09163300171566717;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
Results
   AUC ROC   = 0.573001
   AUC PR    = 0.935755
   CLL	      = -0.25356
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 4.486 seconds
Total inference time: 1.95 seconds
AUC ROC: 0.573001


Structure after Parameter Learning
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [0.0, 12, 0], 'true,false,true': [0.0, 0, 12], 'true,true': [1.46e-07, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [5.27e-09, 12, 0], 'true,false,true': [4.21e-08, 0, 12], 'true,true': [0.0, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'false': [9.13e-09, 12, 0], 'true,false,true': [0.0, 0, 12], 'true,true': [9.42e-08, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [0.0, 12, 0], 'true,false,true': [2.11e-08, 0, 12], 'true,true': [0.0, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [5.27e-09, 12, 0], 'true,false,true': [0.0, 0, 12], 'true,true': [2.98e-08, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [5.27e-09, 12, 0], 'true,false,true': [2.11e-08, 0, 12], 'true,true': [0.0, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'false': [3.73e-09, 12, 0], 'true,false,true': [0.0, 0, 12], 'true,true': [0.0, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [3.73e-09, 12, 0], 'true,false,true': [1.05e-08, 0, 12], 'true,true': [0.0, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [2.63e-09, 12, 0], 'true,false,true': [1.05e-08, 0, 12], 'true,true': [0.0, 0, 50], 'true,false,false': [0.322, 8, 60]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [5.89e-09, 12, 0], 'true,false,true': [0.0, 0, 12], 'true,true': [2.98e-08, 0, 50], 'true,false,false': [0.322, 8, 60]}]
{'': [0.05775147928994478, -1.1564823173178714e-17], 'true,false': [-1.4802973661668753e-16, 0.10380622837370185], 'true': [4.263256414560601e-16, 0.0899999999999987]}
{'': [0.05652766809753122, 2.3129646346357427e-18], 'true,false': [1.4802973661668753e-16, 0.10380622837370253], 'true': [-5.684341886080802e-16, 0.08937452391678224]}
{'': [0.055387092507768736, 6.938893903907228e-18], 'true,false': [-1.8503717077085943e-16, 0.1038062283737019], 'true': [1.7763568394002506e-16, 0.08879158861031984]}
{'': [0.05489389779165834, 0.0], 'true,false': [3.700743415417188e-17, 0.10380622837370153], 'true': [-3.552713678800501e-16, 0.08853952235924378]}
{'': [0.0547526880238895, 2.3129646346357427e-18], 'true,false': [-5.551115123125783e-17, 0.10380622837370218], 'true': [1.7763568394002505e-17, 0.08846735164124145]}
{'': [0.0547248701960579, 2.3129646346357427e-18], 'true,false': [3.700743415417188e-17, 0.10380622837370251], 'true': [-2.6645352591003756e-17, 0.0884531342635096]}
{'': [0.054728109414152716, 1.1564823173178713e-18], 'true,false': [-2.7755575615628914e-17, 0.10380622837370236], 'true': [-8.881784197001253e-18, 0.0884547897913058]}
{'': [0.05473691816509228, 1.1564823173178713e-18], 'true,false': [9.25185853854297e-18, 0.1038062283737025], 'true': [-5.773159728050814e-17, 0.08845929184445746]}
{'': [0.054743678807078595, 5.782411586589357e-19], 'true,false': [9.25185853854297e-18, 0.10380622837370244], 'true': [-3.552713678800501e-17, 0.08846274713224686]}
{'': [0.05474657588790153, 2.8912057932946786e-18], 'true,false': [0.0, 0.10380622837370251], 'true': [1.7763568394002505e-17, 0.0884642277975465]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '0;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '0;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '1;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '2;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '3;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '4;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '5;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '6;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '7;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '8;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '9;true;haswordauthor(A, D), haswordvenue(E, D).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6249475655895573;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5553664367462839;  // std dev = 9,42e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4893127157293235;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583102;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3686658221249624;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2780496975590654;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21383763039487122;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1682663346557149;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1351817638661356;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.11050708250003509;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.13400703000801098;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.09163300171566717;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
Results
   AUC ROC   = 0.573001
   AUC PR    = 0.935755
   CLL	      = -0.25356
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 3.536 seconds
Total inference time: 1.954 seconds
AUC ROC: 0.573001


Refined model AUC ROC: 0.573001


Dataset: imdb->cora, Fold: 2, Type: transfer, Time: 00:42:44
{'Recall': 1.0, 'AUC PR': 0.935755, 'Mapping results': {'Generating paths time': 2.8937652111053467, 'Finding best mapping': 0.0018317699432373047, 'Generating mappings time': 0.05190086364746094, 'Knowledge compiling time': 0.11252498626708984, 'Possible mappings': 26, 'Total time': 3.0600290298461914}, 'F1': 0.971831, 'AUC ROC': 0.573001, 'Inference time': 1.954, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.935755, 'F1': 0.971831, 'AUC ROC': 0.573001, 'Inference time': 1.95, 'Precision': [0.945205, 0.5], 'Learning time': 4.486, 'CLL': -0.25356}, 'Precision': [0.945205, 0.5], 'Learning time': 8.022, 'CLL': -0.25356}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.6391264425827672;  // std dev = 0,299, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5601045170241867;  // std dev = 0,060, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.48592512765204937;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.42107682854768397;  // std dev = 0,059, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.3737019165320212;  // std dev = 0,298, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.32315400077390444;  // std dev = 0,053, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.3303304863024126;  // std dev = 1,49e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.27427135680731;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.25685311169812003;  // std dev = 0,047, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.2617251667187038;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21117297403795207;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.21095355124262047;  // std dev = 0,041, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.1735574895378295;  // std dev = 0,298, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.17797891606171873;  // std dev = 0,036, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.18659269369007503;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.13241952932013268;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.1534167930986891;  // std dev = 0,032, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.15991017936197816;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1084159482963164;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.134534826794569;  // std dev = 0,029, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.13957711916837753;  // std dev = 1,18e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.0900122508949007;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
Results
   AUC ROC   = 0.569243
   AUC PR    = 0.934792
   CLL	      = -0.253578
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 6.167 seconds
Total inference time: 1.799 seconds
AUC ROC: 0.569243


Dataset: imdb->cora, Fold: 2, Type: scratch, Time: 00:42:53
{'Recall': 1.0, 'AUC PR': 0.934792, 'F1': 0.971831, 'AUC ROC': 0.569243, 'Inference time': 1.799, 'Precision': [0.945205, 0.5], 'Learning time': 6.167, 'CLL': -0.253578}


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,159, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.7405018762759829;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.842019902841446;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.6249475655895571;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7065881724562119;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.4893127157293236;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.5468696938740781;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.3686658221249617;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.4195813947805949;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4105343182450745;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.27804969755906545;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.3221140384503813;  // std dev = 1,49e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.3146914500056008;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,156, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,156, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.21383763039487166;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.2561287969890445;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.2491651494135098;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.16826633465571472;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.2104331844038576;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.20361064985385513;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
Results
   AUC ROC   = 0.310525
   AUC PR    = 0.866163
   CLL	      = -0.367158
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 4.197 seconds
Total inference time: 1.523 seconds
AUC ROC: 0.310525


Structure after Parameter Learning
['sameauthor(A, B)', {}, {}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true': 'haswordauthor(B, C)'}, {'true,false': [0.0, 0, 7], 'false,false': [0.126, 2, 122], 'true,true': [0.322, 2, 15], 'false,true': [0.0, 0, 7]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true': 'haswordauthor(B, C)'}, {'true,false': [2.11e-08, 0, 7], 'false,false': [0.126, 2, 122], 'true,true': [0.322, 2, 15], 'false,true': [2.11e-08, 0, 7]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)', 'true': 'haswordauthor(A, C)'}, {'true,false': [0.0, 0, 7], 'false': [0.123, 2, 129], 'true,true': [0.322, 2, 15]}]
['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordvenue(D, C)', 'false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true': 'haswordauthor(A, C)'}, {'true,false': [2.58e-08, 0, 7], 'false,false': [0.126, 2, 122], 'true,true': [0.322, 2, 15], 'false,true': [2.11e-08, 0, 7]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'true': 'haswordauthor(B, C)'}, {'true,false': [1.49e-08, 0, 7], 'false': [0.123, 2, 129], 'true,true': [0.322, 2, 15]}]
['sameauthor(A, B)', {}, {}]
['sameauthor(A, B)', {}, {}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'true': 'haswordauthor(B, C)'}, {'true,false': [1.29e-08, 0, 7], 'false': [0.123, 2, 129], 'true,true': [0.322, 2, 15]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordvenue(D, C)', 'true': 'haswordauthor(B, C)'}, {'true,false': [0.0, 0, 7], 'false': [0.123, 2, 129], 'true,true': [0.322, 2, 15]}]
{}
{'': [0.07638888888888928, 0.015034088922561424], 'false': [-2.5376526277146434e-16, 0.015868886576486736], 'true': [0.10380622837370206, -2.5376526277146434e-16]}
{'': [0.07537538597626736, 0.015029328539751419], 'false': [6.344131569286608e-17, 0.015868886576483526], 'true': [0.10380622837370226, 6.344131569286608e-17]}
{'': [0.07443081487783428, 0.015025006309058207], 'true': [0.10380622837370232, -6.344131569286608e-17]}
{'': [0.07402237419322043, 0.015025070741555109], 'false': [6.344131569286608e-17, 0.01586888657648212], 'true': [0.10380622837370244, 9.516197353929913e-17]}
{'': [0.07393055459533811, 0.015022976904198909], 'true': [0.10380622837370246, 3.172065784643304e-17]}
{}
{}
{'': [0.07389891973320521, 0.015023819184466316], 'true': [0.10380622837370239, 2.3790493384824782e-17]}
{'': [0.0738967505544701, 0.015024678342179772], 'true': [0.10380622837370244, 0.0]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['1;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '1;false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '1;true;haswordauthor(B, C).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '2;false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '2;true;haswordauthor(B, C).;true;true', '3;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '3;true;haswordauthor(A, C).;true;true', '4;;sameauthor(A, B) :- haswordauthor(B, C), haswordvenue(D, C).;true;true', '4;false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '4;true;haswordauthor(A, C).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '5;true;haswordauthor(B, C).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '8;true;haswordauthor(B, C).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordvenue(D, C).;true;true', '9;true;haswordauthor(B, C).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.7405018762759829;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.8428817595269913;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.6249475655895571;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.7225444580317083;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7064154257736425;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.4893127157293236;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.5583760131117234;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5462204477130396;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.3686658221249617;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.4197493956125832;  // std dev = 1,49e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4105245667113725;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.27804969755906545;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.32222798960508564;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.31434492616483745;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.21383763039487166;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.25620651271286393;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2488229677046789;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,156, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.16826633465571472;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then return 0.21048804322431675;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.20326346876630141;  // std dev = 0,126, 124,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=122 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.13518176386613595;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.1708223194639666;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.11050708250003544;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.14632340215132472;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
Results
   AUC ROC   = 0.310525
   AUC PR    = 0.866163
   CLL	      = -0.345319
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 4.094 seconds
Total inference time: 1.516 seconds
AUC ROC: 0.310525


Refined model AUC ROC: 0.310525


Dataset: imdb->cora, Fold: 3, Type: transfer, Time: 00:43:08
{'Recall': 1.0, 'AUC PR': 0.866163, 'Mapping results': {'Generating paths time': 2.9347424507141113, 'Finding best mapping': 0.0018396377563476562, 'Generating mappings time': 0.051434993743896484, 'Knowledge compiling time': 0.0837101936340332, 'Possible mappings': 26, 'Total time': 3.0717341899871826}, 'F1': 0.949713, 'AUC ROC': 0.310525, 'Inference time': 1.516, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.866163, 'F1': 0.949713, 'AUC ROC': 0.310525, 'Inference time': 1.523, 'Precision': [0.904241, 0.5], 'Learning time': 4.197, 'CLL': -0.367158}, 'Precision': [0.904241, 0.5], 'Learning time': 8.291, 'CLL': -0.345319}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.7405018762759829;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.8428817595269913;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.6249475655895571;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.7072772824591879;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.4893127157293236;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.5468701792728726;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.3686658221249617;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.4110166992801579;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.27804969755906545;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.3300307640035068;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.3142656310424119;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,156, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.21383763039487166;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.25639933870793424;  // std dev = 1,05e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.24914690358459615;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   return 0;  // std dev = 0,156, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.16826633465571472;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.2163231180647141;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.2032925395059543;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.13518176386613595;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.17880571837800008;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.17072330858603568;  // std dev = 0,123, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
Results
   AUC ROC   = 0.310525
   AUC PR    = 0.866163
   CLL	      = -0.353384
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 4.17 seconds
Total inference time: 1.466 seconds
AUC ROC: 0.310525


Dataset: imdb->cora, Fold: 3, Type: scratch, Time: 00:43:14
{'Recall': 1.0, 'AUC PR': 0.866163, 'F1': 0.949713, 'AUC ROC': 0.310525, 'Inference time': 1.466, 'Precision': [0.904241, 0.5], 'Learning time': 4.17, 'CLL': -0.353384}


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.7847544396866669;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.6606509628169522;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.555366436746284;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5143368162338069;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.3867546553091642;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.2964050241011322;  // std dev = 0,246, 123,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=115 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.2566852733179736;  // std dev = 0,014, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.23067579963125395;  // std dev = 0,246, 123,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=115 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.21092007457576215;  // std dev = 0,013, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.18499751005998633;  // std dev = 0,246, 123,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=115 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.17912486725211507;  // std dev = 0,023, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.1805227113558195;  // std dev = 1,97e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.14782476434884173;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.15428266120887468;  // std dev = 0,020, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.15533804703457912;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.12340800085754597;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.1352084574112885;  // std dev = 0,018, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.1360290302221197;  // std dev = 1,49e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.1046272879457372;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
Results
   AUC ROC   = 0.614653
   AUC PR    = 0.933172
   CLL	      = -0.24817
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 5.715 seconds
Total inference time: 1.403 seconds
AUC ROC: 0.614653


Structure after Parameter Learning
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [0.0, 8, 0], 'true,false,true': [0.0, 0, 14], 'true,true': [2.31e-07, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [0.0, 8, 0], 'true,false,true': [5.16e-08, 0, 14], 'true,true': [0.0, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [0.0, 8, 0], 'true,false,true': [0.0, 0, 14], 'true,true': [0.0, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, F), haswordvenue(G, F)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'false': [3.73e-09, 8, 0], 'true,false,true': [4.21e-08, 0, 14], 'true,true': [0.0, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'true,false': [0.246, 8, 115], 'false': [0.0, 8, 0], 'true,true': [0.0, 0, 43]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'true,false': [0.246, 8, 115], 'false': [3.73e-09, 8, 0], 'true,true': [0.014, 0, 43]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true': 'haswordauthor(A, D), haswordvenue(E, D)'}, {'true,false': [0.246, 8, 115], 'false': [0.0, 8, 0], 'true,true': [0.013, 0, 43]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'false': [2.63e-09, 8, 0], 'true,false,true': [1.97e-08, 0, 14], 'true,true': [0.023, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'false': [0.0, 8, 0], 'true,false,true': [0.0, 0, 14], 'true,true': [0.02, 0, 43], 'true,false,false': [0.261, 8, 101]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, F), haswordvenue(G, F)', 'true': 'haswordauthor(B, D), haswordvenue(E, D)'}, {'false': [0.0, 8, 0], 'true,false,true': [1.49e-08, 0, 14], 'true,true': [0.018, 0, 43], 'true,false,false': [0.261, 8, 101]}]
{'': [0.045870227899556054, -6.938893903907228e-18], 'true,false': [-2.5376526277146434e-16, 0.06800774345594017], 'true': [1.2393187251629655e-15, 0.06081036420120637]}
{'': [0.045435824886256033, 0.0], 'true,false': [1.9032394707859825e-16, 0.06800774345593671], 'true': [-9.914549801303723e-16, 0.06061602878162254]}
{'': [0.045035246740706684, -1.734723475976807e-18], 'true,false': [-2.5376526277146434e-16, 0.06800774345593835], 'true': [-4.131062417209885e-17, 0.06043682532398779]}
{'': [0.04486900501191736, 1.734723475976807e-18], 'true,false': [1.2688263138573217e-16, 0.06800774345593773], 'true': [-3.7179561754888965e-16, 0.06036245508453834]}
{'': [0.04482531546100932, 0.0], 'true': [0.0, 0.06034291003778005]}
{'': [0.044843867927541504, 1.734723475976807e-18], 'true': [4.742042809287854e-06, 0.06034409863385039]}
{'': [0.04486338201025631, 0.0], 'true': [4.136030477607064e-06, 0.060371815696994756]}
{'': [0.0448847110904217, 8.673617379884035e-19], 'true,false': [2.7755575615628914e-17, 0.0680077434559381], 'true': [1.2110331701624109e-05, 0.060374866030184986]}
{'': [0.044876780573228275, 0.0], 'true,false': [-1.1895246692412391e-17, 0.06800774345593809], 'true': [9.544364318684613e-06, 0.06036986026909467]}
{'': [0.04487136461172317, 0.0], 'true,false': [1.586032892321652e-17, 0.06800774345593819], 'true': [7.669699904307192e-06, 0.06036648545479669]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '0;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '0;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '1;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '2;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '3;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;true;haswordauthor(A, D), haswordvenue(E, D).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '7;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '8;true;haswordauthor(B, D), haswordvenue(E, D).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '9;true;haswordauthor(B, D), haswordvenue(E, D).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.7847544396866669;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.6606509628169522;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.555366436746284;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5143368162338069;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.3867546553091642;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.2964050241011322;  // std dev = 0,246, 123,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=115 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.2566852733179736;  // std dev = 0,014, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.22752946751074662;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.20958864633591426;  // std dev = 0,000770, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.21356099813667484;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.18192656359503598;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.17787105839497494;  // std dev = 0,009, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.17712113812171065;  // std dev = 1,67e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.148897741468377;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.1533314770718389;  // std dev = 0,008, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.1527625500357877;  // std dev = 1,67e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.1242224356526459;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.13446580841428943;  // std dev = 0,007, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.13402162234842985;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.10526176099902416;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
Results
   AUC ROC   = 0.614653
   AUC PR    = 0.933172
   CLL	      = -0.248057
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 3.75 seconds
Total inference time: 1.911 seconds
AUC ROC: 0.614653


Refined model AUC ROC: 0.614653


Dataset: imdb->cora, Fold: 4, Type: transfer, Time: 00:43:30
{'Recall': 1.0, 'AUC PR': 0.933172, 'Mapping results': {'Generating paths time': 2.8975582122802734, 'Finding best mapping': 0.0018310546875, 'Generating mappings time': 0.05155611038208008, 'Knowledge compiling time': 0.0756075382232666, 'Possible mappings': 26, 'Total time': 3.0265591144561768}, 'F1': 0.970326, 'AUC ROC': 0.614653, 'Inference time': 1.911, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.933172, 'F1': 0.970326, 'AUC ROC': 0.614653, 'Inference time': 1.403, 'Precision': [0.942363, 0.5], 'Learning time': 5.715, 'CLL': -0.24817}, 'Precision': [0.942363, 0.5], 'Learning time': 9.465, 'CLL': -0.248057}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.7847544396866669;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.6606509628169522;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.555366436746284;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5143368162338069;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.3867546553091642;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.2932830468274971;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.23125817360965537;  // std dev = 0,246, 123,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=115 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.2110572725890928;  // std dev = 0,012, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.1818112220255056;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.17804968548228764;  // std dev = 0,011, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.14881280281926965;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.15346696595188597;  // std dev = 0,010, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.12415799526165824;  // std dev = 0,261, 109,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=101 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.13457157427748476;  // std dev = 0,009, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.10848911164404294;  // std dev = 0,246, 123,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=115 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
Results
   AUC ROC   = 0.614653
   AUC PR    = 0.933172
   CLL	      = -0.248158
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 6.023 seconds
Total inference time: 1.821 seconds
AUC ROC: 0.614653


Dataset: imdb->cora, Fold: 4, Type: scratch, Time: 00:43:39
{'Recall': 1.0, 'AUC PR': 0.933172, 'F1': 0.970326, 'AUC ROC': 0.614653, 'Inference time': 1.821, 'Precision': [0.942363, 0.5], 'Learning time': 6.023, 'CLL': -0.248158}


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.7194734122109543;  // std dev = 8,43e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.5553664367462837;  // std dev = 1,46e-07, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.5553664367462838;  // std dev = 8,43e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.31924068717900794;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.3452541010852937;  // std dev = 0,369, 34,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=28 */
%   | | | else return 0.4175135841583103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.3207118471601498;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.33665358518821953;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.24749733971551616;  // std dev = 0,398, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then if ( author(J, B), venue(J, I) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(K, A), venue(K, I) )
%   | | | | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.2397212075113599;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.2837897290972935;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1878790419034961;  // std dev = 0,391, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then if ( author(J, B), venue(J, I) )
%   | | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(K, A), venue(K, I) )
%   | | | | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.18046108143334116;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.25517224256948967;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.23098183633456704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14168981333861558;  // std dev = 0,398, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then if ( author(J, B), venue(J, I) )
%   | | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(K, A), venue(K, I) )
%   | | | | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.13722535067088382;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.2097577156325356;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.1770964977452773;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.10557046829371092;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.20567102632003675;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.19251392080649;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.09531579278071556;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.1770964977452774;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.15274385809367072;  // std dev = 3,65e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.17409325070035941;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.16434180042395297;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.07441578195614813;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.09184396731855582;  // std dev = 0,397, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.15274385809367083;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.13400703000801095;  // std dev = 4,47e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.14299757577930527;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.1504617529665062;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.05860054017705586;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.14123324161617057;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.062381745014367454;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.13400703000801079;  // std dev = 5,05e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
Results
   AUC ROC   = 0.630357
   AUC PR    = 0.937926
   CLL	      = -0.263584
   Precision = 0.946746 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972644


Total learning time: 13.529 seconds
Total inference time: 3.947 seconds
AUC ROC: 0.630357


Structure after Parameter Learning
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true,false,true': 'author(G, B), venue(G, F)', 'true,false,false,true,false': 'author(L, B), venue(L, J)', 'true': 'haswordvenue(D, C)', 'true,false,true,false': 'author(H, A), venue(H, F)', 'true,false,false,true': 'author(K, A), venue(K, J)', 'true,false,false': 'haswordauthor(B, I), haswordvenue(J, I)'}, {'true,false,false,true,false,true': [0.0, 0, 4], 'true,false,false,true,false,false': [0.427, 6, 19], 'true,true': [0.0, 0, 62], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,true,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 54], 'true,false,true,false,false': [0.427, 6, 19], 'false': [0.0, 6, 0], 'true,false,false,true,true': [0.0, 0, 5]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true,false,true': 'author(G, A), venue(G, F)', 'true,false,false,true,false': 'author(L, A), venue(L, J)', 'true': 'haswordvenue(D, C)', 'true,false,true,false': 'author(H, B), venue(H, F)', 'true,false,false,true': 'author(K, B), venue(K, J)', 'true,false,false': 'haswordauthor(A, I), haswordvenue(J, I)'}, {'true,false,false,true,false,true': [0.0, 0, 4], 'true,false,false,true,false,false': [0.427, 6, 19], 'true,true': [8.43e-08, 0, 62], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,true,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 54], 'true,false,true,false,false': [0.427, 6, 19], 'false': [0.0, 6, 0], 'true,false,false,true,true': [0.0, 0, 5]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true,false,true': 'author(G, B), venue(G, F)', 'true,false,false,true,false': 'author(L, A), venue(L, J)', 'true': 'haswordvenue(D, C)', 'true,false,true,false': 'author(H, A), venue(H, F)', 'true,false,false,true': 'author(K, B), venue(K, J)', 'true,false,false': 'haswordauthor(A, I), haswordvenue(J, I)'}, {'true,false,false,true,false,true': [0.0, 0, 4], 'true,false,false,true,false,false': [0.427, 6, 19], 'true,true': [1.46e-07, 0, 62], 'true,false,true,false,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 0, 4], 'true,false,false,false': [8.43e-08, 0, 54], 'true,false,true,false,false': [0.427, 6, 19], 'false': [0.0, 6, 0], 'true,false,false,true,true': [0.0, 0, 5]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true,false,true': 'author(G, B), venue(G, F)', 'true': 'haswordvenue(D, C)', 'true,false,true,false': 'author(H, A), venue(H, F)', 'true,false,false': 'haswordauthor(B, I), haswordvenue(J, I)'}, {'false': [0.0, 6, 0], 'true,true': [0.0, 0, 62], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,true,true': [1.49e-08, 0, 5], 'true,false,false,false': [0.0, 0, 54], 'true,false,true,false,false': [0.427, 6, 19], 'true,false,false,true': [0.369, 6, 28]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true,false,true': 'author(G, A), venue(G, F)', 'true,false,false,true,false': 'author(K, A), venue(K, I)', 'true': 'haswordvenue(D, C)', 'true,false,false,true': 'author(J, B), venue(J, I)', 'true,false,false': 'haswordauthor(A, H), haswordvenue(I, H)'}, {'true,false,true,false': [0.398, 6, 23], 'true,false,false,true,false,false': [0.427, 6, 19], 'true,true': [0.0, 0, 62], 'true,false,true,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 54], 'true,false,false,true,false,true': [0.0, 0, 4], 'false': [2.63e-09, 6, 0], 'true,false,false,true,true': [0.0, 0, 5]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true,false,true': 'author(G, B), venue(G, F)', 'true,false,false,true,false': 'author(K, A), venue(K, I)', 'true': 'haswordvenue(D, C)', 'true,false,false,true': 'author(J, B), venue(J, I)', 'true,false,false': 'haswordauthor(A, H), haswordvenue(I, H)'}, {'true,false,true,false': [0.391, 6, 24], 'true,false,false,true,false,false': [0.427, 6, 19], 'true,true': [0.0, 0, 62], 'true,false,true,true': [0.0, 0, 4], 'true,false,false,false': [0.0, 0, 54], 'true,false,false,true,false,true': [0.0, 0, 4], 'false': [2.63e-09, 6, 0], 'true,false,false,true,true': [0.0, 0, 5]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true,false,true': 'author(G, A), venue(G, F)', 'true,false,false,true,false': 'author(K, A), venue(K, I)', 'true': 'haswordvenue(D, C)', 'true,false,false,true': 'author(J, B), venue(J, I)', 'true,false,false': 'haswordauthor(A, H), haswordvenue(I, H)'}, {'true,false,true,false': [0.398, 6, 23], 'true,false,false,true,false,false': [0.427, 6, 19], 'true,true': [0.0, 0, 62], 'true,false,true,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 54], 'true,false,false,true,false,true': [0.0, 0, 4], 'false': [0.0, 6, 0], 'true,false,false,true,true': [0.0, 0, 5]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(A, E), haswordvenue(F, E)', 'true,false,true': 'author(G, B), venue(G, F)', 'true,false,false,true,false': 'author(L, A), venue(L, J)', 'true': 'haswordvenue(D, C)', 'true,false,true,false': 'author(H, A), venue(H, F)', 'true,false,false,true': 'author(K, B), venue(K, J)', 'true,false,false': 'haswordauthor(B, I), haswordvenue(J, I)'}, {'true,false,false,true,false,true': [0.0, 0, 5], 'true,false,false,true,false,false': [0.427, 6, 19], 'true,true': [0.0, 0, 62], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,true,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 54], 'true,false,true,false,false': [0.427, 6, 19], 'false': [0.0, 6, 0], 'true,false,false,true,true': [0.0, 0, 4]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true,false,true': 'author(G, B), venue(G, F)', 'true': 'haswordvenue(D, C)', 'true,false,true,false': 'author(H, A), venue(H, F)', 'true,false,false,true': 'author(K, B), venue(K, J)', 'true,false,false': 'haswordauthor(A, I), haswordvenue(J, I)'}, {'true,false,false,true,false': [0.397, 6, 23], 'false': [1.86e-09, 6, 0], 'true,true': [3.65e-08, 0, 62], 'true,false,true,false,true': [5.27e-09, 0, 5], 'true,false,true,true': [0.0, 0, 4], 'true,false,false,false': [0.0, 0, 54], 'true,false,true,false,false': [0.427, 6, 19], 'true,false,false,true,true': [0.0, 0, 5]}]
['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'true,false': 'haswordauthor(B, E), haswordvenue(F, E)', 'true,false,true': 'author(G, A), venue(G, F)', 'true,false,false,true,false': 'author(L, B), venue(L, J)', 'true': 'haswordvenue(D, C)', 'true,false,true,false': 'author(H, B), venue(H, F)', 'true,false,false,true': 'author(K, A), venue(K, J)', 'true,false,false': 'haswordauthor(A, I), haswordvenue(J, I)'}, {'true,false,false,true,false,true': [0.0, 0, 5], 'true,false,false,true,false,false': [0.427, 6, 19], 'true,true': [4.47e-08, 0, 62], 'true,false,true,false,true': [0.0, 0, 4], 'true,false,true,true': [3.73e-09, 0, 5], 'true,false,false,false': [5.05e-08, 0, 54], 'true,false,true,false,false': [0.427, 6, 19], 'false': [0.0, 6, 0], 'true,false,false,true,true': [0.0, 0, 4]}]
{'': [0.060964083175810056, -6.938893903907228e-18], 'true,false': [0.14532871972318476, 0.0635330578512397], 'true,false,true': [0.0, 0.1640903686087999], 'true,false,false,true,false': [0.0, 0.18239999999999973], 'true': [-6.87622002348484e-16, 0.08868583714055676], 'true,false,true,false': [0.0, 0.18239999999999973], 'true,false,false,true': [0.0, 0.1640903686087999], 'true,false,false': [0.14532871972318476, 0.0]}
{'': [0.05702809044246478, -2.3129646346357427e-18], 'true,false': [0.14145757136736722, 0.059487947766625755], 'true,false,true': [0.0, 0.1617254340074918], 'true,false,false,true,false': [0.0, 0.18239999999999984], 'true': [1.1460366705808067e-16, 0.08387525127726578], 'true,false,true,false': [0.0, 0.18239999999999984], 'true,false,false,true': [0.0, 0.1617254340074918], 'true,false,false': [0.14145757136736734, -3.289549702593056e-16]}
{'': [0.053272870314488914, 0.0], 'true,false': [0.13776421743888317, 0.05562862183825561], 'true,false,true': [0.0, 0.1546021205921906], 'true,false,false,true,false': [0.0, 0.18239999999999995], 'true': [3.43811001174242e-16, 0.0792856064061817], 'true,false,true,false': [-4.4408920985006264e-17, 0.18239999999999995], 'true,false,false,true': [-4.4408920985006264e-17, 0.15946911632149502], 'true,false,false': [0.1377642174388833, 1.3158198810372225e-16]}
{'': [0.051476419756637526, 0.0], 'true,false': [0.13599736290065606, 0.05378236836158465], 'true,false,true': [4.4408920985006264e-17, 0.15838972203099944], 'true': [-3.1516008440972187e-16, 0.07708997743956934], 'true,false,true,false': [0.0, 0.1824000000000001], 'true,false,false': [0.13599736290065617, -3.618504672852362e-16]}
{'': [0.05101978521061044, 1.1564823173178713e-18], 'true,false': [0.13619947198935223, 0.05315227102845854], 'true,false,true': [0.0, 0.1585131930874309], 'true,false,false,true,false': [0.0, 0.1824], 'true': [-2.1488187573390127e-16, 0.07657317988589331], 'true,false,false,true': [-2.2204460492503132e-17, 0.15802134170163137], 'true,false,false': [0.13539436317898956, -8.22387425648264e-17]}
{'': [0.05085858317450159, 1.1564823173178713e-18], 'true,false': [0.13615015147068193, 0.052953417899966465], 'true,false,true': [0.0, 0.15322128618622546], 'true,false,false,true,false': [0.0, 0.18239999999999998], 'true': [-2.865091676452017e-17, 0.07638262536465393], 'true,false,false,true': [0.0, 0.15790508413773024], 'true,false,false': [0.13520406181628034, -3.289549702593056e-17]}
{'': [0.05081795025904149, -1.1564823173178713e-18], 'true,false': [0.13617682603491987, 0.05288816977633213], 'true,false,true': [0.0, 0.15848307953104915], 'true,false,false,true,false': [0.0, 0.1824000000000001], 'true': [-5.0139104337910294e-17, 0.07633668878658041], 'true,false,false,true': [-5.551115123125783e-18, 0.15786693745147815], 'true,false,false': [0.13514161971674687, 0.0]}
{'': [0.050801611099420545, 0.0], 'true,false': [0.135113403027724, 0.05332537195580154], 'true,false,true': [0.0, 0.15784969951118982], 'true,false,false,true,false': [0.0, 0.18239999999999998], 'true': [-2.5069552168955147e-17, 0.07631865618778216], 'true,false,true,false': [0.0, 0.18240000000000006], 'true,false,false,true': [0.0, 0.1533121494571826], 'true,false,false': [0.13619569589699485, -4.5231308410654523e-17]}
{'': [0.050711695850320974, 5.782411586589357e-19], 'true,false': [0.135853198696245, 0.052833177558711135], 'true,false,true': [0.0, 0.15312315122187112], 'true': [2.1488187573390126e-17, 0.07619291720111578], 'true,false,true,false': [5.551115123125783e-18, 0.1824], 'true,false,false,true': [0.0, 0.1578347867817722], 'true,false,false': [0.13508899246350212, -2.05596856412066e-17]}
{'': [0.05067471103471238, -5.782411586589357e-19], 'true,false': [0.13561878890366996, 0.05287720776997389], 'true,false,true': [2.7755575615628915e-18, 0.15824476604222937], 'true,false,false,true,false': [0.0, 0.18239999999999998], 'true': [3.223228136008519e-17, 0.07614435401862471], 'true,false,true,false': [0.0, 0.18240000000000006], 'true,false,false,true': [0.0, 0.15271252520144732], 'true,false,false': [0.13521113572285565, 4.7287276974775186e-17]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '0;true,false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '0;true,false,true;author(G, B), venue(G, F).;true;true', '0;true,false,false,true,false;author(L, B), venue(L, J).;true;true', '0;true;haswordvenue(D, C).;true;true', '0;true,false,true,false;author(H, A), venue(H, F).;true;true', '0;true,false,false,true;author(K, A), venue(K, J).;true;true', '0;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;true,false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '1;true,false,true;author(G, A), venue(G, F).;true;true', '1;true,false,false,true,false;author(L, A), venue(L, J).;true;true', '1;true;haswordvenue(D, C).;true;true', '1;true,false,true,false;author(H, B), venue(H, F).;true;true', '1;true,false,false,true;author(K, B), venue(K, J).;true;true', '1;true,false,false;haswordauthor(A, I), haswordvenue(J, I).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;true,false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '2;true,false,true;author(G, B), venue(G, F).;true;true', '2;true,false,false,true,false;author(L, A), venue(L, J).;true;true', '2;true;haswordvenue(D, C).;true;true', '2;true,false,true,false;author(H, A), venue(H, F).;true;true', '2;true,false,false,true;author(K, B), venue(K, J).;true;true', '2;true,false,false;haswordauthor(A, I), haswordvenue(J, I).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;true,false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '3;true,false,true;author(G, B), venue(G, F).;true;true', '3;true;haswordvenue(D, C).;true;true', '3;true,false,true,false;author(H, A), venue(H, F).;true;true', '3;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;true,false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '4;true,false,true;author(G, A), venue(G, F).;true;true', '4;true,false,false,true,false;author(K, A), venue(K, I).;true;true', '4;true;haswordvenue(D, C).;true;true', '4;true,false,false,true;author(J, B), venue(J, I).;true;true', '4;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;true,false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '5;true,false,true;author(G, B), venue(G, F).;true;true', '5;true,false,false,true,false;author(K, A), venue(K, I).;true;true', '5;true;haswordvenue(D, C).;true;true', '5;true,false,false,true;author(J, B), venue(J, I).;true;true', '5;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;true,false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '6;true,false,true;author(G, A), venue(G, F).;true;true', '6;true,false,false,true,false;author(K, A), venue(K, I).;true;true', '6;true;haswordvenue(D, C).;true;true', '6;true,false,false,true;author(J, B), venue(J, I).;true;true', '6;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;true,false;haswordauthor(A, E), haswordvenue(F, E).;true;true', '7;true,false,true;author(G, B), venue(G, F).;true;true', '7;true,false,false,true,false;author(L, A), venue(L, J).;true;true', '7;true;haswordvenue(D, C).;true;true', '7;true,false,true,false;author(H, A), venue(H, F).;true;true', '7;true,false,false,true;author(K, B), venue(K, J).;true;true', '7;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;true,false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '8;true,false,true;author(G, B), venue(G, F).;true;true', '8;true;haswordvenue(D, C).;true;true', '8;true,false,true,false;author(H, A), venue(H, F).;true;true', '8;true,false,false,true;author(K, B), venue(K, J).;true;true', '8;true,false,false;haswordauthor(A, I), haswordvenue(J, I).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;true,false;haswordauthor(B, E), haswordvenue(F, E).;true;true', '9;true,false,true;author(G, A), venue(G, F).;true;true', '9;true,false,false,true,false;author(L, B), venue(L, J).;true;true', '9;true;haswordvenue(D, C).;true;true', '9;true,false,true,false;author(H, B), venue(H, F).;true;true', '9;true,false,false,true;author(K, A), venue(K, J).;true;true', '9;true,false,false;haswordauthor(A, I), haswordvenue(J, I).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.7194734122109543;  // std dev = 8,43e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.5553664367462837;  // std dev = 1,46e-07, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.5553664367462838;  // std dev = 8,43e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.31924068717900794;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.3452541010852937;  // std dev = 0,369, 34,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=28 */
%   | | | else return 0.4175135841583103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.3207118471601498;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.33665358518821953;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.24749733971551616;  // std dev = 0,398, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then if ( author(J, B), venue(J, I) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(K, A), venue(K, I) )
%   | | | | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.2397212075113599;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.2837897290972935;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1878790419034961;  // std dev = 0,391, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then if ( author(J, B), venue(J, I) )
%   | | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(K, A), venue(K, I) )
%   | | | | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.18046108143334116;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.25517224256948967;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.23098183633456704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14168981333861558;  // std dev = 0,398, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then if ( author(J, B), venue(J, I) )
%   | | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(K, A), venue(K, I) )
%   | | | | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.13722535067088382;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.2097577156325356;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.1770964977452773;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.10557046829371092;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.20567102632003675;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.19251392080649;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.09531579278071556;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.1770964977452774;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.15274385809367072;  // std dev = 3,65e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.17409325070035941;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.16434180042395297;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.07441578195614813;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.09184396731855582;  // std dev = 0,397, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.15274385809367083;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.13400703000801095;  // std dev = 4,47e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.14299757577930527;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.1504617529665062;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.05860054017705586;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.14123324161617057;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.062381745014367454;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.13400703000801079;  // std dev = 5,05e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
Results
   AUC ROC   = 0.630357
   AUC PR    = 0.937926
   CLL	      = -0.263584
   Precision = 0.946746 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972644


Total learning time: 6.129 seconds
Total inference time: 3.849 seconds
AUC ROC: 0.630357


Refined model AUC ROC: 0.630357


Dataset: imdb->cora, Fold: 5, Type: transfer, Time: 00:44:10
{'Recall': 1.0, 'AUC PR': 0.937926, 'Mapping results': {'Generating paths time': 2.8948397636413574, 'Finding best mapping': 0.0018320083618164062, 'Generating mappings time': 0.05162167549133301, 'Knowledge compiling time': 0.0783078670501709, 'Possible mappings': 26, 'Total time': 3.0266079902648926}, 'F1': 0.972644, 'AUC ROC': 0.630357, 'Inference time': 3.849, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.937926, 'F1': 0.972644, 'AUC ROC': 0.630357, 'Inference time': 3.947, 'Precision': [0.946746, 0.5], 'Learning time': 13.529, 'CLL': -0.263584}, 'Precision': [0.946746, 0.5], 'Learning time': 19.658, 'CLL': -0.263584}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6512523833753738;  // std dev = 0,405, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then if ( author(J, A), venue(J, I) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(K, B), venue(K, I) )
%   | | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.6181489350995122;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.7194734122109543;  // std dev = 8,43e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.5252804669142431;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.5523855379461521;  // std dev = 0,405, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.5553664367462837;  // std dev = 1,46e-07, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.4184896006352241;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.6448235668207104;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.4048235668207102;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.5553664367462838;  // std dev = 8,43e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.4878869985029717;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.30773876777345605;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.3327955695209806;  // std dev = 0,398, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.4175135841583103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.3207118471601498;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.3394414362766045;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.23633904255546376;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.36903742543244233;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.23098257931797708;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.28794494953443217;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.17406574248927797;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.2679152101720519;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.17798428457073107;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.25517224256948967;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.2326637431868721;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.1325603208360635;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.21872003884331614;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.14780886215834718;  // std dev = 0,391, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | | else return 0.2097577156325356;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.1770964977452773;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.186305783314629;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.18364255996957402;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.1014482981535369;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, B), venue(K, J) )
%   | | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(L, A), venue(L, J) )
%   | | | | | then return 0.19372353847114443;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.10213172478169355;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.1770964977452774;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.15274385809367072;  // std dev = 3,65e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.159694741240467;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08986829931900484;  // std dev = 0,397, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then if ( author(J, B), venue(J, I) )
%   | | | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(K, A), venue(K, I) )
%   | | | | | then return 0.16524374534642283;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.0795282489089389;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.15274385809367083;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.13400703000801095;  // std dev = 4,47e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.1394103748155019;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, B), venue(H, F) )
%   | | | | then return 0.1461188232590338;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.05981827677421471;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.14369152208245428;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.06248994919100717;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.13400703000801079;  // std dev = 5,05e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
Results
   AUC ROC   = 0.630357
   AUC PR    = 0.937926
   CLL	      = -0.263632
   Precision = 0.946746 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972644


Total learning time: 13.978 seconds
Total inference time: 4.302 seconds
AUC ROC: 0.630357


Dataset: imdb->cora, Fold: 5, Type: scratch, Time: 00:44:28
{'Recall': 1.0, 'AUC PR': 0.937926, 'F1': 0.972644, 'AUC ROC': 0.630357, 'Inference time': 4.302, 'Precision': [0.946746, 0.5], 'Learning time': 13.978, 'CLL': -0.263632}


Start learning from source dataset


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.6658412427918196;  // std dev = 0,394, 26,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then if ( samebib(F, G), venue(G, A) )
%   | | | | then return 0.8093684472946338;  // std dev = 0,215, 41,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | | | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.30814893509951113;  // std dev = 0,497, 60,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=27 */
%   | else return 0.4095974865480586;  // std dev = 0,497, 5.005,000 (wgt'ed) examples reached here.  /* #neg=2.245 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then return 0.14173102465175114;  // std dev = 0,451, 67,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.16003572755234255;  // std dev = 0,459, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else return 0.1414470323510936;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5642978738811567;  // std dev = 0,394, 26,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then if ( samebib(G, H), venue(H, B) )
%   | | | | then return 0.7518760065513046;  // std dev = 0,215, 41,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | | | else return -0.1986609208441522;  // std dev = 0,015, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else if ( author(I, E), venue(I, B) )
%   | | | | then return -0.018525925225263248;  // std dev = 0,380, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | | else return 0.33398982768951596;  // std dev = 0,499, 45,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.37517579690818387;  // std dev = 0,426, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return 0.2739830633925555;  // std dev = 0,498, 59,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=27 */
%   | | else return 0.3525925730285926;  // std dev = 0,497, 4.881,000 (wgt'ed) examples reached here.  /* #neg=2.187 #pos=2.694 */
%   else return 0.12377415866498737;  // std dev = 0,451, 599,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=170 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2899902314763033;  // std dev = 0,495, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.044885230178660765;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.15599634128977188;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | | then return -0.17733699204356146;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else return 0.13516300795643904;  // std dev = 0,464, 48,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.005748223917240429;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( author(L, J), venue(L, B) )
%   | | | | then return 0.15331010352711613;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else return 0.11784911061931488;  // std dev = 0,457, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else return 0.1060025326459996;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23031111951878788;  // std dev = 0,495, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.47088187284960314;  // std dev = 1,169, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.17425997146550223;  // std dev = 0,052, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.1587728260988046;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.09293211344309263;  // std dev = 0,452, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then if ( samebib(K, L), venue(L, B) )
%   | | | | then return 0.40220372572572866;  // std dev = 1,102, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return -0.1908883039267419;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08836117533127774;  // std dev = 0,451, 49,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else return 0.09000867108649102;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1782357870883378;  // std dev = 0,495, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.16542726599377283;  // std dev = 0,066, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then if ( samebib(G, H), venue(H, B) )
%   | | | | then return 0.4091731032110359;  // std dev = 1,184, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return -0.16313926224971856;  // std dev = 0,017, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08684549150051142;  // std dev = 0,456, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then if ( samebib(K, L), venue(L, A) )
%   | | | | then return 0.32024346902532635;  // std dev = 1,116, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return -0.15444650927978745;  // std dev = 0,041, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0753946602750301;  // std dev = 0,450, 49,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else return 0.07558529877182109;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.2755675574488609;  // std dev = 0,394, 26,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1751957235993999;  // std dev = 0,389, 64,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | | | else if ( author(H, E), venue(H, B) )
%   | | | | then return -0.14663855645971025;  // std dev = 0,379, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | | else return 0.12185940028696333;  // std dev = 0,499, 45,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   | else return 0.13560168398052636;  // std dev = 0,496, 5.006,000 (wgt'ed) examples reached here.  /* #neg=2.246 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | then return -0.14393323182031367;  // std dev = 0,059, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.0791853824402346;  // std dev = 0,451, 61,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return 0.06185530645633216;  // std dev = 0,443, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else return 0.06287153490856065;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.15915212388444475;  // std dev = 0,384, 74,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=46 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return -0.2131447231013171;  // std dev = 0,270, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else if ( haswordvenue(A, D) )
%   | | | | then return 0.15029314678215483;  // std dev = 0,433, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | | else return 0.092064992443854;  // std dev = 0,499, 45,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   | else return 0.1023605868135888;  // std dev = 0,496, 5.006,000 (wgt'ed) examples reached here.  /* #neg=2.246 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.07690664580579513;  // std dev = 0,413, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( author(K, I), venue(K, B) )
%   | | | then return -0.20140579822295127;  // std dev = 0,058, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.055380454547797116;  // std dev = 0,446, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else return 0.0517794083140725;  // std dev = 0,450, 532,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=151 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then if ( haswordauthor(H, C) )
%   | | | | then return 0.3806836740122702;  // std dev = 0,080, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.356127461329805;  // std dev = 0,216, 41,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | | else return -0.32459139864688336;  // std dev = 0,191, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( author(I, E), venue(I, B) )
%   | | | then if ( samebib(I, J), venue(J, A) )
%   | | | | then return 0.5914783204234602;  // std dev = 0,264, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return -0.3244639191459854;  // std dev = 0,105, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else if ( haswordauthor(E, C) )
%   | | | | then return 0.1148124418248081;  // std dev = 0,433, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | | else return 0.06925910585851726;  // std dev = 0,499, 45,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   | else return 0.07694608065038672;  // std dev = 0,496, 5.006,000 (wgt'ed) examples reached here.  /* #neg=2.246 #pos=2.760 */
%   else return 0.04203695119196352;  // std dev = 0,448, 599,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=170 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.057808745935084005;  // std dev = 0,493, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else return 0.03427617314422721;  // std dev = 0,448, 599,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=170 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04341739335718653;  // std dev = 0,493, 5.158,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.1373698235160117;  // std dev = 0,051, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then if ( samebib(G, H), venue(H, A) )
%   | | | | then return 0.28169660893907295;  // std dev = 1,192, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return -0.15912737894813458;  // std dev = 0,042, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04107013210486477;  // std dev = 0,455, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return -0.04966432274570596;  // std dev = 0,723, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( author(L, J), venue(L, A) )
%   | | | | then return -0.00553147946660749;  // std dev = 1,046, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else return 0.03152729169073256;  // std dev = 0,457, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else return 0.028316631852317368;  // std dev = 0,451, 473,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=134 */


Predicates from source: ['samevenue(venue,venue).', 'author(class,author).', 'venue(class,venue).', 'haswordvenue(venue,word).', 'haswordauthor(author,word).', 'samebib(class,class).'] 



Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,false,true;genre(K, L), genre(A, L).;false;false
0;false,false;movie(J, A), movie(J, K).;true;false
0;true,true;movie(D, B).;false;true
0;true;movie(D, A), movie(D, E).;true;false
0;true,true,false;genre(E, F), genre(B, F).;true;false
0;false;movie(H, B), movie(H, I).;false;true
0;true,true,false,true;genre(A, G).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
1;true,false;movie(J, A), movie(J, K).;true;false
1;true,false,true;genre(K, L), genre(B, L).;false;false
1;true,true;movie(C, F).;false;true
1;true;movie(D, B), movie(D, E).;true;true
1;true,true,false,false;genre(E, I), genre(B, I).;false;false
1;true,true,false;genre(E, G), genre(A, G).;true;true
1;true,true,false,true;genre(B, H).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,false,true;genre(J, K), genre(A, K).;false;true
2;false,false;movie(I, A), movie(I, J).;true;false
2;false,true,false,false;movie(H, E), movie(H, A).;false;false
2;false,true;genre(E, F), genre(B, F).;false;true
2;false;movie(D, B), movie(D, E).;true;true
2;false,true,false;genre(E, G), genre(A, G).;false;true
2;false,false,true,false;genre(J, L), genre(B, L).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false,true,true;genre(A, G).;false;false
3;false,false;movie(I, B), movie(I, J).;true;false
3;false,true;genre(E, F), genre(B, F).;true;true
3;false,false,true,true;genre(B, L).;false;false
3;false,false,true;genre(J, K), genre(A, K).;true;false
3;false;movie(D, A), movie(D, E).;true;true
3;false,true,false;genre(E, H), genre(A, H).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,false,true;genre(J, K), genre(B, K).;true;false
4;false,false;movie(I, A), movie(I, J).;true;false
4;false,true;movie(F, E), movie(F, A).;false;true
4;false,false,true,true;genre(A, L).;false;false
4;false,true,false,true;genre(B, H).;false;false
4;false;movie(D, B), movie(D, E).;true;true
4;false,true,false;genre(E, G), genre(A, G).;true;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false;movie(L, A), movie(L, M).;false;false
5;true,true;movie(C, F).;false;true
5;true;movie(D, B), movie(D, E).;true;false
5;true,true,false;genre(E, G), genre(A, G).;false;true
5;true,true,false,false;genre(E, H), genre(B, H).;false;false
5;false;movie(I, B), movie(I, J).;true;true
5;false,true;movie(K, J), movie(K, A).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(E, F), genre(B, F).;false;true
6;true;movie(D, B), movie(D, E).;true;false
6;true,true,false;genre(E, G), genre(A, G).;false;true
6;true,true,false,false;movie(D, A).;false;false
6;false;movie(H, B), movie(H, I).;true;false
6;false,true;genre(I, J), genre(A, J).;false;true
6;false,true,false;genre(I, K), genre(B, K).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
7;true,true,true,true;movie(C, H).;false;false
7;true,true;genre(E, F), genre(A, F).;true;true
7;true;movie(D, B), movie(D, E).;true;false
7;true,true,false,false;movie(C, E).;false;false
7;true,true,false;genre(E, I), genre(B, I).;true;true
7;true,true,true;genre(B, G).;true;false
7;true,true,false,true;genre(A, J).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false,false,true;genre(J, K), genre(B, K).;false;true
9;false,false;movie(I, B), movie(I, J).;true;false
9;false,true;movie(F, E), movie(F, B).;false;true
9;false,true,false,true;genre(A, H).;false;false
9;false;movie(D, A), movie(D, E).;true;true
9;false,true,false;genre(E, G), genre(B, G).;true;false
9;false,false,true,false;genre(J, L), genre(A, L).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.6359267128772905;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.5398498420741679;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4289562725350857;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( movie(H, E), movie(H, A) )
%   | | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | | else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3264400476801364;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24503149911444566;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then if ( genre(B, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926093;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.18482045881522097;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08518475138839682;  // std dev = 1,18e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0.34576650664189085;  // std dev = 0,991, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.6366896337089866;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else if ( movie(D, A) )
%   | | | | then return -0.6366896337089865;  // std dev = 2,98e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B), movie(H, I) )
%   | then if ( genre(I, J), genre(A, J) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(I, K), genre(B, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then if ( movie(C, H) )
%   | | | | then return -0.7123431231298857;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.48109281954222693;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, I), genre(B, I) )
%   | | | then if ( genre(A, J) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.2876568768701144;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else if ( movie(C, E) )
%   | | | | then return -0.4810928195422272;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09729266977478561;  // std dev = 2,153, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07905764939354169;  // std dev = 2,174, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.06419184008202618;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.97363
   AUC PR    = 0.975782
   CLL	      = -0.265399
   Precision = 0.981618 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.892977


Total learning time: 1.844 seconds
Total inference time: 0.808 seconds
AUC ROC: 0.97363


Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B), movie(F, G)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false,true': [4.08e-08, 40, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [3.528, 16, 56], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'true': 'movie(D, B), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 40, 0], 'true,true,true': [3.528, 16, 56], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false,false': 'movie(H, E), movie(H, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,false,false': [1.29e-08, 22, 0], 'true': [3.528, 16, 56], 'false,true,false,true': [2.63e-09, 3, 0], 'false,true,false,false,true': [1.39e-08, 15, 0], 'false,true,true': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)'}, {'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 37, 0], 'true': [3.528, 16, 56], 'false,true,false,true': [0.0, 3, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false,true': 'genre(B, H)'}, {'false,true,false,true,false': [2.63e-09, 3, 0], 'true': [3.528, 16, 56], 'false,true,false,true,true': [0.0, 0, 0], 'false,true,true': [7.45e-09, 15, 0], 'false,true,false,false': [1.18e-08, 22, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, B), movie(G, H)', 'true,true': 'movie(C, F)', 'true': 'movie(D, B), movie(D, E)', 'false,true': 'movie(I, H), movie(I, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [9.13e-09, 15, 0], 'false,true,false': [1.18e-08, 25, 0], 'true,true,true': [3.528, 16, 56]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(E, F), genre(B, F)', 'true': 'movie(D, B), movie(D, E)', 'true,true,false': 'genre(E, G), genre(A, G)', 'true,true,false,false': 'movie(D, A)', 'false': 'movie(H, B), movie(H, I)', 'false,true': 'genre(I, J), genre(A, J)', 'false,true,false': 'genre(I, K), genre(B, K)'}, {'true,false': [0.0, 0, 0], 'true,true,false,false,true': [2.98e-08, 14, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'true,true,false,false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 37, 0], 'true,true,true': [0.991, 1, 56], 'false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true,true': 'movie(C, H)', 'true,true': 'genre(E, F), genre(A, F)', 'true': 'movie(D, B), movie(D, E)', 'true,true,false,false': 'movie(C, E)', 'true,true,false': 'genre(E, I), genre(B, I)', 'true,true,true': 'genre(B, G)', 'true,true,false,true': 'genre(A, J)'}, {'true,false': [0.0, 0, 0], 'true,true,false,true,false': [0.0, 0, 56], 'true,true,false,false,true': [0.0, 14, 0], 'true,true,false,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0], 'false': [1.05e-08, 40, 0], 'true,true,true,true,false': [0.0, 0, 0], 'true,true,false,false,false': [0.0, 0, 0], 'true,true,true,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [5.27e-09, 40, 0], 'true': [2.153, 16, 56]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)'}, {'false,true,true': [3.73e-09, 15, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 25, 0], 'true': [2.174, 16, 56], 'false,true,false,true': [0.0, 0, 0]}]
{'': [0.1728395061728392, 4.163336342344337e-17], 'false': [4.163336342344337e-17, nan], 'true,true': [0.1728395061728392, nan], 'true': [0.1728395061728392, nan]}
{'': [0.17283950617283914, -2.4980018054066023e-17], 'true,true': [0.17283950617283914, nan], 'true': [0.17283950617283914, nan]}
{'': [0.1728395061728386, -5.551115123125783e-18], 'false': [-5.551115123125783e-18, nan], 'false,true,false': [2.3129646346357427e-18, -9.00180830777154e-18], 'false,true': [nan, -5.551115123125783e-18], 'false,true,false,false': [1.295260195396016e-17, 7.569702440626067e-18]}
{'': [0.17283950617284027, -6.938893903907228e-18], 'false': [-6.938893903907228e-18, nan], 'false,true,false': [-1.1564823173178713e-18, -9.00180830777154e-18], 'false,true': [nan, -6.938893903907228e-18]}
{'': [0.17283950617283927, -1.3877787807814457e-17], 'false': [-1.3877787807814457e-17, nan], 'false,true,false': [2.3129646346357427e-18, 6.308085367188389e-18], 'false,true': [3.7007434154171884e-18, 3.3306690738754695e-18], 'false,true,false,true': [nan, 2.3129646346357427e-18]}
{'': [0.17283950617283952, 9.714451465470119e-18], 'false': [9.714451465470119e-18, nan], 'true,true': [0.17283950617283952, nan], 'true': [0.17283950617283952, nan], 'false,true': [5.551115123125783e-18, 5.551115123125783e-18]}
{'': [0.17283950617283939, -2.0816681711721684e-18], 'true,true': [0.017236072637734447, 1.1842378929335003e-16], 'true': [0.17283950617283939, nan], 'true,true,false': [0.0, 6.344131569286608e-17], 'true,true,false,false': [6.344131569286608e-17, nan], 'false': [-2.0816681711721684e-18, nan], 'false,true': [0.0, -2.250452076942885e-18], 'false,true,false': [nan, -2.250452076942885e-18]}
{'': [0.10671722047844462, 2.7755575615628915e-18], 'true,true,true,true': [0.0, nan], 'true,true': [0.013369175727346083, 0.09455617531745071], 'true': [0.10671722047844462, nan], 'true,true,false,false': [-1.2688263138573217e-16, nan], 'true,true,false': [0.0, -1.2688263138573217e-16], 'true,true,true': [0.0, 0.0], 'true,true,false,true': [nan, 0.0]}
{'': [0.0643914197718628, 6.938893903907229e-19]}
{'': [0.06566062087946478, -2.0816681711721684e-18], 'false': [-2.0816681711721684e-18, nan], 'false,true,false': [nan, -2.220446049250313e-18], 'false,true': [9.251858538542971e-19, -2.220446049250313e-18]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;genre(E, G), genre(A, G).;true;true', '2;false,false;movie(H, E), movie(H, A).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;genre(E, G), genre(A, G).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;movie(F, E), movie(F, A).;true;true', '4;false,false;genre(E, G), genre(A, G).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;false;movie(I, H), movie(I, A).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;true,false;genre(E, G), genre(A, G).;true;true', '6;false;genre(I, J), genre(A, J).;true;true', '6;true;genre(E, F), genre(B, F).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;true,false;genre(E, I), genre(B, I).;true;true', '7;true,true;genre(B, G).;true;true', '7;true;genre(E, F), genre(A, F).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;movie(F, E), movie(F, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360636;  // std dev = 1,18e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(F, D), movie(F, A) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.09269127618926101;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(B, E) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325355;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.20013989995374792;  // std dev = 0,052, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else if ( female(A) )
%   | | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(G, H), genre(A, H) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.09458071492239328;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(D, G), genre(B, G) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527747;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.17850248968197882;  // std dev = 6,45e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333704;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.1538096093652657;  // std dev = 6,45e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07072185237665606;  // std dev = 0,006, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06842697784420272;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13443761097596804;  // std dev = 0,000415, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.0641092091735767;  // std dev = 0,000151, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06751176201072233;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( actor(A) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102331
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.926 seconds
Total inference time: 1.525 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb, Fold: 1, Type: transfer, Time: 00:49:05
{'Recall': 1.0, 'AUC PR': 1.0, 'Mapping results': {'Generating paths time': 4.34186577796936, 'Finding best mapping': 0.026552915573120117, 'Generating mappings time': 0.06942272186279297, 'Knowledge compiling time': 0.3774075508117676, 'Possible mappings': 126, 'Total time': 4.815255403518677}, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.525, 'Parameter Learning results': {'Recall': 0.819018, 'AUC PR': 0.975782, 'F1': 0.892977, 'AUC ROC': 0.97363, 'Inference time': 0.808, 'Precision': [0.981618, 0.5], 'Learning time': 1.844, 'CLL': -0.265399}, 'Precision': [1.0, 0.5], 'Learning time': 4.7700000000000005, 'CLL': -0.102331}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.14185106490048768;  // std dev = 5,37e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.11231637819360632;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.10159632948783626;  // std dev = 2,79e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.09269127618926103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.0851847513883968;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07877675473109179;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
Results
   AUC ROC   = 0.95092
   AUC PR    = 0.910615
   CLL	      = -0.195966
   Precision = 0.910615 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.953216


Total learning time: 1.819 seconds
Total inference time: 0.747 seconds
AUC ROC: 0.95092


Dataset: cora->imdb, Fold: 1, Type: scratch, Time: 00:49:07
{'Recall': 1.0, 'AUC PR': 0.910615, 'F1': 0.953216, 'AUC ROC': 0.95092, 'Inference time': 0.747, 'Precision': [0.910615, 0.5], 'Learning time': 1.819, 'CLL': -0.195966}


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,false,true;genre(K, L), genre(A, L).;false;false
0;false,false;movie(J, A), movie(J, K).;true;false
0;true,true;movie(D, B).;false;true
0;true;movie(D, A), movie(D, E).;true;false
0;true,true,false;genre(E, F), genre(B, F).;true;false
0;false;movie(H, B), movie(H, I).;false;true
0;true,true,false,true;genre(A, G).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
1;true,false;movie(J, A), movie(J, K).;true;false
1;true,false,true;genre(K, L), genre(B, L).;false;false
1;true,true;movie(C, F).;false;true
1;true;movie(D, B), movie(D, E).;true;true
1;true,true,false,false;genre(E, I), genre(B, I).;false;false
1;true,true,false;genre(E, G), genre(A, G).;true;true
1;true,true,false,true;genre(B, H).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,false,true;genre(J, K), genre(A, K).;false;true
2;false,false;movie(I, A), movie(I, J).;true;false
2;false,true,false,false;movie(H, E), movie(H, A).;false;false
2;false,true;genre(E, F), genre(B, F).;false;true
2;false;movie(D, B), movie(D, E).;true;true
2;false,true,false;genre(E, G), genre(A, G).;false;true
2;false,false,true,false;genre(J, L), genre(B, L).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false,true,true;genre(A, G).;false;false
3;false,false;movie(I, B), movie(I, J).;true;false
3;false,true;genre(E, F), genre(B, F).;true;true
3;false,false,true,true;genre(B, L).;false;false
3;false,false,true;genre(J, K), genre(A, K).;true;false
3;false;movie(D, A), movie(D, E).;true;true
3;false,true,false;genre(E, H), genre(A, H).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,false,true;genre(J, K), genre(B, K).;true;false
4;false,false;movie(I, A), movie(I, J).;true;false
4;false,true;movie(F, E), movie(F, A).;false;true
4;false,false,true,true;genre(A, L).;false;false
4;false,true,false,true;genre(B, H).;false;false
4;false;movie(D, B), movie(D, E).;true;true
4;false,true,false;genre(E, G), genre(A, G).;true;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false;movie(L, A), movie(L, M).;false;false
5;true,true;movie(C, F).;false;true
5;true;movie(D, B), movie(D, E).;true;false
5;true,true,false;genre(E, G), genre(A, G).;false;true
5;true,true,false,false;genre(E, H), genre(B, H).;false;false
5;false;movie(I, B), movie(I, J).;true;true
5;false,true;movie(K, J), movie(K, A).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(E, F), genre(B, F).;false;true
6;true;movie(D, B), movie(D, E).;true;false
6;true,true,false;genre(E, G), genre(A, G).;false;true
6;true,true,false,false;movie(D, A).;false;false
6;false;movie(H, B), movie(H, I).;true;false
6;false,true;genre(I, J), genre(A, J).;false;true
6;false,true,false;genre(I, K), genre(B, K).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
7;true,true,true,true;movie(C, H).;false;false
7;true,true;genre(E, F), genre(A, F).;true;true
7;true;movie(D, B), movie(D, E).;true;false
7;true,true,false,false;movie(C, E).;false;false
7;true,true,false;genre(E, I), genre(B, I).;true;true
7;true,true,true;genre(B, G).;true;false
7;true,true,false,true;genre(A, J).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false,false,true;genre(J, K), genre(B, K).;false;true
9;false,false;movie(I, B), movie(I, J).;true;false
9;false,true;movie(F, E), movie(F, B).;false;true
9;false,true,false,true;genre(A, H).;false;false
9;false;movie(D, A), movie(D, E).;true;true
9;false,true,false;genre(E, G), genre(B, G).;true;false
9;false,false,true,false;genre(J, L), genre(A, L).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.675050343550217;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.57180708071823;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.45176579324149735;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(H, E), movie(H, A) )
%   | | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.34222392063374174;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.25697900587735223;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.19495307730525124;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0.33341510706590083;  // std dev = 5,16e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.6665848929340992;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else if ( movie(D, A) )
%   | | | | then return -0.6665848929340993;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B), movie(H, I) )
%   | then if ( genre(I, J), genre(A, J) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(I, K), genre(B, K) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.5065482076851778;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then if ( genre(A, I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.263822577922049;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else if ( movie(C, E) )
%   | | | | then return -0.5065482076851778;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10635360153472356;  // std dev = 1,949, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else return -0.06842697784420271;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08744090087084326;  // std dev = 1,975, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.97499
   AUC PR    = 0.977185
   CLL	      = -0.270068
   Precision = 0.97786 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.890756


Total learning time: 1.772 seconds
Total inference time: 0.787 seconds
AUC ROC: 0.97499


Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B), movie(F, G)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false,true': [4.71e-08, 45, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [3.259, 13, 58], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'true': 'movie(D, B), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 45, 0], 'true,true,true': [3.259, 13, 58], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false,false': 'movie(H, E), movie(H, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,false,false': [0.0, 0, 0], 'true': [3.259, 13, 58], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false,true': [1.05e-08, 43, 0], 'false,true,true': [0.0, 2, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, H), genre(A, H)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true': [3.259, 13, 58], 'false,true,false,true': [0.0, 3, 0], 'false,true,false,false': [0.0, 41, 0], 'false,true,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,true': [0.0, 45, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.259, 13, 58]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, B), movie(G, H)', 'true,true': 'movie(C, F)', 'true': 'movie(D, B), movie(D, E)', 'false,true': 'movie(I, H), movie(I, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [2.11e-08, 45, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true': [3.259, 13, 58]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(E, F), genre(B, F)', 'true': 'movie(D, B), movie(D, E)', 'true,true,false': 'genre(E, G), genre(A, G)', 'true,true,false,false': 'movie(D, A)', 'false': 'movie(H, B), movie(H, I)', 'false,true': 'genre(I, J), genre(A, J)', 'false,true,false': 'genre(I, K), genre(B, K)'}, {'true,false': [0.0, 0, 0], 'true,true,false,false,true': [0.0, 12, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,true': [0.0, 1, 0], 'true,true,false,false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 43, 0], 'true,true,true': [5.16e-08, 0, 58], 'false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(E, F), genre(A, F)', 'true': 'movie(D, B), movie(D, E)', 'true,true,false,false': 'movie(C, E)', 'true,true,false': 'genre(E, H), genre(B, H)', 'true,true,true': 'genre(B, G)', 'true,true,false,true': 'genre(A, I)'}, {'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false,false,true': [0.0, 12, 0], 'true,true,false,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0], 'true,true,false,true,false': [0.0, 0, 58], 'false': [1.29e-08, 45, 0], 'true,true,false,false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [1.05e-08, 45, 0], 'true': [1.949, 13, 58]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)'}, {'false,true,true': [0.0, 45, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [1.975, 13, 58]}]
{'': [0.1495734973219595, 4.9343245538895844e-17], 'false': [4.9343245538895844e-17, nan], 'true,true': [0.1495734973219595, nan], 'true': [0.1495734973219595, nan]}
{'': [0.14957349732195865, -2.960594732333751e-17], 'true,true': [0.14957349732195865, nan], 'true': [0.14957349732195865, nan]}
{'': [0.1495734973219593, 7.401486830834377e-18], 'false': [7.401486830834377e-18, nan], 'false,true,false': [nan, 2.581914010756178e-18], 'false,true': [0.0, 2.581914010756178e-18], 'false,true,false,false': [2.581914010756178e-18, nan]}
{'': [0.14957349732195965, 2.4671622769447924e-18], 'false': [2.4671622769447924e-18, nan], 'false,true,false': [-1.1564823173178713e-18, -6.769652589177784e-18], 'false,true': [0.0, 1.261617073437678e-18], 'false,true,true': [0.0, nan]}
{'': [0.1495734973219603, -1.7270135938613546e-17], 'false': [-1.7270135938613546e-17, nan], 'false,true': [-1.7270135938613546e-17, nan]}
{'': [0.14957349732195974, 9.86864910777917e-18], 'false': [9.86864910777917e-18, nan], 'true,true': [0.14957349732195974, nan], 'true': [0.14957349732195974, nan], 'false,true': [9.86864910777917e-18, nan]}
{'': [0.14957349732196001, 0.0], 'true,true': [4.594026308793751e-17, -3.416070845000482e-16], 'true': [0.14957349732196001, nan], 'true,true,false,false': [-2.9605947323337506e-16, nan], 'true,true,false': [0.0, -2.9605947323337506e-16], 'false': [0.0, nan], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 0.0]}
{'': [0.08876755506389396, 3.7007434154171884e-18], 'true,true': [0.0, 0.08429712623116284], 'true': [0.08876755506389396, nan], 'true,true,false,false': [-1.4802973661668753e-16, nan], 'true,true,false': [-1.8376105235175005e-16, -1.4802973661668753e-16], 'true,true,true': [nan, 0.0], 'true,true,false,true': [nan, -1.8376105235175005e-16]}
{'': [0.05349139305163596, 2.4671622769447924e-18]}
{'': [0.05492287352691231, -1.8503717077085942e-18], 'false': [-1.8503717077085942e-18, nan], 'false,true': [-1.8503717077085942e-18, nan]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;genre(E, F), genre(B, F).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;genre(E, F), genre(B, F).;true;true', '3;false,false;genre(E, H), genre(A, H).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;true,false;genre(E, G), genre(A, G).;true;true', '6;false,false;genre(I, K), genre(B, K).;true;true', '6;false;genre(I, J), genre(A, J).;true;true', '6;true;genre(E, F), genre(B, F).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;true,false;genre(E, H), genre(B, H).;true;true', '7;true;genre(E, F), genre(A, F).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.09269127618926101;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( female(A) )
%   | then return -0.08518475138839686;  // std dev = 2,28e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839683;  // std dev = 2,95e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(B, E) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(G, H), genre(A, H) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(G, I), genre(B, I) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(D, F), genre(B, F) )
%   | | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return -0.07324622576333704;  // std dev = 9,31e-10, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1340070300080111;  // std dev = 2,63e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.06419184008202623;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
Results
   AUC ROC   = 0.995785
   AUC PR    = 0.995493
   CLL	      = -0.126624
   Precision = 0.972973 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986301


Total learning time: 2.195 seconds
Total inference time: 1.132 seconds
AUC ROC: 0.995785


Refined model AUC ROC: 0.995785


Dataset: cora->imdb, Fold: 2, Type: transfer, Time: 00:49:19
{'Recall': 1.0, 'AUC PR': 0.995493, 'Mapping results': {'Generating paths time': 4.321169376373291, 'Finding best mapping': 0.026616811752319336, 'Generating mappings time': 0.06963944435119629, 'Knowledge compiling time': 0.42405128479003906, 'Possible mappings': 126, 'Total time': 4.841482877731323}, 'F1': 0.986301, 'AUC ROC': 0.995785, 'Inference time': 1.132, 'Parameter Learning results': {'Recall': 0.817901, 'AUC PR': 0.977185, 'F1': 0.890756, 'AUC ROC': 0.97499, 'Inference time': 0.787, 'Precision': [0.97786, 0.5], 'Learning time': 1.772, 'CLL': -0.270068}, 'Precision': [0.972973, 0.5], 'Learning time': 3.9669999999999996, 'CLL': -0.126624}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.8581489350995115;  // std dev = 2,60e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6813641993271577;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.719473412210955;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5288038212098718;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.5553664367462843;  // std dev = 1,26e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.39742934112412265;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.4175135841583102;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.10159632948783626;  // std dev = 2,79e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.3142611470041888;  // std dev = 0,127, 59,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   else return -0.09269127618926104;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23482136441194595;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2564001936298464;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.08518475138839679;  // std dev = 1,05e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.18974065580568117;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.21062474780526935;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.07877675473109176;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15711733896451974;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.177732163913648;  // std dev = 4,47e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.13271768663208833;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.15322590381727438;  // std dev = 3,49e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.0684269778442027;  // std dev = 1,67e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11392483208904723;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.13438324324305706;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
Results
   AUC ROC   = 0.95779
   AUC PR    = 0.925491
   CLL	      = -0.195023
   Precision = 0.912676 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954345


Total learning time: 1.871 seconds
Total inference time: 0.632 seconds
AUC ROC: 0.95779


Dataset: cora->imdb, Fold: 2, Type: scratch, Time: 00:49:21
{'Recall': 1.0, 'AUC PR': 0.925491, 'F1': 0.954345, 'AUC ROC': 0.95779, 'Inference time': 0.632, 'Precision': [0.912676, 0.5], 'Learning time': 1.871, 'CLL': -0.195023}


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,false,true;genre(K, L), genre(A, L).;false;false
0;false,false;movie(J, A), movie(J, K).;true;false
0;true,true;movie(D, B).;false;true
0;true;movie(D, A), movie(D, E).;true;false
0;true,true,false;genre(E, F), genre(B, F).;true;false
0;false;movie(H, B), movie(H, I).;false;true
0;true,true,false,true;genre(A, G).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
1;true,false;movie(J, A), movie(J, K).;true;false
1;true,false,true;genre(K, L), genre(B, L).;false;false
1;true,true;movie(C, F).;false;true
1;true;movie(D, B), movie(D, E).;true;true
1;true,true,false,false;genre(E, I), genre(B, I).;false;false
1;true,true,false;genre(E, G), genre(A, G).;true;true
1;true,true,false,true;genre(B, H).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,false,true;genre(J, K), genre(A, K).;false;true
2;false,false;movie(I, A), movie(I, J).;true;false
2;false,true,false,false;movie(H, E), movie(H, A).;false;false
2;false,true;genre(E, F), genre(B, F).;false;true
2;false;movie(D, B), movie(D, E).;true;true
2;false,true,false;genre(E, G), genre(A, G).;false;true
2;false,false,true,false;genre(J, L), genre(B, L).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false,true,true;genre(A, G).;false;false
3;false,false;movie(I, B), movie(I, J).;true;false
3;false,true;genre(E, F), genre(B, F).;true;true
3;false,false,true,true;genre(B, L).;false;false
3;false,false,true;genre(J, K), genre(A, K).;true;false
3;false;movie(D, A), movie(D, E).;true;true
3;false,true,false;genre(E, H), genre(A, H).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,false,true;genre(J, K), genre(B, K).;true;false
4;false,false;movie(I, A), movie(I, J).;true;false
4;false,true;movie(F, E), movie(F, A).;false;true
4;false,false,true,true;genre(A, L).;false;false
4;false,true,false,true;genre(B, H).;false;false
4;false;movie(D, B), movie(D, E).;true;true
4;false,true,false;genre(E, G), genre(A, G).;true;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false;movie(L, A), movie(L, M).;false;false
5;true,true;movie(C, F).;false;true
5;true;movie(D, B), movie(D, E).;true;false
5;true,true,false;genre(E, G), genre(A, G).;false;true
5;true,true,false,false;genre(E, H), genre(B, H).;false;false
5;false;movie(I, B), movie(I, J).;true;true
5;false,true;movie(K, J), movie(K, A).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(E, F), genre(B, F).;false;true
6;true;movie(D, B), movie(D, E).;true;false
6;true,true,false;genre(E, G), genre(A, G).;false;true
6;true,true,false,false;movie(D, A).;false;false
6;false;movie(H, B), movie(H, I).;true;false
6;false,true;genre(I, J), genre(A, J).;false;true
6;false,true,false;genre(I, K), genre(B, K).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
7;true,true,true,true;movie(C, H).;false;false
7;true,true;genre(E, F), genre(A, F).;true;true
7;true;movie(D, B), movie(D, E).;true;false
7;true,true,false,false;movie(C, E).;false;false
7;true,true,false;genre(E, I), genre(B, I).;true;true
7;true,true,true;genre(B, G).;true;false
7;true,true,false,true;genre(A, J).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false,false,true;genre(J, K), genre(B, K).;false;true
9;false,false;movie(I, B), movie(I, J).;true;false
9;false,true;movie(F, E), movie(F, B).;false;true
9;false,true,false,true;genre(A, H).;false;false
9;false;movie(D, A), movie(D, E).;true;true
9;false,true,false;genre(E, G), genre(B, G).;true;false
9;false,false,true,false;genre(J, L), genre(A, L).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.6457595545685355;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then return -0.14185106490048788;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.54789521854257;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 8,16e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.43471726830400137;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else if ( movie(H, E), movie(H, A) )
%   | | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | | else return -0.11231637819360621;  // std dev = 7,15e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3304125955184558;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.10159632948783626;  // std dev = 4,47e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2479976539753087;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then if ( genre(B, H) )
%   | | | | then return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09269127618926108;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.1872945372763586;  // std dev = 6,149, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.08518475138839679;  // std dev = 5,87e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0.31838655547726286;  // std dev = 2,194, 134,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=129 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.6443000116869168;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else if ( movie(D, A) )
%   | | | | then return -0.060966678353583624;  // std dev = 4,518, 84,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=49 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B), movie(H, I) )
%   | then if ( genre(I, J), genre(A, J) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( genre(I, K), genre(B, K) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07877675473109173;  // std dev = 3,16e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then if ( movie(C, H) )
%   | | | | then return -0.713503982634096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.48744684265402544;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, I), genre(B, I) )
%   | | | then if ( genre(A, J) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.2864960173659049;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else if ( movie(C, E) )
%   | | | | then return -0.046874879113598944;  // std dev = 4,518, 84,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=49 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0732462257633371;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09368168232825597;  // std dev = 5,297, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else return -0.06842697784420264;  // std dev = 6,05e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07499907388879688;  // std dev = 5,317, 226,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then if ( genre(A, H) )
%   | | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.994714
   AUC PR    = 0.9953
   CLL	      = -0.263784
   Precision = 0.819277 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.900662


Total learning time: 3.801 seconds
Total inference time: 0.943 seconds
AUC ROC: 0.994714


Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B), movie(F, G)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false,true': [0.0, 130, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [6.149, 48, 178], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'true': 'movie(D, B), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [8.16e-08, 130, 0], 'true,true,true': [6.149, 48, 178], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false,false': 'movie(H, E), movie(H, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,false,false': [7.15e-08, 87, 0], 'true': [6.149, 48, 178], 'false,true,false,true': [0.0, 10, 0], 'false,true,false,false,true': [0.0, 9, 0], 'false,true,true': [7.45e-09, 24, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, H), genre(A, H)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 10, 0], 'true': [6.149, 48, 178], 'false,true,false,true': [0.0, 16, 0], 'false,true,false,false': [4.47e-08, 103, 0], 'false,true,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false,true': 'genre(B, H)'}, {'false,true,false,true,false': [0.0, 7, 0], 'true': [6.149, 48, 178], 'false,true,false,true,true': [0.0, 1, 0], 'false,true,true': [0.0, 17, 0], 'false,true,false,false': [0.0, 105, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, B), movie(G, H)', 'true,true': 'movie(C, F)', 'true': 'movie(D, B), movie(D, E)', 'false,true': 'movie(I, H), movie(I, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [1.18e-08, 17, 0], 'false,true,false': [5.87e-08, 113, 0], 'true,true,true': [6.149, 48, 178]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(E, F), genre(B, F)', 'true': 'movie(D, B), movie(D, E)', 'true,true,false': 'genre(E, G), genre(A, G)', 'true,true,false,false': 'movie(D, A)', 'false': 'movie(H, B), movie(H, I)', 'false,true': 'genre(I, J), genre(A, J)', 'false,true,false': 'genre(I, K), genre(B, K)'}, {'true,false': [0.0, 0, 0], 'true,true,false,false,true': [4.518, 35, 49], 'false,true,false,true': [0.0, 23, 0], 'false,true,true': [0.0, 11, 0], 'true,true,false,false,false': [0.0, 0, 0], 'false,true,false,false': [3.16e-08, 96, 0], 'true,true,true': [2.194, 5, 129], 'false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 8, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true,true': 'movie(C, H)', 'true,true': 'genre(E, F), genre(A, F)', 'true': 'movie(D, B), movie(D, E)', 'true,true,false,false': 'movie(C, E)', 'true,true,false': 'genre(E, I), genre(B, I)', 'true,true,true': 'genre(B, G)', 'true,true,false,true': 'genre(A, J)'}, {'true,false': [0.0, 0, 0], 'true,true,false,true,false': [0.0, 0, 129], 'true,true,false,false,true': [4.518, 35, 49], 'true,true,false,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 8, 0], 'false': [0.0, 130, 0], 'true,true,true,true,false': [0.0, 0, 0], 'true,true,false,false,false': [0.0, 0, 0], 'true,true,true,true,true': [0.0, 5, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [6.05e-08, 130, 0], 'true': [5.297, 48, 178]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false,true': 'genre(A, H)'}, {'false,true,false,true,false': [0.0, 5, 0], 'true': [5.317, 48, 178], 'false,true,false,true,true': [0.0, 1, 0], 'false,true,true': [7.45e-09, 17, 0], 'false,true,false,false': [0.0, 107, 0], 'false,false': [0.0, 0, 0]}]
{'': [0.1672801315686487, -3.75767792950053e-17], 'false': [-3.75767792950053e-17, nan], 'true,true': [0.1672801315686487, nan], 'true': [0.1672801315686487, nan]}
{'': [0.16728013156864405, 5.124106267500723e-17], 'true,true': [0.16728013156864405, nan], 'true': [0.16728013156864405, nan]}
{'': [0.16728013156864113, 7.51535585900106e-17], 'false': [7.51535585900106e-17, nan], 'false,true,false': [0.0, 3.0068540250264654e-17], 'false,true': [2.3129646346357427e-18, 3.561092720495785e-17], 'false,true,false,false': [-1.5419764230904951e-18, 5.870144727903127e-17]}
{'': [0.16728013156864066, -3.586874387250506e-17], 'false': [-3.586874387250506e-17, nan], 'false,true,false': [-6.938893903907228e-18, 1.9401955770148367e-17], 'false,true': [-6.308085367188389e-18, 2.9854736796642864e-17], 'false,true,true': [0.0, -5.551115123125783e-18]}
{'': [0.16728013156864205, 4.4408920985006264e-17], 'false': [4.4408920985006264e-17, nan], 'false,true,false': [0.0, -5.28677630773884e-18], 'false,true': [-4.89804275569922e-18, 3.929993007522678e-17], 'false,true,false,true': [0.0, 0.0]}
{'': [0.16728013156864305, 3.1598655316254454e-17], 'false': [3.1598655316254454e-17, nan], 'true,true': [0.16728013156864305, nan], 'true': [0.16728013156864305, nan], 'false,true': [8.163404592832034e-18, 3.045744580830075e-17]}
{'': [0.16728013156864288, 4.099285014000578e-17], 'true,true': [0.03592114056582734, 0.24893667296786387], 'true': [0.16728013156864288, nan], 'true,true,false': [-5.551115123125783e-17, 0.24305555555555552], 'true,true,false,false': [0.2430555555555553, nan], 'false': [4.099285014000578e-17, nan], 'false,true': [-1.261617073437678e-18, 2.145809207258706e-17], 'false,true,false': [0.0, 1.0408340855860843e-17]}
{'': [0.14489624386475206, -1.708035422500241e-18], 'true,true,true,true': [0.0, nan], 'true,true': [0.012095107819164333, 0.12239682098916455], 'true': [0.14489624386475206, nan], 'true,true,false': [-4.819572820078199e-16, 0.24305555555555552], 'true,true,false,false': [0.2430555555555555, nan], 'true,true,true': [0.0, -5.551115123125783e-17], 'true,true,false,true': [nan, -4.819572820078199e-16]}
{'': [0.12416926628327214, 2.818258447125397e-17]}
{'': [0.1250980786041184, -1.4518301091252048e-17], 'false': [-1.4518301091252048e-17, nan], 'false,true,false': [-5.782411586589357e-19, -4.1503664471968466e-18], 'false,true': [3.2653618371328133e-18, -1.7193719407911715e-17], 'false,true,false,true': [0.0, 0.0]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;genre(E, F), genre(B, F).;true;true', '2;false,false;genre(E, G), genre(A, G).;true;true', '2;false,false,false;movie(H, E), movie(H, A).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;genre(E, F), genre(B, F).;true;true', '3;false,false;genre(E, H), genre(A, H).;true;true', '3;false,true;genre(A, G).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;movie(F, E), movie(F, A).;true;true', '4;false,false;genre(E, G), genre(A, G).;true;true', '4;false,false,true;genre(B, H).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;false;movie(I, H), movie(I, A).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;true,false;genre(E, G), genre(A, G).;true;true', '6;false,false;genre(I, K), genre(B, K).;true;true', '6;false;genre(I, J), genre(A, J).;true;true', '6;true;genre(E, F), genre(B, F).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;true,false;genre(E, I), genre(B, I).;true;true', '7;true,true;genre(B, G).;true;true', '7;true;genre(E, F), genre(A, F).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;movie(F, E), movie(F, B).;true;true', '9;false,false;genre(E, G), genre(B, G).;true;true', '9;false,false,true;genre(A, H).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048774;  // std dev = 2,58e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.14185106490048788;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.12544463852839108;  // std dev = 8,16e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( movie(G, D), movie(G, A) )
%   | | | then return -0.11231637819360621;  // std dev = 7,45e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( genre(D, E), genre(B, E) )
%   | then if ( genre(A, F) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( genre(D, G), genre(A, G) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else if ( actor(A) )
%   | | | | then return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | | else return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015033;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015033;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.092691276189261;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( actor(B) )
%   | | | then return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then if ( female(A) )
%   | | | | then return -0.08518475138839687;  // std dev = 1,61e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | | else return -0.08518475138839685;  // std dev = 2,63e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.08518475138839687;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.0851847513883968;  // std dev = 2,63e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.08518475138839679;  // std dev = 3,23e-09, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(B, E) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.2097577156325359;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.2097577156325359;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( genre(G, H), genre(A, H) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( genre(G, I), genre(B, I) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.07877675473109161;  // std dev = 5,43e-09, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( genre(D, G), genre(B, G) )
%   | | then return 0.1770964977452775;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( actor(A), director(B) )
%   | | | then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else if ( female(A) )
%   | | | | then if ( female(B) )
%   | | | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.07324622576333711;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367122;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801076;  // std dev = 7,45e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.13400703000801087;  // std dev = 6,72e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.904 seconds
Total inference time: 1.378 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb, Fold: 3, Type: transfer, Time: 00:49:37
{'Recall': 1.0, 'AUC PR': 1.0, 'Mapping results': {'Generating paths time': 4.206310987472534, 'Finding best mapping': 0.026502609252929688, 'Generating mappings time': 0.0704948902130127, 'Knowledge compiling time': 0.40555596351623535, 'Possible mappings': 126, 'Total time': 4.708869457244873}, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.378, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.9953, 'F1': 0.900662, 'AUC ROC': 0.994714, 'Inference time': 0.943, 'Precision': [0.819277, 0.5], 'Learning time': 3.801, 'CLL': -0.263784}, 'Precision': [1.0, 0.5], 'Learning time': 7.705, 'CLL': -0.094637}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.14185106490048788;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.12544463852839113;  // std dev = 8,16e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360624;  // std dev = 8,69e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.10159632948783641;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.09269127618926104;  // std dev = 3,33e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.08518475138839679;  // std dev = 3,94e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109165;  // std dev = 5,77e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07324622576333704;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06842697784420267;  // std dev = 4,71e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06419184008202625;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.537 seconds
Total inference time: 0.722 seconds
AUC ROC: 1.0


Dataset: cora->imdb, Fold: 3, Type: scratch, Time: 00:49:40
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.722, 'Precision': [1.0, 0.5], 'Learning time': 2.537, 'CLL': -0.094637}


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,false,true;genre(K, L), genre(A, L).;false;false
0;false,false;movie(J, A), movie(J, K).;true;false
0;true,true;movie(D, B).;false;true
0;true;movie(D, A), movie(D, E).;true;false
0;true,true,false;genre(E, F), genre(B, F).;true;false
0;false;movie(H, B), movie(H, I).;false;true
0;true,true,false,true;genre(A, G).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
1;true,false;movie(J, A), movie(J, K).;true;false
1;true,false,true;genre(K, L), genre(B, L).;false;false
1;true,true;movie(C, F).;false;true
1;true;movie(D, B), movie(D, E).;true;true
1;true,true,false,false;genre(E, I), genre(B, I).;false;false
1;true,true,false;genre(E, G), genre(A, G).;true;true
1;true,true,false,true;genre(B, H).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,false,true;genre(J, K), genre(A, K).;false;true
2;false,false;movie(I, A), movie(I, J).;true;false
2;false,true,false,false;movie(H, E), movie(H, A).;false;false
2;false,true;genre(E, F), genre(B, F).;false;true
2;false;movie(D, B), movie(D, E).;true;true
2;false,true,false;genre(E, G), genre(A, G).;false;true
2;false,false,true,false;genre(J, L), genre(B, L).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false,true,true;genre(A, G).;false;false
3;false,false;movie(I, B), movie(I, J).;true;false
3;false,true;genre(E, F), genre(B, F).;true;true
3;false,false,true,true;genre(B, L).;false;false
3;false,false,true;genre(J, K), genre(A, K).;true;false
3;false;movie(D, A), movie(D, E).;true;true
3;false,true,false;genre(E, H), genre(A, H).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,false,true;genre(J, K), genre(B, K).;true;false
4;false,false;movie(I, A), movie(I, J).;true;false
4;false,true;movie(F, E), movie(F, A).;false;true
4;false,false,true,true;genre(A, L).;false;false
4;false,true,false,true;genre(B, H).;false;false
4;false;movie(D, B), movie(D, E).;true;true
4;false,true,false;genre(E, G), genre(A, G).;true;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false;movie(L, A), movie(L, M).;false;false
5;true,true;movie(C, F).;false;true
5;true;movie(D, B), movie(D, E).;true;false
5;true,true,false;genre(E, G), genre(A, G).;false;true
5;true,true,false,false;genre(E, H), genre(B, H).;false;false
5;false;movie(I, B), movie(I, J).;true;true
5;false,true;movie(K, J), movie(K, A).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(E, F), genre(B, F).;false;true
6;true;movie(D, B), movie(D, E).;true;false
6;true,true,false;genre(E, G), genre(A, G).;false;true
6;true,true,false,false;movie(D, A).;false;false
6;false;movie(H, B), movie(H, I).;true;false
6;false,true;genre(I, J), genre(A, J).;false;true
6;false,true,false;genre(I, K), genre(B, K).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
7;true,true,true,true;movie(C, H).;false;false
7;true,true;genre(E, F), genre(A, F).;true;true
7;true;movie(D, B), movie(D, E).;true;false
7;true,true,false,false;movie(C, E).;false;false
7;true,true,false;genre(E, I), genre(B, I).;true;true
7;true,true,true;genre(B, G).;true;false
7;true,true,false,true;genre(A, J).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false,false,true;genre(J, K), genre(B, K).;false;true
9;false,false;movie(I, B), movie(I, J).;true;false
9;false,true;movie(F, E), movie(F, B).;false;true
9;false,true,false,true;genre(A, H).;false;false
9;false;movie(D, A), movie(D, E).;true;true
9;false,true,false;genre(E, G), genre(B, G).;true;false
9;false,false,true,false;genre(J, L), genre(A, L).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.6914822684328457;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.5851860008555362;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 1,83e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4612598391067561;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else if ( movie(H, E), movie(H, A) )
%   | | | | then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3488463256948414;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.26212705508354156;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.19945264276423463;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0.3211800329464989;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.6788199670535011;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else if ( movie(D, A) )
%   | | | | then return -0.6788199670535011;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B), movie(H, I) )
%   | then if ( genre(I, J), genre(A, J) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(I, K), genre(B, K) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109179;  // std dev = 5,27e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.5173765404872905;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then if ( genre(A, I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.25549168322415977;  // std dev = 7,60e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else if ( movie(C, E) )
%   | | | | then return -0.5173765404872905;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11000713501265585;  // std dev = 1,643, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09087384542811938;  // std dev = 1,667, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then if ( genre(A, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.975843
   AUC PR    = 0.978049
   CLL	      = -0.259433
   Precision = 0.978873 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.89533


Total learning time: 1.719 seconds
Total inference time: 1.25 seconds
AUC ROC: 0.975843


Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B), movie(F, G)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false,true': [3.65e-08, 36, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [2.739, 9, 45], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'true': 'movie(D, B), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [1.83e-08, 36, 0], 'true,true,true': [2.739, 9, 45], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false,false': 'movie(H, E), movie(H, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,false,false': [0.0, 7, 0], 'true': [2.739, 9, 45], 'false,true,false,true': [0.0, 2, 0], 'false,true,false,false,true': [1.05e-08, 23, 0], 'false,true,true': [0.0, 4, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, H), genre(A, H)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'true': [2.739, 9, 45], 'false,true,false,true': [0.0, 2, 0], 'false,true,false,false': [0.0, 30, 0], 'false,true,true,true': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,true': [0.0, 26, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 10, 0], 'true': [2.739, 9, 45], 'false,true,false,true': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, B), movie(G, H)', 'true,true': 'movie(C, F)', 'true': 'movie(D, B), movie(D, E)', 'false,true': 'movie(I, H), movie(I, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [1.75e-08, 26, 0], 'false,true,false': [3.73e-09, 10, 0], 'true,true,true': [2.739, 9, 45]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(E, F), genre(B, F)', 'true': 'movie(D, B), movie(D, E)', 'true,true,false': 'genre(E, G), genre(A, G)', 'true,true,false,false': 'movie(D, A)', 'false': 'movie(H, B), movie(H, I)', 'false,true': 'genre(I, J), genre(A, J)', 'false,true,false': 'genre(I, K), genre(B, K)'}, {'true,false': [0.0, 0, 0], 'true,true,false,false,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 4, 0], 'false,true,true': [0.0, 2, 0], 'true,true,false,false,false': [0.0, 0, 0], 'false,true,false,false': [5.27e-09, 30, 0], 'true,true,true': [0.0, 0, 45], 'false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(E, F), genre(A, F)', 'true': 'movie(D, B), movie(D, E)', 'true,true,false,false': 'movie(C, E)', 'true,true,false': 'genre(E, H), genre(B, H)', 'true,true,true': 'genre(B, G)', 'true,true,false,true': 'genre(A, I)'}, {'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false,false,true': [0.0, 8, 0], 'true,true,false,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0], 'true,true,false,true,false': [7.6e-08, 0, 45], 'false': [9.13e-09, 36, 0], 'true,true,false,false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 36, 0], 'true': [1.643, 9, 45]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false,true': 'genre(A, H)'}, {'false,true,false,true,false': [1.32e-09, 3, 0], 'true': [1.667, 9, 45], 'false,true,false,true,true': [0.0, 0, 0], 'false,true,true': [0.0, 26, 0], 'false,true,false,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}]
{'': [0.13888888888888942, 3.700743415417188e-17], 'false': [3.700743415417188e-17, nan], 'true,true': [0.13888888888888942, nan], 'true': [0.13888888888888942, nan]}
{'': [0.13888888888888837, 9.25185853854297e-18], 'true,true': [0.13888888888888837, nan], 'true': [0.13888888888888837, nan]}
{'': [0.13888888888888817, -1.0793834961633467e-17], 'false': [-1.0793834961633467e-17, nan], 'false,true,false': [0.0, -7.401486830834377e-18], 'false,true': [0.0, -1.0408340855860843e-17], 'false,true,false,false': [4.827056628805028e-18, -1.982541115402065e-18]}
{'': [0.13888888888888903, 0.0], 'false': [0.0, nan], 'false,true,false': [0.0, 0.0], 'false,true': [0.0, -1.734723475976807e-18], 'false,true,true': [nan, 0.0]}
{'': [0.1388888888888892, -9.25185853854297e-18], 'false': [-9.25185853854297e-18, nan], 'false,true,false': [nan, 0.0], 'false,true': [-1.1742743529689156e-17, 0.0]}
{'': [0.13888888888888878, 1.3877787807814457e-17], 'false': [1.3877787807814457e-17, nan], 'true,true': [0.13888888888888878, nan], 'true': [0.13888888888888878, nan], 'false,true': [1.1742743529689156e-17, 1.3877787807814458e-18]}
{'': [0.1388888888888888, 7.709882115452476e-19], 'true,true': [-5.921189464667501e-17, 0.0], 'true': [0.1388888888888888, nan], 'true,true,false,false': [-5.551115123125783e-17, nan], 'true,true,false': [0.0, -5.551115123125783e-17], 'false': [7.709882115452476e-19, nan], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 9.251858538542971e-19]}
{'': [0.0829618460031796, 2.3129646346357427e-18], 'true,true': [0.0, 0.07655290311151355], 'true': [0.0829618460031796, nan], 'true,true,false,false': [0.0, nan], 'true,true,false': [1.282924384011292e-16, 0.0], 'true,true,true': [nan, 0.0], 'true,true,false,true': [nan, 1.282924384011292e-16]}
{'': [0.04997620640875863, -1.5419764230904951e-18]}
{'': [0.051452247514421186, -7.709882115452476e-19], 'false': [-7.709882115452476e-19, nan], 'false,true,false': [5.782411586589357e-19, -4.956352788505163e-19], 'false,true': [0.0, 1.3877787807814458e-18], 'false,true,false,true': [nan, 5.782411586589357e-19]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;genre(E, F), genre(B, F).;true;true', '2;false,false;genre(E, G), genre(A, G).;true;true', '2;false,false,false;movie(H, E), movie(H, A).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;genre(E, F), genre(B, F).;true;true', '3;false,false;genre(E, H), genre(A, H).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;movie(F, E), movie(F, A).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;false;movie(I, H), movie(I, A).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;true,false;genre(E, G), genre(A, G).;true;true', '6;false,false;genre(I, K), genre(B, K).;true;true', '6;false;genre(I, J), genre(A, J).;true;true', '6;true;genre(E, F), genre(B, F).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;true,false;genre(E, H), genre(B, H).;true;true', '7;true;genre(E, F), genre(A, F).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;movie(F, E), movie(F, B).;true;true', '9;false,false;genre(E, G), genre(B, G).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839133;  // std dev = 1,83e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(G, D), movie(G, A) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.09269127618926105;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(B) )
%   | | | then if ( female(A) )
%   | | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return -0.08518475138839682;  // std dev = 3,48e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(B, E) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(G, H), genre(A, H) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(G, I), genre(B, I) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(D, F), genre(B, F) )
%   | | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(A), actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1527438580936709;  // std dev = 5,89e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801095;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13400703000801115;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06419184008202622;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.996104
   AUC PR    = 0.995846
   CLL	      = -0.12539
   Precision = 0.973988 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986823


Total learning time: 3.479 seconds
Total inference time: 1.453 seconds
AUC ROC: 0.996104


Refined model AUC ROC: 0.996104


Dataset: cora->imdb, Fold: 4, Type: transfer, Time: 00:49:53
{'Recall': 1.0, 'AUC PR': 0.995846, 'Mapping results': {'Generating paths time': 4.3216331005096436, 'Finding best mapping': 0.026707172393798828, 'Generating mappings time': 0.06986594200134277, 'Knowledge compiling time': 0.42084240913391113, 'Possible mappings': 126, 'Total time': 4.83905553817749}, 'F1': 0.986823, 'AUC ROC': 0.996104, 'Inference time': 1.453, 'Parameter Learning results': {'Recall': 0.824926, 'AUC PR': 0.978049, 'F1': 0.89533, 'AUC ROC': 0.975843, 'Inference time': 1.25, 'Precision': [0.978873, 0.5], 'Learning time': 1.719, 'CLL': -0.259433}, 'Precision': [0.973988, 0.5], 'Learning time': 5.198, 'CLL': -0.12539}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
Results
   AUC ROC   = 0.986647
   AUC PR    = 0.973988
   CLL	      = -0.122206
   Precision = 0.973988 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986823


Total learning time: 1.741 seconds
Total inference time: 0.598 seconds
AUC ROC: 0.986647


Dataset: cora->imdb, Fold: 4, Type: scratch, Time: 00:49:56
{'Recall': 1.0, 'AUC PR': 0.973988, 'F1': 0.986823, 'AUC ROC': 0.986647, 'Inference time': 0.598, 'Precision': [0.973988, 0.5], 'Learning time': 1.741, 'CLL': -0.122206}


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,false,true;genre(K, L), genre(A, L).;false;false
0;false,false;movie(J, A), movie(J, K).;true;false
0;true,true;movie(D, B).;false;true
0;true;movie(D, A), movie(D, E).;true;false
0;true,true,false;genre(E, F), genre(B, F).;true;false
0;false;movie(H, B), movie(H, I).;false;true
0;true,true,false,true;genre(A, G).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
1;true,false;movie(J, A), movie(J, K).;true;false
1;true,false,true;genre(K, L), genre(B, L).;false;false
1;true,true;movie(C, F).;false;true
1;true;movie(D, B), movie(D, E).;true;true
1;true,true,false,false;genre(E, I), genre(B, I).;false;false
1;true,true,false;genre(E, G), genre(A, G).;true;true
1;true,true,false,true;genre(B, H).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,false,true;genre(J, K), genre(A, K).;false;true
2;false,false;movie(I, A), movie(I, J).;true;false
2;false,true,false,false;movie(H, E), movie(H, A).;false;false
2;false,true;genre(E, F), genre(B, F).;false;true
2;false;movie(D, B), movie(D, E).;true;true
2;false,true,false;genre(E, G), genre(A, G).;false;true
2;false,false,true,false;genre(J, L), genre(B, L).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false,true,true;genre(A, G).;false;false
3;false,false;movie(I, B), movie(I, J).;true;false
3;false,true;genre(E, F), genre(B, F).;true;true
3;false,false,true,true;genre(B, L).;false;false
3;false,false,true;genre(J, K), genre(A, K).;true;false
3;false;movie(D, A), movie(D, E).;true;true
3;false,true,false;genre(E, H), genre(A, H).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,false,true;genre(J, K), genre(B, K).;true;false
4;false,false;movie(I, A), movie(I, J).;true;false
4;false,true;movie(F, E), movie(F, A).;false;true
4;false,false,true,true;genre(A, L).;false;false
4;false,true,false,true;genre(B, H).;false;false
4;false;movie(D, B), movie(D, E).;true;true
4;false,true,false;genre(E, G), genre(A, G).;true;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false;movie(L, A), movie(L, M).;false;false
5;true,true;movie(C, F).;false;true
5;true;movie(D, B), movie(D, E).;true;false
5;true,true,false;genre(E, G), genre(A, G).;false;true
5;true,true,false,false;genre(E, H), genre(B, H).;false;false
5;false;movie(I, B), movie(I, J).;true;true
5;false,true;movie(K, J), movie(K, A).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(E, F), genre(B, F).;false;true
6;true;movie(D, B), movie(D, E).;true;false
6;true,true,false;genre(E, G), genre(A, G).;false;true
6;true,true,false,false;movie(D, A).;false;false
6;false;movie(H, B), movie(H, I).;true;false
6;false,true;genre(I, J), genre(A, J).;false;true
6;false,true,false;genre(I, K), genre(B, K).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
7;true,true,true,true;movie(C, H).;false;false
7;true,true;genre(E, F), genre(A, F).;true;true
7;true;movie(D, B), movie(D, E).;true;false
7;true,true,false,false;movie(C, E).;false;false
7;true,true,false;genre(E, I), genre(B, I).;true;true
7;true,true,true;genre(B, G).;true;false
7;true,true,false,true;genre(A, J).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false,false,true;genre(J, K), genre(B, K).;false;true
9;false,false;movie(I, B), movie(I, J).;true;false
9;false,true;movie(F, E), movie(F, B).;false;true
9;false,true,false,true;genre(A, H).;false;false
9;false;movie(D, A), movie(D, E).;true;true
9;false,true,false;genre(E, G), genre(B, G).;true;false
9;false,false,true,false;genre(J, L), genre(A, L).;false;false
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.6763307532813305;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.5728505077589577;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 1,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.45250734201965864;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else if ( movie(H, E), movie(H, A) )
%   | | | | then return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3427398908536803;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2573771265051454;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.19529825339842172;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return -0.0851847513883968;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0.3324546487589585;  // std dev = 8,16e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, A) )
%   | | | | then return -0.16754535124104125;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B), movie(H, I) )
%   | then if ( genre(I, J), genre(A, J) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(I, K), genre(B, K) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then if ( genre(A, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.2631697027252831;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else if ( movie(C, E) )
%   | | | | then return -0.12938013848261337;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10116524058242905;  // std dev = 2,501, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else return -0.06842697784420274;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08185529619178418;  // std dev = 2,513, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.97778
   AUC PR    = 0.980002
   CLL	      = -0.281845
   Precision = 0.79669 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.886842


Total learning time: 1.862 seconds
Total inference time: 0.868 seconds
AUC ROC: 0.97778


Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B), movie(F, G)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false,true': [3.49e-08, 35, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [2.86, 10, 45], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'true': 'movie(D, B), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [1.49e-08, 35, 0], 'true,true,true': [2.86, 10, 45], 'true,true,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false,false': 'movie(H, E), movie(H, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,false,false': [0.0, 6, 0], 'true': [2.86, 10, 45], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false,true': [0.0, 27, 0], 'false,true,true': [0.0, 1, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, H), genre(A, H)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'true': [2.86, 10, 45], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 33, 0], 'false,true,true,true': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,true': [0.0, 29, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [2.63e-09, 6, 0], 'true': [2.86, 10, 45], 'false,true,false,true': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, B), movie(G, H)', 'true,true': 'movie(C, F)', 'true': 'movie(D, B), movie(D, E)', 'false,true': 'movie(I, H), movie(I, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [1.97e-08, 29, 0], 'false,true,false': [2.63e-09, 6, 0], 'true,true,true': [2.86, 10, 45]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(E, F), genre(B, F)', 'true': 'movie(D, B), movie(D, E)', 'true,true,false': 'genre(E, G), genre(A, G)', 'true,true,false,false': 'movie(D, A)', 'false': 'movie(H, B), movie(H, I)', 'false,true': 'genre(I, J), genre(A, J)', 'false,true,false': 'genre(I, K), genre(B, K)'}, {'true,false': [0.0, 0, 0], 'true,true,false,false,true': [2.236, 10, 10], 'false,true,false,true': [0.0, 1, 0], 'false,true,true': [0.0, 1, 0], 'true,true,false,false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 33, 0], 'true,true,true': [8.16e-08, 0, 35], 'false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(E, F), genre(A, F)', 'true': 'movie(D, B), movie(D, E)', 'true,true,false,false': 'movie(C, E)', 'true,true,false': 'genre(E, G), genre(B, G)', 'true,true,false,true': 'genre(A, H)'}, {'true,false': [0.0, 0, 0], 'true,true,false,true,false': [0.0, 0, 35], 'true,true,false,false,true': [2.236, 10, 10], 'true,true,false,true,true': [0.0, 0, 0], 'false': [1.05e-08, 35, 0], 'true,true,false,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 35, 0], 'true': [2.501, 10, 45]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)'}, {'false,true,true': [0.0, 29, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 6, 0], 'true': [2.513, 10, 45], 'false,true,false,true': [0.0, 0, 0]}]
{'': [0.14876033057851296, 3.489272363107635e-17], 'false': [3.489272363107635e-17, nan], 'true,true': [0.14876033057851296, nan], 'true': [0.14876033057851296, nan]}
{'': [0.14876033057851185, 6.3441315692866086e-18], 'true,true': [0.14876033057851185, nan], 'true': [0.14876033057851185, nan]}
{'': [0.1487603305785119, -1.2688263138573217e-17], 'false': [-1.2688263138573217e-17, nan], 'false,true,false': [0.0, -1.6821560979169039e-18], 'false,true': [0.0, -1.6326809185664067e-18], 'false,true,false,false': [-4.11193712824132e-18, 0.0]}
{'': [0.1487603305785124, -1.5860328923216522e-18], 'false': [-1.5860328923216522e-18, nan], 'false,true,false': [0.0, -5.046468293750712e-18], 'false,true': [0.0, -3.2653618371328133e-18], 'false,true,true': [nan, 0.0]}
{'': [0.14876033057851232, -9.516197353929913e-18], 'false': [-9.516197353929913e-18, nan], 'false,true,false': [nan, 1.1564823173178713e-18], 'false,true': [0.0, 1.1564823173178713e-18]}
{'': [0.1487603305785126, 1.4274296030894868e-17], 'false': [1.4274296030894868e-17, nan], 'true,true': [0.1487603305785126, nan], 'true': [0.1487603305785126, nan], 'false,true': [1.3399243400648442e-17, 1.1564823173178713e-18]}
{'': [0.1487603305785126, -1.5860328923216522e-18], 'true,true': [1.9032394707859825e-16, 0.25], 'true': [0.1487603305785126, nan], 'true,true,false': [nan, 0.25], 'true,true,false,false': [0.2500000000000001, nan], 'false': [-1.5860328923216522e-18, nan], 'false,true': [0.0, -2.44902137784961e-18], 'false,true,false': [0.0, -2.523234146875356e-18]}
{'': [0.12656752544880706, 3.1720657846433043e-18], 'true,true': [nan, 0.12656752544880706], 'true': [0.12656752544880706, nan], 'true,true,false': [-3.8064789415719653e-17, 0.25], 'true,true,false,false': [0.25000000000000006, nan], 'true,true,false,true': [nan, -3.8064789415719653e-17]}
{'': [0.11374241337795513, -2.3790493384824783e-18]}
{'': [0.11483684682391006, -2.3790493384824783e-18], 'false': [-2.3790493384824783e-18, nan], 'false,true,false': [nan, -5.782411586589357e-19], 'false,true': [-4.785444071660157e-19, 5.782411586589357e-19]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;genre(E, F), genre(B, F).;true;true', '2;false,false;genre(E, G), genre(A, G).;true;true', '2;false,false,false;movie(H, E), movie(H, A).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;genre(E, F), genre(B, F).;true;true', '3;false,false;genre(E, H), genre(A, H).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;movie(F, E), movie(F, A).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;false;movie(I, H), movie(I, A).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;genre(I, J), genre(A, J).;true;true', '6;false,false;genre(I, K), genre(B, K).;true;true', '6;true;genre(E, F), genre(B, F).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;true;genre(E, G), genre(B, G).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;movie(F, E), movie(F, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.12544463852839136;  // std dev = 1,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(G, D), movie(G, A) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else if ( female(B) )
%   | | | | then return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | | else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.092691276189261;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839686;  // std dev = 2,08e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08518475138839687;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(B, E) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.20975771563253562;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( director(B) )
%   | | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(F, G), genre(A, G) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(F, H), genre(B, H) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(B, E) )
%   | then return 0.1770964977452775;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( female(A) )
%   | then return -0.07324622576333704;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07324622576333704;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.15274385809367086;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then return -0.06419184008202618;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(B) )
%   | | | then return -0.06419184008202619;  // std dev = 1,61e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06419184008202618;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.989156
   AUC PR    = 0.979162
   CLL	      = -0.122206
   Precision = 0.973988 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986823


Total learning time: 2.608 seconds
Total inference time: 1.496 seconds
AUC ROC: 0.989156


Refined model AUC ROC: 0.989156


Dataset: cora->imdb, Fold: 5, Type: transfer, Time: 00:50:08
{'Recall': 1.0, 'AUC PR': 0.979162, 'Mapping results': {'Generating paths time': 4.082361936569214, 'Finding best mapping': 0.026477336883544922, 'Generating mappings time': 0.06965041160583496, 'Knowledge compiling time': 0.3423144817352295, 'Possible mappings': 126, 'Total time': 4.520810127258301}, 'F1': 0.986823, 'AUC ROC': 0.989156, 'Inference time': 1.496, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.980002, 'F1': 0.886842, 'AUC ROC': 0.97778, 'Inference time': 0.868, 'Precision': [0.79669, 0.5], 'Learning time': 1.862, 'CLL': -0.281845}, 'Precision': [0.973988, 0.5], 'Learning time': 4.470000000000001, 'CLL': -0.122206}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1352095945470413;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14656735148626743;  // std dev = 0,086, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( female(A) )
%   | then return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.1288676370195173;  // std dev = 0,215, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
Results
   AUC ROC   = 0.992472
   AUC PR    = 0.990625
   CLL	      = -0.241338
   Precision = 0.864103 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.927098


Total learning time: 1.951 seconds
Total inference time: 0.831 seconds
AUC ROC: 0.992472


Dataset: cora->imdb, Fold: 5, Type: scratch, Time: 00:50:11
{'Recall': 1.0, 'AUC PR': 0.990625, 'F1': 0.927098, 'AUC ROC': 0.992472, 'Inference time': 0.831, 'Precision': [0.864103, 0.5], 'Learning time': 1.951, 'CLL': -0.241338}


Start learning from source dataset


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A) )
%   | then return 0.3581489350995078;  // std dev = 0,500, 616,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=308 */
%   | else return 0.3581489350995129;  // std dev = 0,500, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   else if ( interaction(A, A) )
%   | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(A, E) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then if ( interaction(A, G) )
%   | | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( interaction(A, H) )
%   | | | | then if ( interaction(H, I) )
%   | | | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | else return 0.3581489350995123;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, A) )
%   | then return 0.30874113578563606;  // std dev = 0,500, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( complex(A, D) )
%   | | then return 0.30874113578563755;  // std dev = 0,500, 164,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=82 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.3087411357856371;  // std dev = 0,500, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | | else return 0.308741135785637;  // std dev = 0,500, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   else if ( interaction(A, A) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.3087411357856355;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.30874113578563567;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.30874113578563567;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then return 0.3087411357856374;  // std dev = 0,500, 146,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=73 */
%   | | else return 0.30874113578563755;  // std dev = 0,500, 174,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.25641236875858875;  // std dev = 0,500, 398,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=199 */
%   else if ( location(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.25641236875858603;  // std dev = 0,500, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | | | else if ( enzyme(A, G) )
%   | | | | then if ( interaction(H, A), complex(H, E) )
%   | | | | | then return 0.2564123687585868;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | | else if ( complex(I, E), phenotype(I, J) )
%   | | | | | | then return 0.2564123687585867;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | | | | else return 0.2564123687585868;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.2564123687585866;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else return 0.2564123687585885;  // std dev = 0,500, 220,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=110 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.2564123687585861;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.256412368758586;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, A) )
%   | then return 0.2061374073445403;  // std dev = 0,500, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else return 0.2061374073445316;  // std dev = 0,500, 660,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=330 */
%   else if ( interaction(A, A) )
%   | then return 0.206137407344539;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(D, A) )
%   | | then if ( interaction(E, D) )
%   | | | then if ( interaction(E, A) )
%   | | | | then return 0.2061374073445389;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | else if ( interaction(A, F) )
%   | | | | | then return 0.2061374073445388;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | | else return 0.20613740734453934;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( function(A, G), function(D, G) )
%   | | | | then return 0.20613740734453923;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.206137407344539;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2061374073445388;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.16162857548414652;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | else if ( interaction(C, A) )
%   | | | then return 0.1616285754841484;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else if ( interaction(D, A) )
%   | | | | then return 0.16162857548414805;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | | else return 0.16162857548414758;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else if ( interaction(C, A) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.1616285754841486;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.1616285754841483;  // std dev = 0,500, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.16162857548414838;  // std dev = 0,500, 184,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=92 */
%   else if ( phenotype(A, F) )
%   | then return 0.16162857548415005;  // std dev = 0,500, 166,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=83 */
%   | else return 0.16162857548414997;  // std dev = 0,500, 174,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( location(A, C) )
%   | then if ( enzyme(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.12455597792081985;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12455597792082006;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, F) )
%   | | | then if ( phenotype(A, G) )
%   | | | | then return 0.12455597792081985;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | | | then return 0.12455597792082006;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0.12455597792082006;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( interaction(A, J), complex(J, K) )
%   | | | | then return 0.12455597792081995;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.12455597792082007;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.12455597792081917;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0.12455597792082418;  // std dev = 0,500, 690,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=345 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.09492800936730798;  // std dev = 0,500, 398,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=199 */
%   else if ( location(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.09492800936730741;  // std dev = 0,500, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | | else return 0.09492800936730766;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   | | else if ( complex(A, G) )
%   | | | then if ( enzyme(A, H) )
%   | | | | then if ( complex(I, G), interaction(I, I) )
%   | | | | | then return 0.09492800936730728;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0.09492800936730728;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | | else return 0.09492800936730728;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.09492800936730764;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.09492800936730458;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.09492800936730461;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, C) )
%   | | then return 0.07186088850055891;  // std dev = 0,500, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | else return 0.07186088850055901;  // std dev = 0,500, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( interaction(C, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.07186088850055872;  // std dev = 0,500, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.07186088850055765;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else if ( interaction(C, E) )
%   | | | then return 0.0718608885005583;  // std dev = 0,500, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | | | else return 0.07186088850055844;  // std dev = 0,500, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   else if ( enzyme(A, F) )
%   | then return 0.07186088850055909;  // std dev = 0,500, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.07186088850055929;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   | | else return 0.07186088850055866;  // std dev = 0,500, 108,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=54 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( complex(A, C) )
%   | then return 0.05418307375954897;  // std dev = 0,500, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( location(A, D) )
%   | | then if ( enzyme(A, E) )
%   | | | then if ( phenotype(A, F) )
%   | | | | then return 0.05418307375954902;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.05418307375954924;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.054183073759549207;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.05418307375954856;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( complex(A, G) )
%   | then if ( enzyme(A, H) )
%   | | then return 0.05418307375954951;  // std dev = 0,500, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0541830737595494;  // std dev = 0,500, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   | | | else return 0.05418307375954967;  // std dev = 0,500, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else return 0.054183073759546736;  // std dev = 0,500, 420,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=210 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then return 0.040760253233059034;  // std dev = 0,500, 704,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=352 */
%   else if ( interaction(A, A) )
%   | then return 0.04076025323305567;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(A, D) )
%   | | then return 0.040760253233053545;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(E, A) )
%   | | | then if ( interaction(F, E) )
%   | | | | then if ( interaction(F, A) )
%   | | | | | then return 0.040760253233054614;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else if ( interaction(A, G) )
%   | | | | | | then return 0.0407602532330541;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | else return 0.040760253233054974;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else if ( function(A, H), function(E, H) )
%   | | | | | then return 0.040760253233055085;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0.040760253233054614;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0407602532330541;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */


Predicates from source: ['proteinclass(protein,class).', 'complex(protein,com).', 'interaction(protein,protein).', 'function(protein,fun).', 'enzyme(protein,enz).', 'location(protein,loc).', 'phenotype(protein,phe).'] 



Best mapping found: ['proteinclass(A,B) -> tweets(A,B)', 'phenotype(A,B) -> follows(A,B)', 'enzyme(A,B) -> follows(A,B)', 'function(A,B) -> accounttype(A,B)', 'interaction(A,B) -> follows(A,B)', 'complex(A,B) -> follows(A,B)', 'location(A,B) -> follows(A,B)'] 

Transferred target predicate: tweets 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;tweets(A, B) :- follows(A, C).;true;true
0;false,false,false;follows(A, F).;true;true
0;false,false;follows(A, E).;false;true
0;true;follows(D, A).;false;false
0;false,false,false,false;follows(A, H).;true;false
0;false;follows(A, A).;false;true
0;false,false,false,true;follows(A, G).;false;false
0;false,false,false,false,true;follows(H, I).;false;false
1;;tweets(A, B) :- follows(A, C).;true;true
1;true,false;follows(A, D).;false;true
1;false,false;follows(A, H).;false;false
1;true;follows(A, A).;false;true
1;false;follows(A, A).;true;true
1;false,true;follows(A, F).;false;true
1;true,false,false;follows(A, E).;false;false
1;false,true,false;follows(A, G).;false;false
2;;tweets(A, B) :- follows(A, C).;false;true
2;false,true,true;follows(A, F).;false;true
2;false,false;follows(A, K).;false;false
2;false,true,true,false;follows(A, G).;true;false
2;false,true;follows(A, E).;true;false
2;false,true,true,false,true,false;follows(I, E), follows(I, J).;false;false
2;false;follows(A, D).;true;true
2;false,true,true,false,true;follows(H, A), follows(H, E).;false;true
3;;tweets(A, B) :- follows(A, C).;true;true
3;false,false,true;follows(E, D).;true;true
3;false,false;follows(D, A).;true;false
3;true;follows(A, A).;false;false
3;false,false,true,true;follows(E, A).;false;true
3;false;follows(A, A).;false;true
3;false,false,true,false;accounttype(A, G), accounttype(D, G).;false;false
3;false,false,true,true,false;follows(A, F).;false;false
4;;tweets(A, B) :- follows(A, C).;true;true
4;true,false;follows(C, A).;true;false
4;true,false,true;follows(A, E).;false;false
4;true,true;follows(A, A).;false;true
4;true;follows(C, C).;true;true
4;true,true,false;follows(C, A).;false;true
4;true,true,false,false;follows(D, A).;false;false
4;false;follows(A, F).;false;false
5;;tweets(A, B) :- follows(A, A).;true;false
5;true,true,false,true,false;follows(H, A), follows(H, I).;false;false
5;true,true;follows(A, D).;true;true
5;true;follows(A, C).;true;false
5;true,true,false,false;follows(A, J), follows(J, K).;false;false
5;true,true,false;follows(A, F).;true;true
5;true,true,true;follows(A, E).;false;false
5;true,true,false,true;follows(A, G).;false;true
6;;tweets(A, B) :- follows(A, C).;false;true
6;false,true,true;follows(A, F).;false;false
6;false,false;follows(A, J).;false;false
6;false,true;follows(A, E).;true;true
6;false,true,false,true;follows(A, H).;true;false
6;false,true,false,true,true;follows(I, G), follows(I, I).;false;false
6;false;follows(A, D).;true;true
6;false,true,false;follows(A, G).;true;false
7;;tweets(A, B) :- follows(A, C).;true;true
7;true,false;follows(C, C).;true;true
7;true,false,true;follows(D, A).;false;false
7;true,true;follows(C, C).;false;false
7;true;follows(C, A).;true;true
7;false;follows(A, F).;false;true
7;true,false,false;follows(C, E).;false;false
7;false,false;follows(A, G).;false;false
8;;tweets(A, B) :- follows(A, A).;true;true
8;true,false;follows(A, D).;true;false
8;true,false,true;follows(A, E).;true;false
8;true;follows(A, C).;false;true
8;true,false,true,true;follows(A, F).;false;false
8;false;follows(A, G).;true;false
8;false,true;follows(A, H).;false;true
8;false,true,false;follows(A, I).;false;false
9;;tweets(A, B) :- follows(A, C).;false;true
9;false,false,false;follows(E, A).;true;false
9;false,false;follows(A, D).;false;true
9;false,false,false,true;follows(F, E).;true;true
9;false,false,false,true,false;accounttype(A, H), accounttype(E, H).;false;false
9;false,false,false,true,true;follows(F, A).;false;true
9;false;follows(A, A).;false;true
9;false,false,false,true,true,false;follows(A, G).;false;false
WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A) )
%   | then return 0.3581489350995075;  // std dev = 16,340, 1.068,000 (wgt'ed) examples reached here.  /* #neg=534 #pos=534 */
%   | else return 0.3581489350995134;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( follows(A, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.3581489350995135;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, D) )
%   | | then return 0.3087411357856258;  // std dev = 17,321, 1.200,000 (wgt'ed) examples reached here.  /* #neg=600 #pos=600 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.30874113578563733;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then return 0.25641236875856865;  // std dev = 17,321, 1.200,000 (wgt'ed) examples reached here.  /* #neg=600 #pos=600 */
%   else if ( follows(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2564123687585881;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20613740734455457;  // std dev = 17,321, 1.200,000 (wgt'ed) examples reached here.  /* #neg=600 #pos=600 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(D, A) )
%   | | then if ( follows(E, D) )
%   | | | then if ( follows(E, A) )
%   | | | | then return 0.20613740734454092;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(C, A) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.1616285754841449;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.16162857548415074;  // std dev = 6,819, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   else if ( follows(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.16162857548414447;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.12455597792081728;  // std dev = 18,358, 1.348,000 (wgt'ed) examples reached here.  /* #neg=674 #pos=674 */
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then return 0.09492800936731988;  // std dev = 17,321, 1.200,000 (wgt'ed) examples reached here.  /* #neg=600 #pos=600 */
%   else if ( follows(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09492800936730776;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.07186088850056575;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | else if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(C, D) )
%   | | | then return 0.07186088850055902;  // std dev = 5,612, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | | | else return 0.0718608885005579;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   else if ( follows(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.0718608885005589;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, C) )
%   | then if ( follows(A, D) )
%   | | then return 0.05418307375954877;  // std dev = 17,321, 1.200,000 (wgt'ed) examples reached here.  /* #neg=600 #pos=600 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.054183073759548304;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then return 0.04076025323305326;  // std dev = 17,321, 1.200,000 (wgt'ed) examples reached here.  /* #neg=600 #pos=600 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(E, A) )
%   | | | then if ( follows(F, E) )
%   | | | | then if ( follows(F, A) )
%   | | | | | then return 0.040760253233055564;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695415
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 206.815 seconds
Total inference time: 1.062 seconds
AUC ROC: 0.5


Structure after Parameter Learning
['tweets(A, B)', {'': 'follows(A, C)', 'false,false,false': 'follows(A, F)', 'false,false': 'follows(A, E)', 'true': 'follows(D, A)', 'false,false,false,false': 'follows(A, G)', 'false': 'follows(A, A)'}, {'true,false': [5.745, 66, 66], 'false,false,true': [0.0, 0, 0], 'true,true': [16.34, 534, 534], 'false,true': [0.0, 0, 0], 'false,false,false,false,false': [6.083, 74, 74], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [0.0, 0, 0]}]
['tweets(A, B)', {'': 'follows(A, C)', 'true,false': 'follows(A, D)', 'false,false': 'follows(A, E)', 'false': 'follows(A, A)', 'true': 'follows(A, A)'}, {'false,false,true': [0.0, 0, 0], 'true,false,true': [17.321, 600, 600], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false': [6.083, 74, 74], 'true,false,false': [0.0, 0, 0]}]
['tweets(A, B)', {'': 'follows(A, C)', 'false': 'follows(A, D)', 'false,false': 'follows(A, E)'}, {'false,true': [0.0, 0, 0], 'false,false,false': [6.083, 74, 74], 'true': [17.321, 600, 600], 'false,false,true': [0.0, 0, 0]}]
['tweets(A, B)', {'': 'follows(A, C)', 'false,false,true': 'follows(E, D)', 'false,false': 'follows(D, A)', 'true': 'follows(A, A)', 'false,false,true,true': 'follows(E, A)', 'false': 'follows(A, A)'}, {'true,false': [17.321, 600, 600], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true,true': [6.083, 74, 74], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true,false': [0.0, 0, 0]}]
['tweets(A, B)', {'': 'follows(A, C)', 'true,false': 'follows(C, A)', 'true,false,true': 'follows(A, D)', 'false': 'follows(A, E)', 'true': 'follows(C, C)'}, {'true,false,true,false': [0.0, 0, 0], 'false,false': [6.083, 74, 74], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,true': [15.922, 507, 507], 'true,false,false': [6.819, 93, 93]}]
['tweets(A, B)', {'': 'follows(A, A)'}, {'false': [18.358, 674, 674], 'true': [0.0, 0, 0]}]
['tweets(A, B)', {'': 'follows(A, C)', 'false': 'follows(A, D)', 'false,false': 'follows(A, E)'}, {'false,true': [0.0, 0, 0], 'false,false,false': [6.083, 74, 74], 'true': [17.321, 600, 600], 'false,false,true': [0.0, 0, 0]}]
['tweets(A, B)', {'': 'follows(A, C)', 'true,false': 'follows(C, C)', 'false,false': 'follows(A, F)', 'true,true': 'follows(C, C)', 'true': 'follows(C, A)', 'false': 'follows(A, E)', 'true,false,false': 'follows(C, D)'}, {'false,false,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,false': [15.922, 507, 507], 'true,false,false,false': [3.873, 30, 30], 'false,false,false': [6.083, 74, 74], 'true,false,false,true': [5.612, 63, 63], 'true,true,true': [0.0, 0, 0]}]
['tweets(A, B)', {'': 'follows(A, A)', 'false': 'follows(A, C)', 'false,true': 'follows(A, D)'}, {'false,true,true': [17.321, 600, 600], 'false,false': [6.083, 74, 74], 'false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}]
['tweets(A, B)', {'': 'follows(A, C)', 'false,false,false': 'follows(E, A)', 'false,false': 'follows(A, D)', 'false,false,false,true': 'follows(F, E)', 'false,false,false,true,true': 'follows(F, A)', 'false': 'follows(A, A)'}, {'false,false,false,true,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true,true,true': [6.083, 74, 74], 'false,false,false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [17.321, 600, 600], 'false,false,false,false': [0.0, 0, 0]}]
{'': [0.24999999999999284, 0.24999999999999947], 'false,false,false': [nan, 0.24999999999999947], 'false,false': [nan, 0.24999999999999947], 'true': [0.249999999999992, 0.2499999999999996], 'false,false,false,false': [nan, 0.24999999999999947], 'false': [nan, 0.24999999999999947]}
{'': [0.2500000000000073, 0.2499999999999973], 'true,false': [0.2500000000000073, nan], 'false,false': [nan, 0.2499999999999973], 'false': [nan, 0.2499999999999973], 'true': [nan, 0.2500000000000073]}
{'': [0.2500000000000008, 0.25000000000000006], 'false': [nan, 0.25000000000000006], 'false,false': [nan, 0.25000000000000006]}
{'': [0.2500000000000069, 0.24999999999999956], 'false,false,true': [0.24999999999999956, nan], 'false,false': [0.24999999999999956, nan], 'true': [nan, 0.2500000000000069], 'false,false,true,true': [0.24999999999999956, nan], 'false': [nan, 0.24999999999999956]}
{'': [0.24999999999998673, 0.24999999999999956], 'false': [nan, 0.24999999999999956], 'true,false,true': [0.24999999999999517, nan], 'true': [nan, 0.24999999999998673], 'true,false': [0.24999999999999517, 0.24999999999999992]}
{'': [nan, 0.2500000000000083]}
{'': [0.24999999999999298, 0.24999999999999994], 'false': [nan, 0.24999999999999994], 'false,false': [nan, 0.24999999999999994]}
{'': [0.24999999999999994, 0.2500000000000002], 'true,false': [nan, 0.25000000000000067], 'false,false': [nan, 0.2500000000000002], 'true,true': [nan, 0.2500000000000007], 'true': [0.2500000000000007, 0.25000000000000067], 'false': [nan, 0.2500000000000002], 'true,false,false': [0.2499999999999993, 0.25000000000000017]}
{'': [nan, 0.2500000000000063], 'false': [0.25000000000000616, 0.24999999999999994], 'false,true': [0.25000000000000616, nan]}
{'': [0.24999999999999248, 0.25], 'false,false,false': [0.25, nan], 'false,false': [nan, 0.25], 'false,false,false,true': [0.25, nan], 'false,false,false,true,true': [0.25, nan], 'false': [nan, 0.25]}
******************************************
Performing Theory Revision
******************************************
Transfer was not sufficient.
Error in experiment of yeast->twitter


Start learning from source dataset


('Encountered problems while running process: ', '(cd boostsrl; java -jar v1-0.jar -l -combine -train train/ -target accounttype -trees 10 > train_output.txt 2>&1)')
Error in experiment of twitter->yeast


Start learning from source dataset


('Encountered problems while running process: ', '(cd boostsrl; java -jar v1-0.jar -l -combine -train train/ -target workedunder -trees 10 > train_output.txt 2>&1)')
Error in experiment of imdb->uwcse


Start learning from source dataset


('Encountered problems while running process: ', '(cd boostsrl; java -jar v1-0.jar -l -combine -train train/ -target advisedby -trees 10 > train_output.txt 2>&1)')
Error in experiment of uwcse->imdb


Start learning from source dataset


('Encountered problems while running process: ', '(cd boostsrl; java -jar v1-0.jar -l -combine -train train/ -target workedunder -trees 10 > train_output.txt 2>&1)')
Error in experiment of imdb->cora


Start learning from source dataset


('Encountered problems while running process: ', '(cd boostsrl; java -jar v1-0.jar -l -combine -train train/ -target samevenue -trees 10 > train_output.txt 2>&1)')
Error in experiment of cora->imdb


Start learning from source dataset


('Encountered problems while running process: ', '(cd boostsrl; java -jar v1-0.jar -l -combine -train train/ -target proteinclass -trees 10 > train_output.txt 2>&1)')
Error in experiment of yeast->twitter


Start learning from source dataset


('Encountered problems while running process: ', '(cd boostsrl; java -jar v1-0.jar -l -combine -train train/ -target accounttype -trees 10 > train_output.txt 2>&1)')
Error in experiment of twitter->yeast


Start learning from source dataset


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048793;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.12544463852839202;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360676;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.1015963294878365;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.0926912761892606;  // std dev = 1,41e-07, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839678;  // std dev = 9,88e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07877675473109143;  // std dev = 4,21e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07324622576333706;  // std dev = 8,43e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420308;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06419184008202611;  // std dev = 6,99e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */


Predicates from source: ['workedunder(person,person).', 'movie(movie,person).', 'actor(person).', 'director(person).'] 



Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'actor(A) -> student(A)', 'movie(A,B) -> publication(A,B)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.535568289938222;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.14185106490048777;  // std dev = 1,05e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.4572074133792135;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.36893705839760765;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.28527019316610924;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.21559914934332675;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.09269127618926093;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.16177893311781763;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.08518475138839683;  // std dev = 1,58e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.12156320581776346;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.09179048401490923;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.06970499337531842;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.053217952626247136;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.0641918400820262;  // std dev = 7,45e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
Results
   AUC ROC   = 0.949704
   AUC PR    = 0.939729
   CLL	      = -0.273854
   Precision = 0.866667 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.928571


Total learning time: 4.927 seconds
Total inference time: 0.654 seconds
AUC ROC: 0.949704


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.05e-08, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [5.16e-08, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.67e-08, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [4.21e-08, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.29e-08, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.58e-08, 25, 0], 'true,true': [2.11e-08, 0, 14]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 25, 0], 'true,true': [0.0, 0, 14]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [7.45e-09, 25, 0], 'true,true': [0.0, 0, 14]}]
{'': [0.17283950617284127, 4.440892098500626e-18], 'true': [-2.5376526277146434e-16, 0.21852237252861578]}
{'': [0.16527937223485065, -4.440892098500626e-18], 'true': [1.9032394707859825e-16, 0.21852237252861595]}
{'': [0.15798655603348136, 1.1102230246251566e-17], 'true': [-2.5376526277146434e-16, 0.21852237252861598]}
{'': [0.15428574723631744, -4.440892098500626e-18], 'true': [1.2688263138573217e-16, 0.21852237252861606]}
{'': [0.15290559825609437, 6.661338147750939e-18], 'true': [-3.172065784643304e-17, 0.218522372528616]}
{'': [0.1524070085560816, 9.992007221626408e-18], 'true': [3.172065784643304e-17, 0.21852237252861603]}
{'': [0.15220468125189954, -1.1102230246251566e-18], 'true': [-3.172065784643304e-17, 0.218522372528616]}
{'': [0.15209727309240345, -1.1102230246251566e-18], 'true': [0.0, 0.21852237252861603]}
{'': [0.15201547471739796, -4.440892098500626e-18], 'true': [-1.9825411154020653e-17, 0.21852237252861606]}
{'': [0.15193648071008423, 2.220446049250313e-18], 'true': [0.0, 0.21852237252861603]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else if ( publication(H, B) )
%   | | | | then if ( tempadvisedby(I, B) )
%   | | | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.14185106490048777;  // std dev = 1,05e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.1771985653050586;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( inphase(A, G), inphase(E, G) )
%   | | | | then return 0.07769635804062927;  // std dev = 0,786, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.5765998742001945;  // std dev = 0,919, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.786424204891965;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.1314431676465775;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.5634658750306112;  // std dev = 0,865, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.15287984713060612;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( inphase(A, G), inphase(E, G) )
%   | | | | then return 0.06646712977737634;  // std dev = 0,782, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.4625904681178872;  // std dev = 0,929, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.62836893179253;  // std dev = 0,103, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.10944121048668624;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.44859261720652943;  // std dev = 0,858, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.01040140851628284;  // std dev = 0,738, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.1663973046424418;  // std dev = 0,837, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else if ( publication(H, B) )
%   | | | | then if ( tempadvisedby(I, B) )
%   | | | | | then return 0.3666348679303928;  // std dev = 0,957, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then return 0.44961027660149133;  // std dev = 0,080, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.24920181933415578;  // std dev = 1,080, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.14910412685162935;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( inphase(A, G), inphase(D, G) )
%   | | | | then return 0.0358574881265921;  // std dev = 0,712, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.28080348869338173;  // std dev = 0,967, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, A), projectmember(I, B) )
%   | | | then return 0.46522140789553984;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.046558423850852904;  // std dev = 0,802, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.26510636942488713;  // std dev = 0,842, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926093;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.13124217564806792;  // std dev = 0,040, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.019199213184032705;  // std dev = 0,672, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.22257276367453233;  // std dev = 0,986, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B), publication(I, A) )
%   | | | then return 0.35330095270488365;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.036956348073181024;  // std dev = 0,802, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.20370028832430384;  // std dev = 0,844, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839683;  // std dev = 1,58e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.11704801562971334;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( inphase(A, G), inphase(D, G) )
%   | | | | then return 0.014772334368250553;  // std dev = 0,667, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.17300720046135823;  // std dev = 0,987, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, A), projectmember(I, B) )
%   | | | then return 0.27730651493180336;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.02920389489328303;  // std dev = 0,801, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.1589998700441229;  // std dev = 0,847, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.10552683960163102;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, E) )
%   | | | | then return 0.003771252113423426;  // std dev = 0,636, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.14236647406547473;  // std dev = 0,999, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.2127172161346413;  // std dev = 0,044, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.02299785144123928;  // std dev = 0,801, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.11627568463831865;  // std dev = 0,848, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.09600585892542891;  // std dev = 0,030, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.0031206262315211647;  // std dev = 0,636, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.1131253711462479;  // std dev = 0,996, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else if ( projectmember(I, B) )
%   | | | | then return 0.17934678075053762;  // std dev = 0,038, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.01806206546037083;  // std dev = 0,801, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.0920947537916897;  // std dev = 0,849, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.16420986824611583;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13926574962055796;  // std dev = 0,180, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then if ( inphase(A, I), inphase(G, I) )
%   | | | | then return -0.00424946554093919;  // std dev = 0,612, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.09634967423853513;  // std dev = 1,005, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else if ( tempadvisedby(J, B) )
%   | | | | then return 0.17838866963716404;  // std dev = 0,065, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(K, B) )
%   | | | | | then return 0.13400703000801117;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | | else return 0.05885964966261019;  // std dev = 1,098, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 7,45e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
Results
   AUC ROC   = 0.944691
   AUC PR    = 0.876949
   CLL	      = -0.312584
   Precision = 0.893333 at threshold = 0.5
   Recall    = 0.858974
   F1        = 0.875817


Total learning time: 6.588 seconds
Total inference time: 0.752 seconds
AUC ROC: 0.944691


Refined model AUC ROC: 0.944691


Dataset: imdb->uwcse, Fold: 1, Type: transfer, Time: 01:05:42
{'Recall': 0.858974, 'AUC PR': 0.876949, 'Mapping results': {'Generating paths time': 2.4856655597686768, 'Finding best mapping': 0.024890422821044922, 'Generating mappings time': 0.06266188621520996, 'Knowledge compiling time': 0.012155771255493164, 'Possible mappings': 288, 'Total time': 2.585378408432007}, 'F1': 0.875817, 'AUC ROC': 0.944691, 'Inference time': 0.752, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.939729, 'F1': 0.928571, 'AUC ROC': 0.949704, 'Inference time': 0.654, 'Precision': [0.866667, 0.5], 'Learning time': 4.927, 'CLL': -0.273854}, 'Precision': [0.893333, 0.5], 'Learning time': 11.515, 'CLL': -0.312584}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else if ( publication(H, B) )
%   | | | | then if ( tempadvisedby(I, B) )
%   | | | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.1771985653050586;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, E) )
%   | | | | then return 0.10092203251355424;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.786424204891965;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.1314431676465775;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.5634658750306112;  // std dev = 0,865, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.15287984713060612;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, E) )
%   | | | | then return 0.08766131137288703;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.62836893179253;  // std dev = 0,103, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.10944121048668624;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.44859261720652943;  // std dev = 0,858, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.13415343367266858;  // std dev = 0,027, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, E) )
%   | | | | then return 0.07538519128728272;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B), publication(I, A) )
%   | | | then return 0.5067640693766904;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.08985969552365518;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.3489929244939743;  // std dev = 0,857, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.11934956110669992;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.06425253627198277;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, A), projectmember(I, B) )
%   | | | then return 0.38232151811705767;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.07293629928480853;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.26406157938807623;  // std dev = 0,857, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.10738510048559341;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.05433785763527831;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.28578013742560454;  // std dev = 0,039, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(I, B) )
%   | | | | then return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.058652293664100574;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.19200601639991932;  // std dev = 0,858, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.02538312728959765;  // std dev = 0,337, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return 0.045644627153578615;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( projectmember(H, B) )
%   | | | | then return 0.23125053011732638;  // std dev = 0,033, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(I, A) )
%   | | | | | then return 0.04681915616028581;  // std dev = 0,808, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else if ( tempadvisedby(J, B) )
%   | | | | | | then return 0.18847548512093212;  // std dev = 0,345, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | | | else if ( publication(K, B) )
%   | | | | | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | | else return 0.050036818024791575;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.09978673204755144;  // std dev = 0,021, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( publication(G, E) )
%   | | | | then return 0.038122875969536014;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.10486187889079708;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | | then return 0.08027585492559851;  // std dev = 0,419, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( tempadvisedby(J, B) )
%   | | | | then return 0.22691613367365082;  // std dev = 0,073, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(K, B) )
%   | | | | | then return 0.18523498891766357;  // std dev = 0,034, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | | else return 0.10173773171257841;  // std dev = 1,094, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( inphase(A, F), inphase(D, F) )
%   | | | then return -0.08943757994203183;  // std dev = 0,435, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.10227107392184961;  // std dev = 0,433, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | | then return 0.0666957001344419;  // std dev = 0,422, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( tempadvisedby(I, B) )
%   | | | | then return 0.1899091351029377;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(J, B) )
%   | | | | | then return 0.1589157582253753;  // std dev = 0,030, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | | else return 0.07891536036146449;  // std dev = 1,094, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.16321503874591017;  // std dev = 0,053, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(E, B), publication(F, A) )
%   | | | then return -0.14991844376843697;  // std dev = 0,191, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | | then if ( publication(H, G) )
%   | | | | | then return 0.11895420522498552;  // std dev = 0,790, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.024905163581356915;  // std dev = 0,938, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else if ( publication(I, A) )
%   | | | | | then return 0.156235127107742;  // std dev = 0,707, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else if ( publication(J, B) )
%   | | | | | | then return 0.1323550020131511;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | else return 0.07243218643036224;  // std dev = 0,842, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
Results
   AUC ROC   = 0.88856
   AUC PR    = 0.783047
   CLL	      = -0.391646
   Precision = 0.821429 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.851852


Total learning time: 8.488 seconds
Total inference time: 1.146 seconds
AUC ROC: 0.88856


Dataset: imdb->uwcse, Fold: 1, Type: scratch, Time: 01:05:52
{'Recall': 0.884615, 'AUC PR': 0.783047, 'F1': 0.851852, 'AUC ROC': 0.88856, 'Inference time': 1.146, 'Precision': [0.821429, 0.5], 'Learning time': 8.488, 'CLL': -0.391646}


Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'actor(A) -> student(A)', 'movie(A,B) -> publication(A,B)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7043027812533584;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5956068723141557;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.46863440886780416;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3540171821738477;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.1015963294878363;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.26620552619924287;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.20307171050188988;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.08518475138839686;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1579278943667103;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.12508565429655724;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.10063530397647748;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08201840165050943;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.06419184008202618;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
Results
   AUC ROC   = 0.929472
   AUC PR    = 0.918777
   CLL	      = -0.290507
   Precision = 0.823009 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.902913


Total learning time: 3.027 seconds
Total inference time: 0.726 seconds
AUC ROC: 0.929472


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [2.98e-08, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [1.05e-08, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [3.33e-08, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [5.27e-09, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [7.45e-09, 18, 0], 'true,true': [1.83e-08, 0, 9]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [7.45e-09, 0, 9]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9]}]
{'': [0.08264462809917356, -9.25185853854297e-18], 'true': [-2.9605947323337506e-16, 0.1301775147928993]}
{'': [0.08063200586027203, 0.0], 'true': [9.868649107779169e-17, 0.13017751479289957]}
{'': [0.07874151912392335, 6.1679056923619804e-18], 'true': [-1.4802973661668753e-16, 0.13017751479289946]}
{'': [0.07789770458547739, -1.5419764230904951e-18], 'true': [1.2335811384723962e-16, 0.13017751479289938]}
{'': [0.07764125846417015, 1.5419764230904951e-18], 'true': [-3.700743415417188e-17, 0.13017751479289938]}
{'': [0.07757925968481666, 3.0839528461809902e-18], 'true': [3.700743415417188e-17, 0.1301775147928994]}
{'': [0.07757245843873052, -3.854941057726238e-18], 'true': [-2.4671622769447922e-17, 0.1301775147928994]}
{'': [0.07757700245374001, -7.709882115452476e-19], 'true': [6.1679056923619804e-18, 0.13017751479289943]}
{'': [0.07757946176858431, -1.5419764230904951e-18], 'true': [-3.0839528461809902e-18, 0.13017751479289938]}
{'': [0.07757644395816753, 0.0], 'true': [0.0, 0.1301775147928994]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.4068585879990681;  // std dev = 0,766, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.6175030309659435;  // std dev = 0,354, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7302664973147039;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.3218969203777237;  // std dev = 0,756, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.48845798554678616;  // std dev = 0,355, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5662835398208704;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.23923900726314914;  // std dev = 0,742, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return 0.5061299356632769;  // std dev = 0,115, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3383670325761128;  // std dev = 0,343, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.1015963294878363;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.1435738409498909;  // std dev = 0,695, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.292734896387344;  // std dev = 0,359, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3339582136078992;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.1086373068329895;  // std dev = 0,695, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.22282717250569334;  // std dev = 0,358, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2644433109164689;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08518475138839686;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.07634719328559476;  // std dev = 0,689, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.28453148662136585;  // std dev = 0,166, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12347451602911018;  // std dev = 0,904, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.03401417725085232;  // std dev = 0,661, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.1500274318294708;  // std dev = 0,359, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.18106580610535886;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.02641787053019477;  // std dev = 0,662, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.12007008148601629;  // std dev = 0,358, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1558946220505283;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.014863485250288763;  // std dev = 0,656, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return 0.2310393491978655;  // std dev = 0,147, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05951236251002866;  // std dev = 0,343, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.06419184008202618;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
Results
   AUC ROC   = 0.959475
   AUC PR    = 0.953759
   CLL	      = -0.274262
   Precision = 0.823009 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.902913


Total learning time: 3.82 seconds
Total inference time: 0.737 seconds
AUC ROC: 0.959475


Refined model AUC ROC: 0.959475


Dataset: imdb->uwcse, Fold: 2, Type: transfer, Time: 01:06:03
{'Recall': 1.0, 'AUC PR': 0.953759, 'Mapping results': {'Generating paths time': 2.5028154850006104, 'Finding best mapping': 0.024996042251586914, 'Generating mappings time': 0.06097006797790527, 'Knowledge compiling time': 0.0171511173248291, 'Possible mappings': 288, 'Total time': 2.605940341949463}, 'F1': 0.902913, 'AUC ROC': 0.959475, 'Inference time': 0.737, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.918777, 'F1': 0.902913, 'AUC ROC': 0.929472, 'Inference time': 0.726, 'Precision': [0.823009, 0.5], 'Learning time': 3.027, 'CLL': -0.290507}, 'Precision': [0.823009, 0.5], 'Learning time': 6.8469999999999995, 'CLL': -0.274262}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.4068585879990681;  // std dev = 0,766, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.6175030309659435;  // std dev = 0,354, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7302664973147039;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.39431058662709007;  // std dev = 0,801, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then return 0.567468700604235;  // std dev = 0,098, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4491964093967777;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.4252105848259723;  // std dev = 0,037, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2000323266030041;  // std dev = 0,715, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(E, B) )
%   | | then return 0.3833135276725105;  // std dev = 0,357, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.42238129222158227;  // std dev = 0,064, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.2157920853236327;  // std dev = 0,754, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then return 0.33733555243364016;  // std dev = 0,162, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.24272363513435058;  // std dev = 0,907, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.1638751760699514;  // std dev = 0,755, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then return 0.2671114594634138;  // std dev = 0,146, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.18561342195985517;  // std dev = 0,907, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839686;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.21977154926958914;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0259854010631293;  // std dev = 0,677, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(E, B) )
%   | | then return 0.191120224790907;  // std dev = 0,358, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.21216451557706123;  // std dev = 0,077, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07877675473109179;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.09173877260920957;  // std dev = 0,726, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then return 0.1906820252978064;  // std dev = 0,164, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.10448216142962076;  // std dev = 0,907, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.0720230349100704;  // std dev = 0,729, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then return 0.16333626744807886;  // std dev = 0,147, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.08434858517841876;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.144580700779464;  // std dev = 0,069, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.03879377783848337;  // std dev = 0,655, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(E, B) )
%   | | then return 0.11423230894463701;  // std dev = 0,358, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.13612581660098588;  // std dev = 0,079, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.0641918400820262;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
Results
   AUC ROC   = 0.958781
   AUC PR    = 0.947317
   CLL	      = -0.281921
   Precision = 0.823009 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.902913


Total learning time: 4.836 seconds
Total inference time: 0.741 seconds
AUC ROC: 0.958781


Dataset: imdb->uwcse, Fold: 2, Type: scratch, Time: 01:06:09
{'Recall': 1.0, 'AUC PR': 0.947317, 'F1': 0.902913, 'AUC ROC': 0.958781, 'Inference time': 0.741, 'Precision': [0.823009, 0.5], 'Learning time': 4.836, 'CLL': -0.281921}


Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'actor(A) -> student(A)', 'movie(A,B) -> publication(A,B)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.08518475138839687;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06419184008202622;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
Results
   AUC ROC   = 0.894231
   AUC PR    = 0.825397
   CLL	      = -0.313006
   Precision = 0.825397 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.904348


Total learning time: 1.447 seconds
Total inference time: 0.754 seconds
AUC ROC: 0.894231


Structure after Parameter Learning
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.98e-08, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.98e-08, 0, 8], 'false': [3.73e-09, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.49e-08, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [7.45e-09, 0, 8], 'false': [2.63e-09, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.0, 0, 8], 'false': [0.0, 9, 0], 'true,true': [0.0, 0, 1]}]
{'': [-2.9605947323337506e-16, -9.25185853854297e-18], 'true': [0.0, -2.220446049250313e-16]}
{'': [9.868649107779169e-17, 0.0], 'true': [0.0, 1.1102230246251565e-16]}
{'': [-1.4802973661668753e-16, -1.5419764230904951e-18], 'true': [0.0, -1.1102230246251565e-16]}
{'': [1.2335811384723962e-16, 1.5419764230904951e-18], 'true': [0.0, 1.1102230246251565e-16]}
{'': [-3.700743415417188e-17, -1.5419764230904951e-18], 'true': [0.0, -4.163336342344337e-17]}
{'': [3.700743415417188e-17, 0.0], 'true': [0.0, 2.7755575615628914e-17]}
{'': [-2.4671622769447922e-17, 0.0], 'true': [0.0, -2.0816681711721685e-17]}
{'': [6.1679056923619804e-18, 7.709882115452476e-19], 'true': [0.0, 6.938893903907228e-18]}
{'': [-3.0839528461809902e-18, 0.0], 'true': [0.0, -3.469446951953614e-18]}
{'': [0.0, -7.709882115452476e-19], 'true': [0.0, 0.0]}
******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']
Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.7194734122109544;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( publication(D, A) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, A) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
Results
   AUC ROC   = 0.894231
   AUC PR    = 0.825397
   CLL	      = -0.313006
   Precision = 0.825397 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.904348


Total learning time: 1.984 seconds
Total inference time: 0.75 seconds
AUC ROC: 0.894231


Refined model AUC ROC: 0.894231


Dataset: imdb->uwcse, Fold: 3, Type: transfer, Time: 01:06:17
{'Recall': 1.0, 'AUC PR': 0.825397, 'Mapping results': {'Generating paths time': 2.131206750869751, 'Finding best mapping': 0.024261951446533203, 'Generating mappings time': 0.0599675178527832, 'Knowledge compiling time': 0.008846044540405273, 'Possible mappings': 288, 'Total time': 2.22428822517395}, 'F1': 0.904348, 'AUC ROC': 0.894231, 'Inference time': 0.75, 'Parameter Learning results': {'Recall': 1.0, 'AUC PR': 0.825397, 'F1': 0.904348, 'AUC ROC': 0.894231, 'Inference time': 0.754, 'Precision': [0.825397, 0.5], 'Learning time': 1.447, 'CLL': -0.313006}, 'Precision': [0.825397, 0.5], 'Learning time': 3.431, 'CLL': -0.313006}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
Results
   AUC ROC   = 0.860577
   AUC PR    = 0.781955
   CLL	      = -0.382487
   Precision = 0.781955 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.877637


Total learning time: 1.422 seconds
Total inference time: 0.598 seconds
AUC ROC: 0.860577


Dataset: imdb->uwcse, Fold: 3, Type: scratch, Time: 01:06:19
{'Recall': 1.0, 'AUC PR': 0.781955, 'F1': 0.877637, 'AUC ROC': 0.860577, 'Inference time': 0.598, 'Precision': [0.781955, 0.5], 'Learning time': 1.422, 'CLL': -0.382487}


Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'actor(A) -> student(A)', 'movie(A,B) -> publication(A,B)'] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false
