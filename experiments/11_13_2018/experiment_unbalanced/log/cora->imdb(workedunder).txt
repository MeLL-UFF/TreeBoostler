Starting experiment #1 for cora->imdb(workedunder)

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.25953057897374937;  // std dev = 0,490, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.06085163780221508;  // std dev = 3,458, 74,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.049929757017320595;  // std dev = 3,364, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else return 0.031724064633188706;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7818662881957746;  // std dev = 1,384, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return -0.17646704513755837;  // std dev = 3,94e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.4901996215291083;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | | else return 0.07605820738769364;  // std dev = 4,323, 99,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | else return 0.2239972613047086;  // std dev = 0,490, 6.892,000 (wgt'ed) examples reached here.  /* #neg=4.132 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then return 0.06041681745930212;  // std dev = 0,405, 91,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return 0.052792433813171336;  // std dev = 0,403, 83,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | | else return 0.027818265282606516;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.45465837322273606;  // std dev = 0,441, 29,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.3111942577013072;  // std dev = 3,584, 73,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.06473168394143503;  // std dev = 4,323, 99,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.3660589557749625;  // std dev = 4,162, 71,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=41 */
%   | | | else return 0.04111941956782058;  // std dev = 4,323, 99,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | | else return 0.18936774633451484;  // std dev = 0,490, 6.722,000 (wgt'ed) examples reached here.  /* #neg=4.028 #pos=2.694 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( author(M, L), venue(M, A) )
%   | | then return 0.16704897823548645;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.035242138813283114;  // std dev = 0,391, 79,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | else return 0.026411669154013325;  // std dev = 0,381, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15618598687900673;  // std dev = 0,488, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return 0.04737545638249722;  // std dev = 0,404, 91,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=19 */
%   | else return 0.02279444226352616;  // std dev = 0,381, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12618909065545791;  // std dev = 0,488, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.46940349885674104;  // std dev = 1,158, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1924321358122496;  // std dev = 0,037, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.02726930421248523;  // std dev = 0,391, 79,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.11024995636234376;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.02554854744234982;  // std dev = 3,364, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else return 0.017963810649480463;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10035820726441617;  // std dev = 0,488, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.14358635729789235;  // std dev = 0,010, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.04782364343191075;  // std dev = 0,413, 85,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=19 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.07263054621712854;  // std dev = 1,338, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.024405958980605533;  // std dev = 3,364, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else return 0.015588800737423445;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0788627233222346;  // std dev = 0,488, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else return 0.016133620119627868;  // std dev = 0,383, 946,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=170 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5630983687473482;  // std dev = 1,398, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return -0.373498335325241;  // std dev = 0,137, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.005462253355909984;  // std dev = 0,453, 123,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
%   | else return 0.061015230624503945;  // std dev = 0,489, 6.892,000 (wgt'ed) examples reached here.  /* #neg=4.132 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordvenue(A, J) )
%   | | then return -0.12861570190872174;  // std dev = 0,009, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.04051485839836275;  // std dev = 0,408, 85,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=19 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then return 0.02111227833431145;  // std dev = 0,403, 83,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | | else return 0.011322948759415679;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04745099875948933;  // std dev = 0,487, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else return 0.011916889529944272;  // std dev = 0,383, 946,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=170 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.41460116387846274;  // std dev = 1,396, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return -0.29689732552378273;  // std dev = 0,114, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.18382713142986265;  // std dev = 2,293, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | | else return -0.05120074528490201;  // std dev = 4,323, 99,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | else return 0.036120019105718514;  // std dev = 0,489, 6.892,000 (wgt'ed) examples reached here.  /* #neg=4.132 #pos=2.760 */
%   else return 0.010248898441280498;  // std dev = 0,383, 946,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=170 */


Predicates from source: ['samevenue(venue,venue).', 'haswordauthor(author,word).', 'samebib(class,class).', 'haswordvenue(venue,word).', 'author(class,author).', 'venue(class,venue).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.4872140884399414
   Generating paths time   = 2.418877363204956
   Generating mappings time   = 0.046291351318359375
   Possible mappings   = 126
   Finding best mapping   = 0.02211165428161621
   Total time   = 2.9745004177093506


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,false;genre(B, H), genre(I, H).;true;false
0;false;genre(A, D), genre(E, D).;true;true
0;false,false,true;movie(J, I), movie(J, A).;false;false
0;false,true;genre(E, F), genre(B, F).;false;true
0;false,true,false;movie(G, E), movie(G, B).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;true,true;movie(F, E), movie(F, A).;true;true
1;false,false;genre(A, J), genre(K, J).;false;false
1;false;genre(B, H), genre(I, H).;false;true
1;true,true,false;genre(B, D).;false;false
1;true,true,true;movie(G, B).;false;false
1;true;genre(A, D), genre(E, D).;true;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;true,true;genre(F, C).;false;true
2;true,false,true;movie(J, I), movie(J, B).;false;false
2;false;genre(B, K), genre(L, K).;true;false
2;true,true,false;movie(G, E), movie(G, A).;false;false
2;false,true;movie(M, L), movie(M, A).;false;false
2;true;genre(A, D), genre(E, D).;true;true
2;true,false;genre(B, H), genre(I, H).;true;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false;genre(A, D), genre(E, D).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, B).;false;false
4;false,false;genre(A, H), genre(I, H).;true;false
4;false;genre(B, D), genre(E, D).;true;true
4;false,true;movie(F, E), movie(F, A).;true;false
4;false,false,true;movie(J, I), movie(J, B).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false,false,true;movie(I, H), movie(I, A).;false;false
5;false,true;genre(E, F), genre(B, F).;false;false
5;false;genre(A, D), genre(E, D).;true;true
5;false,false;genre(B, G), genre(H, G).;true;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;true,true;movie(F, E), movie(F, B).;true;false
7;false,true;genre(I, J), genre(A, J).;false;false
7;false;genre(B, H), genre(I, H).;true;true
7;true,true,true;movie(G, A).;false;false
7;true;genre(B, D), genre(E, D).;true;false
7;false,false;genre(A, K), genre(L, K).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
9;true,true;movie(F, E), movie(F, A).;true;true
9;true,true,true;movie(G, B).;false;false
9;true;genre(A, D), genre(E, D).;true;false
9;true,true,false;genre(H, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.7470378239884015;  // std dev = 2,494, 63,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048763;  // std dev = 8,69e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then return 0.6746766457972942;  // std dev = 1,932, 60,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | else if ( genre(A, F), genre(G, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( genre(F, C) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), genre(H, G) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return 0.526792860541537;  // std dev = 1,932, 60,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360617;  // std dev = 1,00e-07, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.07789630734993232;  // std dev = 3,676, 164,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.4260957716767963;  // std dev = 0,991, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10893016883657812;  // std dev = 2,11e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(B, G), genre(H, G) )
%   | | then if ( movie(I, H), movie(I, A) )
%   | | | then return 0.2915790647525686;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09879854518136016;  // std dev = 7,88e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.0036472194887415344;  // std dev = 2,909, 181,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.11516332881748037;  // std dev = 3,032, 67,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=56 */
%   | else if ( genre(A, G), genre(H, G) )
%   | | then return -0.07904184397613845;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.09064397044938681;  // std dev = 3,80e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.0287451856762559;  // std dev = 2,525, 147,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.0071493708332702735;  // std dev = 2,759, 161,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */


Results
   AUC ROC   = 0.888593
   AUC PR    = 0.316701
   CLL	      = -0.16558
   Precision = 0.372905 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.512476


Total learning time: 1.678 seconds
Total inference time: 2.913 seconds
AUC ROC: 0.888593


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [2.494, 7, 56], 'false,false,false': [8.69e-08, 104, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 3, 0], 'true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(A, F), genre(G, F)', 'false': 'genre(B, D), genre(E, D)'}, {'false,false,true': [0.0, 2, 0], 'false,true': [1.932, 4, 56], 'true': [0.0, 0, 0], 'false,false,false': [0.0, 92, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'genre(F, C)', 'false,true': 'movie(I, H), movie(I, A)', 'true': 'genre(A, D), genre(E, D)', 'false': 'genre(B, G), genre(H, G)'}, {'false,true,true': [1.932, 4, 56], 'false,false': [1e-07, 132, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true': [0.0, 4, 0], 'true': [0.0, 0, 0], 'false,false': [3.676, 108, 56]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,false': 'genre(A, H), genre(I, H)', 'false': 'genre(B, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, A)', 'false,false,true': 'movie(J, I), movie(J, B)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 6, 0], 'false,false,false': [2.11e-08, 93, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.991, 1, 56], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(B, F)', 'false,false': 'genre(B, G), genre(H, G)', 'false,false,true': 'movie(I, H), movie(I, A)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [1.687, 3, 56], 'false,false,false': [7.88e-08, 107, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 1, 0], 'false,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 1, 0], 'false': [2.909, 125, 56]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,false': 'genre(A, G), genre(H, G)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false': [3.032, 11, 56], 'false,false,false': [3.8e-08, 101, 0], 'false,false,true': [3.73e-09, 10, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [2.525, 91, 56]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [2.759, 105, 56]}]]
[{'': [0.0, 0.22089965397923905], 'false,false': [0.09876543209876519, 7.259150545626024e-17], 'false': [0.0, 0.22288357416902752], 'false,true': [nan, 0.0], 'false,true,false': [0.0, nan], 'false,false,true': [0.09876543209876519, nan]}, {'': [nan, 0.17648962245117655], 'false,false': [0.0, -1.68946982008176e-17], 'false': [0.062222222222221645, -1.4173059888831785e-17]}, {'': [0.0, 0.10719965556559141], 'true,true': [0.0, nan], 'false,true': [0.06222222222222236, nan], 'false': [0.06222222222222236, 7.569702440626067e-17], 'true': [0.0, nan]}, {'': [nan, 0.08117620404935916], 'false': [0.0, 0.08238902559188825]}, {'': [nan, 0.07243926893224094], 'false,true,true': [0.01723607263773518, nan], 'false,false': [0.0, 4.775152794086695e-18], 'false': [0.01723607263773518, 1.5013316192375061e-05], 'false,true': [0.01723607263773518, nan], 'false,false,true': [0.0, nan]}, {'': [0.0, 0.050988596494394925], 'false,true': [nan, 0.0], 'false,false': [0.04826199367997706, 5.810513026075585e-17], 'false': [0.0, 0.05206653978980164], 'false,false,true': [0.04826199367997706, nan]}, {'': [0.0, 0.04676022544885913]}, {'': [nan, 0.06150013150664992], 'false,true': [nan, 0.13722432613054147], 'false': [0.13722432613054147, 1.103444786043028e-05], 'false,false': [1.3877787807814458e-18, 1.428999932685845e-17]}, {'': [nan, 0.04335518237008944]}, {'': [nan, 0.04726794183152996]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '0;false,false;genre(B, H), genre(I, H).;true;true', '0;false;genre(A, D), genre(E, D).;true;true', '1;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '1;false;genre(A, F), genre(G, F).;true;true', '2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '2;false;genre(B, G), genre(H, G).;true;true', '3;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '4;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '4;false;genre(A, H), genre(I, H).;true;true', '5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '5;false,false;genre(B, G), genre(H, G).;true;true', '5;false;genre(A, D), genre(E, D).;true;true', '6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '7;false;genre(A, G), genre(H, G).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, F), genre(G, F) )
%   | | then if ( movie(H, A), movie(H, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048763;  // std dev = 8,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.6913094771863096;  // std dev = 0,152, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( genre(A, E), genre(F, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839133;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.5623097995890869;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.224243700503811;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.41751358415831;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.4226831971870699;  // std dev = 6,66e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.18944565656828605;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601494;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.324218657460354;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.1607172904858077;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, F), genre(G, F) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.29192187990091967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(B, F), genre(G, F) )
%   | | then if ( movie(H, A), movie(H, B) )
%   | | | then return 0.2564106700467412;  // std dev = 0,009, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.13997510873655183;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.19756833662204568;  // std dev = 0,062, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.20048545797309275;  // std dev = 0,060, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( female(A) )
%   | then return 0.16697971450317706;  // std dev = 0,061, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.15618373920114179;  // std dev = 0,092, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else if ( genre(A, E), genre(F, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15549029152620616;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.15819100668616493;  // std dev = 1,86e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.17190137365601563;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13614749432097287;  // std dev = 4,93e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13824530899808785;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.14428393152315172;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else return -0.07970572583156353;  // std dev = 0,085, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.99889
   AUC PR    = 0.966568
   CLL	      = -0.080544
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total learning time: 2.897 seconds
Total inference time: 2.392 seconds
AUC ROC: 0.99889


Refined model AUC ROC: 0.99889


Dataset: cora->imdb(workedunder), Fold: 1, Type: transfer, Time: 00:15:04
{'Recall': 0.819018, 'AUC PR': 0.966568, 'F1': 0.900506, 'Mapping results': {'Knowledge compiling time': 0.4872140884399414, 'Total time': 2.9745004177093506, 'Generating mappings time': 0.046291351318359375, 'Generating paths time': 2.418877363204956, 'Possible mappings': 126, 'Finding best mapping': 0.02211165428161621}, 'CLL': -0.080544, 'AUC ROC': 0.99889, 'Precision': [1.0, 0.5], 'Inference time': 2.392, 'Learning time': 4.574999999999999, 'Parameter Learning results': {'Recall': 0.819018, 'AUC PR': 0.316701, 'F1': 0.512476, 'CLL': -0.16558, 'AUC ROC': 0.888593, 'Precision': [0.372905, 0.5], 'Inference time': 2.913, 'Learning time': 1.678}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,69e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839127;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7263798063385707;  // std dev = 0,002, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.27361174347778155;  // std dev = 0,000473, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 8,16e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5621648003949385;  // std dev = 0,002, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2227712162539723;  // std dev = 0,000476, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 1,49e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4225748726926922;  // std dev = 0,002, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18658407740688618;  // std dev = 0,000295, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 5,05e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32414516131455223;  // std dev = 0,002, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15988239777681396;  // std dev = 0,000350, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6,83e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2575136152315955;  // std dev = 0,002, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13966996468536166;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2114102791788665;  // std dev = 0,001, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12350945359955665;  // std dev = 0,000231, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.07877675473109157;  // std dev = 6,50e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.25627784319952895;  // std dev = 0,615, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0787767547310918;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07299514037302589;  // std dev = 0,016, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17830763584124001;  // std dev = 0,001, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11093624795781347;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0683381208087462;  // std dev = 0,010, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15366201281572128;  // std dev = 0,001, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10031438353915316;  // std dev = 0,000248, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13472341486712194;  // std dev = 0,001, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09161688197976166;  // std dev = 0,000229, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.06421226387328632;  // std dev = 2,36e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.2435002547332002;  // std dev = 0,644, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079607
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.866 seconds
Total inference time: 2.491 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 1, Type: scratch, Time: 00:15:10
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 0.847854, 'CLL': -0.079607, 'AUC ROC': 1.0, 'Precision': [0.735892, 0.5], 'Inference time': 2.491, 'Learning time': 2.866}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.46555566787719727
   Generating paths time   = 2.501591444015503
   Generating mappings time   = 0.057984352111816406
   Possible mappings   = 126
   Finding best mapping   = 0.02908015251159668
   Total time   = 3.054218053817749


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'author(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,false;genre(B, H).;true;false
0;false;genre(A, D).;true;true
0;false,false,true;movie(J, I), movie(J, A).;false;false
0;false,true;genre(B, F).;false;true
0;false,true,false;movie(G, E), movie(G, B).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;true,true;movie(F, E), movie(F, A).;true;true
1;false,false;genre(A, J).;false;false
1;false;genre(B, H).;false;true
1;true,true,false;genre(B, D).;false;false
1;true,true,true;movie(G, B).;false;false
1;true;genre(A, D).;true;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;true,true;movie(G, E), movie(G, A).;false;false
2;true,false,true;movie(J, I), movie(J, B).;false;false
2;false;genre(B, K).;true;false
2;false,true;movie(M, L), movie(M, A).;false;false
2;true;genre(A, D).;true;true
2;true,false;genre(B, H).;true;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false;genre(A, D).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, B).;false;false
4;false,false;genre(A, H).;true;false
4;false;genre(B, D).;true;true
4;false,true;movie(F, E), movie(F, A).;true;false
4;false,false,true;movie(J, I), movie(J, B).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false,false,true;movie(I, H), movie(I, A).;false;false
5;false,true;genre(B, F).;false;false
5;false;genre(A, D).;true;true
5;false,false;genre(B, G).;true;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;true,true;movie(F, E), movie(F, B).;true;false
7;false,true;genre(A, J).;false;false
7;false;genre(B, H).;true;true
7;true,true,true;movie(G, A).;false;false
7;true;genre(B, D).;true;false
7;false,false;genre(A, K).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
9;true,true;movie(F, E), movie(F, A).;true;false
9;true,true,true;movie(G, B).;false;false
9;true;genre(A, D).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, G), movie(F, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H) )
%   | | then if ( movie(I, J), movie(I, A) )
%   | | | then return 0.7787838557344332;  // std dev = 2,146, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048763;  // std dev = 8,56e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H) )
%   | then return 0.6558443425579517;  // std dev = 2,146, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else if ( genre(A, I) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1254446385283913;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then return 0.4072415794244509;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360624;  // std dev = 6,99e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then return -0.13861016093574863;  // std dev = 0,203, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.11146464173672553;  // std dev = 3,635, 159,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.3405292042915807;  // std dev = 2,651, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H) )
%   | | then if ( movie(I, J), movie(I, B) )
%   | | | then return -0.08962500498203452;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11223148690503093;  // std dev = 2,58e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08257625861756322;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(G, H), movie(G, A) )
%   | | | then return 0.24465546172539646;  // std dev = 2,791, 67,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10152635744763393;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -7.280484976996745E-4;  // std dev = 3,444, 197,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.27430704402174527;  // std dev = 1,689, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | else if ( genre(A, F) )
%   | | then return -0.07648082163437045;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09257151037580888;  // std dev = 6,75e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.00989363430230668;  // std dev = 2,931, 169,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.004646633983170405;  // std dev = 2,940, 175,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */


Results
   AUC ROC   = 0.88352
   AUC PR    = 0.237728
   CLL	      = -0.184866
   Precision = 0.275182 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.41181


Total learning time: 1.897 seconds
Total inference time: 2.926 seconds
AUC ROC: 0.88352


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H)', 'false': 'genre(A, D)', 'false,true': 'genre(B, E)', 'false,true,false': 'movie(F, G), movie(F, B)', 'false,false,true': 'movie(I, J), movie(I, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [2.146, 5, 58], 'false,false,false': [8.56e-08, 93, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 6, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(E, F), movie(E, A)', 'false,false': 'genre(A, I)', 'false': 'genre(B, H)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D)'}, {'false,false,true': [0.0, 7, 0], 'false,false,false': [0.0, 115, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [2.146, 5, 58], 'true,true,true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'movie(E, F), movie(E, A)', 'false': 'genre(B, D)'}, {'false,true,true': [3.259, 13, 58], 'false,false': [6.99e-08, 93, 0], 'true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D)'}, {'false,true': [0.203, 6, 0], 'true': [0.0, 0, 0], 'false,false': [3.635, 101, 58]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,false': 'genre(A, H)', 'false': 'genre(B, D)', 'false,true': 'movie(E, F), movie(E, A)', 'false,false,true': 'movie(I, J), movie(I, B)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 4, 0], 'false,false,false': [2.58e-08, 109, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 1, 0], 'false,true,true,true': [2.651, 8, 58], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(B, E)', 'false,false': 'genre(B, F)', 'false,false,true': 'movie(G, H), movie(G, A)', 'false': 'genre(A, D)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [2.791, 9, 58], 'false,false,false': [0.0, 88, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 1, 0], 'false': [3.444, 139, 58]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(A, E)', 'false': 'genre(B, D)', 'false,false': 'genre(A, F)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false': [1.689, 3, 58], 'false,false,false': [6.75e-08, 100, 0], 'false,false,true': [1.86e-09, 5, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [2.931, 111, 58]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [2.94, 117, 58]}]]
[{'': [nan, 0.22984301173601604], 'false,false': [0.07306626354245364, 7.879002110243047e-17], 'false': [-6.938893903907228e-18, 0.2335634451019068], 'false,true': [nan, -6.938893903907228e-18], 'false,true,false': [-6.938893903907228e-18, nan], 'false,false,true': [0.07306626354245364, nan]}, {'': [0.0, 0.16196399009861806], 'true,true': [0.0, nan], 'false,false': [-1.982541115402065e-18, -5.792467954566034e-18], 'false': [0.07306626354245381, -3.640075490574284e-18], 'true,true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [nan, 0.131025086814801], 'false,true': [0.14957349732195985, nan], 'false': [0.14957349732195985, 5.2526680734953645e-17]}, {'': [nan, 0.08254117089391372], 'false': [0.006850118592272299, 0.0831233494937157]}, {'': [0.0, 0.08683280419406648], 'false,true,true': [0.106519742883379, nan], 'false,false': [0.0, 6.111319401606367e-18], 'false': [0.106519742883379, 1.7450005393658946e-05], 'false,true': [0.106519742883379, nan], 'false,false,true': [0.0, nan]}, {'': [nan, 0.07770252853438017], 'false,true': [nan, 0.0], 'false,false': [0.11628425038984193, -2.7755575615628914e-17], 'false': [0.0, 0.07967531734667659], 'false,false,true': [0.11628425038984193, nan]}, {'': [0.0, 0.06020583080869316]}, {'': [nan, 0.048346196106947674], 'false,true': [nan, 0.04676162321956459], 'false': [0.04676162321956459, 1.1741962094090142e-05], 'false,false': [6.938893903907229e-19, 4.5519144009631415e-17]}, {'': [nan, 0.05084576077179231]}, {'': [nan, 0.04940302269223165]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D).;true;true', '0;false;genre(B, H).;true;true', '1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '1;false,false;genre(A, I).;true;true', '1;false;genre(B, H).;true;true', '2;;workedunder(A, B) :- genre(B, D).;true;true', '4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '4;false,false;genre(A, H).;true;true', '4;false;genre(B, D).;true;true', '5;;workedunder(A, B) :- genre(A, D).;true;true', '5;false;genre(B, F).;true;true', '6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;;workedunder(A, B) :- genre(B, D).;true;true', '7;false;genre(A, F).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048763;  // std dev = 8,94e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(A, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.11419184395571853;  // std dev = 0,005, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( female(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360636;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.10159632948783624;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1014252751200652;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( female(A) )
%   | | | then return -0.09254803534235356;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09254803534235356;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(A, F) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926105;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.18013519692815266;  // std dev = 0,190, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2551722425694892;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.2551722425694892;  // std dev = 3,65e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.08506317076674587;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.08518475138839679;  // std dev = 2,24e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( female(A) )
%   | | | then return -0.07867234561331467;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07867234561331467;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07877675473109165;  // std dev = 4,08e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return -0.07212977304200519;  // std dev = 9,05e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1700160084672544;  // std dev = 0,054, 59,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | else return -0.07315564369280358;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, E) )
%   | then return -0.06747337314378062;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( movie(C, A), movie(C, B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.0684269778442027;  // std dev = 1,97e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.06334980672415592;  // std dev = 1,61e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.15366242134357172;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1536624213435716;  // std dev = 2,63e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.06834768383986106;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( female(B) )
%   | | then return -0.05969321441361521;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.059693214413615206;  // std dev = 6,59e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13472373031106688;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13472373031106688;  // std dev = 1,86e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.06412187431268455;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.998889
   AUC PR    = 0.966587
   CLL	      = -0.074838
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 2.848 seconds
Total inference time: 2.774 seconds
AUC ROC: 0.998889


Refined model AUC ROC: 0.998889


Dataset: cora->imdb(workedunder), Fold: 2, Type: transfer, Time: 00:15:24
{'Recall': 0.817901, 'AUC PR': 0.966587, 'F1': 0.89983, 'Mapping results': {'Knowledge compiling time': 0.46555566787719727, 'Total time': 3.054218053817749, 'Generating mappings time': 0.057984352111816406, 'Generating paths time': 2.501591444015503, 'Possible mappings': 126, 'Finding best mapping': 0.02908015251159668}, 'CLL': -0.074838, 'AUC ROC': 0.998889, 'Precision': [1.0, 0.5], 'Inference time': 2.774, 'Learning time': 4.745, 'Parameter Learning results': {'Recall': 0.817901, 'AUC PR': 0.237728, 'F1': 0.41181, 'CLL': -0.184866, 'AUC ROC': 0.88352, 'Precision': [0.275182, 0.5], 'Inference time': 2.926, 'Learning time': 1.897}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839105;  // std dev = 8,02e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11340318876303138;  // std dev = 0,115, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.101497174322752;  // std dev = 6,14e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09260824816866997;  // std dev = 3,65e-08, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   else if ( female(A) )
%   | then return 0.301025984143511;  // std dev = 0,088, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3101117670742672;  // std dev = 0,065, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25779197672263326;  // std dev = 0,006, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12227114522387962;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08544499848512803;  // std dev = 0,037, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0786922601199215;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2116067015298542;  // std dev = 0,005, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10944826528431346;  // std dev = 0,001, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17845154859916776;  // std dev = 0,005, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09922752089770977;  // std dev = 0,000662, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07346572696176379;  // std dev = 0,029, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06834416375083309;  // std dev = 2,69e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15377108476673124;  // std dev = 0,004, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09067319039951396;  // std dev = 0,001, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13480850140319015;  // std dev = 0,004, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08364296549978274;  // std dev = 0,000650, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06432253239170477;  // std dev = 0,024, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070607
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.466 seconds
Total inference time: 1.775 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 2, Type: scratch, Time: 00:15:29
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'CLL': -0.070607, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.775, 'Learning time': 2.466}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.6213278770446777
   Generating paths time   = 2.460426092147827
   Generating mappings time   = 0.06140613555908203
   Possible mappings   = 126
   Finding best mapping   = 0.028543710708618164
   Total time   = 3.171710252761841


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,false;genre(B, H), genre(I, H).;true;false
0;false;genre(A, D), genre(E, D).;true;true
0;false,false,true;movie(J, I), movie(J, A).;false;false
0;false,true;genre(E, F), genre(B, F).;false;true
0;false,true,false;movie(G, E), movie(G, B).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;true,true;movie(F, E), movie(F, A).;true;true
1;false,false;genre(A, J), genre(K, J).;false;false
1;false;genre(B, H), genre(I, H).;false;true
1;true,true,false;genre(B, D).;false;false
1;true,true,true;movie(G, B).;false;false
1;true;genre(A, D), genre(E, D).;true;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;true,true;genre(F, C).;false;true
2;true,false,true;movie(J, I), movie(J, B).;false;false
2;false;genre(B, K), genre(L, K).;true;false
2;true,true,false;movie(G, E), movie(G, A).;false;false
2;false,true;movie(M, L), movie(M, A).;false;false
2;true;genre(A, D), genre(E, D).;true;true
2;true,false;genre(B, H), genre(I, H).;true;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false;genre(A, D), genre(E, D).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, B).;false;false
4;false,false;genre(A, H), genre(I, H).;true;false
4;false;genre(B, D), genre(E, D).;true;true
4;false,true;movie(F, E), movie(F, A).;true;false
4;false,false,true;movie(J, I), movie(J, B).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false,false,true;movie(I, H), movie(I, A).;false;false
5;false,true;genre(E, F), genre(B, F).;false;false
5;false;genre(A, D), genre(E, D).;true;true
5;false,false;genre(B, G), genre(H, G).;true;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;true,true;movie(F, E), movie(F, B).;true;false
7;false,true;genre(I, J), genre(A, J).;false;false
7;false;genre(B, H), genre(I, H).;true;true
7;true,true,true;movie(G, A).;false;false
7;true;genre(B, D), genre(E, D).;true;false
7;false,false;genre(A, K), genre(L, K).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
9;true,true;movie(F, E), movie(F, A).;true;true
9;true,true,true;movie(G, B).;false;false
9;true;genre(A, D), genre(E, D).;true;false
9;true,true,false;genre(H, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.6850720120225867;  // std dev = 4,725, 156,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=129 */
%   | | | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.02148226843284544;  // std dev = 6,403, 300,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=49 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H), genre(I, H) )
%   | then return 0.557413820148691;  // std dev = 4,821, 164,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=129 */
%   | else if ( genre(A, J), genre(K, J) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0.016697949797881393;  // std dev = 6,411, 304,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=49 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( genre(F, C) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), genre(H, G) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return 0.4901818075771013;  // std dev = 4,335, 151,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=129 */
%   | | else return -0.200297304171981;  // std dev = 2,11e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 4.130587707032659E-4;  // std dev = 6,445, 349,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.1135129359672987;  // std dev = 0,057, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0.10524627353405698;  // std dev = 8,739, 503,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.32278072144726144;  // std dev = 4,652, 155,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1855047247143404;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, B) )
%   | | | then return -0.10152483831562933;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.1015248383156293;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.0022135683508878127;  // std dev = 6,423, 310,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return -0.1319584811867221;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09263141397598769;  // std dev = 1,67e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( genre(B, G), genre(H, G) )
%   | | then if ( movie(I, H), movie(I, A) )
%   | | | then return 0.2883424452757544;  // std dev = 3,974, 147,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=129 */
%   | | | else return -0.15909288417449433;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.002271269154756335;  // std dev = 6,407, 302,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=49 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.053558699128156285;  // std dev = 8,043, 504,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H), genre(I, H) )
%   | then if ( genre(I, J), genre(A, J) )
%   | | then return -0.12323434136034081;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.12357170282698317;  // std dev = 4,853, 178,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=129 */
%   | else if ( genre(A, K), genre(L, K) )
%   | | then return -0.08939917835058155;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.002085808590362499;  // std dev = 6,394, 296,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return 0.03816151295524267;  // std dev = 7,870, 508,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.027909952849701148;  // std dev = 7,934, 517,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */


Results
   AUC ROC   = 0.961324
   AUC PR    = 0.348021
   CLL	      = -0.224599
   Precision = 0.362617 at threshold = 0.5
   Recall    = 0.95098
   F1        = 0.525034


Total learning time: 3.301 seconds
Total inference time: 3.011 seconds
AUC ROC: 0.961324


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true': [0.0, 2, 0], 'false,false,true,true': [4.725, 27, 129], 'false,false,false': [6.403, 251, 49], 'false,true,false,false': [0.0, 19, 0], 'false,false,true,false': [1.05e-08, 22, 0], 'false,true,false,true': [3.94e-08, 38, 0], 'true': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'false,false': 'genre(A, J), genre(K, J)', 'false': 'genre(B, H), genre(I, H)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)'}, {'false,false,true': [0.0, 44, 0], 'false,false,false': [6.411, 255, 49], 'true,true,false': [0.0, 0, 0], 'false,true': [4.821, 35, 129], 'true,true,true,true': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'genre(F, C)', 'false,true': 'movie(I, H), movie(I, A)', 'true': 'genre(A, D), genre(E, D)', 'false': 'genre(B, G), genre(H, G)'}, {'false,true,true': [4.335, 22, 129], 'false,false': [6.445, 300, 49], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 9, 0], 'false,true,false': [2.11e-08, 17, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true': [0.057, 50, 0], 'true': [0.0, 12, 0], 'false,false': [8.739, 325, 178]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,false': 'genre(A, H), genre(I, H)', 'false': 'genre(B, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, A)', 'false,false,true': 'movie(J, I), movie(J, B)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 42, 0], 'false,false,false': [6.423, 261, 49], 'false,false,true,false': [0.0, 21, 0], 'true': [0.0, 10, 0], 'false,true,true,true': [4.652, 26, 129], 'false,true,false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(B, F)', 'false,false': 'genre(B, G), genre(H, G)', 'false,false,true': 'movie(I, H), movie(I, A)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true,true': [0.0, 2, 0], 'false,false,true,true': [3.974, 18, 129], 'false,false,false': [6.407, 253, 49], 'false,false,true,false': [0.0, 23, 0], 'true': [7.45e-09, 13, 0], 'false,true,false': [1.67e-08, 52, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 16, 0], 'false': [8.043, 326, 178]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, B)', 'false,true': 'genre(I, J), genre(A, J)', 'false': 'genre(B, H), genre(I, H)', 'true,true,true': 'movie(G, A)', 'true': 'genre(B, D), genre(E, D)', 'false,false': 'genre(A, K), genre(L, K)'}, {'false,true,true': [0.0, 1, 0], 'false,false,true': [0.0, 47, 0], 'false,false,false': [6.394, 247, 49], 'true,true,false': [0.0, 0, 0], 'false,true,false': [4.853, 49, 129], 'true,true,true,true': [3.73e-09, 15, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [2.63e-09, 13, 0], 'false': [7.87, 330, 178]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 7, 0], 'false': [7.934, 339, 178], 'true,false': [0.0, 0, 0]}]]
[{'': [-1.0092936587501423e-17, 0.22159802197878686], 'false,false': [0.19950132559020764, 0.1366555555555566], 'false': [6.39789539614497e-17, 0.2337143957563802], 'false,true': [0.0, 6.232831015439475e-17], 'false,true,false': [4.0902953538821554e-17, 0.0], 'false,false,true': [0.14312130177515242, 5.046468293750712e-18]}, {'': [0.0, 0.19515007779060783], 'true,true': [0.0, nan], 'false,false': [-2.523234146875356e-18, 0.135203860803326], 'false': [0.14173953724624655, 0.12034071905396294], 'true,true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-1.5419764230904951e-18, 0.16946730561334353], 'true,true': [-1.5419764230904951e-18, nan], 'false,true': [0.1244682250778492, 2.6122894697062506e-17], 'false': [0.1552351352477119, 0.11902446130466718], 'true': [-1.5419764230904951e-18, nan]}, {'': [0.0, 0.14205423617080387], 'false': [6.540895765951405e-05, 0.15184152667781872]}, {'': [0.0, 0.14155491544964038], 'false,true,true': [0.13960457856399514, nan], 'false,false': [-3.700743415417188e-17, 0.13308012486992407], 'false': [0.14980153101601432, 0.11198724869170851], 'false,true': [0.13960457856399514, -1.6653345369377347e-17], 'false,false,true': [0.0, -3.96508223080413e-18]}, {'': [4.270088556250602e-18, 0.12907069819635208], 'false,true': [0.0, 5.337610695313253e-18], 'false,false': [0.11633829844564271, 0.1359260558747414], 'false': [5.516059478785023e-05, 0.14059317449978848], 'false,false,true': [0.107455226988755, 0.0]}, {'': [-1.734723475976807e-18, 0.12835722878743455]}, {'': [9.251858538542971e-19, 0.12833758106111745], 'true,true': [9.251858538542971e-19, nan], 'false,false': [-1.7716324861039733e-17, 0.1381368699780891], 'false': [0.13190634475906687, 0.12010998818281807], 'true,true,true': [9.251858538542971e-19, nan], 'false,true': [0.0, 0.13230709430204082], 'true': [9.251858538542971e-19, nan]}, {'': [5.337610695313253e-19, 0.12193215215976157]}, {'': [-4.956352788505163e-19, 0.12177169082791017], 'true,true': [-4.956352788505163e-19, nan], 'true,true,true': [-4.956352788505163e-19, nan], 'true': [-4.956352788505163e-19, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '0;false,false;genre(B, H), genre(I, H).;true;true', '0;false;genre(A, D), genre(E, D).;true;true', '0;false,false,true;movie(J, I), movie(J, A).;true;true', '0;false,true;genre(E, F), genre(B, F).;true;true', '0;false,true,false;movie(G, E), movie(G, B).;true;true', '1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '1;false,false;genre(A, J), genre(K, J).;true;true', '1;false;genre(B, H), genre(I, H).;true;true', '2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '2;false,true;movie(I, H), movie(I, A).;true;true', '2;false;genre(B, G), genre(H, G).;true;true', '3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '3;false;genre(A, D), genre(E, D).;true;true', '4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '4;false,false,true;movie(J, I), movie(J, B).;true;true', '4;false,true;movie(F, E), movie(F, A).;true;true', '4;false;genre(B, D), genre(E, D).;true;true', '4;false,false;genre(A, H), genre(I, H).;true;true', '5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '5;false,false,true;movie(I, H), movie(I, A).;true;true', '5;false,true;genre(E, F), genre(B, F).;true;true', '5;false;genre(A, D), genre(E, D).;true;true', '5;false,false;genre(B, G), genre(H, G).;true;true', '6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;false,true;genre(I, J), genre(A, J).;true;true', '7;false;genre(B, H), genre(I, H).;true;true', '7;false,false;genre(A, K), genre(L, K).;true;true', '8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.7239207471800468;  // std dev = 4,161, 149,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=129 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.520311097261675;  // std dev = 4,069, 74,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=49 */
%   | | | else return -0.1418510649004884;  // std dev = 0,000, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.7457513015269006;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return 0.745751301526901;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | else if ( actor(A) )
%   | | | then return -0.19904695849679643;  // std dev = 0,377, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(A, G), genre(H, G) )
%   | | then if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.4106019443384919;  // std dev = 4,268, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | | | else return -0.12544463852839172;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( female(A) )
%   | | | then return 0.4190825270760938;  // std dev = 2,474, 59,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=47 */
%   | | | else return 0.4796834048733723;  // std dev = 2,589, 94,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=82 */
%   | | else if ( actor(A) )
%   | | | then return -0.10518483670136584;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7045556775236549;  // std dev = 1,88e-07, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.2954443224763448;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(H, A), movie(H, B) )
%   | | | then return -0.04258339782749856;  // std dev = 2,067, 82,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=7 */
%   | | | else return -0.1301596137903864;  // std dev = 0,758, 195,000 (wgt'ed) examples reached here.  /* #neg=195 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( actor(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return -0.10814032640937916;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0999792353271132;  // std dev = 1,83e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.10018137209720364;  // std dev = 0,000535, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.4950494080526687;  // std dev = 0,722, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.10814032640937912;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( director(B), actor(A) )
%   | | | then return -0.23691586538221765;  // std dev = 0,610, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.10004282891770343;  // std dev = 0,004, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.34928168687566363;  // std dev = 0,075, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.25601811268829366;  // std dev = 0,026, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( actor(A) )
%   | | | then return -0.0770586602399306;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.0928220076658747;  // std dev = 6,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, B) )
%   | | | then return -0.09277984137749459;  // std dev = 0,016, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.09133130426811914;  // std dev = 3,82e-05, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.24165417813394452;  // std dev = 2,591, 71,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=49 */
%   | | | else return -0.09308584277229001;  // std dev = 0,045, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return -0.08528488227052784;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return -0.09023251073122938;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.0839772081127067;  // std dev = 0,000340, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.193389692685778;  // std dev = 2,253, 155,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=129 */
%   | | | else return -0.0761064963308313;  // std dev = 0,033, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( actor(A), director(B) )
%   | | | then return 0.16457142640071437;  // std dev = 2,682, 75,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=49 */
%   | | | else return -0.08563043540470029;  // std dev = 0,046, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.2820479607280759;  // std dev = 0,372, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.2549251307385446;  // std dev = 0,683, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( actor(A) )
%   | | | then return -0.0834219541721507;  // std dev = 2,58e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.08322098184743638;  // std dev = 0,000889, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return -0.20122105041732624;  // std dev = 0,511, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.20706189873815603;  // std dev = 0,465, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( actor(B) )
%   | | | then return -0.07757737108223257;  // std dev = 0,001, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | | | else return -0.0783606655415631;  // std dev = 0,004, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return -0.07335492241847447;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.19314165011435694;  // std dev = 0,029, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.12428478269563659;  // std dev = 0,452, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, A), movie(J, B) )
%   | | | then return -0.07696951969853606;  // std dev = 6,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07234894998067193;  // std dev = 0,000308, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( actor(B) )
%   | | | then return -0.07343896128780386;  // std dev = 0,032, 217,000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | | | else return 0.11910180578228668;  // std dev = 2,150, 73,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.20312261391428868;  // std dev = 0,353, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.18255036170583755;  // std dev = 0,627, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( actor(B) )
%   | | | then return -0.07205020053902449;  // std dev = 0,002, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.08620682716729129;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06740632432783583;  // std dev = 2,98e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | | else return -0.06754564473519367;  // std dev = 0,000817, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( actor(A) )
%   | | | then return -0.19539771763093547;  // std dev = 0,638, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.06677424465178838;  // std dev = 0,004, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.1724501374974915;  // std dev = 0,311, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.15756794168967797;  // std dev = 0,577, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( actor(B) )
%   | | | then return -0.06739652547724953;  // std dev = 0,002, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.07965368641406595;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06329055230353851;  // std dev = 5,96e-08, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | | else return -0.06341385700330833;  // std dev = 0,000901, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( actor(A) )
%   | | | then return -0.17055814554271426;  // std dev = 0,548, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.0624477181122413;  // std dev = 0,004, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067083
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.076 seconds
Total inference time: 3.056 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: transfer, Time: 00:15:48
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'Mapping results': {'Knowledge compiling time': 0.6213278770446777, 'Total time': 3.171710252761841, 'Generating mappings time': 0.06140613555908203, 'Generating paths time': 2.460426092147827, 'Possible mappings': 126, 'Finding best mapping': 0.028543710708618164}, 'CLL': -0.067083, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 3.056, 'Learning time': 9.376999999999999, 'Parameter Learning results': {'Recall': 0.95098, 'AUC PR': 0.348021, 'F1': 0.525034, 'CLL': -0.224599, 'AUC ROC': 0.961324, 'Precision': [0.362617, 0.5], 'Inference time': 3.011, 'Learning time': 3.301}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.14185106490048827;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.12544463852839186;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.11231637819360686;  // std dev = 0,000, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 3,94e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.10159632948783645;  // std dev = 0,000, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.09269127618926065;  // std dev = 2,11e-08, 279,000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0851847513883968;  // std dev = 1,97e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.08518475138839678;  // std dev = 8,43e-08, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07877675473109144;  // std dev = 5,37e-08, 298,000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07324622576333688;  // std dev = 1,11e-07, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 1,97e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.06842697784420283;  // std dev = 0,000, 306,000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06419184008202623;  // std dev = 0,000, 302,000 (wgt'ed) examples reached here.  /* #neg=302 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.516 seconds
Total inference time: 1.811 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: scratch, Time: 00:15:54
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'CLL': -0.063555, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.811, 'Learning time': 3.516}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.4901418685913086
   Generating paths time   = 2.503671884536743
   Generating mappings time   = 0.05968284606933594
   Possible mappings   = 126
   Finding best mapping   = 0.028237342834472656
   Total time   = 3.081740140914917


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'author(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,false;genre(B, H).;true;false
0;false;genre(A, D).;true;true
0;false,false,true;movie(J, I), movie(J, A).;false;false
0;false,true;genre(B, F).;false;true
0;false,true,false;movie(G, E), movie(G, B).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;true,true;movie(F, E), movie(F, A).;true;true
1;false,false;genre(A, J).;false;false
1;false;genre(B, H).;false;true
1;true,true,false;genre(B, D).;false;false
1;true,true,true;movie(G, B).;false;false
1;true;genre(A, D).;true;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;true,true;movie(G, E), movie(G, A).;false;false
2;true,false,true;movie(J, I), movie(J, B).;false;false
2;false;genre(B, K).;true;false
2;false,true;movie(M, L), movie(M, A).;false;false
2;true;genre(A, D).;true;true
2;true,false;genre(B, H).;true;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false;genre(A, D).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, B).;false;false
4;false,false;genre(A, H).;true;false
4;false;genre(B, D).;true;true
4;false,true;movie(F, E), movie(F, A).;true;false
4;false,false,true;movie(J, I), movie(J, B).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false,false,true;movie(I, H), movie(I, A).;false;false
5;false,true;genre(B, F).;false;false
5;false;genre(A, D).;true;true
5;false,false;genre(B, G).;true;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;true,true;movie(F, E), movie(F, B).;true;false
7;false,true;genre(A, J).;false;false
7;false;genre(B, H).;true;true
7;true,true,true;movie(G, A).;false;false
7;true;genre(B, D).;true;false
7;false,false;genre(A, K).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
9;true,true;movie(F, E), movie(F, A).;true;false
9;true,true,true;movie(G, B).;false;false
9;true;genre(A, D).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, G), movie(F, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H) )
%   | | then if ( movie(I, J), movie(I, A) )
%   | | | then return 0.7405018762759829;  // std dev = 2,301, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048766;  // std dev = 6,50e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then return 0.6425946244130867;  // std dev = 2,121, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | else if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1254446385283915;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G) )
%   | then if ( movie(H, I), movie(H, A) )
%   | | then return 0.45179865130435287;  // std dev = 2,606, 53,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360624;  // std dev = 6,14e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.08559429166774019;  // std dev = 3,398, 136,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.36991402855486055;  // std dev = 2,121, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H) )
%   | | then if ( movie(I, J), movie(I, B) )
%   | | | then return -0.09269127618926097;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10967962145493339;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(G, H), movie(G, A) )
%   | | | then return 0.2797985245206266;  // std dev = 2,121, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09941895137463436;  // std dev = 5,58e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.033338802973045686;  // std dev = 2,704, 124,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(B, D) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H) )
%   | then if ( genre(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.20926861741037606;  // std dev = 2,121, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | else if ( genre(A, J) )
%   | | then return -0.08123041392470193;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09365709246475794;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.011152041883398797;  // std dev = 2,442, 138,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.002857666076669541;  // std dev = 2,553, 141,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */


Results
   AUC ROC   = 0.890408
   AUC PR    = 0.236112
   CLL	      = -0.179041
   Precision = 0.27175 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.408824


Total learning time: 1.822 seconds
Total inference time: 3.115 seconds
AUC ROC: 0.890408


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H)', 'false': 'genre(A, D)', 'false,true': 'genre(B, E)', 'false,true,false': 'movie(F, G), movie(F, B)', 'false,false,true': 'movie(I, J), movie(I, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [2.301, 6, 45], 'false,false,false': [6.5e-08, 64, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 9, 0], 'true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(A, E)', 'false': 'genre(B, D)'}, {'false,false,true': [0.0, 6, 0], 'false,true': [2.121, 5, 45], 'true': [0.0, 0, 0], 'false,false,false': [0.0, 75, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(E, F), movie(E, A)', 'false,true': 'movie(H, I), movie(H, A)', 'true': 'genre(A, D)', 'false': 'genre(B, G)'}, {'false,true,true': [2.606, 8, 45], 'false,false': [6.14e-08, 76, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D)'}, {'false,true': [0.0, 8, 0], 'true': [0.0, 0, 0], 'false,false': [3.398, 91, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,false': 'genre(A, H)', 'false': 'genre(B, D)', 'false,true': 'movie(E, F), movie(E, A)', 'false,false,true': 'movie(I, J), movie(I, B)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [5.27e-09, 11, 0], 'false,false,false': [0.0, 77, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [2.63e-09, 3, 0], 'false,true,true,true': [2.121, 5, 45], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(B, E)', 'false,false': 'genre(B, F)', 'false,false,true': 'movie(G, H), movie(G, A)', 'false': 'genre(A, D)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [2.121, 5, 45], 'false,false,false': [5.58e-08, 83, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 1, 0], 'false,true,false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 1, 0], 'false': [2.704, 79, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(E, F), movie(E, B)', 'false,true': 'genre(A, I)', 'false': 'genre(B, H)', 'true,true,true': 'movie(G, A)', 'true': 'genre(B, D)', 'false,false': 'genre(A, J)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 5, 0], 'false,false,false': [0.0, 71, 0], 'true,true,false': [0.0, 0, 0], 'false,true,false': [2.121, 5, 45], 'true,true,true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 2, 0], 'false': [2.442, 93, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(E, F), movie(E, A)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'false': [2.553, 96, 45], 'true,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.23120447450572396], 'false,false': [0.10380622837370317, 6.591949208711867e-17], 'false': [-9.25185853854297e-18, 0.23818525519848852], 'false,true': [nan, -9.25185853854297e-18], 'false,true,false': [-9.25185853854297e-18, nan], 'false,false,true': [0.10380622837370317, nan]}, {'': [nan, 0.17356397955537292], 'false,false': [-2.3129646346357427e-18, -2.6645352591003756e-17], 'false': [0.09000000000000007, -2.1930331350620375e-17]}, {'': [0.0, 0.1296820985865284], 'true,true': [0.0, nan], 'false,true': [0.12815948736205066, nan], 'false': [0.12815948736205066, 4.966787215428332e-17], 'true': [0.0, nan]}, {'': [nan, 0.08204146592252143], 'false': [-5.204170427930421e-18, 0.08492074958127636]}, {'': [2.3129646346357427e-18, 0.08530168194806699], 'false,true,true': [0.0899999999999996, nan], 'false,false': [2.523234146875356e-18, -2.3069569342860397e-17], 'false': [0.0899999999999996, 3.1566048813436165e-05], 'false,true': [0.0899999999999996, nan], 'false,false,true': [2.523234146875356e-18, nan]}, {'': [0.0, 0.06462019574190245], 'false,true': [nan, 1.734723475976807e-18], 'false,false': [0.08999999999999975, 3.7453306854824555e-17], 'false': [1.734723475976807e-18, 0.06757275483075068], 'false,false,true': [0.08999999999999975, nan]}, {'': [0.0, 0.05894531480876834]}, {'': [0.0, 0.05756578426424118], 'true,true': [0.0, nan], 'false,false': [0.0, -1.407324960792452e-17], 'false': [0.0899999999999998, 9.490985203573119e-06], 'true,true,true': [0.0, nan], 'false,true': [nan, 0.0899999999999998], 'true': [0.0, nan]}, {'': [0.0, 0.04322943616228944]}, {'': [0.0, 0.04623447306052449], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '0;false,false;genre(B, H).;true;true', '0;false;genre(A, D).;true;true', '1;;workedunder(A, B) :- genre(B, D).;true;true', '1;false;genre(A, E).;true;true', '2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '2;false;genre(B, G).;true;true', '3;;workedunder(A, B) :- genre(A, D).;true;true', '4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '4;false,false;genre(A, H).;true;true', '4;false;genre(B, D).;true;true', '5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '5;false,false;genre(B, F).;true;true', '5;false;genre(A, D).;true;true', '6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;false,false;genre(A, J).;true;true', '7;false;genre(B, H).;true;true', '8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048766;  // std dev = 7,30e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6725335205032132;  // std dev = 0,194, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5669253554446922;  // std dev = 1,33e-07, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.2248035655737233;  // std dev = 0,009, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11231637819360632;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( female(B) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.125151883513434;  // std dev = 0,105, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12122595784250106;  // std dev = 0,108, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.426142377540327;  // std dev = 8,43e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.1833039769254183;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.2803388677978121;  // std dev = 0,134, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.31273900296102775;  // std dev = 0,081, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else if ( genre(A, E) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09105357872749974;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.19932100398739871;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08369279177447302;  // std dev = 0,000246, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2620951697180287;  // std dev = 0,003, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.20415594742043572;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.16940296081233264;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07877675473109175;  // std dev = 2,11e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.07789050168611794;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.21463628079537217;  // std dev = 0,000409, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.17272890238101435;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14688210811985078;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.18066653931386073;  // std dev = 0,000360, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14942254201479246;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return -0.07238937691387569;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07247164032167237;  // std dev = 0,000964, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12897237025876726;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.15600753942747278;  // std dev = 1,29e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.15526532170723892;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.13168640295671394;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420267;  // std dev = 3,07e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.06724560791911322;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06774855419850558;  // std dev = 0,000906, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06345330432244721;  // std dev = 0,001, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06359294154925503;  // std dev = 0,000854, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13654980885910173;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.1359724335640724;  // std dev = 2,11e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.11734508231590668;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.999357
   AUC PR    = 0.977788
   CLL	      = -0.075182
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total learning time: 2.7 seconds
Total inference time: 2.5 seconds
AUC ROC: 0.999357


Refined model AUC ROC: 0.999357


Dataset: cora->imdb(workedunder), Fold: 4, Type: transfer, Time: 00:16:08
{'Recall': 0.824926, 'AUC PR': 0.977788, 'F1': 0.904065, 'Mapping results': {'Knowledge compiling time': 0.4901418685913086, 'Total time': 3.081740140914917, 'Generating mappings time': 0.05968284606933594, 'Generating paths time': 2.503671884536743, 'Possible mappings': 126, 'Finding best mapping': 0.028237342834472656}, 'CLL': -0.075182, 'AUC ROC': 0.999357, 'Precision': [1.0, 0.5], 'Inference time': 2.5, 'Learning time': 4.522, 'Parameter Learning results': {'Recall': 0.824926, 'AUC PR': 0.236112, 'F1': 0.408824, 'CLL': -0.179041, 'AUC ROC': 0.890408, 'Precision': [0.27175, 0.5], 'Inference time': 3.115, 'Learning time': 1.822}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283914;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 6,14e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878362;  // std dev = 5,37e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926107;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08730749427055398;  // std dev = 0,148, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07862284288270958;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.07311257547461192;  // std dev = 1,04e-05, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08621393187196422;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06830986969705151;  // std dev = 1,37e-05, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07965977724867425;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06408860322117385;  // std dev = 9,18e-06, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066759
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.211 seconds
Total inference time: 2.355 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 4, Type: scratch, Time: 00:16:12
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'CLL': -0.066759, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.355, 'Learning time': 2.211}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.6115539073944092
   Generating paths time   = 2.466907024383545
   Generating mappings time   = 0.05909895896911621
   Possible mappings   = 126
   Finding best mapping   = 0.028699636459350586
   Total time   = 3.1662657260894775


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,false;genre(B, H), genre(I, H).;true;false
0;false;genre(A, D), genre(E, D).;true;true
0;false,false,true;movie(J, I), movie(J, A).;false;false
0;false,true;genre(E, F), genre(B, F).;false;true
0;false,true,false;movie(G, E), movie(G, B).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;true,true;movie(F, E), movie(F, A).;true;true
1;false,false;genre(A, J), genre(K, J).;false;false
1;false;genre(B, H), genre(I, H).;false;true
1;true,true,false;genre(B, D).;false;false
1;true,true,true;movie(G, B).;false;false
1;true;genre(A, D), genre(E, D).;true;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;true,true;genre(F, C).;false;true
2;true,false,true;movie(J, I), movie(J, B).;false;false
2;false;genre(B, K), genre(L, K).;true;false
2;true,true,false;movie(G, E), movie(G, A).;false;false
2;false,true;movie(M, L), movie(M, A).;false;false
2;true;genre(A, D), genre(E, D).;true;true
2;true,false;genre(B, H), genre(I, H).;true;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false;genre(A, D), genre(E, D).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, B).;false;false
4;false,false;genre(A, H), genre(I, H).;true;false
4;false;genre(B, D), genre(E, D).;true;true
4;false,true;movie(F, E), movie(F, A).;true;false
4;false,false,true;movie(J, I), movie(J, B).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false,false,true;movie(I, H), movie(I, A).;false;false
5;false,true;genre(E, F), genre(B, F).;false;false
5;false;genre(A, D), genre(E, D).;true;true
5;false,false;genre(B, G), genre(H, G).;true;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;true,true;movie(F, E), movie(F, B).;true;false
7;false,true;genre(I, J), genre(A, J).;false;false
7;false;genre(B, H), genre(I, H).;true;true
7;true,true,true;movie(G, A).;false;false
7;true;genre(B, D), genre(E, D).;true;false
7;false,false;genre(A, K), genre(L, K).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
9;true,true;movie(F, E), movie(F, A).;true;true
9;true,true,true;movie(G, B).;false;false
9;true;genre(A, D), genre(E, D).;true;false
9;true,true,false;genre(H, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.8040948810454575;  // std dev = 1,375, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.034324183180057574;  // std dev = 2,987, 93,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then return 0.6796553153518552;  // std dev = 1,291, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | else if ( genre(A, F), genre(G, F) )
%   | | then return -0.13013218892041895;  // std dev = 0,020, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.03246078740187533;  // std dev = 2,991, 95,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( genre(F, C) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), genre(H, G) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return 0.5784100296560556;  // std dev = 5,96e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.2459473536855095;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.03472299323871873;  // std dev = 3,000, 102,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.11424505584629177;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.07742348582371898;  // std dev = 3,946, 139,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.4159106019694417;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.2160443816179614;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, B) )
%   | | | then return -0.0978847689327167;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.11114482459042686;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.025308125771072054;  // std dev = 2,977, 88,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10062991236257302;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, G), genre(H, G) )
%   | | then if ( movie(I, H), movie(I, A) )
%   | | | then return 0.24067792935288831;  // std dev = 1,662, 38,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.04503513714812243;  // std dev = 3,015, 110,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.03712848238007502;  // std dev = 3,469, 140,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H), genre(I, H) )
%   | then if ( genre(I, J), genre(A, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2624446902640532;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( genre(A, K), genre(L, K) )
%   | | then return -0.08452950410768152;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.038864309880684456;  // std dev = 3,006, 104,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.02148759175419542;  // std dev = 3,443, 138,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.023973886015694487;  // std dev = 3,350, 137,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */


Results
   AUC ROC   = 0.911381
   AUC PR    = 0.312834
   CLL	      = -0.212649
   Precision = 0.354244 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.50087


Total learning time: 1.43 seconds
Total inference time: 3.384 seconds
AUC ROC: 0.911381


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [1.375, 2, 35], 'false,false,false': [2.987, 83, 10], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(A, F), genre(G, F)', 'false': 'genre(B, D), genre(E, D)'}, {'false,false,true': [0.02, 7, 0], 'false,true': [1.291, 2, 35], 'true': [0.0, 0, 0], 'false,false,false': [2.991, 85, 10]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'genre(F, C)', 'false,true': 'movie(I, H), movie(I, A)', 'true': 'genre(A, D), genre(E, D)', 'false': 'genre(B, G), genre(H, G)'}, {'false,true,true': [5.96e-08, 0, 35], 'false,false': [3.0, 92, 10], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true': [0.016, 5, 0], 'true': [0.0, 0, 0], 'false,false': [3.946, 94, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,false': 'genre(A, H), genre(I, H)', 'false': 'genre(B, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, A)', 'false,false,true': 'movie(J, I), movie(J, B)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 2, 0], 'false,false,false': [2.977, 78, 10], 'false,false,true,false': [0.0, 1, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 35], 'false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(B, F)', 'false,false': 'genre(B, G), genre(H, G)', 'false,false,true': 'movie(I, H), movie(I, A)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [1.662, 3, 35], 'false,false,false': [3.015, 100, 10], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [3.469, 95, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, B)', 'false,true': 'genre(I, J), genre(A, J)', 'false': 'genre(B, H), genre(I, H)', 'true,true,true': 'movie(G, A)', 'true': 'genre(B, D), genre(E, D)', 'false,false': 'genre(A, K), genre(L, K)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false': [3.006, 94, 10], 'true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 35], 'true,true,true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [3.443, 93, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [3.35, 92, 45]}]]
[{'': [nan, 0.22551133383835537], 'false,false': [0.051132213294377164, 0.09596485142791049], 'false': [0.0, 0.2263313609467465], 'false,true': [nan, 0.0], 'false,true,false': [0.0, nan], 'false,false,true': [0.051132213294377164, nan]}, {'': [nan, 0.17773218860274856], 'false,false': [5.493282169448983e-05, 0.09418282548476493], 'false': [0.045022741076145484, 0.08833282422728454]}, {'': [0.0, 0.13716992327114158], 'true,true': [0.0, nan], 'false,true': [1.0150610510858574e-16, 0.0], 'false': [0.01835245242395178, 0.08822469632643287], 'true': [0.0, nan]}, {'': [nan, 0.1093663780250091], 'false': [5.043111441978276e-05, 0.11202302196080137]}, {'': [nan, 0.1097628846243311], 'false,true,true': [-5.075305255429287e-17, nan], 'false,false': [3.9073128010126225e-05, 0.10072314049586756], 'false': [0.020420523805454192, 0.0975928868900434], 'false,true': [-5.075305255429287e-17, 0.0], 'false,false,true': [0.0, 0.0]}, {'': [nan, 0.09514184963766617], 'false,true': [nan, 0.0], 'false,false': [0.07271468144044323, 0.08264462809917339], 'false': [0.0, 0.09567309585006067], 'false,false,true': [0.07271468144044323, nan]}, {'': [nan, 0.08596705194227819]}, {'': [0.0, 0.08164695251090638], 'true,true': [0.0, nan], 'false,false': [0.0, 0.08690828402366836], 'false': [-2.5376526277146434e-17, 0.08610025703171816], 'false,true': [nan, -2.5376526277146434e-17], 'true,true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [nan, 0.08589466390389036]}, {'': [nan, 0.08192871800739947]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '1;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '1;false;genre(A, F), genre(G, F).;true;true', '2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '2;false,true;movie(I, H), movie(I, A).;true;true', '2;false;genre(B, G), genre(H, G).;true;true', '3;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '4;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '4;false,true;movie(J, I), movie(J, B).;true;true', '4;true;movie(F, E), movie(F, A).;true;true', '4;false;genre(A, H), genre(I, H).;true;true', '5;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;false,false;genre(A, K), genre(L, K).;true;true', '7;false;genre(B, H), genre(I, H).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, F), genre(G, F) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then return -0.1254446385283916;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( female(A) )
%   | | | then return 0.7194734122109545;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5504898020630853;  // std dev = 0,756, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( female(A) )
%   | | | then return 0.5182729470274017;  // std dev = 0,649, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.5202252359599745;  // std dev = 0,650, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360622;  // std dev = 6,83e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.5718640030946617;  // std dev = 0,064, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.2275182985526726;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.10159632948783619;  // std dev = 5,58e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4271572388983927;  // std dev = 0,065, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1719381216582558;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then if ( female(A) )
%   | | then return 0.3001395606559893;  // std dev = 0,110, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.32629184050903454;  // std dev = 2,98e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.09628218744889808;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, F), genre(G, F) )
%   | then if ( movie(H, G), movie(H, B) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( female(A) )
%   | | | then return 0.31504371984005924;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.25348003785394274;  // std dev = 0,443, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,83e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.0851847513883968;  // std dev = 1,83e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2609872844187625;  // std dev = 0,028, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.2659080082373107;  // std dev = 0,069, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( female(A) )
%   | | | then return -0.20069671609124642;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1712867840704241;  // std dev = 0,096, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.21386411338989741;  // std dev = 0,005, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.2173605665001207;  // std dev = 0,013, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.1499037812555853;  // std dev = 0,087, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.19152958082000637;  // std dev = 0,618, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08842059500490235;  // std dev = 0,043, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( female(A) )
%   | | then return 0.14818244689146198;  // std dev = 0,101, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else return 0.17732671869616645;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( genre(A, F), genre(G, F) )
%   | | then if ( movie(H, A), movie(H, B) )
%   | | | then return -0.06595117481414016;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07259427832889627;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(B) )
%   | | | then return -0.07322929206374118;  // std dev = 0,000910, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return 0.1863406326688351;  // std dev = 0,053, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then return -0.06842805728614165;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return -0.06425977469323596;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then return 0.13494466318659076;  // std dev = 0,080, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.15745768325506038;  // std dev = 0,010, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419279247364627;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06419279247364627;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.06419279247364623;  // std dev = 1,32e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.06203916033806156;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then return 0.12731149386427362;  // std dev = 0,065, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.13768877482555616;  // std dev = 0,009, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084608
   Precision = 0.873057 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932227


Total learning time: 2.975 seconds
Total inference time: 2.892 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 5, Type: transfer, Time: 00:16:27
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 0.932227, 'Mapping results': {'Knowledge compiling time': 0.6115539073944092, 'Total time': 3.1662657260894775, 'Generating mappings time': 0.05909895896911621, 'Generating paths time': 2.466907024383545, 'Possible mappings': 126, 'Finding best mapping': 0.028699636459350586}, 'CLL': -0.084608, 'AUC ROC': 1.0, 'Precision': [0.873057, 0.5], 'Inference time': 2.892, 'Learning time': 4.405, 'Parameter Learning results': {'Recall': 0.854599, 'AUC PR': 0.312834, 'F1': 0.50087, 'CLL': -0.212649, 'AUC ROC': 0.911381, 'Precision': [0.354244, 0.5], 'Inference time': 3.384, 'Learning time': 1.43}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( female(A) )
%   | then return 0.6842684934301482;  // std dev = 0,169, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.6827378447875044;  // std dev = 0,172, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5640419417450248;  // std dev = 6,66e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5302641642534084;  // std dev = 0,160, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.11362734453116177;  // std dev = 0,108, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10147673415180296;  // std dev = 2,36e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( female(A) )
%   | then return 0.4239792008438947;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.399664913654576;  // std dev = 0,155, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09259113096829727;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3315594960550548;  // std dev = 0,044, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.4257269569650121;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08509975249180199;  // std dev = 3,94e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( female(A) )
%   | then return 0.23235341138550245;  // std dev = 0,118, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.24289957682784705;  // std dev = 0,120, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.19005856422692113;  // std dev = 0,120, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.1975086538861957;  // std dev = 0,122, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( actor(A) )
%   | then return -0.07870376280589504;  // std dev = 3,49e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return -0.1921575597523551;  // std dev = 0,507, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.13540516750325338;  // std dev = 0,167, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.19111466461479235;  // std dev = 2,79e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.07418647575415233;  // std dev = 0,134, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.16428517943520543;  // std dev = 0,006, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then return -0.06830764957564603;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.23528261534444742;  // std dev = 0,426, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), director(B) )
%   | then return -0.46743911881103134;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07034854819068284;  // std dev = 0,125, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06311128448957333;  // std dev = 0,027, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1429541170735475;  // std dev = 0,006, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.3556390593497453;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.092779
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.585 seconds
Total inference time: 2.422 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 5, Type: scratch, Time: 00:16:32
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 0.852086, 'CLL': -0.092779, 'AUC ROC': 1.0, 'Precision': [0.742291, 0.5], 'Inference time': 2.422, 'Learning time': 2.585}


Starting experiment #2 for cora->imdb(workedunder)

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.25953057897374937;  // std dev = 0,490, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.048022352821031365;  // std dev = 0,392, 79,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.049929757017320595;  // std dev = 3,364, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else return 0.031724064633188706;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7818662881957746;  // std dev = 1,384, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return -0.17646704513755837;  // std dev = 3,94e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.4901996215291083;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | | else return 0.07605820738769364;  // std dev = 4,323, 99,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | else return 0.2239972613047086;  // std dev = 0,490, 6.892,000 (wgt'ed) examples reached here.  /* #neg=4.132 #pos=2.760 */
%   else return 0.03309496592989262;  // std dev = 0,383, 946,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=170 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18966610878381032;  // std dev = 0,489, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.14819939153604897;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1982155470552361;  // std dev = 1,601, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.049471101982846793;  // std dev = 3,442, 74,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.12340341916591435;  // std dev = 1,356, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.03976568456545785;  // std dev = 3,364, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else return 0.023649053568477806;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15631098081118466;  // std dev = 0,489, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4226555906075848;  // std dev = 1,159, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1385947788190057;  // std dev = 0,028, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.033857352634586495;  // std dev = 0,391, 79,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.10385118886211535;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.03302360107214334;  // std dev = 3,364, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else return 0.02061000473620393;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1262776720794355;  // std dev = 0,489, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.3366747046863217;  // std dev = 1,159, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.12287681451655279;  // std dev = 0,025, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.13785456520826622;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04064596442223361;  // std dev = 3,453, 74,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | else return 0.01963664178180955;  // std dev = 0,381, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10041443300380058;  // std dev = 0,489, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.1168288889713851;  // std dev = 0,030, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.14962604351228626;  // std dev = 1,606, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.03371221876951387;  // std dev = 3,413, 74,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | else return 0.016357499275085747;  // std dev = 0,380, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), venue(E, B) )
%   | | then return 0.5605162498860713;  // std dev = 0,063, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2808965033783359;  // std dev = 0,470, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | else return 0.0778660269968408;  // std dev = 0,489, 7.064,000 (wgt'ed) examples reached here.  /* #neg=4.238 #pos=2.826 */
%   else return 0.015820559936422153;  // std dev = 0,382, 946,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=170 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06141218516818586;  // std dev = 0,489, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.10681668809901938;  // std dev = 0,028, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.08288840048791403;  // std dev = 1,308, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.030217592509153623;  // std dev = 3,448, 74,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.05428651326731062;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.01889497036168587;  // std dev = 3,364, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else return 0.010988548277055954;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04751445285638119;  // std dev = 0,489, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4163034265220584;  // std dev = 1,165, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.23020445446360496;  // std dev = 0,141, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.01613727835807561;  // std dev = 0,385, 79,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | else return 0.010095191979951545;  // std dev = 0,380, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0365883583016706;  // std dev = 0,489, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.3305730931618412;  // std dev = 1,167, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.19256513059373992;  // std dev = 0,121, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return -0.09754578996136606;  // std dev = 0,025, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.021353310104771497;  // std dev = 3,409, 74,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.030018843182780853;  // std dev = 0,647, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.017691721023227025;  // std dev = 3,505, 77,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=16 */
%   | | else return 0.008097491273759607;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */


Predicates from source: ['samevenue(venue,venue).', 'haswordauthor(author,word).', 'samebib(class,class).', 'haswordvenue(venue,word).', 'author(class,author).', 'venue(class,venue).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.49122071266174316
   Generating paths time   = 2.4827823638916016
   Generating mappings time   = 0.05881237983703613
   Possible mappings   = 126
   Finding best mapping   = 0.027894973754882812
   Total time   = 3.0607168674468994


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,true,true;movie(G, A).;false;false
0;false,false;genre(B, H), genre(I, H).;true;false
0;false;genre(A, D), genre(E, D).;true;true
0;false,true;movie(F, E), movie(F, B).;true;false
0;false,false,true;movie(J, I), movie(J, A).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
1;true,true;movie(F, E), movie(F, A).;true;true
1;true,true,true;movie(G, B).;false;false
1;true;genre(A, D), genre(E, D).;true;false
1;true,true,false;genre(H, C).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
2;false,false;genre(A, H), genre(I, H).;true;false
2;false;genre(B, D), genre(E, D).;true;true
2;false,false,true;movie(J, I), movie(J, B).;false;false
2;false,true;genre(E, F), genre(A, F).;false;true
2;false,true,false;movie(G, E), movie(G, A).;false;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false,true,true;movie(G, A).;false;false
3;false,false;genre(B, H), genre(I, H).;true;false
3;false;genre(A, D), genre(E, D).;true;true
3;false,true;movie(F, E), movie(F, B).;true;false
3;false,false,true;movie(J, I), movie(J, A).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, A).;false;false
4;false,true;movie(F, E), movie(F, B).;true;true
4;false;genre(A, D), genre(E, D).;true;false
4;false,true,false;genre(E, H), genre(B, H).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false,true;genre(E, F), genre(A, F).;false;true
5;false;genre(B, D), genre(E, D).;true;false
5;false,true,false;movie(G, E), movie(G, A).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
6;true,true;movie(E, D), movie(E, B).;false;false
6;true;genre(D, C).;true;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
7;false,false;genre(B, H), genre(I, H).;true;false
7;false;genre(A, D), genre(E, D).;true;true
7;false,false,true;movie(J, I), movie(J, A).;false;false
7;false,true;genre(E, F), genre(B, F).;false;true
7;false,true,false;movie(G, E), movie(G, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
8;false,true,true;movie(G, B).;false;false
8;false,true;movie(F, E), movie(F, A).;true;false
8;false;genre(B, D), genre(E, D).;true;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
9;false,true,true;movie(G, B).;false;false
9;false,false;genre(A, I), genre(J, I).;true;false
9;false;genre(B, D), genre(E, D).;true;true
9;false,false,true;movie(K, J), movie(K, A).;false;false
9;false,true;movie(F, E), movie(F, A).;true;true
9;false,true,false;genre(E, H), genre(A, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.8073014774723939;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048763;  // std dev = 8,43e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.15868020673354152;  // std dev = 5,246, 167,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.6627211519457689;  // std dev = 1,390, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, B) )
%   | | | then return -0.14391203877993947;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1439120387799395;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.1270738110028293;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.49187242459555425;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12707381100282913;  // std dev = 4,47e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.11363304240824115;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.0686422963972436;  // std dev = 3,336, 159,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.3863618124239153;  // std dev = 0,991, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11948111530842435;  // std dev = 0,046, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.01879437331802897;  // std dev = 2,941, 169,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.09376759255431168;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.24456364771929398;  // std dev = 1,932, 60,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1104452480395645;  // std dev = 6,66e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.15024396603579246;  // std dev = 2,494, 63,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0985831433740592;  // std dev = 0,042, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.19892262283487544;  // std dev = 1,390, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return -0.07865037159709501;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09151881941869554;  // std dev = 5,67e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */


Results
   AUC ROC   = 0.888593
   AUC PR    = 0.316701
   CLL	      = -0.168266
   Precision = 0.372905 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.512476


Total learning time: 1.876 seconds
Total inference time: 2.617 seconds
AUC ROC: 0.888593


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [1.687, 3, 56], 'false,false,false': [8.43e-08, 107, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 7, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'false': [5.246, 111, 56], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(A, H), genre(I, H)', 'false': 'genre(B, D), genre(E, D)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'movie(G, E), movie(G, A)', 'false,false,true': 'movie(J, I), movie(J, B)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 12, 0], 'false,false,false': [0.0, 106, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [1.39, 2, 56], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [1.687, 3, 56], 'false,false,false': [4.47e-08, 96, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 6, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true,true,true': [0.0, 4, 0], 'false,false': [3.336, 103, 56], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,true,false': 'movie(G, E), movie(G, A)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [0.991, 1, 56], 'false,false': [0.046, 101, 0], 'true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [2.941, 113, 56]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [1.932, 4, 56], 'false,false,false': [6.66e-08, 104, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [3.73e-09, 6, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [2.494, 7, 56], 'false,false': [0.042, 95, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,false': 'genre(A, H), genre(I, H)', 'false': 'genre(B, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, A)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [2.63e-09, 5, 0], 'false,false,false': [5.67e-08, 92, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [1.39, 2, 56], 'false,true,false': [0.0, 0, 0]}]]
[{'': [nan, 0.2189181061846373], 'false,true,true': [-7.93016446160826e-18, nan], 'false,false': [0.04826199367997677, 6.640586315514955e-17], 'false': [-7.93016446160826e-18, 0.22354478153578197], 'false,true': [-7.93016446160826e-18, nan], 'false,false,true': [0.04826199367997677, nan]}, {'': [0.0, 0.1648219697461845], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [nan, 0.15473138208111348], 'false,false': [-1.1564823173178714e-17, -2.51371250858526e-17], 'false': [0.03329369797859835, -1.129040364025583e-17], 'false,false,true': [-1.1564823173178714e-17, nan], 'false,true': [nan, 0.03329369797859835], 'false,true,false': [0.03329369797859835, nan]}, {'': [nan, 0.10662794773738211], 'false,true,true': [-6.938893903907228e-18, nan], 'false,false': [0.04826199367997671, 2.0816681711721685e-17], 'false': [-6.938893903907228e-18, 0.10868690342856319], 'false,true': [-6.938893903907228e-18, nan], 'false,false,true': [0.04826199367997671, nan]}, {'': [nan, 0.06907847503101505], 'false,true,true': [0.0, nan], 'false,true': [0.0, nan], 'false': [0.0, 0.07000097807802318]}, {'': [0.0, 0.06523985642219726], 'false,true': [nan, 0.017236072637734898], 'false': [0.017236072637734898, 2.1019409624068995e-05], 'false,true,false': [0.017236072637734898, nan]}, {'': [nan, 0.05117156210746006]}, {'': [nan, 0.050604987233178175], 'false,false': [0.06222222222222226, 4.2700885562506023e-17], 'false': [2.3129646346357427e-18, 0.05200409276213978], 'false,true': [nan, 2.3129646346357427e-18], 'false,true,false': [2.3129646346357427e-18, nan], 'false,false,true': [0.06222222222222226, nan]}, {'': [nan, 0.054235990108516284], 'false,true,true': [0.09876543209876533, nan], 'false,true': [0.09876543209876533, nan], 'false': [0.09876543209876533, 1.834028314296144e-05]}, {'': [nan, 0.03212715640200092], 'false,true,true': [0.03329369797859687, nan], 'false,false': [1.3877787807814458e-18, 3.499616055883646e-17], 'false': [0.03329369797859687, 8.095929078052237e-06], 'false,true': [0.03329369797859687, nan], 'false,false,true': [1.3877787807814458e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '0;false;genre(B, H), genre(I, H).;true;true', '1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '2;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '2;false;genre(A, H), genre(I, H).;true;true', '3;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '3;false;genre(B, H), genre(I, H).;true;true', '4;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '5;false;genre(B, D), genre(E, D).;true;true', '7;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '7;false;genre(B, H), genre(I, H).;true;true', '8;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '9;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '9;false;genre(A, H), genre(I, H).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(B, E), genre(F, E) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048763;  // std dev = 8,69e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11419184395571853;  // std dev = 0,012, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, F), genre(G, F) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.11231637819360621;  // std dev = 7,45e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( female(B) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10455804750984693;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, E), genre(F, E) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1014252751200652;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783638;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.0924424971702477;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.3069365177433994;  // std dev = 0,074, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.24514760401165306;  // std dev = 0,068, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,67e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.0851847513883968;  // std dev = 1,97e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( female(B) )
%   | | | then return -0.08520414031757818;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08497357441948862;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.07869439701667616;  // std dev = 0,000198, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return 0.2097577156325355;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.18959312879824394;  // std dev = 0,092, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.07317477676386822;  // std dev = 0,000185, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, E), genre(F, E) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527747;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.18359480393134361;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.17959431273656803;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.15765581606051438;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.15367986582778556;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.06832094690389195;  // std dev = 0,000151, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.13783014099884114;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(A, E), genre(F, E) )
%   | then return -0.06408461947768689;  // std dev = 0,000150, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */


Results
   AUC ROC   = 0.998736
   AUC PR    = 0.963378
   CLL	      = -0.082187
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total learning time: 2.723 seconds
Total inference time: 2.348 seconds
AUC ROC: 0.998736


Refined model AUC ROC: 0.998736


Dataset: cora->imdb(workedunder), Fold: 1, Type: transfer, Time: 00:33:06
{'Recall': 0.819018, 'AUC PR': 0.963378, 'F1': 0.900506, 'Mapping results': {'Knowledge compiling time': 0.49122071266174316, 'Total time': 3.0607168674468994, 'Generating mappings time': 0.05881237983703613, 'Generating paths time': 2.4827823638916016, 'Possible mappings': 126, 'Finding best mapping': 0.027894973754882812}, 'CLL': -0.082187, 'AUC ROC': 0.998736, 'Precision': [1.0, 0.5], 'Inference time': 2.348, 'Learning time': 4.599, 'Parameter Learning results': {'Recall': 0.819018, 'AUC PR': 0.316701, 'F1': 0.512476, 'CLL': -0.168266, 'AUC ROC': 0.888593, 'Precision': [0.372905, 0.5], 'Inference time': 2.617, 'Learning time': 1.876}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048768;  // std dev = 6,66e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839133;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 9,31e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( female(A) )
%   | then return 0.39897394438523337;  // std dev = 0,096, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4175135841583101;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.092691276189261;  // std dev = 3,65e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32266564472350756;  // std dev = 0,015, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1460670410518497;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5,05e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2565060528356364;  // std dev = 0,013, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1278061720471545;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109161;  // std dev = 5,48e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21070011188095542;  // std dev = 0,012, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11440313914517661;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1777878056829806;  // std dev = 0,010, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10372310565015576;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07352595526119862;  // std dev = 0,031, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06840914871636895;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15326835568158467;  // std dev = 0,009, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09420558422842222;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06417610919559973;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13441655241826594;  // std dev = 0,008, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08632204337437513;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072628
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.426 seconds
Total inference time: 2.32 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 1, Type: scratch, Time: 00:33:12
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'CLL': -0.072628, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.32, 'Learning time': 2.426}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.5045351982116699
   Generating paths time   = 2.5014779567718506
   Generating mappings time   = 0.05941319465637207
   Possible mappings   = 126
   Finding best mapping   = 0.02843928337097168
   Total time   = 3.093872308731079


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,true,true;movie(G, A).;false;false
0;false,false;genre(B, H), genre(I, H).;true;false
0;false;genre(A, D), genre(E, D).;true;true
0;false,true;movie(F, E), movie(F, B).;true;false
0;false,false,true;movie(J, I), movie(J, A).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
1;true,true;movie(F, E), movie(F, A).;true;true
1;true,true,true;movie(G, B).;false;false
1;true;genre(A, D), genre(E, D).;true;false
1;true,true,false;genre(H, C).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
2;false,false;genre(A, H), genre(I, H).;true;false
2;false;genre(B, D), genre(E, D).;true;true
2;false,false,true;movie(J, I), movie(J, B).;false;false
2;false,true;genre(E, F), genre(A, F).;false;true
2;false,true,false;movie(G, E), movie(G, A).;false;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false,true,true;movie(G, A).;false;false
3;false,false;genre(B, H), genre(I, H).;true;false
3;false;genre(A, D), genre(E, D).;true;true
3;false,true;movie(F, E), movie(F, B).;true;false
3;false,false,true;movie(J, I), movie(J, A).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, A).;false;false
4;false,true;movie(F, E), movie(F, B).;true;true
4;false;genre(A, D), genre(E, D).;true;false
4;false,true,false;genre(E, H), genre(B, H).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false,true;genre(E, F), genre(A, F).;false;true
5;false;genre(B, D), genre(E, D).;true;false
5;false,true,false;movie(G, E), movie(G, A).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
6;true,true;movie(E, D), movie(E, B).;false;false
6;true;genre(D, C).;true;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
7;false,false;genre(B, H), genre(I, H).;true;false
7;false;genre(A, D), genre(E, D).;true;true
7;false,false,true;movie(J, I), movie(J, A).;false;false
7;false,true;genre(E, F), genre(B, F).;false;true
7;false,true,false;movie(G, E), movie(G, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
8;false,true,true;movie(G, B).;false;false
8;false,true;movie(F, E), movie(F, A).;true;false
8;false;genre(B, D), genre(E, D).;true;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
9;false,true,true;movie(G, B).;false;false
9;false,false;genre(A, I), genre(J, I).;true;false
9;false;genre(B, D), genre(E, D).;true;true
9;false,false,true;movie(K, J), movie(K, A).;false;false
9;false,true;movie(F, E), movie(F, A).;true;true
9;false,true,false;genre(E, H), genre(A, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.8089686072306601;  // std dev = 1,689, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048763;  // std dev = 8,43e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.14240413281503678;  // std dev = 5,405, 184,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.6510987717921409;  // std dev = 1,689, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | | else return -0.1419184028294864;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, B) )
%   | | | then return -0.1419184028294864;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1419184028294864;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14191840282948617;  // std dev = 6,66e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.12549793682588897;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12549793682588897;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.5158888487966503;  // std dev = 1,390, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | | else return -0.12549793682588897;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12549793682588903;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.1123594994708343;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11235949947083429;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.08050542851324018;  // std dev = 3,293, 158,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.38463572416691305;  // std dev = 0,991, 59,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | | | else return -0.12064271823238916;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11977066093359787;  // std dev = 0,042, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.03586309235020985;  // std dev = 2,833, 159,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.09422287078321566;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.2567182252481137;  // std dev = 1,689, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | | else return -0.11193391884209403;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11202063479134414;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.1897318910124696;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10128101785630757;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10087392560438534;  // std dev = 0,027, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.17079421656979996;  // std dev = 1,689, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09242720586151096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, I), genre(J, I) )
%   | | then if ( movie(K, J), movie(K, A) )
%   | | | then return -0.08002566988910974;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09252728108460134;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */


Results
   AUC ROC   = 0.895764
   AUC PR    = 0.307074
   CLL	      = -0.170311
   Precision = 0.358593 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.498589


Total learning time: 2.166 seconds
Total inference time: 2.946 seconds
AUC ROC: 0.895764


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [1.689, 3, 58], 'false,false,false': [8.43e-08, 107, 0], 'false,false,true,false': [0.0, 5, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [5.405, 126, 58]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(A, H), genre(I, H)', 'false': 'genre(B, D), genre(E, D)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'movie(G, E), movie(G, A)', 'false,false,true': 'movie(J, I), movie(J, B)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 6, 0], 'false,false,false': [6.66e-08, 95, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,false': [0.0, 1, 0], 'false,true,false,true': [1.689, 3, 58], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [1.39, 2, 58], 'false,false,false': [0.0, 108, 0], 'false,false,true,false': [0.0, 1, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 6, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'genre(A, D), genre(E, D)', 'false,true,false': 'genre(E, H), genre(B, H)'}, {'false,false': [3.293, 100, 58], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [0.0, 1, 0], 'false,true,true,true': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,true,false': 'movie(G, E), movie(G, A)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 4, 0], 'false,true,false,true': [0.991, 1, 58], 'false,false': [0.042, 109, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [2.833, 101, 58]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [1.689, 3, 58], 'false,false,false': [0.0, 114, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 4, 0], 'false,true,false,true': [0.0, 7, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [1.934, 4, 58], 'false,false': [0.027, 123, 0], 'true': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,false': 'genre(A, I), genre(J, I)', 'false': 'genre(B, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, H), genre(A, H)', 'false,false,true': 'movie(K, J), movie(K, A)'}, {'false,false,true,true': [0.006, 6, 0], 'false,true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 91, 0], 'false,true,false,false': [0.0, 2, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true,true': [1.689, 3, 58], 'true': [0.0, 0, 0]}]]
[{'': [nan, 0.21775892066786756], 'false,true,true': [0.0, nan], 'false,false': [0.10651974288337872, 6.640586315514955e-17], 'false': [-6.938893903907228e-18, 0.2228607704901603], 'false,true': [0.0, 0.0], 'false,false,true': [0.04676162321956422, -2.7755575615628915e-18]}, {'': [nan, 0.15877603928452705]}, {'': [nan, 0.16430073951011331], 'false,false': [0.0, 4.674623261579606e-17], 'false': [0.05598696920143786, 6.095342095981252e-17], 'false,false,true': [-2.3129646346357427e-18, 0.0], 'false,true': [nan, 0.05598696920143786], 'false,true,false': [0.04676162321956376, 0.0]}, {'': [nan, 0.10247178643903462], 'false,true,true': [0.0, nan], 'false,false': [0.03832731896253769, -1.644774851296528e-17], 'false': [-5.551115123125783e-18, 0.10563842199842609], 'false,true': [0.0, 0.0], 'false,false,true': [0.03222222222222134, 0.0]}, {'': [0.0, 0.06743691139471025], 'false,true,true': [-2.7755575615628915e-18, nan], 'false,true': [-2.7755575615628915e-18, 0.0], 'false': [-4.625929269271485e-18, 0.06863694528438687], 'false,true,false': [nan, 0.0]}, {'': [nan, 0.06306943789254006], 'false,true': [nan, 0.030784704262344722], 'false': [0.030784704262344722, 1.5818065793422966e-05], 'false,true,false': [0.0166618787704677, 0.0]}, {'': [nan, 0.050465601881187136]}, {'': [nan, 0.04515240689432985], 'false,false': [0.05173266520262651, -4.4798472923471226e-17], 'false': [0.0, 0.04648028233025675], 'false,true': [nan, 0.0], 'false,true,false': [0.0, nan], 'false,false,true': [0.046761623219564695, 0.0]}, {'': [0.0, 0.038731736856939175], 'false,true,true': [0.06035379812695114, nan], 'false,true': [0.06035379812695114, 0.0], 'false': [0.06103155434464042, 5.990177021965721e-06]}, {'': [nan, 0.034096168445795765], 'false,true,true': [0.04676162321956455, nan], 'false,false': [7.041016327754418e-06, -4.636096146786368e-17], 'false': [0.047406840799811445, 9.504980947836519e-06], 'false,true': [0.04676162321956455, 0.0], 'false,true,false': [nan, 0.0], 'false,false,true': [7.041016327754418e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '0;false,true;movie(J, I), movie(J, A).;true;true', '0;true;movie(F, E), movie(F, B).;true;true', '0;false;genre(B, H), genre(I, H).;true;true', '2;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '2;false,true;movie(J, I), movie(J, B).;true;true', '2;true;movie(G, E), movie(G, A).;true;true', '2;false;genre(A, H), genre(I, H).;true;true', '3;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '3;false,true;movie(J, I), movie(J, A).;true;true', '3;true;movie(F, E), movie(F, B).;true;true', '3;false;genre(B, H), genre(I, H).;true;true', '4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '4;false,true;movie(F, E), movie(F, B).;true;true', '4;false;genre(A, D), genre(E, D).;true;true', '5;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '5;true;movie(G, E), movie(G, A).;true;true', '7;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '7;false,true;movie(J, I), movie(J, A).;true;true', '7;false;genre(B, H), genre(I, H).;true;true', '8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '8;false,true;movie(F, E), movie(F, A).;true;true', '8;false;genre(B, D), genre(E, D).;true;true', '9;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '9;true;movie(F, E), movie(F, A).;true;true', '9;false;genre(A, I), genre(J, I).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, B) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, F), genre(G, F) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.832507909458486;  // std dev = 0,987, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048763;  // std dev = 8,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( female(A) )
%   | then return 0.6792392193186044;  // std dev = 0,180, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.6989783104778774;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then if ( female(A) )
%   | | then return 0.5652782325614896;  // std dev = 1,05e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5167280038189506;  // std dev = 0,218, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return -0.2239363371226295;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, F), genre(G, F) )
%   | then if ( movie(H, G), movie(H, B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.11231637819360632;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, B) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, F), genre(G, F) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then if ( female(A) )
%   | | | then return 0.3339967015617649;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.3650923564970597;  // std dev = 1,667, 41,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=38 */
%   | | else return -0.18742810089086828;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10159632948783621;  // std dev = 4,21e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10864178703167482;  // std dev = 0,071, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.349476309009508;  // std dev = 0,019, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.551063187188357;  // std dev = 0,437, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926105;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then return 0.2613247749229674;  // std dev = 0,102, 59,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | else return -0.09927552202785193;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839683;  // std dev = 1,49e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.08518475138839691;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.08518475138839683;  // std dev = 2,69e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.0843615513264981;  // std dev = 0,001, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2231394113633743;  // std dev = 7,90e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.22721438593175494;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.07814615988664474;  // std dev = 0,001, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.2547099572552353;  // std dev = 0,406, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.41704396176787073;  // std dev = 0,565, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( female(B) )
%   | then return -0.07297177870771561;  // std dev = 0,001, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07288351501252173;  // std dev = 0,000533, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, E), genre(F, E) )
%   | then if ( movie(G, F), movie(G, A) )
%   | | then if ( female(A) )
%   | | | then return 0.1868508895333174;  // std dev = 1,83e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.15647587273825717;  // std dev = 0,919, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else return -0.06757026863874602;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.2580087824722642;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( female(A) )
%   | | | then return 0.1601039996238392;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.14939099368476758;  // std dev = 0,674, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.062055147737217806;  // std dev = 0,006, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06837955421989209;  // std dev = 0,000877, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420267;  // std dev = 3,25e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.0685187117900279;  // std dev = 4,41e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.139727094823122;  // std dev = 1,97e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.14714275783157402;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.552899061261213;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.05723293630180192;  // std dev = 0,009, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, G), genre(H, G) )
%   | then return -0.0641079875641584;  // std dev = 0,000852, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06419468893718977;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */


Results
   AUC ROC   = 0.990064
   AUC PR    = 0.878487
   CLL	      = -0.097641
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 3.136 seconds
Total inference time: 2.802 seconds
AUC ROC: 0.990064


Refined model AUC ROC: 0.990064


Dataset: cora->imdb(workedunder), Fold: 2, Type: transfer, Time: 00:33:27
{'Recall': 0.817901, 'AUC PR': 0.878487, 'F1': 0.89983, 'Mapping results': {'Knowledge compiling time': 0.5045351982116699, 'Total time': 3.093872308731079, 'Generating mappings time': 0.05941319465637207, 'Generating paths time': 2.5014779567718506, 'Possible mappings': 126, 'Finding best mapping': 0.02843928337097168}, 'CLL': -0.097641, 'AUC ROC': 0.990064, 'Precision': [1.0, 0.5], 'Inference time': 2.802, 'Learning time': 5.302, 'Parameter Learning results': {'Recall': 0.817901, 'AUC PR': 0.307074, 'F1': 0.498589, 'CLL': -0.170311, 'AUC ROC': 0.895764, 'Precision': [0.358593, 0.5], 'Inference time': 2.946, 'Learning time': 2.166}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1123163781936062;  // std dev = 8,69e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.10269723307519268;  // std dev = 0,106, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09259873214086892;  // std dev = 3,94e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08510620449561641;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07870930374095823;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07318767069734944;  // std dev = 4,56e-06, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06936125618256975;  // std dev = 0,117, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06408751020486479;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065756
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.555 seconds
Total inference time: 1.953 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 2, Type: scratch, Time: 00:33:31
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'CLL': -0.065756, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.953, 'Learning time': 2.555}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.5976119041442871
   Generating paths time   = 2.376863956451416
   Generating mappings time   = 0.0598902702331543
   Possible mappings   = 126
   Finding best mapping   = 0.02762007713317871
   Total time   = 3.061992645263672


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,true,true;movie(G, A).;false;false
0;false,false;genre(B, H), genre(I, H).;true;false
0;false;genre(A, D), genre(E, D).;true;true
0;false,true;movie(F, E), movie(F, B).;true;false
0;false,false,true;movie(J, I), movie(J, A).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
1;true,true;movie(F, E), movie(F, A).;true;true
1;true,true,true;movie(G, B).;false;false
1;true;genre(A, D), genre(E, D).;true;false
1;true,true,false;genre(H, C).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
2;false,false;genre(A, H), genre(I, H).;true;false
2;false;genre(B, D), genre(E, D).;true;true
2;false,false,true;movie(J, I), movie(J, B).;false;false
2;false,true;genre(E, F), genre(A, F).;false;true
2;false,true,false;movie(G, E), movie(G, A).;false;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false,true,true;movie(G, A).;false;false
3;false,false;genre(B, H), genre(I, H).;true;false
3;false;genre(A, D), genre(E, D).;true;true
3;false,true;movie(F, E), movie(F, B).;true;false
3;false,false,true;movie(J, I), movie(J, A).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, A).;false;false
4;false,true;movie(F, E), movie(F, B).;true;true
4;false;genre(A, D), genre(E, D).;true;false
4;false,true,false;genre(E, H), genre(B, H).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false,true;genre(E, F), genre(A, F).;false;true
5;false;genre(B, D), genre(E, D).;true;false
5;false,true,false;movie(G, E), movie(G, A).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
6;true,true;movie(E, D), movie(E, B).;false;false
6;true;genre(D, C).;true;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
7;false,false;genre(B, H), genre(I, H).;true;false
7;false;genre(A, D), genre(E, D).;true;true
7;false,false,true;movie(J, I), movie(J, A).;false;false
7;false,true;genre(E, F), genre(B, F).;false;true
7;false,true,false;movie(G, E), movie(G, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
8;false,true,true;movie(G, B).;false;false
8;false,true;movie(F, E), movie(F, A).;true;false
8;false;genre(B, D), genre(E, D).;true;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
9;false,true,true;movie(G, B).;false;false
9;false,false;genre(A, I), genre(J, I).;true;false
9;false;genre(B, D), genre(E, D).;true;true
9;false,false,true;movie(K, J), movie(K, A).;false;false
9;false,true;movie(F, E), movie(F, A).;true;true
9;false,true,false;genre(E, H), genre(A, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.7602468371974122;  // std dev = 3,554, 143,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=129 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.038295993923041484;  // std dev = 6,338, 272,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=49 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1697241563055976;  // std dev = 9,949, 514,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return -0.1452780264528192;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.5534359441372242;  // std dev = 4,418, 152,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=129 */
%   | | | else return -0.14527802645281926;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, B) )
%   | | | then return -0.14527802645281918;  // std dev = 3,16e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.14527802645281923;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.002824296313427651;  // std dev = 6,370, 285,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.12815122933303058;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12815122933303055;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.4501153533128851;  // std dev = 4,069, 148,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=129 */
%   | | | else return -0.12815122933303058;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.008847000111862124;  // std dev = 6,413, 305,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=49 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926098;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.11450217684052331;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return -0.11450217684052325;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.11450217684052323;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.08887166381798982;  // std dev = 8,496, 481,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.2715526146331212;  // std dev = 4,725, 156,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=129 */
%   | | | else return -0.123826308818515;  // std dev = 1,05e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.029122720402950508;  // std dev = 6,426, 346,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=49 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, D), movie(E, B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.03632815886930626;  // std dev = 8,257, 551,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.10406493091583892;  // std dev = 1,49e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.10406493091583899;  // std dev = 5,27e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.21913702483046008;  // std dev = 4,418, 152,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=129 */
%   | | | else return -0.11464151312831562;  // std dev = 1,05e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.017708994958085734;  // std dev = 6,399, 298,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.18094949038599395;  // std dev = 4,250, 150,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10350951268054494;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.021101847474190156;  // std dev = 6,398, 335,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.12598868668388455;  // std dev = 4,498, 153,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09429088394767972;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( genre(A, I), genre(J, I) )
%   | | then if ( movie(K, J), movie(K, A) )
%   | | | then return -0.09295979563991738;  // std dev = 2,79e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.021854132339301405;  // std dev = 6,436, 317,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=49 */


Results
   AUC ROC   = 0.961324
   AUC PR    = 0.348021
   CLL	      = -0.222797
   Precision = 0.362617 at threshold = 0.5
   Recall    = 0.95098
   F1        = 0.525034


Total learning time: 3.845 seconds
Total inference time: 2.802 seconds
AUC ROC: 0.961324


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [3.554, 14, 129], 'false,false,false': [6.338, 223, 49], 'false,false,true,false': [1.49e-08, 23, 0], 'true': [0.0, 13, 0], 'false,true,true,true': [2.58e-08, 29, 0], 'false,true,false': [2.58e-08, 29, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [7.45e-09, 14, 0], 'false': [9.949, 336, 178], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(A, H), genre(I, H)', 'false': 'genre(B, D), genre(E, D)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'movie(G, E), movie(G, A)', 'false,false,true': 'movie(J, I), movie(J, B)'}, {'false,true,true': [0.0, 1, 0], 'false,false,true,true': [3.16e-08, 36, 0], 'false,false,false': [6.37, 236, 49], 'false,true,false,false': [0.0, 23, 0], 'false,false,true,false': [0.0, 16, 0], 'false,true,false,true': [4.418, 23, 129], 'true': [9.13e-09, 12, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [4.069, 19, 129], 'false,false,false': [6.413, 256, 49], 'false,false,true,false': [0.0, 30, 0], 'true': [0.0, 7, 0], 'false,true,true,true': [0.0, 29, 0], 'false,true,false': [0.0, 21, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'genre(A, D), genre(E, D)', 'false,true,false': 'genre(E, H), genre(B, H)'}, {'false,false': [8.496, 303, 178], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,false': [9.13e-09, 16, 0], 'false,true,false,true': [0.0, 2, 0], 'true': [0.0, 12, 0], 'false,true,true,true': [0.0, 28, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,true,false': 'movie(G, E), movie(G, A)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [1.05e-08, 17, 0], 'false,true,false,true': [4.725, 27, 129], 'false,false': [6.426, 297, 49], 'true': [5.27e-09, 12, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(E, D), movie(E, B)', 'true': 'genre(D, C)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 7, 0], 'false': [8.257, 373, 178], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [4.418, 23, 129], 'false,false,false': [6.399, 249, 49], 'false,true,false,false': [5.27e-09, 21, 0], 'false,false,true,false': [1.05e-08, 17, 0], 'false,true,false,true': [1.49e-08, 31, 0], 'true': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [4.25, 21, 129], 'false,false': [6.398, 286, 49], 'true': [3.73e-09, 15, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,false': 'genre(A, I), genre(J, I)', 'false': 'genre(B, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, H), genre(A, H)', 'false,false,true': 'movie(K, J), movie(K, A)'}, {'false,false,true,true': [2.79e-08, 60, 0], 'false,true,true,false': [0.0, 0, 0], 'false,false,false': [6.436, 268, 49], 'false,true,false,false': [0.0, 18, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true,true': [4.498, 24, 129], 'true': [5.89e-09, 12, 0]}]]
[{'': [-1.2810265668751807e-17, 0.2300825962539051], 'false,true,true': [2.2970131543968756e-17, nan], 'false,false': [0.17321091595297297, 0.14769409602076228], 'false': [6.125368411725002e-17, 0.24123767227539408], 'false,true': [2.2970131543968756e-17, 2.2970131543968756e-17], 'false,false,true': [0.0883172771284705, 9.654113257610057e-18]}, {'': [3.96508223080413e-18, 0.19257007886542968], 'true,true': [3.96508223080413e-18, nan], 'true,true,true': [3.96508223080413e-18, nan], 'true': [3.96508223080413e-18, nan]}, {'': [6.938893903907228e-18, 0.1902848920375554], 'false,false': [5.978123978750843e-17, 0.1423699599876896], 'false': [0.1684023666106578, 0.12326417511387287], 'false,false,true': [2.7755575615628914e-17, -3.469446951953614e-18], 'false,true': [0.0, 0.16727201263541486], 'false,true,false': [0.12841932132964007, 0.0]}, {'': [0.0, 0.15686333562082755], 'false,true,true': [-2.2970131543968756e-17, nan], 'false,false': [0.13989792553372168, 0.13484547164740918], 'false': [-1.1102230246251566e-17, 0.16711954154767913], 'false,true': [-2.2970131543968756e-17, -1.3216940769347101e-17], 'false,false,true': [0.11189737034331569, -2.4054832200211726e-17]}, {'': [0.0, 0.14025451438871855], 'false,true,true': [-1.3877787807814457e-17, nan], 'false,true': [-1.3877787807814457e-17, 3.0839528461809902e-18], 'false': [-3.37893964016352e-17, 0.15005737703097216], 'false,true,false': [0.0, 5.204170427930421e-18]}, {'': [2.3129646346357427e-18, 0.14242558270517192], 'false,true': [nan, 0.1429092267711863], 'false': [0.1429092267711863, 0.11933332052349138], 'false,true,false': [0.1431213017751486, 6.530723674265627e-18]}, {'': [-2.9738116731030977e-18, 0.12373205290632117], 'true,true': [-2.9738116731030977e-18, nan], 'true': [-2.9738116731030977e-18, nan]}, {'': [0.0, 0.1306716497979796], 'false,false': [0.12558083010967072, 0.13739245979910916], 'false': [8.540177112501205e-18, 0.14265955880298245], 'false,true': [nan, 8.540177112501205e-18], 'false,true,false': [7.162729191130042e-18, 1.32169407693471e-18], 'false,false,true': [0.1284193213296402, 6.530723674265627e-18]}, {'': [9.251858538542971e-19, 0.12600225378340282], 'false,true,true': [0.12039999999999978, nan], 'false,true': [0.12039999999999978, -4.163336342344337e-18], 'false': [0.11463497485386918, 0.12220322624199988]}, {'': [2.8912057932946786e-18, 0.11838084662635269], 'false,true,true': [0.13225682429834687, nan], 'false,false': [1.295260195396016e-17, 0.13068097005642348], 'false': [0.12290509496522248, 0.11055954423442864], 'false,true': [0.13225682429834687, -1.5419764230904951e-18], 'false,true,false': [nan, -1.5419764230904951e-18], 'false,false,true': [1.295260195396016e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '0;false,false,true;movie(J, I), movie(J, A).;true;true', '0;false,true;movie(F, E), movie(F, B).;true;true', '0;false;genre(A, D), genre(E, D).;true;true', '0;false,false;genre(B, H), genre(I, H).;true;true', '1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '2;false,false;genre(A, H), genre(I, H).;true;true', '2;false;genre(B, D), genre(E, D).;true;true', '2;false,false,true;movie(J, I), movie(J, B).;true;true', '2;false,true;genre(E, F), genre(A, F).;true;true', '2;false,true,false;movie(G, E), movie(G, A).;true;true', '3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '3;false,false,true;movie(J, I), movie(J, A).;true;true', '3;false,true;movie(F, E), movie(F, B).;true;true', '3;false;genre(A, D), genre(E, D).;true;true', '3;false,false;genre(B, H), genre(I, H).;true;true', '4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '4;false,true;movie(F, E), movie(F, B).;true;true', '4;false;genre(A, D), genre(E, D).;true;true', '4;false,true,false;genre(E, H), genre(B, H).;true;true', '5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '5;false,true;movie(G, E), movie(G, A).;true;true', '5;false;genre(B, D), genre(E, D).;true;true', '6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;false,false,true;movie(J, I), movie(J, A).;true;true', '7;false,true;movie(G, E), movie(G, B).;true;true', '7;false;genre(A, D), genre(E, D).;true;true', '7;false,false;genre(B, H), genre(I, H).;true;true', '8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '8;false,true;movie(F, E), movie(F, A).;true;true', '8;false;genre(B, D), genre(E, D).;true;true', '9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '9;false,true;movie(F, E), movie(F, A).;true;true', '9;false;genre(B, D), genre(E, D).;true;true', '9;false,false;genre(A, I), genre(J, I).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( genre(B, G), genre(H, G) )
%   | | then if ( movie(I, H), movie(I, A) )
%   | | | then return 0.7068331456258257;  // std dev = 4,418, 152,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=129 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( director(B), female(A) )
%   | | | then return 0.5949910403626704;  // std dev = 3,325, 57,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=42 */
%   | | | else return -0.11523509531873931;  // std dev = 2,610, 263,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.7586220465793981;  // std dev = 0,096, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.7586225338939794;  // std dev = 0,311, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( female(A) )
%   | | | then return -0.20938207133638345;  // std dev = 0,262, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.14669263116975245;  // std dev = 0,227, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.1283938579235202;  // std dev = 4,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | | else return -0.12839385792352012;  // std dev = 6,99e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else if ( actor(B) )
%   | | | then return -0.12664432099420653;  // std dev = 0,011, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.12584680480954533;  // std dev = 0,005, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.4660224034978283;  // std dev = 3,477, 151,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=129 */
%   | | | else return -0.10842933189499838;  // std dev = 0,017, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, B) )
%   | | | then return -0.11219682377971961;  // std dev = 2,69e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.11222520382257646;  // std dev = 0,000142, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( actor(A), director(B) )
%   | | | then return 0.34354363038265573;  // std dev = 3,368, 77,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=49 */
%   | | | else return -0.11472399892644722;  // std dev = 0,001, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.10149778373988548;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( actor(B) )
%   | | | then return -0.10149519562323196;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.1051373942124081;  // std dev = 0,015, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( genre(B, G), genre(H, G) )
%   | | then if ( movie(I, H), movie(I, A) )
%   | | | then return 0.32858814364558997;  // std dev = 3,727, 157,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=129 */
%   | | | else return -0.09978212073434999;  // std dev = 0,014, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.2911918987771608;  // std dev = 3,110, 75,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=49 */
%   | | | else return -0.10357547958472353;  // std dev = 0,000863, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.09260875850446271;  // std dev = 1,49e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.10221655241065994;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09252700332580807;  // std dev = 0,000516, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( movie(H, A), movie(H, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.41202483938082407;  // std dev = 0,691, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09434313788691344;  // std dev = 0,000413, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( director(B), actor(A) )
%   | | | then return -0.28111288866663026;  // std dev = 1,003, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | | else return -0.09430299007964128;  // std dev = 0,003, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( female(A) )
%   | | | then return 0.20650066060579633;  // std dev = 1,588, 55,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=47 */
%   | | | else return 0.21556665919354;  // std dev = 2,009, 94,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=82 */
%   | | else if ( actor(A) )
%   | | | then return -0.06714525123079598;  // std dev = 0,005, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.0854725421521213;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( director(B), female(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3542582576936351;  // std dev = 7,30e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.257162641663257;  // std dev = 2,79e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.04518856809247381;  // std dev = 1,516, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -0.08630073165100038;  // std dev = 0,010, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.26518424453754896;  // std dev = 0,114, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.2728315637561153;  // std dev = 0,671, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( director(A), actor(B) )
%   | | | then return -0.07872324584228325;  // std dev = 0,001, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07999365626559567;  // std dev = 0,000316, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return -0.20594417690060005;  // std dev = 0,644, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.2144595399472713;  // std dev = 0,655, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( actor(A) )
%   | | | then return -0.07998637636601683;  // std dev = 4,59e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | | else return -0.07926161262872765;  // std dev = 0,006, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( female(B) )
%   | | | then return -0.07309014858701644;  // std dev = 7,67e-05, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07309073928283887;  // std dev = 9,05e-05, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( actor(B) )
%   | | | then return -0.07308050110273731;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07288803692010543;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(B, G), genre(H, G) )
%   | | then if ( movie(I, H), movie(I, A) )
%   | | | then return 0.09283781175572822;  // std dev = 2,762, 164,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=129 */
%   | | | else return -0.06014471582892695;  // std dev = 0,044, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.11733481004235109;  // std dev = 1,777, 75,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=49 */
%   | | | else return -0.07432054616246984;  // std dev = 0,000924, 207,000 (wgt'ed) examples reached here.  /* #neg=207 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.1904301582510917;  // std dev = 0,014, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.34223375590154065;  // std dev = 0,031, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( actor(A) )
%   | | | then return -0.04907724391162982;  // std dev = 0,004, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07096031285559742;  // std dev = 0,008, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A), director(B) )
%   | | then if ( movie(H, A), movie(H, B) )
%   | | | then return 0.20797900424860058;  // std dev = 3,65e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.19678029977009673;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(A), director(B) )
%   | | | then return 0.018351031137293982;  // std dev = 1,261, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -0.06914671167792369;  // std dev = 0,007, 274,000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.0641918400820262;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( female(A) )
%   | | | then return 0.07763382197128518;  // std dev = 1,316, 59,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=47 */
%   | | | else return 0.1023037601334122;  // std dev = 1,460, 95,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else if ( actor(A) )
%   | | | then return -0.0469814752317504;  // std dev = 0,004, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.06604506839996216;  // std dev = 0,008, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( genre(A, G), genre(H, G) )
%   | | then if ( female(B) )
%   | | | then return -0.0640179023807336;  // std dev = 7,50e-05, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06400804533463318;  // std dev = 0,000239, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( actor(A), director(B) )
%   | | | then return 0.09934143937965263;  // std dev = 1,531, 70,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=49 */
%   | | | else return -0.06503535255320651;  // std dev = 0,000857, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073983
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.716 seconds
Total inference time: 2.564 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: transfer, Time: 00:33:50
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'Mapping results': {'Knowledge compiling time': 0.5976119041442871, 'Total time': 3.061992645263672, 'Generating mappings time': 0.0598902702331543, 'Generating paths time': 2.376863956451416, 'Possible mappings': 126, 'Finding best mapping': 0.02762007713317871}, 'CLL': -0.073983, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.564, 'Learning time': 9.561, 'Parameter Learning results': {'Recall': 0.95098, 'AUC PR': 0.348021, 'F1': 0.525034, 'CLL': -0.222797, 'AUC ROC': 0.961324, 'Precision': [0.362617, 0.5], 'Inference time': 2.802, 'Learning time': 3.845}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.1418510649004881;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.12544463852839177;  // std dev = 0,000, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360625;  // std dev = 5,37e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.11231637819360685;  // std dev = 0,000, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 3,94e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.10159632948783644;  // std dev = 0,000, 302,000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.092691276189261;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.09269127618926049;  // std dev = 1,50e-07, 274,000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839683;  // std dev = 3,65e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.08518475138839678;  // std dev = 7,88e-08, 282,000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109169;  // std dev = 3,41e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.07877675473109147;  // std dev = 2,98e-08, 338,000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333707;  // std dev = 2,98e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.07324622576333695;  // std dev = 1,00e-07, 322,000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420271;  // std dev = 2,47e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.06842697784420279;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06419184008202625;  // std dev = 0,000, 330,000 (wgt'ed) examples reached here.  /* #neg=330 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.744 seconds
Total inference time: 2.152 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: scratch, Time: 00:33:56
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'CLL': -0.063555, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.152, 'Learning time': 3.744}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.4526851177215576
   Generating paths time   = 2.4562196731567383
   Generating mappings time   = 0.05894875526428223
   Possible mappings   = 126
   Finding best mapping   = 0.028247833251953125
   Total time   = 2.9961071014404297


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'author(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,true,true;movie(G, A).;false;false
0;false,false;genre(B, H).;true;false
0;false;genre(A, D).;true;true
0;false,true;movie(F, E), movie(F, B).;true;false
0;false,false,true;movie(J, I), movie(J, A).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
1;true,true;movie(F, E), movie(F, A).;true;false
1;true,true,true;movie(G, B).;false;false
1;true;genre(A, D).;true;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
2;false,false;genre(A, H).;true;false
2;false;genre(B, D).;true;true
2;false,false,true;movie(J, I), movie(J, B).;false;false
2;false,true;genre(A, F).;false;true
2;false,true,false;movie(G, E), movie(G, A).;false;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false,true,true;movie(G, A).;false;false
3;false,false;genre(B, H).;true;false
3;false;genre(A, D).;true;true
3;false,true;movie(F, E), movie(F, B).;true;false
3;false,false,true;movie(J, I), movie(J, A).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, A).;false;false
4;false,true;movie(F, E), movie(F, B).;true;true
4;false;genre(A, D).;true;false
4;false,true,false;genre(B, H).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false,true;genre(A, F).;false;true
5;false;genre(B, D).;true;false
5;false,true,false;movie(G, E), movie(G, A).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
6;true;movie(E, D), movie(E, B).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
7;false,false;genre(B, H).;true;false
7;false;genre(A, D).;true;true
7;false,false,true;movie(J, I), movie(J, A).;false;false
7;false,true;genre(B, F).;false;true
7;false,true,false;movie(G, E), movie(G, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
8;false,true,true;movie(G, B).;false;false
8;false,true;movie(F, E), movie(F, A).;true;false
8;false;genre(B, D).;true;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
9;false,true,true;movie(G, B).;false;false
9;false,false;genre(A, I).;true;false
9;false;genre(B, D).;true;true
9;false,false,true;movie(K, J), movie(K, A).;false;false
9;false,true;movie(F, E), movie(F, A).;true;true
9;false,true,false;genre(A, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H) )
%   | | then if ( movie(I, J), movie(I, A) )
%   | | | then return 0.661720363670941;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1549668297400412;  // std dev = 4,911, 140,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, G), movie(F, A) )
%   | | | then return 0.6277650547965778;  // std dev = 2,121, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H) )
%   | | then if ( movie(I, J), movie(I, B) )
%   | | | then return -0.14345515033326597;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14345515033326586;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.12671302004099927;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H) )
%   | | then if ( movie(I, J), movie(I, A) )
%   | | | then return 0.47031518584687015;  // std dev = 2,301, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1267130200409993;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.11334171222943067;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.09553080990808584;  // std dev = 3,266, 120,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, G), movie(F, A) )
%   | | | then return 0.2809516799498632;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.12086409211469527;  // std dev = 0,059, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.042808550183729116;  // std dev = 2,962, 131,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, G), movie(F, B) )
%   | | | then return -0.09548327798730381;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H) )
%   | | then if ( movie(I, J), movie(I, A) )
%   | | | then return 0.25192375302491643;  // std dev = 2,301, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11510979760627316;  // std dev = 5,77e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.17841662892156135;  // std dev = 2,461, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10281874025380433;  // std dev = 0,035, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.1583512767707421;  // std dev = 2,301, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H) )
%   | | then if ( movie(I, J), movie(I, A) )
%   | | | then return -0.07967641744173071;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09470400417365267;  // std dev = 2,79e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */


Results
   AUC ROC   = 0.888479
   AUC PR    = 0.235573
   CLL	      = -0.182329
   Precision = 0.27175 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.408824


Total learning time: 1.708 seconds
Total inference time: 3.75 seconds
AUC ROC: 0.888479


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H)', 'false': 'genre(A, D)', 'false,true': 'movie(E, F), movie(E, B)', 'false,false,true': 'movie(I, J), movie(I, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [2.973, 11, 45], 'false,false,false': [7.6e-08, 80, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 2, 0], 'false,true,true,true': [0.0, 8, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(E, F), movie(E, A)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'false': [4.911, 95, 45], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(A, H)', 'false': 'genre(B, D)', 'false,true': 'genre(A, E)', 'false,true,false': 'movie(F, G), movie(F, A)', 'false,false,true': 'movie(I, J), movie(I, B)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [1.05e-08, 11, 0], 'false,false,false': [0.0, 78, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [2.121, 5, 45], 'true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H)', 'false': 'genre(A, D)', 'false,true': 'movie(E, F), movie(E, B)', 'false,false,true': 'movie(I, J), movie(I, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [2.301, 6, 45], 'false,false,false': [0.0, 75, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 5, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,true': 'movie(E, F), movie(E, B)', 'false': 'genre(A, D)'}, {'false,true,true,true': [0.0, 13, 0], 'false,false': [3.266, 75, 45], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(A, E)', 'false': 'genre(B, D)', 'false,true,false': 'movie(F, G), movie(F, A)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [2.739, 9, 45], 'false,false': [0.059, 77, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [2.962, 86, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H)', 'false': 'genre(A, D)', 'false,true': 'genre(B, E)', 'false,true,false': 'movie(F, G), movie(F, B)', 'false,false,true': 'movie(I, J), movie(I, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [2.301, 6, 45], 'false,false,false': [5.77e-08, 70, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 7, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(E, F), movie(E, A)', 'false': 'genre(B, D)'}, {'false,true,true,true': [2.461, 7, 45], 'false,false': [0.035, 76, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,false': 'genre(A, H)', 'false': 'genre(B, D)', 'false,true': 'movie(E, F), movie(E, A)', 'false,false,true': 'movie(I, J), movie(I, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [3.73e-09, 7, 0], 'false,false,false': [2.79e-08, 72, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [2.301, 6, 45], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.21484375000000094], 'false,true,true': [-6.938893903907228e-18, nan], 'false,false': [0.15784438775510257, 7.216449660063518e-17], 'false': [-6.938893903907228e-18, 0.2213992214532882], 'false,true': [-6.938893903907228e-18, nan], 'false,false,true': [0.15784438775510257, nan]}, {'': [0.0, 0.17226730848024635], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.1693635780426645], 'false,false': [1.0092936587501423e-17, -2.846725704167068e-18], 'false': [0.08999999999999986, 1.7464182409833923e-17], 'false,false,true': [1.0092936587501423e-17, nan], 'false,true': [nan, 0.08999999999999986], 'false,true,false': [0.08999999999999986, nan]}, {'': [nan, 0.12515678227128474], 'false,true,true': [0.0, nan], 'false,false': [0.10380622837370174, -2.960594732333751e-18], 'false': [0.0, 0.12789443621017088], 'false,true': [0.0, nan], 'false,false,true': [0.10380622837370174, nan]}, {'': [nan, 0.08403921238364075], 'false,true,true': [-1.0675221390626506e-17, nan], 'false,true': [-1.0675221390626506e-17, nan], 'false': [-1.0675221390626506e-17, 0.08887909575613065]}, {'': [nan, 0.09639804389760659], 'false,true': [nan, 0.13888888888888923], 'false': [0.13888888888888923, 4.492297889026241e-05], 'false,true,false': [0.13888888888888923, nan]}, {'': [nan, 0.06695920638297567]}, {'': [nan, 0.07335512534873803], 'false,false': [0.10380622837370236, 4.7580986769649563e-17], 'false': [0.0, 0.07660104396664351], 'false,true': [nan, 0.0], 'false,true,false': [0.0, nan], 'false,false,true': [0.10380622837370236, nan]}, {'': [nan, 0.06641364725537158], 'false,true,true': [0.11649408284023685, nan], 'false,true': [0.11649408284023685, nan], 'false': [0.11649408284023685, 1.6419585175389112e-05]}, {'': [nan, 0.0558413904736424], 'false,true,true': [0.10380622837370229, nan], 'false,false': [1.982541115402065e-18, 1.0793834961633467e-17], 'false': [0.10380622837370229, 1.823706055835551e-05], 'false,true': [0.10380622837370229, nan], 'false,false,true': [1.982541115402065e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '0;false,false;genre(B, H).;true;true', '0;false;genre(A, D).;true;true', '1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '2;false,false;genre(A, H).;true;true', '2;false;genre(B, D).;true;true', '3;;workedunder(A, B) :- genre(A, D).;true;true', '3;false;genre(B, H).;true;true', '4;;workedunder(A, B) :- genre(A, D).;true;true', '5;;workedunder(A, B) :- genre(B, D).;true;true', '7;;workedunder(A, B) :- genre(A, D).;true;true', '7;false;genre(B, H).;true;true', '8;;workedunder(A, B) :- genre(B, D).;true;true', '9;;workedunder(A, B) :- genre(B, D).;true;true', '9;false;genre(A, H).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.14185106490048766;  // std dev = 6,99e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.12544463852839152;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(A, F) )
%   | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.11231637819360624;  // std dev = 5,87e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.10557104766126213;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.10159632948783628;  // std dev = 2,47e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.09967607037605973;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.09269127618926107;  // std dev = 1,05e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( female(A) )
%   | | then return 0.28626158688103215;  // std dev = 0,114, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.30890032935016637;  // std dev = 0,069, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.26177487340535865;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2574236165140904;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.11775656869244336;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.08433456870410852;  // std dev = 4,56e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.07877675473109177;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.07804622780632015;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.21441103243349338;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.21134679671245937;  // std dev = 3,73e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.11006624158344623;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.07261212382899887;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.18050203530719813;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.16281670127633022;  // std dev = 0,064, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.1553224214028762;  // std dev = 3,23e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.15564571455478668;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.1107492130967213;  // std dev = 0,012, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0684269778442027;  // std dev = 1,49e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.06787164862041284;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13620692169682158;  // std dev = 0,000108, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10451232942256712;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, E) )
%   | then return -0.0637016465499996;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */


Results
   AUC ROC   = 0.999291
   AUC PR    = 0.975458
   CLL	      = -0.074707
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total learning time: 2.571 seconds
Total inference time: 2.38 seconds
AUC ROC: 0.999291


Refined model AUC ROC: 0.999291


Dataset: cora->imdb(workedunder), Fold: 4, Type: transfer, Time: 00:34:10
{'Recall': 0.824926, 'AUC PR': 0.975458, 'F1': 0.904065, 'Mapping results': {'Knowledge compiling time': 0.4526851177215576, 'Total time': 2.9961071014404297, 'Generating mappings time': 0.05894875526428223, 'Generating paths time': 2.4562196731567383, 'Possible mappings': 126, 'Finding best mapping': 0.028247833251953125}, 'CLL': -0.074707, 'AUC ROC': 0.999291, 'Precision': [1.0, 0.5], 'Inference time': 2.38, 'Learning time': 4.279, 'Parameter Learning results': {'Recall': 0.824926, 'AUC PR': 0.235573, 'F1': 0.408824, 'CLL': -0.182329, 'AUC ROC': 0.888479, 'Precision': [0.27175, 0.5], 'Inference time': 3.75, 'Learning time': 1.708}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048766;  // std dev = 7,74e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839155;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360625;  // std dev = 5,67e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10247473751476303;  // std dev = 0,079, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09261742884856874;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08512207425571364;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07872293233820274;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07319953304729909;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06838610530289495;  // std dev = 2,89e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06415574811284355;  // std dev = 2,44e-06, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06479
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.374 seconds
Total inference time: 2.347 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 4, Type: scratch, Time: 00:34:15
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'CLL': -0.06479, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.347, 'Learning time': 2.374}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.5320007801055908
   Generating paths time   = 2.4789061546325684
   Generating mappings time   = 0.058744192123413086
   Possible mappings   = 126
   Finding best mapping   = 0.028087377548217773
   Total time   = 3.0977447032928467


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,true,true;movie(G, A).;false;false
0;false,false;genre(B, H), genre(I, H).;true;false
0;false;genre(A, D), genre(E, D).;true;true
0;false,true;movie(F, E), movie(F, B).;true;false
0;false,false,true;movie(J, I), movie(J, A).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
1;true,true;movie(F, E), movie(F, A).;true;true
1;true,true,true;movie(G, B).;false;false
1;true;genre(A, D), genre(E, D).;true;false
1;true,true,false;genre(H, C).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
2;false,false;genre(A, H), genre(I, H).;true;false
2;false;genre(B, D), genre(E, D).;true;true
2;false,false,true;movie(J, I), movie(J, B).;false;false
2;false,true;genre(E, F), genre(A, F).;false;true
2;false,true,false;movie(G, E), movie(G, A).;false;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false,true,true;movie(G, A).;false;false
3;false,false;genre(B, H), genre(I, H).;true;false
3;false;genre(A, D), genre(E, D).;true;true
3;false,true;movie(F, E), movie(F, B).;true;false
3;false,false,true;movie(J, I), movie(J, A).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, A).;false;false
4;false,true;movie(F, E), movie(F, B).;true;true
4;false;genre(A, D), genre(E, D).;true;false
4;false,true,false;genre(E, H), genre(B, H).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false,true;genre(E, F), genre(A, F).;false;true
5;false;genre(B, D), genre(E, D).;true;false
5;false,true,false;movie(G, E), movie(G, A).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
6;true,true;movie(E, D), movie(E, B).;false;false
6;true;genre(D, C).;true;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
7;false,false;genre(B, H), genre(I, H).;true;false
7;false;genre(A, D), genre(E, D).;true;true
7;false,false,true;movie(J, I), movie(J, A).;false;false
7;false,true;genre(E, F), genre(B, F).;false;true
7;false,true,false;movie(G, E), movie(G, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
8;false,true,true;movie(G, B).;false;false
8;false,true;movie(F, E), movie(F, A).;true;false
8;false;genre(B, D), genre(E, D).;true;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
9;false,true,true;movie(G, B).;false;false
9;false,false;genre(A, I), genre(J, I).;true;false
9;false;genre(B, D), genre(E, D).;true;true
9;false,false,true;movie(K, J), movie(K, A).;false;false
9;false,true;movie(F, E), movie(F, A).;true;true
9;false,true,false;genre(E, H), genre(A, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.034324183180057574;  // std dev = 2,987, 93,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.13938782538214664;  // std dev = 4,968, 144,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.6627233674475032;  // std dev = 0,986, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return -0.14155148082548077;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, B) )
%   | | | then return -0.14155148082548077;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.159679836900595;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.04401665247899637;  // std dev = 2,981, 90,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.1252074599127616;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.13939883758476707;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.4808241761526504;  // std dev = 1,375, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | | else return -0.1252074599127616;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.04843586950496114;  // std dev = 2,998, 99,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.11212444914290469;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.07911919996224365;  // std dev = 3,788, 133,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.31752068600951855;  // std dev = 1,662, 38,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.047827988280414534;  // std dev = 2,989, 96,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, D), movie(E, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.05985119400104698;  // std dev = 3,555, 126,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.10253927862222877;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12480790071242909;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.25649035243268564;  // std dev = 1,375, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | | else return -0.12672271380785669;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.04857315448085278;  // std dev = 2,989, 94,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.23066735464524943;  // std dev = 0,986, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11334954160052299;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.04943081861594417;  // std dev = 2,998, 105,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.16269156983774413;  // std dev = 1,375, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10244723338838758;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, I), genre(J, I) )
%   | | then if ( movie(K, J), movie(K, A) )
%   | | | then return -0.08937472776197992;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.04821277377597255;  // std dev = 3,009, 106,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=10 */


Results
   AUC ROC   = 0.914919
   AUC PR    = 0.314047
   CLL	      = -0.212834
   Precision = 0.354244 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.50087


Total learning time: 1.521 seconds
Total inference time: 2.937 seconds
AUC ROC: 0.914919


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [2.38e-07, 0, 35], 'false,false,false': [2.987, 83, 10], 'false,false,true,false': [0.0, 1, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 5, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [4.968, 99, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(A, H), genre(I, H)', 'false': 'genre(B, D), genre(E, D)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'movie(G, E), movie(G, A)', 'false,false,true': 'movie(J, I), movie(J, B)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 2, 0], 'false,false,false': [2.981, 80, 10], 'false,true,false,false': [0.0, 2, 0], 'false,false,true,false': [0.0, 1, 0], 'false,true,false,true': [0.986, 1, 35], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [1.375, 2, 35], 'false,false,false': [2.998, 89, 10], 'false,false,true,false': [0.0, 1, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 5, 0], 'false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true,true,true': [3.73e-09, 6, 0], 'false,false': [3.788, 88, 45], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,true,false': 'movie(G, E), movie(G, A)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [1.662, 3, 35], 'false,false': [2.989, 86, 10], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(E, D), movie(E, B)', 'true': 'genre(D, C)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'false': [3.555, 81, 45], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [1.375, 2, 35], 'false,false,false': [2.989, 84, 10], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 4, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [0.986, 1, 35], 'false,false': [2.998, 95, 10], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,false': 'genre(A, I), genre(J, I)', 'false': 'genre(B, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, H), genre(A, H)', 'false,false,true': 'movie(K, J), movie(K, A)'}, {'false,false,true,true': [1.86e-09, 3, 0], 'false,true,true,false': [0.0, 0, 0], 'false,false,false': [3.009, 96, 10], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true,true': [1.375, 2, 35], 'true': [0.0, 1, 0]}]]
[{'': [nan, 0.22304522165293028], 'false,true,true': [-2.7755575615628915e-18, nan], 'false,false': [0.027006172839507927, 0.09596485142791049], 'false': [-2.7755575615628915e-18, 0.227149810708492], 'false,true': [-2.7755575615628915e-18, nan], 'false,false,true': [1.6240976817373718e-15, 0.0]}, {'': [nan, 0.1713935706724381]}, {'': [nan, 0.1766943388681947], 'false,false': [7.303050977469176e-05, 0.09876543209876508], 'false': [0.057838104374716724, 0.09591671743962361], 'false,false,true': [0.0, 0.0], 'false,true': [nan, 0.057838104374716724], 'false,true,false': [0.0270061728395063, 0.0]}, {'': [nan, 0.13060311380991674], 'false,true,true': [-2.7755575615628915e-18, nan], 'false,false': [0.05919739793396174, 0.09080706050402992], 'false': [4.110106127132307e-05, 0.1348523427487959], 'false,true': [-2.7755575615628915e-18, 0.0], 'false,false,true': [0.05113221329437573, 0.0]}, {'': [nan, 0.10475069233182559], 'false,true,true': [2.3129646346357427e-18, nan], 'false,true': [2.3129646346357427e-18, nan], 'false': [2.3129646346357427e-18, 0.10789754790671313]}, {'': [nan, 0.11442953233094195], 'false,true': [nan, 0.07271468144044341], 'false': [0.07271468144044341, 0.09308922166958265], 'false,true,false': [0.07271468144044341, nan]}, {'': [0.0, 0.10030985577295039], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [nan, 0.09799298890260481], 'false,false': [0.05354946350067787, 0.09506564056134002], 'false': [7.934264476738839e-05, 0.10095199273894233], 'false,true': [nan, 7.934264476738839e-05], 'false,true,false': [0.0, 0.0], 'false,false,true': [0.05113221329437565, 0.0]}, {'': [nan, 0.08461270104895681], 'false,true,true': [0.02700617283950614, nan], 'false,true': [0.02700617283950614, 0.0], 'false': [0.031485784928967954, 0.08559963308207724]}, {'': [0.0, 0.08303886021968816], 'false,true,true': [0.05113221329437543, nan], 'false,false': [1.1564823173178713e-18, 0.08543965824136673], 'false': [0.051587908265935394, 0.08313345684485668], 'false,true': [0.05113221329437543, 0.0], 'false,true,false': [nan, 0.0], 'false,false,true': [1.1564823173178713e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '0;false,true;movie(J, I), movie(J, A).;true;true', '0;false;genre(B, H), genre(I, H).;true;true', '2;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '2;false,true;movie(J, I), movie(J, B).;true;true', '2;true;movie(G, E), movie(G, A).;true;true', '2;false;genre(A, H), genre(I, H).;true;true', '3;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '3;false,true;movie(J, I), movie(J, A).;true;true', '3;true;movie(F, E), movie(F, B).;true;true', '3;false;genre(B, H), genre(I, H).;true;true', '4;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '7;false,true;movie(J, I), movie(J, A).;true;true', '7;true;movie(G, E), movie(G, B).;true;true', '7;false;genre(B, H), genre(I, H).;true;true', '8;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '8;true;movie(F, E), movie(F, A).;true;true', '9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '9;false,true;movie(F, E), movie(F, A).;true;true', '9;false;genre(B, D), genre(E, D).;true;true', '9;false,false;genre(A, I), genre(J, I).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, E), genre(F, E) )
%   | then if ( movie(G, F), movie(G, A) )
%   | | then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 6,99e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( female(A) )
%   | | | then return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7231948150461046;  // std dev = 0,064, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21952909761428643;  // std dev = 0,117, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then if ( female(A) )
%   | | then return 0.5103993111120895;  // std dev = 0,182, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.47516091562943014;  // std dev = 0,238, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), genre(G, F) )
%   | then if ( movie(H, G), movie(H, B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then return -0.11231637819360622;  // std dev = 6,83e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( female(A) )
%   | | | then return 0.47471252240332806;  // std dev = 0,743, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.39587452579344645;  // std dev = 0,709, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, B) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), genre(G, F) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then if ( female(A) )
%   | | | then return 0.34648816633749363;  // std dev = 1,031, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.3260663063848715;  // std dev = 1,237, 21,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.10159632948783613;  // std dev = 5,96e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return 0.3609481184346651;  // std dev = 0,718, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.45581102161401366;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.09491753951390478;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.35555656069916886;  // std dev = 0,080, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.3562471811986588;  // std dev = 0,021, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.3169738092986638;  // std dev = 0,262, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839693;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.08518475138839693;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.08518475138839686;  // std dev = 3,73e-09, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.08739134590983418;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2789149508084895;  // std dev = 0,015, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.27930565525301315;  // std dev = 0,004, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.34526629035446943;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.22655749802177452;  // std dev = 0,010, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.18821099219226847;  // std dev = 0,230, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 5,27e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.08071534122236071;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06601449421545255;  // std dev = 0,020, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, F), genre(G, F) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return 0.17523061774053128;  // std dev = 0,069, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return 0.07724529838979759;  // std dev = 0,295, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then if ( female(A) )
%   | | then return 0.1578263493716987;  // std dev = 2,63e-09, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.11202641837586633;  // std dev = 0,134, 21,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | else return -0.046894229523067286;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( director(A) )
%   | | then return -0.07289037049204719;  // std dev = 0,008, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06842697784420265;  // std dev = 4,47e-09, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0.11786410684486087;  // std dev = 0,153, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( female(A) )
%   | | | then return 0.11333325127338578;  // std dev = 0,431, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.10687818992598475;  // std dev = 0,583, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return -0.04484226074405427;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, G), genre(H, G) )
%   | | then return -0.06694539363099984;  // std dev = 0,005, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( actor(B) )
%   | | | then return -0.0641841506530483;  // std dev = 0,000511, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return 0.12861934123327962;  // std dev = 0,426, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */


Results
   AUC ROC   = 0.999456
   AUC PR    = 0.981685
   CLL	      = -0.093307
   Precision = 0.873057 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932227


Total learning time: 2.511 seconds
Total inference time: 3.035 seconds
AUC ROC: 0.999456


Refined model AUC ROC: 0.999456


Dataset: cora->imdb(workedunder), Fold: 5, Type: transfer, Time: 00:34:29
{'Recall': 1.0, 'AUC PR': 0.981685, 'F1': 0.932227, 'Mapping results': {'Knowledge compiling time': 0.5320007801055908, 'Total time': 3.0977447032928467, 'Generating mappings time': 0.058744192123413086, 'Generating paths time': 2.4789061546325684, 'Possible mappings': 126, 'Finding best mapping': 0.028087377548217773}, 'CLL': -0.093307, 'AUC ROC': 0.999456, 'Precision': [0.873057, 0.5], 'Inference time': 3.035, 'Learning time': 4.032, 'Parameter Learning results': {'Recall': 0.854599, 'AUC PR': 0.314047, 'F1': 0.50087, 'CLL': -0.212834, 'AUC ROC': 0.914919, 'Precision': [0.354244, 0.5], 'Inference time': 2.937, 'Learning time': 1.521}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6,66e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 2,98e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 3,49e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 4,94e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( female(A) )
%   | then return 0.22794368305285861;  // std dev = 0,092, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.2551722425694895;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109164;  // std dev = 4,83e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21208279061774335;  // std dev = 0,015, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10522575815362437;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17880086558575087;  // std dev = 0,013, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09682919969693558;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15403616380930185;  // std dev = 0,012, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08777208495825796;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.06842697784420268;  // std dev = 2,89e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.17456162781456971;  // std dev = 0,581, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13501551776647439;  // std dev = 0,011, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return -0.2613015833940359;  // std dev = 0,498, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.061117141345518024;  // std dev = 0,017, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074334
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.548 seconds
Total inference time: 2.036 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 5, Type: scratch, Time: 00:34:34
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 0.852086, 'CLL': -0.074334, 'AUC ROC': 1.0, 'Precision': [0.742291, 0.5], 'Inference time': 2.036, 'Learning time': 2.548}


Starting experiment #3 for cora->imdb(workedunder)

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.25953057897374937;  // std dev = 0,490, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.048022352821031365;  // std dev = 0,392, 79,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.049929757017320595;  // std dev = 3,364, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else return 0.031724064633188706;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22491459873669895;  // std dev = 0,490, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else return 0.03309496592989262;  // std dev = 0,383, 946,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=170 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18982283798130506;  // std dev = 0,490, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else return 0.028907013461866284;  // std dev = 0,383, 946,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=170 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15643203599855107;  // std dev = 0,490, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4983561131075382;  // std dev = 1,159, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1683105535591286;  // std dev = 0,014, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.1559463808322119;  // std dev = 0,000205, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.040697165682328715;  // std dev = 3,452, 76,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | else return 0.02246133316484024;  // std dev = 0,381, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12636158452509913;  // std dev = 0,490, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4329906613676832;  // std dev = 1,154, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.13536512184229976;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.15097495924287524;  // std dev = 0,028, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04294395300775024;  // std dev = 3,442, 74,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.09924846940152816;  // std dev = 1,346, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.030998098414505956;  // std dev = 3,361, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else return 0.016983854972925348;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6574170415838245;  // std dev = 1,384, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return -0.3009162917495088;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.36575037491715784;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | | else return -0.04839103922425628;  // std dev = 4,323, 99,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | else return 0.09954801469277014;  // std dev = 0,490, 6.892,000 (wgt'ed) examples reached here.  /* #neg=4.132 #pos=2.760 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.3468648726297518;  // std dev = 1,154, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1202890282193207;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.026354835922380294;  // std dev = 0,389, 79,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | else return 0.01655626570784425;  // std dev = 0,381, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6238490940775785;  // std dev = 1,390, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return -0.3168865551973031;  // std dev = 0,110, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.28079881145458785;  // std dev = 2,300, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | | else return -0.0697379605624706;  // std dev = 4,323, 99,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | else return 0.0781598144292987;  // std dev = 0,489, 6.892,000 (wgt'ed) examples reached here.  /* #neg=4.132 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.39595252209120146;  // std dev = 1,164, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1564249087174458;  // std dev = 0,039, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.021730751895389675;  // std dev = 0,386, 79,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | else return 0.013846484558845648;  // std dev = 0,380, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.47287053164757104;  // std dev = 1,391, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return -0.2516980892649669;  // std dev = 0,093, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.2120426075258999;  // std dev = 2,299, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | | else return -0.05469023464283751;  // std dev = 4,323, 99,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | else return 0.060882910932496564;  // std dev = 0,489, 6.892,000 (wgt'ed) examples reached here.  /* #neg=4.132 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.31125312602119415;  // std dev = 1,165, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.13690738829022137;  // std dev = 0,035, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.018687114774785272;  // std dev = 0,386, 79,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | else return 0.01195567396918943;  // std dev = 0,380, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4518476793696155;  // std dev = 1,424, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return -0.2613130534413072;  // std dev = 0,159, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( haswordauthor(E, C) )
%   | | | then return 0.1571524534902001;  // std dev = 2,294, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | | else return -0.06780698412838113;  // std dev = 4,323, 99,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | else return 0.047041236548357276;  // std dev = 0,488, 6.892,000 (wgt'ed) examples reached here.  /* #neg=4.132 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.23727166033983949;  // std dev = 1,166, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.12154227199848426;  // std dev = 0,031, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.016035034466962826;  // std dev = 0,386, 79,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | else return 0.010308923088288562;  // std dev = 0,380, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03628454570078264;  // std dev = 0,486, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.13061668810385987;  // std dev = 0,062, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.0582892437549654;  // std dev = 0,782, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.02405747809209957;  // std dev = 3,549, 78,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | else return 0.008878438815574107;  // std dev = 0,380, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */


Predicates from source: ['samevenue(venue,venue).', 'haswordauthor(author,word).', 'samebib(class,class).', 'haswordvenue(venue,word).', 'author(class,author).', 'venue(class,venue).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.4035341739654541
   Generating paths time   = 2.47902250289917
   Generating mappings time   = 0.058483123779296875
   Possible mappings   = 126
   Finding best mapping   = 0.02869272232055664
   Total time   = 2.969738483428955


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,true,true;movie(G, A).;false;false
0;false,false;genre(B, H), genre(I, H).;true;false
0;false;genre(A, D), genre(E, D).;true;true
0;false,true;movie(F, E), movie(F, B).;true;false
0;false,false,true;movie(J, I), movie(J, A).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false,true,true;movie(G, B).;false;false
3;false,true;movie(F, E), movie(F, A).;true;true
3;false;genre(B, D), genre(E, D).;true;false
3;false,true,false;movie(H, E), movie(H, B).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, A).;false;false
4;false,false;genre(B, I), genre(J, I).;true;false
4;false;genre(A, D), genre(E, D).;true;true
4;false,false,true;movie(K, J), movie(K, A).;false;false
4;false,true;movie(F, E), movie(F, B).;true;true
4;false,true,false;genre(E, H), genre(B, H).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;true,true;movie(F, E), movie(F, B).;true;true
5;false,true;movie(K, J), movie(K, B).;true;false
5;false;genre(A, I), genre(J, I).;true;false
5;true,true,false;genre(H, C).;false;false
5;true,true,true;movie(G, A).;false;false
5;true;genre(B, D), genre(E, D).;true;false
5;false,true,true;movie(L, A).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;true,true;movie(F, E), movie(F, A).;true;true
6;false,true;movie(J, I), movie(J, A).;true;false
6;false;genre(B, H), genre(I, H).;true;false
6;true,true,false;genre(B, D).;false;false
6;true,true,true;movie(G, B).;false;false
6;true;genre(A, D), genre(E, D).;true;false
6;false,true,true;movie(K, B).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;true,true;movie(F, E), movie(F, B).;true;true
7;false,true;movie(K, J), movie(K, A).;true;false
7;false;genre(B, I), genre(J, I).;true;false
7;true,true,false;genre(H, C).;false;false
7;true,true,true;movie(G, A).;false;false
7;true;genre(B, D), genre(E, D).;true;false
7;false,true,true;movie(L, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;true,true;movie(F, E), movie(F, A).;true;true
8;false,true;movie(J, I), movie(J, A).;true;false
8;false;genre(B, H), genre(I, H).;true;false
8;true,true,false;genre(E, C).;false;false
8;true,true,true;movie(G, B).;false;false
8;true;genre(A, D), genre(E, D).;true;false
8;false,true,true;movie(K, B).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
9;false,true;genre(E, F), genre(A, F).;false;true
9;false;genre(B, D), genre(E, D).;true;false
9;false,true,false;movie(G, E), movie(G, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.7914822684328459;  // std dev = 1,932, 60,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048763;  // std dev = 8,69e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.14830422188026018;  // std dev = 5,316, 174,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1328998313353908;  // std dev = 5,226, 169,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.6233680435681874;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.1596751624421928;  // std dev = 2,11e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.13939521911244293;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.4914802773932968;  // std dev = 1,390, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.13939521911244276;  // std dev = 7,60e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.12349763535317175;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.05066456819295723;  // std dev = 3,280, 167,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.3576873862032538;  // std dev = 1,390, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.12812159802844192;  // std dev = 0,044, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.18590610254154066;  // std dev = 2,646, 64,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11471562117655124;  // std dev = 0,033, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.19056900462808707;  // std dev = 2,142, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10265309887079847;  // std dev = 0,046, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return 0.1855809028470676;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.09410431243811132;  // std dev = 0,033, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */


Results
   AUC ROC   = 0.888593
   AUC PR    = 0.316701
   CLL	      = -0.170983
   Precision = 0.372905 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.512476


Total learning time: 1.838 seconds
Total inference time: 2.31 seconds
AUC ROC: 0.888593


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [1.932, 4, 56], 'false,false,false': [8.69e-08, 102, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 1, 0], 'false,true,true,true': [0.0, 7, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [5.316, 118, 56]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [5.226, 113, 56]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [1.687, 3, 56], 'false,false': [2.11e-08, 110, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [1.39, 2, 56], 'false,false,false': [7.6e-08, 101, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true,true,true': [2.63e-09, 3, 0], 'false,false': [3.28, 111, 56], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [1.39, 2, 56], 'false,false': [0.044, 114, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [2.646, 8, 56], 'false,false': [0.033, 104, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [2.142, 5, 56], 'false,false': [0.046, 101, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,true,false': 'movie(G, E), movie(G, B)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [1.687, 3, 56], 'false,false': [0.033, 98, 0], 'true': [0.0, 0, 0]}]]
[{'': [0.0, 0.22156086971744715], 'false,true,true': [-7.93016446160826e-18, nan], 'false,false': [0.06222222222222188, 7.401486830834377e-17], 'false': [-7.93016446160826e-18, 0.22618503276939517], 'false,true': [-7.93016446160826e-18, nan], 'false,false,true': [0.06222222222222188, nan]}, {'': [nan, 0.16243114707641504]}, {'': [nan, 0.1615788225961322]}, {'': [nan, 0.15617825280878916], 'false,true,true': [0.048261993679977855, nan], 'false,true': [0.048261993679977855, nan], 'false': [0.048261993679977855, 4.037174635000569e-18]}, {'': [nan, 0.10339837918388933], 'false,true,true': [-2.3129646346357427e-18, nan], 'false,false': [0.03329369797859621, 5.71599973074338e-17], 'false': [-2.3129646346357427e-18, 0.10436854881649534], 'false,true': [-2.3129646346357427e-18, nan], 'false,false,true': [0.03329369797859621, nan]}, {'': [nan, 0.06380834384575179], 'false,true,true': [2.3129646346357427e-18, nan], 'false,true': [2.3129646346357427e-18, nan], 'false': [2.3129646346357427e-18, 0.0644193225817915]}, {'': [nan, 0.06398619660462238], 'false,true,true': [0.033293697978597145, nan], 'false,true': [0.033293697978597145, nan], 'false': [0.033293697978597145, 1.6786435598115685e-05]}, {'': [nan, 0.06298554147778808], 'false,true,true': [0.10937500000000006, nan], 'false,true': [0.10937500000000006, nan], 'false': [0.10937500000000006, 1.0212569582454747e-05]}, {'': [nan, 0.0485314801534816], 'false,true,true': [0.0752485890889545, nan], 'false,true': [0.0752485890889545, nan], 'false': [0.0752485890889545, 2.0519763490226957e-05]}, {'': [nan, 0.036492881168380426], 'false,true': [nan, 0.04826199367997719], 'false': [0.04826199367997719, 1.1182584855246602e-05], 'false,true,false': [0.04826199367997719, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '0;false,false;genre(B, H), genre(I, H).;true;true', '0;false;genre(A, D), genre(E, D).;true;true', '3;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '4;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '4;false;genre(B, H), genre(I, H).;true;true', '5;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '6;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '7;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '8;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '9;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(B, F), genre(G, F) )
%   | | then if ( movie(H, A), movie(H, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048763;  // std dev = 8,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( female(A) )
%   | then return 0.689297767541692;  // std dev = 0,157, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.6913094771863096;  // std dev = 0,152, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8,56e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( female(A) )
%   | then return 0.562804854293486;  // std dev = 7,30e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5116700446814438;  // std dev = 0,193, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( female(A) )
%   | | then return 0.4230533378615835;  // std dev = 5,96e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.40980841926593303;  // std dev = 0,136, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.33047634228478007;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1015963294878363;  // std dev = 2,11e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.09269127618926097;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(B, E), genre(F, E) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.33162523569841146;  // std dev = 0,052, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2602553677590068;  // std dev = 0,009, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0926912761892608;  // std dev = 7,60e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 6,14e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2626187307222804;  // std dev = 0,045, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2133467506791458;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.21501204035344393;  // std dev = 0,039, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1785205683738836;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109158;  // std dev = 5,96e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.18094570572880647;  // std dev = 0,035, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15811145077052355;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333707;  // std dev = 4,71e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.15566086313549563;  // std dev = 0,031, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13818361146941646;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420265;  // std dev = 5,48e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.13628240400768277;  // std dev = 0,027, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1298032360783799;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 2,69e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */


Results
   AUC ROC   = 0.998813
   AUC PR    = 0.964914
   CLL	      = -0.084895
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total learning time: 2.624 seconds
Total inference time: 2.843 seconds
AUC ROC: 0.998813


Refined model AUC ROC: 0.998813


Dataset: cora->imdb(workedunder), Fold: 1, Type: transfer, Time: 00:49:48
{'Recall': 0.819018, 'AUC PR': 0.964914, 'F1': 0.809091, 'Mapping results': {'Knowledge compiling time': 0.4035341739654541, 'Total time': 2.969738483428955, 'Generating mappings time': 0.058483123779296875, 'Generating paths time': 2.47902250289917, 'Possible mappings': 126, 'Finding best mapping': 0.02869272232055664}, 'CLL': -0.084895, 'AUC ROC': 0.998813, 'Precision': [0.799401, 0.5], 'Inference time': 2.843, 'Learning time': 4.462, 'Parameter Learning results': {'Recall': 0.819018, 'AUC PR': 0.316701, 'F1': 0.512476, 'CLL': -0.170983, 'AUC ROC': 0.888593, 'Precision': [0.372905, 0.5], 'Inference time': 2.31, 'Learning time': 1.838}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,16e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8,69e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( female(A) )
%   | then return 0.5315206219270028;  // std dev = 0,124, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5331103429149548;  // std dev = 0,120, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3,33e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( female(A) )
%   | then return 0.4233239441278265;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.38420571078685073;  // std dev = 0,147, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 4,94e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( female(A) )
%   | then return 0.30422262040994125;  // std dev = 0,106, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.31382112980113896;  // std dev = 0,103, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6,32e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.264602994601142;  // std dev = 0,020, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.3062935644060603;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787767547310916;  // std dev = 5,77e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21639942353414174;  // std dev = 0,018, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.24573920573582328;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.16608737547382338;  // std dev = 0,071, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.17116898945595907;  // std dev = 0,069, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( actor(A) )
%   | then return -0.0732462257633371;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return -0.2589453042556057;  // std dev = 0,643, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333707;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06816039279686423;  // std dev = 0,019, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15817068119936556;  // std dev = 0,011, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.23116247579212465;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06411164052652281;  // std dev = 0,010, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( female(A) )
%   | then return 0.1250120030770469;  // std dev = 0,061, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13954170640599795;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09931
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.878 seconds
Total inference time: 2.247 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 1, Type: scratch, Time: 00:49:53
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 0.847854, 'CLL': -0.09931, 'AUC ROC': 1.0, 'Precision': [0.735892, 0.5], 'Inference time': 2.247, 'Learning time': 2.878}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.4192955493927002
   Generating paths time   = 2.511413097381592
   Generating mappings time   = 0.05943012237548828
   Possible mappings   = 126
   Finding best mapping   = 0.02868938446044922
   Total time   = 3.018834114074707


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,true,true;movie(G, A).;false;false
0;false,false;genre(B, H), genre(I, H).;true;false
0;false;genre(A, D), genre(E, D).;true;true
0;false,true;movie(F, E), movie(F, B).;true;false
0;false,false,true;movie(J, I), movie(J, A).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false,true,true;movie(G, B).;false;false
3;false,true;movie(F, E), movie(F, A).;true;true
3;false;genre(B, D), genre(E, D).;true;false
3;false,true,false;movie(H, E), movie(H, B).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, A).;false;false
4;false,false;genre(B, I), genre(J, I).;true;false
4;false;genre(A, D), genre(E, D).;true;true
4;false,false,true;movie(K, J), movie(K, A).;false;false
4;false,true;movie(F, E), movie(F, B).;true;true
4;false,true,false;genre(E, H), genre(B, H).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;true,true;movie(F, E), movie(F, B).;true;true
5;false,true;movie(K, J), movie(K, B).;true;false
5;false;genre(A, I), genre(J, I).;true;false
5;true,true,false;genre(H, C).;false;false
5;true,true,true;movie(G, A).;false;false
5;true;genre(B, D), genre(E, D).;true;false
5;false,true,true;movie(L, A).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;true,true;movie(F, E), movie(F, A).;true;true
6;false,true;movie(J, I), movie(J, A).;true;false
6;false;genre(B, H), genre(I, H).;true;false
6;true,true,false;genre(B, D).;false;false
6;true,true,true;movie(G, B).;false;false
6;true;genre(A, D), genre(E, D).;true;false
6;false,true,true;movie(K, B).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;true,true;movie(F, E), movie(F, B).;true;true
7;false,true;movie(K, J), movie(K, A).;true;false
7;false;genre(B, I), genre(J, I).;true;false
7;true,true,false;genre(H, C).;false;false
7;true,true,true;movie(G, A).;false;false
7;true;genre(B, D), genre(E, D).;true;false
7;false,true,true;movie(L, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;true,true;movie(F, E), movie(F, A).;true;true
8;false,true;movie(J, I), movie(J, A).;true;false
8;false;genre(B, H), genre(I, H).;true;false
8;true,true,false;genre(E, C).;false;false
8;true,true,true;movie(G, B).;false;false
8;true;genre(A, D), genre(E, D).;true;false
8;false,true,true;movie(K, B).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
9;false,true;genre(E, F), genre(A, F).;false;true
9;false;genre(B, D), genre(E, D).;true;false
9;false,true,false;movie(G, E), movie(G, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.8248156017661792;  // std dev = 1,390, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.16073516302592225;  // std dev = 5,315, 170,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.12029421747364652;  // std dev = 5,280, 183,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.6177102649818508;  // std dev = 1,689, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.15965172642418285;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.15965172642418313;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.13937707711359668;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.13937707711359665;  // std dev = 3,73e-09, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, I), genre(J, I) )
%   | | then if ( movie(K, J), movie(K, A) )
%   | | | then return 0.4699215589242754;  // std dev = 1,689, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | | else return -0.13937707711359668;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.13937707711359681;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.12348322911035478;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1234832291103548;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.04349158525576508;  // std dev = 3,358, 180,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H), genre(I, H) )
%   | then if ( movie(J, I), movie(J, A) )
%   | | then if ( movie(K, B) )
%   | | | then return 0.32794744846394436;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12826814641756454;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12699244705549603;  // std dev = 0,048, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.2530638079191437;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11141982496227032;  // std dev = 0,014, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.11351457183468874;  // std dev = 0,043, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.18605604806217288;  // std dev = 2,146, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.103767516021343;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.10231411874613625;  // std dev = 0,046, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return 0.12664175402901082;  // std dev = 2,365, 67,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.09346740378742793;  // std dev = 0,038, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */


Results
   AUC ROC   = 0.891992
   AUC PR    = 0.30595
   CLL	      = -0.169118
   Precision = 0.358593 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.498589


Total learning time: 1.776 seconds
Total inference time: 2.926 seconds
AUC ROC: 0.891992


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [1.39, 2, 58], 'false,false,false': [8.16e-08, 88, 0], 'false,false,true,false': [0.0, 1, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [5.315, 112, 58]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [5.28, 125, 58]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)', 'false,true,false': 'movie(H, E), movie(H, B)'}, {'false,false': [0.0, 109, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 3, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [1.689, 3, 58]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, I), genre(J, I)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, H), genre(B, H)', 'false,false,true': 'movie(K, J), movie(K, A)'}, {'false,false,true,true': [1.689, 3, 58], 'false,true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 102, 0], 'false,true,false,false': [3.73e-09, 4, 0], 'false,false,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true,true': [0.0, 6, 0], 'true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true,true,true': [0.0, 11, 0], 'false,false': [3.358, 122, 58], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'false,true': 'movie(J, I), movie(J, A)', 'false': 'genre(B, H), genre(I, H)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)', 'false,true,true': 'movie(K, B)'}, {'false,false': [0.048, 110, 0], 'false,true,true,true': [1.934, 4, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [2.63e-09, 3, 0], 'true,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [1.934, 4, 58], 'false,false': [0.043, 105, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.014, 5, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [2.146, 5, 58], 'false,false': [0.046, 116, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [2.63e-09, 5, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,true,false': 'movie(G, E), movie(G, B)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [2.365, 9, 58], 'false,false': [0.038, 110, 0], 'true': [0.0, 0, 0]}]]
[{'': [nan, 0.23477820880418293], 'false,true,true': [0.0, nan], 'false,false': [0.04676162321956422, 7.569702440626067e-17], 'false': [-2.7755575615628915e-18, 0.23773703887212294], 'false,true': [0.0, 0.0], 'false,false,true': [0.03222222222222181, 0.0]}, {'': [nan, 0.16617559343542168]}, {'': [nan, 0.15236206774472494]}, {'': [nan, 0.15443202478467788], 'false,true,true': [0.046761623219564806, nan], 'false,true': [0.046761623219564806, 0.0], 'false': [0.07156805465554794, -1.6296851737616978e-16], 'false,true,false': [0.0, nan]}, {'': [0.0, 0.10091552607388228], 'false,true,true': [-4.625929269271485e-18, nan], 'false,false': [0.05189864555591348, -8.054559198260939e-17], 'false': [-5.551115123125783e-18, 0.10411713757598087], 'false,true': [-4.625929269271485e-18, 3.469446951953614e-18], 'false,true,false': [nan, 3.469446951953614e-18], 'false,false,true': [0.04676162321956557, 0.0]}, {'': [nan, 0.06017240986439786], 'false,true,true': [0.0, nan], 'false,true': [0.0, 0.0], 'false': [2.135044278125301e-18, 0.06264022791130314]}, {'': [0.0, 0.06875065647450722], 'false,true,true': [0.06035379812695124, nan], 'true,true,true': [0.0, nan], 'false': [0.06673100186699364, 2.0749462995334706e-05], 'false,true': [0.06035379812695124, 2.3129646346357427e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [nan, 0.0527300607729915], 'false,true,true': [0.060353798126951096, nan], 'false,true': [0.060353798126951096, 4.036289484838085e-05], 'false': [0.06502699437893592, 1.7791682136153718e-05]}, {'': [nan, 0.04376019075428454], 'false,true,true': [0.07306626354245382, nan], 'false,true': [0.07306626354245382, 1.3877787807814458e-18], 'false': [0.07341590570496641, 1.8106004797701044e-05]}, {'': [nan, 0.042993625487852405], 'false,true': [nan, 0.0834492058049344], 'false': [0.0834492058049344, 1.3410194368127211e-05], 'false,true,false': [0.0834492058049344, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '0;false,true;movie(J, I), movie(J, A).;true;true', '0;true;movie(F, E), movie(F, B).;true;true', '0;false;genre(B, H), genre(I, H).;true;true', '3;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '3;true;movie(F, E), movie(F, A).;true;true', '4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '4;false,false,true;movie(K, J), movie(K, A).;true;true', '4;false,true;movie(F, E), movie(F, B).;true;true', '4;false;genre(A, D), genre(E, D).;true;true', '4;false,false;genre(B, I), genre(J, I).;true;true', '5;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '5;true;movie(F, E), movie(F, B).;true;true', '6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '6;false,true;movie(J, I), movie(J, A).;true;true', '6;false;genre(B, H), genre(I, H).;true;true', '7;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '7;true;movie(F, E), movie(F, A).;true;true', '8;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '8;true;movie(F, E), movie(F, A).;true;true', '9;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, B) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, F), genre(G, F) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then if ( female(A) )
%   | | | then return 0.8105298874804645;  // std dev = 0,976, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.8581489350995115;  // std dev = 2,60e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14185106490048763;  // std dev = 8,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7289832469462054;  // std dev = 2,36e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.719473412210955;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.22566265979041036;  // std dev = 0,123, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5647559703763687;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462843;  // std dev = 1,97e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.19763210500208084;  // std dev = 0,060, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( female(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then if ( female(A) )
%   | | then return 0.39497550641521756;  // std dev = 0,132, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.40420307355199875;  // std dev = 0,082, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return -0.08586940648396375;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.10159632948783624;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926097;  // std dev = 1,86e-09, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, G), genre(H, G) )
%   | | then if ( movie(I, H), movie(I, A) )
%   | | | then return 0.2968365507293652;  // std dev = 1,019, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | | else return -0.07936433861773662;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926105;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, B) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09513245196252247;  // std dev = 0,054, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.0851847513883968;  // std dev = 3,73e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.08518475138839679;  // std dev = 2,08e-09, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2697126090044541;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.26230385890101365;  // std dev = 5,16e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.20257522463716074;  // std dev = 0,316, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1334790835270761;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.21657438640622492;  // std dev = 0,019, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.2930188663301579;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.0787767547310917;  // std dev = 2,79e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07848919628818367;  // std dev = 0,000788, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then if ( female(A) )
%   | | then return 0.16537405191292098;  // std dev = 0,088, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.13176073203572158;  // std dev = 0,134, 43,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=38 */
%   | else return -0.06105654830374828;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return -0.07285439880009745;  // std dev = 0,000715, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then return 0.1544810123727259;  // std dev = 0,055, 59,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | else return -0.05764865060010285;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.0684269778442027;  // std dev = 1,39e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.06804300606161762;  // std dev = 0,000708, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( female(A) )
%   | | then return 0.1415806490249844;  // std dev = 4,17e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1419547614648052;  // std dev = 6,18e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(A) )
%   | | then return -0.14864966311548464;  // std dev = 0,258, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14025033396378894;  // std dev = 0,189, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( female(B) )
%   | | then return -0.06423845904019464;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06366020839473939;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081328
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 3.165 seconds
Total inference time: 2.556 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 2, Type: transfer, Time: 00:50:07
{'Recall': 0.817901, 'AUC PR': 1.0, 'F1': 0.89983, 'Mapping results': {'Knowledge compiling time': 0.4192955493927002, 'Total time': 3.018834114074707, 'Generating mappings time': 0.05943012237548828, 'Generating paths time': 2.511413097381592, 'Possible mappings': 126, 'Finding best mapping': 0.02868938446044922}, 'CLL': -0.081328, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.556, 'Learning time': 4.941, 'Parameter Learning results': {'Recall': 0.817901, 'AUC PR': 0.30595, 'F1': 0.498589, 'CLL': -0.169118, 'AUC ROC': 0.891992, 'Precision': [0.358593, 0.5], 'Inference time': 2.926, 'Learning time': 1.776}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 2,98e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7,88e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( female(A) )
%   | then return 0.7194734122109542;  // std dev = 5,96e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.6978088468073818;  // std dev = 0,134, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5588670962570225;  // std dev = 0,019, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.2249948748433526;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11345328416090307;  // std dev = 0,111, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10149260593919963;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42011851590560384;  // std dev = 0,019, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.18791832790845622;  // std dev = 0,004, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09260442251535571;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3224806293511848;  // std dev = 0,017, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.16100990085527522;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08511103453223952;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2563801371402214;  // std dev = 0,015, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1405527876779666;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07871345170518765;  // std dev = 4,94e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21061139628086914;  // std dev = 0,013, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12402191552366248;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07319130786377694;  // std dev = 5,16e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17772288670128547;  // std dev = 0,011, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11241992458371;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15321920665677813;  // std dev = 0,010, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10086077936945899;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06870968662253267;  // std dev = 0,042, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13437824924540234;  // std dev = 0,009, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09207514343241126;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06483137474930153;  // std dev = 0,056, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079421
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.389 seconds
Total inference time: 2.001 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 2, Type: scratch, Time: 00:50:12
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 0.848168, 'CLL': -0.079421, 'AUC ROC': 1.0, 'Precision': [0.736364, 0.5], 'Inference time': 2.001, 'Learning time': 2.389}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.5520286560058594
   Generating paths time   = 2.457280397415161
   Generating mappings time   = 0.059947967529296875
   Possible mappings   = 126
   Finding best mapping   = 0.0283355712890625
   Total time   = 3.0975985527038574


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,true,true;movie(G, A).;false;false
0;false,false;genre(B, H), genre(I, H).;true;false
0;false;genre(A, D), genre(E, D).;true;true
0;false,true;movie(F, E), movie(F, B).;true;false
0;false,false,true;movie(J, I), movie(J, A).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false,true,true;movie(G, B).;false;false
3;false,true;movie(F, E), movie(F, A).;true;true
3;false;genre(B, D), genre(E, D).;true;false
3;false,true,false;movie(H, E), movie(H, B).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, A).;false;false
4;false,false;genre(B, I), genre(J, I).;true;false
4;false;genre(A, D), genre(E, D).;true;true
4;false,false,true;movie(K, J), movie(K, A).;false;false
4;false,true;movie(F, E), movie(F, B).;true;true
4;false,true,false;genre(E, H), genre(B, H).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;true,true;movie(F, E), movie(F, B).;true;true
5;false,true;movie(K, J), movie(K, B).;true;false
5;false;genre(A, I), genre(J, I).;true;false
5;true,true,false;genre(H, C).;false;false
5;true,true,true;movie(G, A).;false;false
5;true;genre(B, D), genre(E, D).;true;false
5;false,true,true;movie(L, A).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;true,true;movie(F, E), movie(F, A).;true;true
6;false,true;movie(J, I), movie(J, A).;true;false
6;false;genre(B, H), genre(I, H).;true;false
6;true,true,false;genre(B, D).;false;false
6;true,true,true;movie(G, B).;false;false
6;true;genre(A, D), genre(E, D).;true;false
6;false,true,true;movie(K, B).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;true,true;movie(F, E), movie(F, B).;true;true
7;false,true;movie(K, J), movie(K, A).;true;false
7;false;genre(B, I), genre(J, I).;true;false
7;true,true,false;genre(H, C).;false;false
7;true,true,true;movie(G, A).;false;false
7;true;genre(B, D), genre(E, D).;true;false
7;false,true,true;movie(L, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;true,true;movie(F, E), movie(F, A).;true;true
8;false,true;movie(J, I), movie(J, A).;true;false
8;false;genre(B, H), genre(I, H).;true;false
8;true,true,false;genre(E, C).;false;false
8;true,true,true;movie(G, B).;false;false
8;true;genre(A, D), genre(E, D).;true;false
8;false,true,true;movie(K, B).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
9;false,true;genre(E, F), genre(A, F).;false;true
9;false;genre(B, D), genre(E, D).;true;false
9;false,true,false;movie(G, E), movie(G, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.7239207471800468;  // std dev = 4,161, 149,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=129 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.025384429980058174;  // std dev = 6,388, 293,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=49 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return 0.14790506556459437;  // std dev = 10,191, 557,000 (wgt'ed) examples reached here.  /* #neg=379 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.13001655170662174;  // std dev = 10,097, 549,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.5438848793960661;  // std dev = 4,335, 151,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.1592352203053262;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.047204887810724454;  // std dev = 6,496, 371,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=49 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.15301664512729857;  // std dev = 3,16e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.15301664512729862;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( genre(B, I), genre(J, I) )
%   | | then if ( movie(K, J), movie(K, A) )
%   | | | then return 0.423227890885092;  // std dev = 4,250, 150,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=129 */
%   | | | else return -0.1390545710389307;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.014253041080605966;  // std dev = 6,409, 303,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, H), genre(I, H) )
%   | then if ( movie(J, I), movie(J, B) )
%   | | then if ( movie(K, A) )
%   | | | then return -0.13421995461272856;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.13448854441418423;  // std dev = 0,005, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.08385680187029723;  // std dev = 8,455, 480,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H), genre(I, H) )
%   | then if ( movie(J, I), movie(J, A) )
%   | | then if ( movie(K, B) )
%   | | | then return 0.2971315071191134;  // std dev = 4,250, 150,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.13183909461825308;  // std dev = 0,012, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.05292464631343646;  // std dev = 6,500, 392,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H), genre(I, H) )
%   | then if ( movie(J, I), movie(J, A) )
%   | | then if ( movie(K, B) )
%   | | | then return 0.2434285509857105;  // std dev = 3,974, 147,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11746817526546154;  // std dev = 0,011, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.029223493694690232;  // std dev = 6,429, 357,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H), genre(I, H) )
%   | then if ( movie(J, I), movie(J, A) )
%   | | then if ( movie(K, B) )
%   | | | then return 0.17144509573900985;  // std dev = 4,250, 150,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10562427923921229;  // std dev = 0,010, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.017518754541536948;  // std dev = 6,403, 335,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return -0.09008604577607587;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return 0.08269595248286338;  // std dev = 4,738, 177,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.01018059195256135;  // std dev = 6,387, 322,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=49 */


Results
   AUC ROC   = 0.961324
   AUC PR    = 0.348021
   CLL	      = -0.221052
   Precision = 0.362617 at threshold = 0.5
   Recall    = 0.95098
   F1        = 0.525034


Total learning time: 3.296 seconds
Total inference time: 3.006 seconds
AUC ROC: 0.961324


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [4.161, 20, 129], 'false,false,false': [6.388, 244, 49], 'false,false,true,false': [0.0, 17, 0], 'true': [0.0, 14, 0], 'false,true,true,true': [3.33e-08, 34, 0], 'false,true,false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 19, 0], 'false': [10.191, 379, 178]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 6, 0], 'false': [10.097, 371, 178]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)', 'false,true,false': 'movie(H, E), movie(H, B)'}, {'false,false': [6.496, 322, 49], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 17, 0], 'true': [0.0, 14, 0], 'false,true,true,true': [4.335, 22, 129]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, I), genre(J, I)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, H), genre(B, H)', 'false,false,true': 'movie(K, J), movie(K, A)'}, {'false,false,true,true': [4.25, 21, 129], 'false,true,true,false': [0.0, 0, 0], 'false,false,false': [6.409, 254, 49], 'false,true,false,false': [0.0, 21, 0], 'false,false,true,false': [2.11e-08, 25, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true,true': [3.16e-08, 36, 0], 'true': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, B)', 'false,true': 'movie(J, I), movie(J, B)', 'false': 'genre(A, H), genre(I, H)', 'true,true,true': 'movie(G, A)', 'true': 'genre(B, D), genre(E, D)', 'false,true,true': 'movie(K, A)'}, {'false,false': [8.455, 302, 178], 'false,true,true,true': [0.0, 36, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.005, 18, 0], 'true,true,true,true': [2.63e-09, 7, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'false,true': 'movie(J, I), movie(J, A)', 'false': 'genre(B, H), genre(I, H)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)', 'false,true,true': 'movie(K, B)'}, {'false,false': [6.5, 343, 49], 'false,true,true,true': [4.25, 21, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.012, 24, 0], 'true,true,true,true': [0.0, 11, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, B)', 'false,true': 'movie(J, I), movie(J, A)', 'false': 'genre(B, H), genre(I, H)', 'true,true,true': 'movie(G, A)', 'true': 'genre(B, D), genre(E, D)', 'false,true,true': 'movie(K, B)'}, {'false,false': [6.429, 308, 49], 'false,true,true,true': [3.974, 18, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.011, 24, 0], 'true,true,true,true': [0.0, 13, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'false,true': 'movie(J, I), movie(J, A)', 'false': 'genre(B, H), genre(I, H)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)', 'false,true,true': 'movie(K, B)'}, {'false,false': [6.403, 286, 49], 'false,true,true,true': [4.25, 21, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.01, 18, 0], 'true,true,true,true': [2.63e-09, 12, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,true,false': 'movie(G, E), movie(G, B)'}, {'false,true,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [4.738, 48, 129], 'false,false': [6.387, 273, 49], 'true': [6.97e-09, 13, 0]}]]
[{'': [-1.1895246692412391e-17, 0.2269982115570971], 'false,true,true': [3.2653618371328135e-17, nan], 'false,false': [0.17321091595297297, 0.13926778413260596], 'false': [5.551115123125783e-17, 0.23741106222203587], 'false,true': [3.2653618371328135e-17, -3.0839528461809902e-18], 'false,false,true': [0.1162109814873249, -3.2653618371328133e-18]}, {'': [0.0, 0.1864453423026496]}, {'': [0.0, 0.18570225439574076]}, {'': [-3.96508223080413e-18, 0.18517325460707], 'false,true,true': [0.12446822507784393, nan], 'false,true': [0.12446822507784393, -1.959217102279688e-17], 'false': [0.15683737024813754, 0.11374329725392969], 'false,true,false': [-1.959217102279688e-17, nan]}, {'': [0.0, 0.15656174913582876], 'false,true,true': [2.7755575615628914e-17, nan], 'false,false': [0.14191366126375593, 0.13556405145464845], 'false': [5.843279076974508e-17, 0.16749185628955082], 'false,true': [2.7755575615628914e-17, 0.0], 'false,true,false': [nan, 0.0], 'false,false,true': [0.1204000000000004, 1.7763568394002505e-17]}, {'': [9.912705577010326e-19, 0.13820564972935145], 'true,true': [9.912705577010326e-19, nan], 'true,true,true': [9.912705577010326e-19, nan], 'false': [4.2482727965105954e-07, 0.14894060543240475], 'false,true': [0.0, 1.2263881845855608e-06], 'true': [9.912705577010326e-19, nan], 'false,true,true': [0.0, nan]}, {'': [0.0, 0.1312923867246366], 'false,true,true': [0.1204000000000002, nan], 'true,true,true': [0.0, nan], 'false': [0.12567452158730083, 0.1077734278140597], 'false,true': [0.1204000000000002, 5.990857137797938e-06], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.12407434566639719], 'false,true,true': [0.10745522698875432, nan], 'true,true,true': [0.0, nan], 'false': [0.10808904067913615, 0.11576989529359066], 'false,true': [0.10745522698875432, 4.905604270771802e-06], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [5.782411586589357e-19, 0.12551167347714715], 'false,true,true': [0.1203999999999999, nan], 'true,true,true': [5.782411586589357e-19, nan], 'false': [0.1148443891851907, 0.12238794747114162], 'false,true': [0.1203999999999999, 5.276546164613581e-06], 'true': [5.782411586589357e-19, nan], 'true,true': [5.782411586589357e-19, nan]}, {'': [3.736327486719277e-18, 0.1284745436199696], 'false,true': [0.0, 0.12682560109214716], 'false': [0.12627987244534922, 0.12668072639370567], 'false,true,false': [0.12682560109214716, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '0;false,false,true;movie(J, I), movie(J, A).;true;true', '0;false,true;movie(F, E), movie(F, B).;true;true', '0;false;genre(A, D), genre(E, D).;true;true', '0;false,false;genre(B, H), genre(I, H).;true;true', '1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '3;false,true;movie(F, E), movie(F, A).;true;true', '3;false;genre(B, D), genre(E, D).;true;true', '4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '4;false,false,true;movie(K, J), movie(K, A).;true;true', '4;false,true;movie(F, E), movie(F, B).;true;true', '4;false;genre(A, D), genre(E, D).;true;true', '4;false,false;genre(B, I), genre(J, I).;true;true', '5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '5;false,true;movie(J, I), movie(J, B).;true;true', '5;false;genre(A, H), genre(I, H).;true;true', '6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '6;false,true;movie(J, I), movie(J, A).;true;true', '6;false;genre(B, H), genre(I, H).;true;true', '7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;false,true;movie(J, I), movie(J, A).;true;true', '7;false;genre(B, H), genre(I, H).;true;true', '8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '8;false,true;movie(J, I), movie(J, A).;true;true', '8;false;genre(B, H), genre(I, H).;true;true', '9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '9;false,true;genre(E, F), genre(A, F).;true;true', '9;false;genre(B, D), genre(E, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( genre(B, G), genre(H, G) )
%   | | then if ( movie(I, H), movie(I, A) )
%   | | | then return 0.7239207471800468;  // std dev = 4,161, 149,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=129 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( director(B), female(A) )
%   | | | then return 0.7152917922423693;  // std dev = 2,449, 49,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=42 */
%   | | | else return -0.11101406049520199;  // std dev = 2,605, 227,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.7465217570527716;  // std dev = 0,008, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.7556127857426624;  // std dev = 0,318, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( female(A) )
%   | | | then return -0.22783483370508734;  // std dev = 0,256, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.17223722553833742;  // std dev = 0,269, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( actor(A) )
%   | | then return -0.12886697058698718;  // std dev = 0,000, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.1270924280380857;  // std dev = 0,009, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.12636196464719018;  // std dev = 0,015, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.5826418752032418;  // std dev = 0,010, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.5936784596866022;  // std dev = 0,460, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( actor(A) )
%   | | | then return -0.11507884677447142;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.11336816890655019;  // std dev = 0,007, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return -0.19349347167548206;  // std dev = 0,246, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.1608502668695927;  // std dev = 0,302, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( actor(A) )
%   | | | then return -0.1150788467744713;  // std dev = 6,32e-08, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | | else return -0.11311330626236261;  // std dev = 0,013, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( female(A) )
%   | | | then return 0.37746091956252487;  // std dev = 1,318, 52,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=47 */
%   | | | else return 0.36380522155139955;  // std dev = 1,876, 92,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | | else if ( actor(A) )
%   | | | then return -0.08879159328359311;  // std dev = 0,013, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.10143996859506109;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4674261605992152;  // std dev = 0,484, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.1253999707091524;  // std dev = 0,219, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( actor(A) )
%   | | | then return -0.10386865002015326;  // std dev = 0,000, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | | else return -0.10246552704223605;  // std dev = 0,013, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( female(B) )
%   | | | then return -0.09242700423846473;  // std dev = 0,000153, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.09243635247320753;  // std dev = 0,000202, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.09247423742453355;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( genre(B, G), genre(H, G) )
%   | | then if ( movie(I, H), movie(I, A) )
%   | | | then return 0.26275670588611166;  // std dev = 2,541, 150,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=129 */
%   | | | else return -0.08418753337315164;  // std dev = 0,026, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.21964036346400773;  // std dev = 1,856, 69,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=49 */
%   | | | else return -0.09467997267151193;  // std dev = 0,003, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( female(B) )
%   | | | then return -0.08496937457617719;  // std dev = 0,000127, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08497063750413347;  // std dev = 0,000174, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.085000521755693;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.29498268080408074;  // std dev = 0,471, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.08682487060922456;  // std dev = 0,000904, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( director(B), actor(A) )
%   | | | then return -0.1871338068693361;  // std dev = 0,827, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.086833814813903;  // std dev = 0,003, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( female(A) )
%   | | | then return 0.15419189416849607;  // std dev = 1,357, 56,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=47 */
%   | | | else return 0.1772634419619305;  // std dev = 1,515, 92,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | | else if ( actor(A) )
%   | | | then return -0.06267354332280933;  // std dev = 0,008, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07910336280853132;  // std dev = 0,000439, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.2510287639126058;  // std dev = 0,416, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.11941963928531417;  // std dev = 0,187, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( actor(A) )
%   | | | then return -0.08014789906112411;  // std dev = 4,47e-06, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | | | else return -0.07923715772718255;  // std dev = 0,009, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( female(A) )
%   | | | then return 0.14252345303501882;  // std dev = 1,230, 54,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=47 */
%   | | | else return 0.1618721253222778;  // std dev = 1,305, 89,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=82 */
%   | | else if ( actor(A) )
%   | | | then return -0.05885965982273593;  // std dev = 0,007, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.073584323916296;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.20757073062225978;  // std dev = 0,373, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.10821598388922599;  // std dev = 0,212, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( actor(A) )
%   | | | then return -0.07443435296388959;  // std dev = 3,85e-06, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | | | else return -0.07376709268499526;  // std dev = 0,008, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( female(A) )
%   | | | then return 0.09589864026048604;  // std dev = 1,453, 57,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=47 */
%   | | | else return 0.11535195971521463;  // std dev = 1,634, 93,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=82 */
%   | | else if ( actor(A) )
%   | | | then return -0.057067826649825744;  // std dev = 0,007, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06872283943075458;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.1759892997058932;  // std dev = 0,336, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.10639278383132827;  // std dev = 0,168, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( actor(A) )
%   | | | then return -0.06946593356746551;  // std dev = 3,58e-06, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | | | else return -0.06885081439213503;  // std dev = 0,009, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return -0.06406477496311444;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.16465674833574417;  // std dev = 0,052, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.2328239444693795;  // std dev = 0,889, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(H, A), movie(H, B) )
%   | | | then return 0.15224804295980968;  // std dev = 0,303, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.0955642534317723;  // std dev = 0,163, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( actor(A) )
%   | | | then return -0.06510772854323285;  // std dev = 3,37e-06, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | | | else return -0.06463526907317316;  // std dev = 0,008, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074495
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.195 seconds
Total inference time: 2.858 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: transfer, Time: 00:50:30
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'Mapping results': {'Knowledge compiling time': 0.5520286560058594, 'Total time': 3.0975985527038574, 'Generating mappings time': 0.059947967529296875, 'Generating paths time': 2.457280397415161, 'Possible mappings': 126, 'Finding best mapping': 0.0283355712890625}, 'CLL': -0.074495, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.858, 'Learning time': 8.491, 'Parameter Learning results': {'Recall': 0.95098, 'AUC PR': 0.348021, 'F1': 0.525034, 'CLL': -0.221052, 'AUC ROC': 0.961324, 'Precision': [0.362617, 0.5], 'Inference time': 3.006, 'Learning time': 3.296}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.1418510649004881;  // std dev = 0,000, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.12544463852839183;  // std dev = 0,000, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1123163781936063;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.11231637819360686;  // std dev = 0,000, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 3,80e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.10159632948783658;  // std dev = 0,000, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.09269127618926067;  // std dev = 0,000, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.08518475138839678;  // std dev = 8,43e-08, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07877675473109146;  // std dev = 4,94e-08, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07324622576333682;  // std dev = 9,54e-08, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2,11e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06842697784420283;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06419184008202625;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.854 seconds
Total inference time: 2.184 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: scratch, Time: 00:50:36
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'CLL': -0.063555, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.184, 'Learning time': 3.854}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.5153892040252686
   Generating paths time   = 2.4997189044952393
   Generating mappings time   = 0.05906057357788086
   Possible mappings   = 126
   Finding best mapping   = 0.028328657150268555
   Total time   = 3.1025030612945557


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,true,true;movie(G, A).;false;false
0;false,false;genre(B, H), genre(I, H).;true;false
0;false;genre(A, D), genre(E, D).;true;true
0;false,true;movie(F, E), movie(F, B).;true;false
0;false,false,true;movie(J, I), movie(J, A).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false,true,true;movie(G, B).;false;false
3;false,true;movie(F, E), movie(F, A).;true;true
3;false;genre(B, D), genre(E, D).;true;false
3;false,true,false;movie(H, E), movie(H, B).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, A).;false;false
4;false,false;genre(B, I), genre(J, I).;true;false
4;false;genre(A, D), genre(E, D).;true;true
4;false,false,true;movie(K, J), movie(K, A).;false;false
4;false,true;movie(F, E), movie(F, B).;true;true
4;false,true,false;genre(E, H), genre(B, H).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;true,true;movie(F, E), movie(F, B).;true;true
5;false,true;movie(K, J), movie(K, B).;true;false
5;false;genre(A, I), genre(J, I).;true;false
5;true,true,false;genre(H, C).;false;false
5;true,true,true;movie(G, A).;false;false
5;true;genre(B, D), genre(E, D).;true;false
5;false,true,true;movie(L, A).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;true,true;movie(F, E), movie(F, A).;true;true
6;false,true;movie(J, I), movie(J, A).;true;false
6;false;genre(B, H), genre(I, H).;true;false
6;true,true,false;genre(B, D).;false;false
6;true,true,true;movie(G, B).;false;false
6;true;genre(A, D), genre(E, D).;true;false
6;false,true,true;movie(K, B).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;true,true;movie(F, E), movie(F, B).;true;true
7;false,true;movie(K, J), movie(K, A).;true;false
7;false;genre(B, I), genre(J, I).;true;false
7;true,true,false;genre(H, C).;false;false
7;true,true,true;movie(G, A).;false;false
7;true;genre(B, D), genre(E, D).;true;false
7;false,true,true;movie(L, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;true,true;movie(F, E), movie(F, A).;true;true
8;false,true;movie(J, I), movie(J, A).;true;false
8;false;genre(B, H), genre(I, H).;true;false
8;true,true,false;genre(E, C).;false;false
8;true,true,true;movie(G, B).;false;false
8;true;genre(A, D), genre(E, D).;true;false
8;false,true,true;movie(K, B).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
9;false,true;genre(E, F), genre(A, F).;false;true
9;false;genre(B, D), genre(E, D).;true;false
9;false,true,false;movie(G, E), movie(G, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.7405018762759829;  // std dev = 2,301, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048766;  // std dev = 6,66e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.16647902726048985;  // std dev = 4,767, 132,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.16048760333641;  // std dev = 4,623, 124,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.5086938786424026;  // std dev = 2,739, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.1659115780314425;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.14420487052213124;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.5131737310739094;  // std dev = 1,384, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14420487052213107;  // std dev = 6,50e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.12730493999132816;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.03724024732158978;  // std dev = 3,416, 133,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.3190738789837454;  // std dev = 2,121, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.13086096017030058;  // std dev = 0,030, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H), genre(I, H) )
%   | then if ( movie(J, I), movie(J, A) )
%   | | then if ( movie(K, B) )
%   | | | then return 0.28147041349940277;  // std dev = 1,677, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11530735304384541;  // std dev = 0,050, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H), genre(I, H) )
%   | then if ( movie(J, I), movie(J, A) )
%   | | then if ( movie(K, B) )
%   | | | then return 0.16586217702030084;  // std dev = 2,301, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10497393900491164;  // std dev = 0,032, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return 0.1694243546017656;  // std dev = 1,917, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.09426363537437685;  // std dev = 0,041, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */


Results
   AUC ROC   = 0.894286
   AUC PR    = 0.328486
   CLL	      = -0.16025
   Precision = 0.385576 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.52552


Total learning time: 1.727 seconds
Total inference time: 3.134 seconds
AUC ROC: 0.894286


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [2.301, 6, 45], 'false,false,false': [6.66e-08, 65, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 5, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 2, 0], 'false': [4.767, 87, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [4.623, 79, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [2.739, 9, 45], 'false,false': [0.0, 77, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [1.384, 2, 45], 'false,false,false': [6.5e-08, 88, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 7, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true,true,true': [0.0, 5, 0], 'false,false': [3.416, 88, 45], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [2.121, 5, 45], 'false,false': [0.03, 83, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, B)', 'false,true': 'movie(J, I), movie(J, A)', 'false': 'genre(B, H), genre(I, H)', 'true,true,true': 'movie(G, A)', 'true': 'genre(B, D), genre(E, D)', 'false,true,true': 'movie(K, B)'}, {'false,false': [0.05, 90, 0], 'false,true,true,true': [1.677, 3, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'false,true': 'movie(J, I), movie(J, A)', 'false': 'genre(B, H), genre(I, H)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)', 'false,true,true': 'movie(K, B)'}, {'false,false': [0.032, 84, 0], 'false,true,true,true': [2.301, 6, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,true,false': 'movie(G, E), movie(G, B)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [1.917, 4, 45], 'false,false': [0.041, 72, 0], 'true': [0.0, 0, 0]}]]
[{'': [nan, 0.23359060173485494], 'false,true,true': [-2.7755575615628915e-18, nan], 'false,false': [0.10380622837370317, 6.832141690000964e-17], 'false': [-2.7755575615628915e-18, 0.23744054696789615], 'false,true': [-2.7755575615628915e-18, nan], 'false,false,true': [0.10380622837370317, nan]}, {'': [0.0, 0.17218058725283214]}, {'': [nan, 0.17234921160016656]}, {'': [nan, 0.16751790147427442], 'false,true,true': [0.1388888888888894, nan], 'false,true': [0.1388888888888894, nan], 'false': [0.1388888888888894, -9.804566970715668e-17]}, {'': [nan, 0.10917722564850166], 'false,true,true': [-7.93016446160826e-18, nan], 'false,false': [0.040742417383431706, 4.794144879063176e-17], 'false': [-7.93016446160826e-18, 0.11225619109778187], 'false,true': [-7.93016446160826e-18, nan], 'false,false,true': [0.040742417383431706, nan]}, {'': [nan, 0.08548839587466595], 'false,true,true': [0.0, nan], 'false,true': [0.0, nan], 'false': [0.0, 0.08772126278320923]}, {'': [nan, 0.08133596358715821], 'false,true,true': [0.08999999999999993, nan], 'false,true': [0.08999999999999993, nan], 'false': [0.08999999999999993, 1.0890300955559348e-05]}, {'': [0.0, 0.05611082065437214], 'false,true,true': [0.058593750000000305, nan], 'true,true,true': [0.0, nan], 'false': [0.058593750000000305, 2.742783593325804e-05], 'false,true': [0.058593750000000305, nan], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.056465399536798216], 'false,true,true': [0.10380622837370254, nan], 'true,true,true': [0.0, nan], 'false': [0.10380622837370254, 1.1921687436102144e-05], 'false,true': [0.10380622837370254, nan], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [nan, 0.04712785513144932], 'false,true': [nan, 0.07496876301541028], 'false': [0.07496876301541028, 2.3244592489061868e-05], 'false,true,false': [0.07496876301541028, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '0;false;genre(B, H), genre(I, H).;true;true', '1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '3;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '4;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '4;false;genre(B, H), genre(I, H).;true;true', '5;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '6;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;false;genre(B, H), genre(I, H).;true;true', '8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '8;false;genre(B, H), genre(I, H).;true;true', '9;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(B, E), genre(F, E) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.12544463852839144;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 5,77e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783616;  // std dev = 5,96e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.09427735778525707;  // std dev = 0,010, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, E), genre(F, E) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09269127618926105;  // std dev = 2,11e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.10066377188059854;  // std dev = 0,164, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 4,47e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07867569476366333;  // std dev = 0,003, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07313662068035214;  // std dev = 0,003, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08095202293498016;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06833020092365844;  // std dev = 0,003, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06731701991058904;  // std dev = 0,013, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06415113639706478;  // std dev = 0,002, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */


Results
   AUC ROC   = 0.999645
   AUC PR    = 0.987448
   CLL	      = -0.071757
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total learning time: 1.994 seconds
Total inference time: 2.579 seconds
AUC ROC: 0.999645


Refined model AUC ROC: 0.999645


Dataset: cora->imdb(workedunder), Fold: 4, Type: transfer, Time: 00:50:50
{'Recall': 0.824926, 'AUC PR': 0.987448, 'F1': 0.904065, 'Mapping results': {'Knowledge compiling time': 0.5153892040252686, 'Total time': 3.1025030612945557, 'Generating mappings time': 0.05906057357788086, 'Generating paths time': 2.4997189044952393, 'Possible mappings': 126, 'Finding best mapping': 0.028328657150268555}, 'CLL': -0.071757, 'AUC ROC': 0.999645, 'Precision': [1.0, 0.5], 'Inference time': 2.579, 'Learning time': 3.721, 'Parameter Learning results': {'Recall': 0.824926, 'AUC PR': 0.328486, 'F1': 0.52552, 'CLL': -0.16025, 'AUC ROC': 0.894286, 'Precision': [0.385576, 0.5], 'Inference time': 3.134, 'Learning time': 1.727}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839155;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360624;  // std dev = 6,50e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783617;  // std dev = 5,77e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 1,05e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,98e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109161;  // std dev = 5,16e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333704;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 2,69e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06636971242656832;  // std dev = 0,169, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065675
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.454 seconds
Total inference time: 2.352 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 4, Type: scratch, Time: 00:50:55
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'CLL': -0.065675, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.352, 'Learning time': 2.454}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.5983247756958008
   Generating paths time   = 2.482058525085449
   Generating mappings time   = 0.05927300453186035
   Possible mappings   = 126
   Finding best mapping   = 0.02830219268798828
   Total time   = 3.167963981628418


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,true,true;movie(G, A).;false;false
0;false,false;genre(B, H), genre(I, H).;true;false
0;false;genre(A, D), genre(E, D).;true;true
0;false,true;movie(F, E), movie(F, B).;true;false
0;false,false,true;movie(J, I), movie(J, A).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false,true,true;movie(G, B).;false;false
3;false,true;movie(F, E), movie(F, A).;true;true
3;false;genre(B, D), genre(E, D).;true;false
3;false,true,false;movie(H, E), movie(H, B).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, A).;false;false
4;false,false;genre(B, I), genre(J, I).;true;false
4;false;genre(A, D), genre(E, D).;true;true
4;false,false,true;movie(K, J), movie(K, A).;false;false
4;false,true;movie(F, E), movie(F, B).;true;true
4;false,true,false;genre(E, H), genre(B, H).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;true,true;movie(F, E), movie(F, B).;true;true
5;false,true;movie(K, J), movie(K, B).;true;false
5;false;genre(A, I), genre(J, I).;true;false
5;true,true,false;genre(H, C).;false;false
5;true,true,true;movie(G, A).;false;false
5;true;genre(B, D), genre(E, D).;true;false
5;false,true,true;movie(L, A).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;true,true;movie(F, E), movie(F, A).;true;true
6;false,true;movie(J, I), movie(J, A).;true;false
6;false;genre(B, H), genre(I, H).;true;false
6;true,true,false;genre(B, D).;false;false
6;true,true,true;movie(G, B).;false;false
6;true;genre(A, D), genre(E, D).;true;false
6;false,true,true;movie(K, B).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;true,true;movie(F, E), movie(F, B).;true;true
7;false,true;movie(K, J), movie(K, A).;true;false
7;false;genre(B, I), genre(J, I).;true;false
7;true,true,false;genre(H, C).;false;false
7;true,true,true;movie(G, A).;false;false
7;true;genre(B, D), genre(E, D).;true;false
7;false,true,true;movie(L, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;true,true;movie(F, E), movie(F, A).;true;true
8;false,true;movie(J, I), movie(J, A).;true;false
8;false;genre(B, H), genre(I, H).;true;false
8;true,true,false;genre(E, C).;false;false
8;true,true,true;movie(G, B).;false;false
8;true;genre(A, D), genre(E, D).;true;false
8;false,true,true;movie(K, B).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
9;false,true;genre(E, F), genre(A, F).;false;true
9;false;genre(B, D), genre(E, D).;true;false
9;false,true,false;movie(G, E), movie(G, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.04284116391038867;  // std dev = 3,002, 101,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.2117412059120368;  // std dev = 4,675, 114,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.11619555358336998;  // std dev = 4,878, 139,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.5462690875888633;  // std dev = 1,895, 39,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.1866292141169443;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.080782388056064;  // std dev = 3,000, 101,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, F), genre(G, F) )
%   | | then if ( movie(H, G), movie(H, A) )
%   | | | then return 0.43795749031383235;  // std dev = 1,662, 38,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.05494894506176225;  // std dev = 2,977, 88,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.15515917734707171;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.05589197096461562;  // std dev = 3,855, 138,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H), genre(I, H) )
%   | then if ( movie(J, I), movie(J, A) )
%   | | then if ( movie(K, B) )
%   | | | then return 0.3160857180691683;  // std dev = 1,662, 38,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.16759057250241305;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06514653827507934;  // std dev = 2,993, 97,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H), genre(I, H) )
%   | then if ( movie(J, I), movie(J, A) )
%   | | then if ( movie(K, B) )
%   | | | then return 0.2947258175444581;  // std dev = 0,986, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.05278427256658266;  // std dev = 2,988, 94,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.2076721575916746;  // std dev = 1,375, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.050160187306094936;  // std dev = 2,995, 98,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return 0.1778781556714447;  // std dev = 1,092, 38,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.03734403698853193;  // std dev = 2,983, 93,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=10 */


Results
   AUC ROC   = 0.911476
   AUC PR    = 0.312862
   CLL	      = -0.221741
   Precision = 0.354244 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.50087


Total learning time: 1.555 seconds
Total inference time: 2.519 seconds
AUC ROC: 0.911476


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [2.38e-07, 0, 35], 'false,false,false': [3.002, 91, 10], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [4.675, 69, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [4.878, 94, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)', 'false,true,false': 'movie(H, E), movie(H, B)'}, {'false,false': [3.0, 91, 10], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [1.895, 4, 35]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, F), genre(G, F)', 'false': 'genre(A, D), genre(E, D)', 'false,false,true': 'movie(H, G), movie(H, A)'}, {'false,false,true,true': [1.662, 3, 35], 'false,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false,false': [2.977, 78, 10]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true,true,true': [0.0, 6, 0], 'false,false': [3.855, 93, 45], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'false,true': 'movie(J, I), movie(J, A)', 'false': 'genre(B, H), genre(I, H)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)', 'false,true,true': 'movie(K, B)'}, {'false,false': [2.993, 87, 10], 'false,true,true,true': [1.662, 3, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [3.73e-09, 3, 0], 'true,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, B)', 'false,true': 'movie(J, I), movie(J, A)', 'false': 'genre(B, H), genre(I, H)', 'true,true,true': 'movie(G, A)', 'true': 'genre(B, D), genre(E, D)', 'false,true,true': 'movie(K, B)'}, {'false,false': [2.988, 84, 10], 'false,true,true,true': [0.986, 1, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [1.375, 2, 35], 'false,false': [2.995, 88, 10], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,true,false': 'movie(G, E), movie(G, B)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [1.092, 3, 35], 'false,false': [2.983, 83, 10], 'true': [0.0, 0, 0]}]]
[{'': [nan, 0.2181122448979601], 'false,true,true': [0.0, nan], 'false,false': [1.6240976817373718e-15, 0.08920694049602951], 'false': [0.0, 0.2213992214532882], 'false,true': [0.0, 0.0], 'false,false,true': [1.6240976817373718e-15, nan]}, {'': [nan, 0.1917266071392358]}, {'': [nan, 0.1712177869736201]}, {'': [nan, 0.16831723782436642], 'false,true,true': [0.09204470742932198, nan], 'false,true': [0.09204470742932198, 0.0], 'false': [0.10283637530926834, 0.08912939665920301], 'false,true,false': [0.0, nan]}, {'': [nan, 0.1434507093755974], 'false,false': [0.07271468144044316, 0.10072314049586796], 'false': [nan, 0.1434507093755974], 'false,false,true': [0.07271468144044316, nan]}, {'': [nan, 0.10495856855598917], 'false,true,true': [-4.625929269271485e-18, nan], 'false,true': [-4.625929269271485e-18, nan], 'false': [-4.625929269271485e-18, 0.10766604344667587]}, {'': [0.0, 0.11464704721876114], 'false,true,true': [0.07271468144044317, nan], 'true,true,true': [0.0, nan], 'false': [0.08325933827910416, 0.09237883849648315], 'false,true': [0.07271468144044317, 4.625929269271485e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.10031575566006852], 'false,true,true': [0.02700617283950631, nan], 'true,true,true': [0.0, nan], 'false': [0.02700617283950631, 0.09494963180780618], 'false,true': [0.02700617283950631, nan], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [nan, 0.09367765742254251], 'false,true,true': [0.051132213294375485, nan], 'false,true': [0.051132213294375485, nan], 'false': [0.051132213294375485, 0.09152096905356981]}, {'': [nan, 0.08656502963118999], 'false,true': [nan, 0.031394204190820695], 'false': [0.031394204190820695, 0.09567143988811477], 'false,true,false': [0.031394204190820695, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '0;true;movie(F, E), movie(F, B).;true;true', '0;false;genre(B, H), genre(I, H).;true;true', '3;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '3;true;movie(F, E), movie(F, A).;true;true', '5;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '6;false,true;movie(J, I), movie(J, A).;true;true', '6;false;genre(B, H), genre(I, H).;true;true', '7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, B) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), genre(G, F) )
%   | then if ( movie(H, A), movie(H, B) )
%   | | then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.14185106490048766;  // std dev = 7,45e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( female(B) )
%   | | then return -0.13200720907722996;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109543;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.7264817617402088;  // std dev = 0,015, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.17976823375047304;  // std dev = 0,151, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.11424998846377758;  // std dev = 0,013, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return 0.5588524359498499;  // std dev = 0,014, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16757162836208192;  // std dev = 0,124, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then if ( female(A) )
%   | | then return 0.41666604769201593;  // std dev = 1,29e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.38828017029374307;  // std dev = 0,113, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.1015963294878363;  // std dev = 2,24e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.10159632948783634;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.10298058023355156;  // std dev = 0,005, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.32628664283569764;  // std dev = 0,221, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.464190630911549;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then return -0.09269127618926105;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return -0.09213814767960644;  // std dev = 0,000672, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3275545357250076;  // std dev = 0,010, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16718968596750639;  // std dev = 0,137, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.08466423723418529;  // std dev = 0,000557, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,97e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.0851847513883968;  // std dev = 1,49e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.08471512226221672;  // std dev = 0,000509, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2579332022079561;  // std dev = 0,037, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.26188081500666677;  // std dev = 0,044, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.23662624518427952;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10407315669623246;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( female(A) )
%   | | | then return 0.17606861381962205;  // std dev = 0,402, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.2106189378453807;  // std dev = 2,11e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.06338726866823033;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.07877210583858107;  // std dev = 0,000160, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( female(A) )
%   | | | then return 0.1621242746390003;  // std dev = 0,395, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.14693527116190747;  // std dev = 0,380, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09476127693726348;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1,05e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.07324654133644067;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.07276095375432197;  // std dev = 0,000385, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.18439974383991034;  // std dev = 0,007, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.15623035575223218;  // std dev = 0,092, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.06842725407098;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.06789872050583437;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return 0.1582693757361655;  // std dev = 0,006, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.12700824835919813;  // std dev = 0,113, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then return -0.06419184008202622;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( female(B) )
%   | | | then return -0.06419208379707361;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06419208379707357;  // std dev = 1,29e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( female(B) )
%   | | then return -0.0682276547379819;  // std dev = 0,009, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06411721186520077;  // std dev = 2,49e-06, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1383112463935275;  // std dev = 0,006, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.14442355857284903;  // std dev = 0,009, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.16395787170216988;  // std dev = 0,135, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081269
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.241 seconds
Total inference time: 2.772 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 5, Type: transfer, Time: 00:51:09
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 0.852086, 'Mapping results': {'Knowledge compiling time': 0.5983247756958008, 'Total time': 3.167963981628418, 'Generating mappings time': 0.05927300453186035, 'Generating paths time': 2.482058525085449, 'Possible mappings': 126, 'Finding best mapping': 0.02830219268798828}, 'CLL': -0.081269, 'AUC ROC': 1.0, 'Precision': [0.742291, 0.5], 'Inference time': 2.772, 'Learning time': 4.796, 'Parameter Learning results': {'Recall': 0.854599, 'AUC PR': 0.312862, 'F1': 0.50087, 'CLL': -0.221741, 'AUC ROC': 0.911476, 'Precision': [0.354244, 0.5], 'Inference time': 2.519, 'Learning time': 1.555}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 7,45e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11365593540708373;  // std dev = 0,115, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10147412728812404;  // std dev = 4,94e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( female(A) )
%   | then return 0.3958840044230538;  // std dev = 0,104, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.39494358791282524;  // std dev = 0,106, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32554308224152206;  // std dev = 0,000692, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14377393675322553;  // std dev = 0,000127, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09315532450984008;  // std dev = 0,051, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08505381382502983;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2584661529674337;  // std dev = 0,000604, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12693611069424116;  // std dev = 9,75e-05, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07866430937400094;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( female(A) )
%   | then return 0.1984379069773027;  // std dev = 0,065, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.1980024651783891;  // std dev = 0,066, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1808429071575547;  // std dev = 0,000683, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13508956280174406;  // std dev = 0,000197, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07386909239436563;  // std dev = 0,067, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06829572394980077;  // std dev = 3,25e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1555799867710992;  // std dev = 0,000606, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12003259466097349;  // std dev = 0,000126, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06407602204407865;  // std dev = 2,79e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13621727848229997;  // std dev = 0,000543, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10792110455527422;  // std dev = 0,000115, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072653
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.215 seconds
Total inference time: 2.354 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 5, Type: scratch, Time: 00:51:13
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'CLL': -0.072653, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.354, 'Learning time': 2.215}


Starting experiment #4 for cora->imdb(workedunder)

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.25953057897374937;  // std dev = 0,490, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return 0.06694014389072113;  // std dev = 0,406, 91,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=19 */
%   | else return 0.034757122234012436;  // std dev = 0,381, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), venue(E, A) )
%   | | then return 0.8235329548624415;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4901996215291083;  // std dev = 0,471, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | else return 0.2235895800040196;  // std dev = 0,490, 7.064,000 (wgt'ed) examples reached here.  /* #neg=4.238 #pos=2.826 */
%   else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, A) )
%   | | then if ( samebib(H, I), venue(I, B) )
%   | | | then return 0.5198547971586203;  // std dev = 1,154, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1468118695080464;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(J, G), venue(J, B) )
%   | | | then return -0.14748881739121103;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.050966283158079696;  // std dev = 3,470, 76,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | else return 0.030078973058376084;  // std dev = 0,381, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18979962668156442;  // std dev = 0,490, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4422280051335201;  // std dev = 1,153, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.12935909128230672;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.037859929537045305;  // std dev = 0,392, 79,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | else return 0.026277255752926745;  // std dev = 0,381, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1564143649668672;  // std dev = 0,490, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else return 0.024963397624517773;  // std dev = 0,383, 946,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=170 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1263496055286639;  // std dev = 0,490, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return 0.04657886941566372;  // std dev = 0,403, 91,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=19 */
%   | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.010177408121207224;  // std dev = 0,740, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.040018120987626006;  // std dev = 3,518, 77,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=16 */
%   | | else return 0.01699846517596754;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10045836969430855;  // std dev = 0,490, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.15977233954160294;  // std dev = 0,044, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.04939831426576278;  // std dev = 0,405, 85,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=19 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return 0.03755779785257221;  // std dev = 0,404, 83,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | | else return 0.014740514048574186;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07891496571474281;  // std dev = 0,490, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4930385721093222;  // std dev = 1,153, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.16884402850013033;  // std dev = 0,020, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.13736218286761198;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.027841397560283917;  // std dev = 3,423, 74,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.07095099051904048;  // std dev = 1,261, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.01925700962868448;  // std dev = 3,361, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else return 0.012761172090934572;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6036901077775837;  // std dev = 1,396, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return -0.33963013138543735;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.21851030769540541;  // std dev = 1,283, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.011510944483083756;  // std dev = 4,902, 107,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=39 */
%   | else return 0.06083417505675937;  // std dev = 0,490, 6.892,000 (wgt'ed) examples reached here.  /* #neg=4.132 #pos=2.760 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordvenue(B, K) )
%   | | then return -0.12325516355248615;  // std dev = 0,035, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(L, J), venue(L, B) )
%   | | | then return 0.15595109470441793;  // std dev = 1,478, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.023798897936796206;  // std dev = 3,422, 74,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | else return 0.01205863886063131;  // std dev = 0,380, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5818143065349136;  // std dev = 1,452, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return -0.34771351146930185;  // std dev = 0,117, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( haswordauthor(E, C) )
%   | | | then return 0.25272469297124095;  // std dev = 2,287, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | | else return -0.1008789913510848;  // std dev = 4,323, 99,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.17821198015518858;  // std dev = 3,334, 71,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=41 */
%   | | | else return -0.08215285165197653;  // std dev = 4,294, 99,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | | else return 0.047369335415516155;  // std dev = 0,490, 6.722,000 (wgt'ed) examples reached here.  /* #neg=4.028 #pos=2.694 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then return 0.02563610047724505;  // std dev = 0,390, 91,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=19 */
%   | else return 0.010315814092829471;  // std dev = 0,381, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4070761580407723;  // std dev = 1,426, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return -0.29782050401397037;  // std dev = 0,135, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.19911091786186474;  // std dev = 2,306, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | | else return -0.0641400929996109;  // std dev = 4,295, 99,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | else return 0.03618129535797883;  // std dev = 0,489, 6.892,000 (wgt'ed) examples reached here.  /* #neg=4.132 #pos=2.760 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.37725772655249007;  // std dev = 1,151, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.16337813739820684;  // std dev = 0,048, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.010435405286015758;  // std dev = 0,386, 79,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | else return 0.008740786900685457;  // std dev = 0,380, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */


Predicates from source: ['samevenue(venue,venue).', 'haswordauthor(author,word).', 'samebib(class,class).', 'haswordvenue(venue,word).', 'author(class,author).', 'venue(class,venue).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.48397374153137207
   Generating paths time   = 2.4673590660095215
   Generating mappings time   = 0.05857419967651367
   Possible mappings   = 126
   Finding best mapping   = 0.028194904327392578
   Total time   = 3.0381076335906982


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false;genre(A, D), genre(E, D).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;true,true;movie(E, D), movie(E, A).;false;false
1;false;genre(B, F), genre(G, F).;true;false
1;false,true;movie(H, G), movie(H, A).;true;true
1;true;genre(D, C).;true;false
1;false,true,true;movie(I, B).;false;false
1;false,true,false;movie(J, G), movie(J, B).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
2;false,true,true;movie(G, B).;false;false
2;false,true;movie(F, E), movie(F, A).;true;false
2;false;genre(B, D), genre(E, D).;true;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,false;genre(B, F), genre(G, F).;true;false
4;false;genre(A, D), genre(E, D).;false;true
4;false,false,true;movie(H, G), movie(H, B).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false,true;genre(E, F), genre(A, F).;false;false
5;false;genre(B, D), genre(E, D).;true;true
5;false,false;genre(A, G), genre(H, G).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
6;false,true,true;movie(G, A).;false;false
6;false,false;genre(B, I), genre(J, I).;true;false
6;false;genre(A, D), genre(E, D).;true;true
6;false,false,true;movie(K, J), movie(K, A).;false;false
6;false,true;movie(F, E), movie(F, B).;true;true
6;false,true,false;genre(E, H), genre(B, H).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;true,true;movie(F, E), movie(F, A).;true;true
7;false,true;genre(J, K), genre(B, K).;false;true
7;false;genre(A, I), genre(J, I).;true;false
7;true,true,false;movie(H, E), movie(H, B).;false;false
7;true,true,true;movie(G, B).;false;false
7;true;genre(A, D), genre(E, D).;true;false
7;false,true,false;movie(L, J), movie(L, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;true,true;movie(F, E), movie(F, B).;true;true
8;true,false,true;movie(J, I), movie(J, A).;false;false
8;false;genre(B, K), genre(L, K).;false;false
8;true,true,false;genre(E, C).;false;false
8;true,true,true;movie(G, A).;false;false
8;true;genre(B, D), genre(E, D).;true;true
8;true,false;genre(A, H), genre(I, H).;true;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;true,true;movie(F, E), movie(F, A).;true;true
9;false,true;movie(K, J), movie(K, B).;true;false
9;false;genre(A, I), genre(J, I).;true;false
9;true,true,false;genre(H, C).;false;false
9;true,true,true;movie(G, B).;false;false
9;true;genre(A, D), genre(E, D).;true;false
9;false,true,true;movie(L, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2290098622518314;  // std dev = 5,936, 151,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, D), movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), genre(G, F) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then if ( movie(I, B) )
%   | | | then return 0.7770772567955239;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.1689316464504618;  // std dev = 0,110, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.6067036707736314;  // std dev = 2,142, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.1474886624645956;  // std dev = 0,081, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.08662447833204559;  // std dev = 4,240, 170,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.1023256585594156;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, F), genre(G, F) )
%   | | then if ( movie(H, G), movie(H, B) )
%   | | | then return 0.49064224483686025;  // std dev = 1,390, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14175541642341638;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4037034556984264;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( genre(A, G), genre(H, G) )
%   | | then return -0.09330160501474825;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12536892430362748;  // std dev = 6,99e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.08570248864362552;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.2293944744207531;  // std dev = 2,142, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11225511574523321;  // std dev = 5,58e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, H), genre(I, H) )
%   | then if ( genre(I, J), genre(B, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(K, I), movie(K, B) )
%   | | | then return -0.07922114501497896;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.004711815989503395;  // std dev = 2,683, 169,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then return 0.1523866782346946;  // std dev = 2,494, 63,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=56 */
%   | else return -0.10142073853561066;  // std dev = 0,040, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.06700587941176073;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.006405710275644207;  // std dev = 2,544, 181,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */


Results
   AUC ROC   = 0.893595
   AUC PR    = 0.317815
   CLL	      = -0.175233
   Precision = 0.372905 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.512476


Total learning time: 1.848 seconds
Total inference time: 3.085 seconds
AUC ROC: 0.893595


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true': [0.0, 4, 0], 'true': [0.0, 0, 0], 'false,false': [5.936, 95, 56]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(E, D), movie(E, A)', 'false': 'genre(B, F), genre(G, F)', 'false,true': 'movie(H, G), movie(H, A)', 'true': 'genre(D, C)', 'false,true,true': 'movie(I, B)'}, {'false,false': [0.11, 89, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'false,true,true,true': [1.687, 3, 56], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [2.142, 5, 56], 'false,false': [0.081, 90, 0], 'true': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [4.24, 114, 56]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, F), genre(G, F)', 'false': 'genre(A, D), genre(E, D)', 'false,false,true': 'movie(H, G), movie(H, B)'}, {'false,false,true,true': [1.39, 2, 56], 'false,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 4, 0], 'true': [0.0, 0, 0], 'false,false,false': [0.0, 99, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,false': 'genre(A, G), genre(H, G)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 56], 'false,false,false': [6.99e-08, 101, 0], 'false,false,true': [0.0, 5, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [2.142, 5, 56], 'false,false,false': [5.58e-08, 95, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 2, 0], 'false,true,true,true': [3.73e-09, 7, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'false,true': 'genre(I, J), genre(B, J)', 'false': 'genre(A, H), genre(I, H)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)', 'false,true,false': 'movie(K, I), movie(K, B)'}, {'false,true,true': [0.0, 0, 0], 'false,false': [2.683, 113, 56], 'false,true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true': [2.494, 7, 56], 'true': [0.0, 0, 0], 'false,false': [0.04, 102, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true,true,true': [0.0, 3, 0], 'false,false': [2.544, 125, 56], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [nan, 0.2307596253902187], 'false': [0.0, 0.23332309986404123]}, {'': [0.0, 0.23386216255821687], 'false,true,true': [0.04826199367997532, nan], 'false': [0.04826199367997532, 0.00013670745961543305], 'false,true': [0.04826199367997532, nan], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.16739805760107715], 'false,true,true': [0.07524858908895626, nan], 'false,true': [0.07524858908895626, nan], 'false': [0.07524858908895626, 7.2332795046247e-05]}, {'': [nan, 0.10576504485626681]}, {'': [nan, 0.10375624585912885], 'false,false': [0.03329369797859685, -2.2428747972225384e-17], 'false': [0.0, 0.10546278188528069], 'false,false,true': [0.03329369797859685, nan]}, {'': [nan, 0.06298190358140639], 'false,true': [nan, -2.5376526277146434e-16], 'false,false': [-1.3877787807814458e-18, 4.83661515678286e-17], 'false': [-2.5376526277146434e-16, 4.6217341404405134e-05]}, {'': [0.0, 0.055232747990255494], 'false,true,true': [1.982541115402065e-18, nan], 'false,false': [0.0752485890889547, 3.272236283105724e-17], 'false': [1.982541115402065e-18, 0.05721908768201817], 'false,true': [1.982541115402065e-18, nan], 'false,false,true': [0.0752485890889547, nan]}, {'': [0.0, 0.041776244196883854], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'false': [0.0, 0.04260214683500641], 'false,true': [nan, 0.0], 'true': [0.0, nan], 'false,true,false': [0.0, nan]}, {'': [nan, 0.05292481122396046], 'false': [0.0987654320987655, 1.5444730357732432e-05]}, {'': [nan, 0.03524370470029323], 'false,true,true': [-5.782411586589357e-19, nan], 'false,true': [-5.782411586589357e-19, nan], 'false': [-5.782411586589357e-19, 0.035767978732944794]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '1;false;genre(B, F), genre(G, F).;true;true', '2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '2;false;genre(B, D), genre(E, D).;true;true', '4;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '4;false;genre(B, F), genre(G, F).;true;true', '5;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '5;false;genre(A, G), genre(H, G).;true;true', '6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '6;false,false;genre(B, H), genre(I, H).;true;true', '6;false;genre(A, D), genre(E, D).;true;true', '7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;false;genre(A, H), genre(I, H).;true;true', '8;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '9;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8,30e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1254446385283913;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.1123163781936062;  // std dev = 9,31e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415831;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.3840226219875909;  // std dev = 0,128, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return -0.10181289612835687;  // std dev = 0,015, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.09267306462716385;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(B, E), genre(F, E) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.32451270300900087;  // std dev = 0,027, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14514807692715978;  // std dev = 0,005, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09267306462716376;  // std dev = 4,94e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.25776765880708535;  // std dev = 0,024, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12163754307944538;  // std dev = 0,030, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, F), genre(G, F) )
%   | then return -0.08516929518424893;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08516929518424904;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11878212097418493;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.0787634826035138;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(B, F), genre(G, F) )
%   | | then if ( movie(H, A), movie(H, B) )
%   | | | then return 0.21159156694190887;  // std dev = 0,021, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.11450569118976307;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0787634826035138;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.07323471212696203;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then return -0.07323471212696207;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.17844173646721626;  // std dev = 0,018, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.10288077932882435;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( female(A) )
%   | | then return 0.15150879625468147;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.14710577235067307;  // std dev = 0,047, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.0942423352456413;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06841689965495165;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.06841689965495167;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(B) )
%   | | then return -0.06841689965495167;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.06841689965495167;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return -0.06418294801329352;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06418294801329352;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06418294801329355;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.06418294801329354;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(B) )
%   | | | then return -0.06418294801329352;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06418294801329354;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( female(A) )
%   | | then return 0.12515406375026306;  // std dev = 0,041, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.13747395748389402;  // std dev = 4,93e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07469
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total learning time: 2.431 seconds
Total inference time: 2.551 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 1, Type: transfer, Time: 01:09:13
{'Recall': 0.819018, 'AUC PR': 1.0, 'F1': 0.900506, 'Mapping results': {'Knowledge compiling time': 0.48397374153137207, 'Total time': 3.0381076335906982, 'Generating mappings time': 0.05857419967651367, 'Generating paths time': 2.4673590660095215, 'Possible mappings': 126, 'Finding best mapping': 0.028194904327392578}, 'CLL': -0.07469, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.551, 'Learning time': 4.279, 'Parameter Learning results': {'Recall': 0.819018, 'AUC PR': 0.317815, 'F1': 0.512476, 'CLL': -0.175233, 'AUC ROC': 0.893595, 'Precision': [0.372905, 0.5], 'Inference time': 3.085, 'Learning time': 1.848}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,16e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839127;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( female(A) )
%   | then return 0.6612032018151374;  // std dev = 0,214, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5622796962470953;  // std dev = 0,054, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22079940826879138;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11327639419659843;  // std dev = 0,115, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10150873800064632;  // std dev = 5,16e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4226895767676561;  // std dev = 0,053, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18220976762145327;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0926179317007227;  // std dev = 5,87e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3242412848048259;  // std dev = 0,048, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15975241417119435;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25758992492890403;  // std dev = 0,042, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14191441611861935;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.08512250107016323;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return -0.1883767999573018;  // std dev = 0,462, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07814967122478805;  // std dev = 0,022, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( female(A) )
%   | then return 0.2044598322759512;  // std dev = 0,063, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.195654975945179;  // std dev = 0,060, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07288578297527411;  // std dev = 0,016, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18004643024622635;  // std dev = 0,027, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14668138960502855;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06810440391632733;  // std dev = 0,014, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15498002167928485;  // std dev = 0,024, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12941696017220303;  // std dev = 0,007, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06379212981853699;  // std dev = 0,017, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13875862392955174;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.10585519472157696;  // std dev = 0,146, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.1150398480469834;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081025
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.452 seconds
Total inference time: 2.457 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 1, Type: scratch, Time: 01:09:18
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 0.847854, 'CLL': -0.081025, 'AUC ROC': 1.0, 'Precision': [0.735892, 0.5], 'Inference time': 2.457, 'Learning time': 2.452}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.5550382137298584
   Generating paths time   = 2.4944634437561035
   Generating mappings time   = 0.058747291564941406
   Possible mappings   = 126
   Finding best mapping   = 0.028386592864990234
   Total time   = 3.136641502380371


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false;genre(A, D), genre(E, D).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;true,true;movie(E, D), movie(E, A).;false;false
1;false;genre(B, F), genre(G, F).;true;false
1;false,true;movie(H, G), movie(H, A).;true;true
1;true;genre(D, C).;true;false
1;false,true,true;movie(I, B).;false;false
1;false,true,false;movie(J, G), movie(J, B).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
2;false,true,true;movie(G, B).;false;false
2;false,true;movie(F, E), movie(F, A).;true;false
2;false;genre(B, D), genre(E, D).;true;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,false;genre(B, F), genre(G, F).;true;false
4;false;genre(A, D), genre(E, D).;false;true
4;false,false,true;movie(H, G), movie(H, B).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false,true;genre(E, F), genre(A, F).;false;false
5;false;genre(B, D), genre(E, D).;true;true
5;false,false;genre(A, G), genre(H, G).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
6;false,true,true;movie(G, A).;false;false
6;false,false;genre(B, I), genre(J, I).;true;false
6;false;genre(A, D), genre(E, D).;true;true
6;false,false,true;movie(K, J), movie(K, A).;false;false
6;false,true;movie(F, E), movie(F, B).;true;true
6;false,true,false;genre(E, H), genre(B, H).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;true,true;movie(F, E), movie(F, A).;true;true
7;false,true;genre(J, K), genre(B, K).;false;true
7;false;genre(A, I), genre(J, I).;true;false
7;true,true,false;movie(H, E), movie(H, B).;false;false
7;true,true,true;movie(G, B).;false;false
7;true;genre(A, D), genre(E, D).;true;false
7;false,true,false;movie(L, J), movie(L, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;true,true;movie(F, E), movie(F, B).;true;true
8;true,false,true;movie(J, I), movie(J, A).;false;false
8;false;genre(B, K), genre(L, K).;false;false
8;true,true,false;genre(E, C).;false;false
8;true,true,true;movie(G, A).;false;false
8;true;genre(B, D), genre(E, D).;true;true
8;true,false;genre(A, H), genre(I, H).;true;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;true,true;movie(F, E), movie(F, A).;true;true
9;false,true;movie(K, J), movie(K, B).;true;false
9;false;genre(A, I), genre(J, I).;true;false
9;true,true,false;genre(H, C).;false;false
9;true,true,true;movie(G, B).;false;false
9;true;genre(A, D), genre(E, D).;true;false
9;false,true,true;movie(L, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.1839916317287271;  // std dev = 6,253, 178,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.817294746548487;  // std dev = 0,991, 59,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.1657561009091393;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.16165663015855475;  // std dev = 0,132, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.6103341657516842;  // std dev = 2,146, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14408539460892905;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14175325623947188;  // std dev = 0,097, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.10393146166717482;  // std dev = 4,202, 167,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.10505800384794192;  // std dev = 0,000559, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(B, F), genre(G, F) )
%   | | then if ( movie(H, G), movie(H, B) )
%   | | | then return 0.4675412899281006;  // std dev = 1,641, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1399763037849199;  // std dev = 9,06e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2812318290801055;  // std dev = 2,538, 68,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=58 */
%   | else if ( genre(A, G), genre(H, G) )
%   | | then return -0.09566152812135785;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12395888390727085;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.08769983697220138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08769983697220136;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, I), genre(J, I) )
%   | | then if ( movie(K, J), movie(K, A) )
%   | | | then return 0.32281955003272694;  // std dev = 0,991, 59,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | | | else return -0.2548053986033115;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11111304307499499;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, H), genre(I, H) )
%   | then if ( genre(I, J), genre(B, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(K, I), movie(K, B) )
%   | | | then return -0.08093214568470329;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09166054002551571;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -6.896817959218539E-4;  // std dev = 3,012, 172,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then return 0.2021911073014905;  // std dev = 1,840, 64,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | else return -0.09910152100008088;  // std dev = 0,061, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.06851148115079803;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.0678299814693994;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.02625512959075908;  // std dev = 2,241, 147,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=58 */


Results
   AUC ROC   = 0.894384
   AUC PR    = 0.30663
   CLL	      = -0.174113
   Precision = 0.358593 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.498589


Total learning time: 1.7 seconds
Total inference time: 2.652 seconds
AUC ROC: 0.894384


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true': [0.0, 9, 0], 'true': [0.0, 0, 0], 'false,false': [6.253, 120, 58]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)', 'false,true,false': 'movie(H, E), movie(H, B)'}, {'false,false': [0.132, 118, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 2, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.991, 1, 58]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [2.146, 5, 58], 'false,false': [0.097, 101, 0], 'true': [0.0, 2, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 1, 0], 'false': [4.202, 109, 58]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, F), genre(G, F)', 'false': 'genre(A, D), genre(E, D)', 'false,false,true': 'movie(H, G), movie(H, B)'}, {'false,false,true,true': [1.641, 4, 58], 'false,false,true,false': [0.0, 0, 0], 'false,true': [0.000559, 7, 0], 'true': [0.0, 1, 0], 'false,false,false': [9.06e-08, 87, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,false': 'genre(A, G), genre(H, G)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false': [2.538, 10, 58], 'false,false,false': [0.0, 103, 0], 'false,false,true': [3.73e-09, 6, 0], 'true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, I), genre(J, I)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, H), genre(B, H)', 'false,false,true': 'movie(K, J), movie(K, A)'}, {'false,false,true,true': [0.991, 1, 58], 'false,true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 103, 0], 'false,true,false,false': [2.63e-09, 3, 0], 'false,false,true,false': [0.0, 2, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'false,true': 'genre(I, J), genre(B, J)', 'false': 'genre(A, H), genre(I, H)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)', 'false,true,false': 'movie(K, I), movie(K, B)'}, {'false,true,true': [0.0, 0, 0], 'false,false': [3.012, 114, 58], 'false,true,false,false': [0.026, 3, 0], 'true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 6, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true': [1.84, 6, 58], 'true': [0.0, 0, 0], 'false,false': [0.061, 107, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true,true,true': [0.0, 4, 0], 'false,false': [2.241, 89, 58], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0]}]]
[{'': [nan, 0.21396093682976383], 'false': [-9.25185853854297e-18, 0.21966923368261612]}, {'': [nan, 0.21738219694830324], 'false,true,true': [0.016661878770469447, nan], 'false,true': [0.016661878770469447, 0.0], 'false': [0.04676162321956597, 0.00014845000050832838], 'false,true,false': [0.0, nan]}, {'': [0.0, 0.16147218377903344], 'false,true,true': [0.07306626354245489, nan], 'false,true': [0.07306626354245489, 0.0], 'false': [0.08067860195449811, 9.36598045661272e-05]}, {'': [0.0, 0.10573712333352603]}, {'': [0.0, 0.10495278992795856], 'false,false': [0.0434541174193537, 9.443276301409377e-17], 'false': [4.461341150674425e-08, 0.10775342799795429], 'false,false,true': [0.0434541174193537, nan]}, {'': [0.0, 0.07497090250930867], 'false,true': [nan, 0.09474903638953906], 'false': [0.09474903638953906, 4.165116849464061e-05], 'false,false': [2.3129646346357427e-18, -4.095968440364655e-17]}, {'': [nan, 0.04878072602362146], 'false,true,true': [0.0, nan], 'false,false': [0.026696283334253456, -5.82058673104451e-17], 'false': [-9.912705577010326e-19, 0.05016092989479996], 'false,true': [0.0, 2.3129646346357427e-18], 'false,true,false': [nan, 2.3129646346357427e-18], 'false,false,true': [0.016661878770468527, 0.0]}, {'': [0.0, 0.05046230296330508], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'false': [0.00010230972900620212, 0.05274808180373418], 'false,true': [nan, 0.00010230972900620212], 'true': [0.0, nan], 'false,true,false': [0.0, 0.00023019689026395362]}, {'': [nan, 0.041080151608620684], 'false': [0.052900542310628934, 3.4901062149009155e-05]}, {'': [nan, 0.033002336562049546], 'false,true,true': [0.0, nan], 'false,true': [0.0, -5.782411586589357e-19], 'false': [1.1374085283641763e-07, 0.034168169227370135]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '1;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '1;true;movie(F, E), movie(F, A).;true;true', '2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '2;false,true;movie(F, E), movie(F, A).;true;true', '2;false;genre(B, D), genre(E, D).;true;true', '3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '4;false,false;genre(B, F), genre(G, F).;true;true', '4;false;genre(A, D), genre(E, D).;true;true', '5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '5;false,false;genre(A, G), genre(H, G).;true;true', '5;false;genre(B, D), genre(E, D).;true;true', '6;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '6;false,true;movie(K, J), movie(K, A).;true;true', '6;true;movie(F, E), movie(F, B).;true;true', '6;false;genre(B, I), genre(J, I).;true;true', '7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;false,true;movie(K, I), movie(K, B).;true;true', '7;false;genre(A, H), genre(I, H).;true;true', '8;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '9;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '9;true;movie(F, E), movie(F, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8,16e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109542;  // std dev = 5,96e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.6772275096739875;  // std dev = 0,184, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839127;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.22017899983655376;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( female(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.5456199193654862;  // std dev = 0,776, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.11231637819360621;  // std dev = 8,43e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783637;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.42583161178569046;  // std dev = 0,046, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.32761242683020003;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.092691276189261;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( genre(B, F), genre(G, F) )
%   | | then if ( movie(H, A), movie(H, B) )
%   | | | then return 0.3263698806392272;  // std dev = 0,041, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.19194516734024805;  // std dev = 0,256, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926083;  // std dev = 7,30e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1847031173595975;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.25903717504804386;  // std dev = 0,036, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08996639510278377;  // std dev = 0,148, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(A, G), genre(H, G) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839682;  // std dev = 5,48e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07117489336110581;  // std dev = 0,011, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, F), genre(G, F) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then if ( female(A) )
%   | | | then return 0.18657970096166793;  // std dev = 0,415, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.20458044708859388;  // std dev = 0,419, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.057914073278389835;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.0787767547310918;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( female(A) )
%   | | | then return -0.0787767547310918;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.0787767547310918;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07376392634963493;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333707;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( female(A) )
%   | | | then return 0.17787562043707958;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.1719219688696446;  // std dev = 0,423, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( female(A) )
%   | | then return 0.1533346442309207;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1585925824606263;  // std dev = 2,63e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.15258396848144273;  // std dev = 0,243, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420278;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.06842697784420274;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06842697784420271;  // std dev = 1,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.06854021805661528;  // std dev = 0,000392, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, B) )
%   | then return -0.06418503793687123;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06461186631080655;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1344680788054799;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.1385566498931806;  // std dev = 4,34e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.17166432414233138;  // std dev = 0,211, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079752
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 2.732 seconds
Total inference time: 2.434 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 2, Type: transfer, Time: 01:09:32
{'Recall': 0.817901, 'AUC PR': 1.0, 'F1': 0.89983, 'Mapping results': {'Knowledge compiling time': 0.5550382137298584, 'Total time': 3.136641502380371, 'Generating mappings time': 0.058747291564941406, 'Generating paths time': 2.4944634437561035, 'Possible mappings': 126, 'Finding best mapping': 0.028386592864990234}, 'CLL': -0.079752, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.434, 'Learning time': 4.432, 'Parameter Learning results': {'Recall': 0.817901, 'AUC PR': 0.30663, 'F1': 0.498589, 'CLL': -0.174113, 'AUC ROC': 0.894384, 'Precision': [0.358593, 0.5], 'Inference time': 2.652, 'Learning time': 1.7}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839136;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 8,43e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( female(A) )
%   | then return 0.3927940644608743;  // std dev = 0,111, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.40420307355199875;  // std dev = 0,082, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32448138161557954;  // std dev = 0,009, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1448709548331504;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0935909258210521;  // std dev = 0,073, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851146693719531;  // std dev = 5,48e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2577431154218976;  // std dev = 0,008, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12698595288831013;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21157233224596037;  // std dev = 0,007, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1143289369284075;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07907859490870524;  // std dev = 0,041, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07316946149883541;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17842643624266072;  // std dev = 0,006, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10262172413052625;  // std dev = 0,001, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15375209758690933;  // std dev = 0,005, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09364603262122426;  // std dev = 0,000968, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.06835978047237122;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( female(B) )
%   | | then return -0.06835978047237118;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1624608046907631;  // std dev = 0,421, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1347937209163371;  // std dev = 0,005, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08621865258603333;  // std dev = 0,000777, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06409900303033864;  // std dev = 0,027, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072278
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.425 seconds
Total inference time: 2.511 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 2, Type: scratch, Time: 01:09:37
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'CLL': -0.072278, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.511, 'Learning time': 2.425}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.5190920829772949
   Generating paths time   = 2.483553409576416
   Generating mappings time   = 0.061347246170043945
   Possible mappings   = 126
   Finding best mapping   = 0.028163909912109375
   Total time   = 3.092162609100342


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false;genre(A, D), genre(E, D).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;true,true;movie(E, D), movie(E, A).;false;false
1;false;genre(B, F), genre(G, F).;true;false
1;false,true;movie(H, G), movie(H, A).;true;true
1;true;genre(D, C).;true;false
1;false,true,true;movie(I, B).;false;false
1;false,true,false;movie(J, G), movie(J, B).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
2;false,true,true;movie(G, B).;false;false
2;false,true;movie(F, E), movie(F, A).;true;false
2;false;genre(B, D), genre(E, D).;true;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,false;genre(B, F), genre(G, F).;true;false
4;false;genre(A, D), genre(E, D).;false;true
4;false,false,true;movie(H, G), movie(H, B).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false,true;genre(E, F), genre(A, F).;false;false
5;false;genre(B, D), genre(E, D).;true;true
5;false,false;genre(A, G), genre(H, G).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
6;false,true,true;movie(G, A).;false;false
6;false,false;genre(B, I), genre(J, I).;true;false
6;false;genre(A, D), genre(E, D).;true;true
6;false,false,true;movie(K, J), movie(K, A).;false;false
6;false,true;movie(F, E), movie(F, B).;true;true
6;false,true,false;genre(E, H), genre(B, H).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;true,true;movie(F, E), movie(F, A).;true;true
7;false,true;genre(J, K), genre(B, K).;false;true
7;false;genre(A, I), genre(J, I).;true;false
7;true,true,false;movie(H, E), movie(H, B).;false;false
7;true,true,true;movie(G, B).;false;false
7;true;genre(A, D), genre(E, D).;true;false
7;false,true,false;movie(L, J), movie(L, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;true,true;movie(F, E), movie(F, B).;true;true
8;true,false,true;movie(J, I), movie(J, A).;false;false
8;false;genre(B, K), genre(L, K).;false;false
8;true,true,false;genre(E, C).;false;false
8;true,true,true;movie(G, A).;false;false
8;true;genre(B, D), genre(E, D).;true;true
8;true,false;genre(A, H), genre(I, H).;true;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;true,true;movie(F, E), movie(F, A).;true;true
9;false,true;movie(K, J), movie(K, B).;true;false
9;false;genre(A, I), genre(J, I).;true;false
9;true,true,false;genre(H, C).;false;false
9;true,true,true;movie(G, B).;false;false
9;true;genre(A, D), genre(E, D).;true;false
9;false,true,true;movie(L, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0.25995480417400013;  // std dev = 10,319, 443,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, D), movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), genre(G, F) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then if ( movie(I, B) )
%   | | | then return 0.6666085501698532;  // std dev = 4,498, 153,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(J, G), movie(J, B) )
%   | | | then return -0.17397450142192433;  // std dev = 0,050, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.024142365438464927;  // std dev = 6,420, 342,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=49 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.5770819105786525;  // std dev = 4,069, 148,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14835021957472147;  // std dev = 0,061, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.025566044911233553;  // std dev = 6,441, 352,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.1088712862971269;  // std dev = 9,030, 517,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.13165247080885395;  // std dev = 0,028, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( genre(B, F), genre(G, F) )
%   | | then if ( movie(H, G), movie(H, B) )
%   | | | then return 0.35345492437342196;  // std dev = 4,611, 169,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.029243231662257757;  // std dev = 6,431, 314,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1865900422176235;  // std dev = 5,638, 189,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=129 */
%   | else if ( genre(A, G), genre(H, G) )
%   | | then return -0.1177054479284268;  // std dev = 3,80e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 5.612943155923447E-4;  // std dev = 6,333, 270,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=49 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.10602090423155602;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return -0.09220895528440597;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.10602090423155607;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( genre(B, I), genre(J, I) )
%   | | then if ( movie(K, J), movie(K, A) )
%   | | | then return 0.2785332098943455;  // std dev = 4,161, 149,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=129 */
%   | | | else return -0.22909053544914312;  // std dev = 2,58e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.007244513938014093;  // std dev = 6,363, 282,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, H), genre(I, H) )
%   | then if ( genre(I, J), genre(B, J) )
%   | | then return -0.08477525782447153;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(K, I), movie(K, B) )
%   | | | then return -0.09638376194831239;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.09638376194831234;  // std dev = 1,05e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0.03515726330276056;  // std dev = 8,238, 488,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H), genre(I, H) )
%   | then return 0.1837401829167208;  // std dev = 4,026, 165,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=129 */
%   | else return -0.03330762358900737;  // std dev = 6,423, 359,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, H), genre(I, H) )
%   | then if ( movie(J, I), movie(J, B) )
%   | | then if ( movie(K, A) )
%   | | | then return -0.08566455250961176;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08634183644058513;  // std dev = 0,010, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0.037577668342486756;  // std dev = 8,001, 447,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=178 */


Results
   AUC ROC   = 0.960875
   AUC PR    = 0.347806
   CLL	      = -0.234372
   Precision = 0.362617 at threshold = 0.5
   Recall    = 0.95098
   F1        = 0.525034


Total learning time: 3.33 seconds
Total inference time: 2.944 seconds
AUC ROC: 0.960875


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true': [6.14e-08, 60, 0], 'true': [0.0, 12, 0], 'false,false': [10.319, 265, 178]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(E, D), movie(E, A)', 'false': 'genre(B, F), genre(G, F)', 'false,true': 'movie(H, G), movie(H, A)', 'true': 'genre(D, C)', 'false,true,true': 'movie(I, B)', 'false,true,false': 'movie(J, G), movie(J, B)'}, {'false,false': [6.42, 293, 49], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.05, 20, 0], 'true,true,true': [0.0, 19, 0], 'false,true,true,true': [4.498, 24, 129], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [4.069, 19, 129], 'false,false': [6.441, 303, 49], 'true': [7.45e-09, 11, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.061, 21, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 6, 0], 'false': [9.03, 339, 178]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, F), genre(G, F)', 'false': 'genre(A, D), genre(E, D)', 'false,false,true': 'movie(H, G), movie(H, B)'}, {'false,false,true,true': [4.611, 40, 129], 'false,false,true,false': [0.0, 0, 0], 'false,true': [0.028, 66, 0], 'true': [7.45e-09, 14, 0], 'false,false,false': [6.431, 265, 49]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,false': 'genre(A, G), genre(H, G)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false': [5.638, 60, 129], 'false,false,false': [6.333, 221, 49], 'false,false,true': [3.8e-08, 59, 0], 'true': [5.27e-09, 11, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, I), genre(J, I)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, H), genre(B, H)', 'false,false,true': 'movie(K, J), movie(K, A)'}, {'false,false,true,true': [4.161, 20, 129], 'false,true,true,false': [0.0, 0, 0], 'false,false,false': [6.363, 233, 49], 'false,true,false,false': [0.0, 13, 0], 'false,false,true,false': [2.58e-08, 21, 0], 'false,true,false,true': [0.0, 2, 0], 'false,true,true,true': [0.0, 45, 0], 'true': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'false,true': 'genre(I, J), genre(B, J)', 'false': 'genre(A, H), genre(I, H)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)', 'false,true,false': 'movie(K, I), movie(K, B)'}, {'false,true,true': [0.0, 3, 0], 'false,false': [8.238, 310, 178], 'false,true,false,false': [1.05e-08, 27, 0], 'true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 45, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 21, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, B)', 'true,true,true': 'movie(G, A)', 'true': 'genre(B, D), genre(E, D)', 'false': 'genre(B, H), genre(I, H)'}, {'false,false': [6.423, 310, 49], 'true,true,false': [0.0, 0, 0], 'false,true': [4.026, 36, 129], 'true,true,true,true': [3.73e-09, 15, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'false,true': 'movie(J, I), movie(J, B)', 'false': 'genre(A, H), genre(I, H)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)', 'false,true,true': 'movie(K, A)'}, {'false,false': [8.001, 269, 178], 'false,true,true,true': [0.0, 34, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.01, 21, 0], 'true,true,true,true': [3.73e-09, 10, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}]]
[{'': [-1.1564823173178714e-17, 0.2286479927591537], 'false': [6.29126380620922e-17, 0.24035791265178785]}, {'': [0.0, 0.22219536320386327], 'false,true,true': [0.1322568242983437, nan], 'false': [0.18922346750617686, 0.12051870912596516], 'false,true': [0.1322568242983437, 0.00012395513644553047], 'true': [0.0, nan], 'true,true': [0.0, nan], 'false,true,false': [0.00012395513644553047, nan]}, {'': [5.046468293750712e-18, 0.1875691401491304], 'false,true,true': [0.11189737034331837, nan], 'false,true': [0.11189737034331837, 0.0001750712958864716], 'false': [0.1552812882315862, 0.11786971280140474]}, {'': [0.0, 0.15770564490492783]}, {'': [3.96508223080413e-18, 0.1492626363468898], 'false,false': [0.1257828831201932, 0.1316990547283894], 'false': [1.1903445340017365e-05, 0.16294362454386033], 'false,false,true': [0.1257828831201932, nan]}, {'': [2.523234146875356e-18, 0.15005359870473398], 'false,true': [nan, 0.16818876746073896], 'false': [0.16818876746073896, 0.1239655057012692], 'false,false': [2.4462541220554296e-17, 0.14854595336077092]}, {'': [0.0, 0.13590016274800348], 'false,true,true': [0.0, nan], 'false,false': [0.129754696277003, 0.14356672199587747], 'false': [6.147031197591598e-06, 0.15004831853552078], 'false,true': [0.0, 2.204452567415305e-05], 'false,true,false': [0.0, -6.4051328343759035e-18], 'false,false,true': [0.11621098148732016, 3.172065784643304e-17]}, {'': [-1.32169407693471e-18, 0.12253179907473452], 'true,true': [-1.32169407693471e-18, nan], 'true,true,true': [-1.32169407693471e-18, nan], 'false': [5.174682930908503e-06, 0.13907395668722483], 'false,true': [-2.3129646346357427e-18, -3.0839528461809905e-17], 'true': [-1.32169407693471e-18, nan], 'false,true,false': [-1.2335811384723962e-18, 4.11193712824132e-18]}, {'': [9.251858538542971e-19, 0.11983357518116329], 'true,true': [9.251858538542971e-19, nan], 'true,true,true': [9.251858538542971e-19, nan], 'false': [0.09825861152101388, 0.11491546772887827], 'true': [9.251858538542971e-19, nan]}, {'': [1.3877787807814458e-18, 0.1290249742015029], 'true,true': [1.3877787807814458e-18, nan], 'true,true,true': [1.3877787807814458e-18, nan], 'false': [1.772150607712045e-06, 0.14322922681910044], 'false,true': [-2.44902137784961e-18, 4.357778469968189e-06], 'true': [1.3877787807814458e-18, nan], 'false,true,true': [-2.44902137784961e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '0;false;genre(A, D), genre(E, D).;true;true', '1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '1;false,true;movie(H, G), movie(H, A).;true;true', '1;false;genre(B, F), genre(G, F).;true;true', '2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '2;false,true;movie(F, E), movie(F, A).;true;true', '2;false;genre(B, D), genre(E, D).;true;true', '3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '4;false;genre(A, D), genre(E, D).;true;true', '5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '5;false,false;genre(A, G), genre(H, G).;true;true', '5;false;genre(B, D), genre(E, D).;true;true', '6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '6;false,false;genre(B, I), genre(J, I).;true;true', '6;false;genre(A, D), genre(E, D).;true;true', '6;false,false,true;movie(K, J), movie(K, A).;true;true', '6;false,true;movie(F, E), movie(F, B).;true;true', '6;false,true,false;genre(E, H), genre(B, H).;true;true', '7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;false,true;genre(I, J), genre(B, J).;true;true', '7;false;genre(A, H), genre(I, H).;true;true', '7;false,true,false;movie(K, I), movie(K, B).;true;true', '8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '9;false,true;movie(J, I), movie(J, B).;true;true', '9;false;genre(A, H), genre(I, H).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.1418510649004877;  // std dev = 3,65e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.14185106490048838;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109556;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.12544463852839136;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839183;  // std dev = 0,000, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
%   | | else if ( movie(H, A), movie(H, B) )
%   | | | then return 0.627300533948481;  // std dev = 1,953, 55,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=49 */
%   | | | else return -0.12544463852839144;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.5553664367462834;  // std dev = 4,92e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.11231637819360633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.11231637819360635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( director(B), female(A) )
%   | | then if ( movie(H, A), movie(H, B) )
%   | | | then return 0.5779956037288264;  // std dev = 5,96e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.11231637819360632;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.0735368477085869;  // std dev = 1,561, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return -0.11369707255062665;  // std dev = 0,197, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.42712759201783296;  // std dev = 0,371, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1066861382852039;  // std dev = 0,064, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.1036773768000419;  // std dev = 0,240, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.09240055529351776;  // std dev = 2,24e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.327535874732395;  // std dev = 0,351, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09574871790096806;  // std dev = 0,050, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.09357502728249673;  // std dev = 0,147, 219,000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.2520606326245492;  // std dev = 1,52e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.08465249233544678;  // std dev = 0,001, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( genre(A, G), genre(H, G) )
%   | | then return -0.08493796392807103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.16886370375103038;  // std dev = 1,458, 70,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=49 */
%   | | | else return -0.08759158721943011;  // std dev = 0,207, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07856480148620915;  // std dev = 2,11e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.07868550392090166;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07856480148620924;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.16116390606161832;  // std dev = 1,308, 154,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=129 */
%   | | | else return -0.07835616019067049;  // std dev = 0,000855, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( female(A), director(B) )
%   | | | then return 0.18631892118868515;  // std dev = 0,814, 49,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=42 */
%   | | | else return -0.0699860615540531;  // std dev = 1,110, 240,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.07306232586610628;  // std dev = 1,39e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.07306232586610628;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( movie(H, A), movie(H, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.19361871065135614;  // std dev = 0,440, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.07577585891389822;  // std dev = 0,098, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( actor(A), director(B) )
%   | | | then return -0.09618384740582991;  // std dev = 0,125, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return -0.07336895177778201;  // std dev = 0,000801, 157,000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.16343067506522832;  // std dev = 0,082, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.1672606930013912;  // std dev = 0,390, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( female(A) )
%   | | | then return -0.08903389215087795;  // std dev = 0,078, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.09135154416651285;  // std dev = 0,052, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06849944614321399;  // std dev = 0,000961, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | | | else return -0.06836706045755947;  // std dev = 0,001, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.13483674005402646;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06854243919409324;  // std dev = 0,005, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, E), genre(F, E) )
%   | then if ( movie(G, F), movie(G, B) )
%   | | then return -0.06404371586626884;  // std dev = 1,86e-09, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( actor(B) )
%   | | | then return -0.06404371586626888;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.06518809944321217;  // std dev = 0,006, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(H, A), movie(H, B) )
%   | | | then return 0.1438963568397071;  // std dev = 0,363, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.07987136778366803;  // std dev = 0,096, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( actor(B) )
%   | | | then return -0.06426019166200359;  // std dev = 0,000987, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
%   | | | else return -0.08688824723797134;  // std dev = 0,129, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064075
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.158 seconds
Total inference time: 2.602 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: transfer, Time: 01:09:55
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'Mapping results': {'Knowledge compiling time': 0.5190920829772949, 'Total time': 3.092162609100342, 'Generating mappings time': 0.061347246170043945, 'Generating paths time': 2.483553409576416, 'Possible mappings': 126, 'Finding best mapping': 0.028163909912109375}, 'CLL': -0.064075, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.602, 'Learning time': 8.488, 'Parameter Learning results': {'Recall': 0.95098, 'AUC PR': 0.347806, 'F1': 0.525034, 'CLL': -0.234372, 'AUC ROC': 0.960875, 'Precision': [0.362617, 0.5], 'Inference time': 2.944, 'Learning time': 3.33}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.14185106490048807;  // std dev = 0,000, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.12544463852839183;  // std dev = 0,000, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.11231637819360682;  // std dev = 0,000, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 3,65e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.10159632948783646;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.09269127618926072;  // std dev = 8,94e-08, 279,000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.08518475138839679;  // std dev = 8,16e-08, 306,000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109172;  // std dev = 2,58e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07877675473109146;  // std dev = 5,58e-08, 294,000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07324622576333685;  // std dev = 9,42e-08, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420267;  // std dev = 2,98e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.06842697784420283;  // std dev = 0,000, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06419184008202625;  // std dev = 0,000, 314,000 (wgt'ed) examples reached here.  /* #neg=314 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.461 seconds
Total inference time: 2.294 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: scratch, Time: 01:10:01
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'CLL': -0.063555, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.294, 'Learning time': 3.461}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.583193302154541
   Generating paths time   = 2.4955103397369385
   Generating mappings time   = 0.05915212631225586
   Possible mappings   = 126
   Finding best mapping   = 0.028467893600463867
   Total time   = 3.1663291454315186


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false;genre(A, D), genre(E, D).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;true,true;movie(E, D), movie(E, A).;false;false
1;false;genre(B, F), genre(G, F).;true;false
1;false,true;movie(H, G), movie(H, A).;true;true
1;true;genre(D, C).;true;false
1;false,true,true;movie(I, B).;false;false
1;false,true,false;movie(J, G), movie(J, B).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
2;false,true,true;movie(G, B).;false;false
2;false,true;movie(F, E), movie(F, A).;true;false
2;false;genre(B, D), genre(E, D).;true;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,false;genre(B, F), genre(G, F).;true;false
4;false;genre(A, D), genre(E, D).;false;true
4;false,false,true;movie(H, G), movie(H, B).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false,true;genre(E, F), genre(A, F).;false;false
5;false;genre(B, D), genre(E, D).;true;true
5;false,false;genre(A, G), genre(H, G).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
6;false,true,true;movie(G, A).;false;false
6;false,false;genre(B, I), genre(J, I).;true;false
6;false;genre(A, D), genre(E, D).;true;true
6;false,false,true;movie(K, J), movie(K, A).;false;false
6;false,true;movie(F, E), movie(F, B).;true;true
6;false,true,false;genre(E, H), genre(B, H).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;true,true;movie(F, E), movie(F, A).;true;true
7;false,true;genre(J, K), genre(B, K).;false;true
7;false;genre(A, I), genre(J, I).;true;false
7;true,true,false;movie(H, E), movie(H, B).;false;false
7;true,true,true;movie(G, B).;false;false
7;true;genre(A, D), genre(E, D).;true;false
7;false,true,false;movie(L, J), movie(L, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;true,true;movie(F, E), movie(F, B).;true;true
8;true,false,true;movie(J, I), movie(J, A).;false;false
8;false;genre(B, K), genre(L, K).;false;false
8;true,true,false;genre(E, C).;false;false
8;true,true,true;movie(G, A).;false;false
8;true;genre(B, D), genre(E, D).;true;true
8;true,false;genre(A, H), genre(I, H).;true;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;true,true;movie(F, E), movie(F, A).;true;true
9;false,true;movie(K, J), movie(K, B).;true;false
9;false;genre(A, I), genre(J, I).;true;false
9;true,true,false;genre(H, C).;false;false
9;true,true,true;movie(G, B).;false;false
9;true;genre(A, D), genre(E, D).;true;false
9;false,true,true;movie(L, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.20166038548119172;  // std dev = 5,435, 131,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.7501535423539194;  // std dev = 1,917, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.16286765882779733;  // std dev = 0,139, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.6001864913322933;  // std dev = 2,121, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.14420329345698735;  // std dev = 0,082, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.06433818381155534;  // std dev = 4,079, 150,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.10114343326993194;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( genre(B, F), genre(G, F) )
%   | | then if ( movie(H, G), movie(H, B) )
%   | | | then return 0.4457867169668408;  // std dev = 2,121, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.13692451308817674;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3002259448207998;  // std dev = 2,461, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | else if ( genre(A, G), genre(H, G) )
%   | | then return -0.09231194106867312;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.12153253194985791;  // std dev = 5,87e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.08486271899374259;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.30050359716213204;  // std dev = 1,677, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10914256671327327;  // std dev = 3,80e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.07850016099616508;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.02322294388066853;  // std dev = 2,658, 121,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then return 0.15730450866877543;  // std dev = 2,461, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | else return -0.09803144137251256;  // std dev = 0,075, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, H), genre(I, H) )
%   | then if ( movie(J, I), movie(J, B) )
%   | | then if ( movie(K, A) )
%   | | | then return -0.06664326251591397;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.017294251159729872;  // std dev = 2,309, 127,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */


Results
   AUC ROC   = 0.898569
   AUC PR    = 0.329471
   CLL	      = -0.163521
   Precision = 0.385576 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.52552


Total learning time: 1.352 seconds
Total inference time: 2.859 seconds
AUC ROC: 0.898569


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true': [0.0, 4, 0], 'true': [0.0, 0, 0], 'false,false': [5.435, 86, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [1.917, 4, 45], 'false,false': [0.139, 96, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [2.121, 5, 45], 'false,false': [0.082, 78, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 2, 0], 'false': [4.079, 105, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, F), genre(G, F)', 'false': 'genre(A, D), genre(E, D)', 'false,false,true': 'movie(H, G), movie(H, B)'}, {'false,false,true,true': [2.121, 5, 45], 'false,false,true,false': [0.0, 0, 0], 'false,true': [7.45e-09, 9, 0], 'true': [0.0, 1, 0], 'false,false,false': [0.0, 92, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,false': 'genre(A, G), genre(H, G)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false': [2.461, 7, 45], 'false,false,false': [5.87e-08, 64, 0], 'false,false,true': [0.0, 9, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [1.677, 3, 45], 'false,false,false': [3.8e-08, 74, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'genre(A, D), genre(E, D)', 'false,true,false': 'movie(G, E), movie(G, B)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 5, 0], 'false,false': [2.658, 76, 45], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true': [2.461, 7, 45], 'true': [0.0, 0, 0], 'false,false': [0.075, 74, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'false,true': 'movie(J, I), movie(J, B)', 'false': 'genre(A, H), genre(I, H)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)', 'false,true,true': 'movie(K, A)'}, {'false,false': [2.309, 82, 45], 'false,true,true,true': [1.86e-09, 7, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}]]
[{'': [nan, 0.22222222222222313], 'false': [0.0, 0.22551133383835537]}, {'': [nan, 0.21197282788856162], 'false,true,true': [0.07496876301541147, nan], 'false,true': [0.07496876301541147, nan], 'false': [0.07496876301541147, 0.00020006892119005712]}, {'': [nan, 0.16710924794626145], 'false,true,true': [0.09000000000000036, nan], 'false,true': [0.09000000000000036, nan], 'false': [0.09000000000000036, 8.663128273969717e-05]}, {'': [0.0, 0.11093416423953288]}, {'': [0.0, 0.10425466772521286], 'false,false': [0.08999999999999947, -4.827056628805028e-17], 'false': [6.1679056923619804e-18, 0.10915200045170896], 'false,false,true': [0.08999999999999947, nan]}, {'': [nan, 0.09099526042485338], 'false,true': [nan, 0.1164940828402367], 'false': [0.1164940828402367, 9.229002223925553e-05], 'false,false': [0.0, 5.377642775528102e-17]}, {'': [nan, 0.06202492514316853], 'false,true,true': [0.0, nan], 'false,false': [0.05859374999999987, 1.950391800017167e-17], 'false': [0.0, 0.06310037943163586], 'false,true': [0.0, nan], 'false,false,true': [0.05859374999999987, nan]}, {'': [nan, 0.05647091709296346], 'false,true': [nan, -6.938893903907229e-19], 'false': [-6.938893903907229e-19, 0.05839380741034298], 'false,true,false': [-6.938893903907229e-19, nan]}, {'': [nan, 0.0639237181540936], 'false': [0.11649408284023678, 7.591045833335961e-05]}, {'': [0.0, 0.04014148451238549], 'false,true,true': [4.956352788505163e-19, nan], 'true,true,true': [0.0, nan], 'false': [4.956352788505163e-19, 0.04198595844933438], 'false,true': [4.956352788505163e-19, nan], 'true': [0.0, nan], 'true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '1;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '2;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '4;false,false;genre(B, F), genre(G, F).;true;true', '4;false;genre(A, D), genre(E, D).;true;true', '5;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '5;false;genre(A, G), genre(H, G).;true;true', '6;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '6;false;genre(B, H), genre(I, H).;true;true', '7;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '8;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '9;false;genre(A, H), genre(I, H).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7,30e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( female(A) )
%   | | then return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.8295775065280829;  // std dev = 0,167, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.7278382077391179;  // std dev = 0,031, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.27017735913340796;  // std dev = 0,014, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1254446385283914;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.5636365315919819;  // std dev = 0,039, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22315847377655668;  // std dev = 0,009, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360621;  // std dev = 7,15e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08052857342263788;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.10159632948783624;  // std dev = 4,71e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.4236945685511219;  // std dev = 0,039, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.18583976049831863;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07476378439555227;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(B, F), genre(G, F) )
%   | | then if ( movie(H, A), movie(H, B) )
%   | | | then return 0.32491731985006267;  // std dev = 0,035, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1599521776686715;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.2580469779006178;  // std dev = 0,030, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14069248911567891;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, F), genre(G, F) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08518475138839679;  // std dev = 2,79e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07437227816188335;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, F), genre(G, F) )
%   | then if ( movie(H, A), movie(H, B) )
%   | | then if ( female(A) )
%   | | | then return 0.21875281443922326;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.209538226142124;  // std dev = 3,94e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.12452689078413225;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.0706425896549439;  // std dev = 0,015, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1836664006794245;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.17693549588329463;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.11024489693063477;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( female(A) )
%   | | then return 0.1577097405656512;  // std dev = 3,23e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1526217110396398;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.09314413181432812;  // std dev = 0,044, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.0684269778442027;  // std dev = 1,39e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.06883478590704818;  // std dev = 9,87e-05, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.04883079809640636;  // std dev = 9,31e-10, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return -0.0643238725092355;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06458947094412282;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.1348797427106752;  // std dev = 0,011, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09249656354245568;  // std dev = 0,004, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.998487
   AUC PR    = 0.955282
   CLL	      = -0.075213
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total learning time: 2.489 seconds
Total inference time: 2.332 seconds
AUC ROC: 0.998487


Refined model AUC ROC: 0.998487


Dataset: cora->imdb(workedunder), Fold: 4, Type: transfer, Time: 01:10:14
{'Recall': 0.824926, 'AUC PR': 0.955282, 'F1': 0.904065, 'Mapping results': {'Knowledge compiling time': 0.583193302154541, 'Total time': 3.1663291454315186, 'Generating mappings time': 0.05915212631225586, 'Generating paths time': 2.4955103397369385, 'Possible mappings': 126, 'Finding best mapping': 0.028467893600463867}, 'CLL': -0.075213, 'AUC ROC': 0.998487, 'Precision': [1.0, 0.5], 'Inference time': 2.332, 'Learning time': 3.841, 'Parameter Learning results': {'Recall': 0.824926, 'AUC PR': 0.329471, 'F1': 0.52552, 'CLL': -0.163521, 'AUC ROC': 0.898569, 'Precision': [0.385576, 0.5], 'Inference time': 2.859, 'Learning time': 1.352}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 8,16e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839144;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360625;  // std dev = 6,14e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783626;  // std dev = 4,71e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08518475138839679;  // std dev = 2,98e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109162;  // std dev = 4,59e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420267;  // std dev = 4,34e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066179
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.181 seconds
Total inference time: 2.232 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 4, Type: scratch, Time: 01:10:18
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'CLL': -0.066179, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.232, 'Learning time': 2.181}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.5072054862976074
   Generating paths time   = 1.7845206260681152
   Generating mappings time   = 0.060744285583496094
   Possible mappings   = 126
   Finding best mapping   = 0.02817845344543457
   Total time   = 2.3806545734405518


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false;genre(A, D), genre(E, D).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;true,true;movie(E, D), movie(E, A).;false;false
1;false;genre(B, F), genre(G, F).;true;false
1;false,true;movie(H, G), movie(H, A).;true;true
1;true;genre(D, C).;true;false
1;false,true,true;movie(I, B).;false;false
1;false,true,false;movie(J, G), movie(J, B).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
2;false,true,true;movie(G, B).;false;false
2;false,true;movie(F, E), movie(F, A).;true;false
2;false;genre(B, D), genre(E, D).;true;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,false;genre(B, F), genre(G, F).;true;false
4;false;genre(A, D), genre(E, D).;false;true
4;false,false,true;movie(H, G), movie(H, B).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false,true;genre(E, F), genre(A, F).;false;false
5;false;genre(B, D), genre(E, D).;true;true
5;false,false;genre(A, G), genre(H, G).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
6;false,true,true;movie(G, A).;false;false
6;false,false;genre(B, I), genre(J, I).;true;false
6;false;genre(A, D), genre(E, D).;true;true
6;false,false,true;movie(K, J), movie(K, A).;false;false
6;false,true;movie(F, E), movie(F, B).;true;true
6;false,true,false;genre(E, H), genre(B, H).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;true,true;movie(F, E), movie(F, A).;true;true
7;false,true;genre(J, K), genre(B, K).;false;true
7;false;genre(A, I), genre(J, I).;true;false
7;true,true,false;movie(H, E), movie(H, B).;false;false
7;true,true,true;movie(G, B).;false;false
7;true;genre(A, D), genre(E, D).;true;false
7;false,true,false;movie(L, J), movie(L, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;true,true;movie(F, E), movie(F, B).;true;true
8;true,false,true;movie(J, I), movie(J, A).;false;false
8;false;genre(B, K), genre(L, K).;false;false
8;true,true,false;genre(E, C).;false;false
8;true,true,true;movie(G, A).;false;false
8;true;genre(B, D), genre(E, D).;true;true
8;true,false;genre(A, H), genre(I, H).;true;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;true,true;movie(F, E), movie(F, A).;true;true
9;false,true;movie(K, J), movie(K, B).;true;false
9;false;genre(A, I), genre(J, I).;true;false
9;true,true,false;genre(H, C).;false;false
9;true,true,true;movie(G, B).;false;false
9;true;genre(A, D), genre(E, D).;true;false
9;false,true,true;movie(L, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.24276431971489715;  // std dev = 5,262, 117,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.7470089647627361;  // std dev = 1,662, 38,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07057906942793836;  // std dev = 2,992, 99,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.6381037598469892;  // std dev = 1,375, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.037974290159753364;  // std dev = 2,955, 80,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.08174036465535554;  // std dev = 4,399, 141,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.12253245235483698;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(B, F), genre(G, F) )
%   | | then if ( movie(H, G), movie(H, B) )
%   | | | then return 0.5225802782989766;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07931376397795285;  // std dev = 3,015, 110,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.34841516294413916;  // std dev = 1,173, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | else if ( genre(A, G), genre(H, G) )
%   | | then return -0.10995542276486407;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.049421035812253794;  // std dev = 2,983, 91,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.09964709266546323;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.2864100400622271;  // std dev = 0,986, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.05934509078782852;  // std dev = 3,011, 107,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.09105680750965815;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09964709266546323;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.03282337809074111;  // std dev = 3,369, 135,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then return 0.19571464613487355;  // std dev = 1,375, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | else return -0.032126438409151144;  // std dev = 2,967, 89,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.08136211444947584;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.0884325507833147;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.011863441153474595;  // std dev = 3,481, 134,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */


Results
   AUC ROC   = 0.911476
   AUC PR    = 0.312862
   CLL	      = -0.226992
   Precision = 0.354244 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.50087


Total learning time: 1.78 seconds
Total inference time: 2.443 seconds
AUC ROC: 0.911476


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true': [0.0, 1, 0], 'true': [0.0, 0, 0], 'false,false': [5.262, 72, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [1.662, 3, 35], 'false,false': [2.992, 89, 10], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [1.375, 2, 35], 'false,false': [2.955, 70, 10], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 1, 0], 'false': [4.399, 96, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, F), genre(G, F)', 'false': 'genre(A, D), genre(E, D)', 'false,false,true': 'movie(H, G), movie(H, B)'}, {'false,false,true,true': [0.0, 0, 35], 'false,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 7, 0], 'true': [0.0, 0, 0], 'false,false,false': [3.015, 100, 10]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,false': 'genre(A, G), genre(H, G)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false': [1.173, 2, 35], 'false,false,false': [2.983, 81, 10], 'false,false,true': [2.63e-09, 5, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.986, 1, 35], 'false,false,false': [3.011, 97, 10], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'genre(A, D), genre(E, D)', 'false,true,false': 'movie(G, E), movie(G, B)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 2, 0], 'false,true,false,true': [1.86e-09, 3, 0], 'false,false': [3.369, 90, 45], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true': [1.375, 2, 35], 'true': [0.0, 0, 0], 'false,false': [2.967, 79, 10]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true,true,true': [0.0, 2, 0], 'false,false': [3.481, 89, 45], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0]}]]
[{'': [nan, 0.2359235851766742], 'false': [0.0, 0.23668639053254517]}, {'': [nan, 0.21949434005721138], 'false,true,true': [0.07271468144044163, nan], 'false,true': [0.07271468144044163, nan], 'false': [0.07271468144044163, 0.09042446423629882]}, {'': [nan, 0.18963006657977385], 'false,true,true': [0.05113221329437515, nan], 'false,true': [0.05113221329437515, nan], 'false': [0.05113221329437515, 0.109138173306032]}, {'': [0.0, 0.1372455488284252]}, {'': [nan, 0.1246529810257398], 'false,false': [-5.075305255429287e-17, 0.0826446280991732], 'false': [-3.96508223080413e-18, 0.12903429750185097], 'false,false,true': [-5.075305255429287e-17, nan]}, {'': [nan, 0.109688794696362], 'false,true': [nan, 0.03718657058123605], 'false,false': [1.3877787807814458e-18, 0.09781427363844974], 'false': [0.03718657058123605, 0.09290069465789857]}, {'': [nan, 0.09113375429399112], 'false,true,true': [0.0, nan], 'false,false': [0.027006172839506237, 0.08472355664250181], 'false': [0.0, 0.09271242905012016], 'false,true': [0.0, nan], 'false,false,true': [0.027006172839506237, nan]}, {'': [nan, 0.08165014391603788], 'false,true': [nan, 1.7710319773929505e-05], 'false': [1.7710319773929505e-05, 0.08409465880543018], 'false,true,false': [1.1564823173178713e-18, 0.0]}, {'': [nan, 0.09565059315845367], 'false': [0.051132213294375436, 0.09891436348880156]}, {'': [nan, 0.08807135080294648], 'false,true,true': [0.0, nan], 'false,true': [0.0, 0.0], 'false': [1.2497767487717679e-05, 0.09042859219928229]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '4;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '4;false;genre(B, F), genre(G, F).;true;true', '5;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '5;false;genre(A, G), genre(H, G).;true;true', '6;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '7;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '7;true;movie(G, E), movie(G, B).;true;true', '9;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '9;true;movie(F, E), movie(F, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( female(A) )
%   | | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.7748156017661786;  // std dev = 0,276, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7275438991647452;  // std dev = 0,055, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2763996342331301;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6,23e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5633914459967004;  // std dev = 0,069, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2138985475927123;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4235514458095562;  // std dev = 0,068, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.182654962272885;  // std dev = 0,011, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.10135675994431746;  // std dev = 0,021, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.09271142585896693;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(B, E), genre(F, E) )
%   | then if ( female(A) )
%   | | then return 0.26519007418737217;  // std dev = 0,148, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else return 0.3341882774205408;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( actor(B) )
%   | | then return -0.09271142585896698;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( female(A) )
%   | | | then return 0.24707609290631288;  // std dev = 0,446, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3341882774205407;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( female(A) )
%   | then return 0.26156972502691384;  // std dev = 2,58e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.21755329711361532;  // std dev = 0,140, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( genre(A, E), genre(F, E) )
%   | then return -0.08520185196464182;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then return -0.08520185196464178;  // std dev = 2,98e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( female(A) )
%   | | | then return 0.26508353850429506;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10836561450951192;  // std dev = 0,540, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.07879143849163608;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.078791438491636;  // std dev = 3,65e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.22121773091692185;  // std dev = 0,056, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.24765122049509572;  // std dev = 0,012, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, B) )
%   | then return -0.07325896371173111;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07325896371173111;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.07325896371173099;  // std dev = 4,65e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then return 0.18547013532812617;  // std dev = 0,049, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.20206562303336972;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then return -0.06843812748472222;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.06843812748472222;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.0684381274847222;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return 0.1404654483706814;  // std dev = 0,066, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.16420323946025656;  // std dev = 0,006, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, B) )
%   | then return -0.06420167732757583;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.06420167732757583;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06420167732757591;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13672931190823634;  // std dev = 0,004, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.14289575605649268;  // std dev = 0,025, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.1908394772514519;  // std dev = 0,017, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082397
   Precision = 0.873057 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932227


Total learning time: 2.674 seconds
Total inference time: 2.574 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 5, Type: transfer, Time: 01:10:31
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 0.932227, 'Mapping results': {'Knowledge compiling time': 0.5072054862976074, 'Total time': 2.3806545734405518, 'Generating mappings time': 0.060744285583496094, 'Generating paths time': 1.7845206260681152, 'Possible mappings': 126, 'Finding best mapping': 0.02817845344543457}, 'CLL': -0.082397, 'AUC ROC': 1.0, 'Precision': [0.873057, 0.5], 'Inference time': 2.574, 'Learning time': 4.454, 'Parameter Learning results': {'Recall': 0.854599, 'AUC PR': 0.312862, 'F1': 0.50087, 'CLL': -0.226992, 'AUC ROC': 0.911476, 'Precision': [0.354244, 0.5], 'Inference time': 2.443, 'Learning time': 1.78}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,88e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6,99e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783627;  // std dev = 3,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 5,16e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5,16e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12341331800382296;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109161;  // std dev = 5,48e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11067055982680468;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1002382240198338;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420267;  // std dev = 4,01e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09155298692982805;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08421784707829943;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.995191
   AUC PR    = 0.742291
   CLL	      = -0.085258
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.141 seconds
Total inference time: 2.456 seconds
AUC ROC: 0.995191


Dataset: cora->imdb(workedunder), Fold: 5, Type: scratch, Time: 01:10:36
{'Recall': 1.0, 'AUC PR': 0.742291, 'F1': 0.852086, 'CLL': -0.085258, 'AUC ROC': 0.995191, 'Precision': [0.742291, 0.5], 'Inference time': 2.456, 'Learning time': 2.141}


Starting experiment #5 for cora->imdb(workedunder)

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.25953057897374937;  // std dev = 0,490, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.06085163780221508;  // std dev = 3,458, 74,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.049929757017320595;  // std dev = 3,364, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else return 0.031724064633188706;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22491459873669895;  // std dev = 0,490, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.12084505089441912;  // std dev = 1,185, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.0668639363728747;  // std dev = 3,642, 78,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | else return 0.030464056878698666;  // std dev = 0,381, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7467745274404196;  // std dev = 1,384, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return -0.2115588058929143;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.45510786077375287;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | | else return 0.040966446632338824;  // std dev = 4,323, 99,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.3659059828394807;  // std dev = 4,162, 71,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=41 */
%   | | | else return 0.040966446632338824;  // std dev = 4,323, 99,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | | else return 0.18921477339891882;  // std dev = 0,490, 6.722,000 (wgt'ed) examples reached here.  /* #neg=4.028 #pos=2.694 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then return 0.05741595766761914;  // std dev = 0,404, 91,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=19 */
%   | else return 0.02586945895225914;  // std dev = 0,381, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1562529049860977;  // std dev = 0,489, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.11816950838404085;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1899046875564278;  // std dev = 1,599, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.042716184544722396;  // std dev = 3,450, 74,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return 0.03987556727177932;  // std dev = 0,403, 83,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | | else return 0.02066318480415734;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12623037826778022;  // std dev = 0,489, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.472241126338331;  // std dev = 1,148, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.18086723773479083;  // std dev = 0,082, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.1519448278856328;  // std dev = 0,056, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.03313908670034283;  // std dev = 3,452, 76,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.09641979342975639;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.02650340317888822;  // std dev = 3,364, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else return 0.017967447151137243;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.5849912143267268;  // std dev = 0,062, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3043691569677669;  // std dev = 2,300, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.21709466467044214;  // std dev = 3,435, 73,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.017971230534863714;  // std dev = 4,323, 99,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | else return 0.09977969108042371;  // std dev = 0,490, 6.892,000 (wgt'ed) examples reached here.  /* #neg=4.132 #pos=2.760 */
%   else return 0.018674614068781226;  // std dev = 0,383, 946,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=170 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0788044025597471;  // std dev = 0,488, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.1053374127031597;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.14264610267892663;  // std dev = 1,604, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.029416591934694095;  // std dev = 3,432, 74,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.07419288588751018;  // std dev = 1,340, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.017871374145985768;  // std dev = 3,362, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else return 0.013091922726777344;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.061375531850338956;  // std dev = 0,488, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.0958218751375408;  // std dev = 0,019, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.11906778369579406;  // std dev = 1,467, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.025540652043311015;  // std dev = 3,445, 74,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.05144350244667502;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.01595375416516563;  // std dev = 3,364, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else return 0.011320219831298911;  // std dev = 0,379, 772,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=134 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5428160686866753;  // std dev = 1,420, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return -0.38791786540416245;  // std dev = 0,141, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( haswordauthor(E, C) )
%   | | | then return 0.19693822320801133;  // std dev = 2,300, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | | else return -0.06782874162197443;  // std dev = 4,323, 99,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | else return 0.047073459745472834;  // std dev = 0,489, 6.892,000 (wgt'ed) examples reached here.  /* #neg=4.132 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then if ( author(K, I), venue(K, A) )
%   | | | then return 0.18030561703297524;  // std dev = 1,059, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.17690075114447873;  // std dev = 0,117, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.026008097176777226;  // std dev = 0,399, 82,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | else return 0.010272107687151786;  // std dev = 0,381, 855,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=151 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03648709224249359;  // std dev = 0,487, 7.093,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=2.847 */
%   else return 0.010052098547224816;  // std dev = 0,382, 946,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=170 */


Predicates from source: ['samevenue(venue,venue).', 'haswordauthor(author,word).', 'samebib(class,class).', 'haswordvenue(venue,word).', 'author(class,author).', 'venue(class,venue).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.49162793159484863
   Generating paths time   = 2.508044958114624
   Generating mappings time   = 0.05887317657470703
   Possible mappings   = 126
   Finding best mapping   = 0.028383493423461914
   Total time   = 3.086935043334961


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,false;genre(B, H), genre(I, H).;true;false
0;false;genre(A, D), genre(E, D).;true;true
0;false,false,true;movie(J, I), movie(J, A).;false;false
0;false,true;genre(E, F), genre(B, F).;false;true
0;false,true,false;movie(G, E), movie(G, B).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
1;false,true;genre(E, F), genre(B, F).;false;true
1;false;genre(A, D), genre(E, D).;true;false
1;false,true,false;movie(G, E), movie(G, A).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;true,true;movie(F, E), movie(F, A).;true;true
2;true,false,true;movie(J, I), movie(J, B).;false;false
2;false;genre(B, K), genre(L, K).;false;false
2;true,true,false;genre(B, D).;false;false
2;true,true,true;movie(G, B).;false;false
2;true;genre(A, D), genre(E, D).;true;true
2;true,false;genre(B, H), genre(I, H).;true;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false,true;genre(E, F), genre(A, F).;false;true
3;false,false;genre(A, H), genre(I, H).;false;false
3;false;genre(B, D), genre(E, D).;true;true
3;false,true,false;movie(G, E), movie(G, A).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, A).;false;false
4;false,false;genre(B, I), genre(J, I).;true;false
4;false;genre(A, D), genre(E, D).;true;true
4;false,false,true;movie(K, J), movie(K, A).;false;false
4;false,true;movie(F, E), movie(F, B).;true;true
4;false,true,false;movie(H, E), movie(H, A).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
5;true,true;genre(E, C).;true;true
5;true,true,true;movie(F, E), movie(F, B).;false;false
5;true;genre(A, D), genre(E, D).;true;false
5;true,true,false;movie(G, E), movie(G, A).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
6;false,false;genre(A, H), genre(I, H).;true;false
6;false;genre(B, D), genre(E, D).;true;true
6;false,false,true;movie(J, I), movie(J, B).;false;false
6;false,true;genre(E, F), genre(A, F).;false;true
6;false,true,false;movie(G, E), movie(G, A).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
7;false,false;genre(B, H), genre(I, H).;true;false
7;false;genre(A, D), genre(E, D).;true;true
7;false,false,true;movie(J, I), movie(J, A).;false;false
7;false,true;genre(E, F), genre(B, F).;false;true
7;false,true,false;movie(G, E), movie(G, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;true,true;movie(F, E), movie(F, B).;true;true
8;false,true;movie(J, I), movie(J, B).;true;false
8;false;genre(B, H), genre(I, H).;true;false
8;true,true,false;genre(E, C).;false;false
8;true,true,true;movie(G, A).;false;false
8;true;genre(B, D), genre(E, D).;true;false
8;false,true,true;movie(K, I), movie(K, A).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.8236661764788228;  // std dev = 1,390, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048763;  // std dev = 8,43e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.15341323439362134;  // std dev = 5,240, 170,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then return 0.6128887350672014;  // std dev = 2,142, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | else return -0.1423629593963861;  // std dev = 0,053, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.4273157859198411;  // std dev = 2,646, 64,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H), genre(I, H) )
%   | | then return -0.0988864848692685;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12666197128477033;  // std dev = 4,47e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.09041772391252863;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.41140897244274366;  // std dev = 1,390, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11330047992963678;  // std dev = 4,47e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, C) )
%   | | then if ( movie(F, E), movie(F, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.022973797224267904;  // std dev = 3,283, 171,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.29176659066793587;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, B) )
%   | | | then return -0.08502207004174188;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1045379719773454;  // std dev = 4,21e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.07863704523985932;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.19824014241286278;  // std dev = 2,142, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.0951488957747859;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, E), movie(G, A) )
%   | | | then return 0.24201324888966627;  // std dev = 6,99e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.7579867511103336;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08672267151188041;  // std dev = 0,028, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.004555851142583262;  // std dev = 2,177, 174,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */


Results
   AUC ROC   = 0.905419
   AUC PR    = 0.830303
   CLL	      = -0.134061
   Precision = 0.372905 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.512476


Total learning time: 1.885 seconds
Total inference time: 2.827 seconds
AUC ROC: 0.905419


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [1.39, 2, 56], 'false,false,false': [8.43e-08, 92, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 5, 0], 'true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'genre(A, D), genre(E, D)', 'false,true,false': 'movie(G, E), movie(G, A)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 5, 0], 'false,false': [5.24, 114, 56], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true': [2.142, 5, 56], 'true': [0.0, 0, 0], 'false,false': [0.053, 103, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,false': 'movie(G, E), movie(G, A)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,false': 'genre(A, H), genre(I, H)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 5, 0], 'false,false,false': [4.47e-08, 103, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [2.646, 8, 56], 'true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [1.39, 2, 56], 'false,false,false': [4.47e-08, 88, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 1, 0], 'false,true,true,true': [2.63e-09, 3, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'genre(E, C)', 'true,true,true': 'movie(F, E), movie(F, B)', 'true': 'genre(A, D), genre(E, D)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'false': [3.283, 115, 56], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(A, H), genre(I, H)', 'false': 'genre(B, D), genre(E, D)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'movie(G, E), movie(G, A)', 'false,false,true': 'movie(J, I), movie(J, B)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [2.63e-09, 6, 0], 'false,false,false': [4.21e-08, 106, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [1.687, 3, 56], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [2.142, 5, 56], 'false,false,false': [0.0, 100, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 2, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, E), movie(G, A)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [6.99e-08, 0, 56], 'false,false': [0.028, 104, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 1, 0], 'false': [2.177, 118, 56]}]]
[{'': [0.0, 0.2307596253902187], 'false,false': [0.03329369797859664, 7.723290606088045e-17], 'false': [-2.7755575615628915e-18, 0.23395555555555575], 'false,true': [nan, -2.7755575615628915e-18], 'false,true,false': [-2.7755575615628915e-18, nan], 'false,false,true': [0.03329369797859664, nan]}, {'': [nan, 0.15906301542546006], 'false,true': [nan, 0.0], 'false': [0.0, 0.16151957617168783], 'false,true,false': [0.0, nan]}, {'': [nan, 0.16125445300932512], 'false': [0.07524858908895533, 2.708391125917224e-05]}, {'': [0.0, 0.11208861383942752], 'false,true': [nan, 0.10937499999999975], 'false,false': [0.0, 1.9401955770148367e-17], 'false': [0.10937499999999975, 3.406301333104596e-05], 'false,true,false': [0.10937499999999975, nan]}, {'': [0.0, 0.07823585097719295], 'false,true,true': [2.3129646346357427e-18, nan], 'false,false': [0.03329369797859655, 2.2709107321878203e-17], 'false': [2.3129646346357427e-18, 0.07915013898038589], 'false,true': [2.3129646346357427e-18, nan], 'false,false,true': [0.03329369797859655, nan]}, {'': [0.0, 0.06304051755523986], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [nan, 0.05196987633331778], 'false,false': [1.1564823173178713e-18, 1.67580833905684e-17], 'false': [0.04826199367997722, 1.9310713682823715e-05], 'false,false,true': [1.1564823173178713e-18, nan], 'false,true': [nan, 0.04826199367997722], 'false,true,false': [0.04826199367997722, nan]}, {'': [nan, 0.04827710368840324], 'false,false': [0.07524858908895446, -3.552713678800501e-17], 'false': [0.0, 0.04876690222551341], 'false,true': [nan, 0.0], 'false,true,false': [0.0, nan], 'false,false,true': [0.07524858908895446, nan]}, {'': [nan, 0.031825653419901], 'false,true,true': [8.723180907769087e-17, 0.0], 'false,true': [0.033293697978596985, nan], 'false': [0.033293697978596985, 7.395850772651898e-06]}, {'': [0.0, 0.027234784232748815]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '0;false,false;genre(B, H), genre(I, H).;true;true', '0;false;genre(A, D), genre(E, D).;true;true', '1;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '2;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '3;false,false;genre(A, H), genre(I, H).;true;true', '3;false;genre(B, D), genre(E, D).;true;true', '4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '4;false,false;genre(B, H), genre(I, H).;true;true', '4;false;genre(A, D), genre(E, D).;true;true', '5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '6;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '6;false;genre(A, H), genre(I, H).;true;true', '7;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '7;false;genre(B, H), genre(I, H).;true;true', '8;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '8;true;movie(G, E), movie(G, A).;true;true', '9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), genre(E, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, F), genre(G, F) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.7936328060672536;  // std dev = 1,368, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | else return -0.14185106490048763;  // std dev = 8,69e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7261202067615339;  // std dev = 0,048, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2725045943659324;  // std dev = 0,018, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( female(A) )
%   | | then return 0.5537245152765;  // std dev = 1,03e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5468760033181328;  // std dev = 0,122, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.222217908711333;  // std dev = 0,012, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360618;  // std dev = 8,69e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( female(A) )
%   | | then return 0.3945693011941451;  // std dev = 0,113, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.4337348530853689;  // std dev = 6,66e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( genre(A, F), genre(G, F) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1015963294878364;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, F), genre(G, F) )
%   | | then if ( movie(H, A), movie(H, B) )
%   | | | then return 0.32830882504787345;  // std dev = 0,027, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.25914445133926295;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926105;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09199517084862943;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1,83e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2571428910118654;  // std dev = 2,58e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.2633415109720216;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.21227865679277577;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( female(A) )
%   | | then return 0.2111487895584494;  // std dev = 4,56e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.21551208081190154;  // std dev = 2,63e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.1776425990402423;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, F), genre(G, F) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07877675473109179;  // std dev = 5,27e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1139787425607401;  // std dev = 0,103, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, E), genre(F, E) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17811611396459665;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.18130568681422501;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.1539839869913836;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then if ( female(A) )
%   | | then return 0.14316077269767927;  // std dev = 0,054, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.1294710943681335;  // std dev = 0,084, 32,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( female(A) )
%   | | then return 0.12546265421397942;  // std dev = 0,054, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.1300098818885147;  // std dev = 0,052, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */


Results
   AUC ROC   = 0.999249
   AUC PR    = 0.976306
   CLL	      = -0.081285
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total learning time: 3.583 seconds
Total inference time: 2.742 seconds
AUC ROC: 0.999249


Refined model AUC ROC: 0.999249


Dataset: cora->imdb(workedunder), Fold: 1, Type: transfer, Time: 01:25:29
{'Recall': 0.819018, 'AUC PR': 0.976306, 'F1': 0.900506, 'Mapping results': {'Knowledge compiling time': 0.49162793159484863, 'Total time': 3.086935043334961, 'Generating mappings time': 0.05887317657470703, 'Generating paths time': 2.508044958114624, 'Possible mappings': 126, 'Finding best mapping': 0.028383493423461914}, 'CLL': -0.081285, 'AUC ROC': 0.999249, 'Precision': [1.0, 0.5], 'Inference time': 2.742, 'Learning time': 5.468, 'Parameter Learning results': {'Recall': 0.819018, 'AUC PR': 0.830303, 'F1': 0.512476, 'CLL': -0.134061, 'AUC ROC': 0.905419, 'Precision': [0.372905, 0.5], 'Inference time': 2.827, 'Learning time': 1.885}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( female(A) )
%   | then return 0.6909105759500754;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.6861400788776213;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.571176969857044;  // std dev = 8,43e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.4990655373816412;  // std dev = 0,246, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return -0.11543274314930327;  // std dev = 0,323, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10131223773700221;  // std dev = 4,94e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.43458325948578663;  // std dev = 0,038, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.5655973546302597;  // std dev = 0,012, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09245335775973132;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.33231892414122205;  // std dev = 0,034, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.42683655640988544;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23791552789479714;  // std dev = 0,109, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.24733122541226324;  // std dev = 0,106, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.08601476613513452;  // std dev = 0,118, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07852860306947189;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21877384711937697;  // std dev = 0,020, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.3796256744813708;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07303091226262198;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18368302283913948;  // std dev = 0,018, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2962026797085137;  // std dev = 0,008, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06823847681853865;  // std dev = 1,49e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1577231266924318;  // std dev = 0,016, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.23837040174950772;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06402549943978103;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13788296444109868;  // std dev = 0,014, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.19529776979132196;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087898
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.309 seconds
Total inference time: 2.016 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 1, Type: scratch, Time: 01:25:34
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 0.847854, 'CLL': -0.087898, 'AUC ROC': 1.0, 'Precision': [0.735892, 0.5], 'Inference time': 2.016, 'Learning time': 2.309}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.4839670658111572
   Generating paths time   = 2.5337119102478027
   Generating mappings time   = 0.05953645706176758
   Possible mappings   = 126
   Finding best mapping   = 0.028336763381958008
   Total time   = 3.105557680130005


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,false;genre(B, H), genre(I, H).;true;false
0;false;genre(A, D), genre(E, D).;true;true
0;false,false,true;movie(J, I), movie(J, A).;false;false
0;false,true;genre(E, F), genre(B, F).;false;true
0;false,true,false;movie(G, E), movie(G, B).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
1;false,true;genre(E, F), genre(B, F).;false;true
1;false;genre(A, D), genre(E, D).;true;false
1;false,true,false;movie(G, E), movie(G, A).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;true,true;movie(F, E), movie(F, A).;true;true
2;true,false,true;movie(J, I), movie(J, B).;false;false
2;false;genre(B, K), genre(L, K).;false;false
2;true,true,false;genre(B, D).;false;false
2;true,true,true;movie(G, B).;false;false
2;true;genre(A, D), genre(E, D).;true;true
2;true,false;genre(B, H), genre(I, H).;true;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false,true;genre(E, F), genre(A, F).;false;true
3;false,false;genre(A, H), genre(I, H).;false;false
3;false;genre(B, D), genre(E, D).;true;true
3;false,true,false;movie(G, E), movie(G, A).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, A).;false;false
4;false,false;genre(B, I), genre(J, I).;true;false
4;false;genre(A, D), genre(E, D).;true;true
4;false,false,true;movie(K, J), movie(K, A).;false;false
4;false,true;movie(F, E), movie(F, B).;true;true
4;false,true,false;movie(H, E), movie(H, A).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
5;true,true;genre(E, C).;true;true
5;true,true,true;movie(F, E), movie(F, B).;false;false
5;true;genre(A, D), genre(E, D).;true;false
5;true,true,false;movie(G, E), movie(G, A).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
6;false,false;genre(A, H), genre(I, H).;true;false
6;false;genre(B, D), genre(E, D).;true;true
6;false,false,true;movie(J, I), movie(J, B).;false;false
6;false,true;genre(E, F), genre(A, F).;false;true
6;false,true,false;movie(G, E), movie(G, A).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
7;false,false;genre(B, H), genre(I, H).;true;false
7;false;genre(A, D), genre(E, D).;true;true
7;false,false,true;movie(J, I), movie(J, A).;false;false
7;false,true;genre(E, F), genre(B, F).;false;true
7;false,true,false;movie(G, E), movie(G, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;true,true;movie(F, E), movie(F, B).;true;true
8;false,true;movie(J, I), movie(J, B).;true;false
8;false;genre(B, H), genre(I, H).;true;false
8;true,true,false;genre(E, C).;false;false
8;true,true,true;movie(G, A).;false;false
8;true;genre(B, D), genre(E, D).;true;false
8;false,true,true;movie(K, I), movie(K, A).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.8089686072306601;  // std dev = 1,689, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048763;  // std dev = 8,69e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.19901659585194306;  // std dev = 5,154, 151,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H), genre(I, H) )
%   | then return 0.6289987167849053;  // std dev = 1,784, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.1485272517732836;  // std dev = 0,036, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.5237148560811535;  // std dev = 0,991, 59,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H), genre(I, H) )
%   | | then return -0.09833855396340084;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1310892848524078;  // std dev = 9,54e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.08995688240922303;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, E), movie(H, A) )
%   | | | then return -0.08995688240922306;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, I), genre(J, I) )
%   | | then if ( movie(K, J), movie(K, A) )
%   | | | then return 0.39384126997737273;  // std dev = 0,991, 59,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | | | else return -0.24715647755716194;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11686578940347184;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.04281423513896427;  // std dev = 2,614, 167,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.24607561904190295;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | | else return -0.21112158740116313;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, B) )
%   | | | then return -0.08617144205088033;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08617144205088036;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10943721888119219;  // std dev = 4,21e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.079623349883148;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.079623349883148;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.22715540141571453;  // std dev = 1,390, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | | else return -0.178096188400161;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09921836166810696;  // std dev = 3,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, E), movie(G, A) )
%   | | | then return 0.2191570745830607;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.3327421226003949;  // std dev = 0,750, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08916304016978897;  // std dev = 0,050, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.00849436205371956;  // std dev = 1,785, 162,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */


Results
   AUC ROC   = 0.909919
   AUC PR    = 0.830557
   CLL	      = -0.153422
   Precision = 0.358593 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.498589


Total learning time: 1.716 seconds
Total inference time: 2.785 seconds
AUC ROC: 0.909919


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [1.689, 3, 58], 'false,false,false': [8.69e-08, 97, 0], 'false,true,false,false': [0.0, 2, 0], 'false,false,true,false': [0.0, 4, 0], 'false,true,false,true': [0.0, 8, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'genre(A, D), genre(E, D)', 'false,true,false': 'movie(G, E), movie(G, A)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 6, 0], 'false,false': [5.154, 93, 58], 'true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)', 'false': 'genre(B, H), genre(I, H)'}, {'false,false': [0.036, 86, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [1.784, 4, 58], 'true,true,true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,false': 'movie(G, E), movie(G, A)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,false': 'genre(A, H), genre(I, H)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 8, 0], 'false,false,false': [9.54e-08, 95, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [0.991, 1, 58], 'true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, I), genre(J, I)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'movie(H, E), movie(H, A)', 'false,false,true': 'movie(K, J), movie(K, A)'}, {'false,false,true,true': [0.991, 1, 58], 'false,true,true,false': [0.0, 0, 0], 'false,false,false': [6.83e-08, 103, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 3, 0], 'false,true,true,true': [0.0, 10, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [2.614, 109, 58]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(A, H), genre(I, H)', 'false': 'genre(B, D), genre(E, D)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'movie(G, E), movie(G, A)', 'false,false,true': 'movie(J, I), movie(J, B)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 3, 0], 'false,false,false': [4.21e-08, 103, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,false': [0.0, 1, 0], 'false,true,false,true': [1.934, 4, 58], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [1.39, 2, 58], 'false,false,false': [3.94e-08, 101, 0], 'false,true,false,false': [0.0, 2, 0], 'false,false,true,false': [0.0, 4, 0], 'false,true,false,true': [0.0, 6, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, E), movie(G, A)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [5.96e-08, 0, 58], 'false,false': [0.05, 109, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.75, 7, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [1.785, 104, 58]}]]
[{'': [nan, 0.22349918875067623], 'false,false': [0.09609467455621257, 7.783006770568107e-17], 'false': [-1.1102230246251566e-17, 0.22984301173601604], 'false,true': [nan, -1.1102230246251566e-17], 'false,true,false': [-6.938893903907228e-18, 0.0], 'false,false,true': [0.04676162321956422, 0.0]}, {'': [0.0, 0.17304886525476598], 'false,true': [nan, -2.3129646346357427e-18], 'false': [-2.3129646346357427e-18, 0.17590172715885535], 'false,true,false': [-2.3129646346357427e-18, nan]}, {'': [0.0, 0.1686854302526851], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'false': [0.05135643841139969, 1.5426204298969768e-05], 'true': [0.0, nan]}, {'': [0.0, 0.1046318116983526], 'false,true': [nan, 0.016661878770468725], 'false,false': [-5.204170427930421e-18, 9.582977686238194e-17], 'false': [0.016661878770468725, 7.683889943081224e-05], 'false,true,false': [0.016661878770468725, nan]}, {'': [nan, 0.06343091597183104], 'false,true,true': [-4.163336342344337e-18, nan], 'false,false': [0.02311801652104819, 4.527123013034619e-17], 'false': [-2.135044278125301e-18, 0.06666570303900511], 'false,true': [-4.163336342344337e-18, -1.1564823173178713e-18], 'false,true,false': [-1.1564823173178713e-18, nan], 'false,false,true': [0.01666187877046809, 0.0]}, {'': [nan, 0.04091598673315472]}, {'': [nan, 0.051381941905464384], 'false,false': [8.673617379884035e-19, 1.7246182906798547e-17], 'false': [0.06266106102035533, 1.947891563155249e-05], 'false,false,true': [0.0, 0.0], 'false,true': [nan, 0.06266106102035533], 'false,true,false': [0.0603537981269511, 0.0]}, {'': [nan, 0.035674437266111296], 'false,false': [0.039831117574444234, 1.5389230044309102e-17], 'false': [0.0, 0.03696744481500488], 'false,true': [nan, 0.0], 'false,true,false': [0.0, 0.0], 'false,false,true': [0.032222222222222104, 0.0]}, {'': [nan, 0.028675523078376036], 'false,true,true': [6.125368411725002e-17, 0.0803177317939326], 'false,true': [0.03791934055622416, nan], 'false': [0.03791934055622416, 2.3284883288460284e-05]}, {'': [nan, 0.01966647042881384]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '0;false,true;movie(J, I), movie(J, A).;true;true', '0;true;movie(G, E), movie(G, B).;true;true', '0;false;genre(B, H), genre(I, H).;true;true', '1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '1;false;genre(A, D), genre(E, D).;true;true', '2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '2;false;genre(B, H), genre(I, H).;true;true', '3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '3;false,false;genre(A, H), genre(I, H).;true;true', '3;false;genre(B, D), genre(E, D).;true;true', '4;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '4;false,true;movie(K, J), movie(K, A).;true;true', '4;true;movie(F, E), movie(F, B).;true;true', '4;false;genre(B, I), genre(J, I).;true;true', '6;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '6;false,true;movie(J, I), movie(J, B).;true;true', '6;true;movie(G, E), movie(G, A).;true;true', '6;false;genre(A, H), genre(I, H).;true;true', '7;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '7;false,true;movie(J, I), movie(J, A).;true;true', '7;true;movie(G, E), movie(G, B).;true;true', '7;false;genre(B, H), genre(I, H).;true;true', '8;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '8;true;movie(G, E), movie(G, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, B) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), genre(G, F) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.832507909458486;  // std dev = 0,987, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048763;  // std dev = 8,43e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( female(B) )
%   | | then return -0.13774945830746366;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1309134473190902;  // std dev = 0,019, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.722844879598921;  // std dev = 0,019, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.5586775921668294;  // std dev = 0,003, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( female(A) )
%   | | | then return -0.1482167103184899;  // std dev = 0,124, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.25106567664185886;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.11231637819360628;  // std dev = 4,21e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( female(B) )
%   | | | then return -0.11479538526784902;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11921089748207733;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.4199788690477936;  // std dev = 0,003, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12186510588648106;  // std dev = 0,099, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(A, G), genre(H, G) )
%   | | then return -0.10581255797818538;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, B) )
%   | then if ( female(B) )
%   | | then return -0.09110569738497001;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09130632634364226;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10368777987461453;  // std dev = 0,000246, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(B, F), genre(G, F) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then if ( female(A) )
%   | | | then return 0.29364296870988216;  // std dev = 0,514, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.31119023246373;  // std dev = 0,505, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.08332345401585077;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1,83e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.08518475138839679;  // std dev = 1,83e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return -0.08395121273688479;  // std dev = 0,000139, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09098924744889862;  // std dev = 0,012, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.2585932090749362;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2601479968483656;  // std dev = 1,18e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.16212828417065434;  // std dev = 0,176, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then return 0.1679029875198721;  // std dev = 0,130, 65,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), genre(G, F) )
%   | then if ( movie(H, G), movie(H, B) )
%   | | then return -0.07721353914714263;  // std dev = 0,000129, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0869529515525198;  // std dev = 0,000157, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( movie(I, A), movie(I, B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, B) )
%   | then return -0.09813089480140162;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08023340400607318;  // std dev = 0,000146, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, F), genre(G, F) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then if ( female(A) )
%   | | | then return 0.14482258328314304;  // std dev = 0,603, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.16509212910818388;  // std dev = 0,589, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else return -0.06489508437167074;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then if ( female(A) )
%   | | then return 0.1645697973791882;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.12127860965251301;  // std dev = 0,128, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | else return -0.06245756175657571;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420274;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.0684269778442027;  // std dev = 1,39e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.0678963589164046;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14317306380286698;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.14683778743863574;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.16073885883611921;  // std dev = 0,275, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return -0.09060657222257198;  // std dev = 0,079, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.992017
   AUC PR    = 0.887629
   CLL	      = -0.083874
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 2.975 seconds
Total inference time: 2.683 seconds
AUC ROC: 0.992017


Refined model AUC ROC: 0.992017


Dataset: cora->imdb(workedunder), Fold: 2, Type: transfer, Time: 01:25:48
{'Recall': 0.817901, 'AUC PR': 0.887629, 'F1': 0.89983, 'Mapping results': {'Knowledge compiling time': 0.4839670658111572, 'Total time': 3.105557680130005, 'Generating mappings time': 0.05953645706176758, 'Generating paths time': 2.5337119102478027, 'Possible mappings': 126, 'Finding best mapping': 0.028336763381958008}, 'CLL': -0.083874, 'AUC ROC': 0.992017, 'Precision': [1.0, 0.5], 'Inference time': 2.683, 'Learning time': 4.691, 'Parameter Learning results': {'Recall': 0.817901, 'AUC PR': 0.830557, 'F1': 0.498589, 'CLL': -0.153422, 'AUC ROC': 0.909919, 'Precision': [0.358593, 0.5], 'Inference time': 2.785, 'Learning time': 1.716}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048768;  // std dev = 7,74e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1132529791721352;  // std dev = 0,115, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10151087358118475;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09261972003751011;  // std dev = 7,45e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08512392687768991;  // std dev = 7,81e-06, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07872460908507876;  // std dev = 2,36e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07509856587869582;  // std dev = 0,196, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0682665129371498;  // std dev = 7,83e-06, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06405024114174498;  // std dev = 7,38e-06, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066201
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.499 seconds
Total inference time: 1.962 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 2, Type: scratch, Time: 01:25:53
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'CLL': -0.066201, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.962, 'Learning time': 2.499}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.5764050483703613
   Generating paths time   = 2.4621007442474365
   Generating mappings time   = 0.05996584892272949
   Possible mappings   = 126
   Finding best mapping   = 0.028325557708740234
   Total time   = 3.126803398132324


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,false;genre(B, H), genre(I, H).;true;false
0;false;genre(A, D), genre(E, D).;true;true
0;false,false,true;movie(J, I), movie(J, A).;false;false
0;false,true;genre(E, F), genre(B, F).;false;true
0;false,true,false;movie(G, E), movie(G, B).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
1;false,true;genre(E, F), genre(B, F).;false;true
1;false;genre(A, D), genre(E, D).;true;false
1;false,true,false;movie(G, E), movie(G, A).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;true,true;movie(F, E), movie(F, A).;true;true
2;true,false,true;movie(J, I), movie(J, B).;false;false
2;false;genre(B, K), genre(L, K).;false;false
2;true,true,false;genre(B, D).;false;false
2;true,true,true;movie(G, B).;false;false
2;true;genre(A, D), genre(E, D).;true;true
2;true,false;genre(B, H), genre(I, H).;true;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false,true;genre(E, F), genre(A, F).;false;true
3;false,false;genre(A, H), genre(I, H).;false;false
3;false;genre(B, D), genre(E, D).;true;true
3;false,true,false;movie(G, E), movie(G, A).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, A).;false;false
4;false,false;genre(B, I), genre(J, I).;true;false
4;false;genre(A, D), genre(E, D).;true;true
4;false,false,true;movie(K, J), movie(K, A).;false;false
4;false,true;movie(F, E), movie(F, B).;true;true
4;false,true,false;movie(H, E), movie(H, A).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
5;true,true;genre(E, C).;true;true
5;true,true,true;movie(F, E), movie(F, B).;false;false
5;true;genre(A, D), genre(E, D).;true;false
5;true,true,false;movie(G, E), movie(G, A).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
6;false,false;genre(A, H), genre(I, H).;true;false
6;false;genre(B, D), genre(E, D).;true;true
6;false,false,true;movie(J, I), movie(J, B).;false;false
6;false,true;genre(E, F), genre(A, F).;false;true
6;false,true,false;movie(G, E), movie(G, A).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
7;false,false;genre(B, H), genre(I, H).;true;false
7;false;genre(A, D), genre(E, D).;true;true
7;false,false,true;movie(J, I), movie(J, A).;false;false
7;false,true;genre(E, F), genre(B, F).;false;true
7;false,true,false;movie(G, E), movie(G, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;true,true;movie(F, E), movie(F, B).;true;true
8;false,true;movie(J, I), movie(J, B).;true;false
8;false;genre(B, H), genre(I, H).;true;false
8;true,true,false;genre(E, C).;false;false
8;true,true,true;movie(G, A).;false;false
8;true;genre(B, D), genre(E, D).;true;false
8;false,true,true;movie(K, I), movie(K, A).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.7181489350995099;  // std dev = 4,250, 150,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=129 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0.027699108109892717;  // std dev = 6,379, 289,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=49 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return -0.1254446385283912;  // std dev = 5,48e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1936877815860507;  // std dev = 9,850, 478,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H), genre(I, H) )
%   | then return 0.43870304844545;  // std dev = 5,777, 180,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=129 */
%   | else return -0.03319647110862878;  // std dev = 6,478, 382,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.47628270437226633;  // std dev = 4,161, 149,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=129 */
%   | | | else return -0.21257718037751733;  // std dev = 1,05e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( genre(A, H), genre(I, H) )
%   | | then return -0.1090489936393624;  // std dev = 2,58e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.005153318027598934;  // std dev = 6,411, 304,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=49 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.09889695506972049;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, E), movie(H, A) )
%   | | | then return -0.10845446774782416;  // std dev = 0,142, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, I), genre(J, I) )
%   | | then if ( movie(K, J), movie(K, A) )
%   | | | then return 0.40174548884744626;  // std dev = 3,437, 142,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=129 */
%   | | | else return -0.17916169556686612;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0.011271157381220939;  // std dev = 6,351, 277,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, C) )
%   | | then if ( movie(F, E), movie(F, B) )
%   | | | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.04583830986649146;  // std dev = 8,474, 528,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.2732290430702893;  // std dev = 3,773, 145,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=129 */
%   | | | else return -0.1603857376294622;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, B) )
%   | | | then return -0.09426815826662532;  // std dev = 1,83e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.0934552802041586;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.0011324682834718738;  // std dev = 6,368, 284,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return -0.19404886435756374;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.08652141543808776;  // std dev = 9,13e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.08583277354173272;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.19888779323126593;  // std dev = 3,974, 147,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=129 */
%   | | | else return -0.13994503777352413;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.006641836588485489;  // std dev = 6,338, 272,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H), genre(I, H) )
%   | then if ( movie(J, I), movie(J, B) )
%   | | then if ( movie(K, I), movie(K, A) )
%   | | | then return 0.27958459101848787;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.3657911306754133;  // std dev = 2,296, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0214503815304149;  // std dev = 6,416, 358,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.0641918400820262;  // std dev = 6,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return 0.013706516636954769;  // std dev = 7,598, 512,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */


Results
   AUC ROC   = 0.976487
   AUC PR    = 0.95416
   CLL	      = -0.211697
   Precision = 0.362617 at threshold = 0.5
   Recall    = 0.95098
   F1        = 0.525034


Total learning time: 3.661 seconds
Total inference time: 2.837 seconds
AUC ROC: 0.976487


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [4.25, 21, 129], 'false,false,false': [6.379, 240, 49], 'false,true,false,false': [7.45e-09, 20, 0], 'false,false,true,false': [1.49e-08, 24, 0], 'false,true,false,true': [2.79e-08, 31, 0], 'true': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'genre(A, D), genre(E, D)', 'false,true,false': 'movie(G, E), movie(G, A)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [5.48e-08, 54, 0], 'false,false': [9.85, 300, 178], 'true': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)', 'false': 'genre(B, H), genre(I, H)'}, {'false,false': [6.478, 333, 49], 'true,true,false': [0.0, 0, 0], 'false,true': [5.777, 51, 129], 'true,true,true,true': [1.29e-08, 21, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,false': 'movie(G, E), movie(G, A)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,false': 'genre(A, H), genre(I, H)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true': [2.58e-08, 57, 0], 'false,false,false': [6.411, 255, 49], 'false,true,false,false': [1.05e-08, 20, 0], 'false,true,false,true': [4.161, 20, 129], 'true': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, I), genre(J, I)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'movie(H, E), movie(H, A)', 'false,false,true': 'movie(K, J), movie(K, A)'}, {'false,false,true,true': [3.437, 13, 129], 'false,true,true,false': [0.0, 0, 0], 'false,false,false': [6.351, 228, 49], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [1.49e-08, 24, 0], 'false,true,false,true': [0.142, 22, 0], 'false,true,true,true': [0.0, 40, 0], 'true': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'genre(E, C)', 'true,true,true': 'movie(F, E), movie(F, B)', 'true': 'genre(A, D), genre(E, D)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [7.45e-09, 13, 0], 'false': [8.474, 350, 178], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(A, H), genre(I, H)', 'false': 'genre(B, D), genre(E, D)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'movie(G, E), movie(G, A)', 'false,false,true': 'movie(J, I), movie(J, B)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [1.83e-08, 31, 0], 'false,false,false': [6.368, 235, 49], 'false,true,false,false': [7.45e-09, 19, 0], 'false,false,true,false': [0.0, 21, 0], 'false,true,false,true': [3.773, 16, 129], 'true': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true': [0.0, 1, 0], 'false,false,true,true': [3.974, 18, 129], 'false,false,false': [6.338, 223, 49], 'false,true,false,false': [0.0, 14, 0], 'false,false,true,false': [1.49e-08, 17, 0], 'false,true,false,true': [9.13e-09, 28, 0], 'true': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, B)', 'false,true': 'movie(J, I), movie(J, B)', 'false': 'genre(B, H), genre(I, H)', 'true,true,true': 'movie(G, A)', 'true': 'genre(B, D), genre(E, D)', 'false,true,true': 'movie(K, I), movie(K, A)'}, {'false,false': [6.416, 309, 49], 'false,true,true,true': [0.0, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 16, 0], 'false,true,true,false': [2.296, 62, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [6.45e-09, 19, 0], 'false': [7.598, 334, 178]}]]
[{'': [-1.0092936587501423e-17, 0.2263773864857937], 'false,false': [0.19173602853745986, 0.14080291184253166], 'false': [5.659960517696876e-17, 0.23664802280180786], 'false,true': [nan, 5.659960517696876e-17], 'false,true,false': [2.5069552168955147e-17, 2.7755575615628915e-18], 'false,false,true': [0.12040000000000456, 9.25185853854297e-18]}, {'': [3.96508223080413e-18, 0.1916674348894838], 'false,true': [nan, 5.551115123125783e-17], 'false': [5.551115123125783e-17, 0.2029825400544462], 'false,true,false': [5.551115123125783e-17, nan]}, {'': [7.93016446160826e-18, 0.18253043990616863], 'true,true': [7.93016446160826e-18, nan], 'true,true,true': [7.93016446160826e-18, nan], 'false': [0.1854232001470449, 0.1098434300185462], 'true': [7.93016446160826e-18, nan]}, {'': [0.0, 0.16463055467978233], 'false,true': [nan, 0.15196953847793787], 'false,false': [1.1686558153949016e-17, 0.13520386080332356], 'false': [0.15196953847793787, 0.11529113748457052], 'false,true,false': [0.11621098148732217, 5.551115123125783e-18]}, {'': [0.0, 0.14193832279720014], 'false,true,true': [-1.5265566588595904e-17, nan], 'false,false': [0.11287839230830672, 0.1456033572703919], 'false': [0.00034504282662787877, 0.15535005049803616], 'false,true': [-1.5265566588595904e-17, 0.0009134604859211415], 'false,true,false': [0.0009134604859211415, nan], 'false,false,true': [0.08316802221781389, 9.25185853854297e-18]}, {'': [4.270088556250602e-18, 0.13599178056259686], 'true,true': [4.270088556250602e-18, nan], 'true,true,true': [4.270088556250602e-18, nan], 'true': [4.270088556250602e-18, nan]}, {'': [0.0, 0.12917131764732878], 'false,false': [1.5908348915640344e-07, 0.14276681214044792], 'false': [0.10605499594428688, 0.12179867339688662], 'false,false,true': [1.0744093786695063e-17, -5.28677630773884e-18], 'false,true': [nan, 0.10605499594428688], 'false,true,false': [0.09816884661117661, 2.921639538487254e-18]}, {'': [0.0, 0.12774549323112672], 'false,false': [0.10698375308500717, 0.1476940960207617], 'false': [0.00026385953120354564, 0.13817424464978192], 'false,true': [0.0, 1.0538392475202222e-07], 'false,true,false': [2.9738116731030977e-18, -3.96508223080413e-18], 'false,false,true': [0.10745522698875538, 1.3061447348531253e-17]}, {'': [0.0, 0.11825507980393805], 'false,true,true': [-1.3770208057366282e-17, 0.0850245628680665], 'true,true,true': [0.0, nan], 'false': [0.11891413149460643, 0.11498808391028459], 'false,true': [0.11891413149460643, nan], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [2.1912296538654404e-18, 0.11275154435336175]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '0;false,false,true;movie(J, I), movie(J, A).;true;true', '0;false,true;movie(G, E), movie(G, B).;true;true', '0;false;genre(A, D), genre(E, D).;true;true', '0;false,false;genre(B, H), genre(I, H).;true;true', '1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '1;false;genre(A, D), genre(E, D).;true;true', '2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '3;false,true;movie(G, E), movie(G, A).;true;true', '3;false;genre(B, D), genre(E, D).;true;true', '3;false,false;genre(A, H), genre(I, H).;true;true', '4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '4;false,false,true;movie(K, J), movie(K, A).;true;true', '4;false,true;movie(F, E), movie(F, B).;true;true', '4;false;genre(A, D), genre(E, D).;true;true', '4;false,false;genre(B, I), genre(J, I).;true;true', '5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '6;false,false,true;movie(J, I), movie(J, B).;true;true', '6;false,true;movie(G, E), movie(G, A).;true;true', '6;false;genre(B, D), genre(E, D).;true;true', '6;false,false;genre(A, H), genre(I, H).;true;true', '7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;false,false;genre(B, H), genre(I, H).;true;true', '7;false;genre(A, D), genre(E, D).;true;true', '7;false,false,true;movie(J, I), movie(J, A).;true;true', '7;false,true;genre(E, F), genre(B, F).;true;true', '7;false,true,false;movie(G, E), movie(G, B).;true;true', '8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '8;false,true;movie(K, I), movie(K, A).;true;true', '8;false;genre(B, H), genre(I, H).;true;true', '9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( genre(B, G), genre(H, G) )
%   | | then if ( movie(I, H), movie(I, A) )
%   | | | then return 0.6850720120225867;  // std dev = 4,725, 156,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=129 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.5293818118118416;  // std dev = 4,014, 73,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=49 */
%   | | | else return -0.14185106490048846;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.12544463852839133;  // std dev = 2,11e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.7607000182461202;  // std dev = 0,166, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.1254446385283912;  // std dev = 1,49e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( director(B), actor(A) )
%   | | | then return -0.20483421882651398;  // std dev = 0,381, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.12544463852839124;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.6051714887945636;  // std dev = 0,175, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.590563976218503;  // std dev = 0,094, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( female(A) )
%   | | | then return -0.17686088553476917;  // std dev = 0,243, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.17232355488097134;  // std dev = 0,215, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.11231637819360693;  // std dev = 0,000, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.43987850869553247;  // std dev = 0,020, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.1833420616622984;  // std dev = 0,002, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( actor(A) )
%   | | | then return -0.08925672903938885;  // std dev = 0,000580, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.10159632948783626;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( female(B) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( director(B), female(A) )
%   | | | then return 0.325640737855758;  // std dev = 2,007, 55,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=42 */
%   | | | else return -0.08785715160342226;  // std dev = 1,537, 244,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926089;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( genre(B, G), genre(H, G) )
%   | | then if ( movie(I, H), movie(I, A) )
%   | | | then return 0.27257829835581326;  // std dev = 2,008, 148,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=129 */
%   | | | else return -0.08498277722041161;  // std dev = 0,022, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( director(B), female(A) )
%   | | | then return 0.2893593371358527;  // std dev = 1,650, 51,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=42 */
%   | | | else return -0.08103515890586434;  // std dev = 1,580, 251,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.3013719273442502;  // std dev = 0,251, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.29823370227390905;  // std dev = 0,617, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( director(A), actor(B) )
%   | | | then return -0.08558474606214392;  // std dev = 0,004, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.08718472475713222;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return -0.20150617114273436;  // std dev = 0,376, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.14534177158891357;  // std dev = 0,196, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( actor(A) )
%   | | | then return -0.08718472475713199;  // std dev = 6,05e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | | else return -0.08597801272272626;  // std dev = 0,009, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( female(A) )
%   | | | then return 0.1363260399043251;  // std dev = 1,235, 60,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=47 */
%   | | | else return 0.16867509546307502;  // std dev = 1,335, 95,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else if ( actor(A) )
%   | | | then return -0.06424201819789861;  // std dev = 0,005, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07928006435104337;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(A, G), genre(H, G) )
%   | | then if ( movie(I, H), movie(I, B) )
%   | | | then return -0.07873121690930321;  // std dev = 8,68e-05, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.07871920621281753;  // std dev = 1,49e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.14844150943051815;  // std dev = 1,853, 72,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=49 */
%   | | | else return -0.08050599987436895;  // std dev = 0,000505, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return -0.07315826163443473;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.07320495368866707;  // std dev = 7,11e-05, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.07319630035986989;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.14353523725976322;  // std dev = 1,632, 149,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=129 */
%   | | | else return -0.06661340516175786;  // std dev = 0,035, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( movie(K, A), movie(K, B) )
%   | | | then return 0.08007445621419779;  // std dev = 1,793, 107,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=49 */
%   | | | else return -0.09438745175934561;  // std dev = 0,686, 195,000 (wgt'ed) examples reached here.  /* #neg=195 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.17452367460528703;  // std dev = 0,012, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.21920504625207252;  // std dev = 0,038, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( actor(A) )
%   | | | then return -0.05631321988381163;  // std dev = 0,004, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06926320769421547;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(H, A), movie(H, B) )
%   | | | then return 0.24836657930625106;  // std dev = 0,411, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.171204980013193;  // std dev = 0,257, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( movie(I, A), movie(I, B) )
%   | | | then return -0.07824350647024303;  // std dev = 0,038, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.0684573691828525;  // std dev = 0,000604, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.16715923300005578;  // std dev = 0,151, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.16462807619485337;  // std dev = 0,469, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( director(A), actor(B) )
%   | | | then return -0.06643155973977138;  // std dev = 0,020, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07485731346047785;  // std dev = 1,67e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return -0.14438796668439943;  // std dev = 0,425, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.13679056466934864;  // std dev = 0,274, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( actor(B) )
%   | | | then return -0.06421330426929431;  // std dev = 0,000579, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | | | else return -0.06437177545706341;  // std dev = 0,002, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070258
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.826 seconds
Total inference time: 2.909 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: transfer, Time: 01:26:12
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'Mapping results': {'Knowledge compiling time': 0.5764050483703613, 'Total time': 3.126803398132324, 'Generating mappings time': 0.05996584892272949, 'Generating paths time': 2.4621007442474365, 'Possible mappings': 126, 'Finding best mapping': 0.028325557708740234}, 'CLL': -0.070258, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.909, 'Learning time': 9.487, 'Parameter Learning results': {'Recall': 0.95098, 'AUC PR': 0.95416, 'F1': 0.525034, 'CLL': -0.211697, 'AUC ROC': 0.976487, 'Precision': [0.362617, 0.5], 'Inference time': 2.837, 'Learning time': 3.661}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.14185106490048807;  // std dev = 0,000, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.1254446385283919;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360632;  // std dev = 3,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.11231637819360674;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4,59e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.10159632948783645;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926071;  // std dev = 9,42e-08, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1,97e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08518475138839678;  // std dev = 8,16e-08, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07877675473109146;  // std dev = 5,58e-08, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07324622576333685;  // std dev = 9,77e-08, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420278;  // std dev = 0,000, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.06419184008202623;  // std dev = 0,000, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.609 seconds
Total inference time: 2.15 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: scratch, Time: 01:26:18
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'CLL': -0.063555, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.15, 'Learning time': 3.609}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.49314332008361816
   Generating paths time   = 2.474504232406616
   Generating mappings time   = 0.060338735580444336
   Possible mappings   = 126
   Finding best mapping   = 0.028319358825683594
   Total time   = 3.0563111305236816


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'author(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,false;genre(B, H).;true;false
0;false;genre(A, D).;true;true
0;false,false,true;movie(J, I), movie(J, A).;false;false
0;false,true;genre(B, F).;false;true
0;false,true,false;movie(G, E), movie(G, B).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
1;false,true;genre(B, F).;false;true
1;false;genre(A, D).;true;false
1;false,true,false;movie(G, E), movie(G, A).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;true,true;movie(F, E), movie(F, A).;true;true
2;true,false,true;movie(J, I), movie(J, B).;false;false
2;false;genre(B, K).;false;false
2;true,true,false;genre(B, D).;false;false
2;true,true,true;movie(G, B).;false;false
2;true;genre(A, D).;true;true
2;true,false;genre(B, H).;true;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false,true;genre(A, F).;false;true
3;false,false;genre(A, H).;false;false
3;false;genre(B, D).;true;true
3;false,true,false;movie(G, E), movie(G, A).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, A).;false;false
4;false,false;genre(B, I).;true;false
4;false;genre(A, D).;true;true
4;false,false,true;movie(K, J), movie(K, A).;false;false
4;false,true;movie(F, E), movie(F, B).;true;true
4;false,true,false;movie(H, E), movie(H, A).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
5;true,true;movie(F, E), movie(F, B).;false;true
5;true;genre(A, D).;true;false
5;true,true,false;movie(G, E), movie(G, A).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
6;false,false;genre(A, H).;true;false
6;false;genre(B, D).;true;true
6;false,false,true;movie(J, I), movie(J, B).;false;false
6;false,true;genre(A, F).;false;true
6;false,true,false;movie(G, E), movie(G, A).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
7;false,false;genre(B, H).;true;false
7;false;genre(A, D).;true;true
7;false,false,true;movie(J, I), movie(J, A).;false;false
7;false,true;genre(B, F).;false;true
7;false,true,false;movie(G, E), movie(G, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;true,true;movie(F, E), movie(F, B).;true;false
8;false,true;movie(J, I), movie(J, B).;true;false
8;false;genre(B, H).;true;false
8;true,true,true;movie(G, A).;false;false
8;true;genre(B, D).;true;false
8;false,true,true;movie(K, I), movie(K, A).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, G), movie(F, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H) )
%   | | then if ( movie(I, J), movie(I, A) )
%   | | | then return 0.7072055388730972;  // std dev = 2,606, 53,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048766;  // std dev = 6,99e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, G), movie(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1842962454938463;  // std dev = 4,742, 125,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H) )
%   | then return 0.5780773683276573;  // std dev = 2,461, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | else return -0.14507472574350272;  // std dev = 0,075, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, G), movie(F, A) )
%   | | | then return 0.5601226415145701;  // std dev = 0,989, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H) )
%   | | then return -0.09864510763492007;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12981115112288316;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.09021475875293365;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H) )
%   | | then if ( movie(I, J), movie(I, A) )
%   | | | then return 0.30821033617441;  // std dev = 2,461, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11583871122363637;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.021866992257487703;  // std dev = 3,182, 136,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, G), movie(F, A) )
%   | | | then return 0.34185943758267273;  // std dev = 0,989, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H) )
%   | | then if ( movie(I, J), movie(I, B) )
%   | | | then return -0.08475994486393407;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1065560546431978;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, G), movie(F, B) )
%   | | | then return -0.07841185865177727;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H) )
%   | | then if ( movie(I, J), movie(I, A) )
%   | | | then return 0.17106683034699388;  // std dev = 2,301, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09682872873687544;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(B, D) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H) )
%   | then if ( movie(I, J), movie(I, B) )
%   | | then if ( movie(K, J), movie(K, A) )
%   | | | then return 0.21233574274612133;  // std dev = 1,384, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | | else return -0.7451110657645168;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08728456649236055;  // std dev = 0,043, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.0031255513060561924;  // std dev = 2,142, 145,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */


Results
   AUC ROC   = 0.904274
   AUC PR    = 0.389125
   CLL	      = -0.161774
   Precision = 0.27175 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.408824


Total learning time: 1.792 seconds
Total inference time: 3.876 seconds
AUC ROC: 0.904274


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H)', 'false': 'genre(A, D)', 'false,true': 'genre(B, E)', 'false,true,false': 'movie(F, G), movie(F, B)', 'false,false,true': 'movie(I, J), movie(I, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [2.606, 8, 45], 'false,false,false': [6.99e-08, 70, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 12, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(B, E)', 'false': 'genre(A, D)', 'false,true,false': 'movie(F, G), movie(F, A)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 5, 0], 'false,false': [4.742, 80, 45], 'true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(E, F), movie(E, A)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D)', 'false': 'genre(B, H)'}, {'false,false': [0.075, 86, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [2.461, 7, 45], 'true,true,true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,false': 'movie(F, G), movie(F, A)', 'false,true': 'genre(A, E)', 'false': 'genre(B, D)', 'false,false': 'genre(A, H)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 5, 0], 'false,false,false': [0.0, 69, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [0.989, 1, 45], 'true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H)', 'false': 'genre(A, D)', 'false,true': 'movie(E, F), movie(E, B)', 'false,false,true': 'movie(I, J), movie(I, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [2.461, 7, 45], 'false,false,false': [0.0, 72, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [2.63e-09, 6, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(E, F), movie(E, B)', 'true': 'genre(A, D)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 2, 0], 'false': [3.182, 91, 45], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(A, H)', 'false': 'genre(B, D)', 'false,true': 'genre(A, E)', 'false,true,false': 'movie(F, G), movie(F, A)', 'false,false,true': 'movie(I, J), movie(I, B)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 9, 0], 'false,false,false': [0.0, 91, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [0.989, 1, 45], 'true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H)', 'false': 'genre(A, D)', 'false,true': 'genre(B, E)', 'false,true,false': 'movie(F, G), movie(F, B)', 'false,false,true': 'movie(I, J), movie(I, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [2.301, 6, 45], 'false,false,false': [0.0, 85, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 11, 0], 'true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(E, F), movie(E, B)', 'false,true': 'movie(I, J), movie(I, B)', 'false': 'genre(B, H)', 'true,true,true': 'movie(G, A)', 'true': 'genre(B, D)', 'false,true,true': 'movie(K, J), movie(K, A)'}, {'false,false': [0.043, 90, 0], 'false,true,true,true': [1.384, 2, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 3, 0], 'false,true,true,false': [0.0, 2, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 2, 0], 'false': [2.142, 100, 45]}]]
[{'': [nan, 0.22222222222222304], 'false,false': [0.12815948736205124, 6.97854472621527e-17], 'false': [-1.1564823173178714e-17, 0.23200475907198184], 'false,true': [nan, -1.1564823173178714e-17], 'false,true,false': [-1.1564823173178714e-17, nan], 'false,false,true': [0.12815948736205124, nan]}, {'': [0.0, 0.17653759650129916], 'false,true': [nan, 0.0], 'false': [0.0, 0.17990912285231736], 'false,true,false': [0.0, nan]}, {'': [0.0, 0.16673888888868446], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'false': [0.11649408284023714, 6.62413169258762e-05], 'true': [0.0, nan]}, {'': [0.0, 0.120027226814822], 'false,true': [nan, 0.02126654064272249], 'false,false': [0.0, -3.218037752536686e-17], 'false': [0.02126654064272249, 6.11954313383963e-05], 'false,true,false': [0.02126654064272249, nan]}, {'': [nan, 0.08938156197000748], 'false,true,true': [1.1564823173178713e-18, nan], 'false,false': [0.11649408284023678, -4.625929269271486e-17], 'false': [1.1564823173178713e-18, 0.09263728670221277], 'false,true': [1.1564823173178713e-18, nan], 'false,false,true': [0.11649408284023678, nan]}, {'': [0.0, 0.0744567707273595], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.049740612733471405], 'false,false': [0.0, -1.2200253017858863e-17], 'false': [0.02126654064272228, 3.8908265883617065e-05], 'false,false,true': [0.0, nan], 'false,true': [nan, 0.02126654064272228], 'false,true,false': [0.02126654064272228, nan]}, {'': [0.0, 0.052042355764946466], 'false,false': [0.10380622837370236, -3.657205257588751e-17], 'false': [0.0, 0.05574796780658965], 'false,true': [nan, 0.0], 'false,true,false': [0.0, nan], 'false,false,true': [0.10380622837370236, nan]}, {'': [0.0, 0.04193475012245421], 'false,true,true': [0.040742417383431526, 0.0], 'true,true,true': [0.0, nan], 'false': [0.07496876301541035, 2.0103945040116245e-05], 'false,true': [0.07496876301541035, nan], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.031651909288872154]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D).;true;true', '0;false;genre(B, H).;true;true', '1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '1;false;genre(A, D).;true;true', '2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '2;false;genre(B, H).;true;true', '3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '3;false,false;genre(A, H).;true;true', '3;false;genre(B, D).;true;true', '4;;workedunder(A, B) :- genre(A, D).;true;true', '4;false;genre(B, H).;true;true', '5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '6;false,false;genre(A, H).;true;true', '6;false;genre(B, D).;true;true', '7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '7;false,false;genre(B, H).;true;true', '7;false;genre(A, D).;true;true', '8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '8;false,true;movie(K, J), movie(K, A).;true;true', '8;false;genre(B, H).;true;true', '9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048766;  // std dev = 7,60e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839152;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.11231637819360622;  // std dev = 6,66e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(A, F) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10159632948783615;  // std dev = 5,77e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09396342666048603;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3207118471601495;  // std dev = 2,11e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.08518475138839679;  // std dev = 2,11e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return -0.08510548400053405;  // std dev = 8,86e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09333519908709349;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325355;  // std dev = 7,90e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(A, F) )
%   | | then if ( female(B) )
%   | | | then return -0.07875174813203428;  // std dev = 7,53e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07870341208451688;  // std dev = 8,54e-05, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07877675473109166;  // std dev = 4,01e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then return -0.07317026629587585;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.0684269778442027;  // std dev = 1,97e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( female(B) )
%   | | | then return -0.06838442701292742;  // std dev = 6,62e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06837849931787;  // std dev = 0,000101, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08573097212408275;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.064161995899883;  // std dev = 8,49e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 5,27e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.999291
   AUC PR    = 0.975458
   CLL	      = -0.071731
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total learning time: 2.545 seconds
Total inference time: 2.693 seconds
AUC ROC: 0.999291


Refined model AUC ROC: 0.999291


Dataset: cora->imdb(workedunder), Fold: 4, Type: transfer, Time: 01:26:33
{'Recall': 0.824926, 'AUC PR': 0.975458, 'F1': 0.904065, 'Mapping results': {'Knowledge compiling time': 0.49314332008361816, 'Total time': 3.0563111305236816, 'Generating mappings time': 0.060338735580444336, 'Generating paths time': 2.474504232406616, 'Possible mappings': 126, 'Finding best mapping': 0.028319358825683594}, 'CLL': -0.071731, 'AUC ROC': 0.999291, 'Precision': [1.0, 0.5], 'Inference time': 2.693, 'Learning time': 4.337, 'Parameter Learning results': {'Recall': 0.824926, 'AUC PR': 0.389125, 'F1': 0.408824, 'CLL': -0.161774, 'AUC ROC': 0.904274, 'Precision': [0.27175, 0.5], 'Inference time': 3.876, 'Learning time': 1.792}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,30e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11663218579178951;  // std dev = 0,330, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10120308301267555;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09236191699139193;  // std dev = 2,11e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08490515627812313;  // std dev = 5,96e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07853633348824035;  // std dev = 2,01e-05, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07303788758731951;  // std dev = 4,89e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06824458456447326;  // std dev = 1,97e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06403006189572849;  // std dev = 5,62e-05, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069293
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.382 seconds
Total inference time: 2.313 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 4, Type: scratch, Time: 01:26:37
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 1.0, 'CLL': -0.069293, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.313, 'Learning time': 2.382}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.5150308609008789
   Generating paths time   = 2.4727795124053955
   Generating mappings time   = 0.05954289436340332
   Possible mappings   = 126
   Finding best mapping   = 0.028194427490234375
   Total time   = 3.075554132461548


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'venue(A,B) -> movie(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,false;genre(B, H), genre(I, H).;true;false
0;false;genre(A, D), genre(E, D).;true;true
0;false,false,true;movie(J, I), movie(J, A).;false;false
0;false,true;genre(E, F), genre(B, F).;false;true
0;false,true,false;movie(G, E), movie(G, B).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
1;false,true;genre(E, F), genre(B, F).;false;true
1;false;genre(A, D), genre(E, D).;true;false
1;false,true,false;movie(G, E), movie(G, A).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;true,true;movie(F, E), movie(F, A).;true;true
2;true,false,true;movie(J, I), movie(J, B).;false;false
2;false;genre(B, K), genre(L, K).;false;false
2;true,true,false;genre(B, D).;false;false
2;true,true,true;movie(G, B).;false;false
2;true;genre(A, D), genre(E, D).;true;true
2;true,false;genre(B, H), genre(I, H).;true;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false,true;genre(E, F), genre(A, F).;false;true
3;false,false;genre(A, H), genre(I, H).;false;false
3;false;genre(B, D), genre(E, D).;true;true
3;false,true,false;movie(G, E), movie(G, A).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,true;movie(G, A).;false;false
4;false,false;genre(B, I), genre(J, I).;true;false
4;false;genre(A, D), genre(E, D).;true;true
4;false,false,true;movie(K, J), movie(K, A).;false;false
4;false,true;movie(F, E), movie(F, B).;true;true
4;false,true,false;movie(H, E), movie(H, A).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
5;true,true;genre(E, C).;true;true
5;true,true,true;movie(F, E), movie(F, B).;false;false
5;true;genre(A, D), genre(E, D).;true;false
5;true,true,false;movie(G, E), movie(G, A).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
6;false,false;genre(A, H), genre(I, H).;true;false
6;false;genre(B, D), genre(E, D).;true;true
6;false,false,true;movie(J, I), movie(J, B).;false;false
6;false,true;genre(E, F), genre(A, F).;false;true
6;false,true,false;movie(G, E), movie(G, A).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
7;false,false;genre(B, H), genre(I, H).;true;false
7;false;genre(A, D), genre(E, D).;true;true
7;false,false,true;movie(J, I), movie(J, A).;false;false
7;false,true;genre(E, F), genre(B, F).;false;true
7;false,true,false;movie(G, E), movie(G, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;true,true;movie(F, E), movie(F, B).;true;true
8;false,true;movie(J, I), movie(J, B).;true;false
8;false;genre(B, H), genre(I, H).;true;false
8;true,true,false;genre(E, C).;false;false
8;true,true,true;movie(G, A).;false;false
8;true;genre(B, D), genre(E, D).;true;false
8;false,true,true;movie(K, I), movie(K, A).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.8040948810454575;  // std dev = 1,375, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.021369137189644314;  // std dev = 2,966, 83,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return -0.1352884943516492;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17313517186780383;  // std dev = 4,888, 129,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, H), genre(I, H) )
%   | then return 0.5803926833710957;  // std dev = 1,921, 40,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   | else return -0.06296364572144902;  // std dev = 3,002, 102,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.5062453510586047;  // std dev = 1,375, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | | else return -0.2599031210760927;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(A, H), genre(I, H) )
%   | | then return -0.11656118047934043;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.048841777961050686;  // std dev = 2,993, 96,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.10766536003520881;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.4066353077318422;  // std dev = 0,986, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.029138347851938588;  // std dev = 2,970, 85,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.05197683770345954;  // std dev = 3,594, 137,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.326847052760698;  // std dev = 5,58e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.22193967860690514;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, B) )
%   | | | then return -0.10243088540561754;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09933033484742815;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.05957873137081131;  // std dev = 3,016, 111,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.09338960775425313;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return 0.25935430138107957;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.04020271434560726;  // std dev = 2,997, 98,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, E), movie(G, A) )
%   | | | then return 0.21270754596536956;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.7872924540346306;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.03378720466214961;  // std dev = 2,993, 98,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.016714487743916238;  // std dev = 3,443, 124,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */


Results
   AUC ROC   = 0.93336
   AUC PR    = 0.86591
   CLL	      = -0.183593
   Precision = 0.354244 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.50087


Total learning time: 1.559 seconds
Total inference time: 2.778 seconds
AUC ROC: 0.93336


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [1.375, 2, 35], 'false,false,false': [2.966, 73, 10], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'genre(A, D), genre(E, D)', 'false,true,false': 'movie(G, E), movie(G, A)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [0.018, 5, 0], 'false,false': [4.888, 84, 45], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true,true': 'movie(F, E), movie(F, A)', 'true,true,true': 'movie(G, B)', 'true': 'genre(A, D), genre(E, D)', 'false': 'genre(B, H), genre(I, H)'}, {'false,false': [3.002, 92, 10], 'true,true,false': [0.0, 0, 0], 'false,true': [1.921, 5, 35], 'true,true,true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,false': 'movie(G, E), movie(G, A)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)', 'false,false': 'genre(A, H), genre(I, H)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true': [0.013, 5, 0], 'false,false,false': [2.993, 86, 10], 'false,true,false,false': [5.27e-09, 3, 0], 'false,true,false,true': [1.375, 2, 35], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, A)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.986, 1, 35], 'false,false,false': [2.97, 75, 10], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [3.594, 92, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(A, H), genre(I, H)', 'false': 'genre(B, D), genre(E, D)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'movie(G, E), movie(G, A)', 'false,false,true': 'movie(J, I), movie(J, B)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 5, 0], 'false,false,false': [3.016, 101, 10], 'false,true,false,false': [0.0, 2, 0], 'false,false,true,false': [0.0, 2, 0], 'false,true,false,true': [5.58e-08, 0, 35], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 35], 'false,false,false': [2.997, 88, 10], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false,true': [1.86e-09, 3, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,true': 'movie(G, E), movie(G, A)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,true,true': [0.0, 0, 35], 'false,false': [2.993, 88, 10], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [3.443, 79, 45]}]]
[{'': [nan, 0.23200475907198181], 'false,false': [0.051132213294377164, 0.10596603280592226], 'false': [0.0, 0.23437500000000083], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'false,false,true': [0.051132213294377164, nan]}, {'': [nan, 0.18169901933655205], 'false,true': [nan, 6.460099831272492e-05], 'false': [6.460099831272492e-05, 0.1851896668808816], 'false,true,false': [6.460099831272492e-05, nan]}, {'': [0.0, 0.1732167692720729], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'false': [0.09225741086293851, 0.08837191299863133], 'true': [0.0, nan]}, {'': [nan, 0.13966128519294269], 'false,true': [nan, 0.08801927631625421], 'false,false': [3.193103887685622e-05, 0.09331597222222199], 'false': [0.08801927631625421, 0.08891373710719201], 'false,true,false': [0.05113221329437573, 9.25185853854297e-18]}, {'': [nan, 0.11937736034969544], 'false,true,true': [0.0, nan], 'false,false': [0.027006172839506275, 0.10380622837370256], 'false': [0.0, 0.12064585104494431], 'false,true': [0.0, nan], 'false,false,true': [0.027006172839506275, nan]}, {'': [nan, 0.09429016515052913]}, {'': [nan, 0.08590872892668876], 'false,false': [1.9619211763046074e-06, 0.0819738657576494], 'false': [0.015399328967684252, 0.07720940408263924], 'false,false,true': [0.0, 0.0], 'false,true': [nan, 0.015399328967684252], 'false,true,false': [8.881784197001253e-17, 0.0]}, {'': [nan, 0.08341858508506972], 'false,false': [-2.5376526277146434e-17, 0.09162848812994619], 'false': [1.1564823173178713e-18, 0.08491575135606995], 'false,false,true': [-2.5376526277146434e-17, nan], 'false,true': [nan, 1.1564823173178713e-18], 'false,true,false': [1.1564823173178713e-18, nan]}, {'': [nan, 0.08772085558739418], 'false,true,true': [-8.247371040072592e-17, 0.0], 'false,true': [0.05113221329437538, nan], 'false': [0.05113221329437538, 0.09138503405888619]}, {'': [nan, 0.09559462782543152]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '1;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true', '3;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '3;true;movie(G, E), movie(G, A).;true;true', '3;false;genre(A, H), genre(I, H).;true;true', '4;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '6;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '6;false,true;movie(J, I), movie(J, B).;true;true', '6;true;movie(G, E), movie(G, A).;true;true', '6;false;genre(A, H), genre(I, H).;true;true', '7;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '7;false;genre(B, H), genre(I, H).;true;true', '8;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '8;true;movie(G, E), movie(G, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 6,83e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 6,83e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, F), genre(G, F) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.10159632948783615;  // std dev = 5,67e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( female(A) )
%   | | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3136916014290807;  // std dev = 0,464, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.3049456853479046;  // std dev = 0,094, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 5,37e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25845419198683456;  // std dev = 0,043, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19052153360018687;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then if ( female(A) )
%   | | then return 0.20921421981306534;  // std dev = 2,58e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.16017886323621475;  // std dev = 0,127, 21,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | else return -0.10423612406925421;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, F), genre(G, F) )
%   | then if ( movie(H, G), movie(H, B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109161;  // std dev = 5,27e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( female(A) )
%   | | | then return 0.2092142198130654;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15417776641221;  // std dev = 0,338, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, E), genre(F, E) )
%   | then return 0.1714827737615483;  // std dev = 0,060, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333707;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return 0.155093310267167;  // std dev = 0,103, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, D), movie(E, A) )
%   | then if ( female(A) )
%   | | then return 0.1322492790367609;  // std dev = 0,086, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.14206772918399524;  // std dev = 0,083, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return -0.10914177121111748;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420278;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.06958154543100092;  // std dev = 0,002, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.13259539319838376;  // std dev = 0,103, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13723927750100365;  // std dev = 0,000836, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.14654200875063567;  // std dev = 0,007, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.22937633894095932;  // std dev = 0,034, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.06412251865463832;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.999958
   AUC PR    = 0.998614
   CLL	      = -0.083641
   Precision = 0.873057 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932227


Total learning time: 2.508 seconds
Total inference time: 2.536 seconds
AUC ROC: 0.999958


Refined model AUC ROC: 0.999958


Dataset: cora->imdb(workedunder), Fold: 5, Type: transfer, Time: 01:26:51
{'Recall': 1.0, 'AUC PR': 0.998614, 'F1': 0.932227, 'Mapping results': {'Knowledge compiling time': 0.5150308609008789, 'Total time': 3.075554132461548, 'Generating mappings time': 0.05954289436340332, 'Generating paths time': 2.4727795124053955, 'Possible mappings': 126, 'Finding best mapping': 0.028194427490234375}, 'CLL': -0.083641, 'AUC ROC': 0.999958, 'Precision': [0.873057, 0.5], 'Inference time': 2.536, 'Learning time': 4.067, 'Parameter Learning results': {'Recall': 0.854599, 'AUC PR': 0.86591, 'F1': 0.50087, 'CLL': -0.183593, 'AUC ROC': 0.93336, 'Precision': [0.354244, 0.5], 'Inference time': 2.778, 'Learning time': 1.559}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,94e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( female(A) )
%   | then return 0.6842684934301482;  // std dev = 0,169, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.6827378447875044;  // std dev = 0,172, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7,45e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( female(A) )
%   | then return 0.5640419417450248;  // std dev = 6,66e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.4989562164007366;  // std dev = 0,217, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 2,98e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4319705010586559;  // std dev = 0,055, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.32153892516502536;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3305554207345252;  // std dev = 0,049, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2595860815559893;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926107;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2618929010549199;  // std dev = 0,043, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21845961828940386;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08685755358125014;  // std dev = 0,121, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1926613369606142;  // std dev = 0,078, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2202411162853446;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.08007190364249692;  // std dev = 0,114, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18178004272656945;  // std dev = 0,019, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21083958090790972;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07553142624745184;  // std dev = 0,151, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06809287535094886;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15628887244172904;  // std dev = 0,017, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17748367133547122;  // std dev = 0,007, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06389697937081698;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13676940022458017;  // std dev = 0,015, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15303869146408294;  // std dev = 0,007, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083915
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.317 seconds
Total inference time: 2.048 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 5, Type: scratch, Time: 01:26:56
{'Recall': 1.0, 'AUC PR': 1.0, 'F1': 0.852086, 'CLL': -0.083915, 'AUC ROC': 1.0, 'Precision': [0.742291, 0.5], 'Inference time': 2.048, 'Learning time': 2.317}


