Starting experiment #1 for imdb->cora(samevenue)

Start learning from source dataset

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 1,79e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.7576198345704088;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.7839131272392469;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839216;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.6387798989248529;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.6599738613331142;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360663;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.49902325413704324;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.5138633712913938;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783649;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3756332377300009;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.3864081834441178;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926043;  // std dev = 1,93e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.283837179188402;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.2929849226142706;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 1,12e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.21922688812640262;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.22790093608533238;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109143;  // std dev = 3,65e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.17353090217390385;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.18211083580214874;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333706;  // std dev = 8,16e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.14038926284114994;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.14895716135601583;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420311;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.11565556783060603;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.12419793191463208;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202583;  // std dev = 1,42e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.09670116247005212;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.10518001826386605;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.0641918400820262;  // std dev = 6,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Predicates from source: ['workedunder(person,person).', 'actor(person).', 'female(person).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.06788969039916992
   Generating paths time   = 2.561906099319458
   Generating mappings time   = 0.042517900466918945
   Possible mappings   = 2
   Finding best mapping   = 0.00011491775512695312
   Total time   = 2.6724345684051514


Best mapping found: ['workedunder(A,B) -> samevenue(A,B)'] 

Transferred target predicate: samevenue 

******************************************
Performing Parameter Learning
******************************************
Refine


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.527584
   CLL	      = -1.102629
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.459 seconds
Total inference time: 1.633 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}]]
[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
[]


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.527584
   CLL	      = -1.102629
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.489 seconds
Total inference time: 1.455 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 1, Type: transfer, Time: 00:02:02
{'Parameter Learning results': {'AUC PR': 0.527584, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.459, 'CLL': -1.102629, 'Inference time': 1.633}, 'AUC PR': 0.527584, 'F1': nan, 'Precision': [nan, 0.5], 'Mapping results': {'Knowledge compiling time': 0.06788969039916992, 'Total time': 2.6724345684051514, 'Finding best mapping': 0.00011491775512695312, 'Generating mappings time': 0.042517900466918945, 'Generating paths time': 2.561906099319458, 'Possible mappings': 2}, 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 2.9480000000000004, 'CLL': -1.102629, 'Inference time': 1.455}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.527584
   CLL	      = -1.102629
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.675 seconds
Total inference time: 1.653 seconds
AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 1, Type: scratch, Time: 00:02:06
{'AUC PR': 0.527584, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.675, 'CLL': -1.102629, 'Inference time': 1.653}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.17733502388000488
   Generating paths time   = 2.592824935913086
   Generating mappings time   = 0.044243812561035156
   Possible mappings   = 2
   Finding best mapping   = 0.00011086463928222656
   Total time   = 2.8145198822021484


Best mapping found: ['workedunder(A,B) -> samevenue(A,B)'] 

Transferred target predicate: samevenue 

******************************************
Performing Parameter Learning
******************************************
Refine


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.505628
   CLL	      = -1.063108
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.759 seconds
Total inference time: 1.354 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}]]
[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
[]


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.505628
   CLL	      = -1.063108
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.853 seconds
Total inference time: 1.577 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 2, Type: transfer, Time: 00:02:16
{'Parameter Learning results': {'AUC PR': 0.505628, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.759, 'CLL': -1.063108, 'Inference time': 1.354}, 'AUC PR': 0.505628, 'F1': nan, 'Precision': [nan, 0.5], 'Mapping results': {'Knowledge compiling time': 0.17733502388000488, 'Total time': 2.8145198822021484, 'Finding best mapping': 0.00011086463928222656, 'Generating mappings time': 0.044243812561035156, 'Generating paths time': 2.592824935913086, 'Possible mappings': 2}, 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 3.612, 'CLL': -1.063108, 'Inference time': 1.577}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.505628
   CLL	      = -1.063108
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.894 seconds
Total inference time: 1.39 seconds
AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 2, Type: scratch, Time: 00:02:19
{'AUC PR': 0.505628, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.894, 'CLL': -1.063108, 'Inference time': 1.39}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.19205737113952637
   Generating paths time   = 2.6019718647003174
   Generating mappings time   = 0.04360675811767578
   Possible mappings   = 2
   Finding best mapping   = 0.00011467933654785156
   Total time   = 2.837756633758545


Best mapping found: ['workedunder(A,B) -> samevenue(A,B)'] 

Transferred target predicate: samevenue 

******************************************
Performing Parameter Learning
******************************************
Refine


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.530141
   CLL	      = -1.107232
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.919 seconds
Total inference time: 1.364 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}]]
[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
[]


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.530141
   CLL	      = -1.107232
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.762 seconds
Total inference time: 1.482 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 3, Type: transfer, Time: 00:02:29
{'Parameter Learning results': {'AUC PR': 0.530141, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.919, 'CLL': -1.107232, 'Inference time': 1.364}, 'AUC PR': 0.530141, 'F1': nan, 'Precision': [nan, 0.5], 'Mapping results': {'Knowledge compiling time': 0.19205737113952637, 'Total time': 2.837756633758545, 'Finding best mapping': 0.00011467933654785156, 'Generating mappings time': 0.04360675811767578, 'Generating paths time': 2.6019718647003174, 'Possible mappings': 2}, 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 3.681, 'CLL': -1.107232, 'Inference time': 1.482}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.530141
   CLL	      = -1.107232
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.725 seconds
Total inference time: 1.483 seconds
AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 3, Type: scratch, Time: 00:02:33
{'AUC PR': 0.530141, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.725, 'CLL': -1.107232, 'Inference time': 1.483}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.1802983283996582
   Generating paths time   = 2.595782995223999
   Generating mappings time   = 0.0437166690826416
   Possible mappings   = 2
   Finding best mapping   = 0.00012111663818359375
   Total time   = 2.8199245929718018


Best mapping found: ['workedunder(A,B) -> samevenue(A,B)'] 

Transferred target predicate: samevenue 

******************************************
Performing Parameter Learning
******************************************
Refine


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.532489
   CLL	      = -1.111458
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.977 seconds
Total inference time: 1.331 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}]]
[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
[]


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.532489
   CLL	      = -1.111458
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.126 seconds
Total inference time: 1.397 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 4, Type: transfer, Time: 00:02:43
{'Parameter Learning results': {'AUC PR': 0.532489, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.977, 'CLL': -1.111458, 'Inference time': 1.331}, 'AUC PR': 0.532489, 'F1': nan, 'Precision': [nan, 0.5], 'Mapping results': {'Knowledge compiling time': 0.1802983283996582, 'Total time': 2.8199245929718018, 'Finding best mapping': 0.00012111663818359375, 'Generating mappings time': 0.0437166690826416, 'Generating paths time': 2.595782995223999, 'Possible mappings': 2}, 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 4.103, 'CLL': -1.111458, 'Inference time': 1.397}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.532489
   CLL	      = -1.111458
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.856 seconds
Total inference time: 1.622 seconds
AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 4, Type: scratch, Time: 00:02:47
{'AUC PR': 0.532489, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.856, 'CLL': -1.111458, 'Inference time': 1.622}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.07947158813476562
   Generating paths time   = 2.707733631134033
   Generating mappings time   = 0.043212175369262695
   Possible mappings   = 2
   Finding best mapping   = 0.00011539459228515625
   Total time   = 2.830538034439087


Best mapping found: ['workedunder(A,B) -> samevenue(A,B)'] 

Transferred target predicate: samevenue 

******************************************
Performing Parameter Learning
******************************************
Refine


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.524113
   CLL	      = -1.096381
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.749 seconds
Total inference time: 1.481 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}]]
[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
[]


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.524113
   CLL	      = -1.096381
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.661 seconds
Total inference time: 1.474 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 5, Type: transfer, Time: 00:02:57
{'Parameter Learning results': {'AUC PR': 0.524113, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.749, 'CLL': -1.096381, 'Inference time': 1.481}, 'AUC PR': 0.524113, 'F1': nan, 'Precision': [nan, 0.5], 'Mapping results': {'Knowledge compiling time': 0.07947158813476562, 'Total time': 2.830538034439087, 'Finding best mapping': 0.00011539459228515625, 'Generating mappings time': 0.043212175369262695, 'Generating paths time': 2.707733631134033, 'Possible mappings': 2}, 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 3.41, 'CLL': -1.096381, 'Inference time': 1.474}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.524113
   CLL	      = -1.096381
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.706 seconds
Total inference time: 1.315 seconds
AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 5, Type: scratch, Time: 00:03:00
{'AUC PR': 0.524113, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.706, 'CLL': -1.096381, 'Inference time': 1.315}


Starting experiment #2 for imdb->cora(samevenue)

Start learning from source dataset

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 1,79e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.7576198345704088;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.7839131272392469;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839216;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.6387798989248529;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.6599738613331142;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360663;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.49902325413704324;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.5138633712913938;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783649;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3756332377300009;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.3864081834441178;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926043;  // std dev = 1,93e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.283837179188402;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.2929849226142706;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 1,12e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.21922688812640262;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.22790093608533238;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109143;  // std dev = 3,65e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.17353090217390385;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.18211083580214874;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333706;  // std dev = 8,16e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.14038926284114994;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.14895716135601583;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420311;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.11565556783060603;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.12419793191463208;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202583;  // std dev = 1,42e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.09670116247005212;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.10518001826386605;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.0641918400820262;  // std dev = 6,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Predicates from source: ['workedunder(person,person).', 'actor(person).', 'female(person).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.06228804588317871
   Generating paths time   = 2.6000711917877197
   Generating mappings time   = 0.04079866409301758
   Possible mappings   = 2
   Finding best mapping   = 9.441375732421875e-05
   Total time   = 2.7032580375671387


Best mapping found: ['workedunder(A,B) -> samevenue(A,B)'] 

Transferred target predicate: samevenue 

******************************************
Performing Parameter Learning
******************************************
Refine


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.527584
   CLL	      = -1.102629
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.402 seconds
Total inference time: 1.518 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}]]
[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
[]


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.527584
   CLL	      = -1.102629
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.399 seconds
Total inference time: 1.604 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 1, Type: transfer, Time: 00:29:34
{'Parameter Learning results': {'AUC PR': 0.527584, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.402, 'CLL': -1.102629, 'Inference time': 1.518}, 'AUC PR': 0.527584, 'F1': nan, 'Precision': [nan, 0.5], 'Mapping results': {'Knowledge compiling time': 0.06228804588317871, 'Total time': 2.7032580375671387, 'Finding best mapping': 9.441375732421875e-05, 'Generating mappings time': 0.04079866409301758, 'Generating paths time': 2.6000711917877197, 'Possible mappings': 2}, 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 2.801, 'CLL': -1.102629, 'Inference time': 1.604}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.527584
   CLL	      = -1.102629
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.402 seconds
Total inference time: 1.55 seconds
AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 1, Type: scratch, Time: 00:29:37
{'AUC PR': 0.527584, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.402, 'CLL': -1.102629, 'Inference time': 1.55}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.07993221282958984
   Generating paths time   = 2.5659563541412354
   Generating mappings time   = 0.042372703552246094
   Possible mappings   = 2
   Finding best mapping   = 9.322166442871094e-05
   Total time   = 2.6883604526519775


Best mapping found: ['workedunder(A,B) -> samevenue(A,B)'] 

Transferred target predicate: samevenue 

******************************************
Performing Parameter Learning
******************************************
Refine


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.505628
   CLL	      = -1.063108
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.868 seconds
Total inference time: 1.459 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}]]
[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
[]


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.505628
   CLL	      = -1.063108
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.996 seconds
Total inference time: 1.482 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 2, Type: transfer, Time: 00:29:47
{'Parameter Learning results': {'AUC PR': 0.505628, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.868, 'CLL': -1.063108, 'Inference time': 1.459}, 'AUC PR': 0.505628, 'F1': nan, 'Precision': [nan, 0.5], 'Mapping results': {'Knowledge compiling time': 0.07993221282958984, 'Total time': 2.6883604526519775, 'Finding best mapping': 9.322166442871094e-05, 'Generating mappings time': 0.042372703552246094, 'Generating paths time': 2.5659563541412354, 'Possible mappings': 2}, 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 3.864, 'CLL': -1.063108, 'Inference time': 1.482}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.505628
   CLL	      = -1.063108
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.822 seconds
Total inference time: 1.45 seconds
AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 2, Type: scratch, Time: 00:29:51
{'AUC PR': 0.505628, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.822, 'CLL': -1.063108, 'Inference time': 1.45}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.12137055397033691
   Generating paths time   = 2.576944351196289
   Generating mappings time   = 0.04203152656555176
   Possible mappings   = 2
   Finding best mapping   = 9.441375732421875e-05
   Total time   = 2.7404470443725586


Best mapping found: ['workedunder(A,B) -> samevenue(A,B)'] 

Transferred target predicate: samevenue 

******************************************
Performing Parameter Learning
******************************************
Refine


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.530141
   CLL	      = -1.107232
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.754 seconds
Total inference time: 1.465 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}]]
[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
[]


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.530141
   CLL	      = -1.107232
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.739 seconds
Total inference time: 1.372 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 3, Type: transfer, Time: 00:30:01
{'Parameter Learning results': {'AUC PR': 0.530141, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.754, 'CLL': -1.107232, 'Inference time': 1.465}, 'AUC PR': 0.530141, 'F1': nan, 'Precision': [nan, 0.5], 'Mapping results': {'Knowledge compiling time': 0.12137055397033691, 'Total time': 2.7404470443725586, 'Finding best mapping': 9.441375732421875e-05, 'Generating mappings time': 0.04203152656555176, 'Generating paths time': 2.576944351196289, 'Possible mappings': 2}, 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 3.4930000000000003, 'CLL': -1.107232, 'Inference time': 1.372}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.530141
   CLL	      = -1.107232
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.83 seconds
Total inference time: 1.432 seconds
AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 3, Type: scratch, Time: 00:30:04
{'AUC PR': 0.530141, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.83, 'CLL': -1.107232, 'Inference time': 1.432}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.07186460494995117
   Generating paths time   = 2.5706167221069336
   Generating mappings time   = 0.042374372482299805
   Possible mappings   = 2
   Finding best mapping   = 9.72747802734375e-05
   Total time   = 2.684957981109619


Best mapping found: ['workedunder(A,B) -> samevenue(A,B)'] 

Transferred target predicate: samevenue 

******************************************
Performing Parameter Learning
******************************************
Refine


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.532489
   CLL	      = -1.111458
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.075 seconds
Total inference time: 1.471 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}]]
[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
[]


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.532489
   CLL	      = -1.111458
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.796 seconds
Total inference time: 1.423 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 4, Type: transfer, Time: 00:30:14
{'Parameter Learning results': {'AUC PR': 0.532489, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 2.075, 'CLL': -1.111458, 'Inference time': 1.471}, 'AUC PR': 0.532489, 'F1': nan, 'Precision': [nan, 0.5], 'Mapping results': {'Knowledge compiling time': 0.07186460494995117, 'Total time': 2.684957981109619, 'Finding best mapping': 9.72747802734375e-05, 'Generating mappings time': 0.042374372482299805, 'Generating paths time': 2.5706167221069336, 'Possible mappings': 2}, 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 3.8710000000000004, 'CLL': -1.111458, 'Inference time': 1.423}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.532489
   CLL	      = -1.111458
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.978 seconds
Total inference time: 1.405 seconds
AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 4, Type: scratch, Time: 00:30:18
{'AUC PR': 0.532489, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.978, 'CLL': -1.111458, 'Inference time': 1.405}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.07815265655517578
   Generating paths time   = 2.543074131011963
   Generating mappings time   = 0.042034149169921875
   Possible mappings   = 2
   Finding best mapping   = 0.00010228157043457031
   Total time   = 2.6633691787719727


Best mapping found: ['workedunder(A,B) -> samevenue(A,B)'] 

Transferred target predicate: samevenue 

******************************************
Performing Parameter Learning
******************************************
Refine


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.524113
   CLL	      = -1.096381
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.385 seconds
Total inference time: 1.503 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}]]
[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
[]


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.524113
   CLL	      = -1.096381
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.601 seconds
Total inference time: 1.496 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 5, Type: transfer, Time: 00:30:27
{'Parameter Learning results': {'AUC PR': 0.524113, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.385, 'CLL': -1.096381, 'Inference time': 1.503}, 'AUC PR': 0.524113, 'F1': nan, 'Precision': [nan, 0.5], 'Mapping results': {'Knowledge compiling time': 0.07815265655517578, 'Total time': 2.6633691787719727, 'Finding best mapping': 0.00010228157043457031, 'Generating mappings time': 0.042034149169921875, 'Generating paths time': 2.543074131011963, 'Possible mappings': 2}, 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 2.9859999999999998, 'CLL': -1.096381, 'Inference time': 1.496}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.524113
   CLL	      = -1.096381
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.676 seconds
Total inference time: 1.385 seconds
AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 5, Type: scratch, Time: 00:30:31
{'AUC PR': 0.524113, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.676, 'CLL': -1.096381, 'Inference time': 1.385}


Starting experiment #3 for imdb->cora(samevenue)

Start learning from source dataset

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 1,79e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.7576198345704088;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.7839131272392469;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839216;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.6387798989248529;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.6599738613331142;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360663;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.49902325413704324;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.5138633712913938;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783649;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3756332377300009;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.3864081834441178;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926043;  // std dev = 1,93e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.283837179188402;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.2929849226142706;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 1,12e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.21922688812640262;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.22790093608533238;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109143;  // std dev = 3,65e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.17353090217390385;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.18211083580214874;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333706;  // std dev = 8,16e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.14038926284114994;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.14895716135601583;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420311;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.11565556783060603;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.12419793191463208;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202583;  // std dev = 1,42e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.09670116247005212;  // std dev = 0,301, 189,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=170 */
%   | | else return 0.10518001826386605;  // std dev = 0,262, 229,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=212 */
%   | else return -0.0641918400820262;  // std dev = 6,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Predicates from source: ['workedunder(person,person).', 'actor(person).', 'female(person).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.06474113464355469
   Generating paths time   = 2.539966344833374
   Generating mappings time   = 0.04216599464416504
   Possible mappings   = 2
   Finding best mapping   = 9.918212890625e-05
   Total time   = 2.6469790935516357


Best mapping found: ['workedunder(A,B) -> samevenue(A,B)'] 

Transferred target predicate: samevenue 

******************************************
Performing Parameter Learning
******************************************
Refine


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.527584
   CLL	      = -1.102629
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.222 seconds
Total inference time: 1.2 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}]]
[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
[]


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.527584
   CLL	      = -1.102629
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.581 seconds
Total inference time: 1.465 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 1, Type: transfer, Time: 00:59:41
{'Parameter Learning results': {'AUC PR': 0.527584, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.222, 'CLL': -1.102629, 'Inference time': 1.2}, 'AUC PR': 0.527584, 'F1': nan, 'Precision': [nan, 0.5], 'Mapping results': {'Knowledge compiling time': 0.06474113464355469, 'Total time': 2.6469790935516357, 'Finding best mapping': 9.918212890625e-05, 'Generating mappings time': 0.04216599464416504, 'Generating paths time': 2.539966344833374, 'Possible mappings': 2}, 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 2.803, 'CLL': -1.102629, 'Inference time': 1.465}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.527584
   CLL	      = -1.102629
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.48 seconds
Total inference time: 1.536 seconds
AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 1, Type: scratch, Time: 00:59:44
{'AUC PR': 0.527584, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.48, 'CLL': -1.102629, 'Inference time': 1.536}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.12486577033996582
   Generating paths time   = 2.5477139949798584
   Generating mappings time   = 0.04214286804199219
   Possible mappings   = 2
   Finding best mapping   = 9.5367431640625e-05
   Total time   = 2.7148232460021973


Best mapping found: ['workedunder(A,B) -> samevenue(A,B)'] 

Transferred target predicate: samevenue 

******************************************
Performing Parameter Learning
******************************************
Refine


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.505628
   CLL	      = -1.063108
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.016 seconds
Total inference time: 1.392 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}]]
[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
[]


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.505628
   CLL	      = -1.063108
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.856 seconds
Total inference time: 1.47 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 2, Type: transfer, Time: 00:59:54
{'Parameter Learning results': {'AUC PR': 0.505628, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 2.016, 'CLL': -1.063108, 'Inference time': 1.392}, 'AUC PR': 0.505628, 'F1': nan, 'Precision': [nan, 0.5], 'Mapping results': {'Knowledge compiling time': 0.12486577033996582, 'Total time': 2.7148232460021973, 'Finding best mapping': 9.5367431640625e-05, 'Generating mappings time': 0.04214286804199219, 'Generating paths time': 2.5477139949798584, 'Possible mappings': 2}, 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 3.872, 'CLL': -1.063108, 'Inference time': 1.47}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,492, 1.315,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.505628
   CLL	      = -1.063108
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.809 seconds
Total inference time: 1.406 seconds
AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 2, Type: scratch, Time: 00:59:57
{'AUC PR': 0.505628, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.809, 'CLL': -1.063108, 'Inference time': 1.406}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.12976551055908203
   Generating paths time   = 2.582805633544922
   Generating mappings time   = 0.043091535568237305
   Possible mappings   = 2
   Finding best mapping   = 9.226799011230469e-05
   Total time   = 2.7557613849639893


Best mapping found: ['workedunder(A,B) -> samevenue(A,B)'] 

Transferred target predicate: samevenue 

******************************************
Performing Parameter Learning
******************************************
Refine


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.530141
   CLL	      = -1.107232
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.766 seconds
Total inference time: 1.393 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}]]
[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
[]


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.530141
   CLL	      = -1.107232
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.825 seconds
Total inference time: 1.466 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 3, Type: transfer, Time: 01:00:07
{'Parameter Learning results': {'AUC PR': 0.530141, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.766, 'CLL': -1.107232, 'Inference time': 1.393}, 'AUC PR': 0.530141, 'F1': nan, 'Precision': [nan, 0.5], 'Mapping results': {'Knowledge compiling time': 0.12976551055908203, 'Total time': 2.7557613849639893, 'Finding best mapping': 9.226799011230469e-05, 'Generating mappings time': 0.043091535568237305, 'Generating paths time': 2.582805633544922, 'Possible mappings': 2}, 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 3.591, 'CLL': -1.107232, 'Inference time': 1.466}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.162,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=581 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.530141
   CLL	      = -1.107232
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.718 seconds
Total inference time: 1.372 seconds
AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 3, Type: scratch, Time: 01:00:11
{'AUC PR': 0.530141, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.718, 'CLL': -1.107232, 'Inference time': 1.372}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.073486328125
   Generating paths time   = 2.56673526763916
   Generating mappings time   = 0.03316092491149902
   Possible mappings   = 2
   Finding best mapping   = 7.43865966796875e-05
   Total time   = 2.673462152481079


Best mapping found: ['workedunder(A,B) -> samevenue(A,B)'] 

Transferred target predicate: samevenue 

******************************************
Performing Parameter Learning
******************************************
Refine


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.532489
   CLL	      = -1.111458
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.737 seconds
Total inference time: 1.483 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}]]
[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
[]


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.532489
   CLL	      = -1.111458
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.876 seconds
Total inference time: 1.478 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 4, Type: transfer, Time: 01:00:21
{'Parameter Learning results': {'AUC PR': 0.532489, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.737, 'CLL': -1.111458, 'Inference time': 1.483}, 'AUC PR': 0.532489, 'F1': nan, 'Precision': [nan, 0.5], 'Mapping results': {'Knowledge compiling time': 0.073486328125, 'Total time': 2.673462152481079, 'Finding best mapping': 7.43865966796875e-05, 'Generating mappings time': 0.03316092491149902, 'Generating paths time': 2.56673526763916, 'Possible mappings': 2}, 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 3.613, 'CLL': -1.111458, 'Inference time': 1.478}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,500, 1.494,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=747 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.532489
   CLL	      = -1.111458
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.956 seconds
Total inference time: 1.518 seconds
AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 4, Type: scratch, Time: 01:00:24
{'AUC PR': 0.532489, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.956, 'CLL': -1.111458, 'Inference time': 1.518}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.1129004955291748
   Generating paths time   = 2.5753231048583984
   Generating mappings time   = 0.04186201095581055
   Possible mappings   = 2
   Finding best mapping   = 9.608268737792969e-05
   Total time   = 2.73018741607666


Best mapping found: ['workedunder(A,B) -> samevenue(A,B)'] 

Transferred target predicate: samevenue 

******************************************
Performing Parameter Learning
******************************************
Refine


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.524113
   CLL	      = -1.096381
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.611 seconds
Total inference time: 1.576 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}], ['samevenue(A, B)', {}, {}]]
[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
[]


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.524113
   CLL	      = -1.096381
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.645 seconds
Total inference time: 1.513 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 5, Type: transfer, Time: 01:00:34
{'Parameter Learning results': {'AUC PR': 0.524113, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.611, 'CLL': -1.096381, 'Inference time': 1.576}, 'AUC PR': 0.524113, 'F1': nan, 'Precision': [nan, 0.5], 'Mapping results': {'Knowledge compiling time': 0.1129004955291748, 'Total time': 2.73018741607666, 'Finding best mapping': 9.608268737792969e-05, 'Generating mappings time': 0.04186201095581055, 'Generating paths time': 2.5753231048583984, 'Possible mappings': 2}, 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 3.2560000000000002, 'CLL': -1.096381, 'Inference time': 1.513}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   return 0;  // std dev = 0,499, 1.050,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.524113
   CLL	      = -1.096381
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.676 seconds
Total inference time: 1.476 seconds
AUC ROC: 0.5


Dataset: imdb->cora(samevenue), Fold: 5, Type: scratch, Time: 01:00:37
{'AUC PR': 0.524113, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.5, 'Recall': 0.0, 'Learning time': 1.676, 'CLL': -1.096381, 'Inference time': 1.476}


