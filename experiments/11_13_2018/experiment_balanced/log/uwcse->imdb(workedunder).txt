Starting experiment #1 for uwcse->imdb(workedunder)

Start learning from source dataset

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.8055173561521439;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.6359267128772901;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( projectmember(I, B) )
%   | | | then return 0.5854216623722396;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.7129876447769319;  // std dev = 2,774, 62,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=53 */
%   else return -0.14185106490048768;  // std dev = 7,15e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6773408397065112;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.49781871123711874;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08115204457045207;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(H, B), publication(I, A) )
%   | | | then return 0.4007408253746899;  // std dev = 2,031, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.6153366280791783;  // std dev = 2,776, 66,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   else return -0.12544463852839152;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then if ( publication(E, C) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.525995951478812;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( publication(F, B), publication(G, A) )
%   | | | then return 0.1940792993240585;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.4332383795463359;  // std dev = 2,618, 45,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=36 */
%   | else if ( publication(H, B) )
%   | | then if ( publication(H, I), student(I) )
%   | | | then return 0.527041570731747;  // std dev = 1,591, 36,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | | | else return 0.6268297197457645;  // std dev = 0,061, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.28244696843371714;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.36578030176705045;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.11231637819360633;  // std dev = 3,94e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3953438564084147;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.42441774743303506;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.28890998386376987;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.027298714979115107;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.28732478906462444;  // std dev = 2,206, 25,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | | | else return 0.36901514788279993;  // std dev = 2,586, 59,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=51 */
%   else return -0.10159632948783626;  // std dev = 3,49e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3007522660526577;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.32539628194927733;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( inphase(A, H), inphase(F, H) )
%   | | | then return 0.011517185503057331;  // std dev = 0,919, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2526954997185147;  // std dev = 0,754, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( projectmember(I, B), publication(J, A) )
%   | | | then return 0.469706783016065;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25257297950126734;  // std dev = 3,386, 81,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=65 */
%   else return -0.09269127618926107;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.3563989626209206;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.05470042050754612;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.011966246159120564;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | then if ( publication(G, H), inphase(H, I) )
%   | | | then return 0.21346984077280576;  // std dev = 2,346, 62,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=53 */
%   | | | else return 0.070014129827556;  // std dev = 1,426, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.2586779652309172;  // std dev = 1,592, 42,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | | else return 0.18287138592996918;  // std dev = 1,250, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.0851847513883968;  // std dev = 2,58e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.21675394852760158;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.1936728754511462;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.21195922491981592;  // std dev = 2,36e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.14722968581271323;  // std dev = 0,851, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.11352376681472065;  // std dev = 0,793, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(I, A), publication(J, B) )
%   | | | then return 0.0658773364641101;  // std dev = 1,978, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.17817995781897536;  // std dev = 2,693, 66,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   else return -0.07877675473109176;  // std dev = 2,11e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.1822111484474318;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.1595052436355881;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.17870952401199772;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(G, A), publication(H, B) )
%   | | then if ( publication(G, I), professor(I) )
%   | | | then return -0.08291424074320106;  // std dev = 1,492, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.21656483278444197;  // std dev = 1,136, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.14577721079778042;  // std dev = 2,407, 55,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=47 */
%   | | | else return 0.08343157659903115;  // std dev = 1,714, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.07324622576333704;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.15661286528744514;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.13406823352144834;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.15396640218213067;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | then if ( publication(H, I), projectmember(J, I) )
%   | | | then return -0.11998907718138804;  // std dev = 1,108, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.08182284947162088;  // std dev = 2,379, 38,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=28 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.15470990230966894;  // std dev = 1,559, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return 0.06612401197979643;  // std dev = 1,715, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.06842697784420271;  // std dev = 1,49e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.13702030706718463;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.11455955883283114;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.1349607292694909;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(G, A), publication(H, B) )
%   | | then if ( publication(G, I), professor(I) )
%   | | | then return -0.09246877318944836;  // std dev = 1,486, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.140901113640284;  // std dev = 1,135, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.10167508104943494;  // std dev = 2,394, 55,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=47 */
%   | | | else return 0.05282670608323985;  // std dev = 1,716, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.06419184008202623;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */


Predicates from source: ['advisedby(person,person).', 'publication(title,person).', 'inphase(person,prequals).', 'student(person).', 'projectmember(project,person).', 'professor(person).', 'tempadvisedby(person,person).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.013165473937988281
   Generating paths time   = 2.5581421852111816
   Generating mappings time   = 0.1773221492767334
   Possible mappings   = 864
   Finding best mapping   = 0.1976323127746582
   Total time   = 2.94626784324646


Best mapping found: ['inphase(A,B) -> movie(B,A)', 'student(A) -> actor(A)', 'professor(A) -> director(A)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'publication(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,false,false;genre(B, I).;false;false
0;true;movie(C, B), movie(C, A).;true;true
0;true,true;movie(E, D).;false;false
0;true,false;movie(F, A), movie(G, B).;false;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,true;movie(E, D).;false;false
1;true,false;movie(G, F).;true;true
1;true,false,false;movie(H, B), movie(I, A).;false;false
1;true;movie(C, B), movie(C, A).;true;true
1;true,false,true;movie(G, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true,false,true;movie(H, I), actor(I).;false;false
2;true,false;movie(H, B).;true;true
2;true,false,false;movie(J, A).;false;false
2;true,true,false;movie(F, B), movie(G, A).;false;false
2;true;movie(D, B), movie(D, A).;true;true
2;true,true;movie(E, C).;false;true
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false;movie(G, F).;true;true
3;true,false,false;movie(H, A).;false;false
3;true;movie(C, A), movie(C, B).;true;true
3;true,false,true;movie(G, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false;movie(G, F).;true;true
4;true,false,false;genre(B, I), movie(J, A).;false;false
4;true;movie(C, B), movie(C, A).;true;true
4;true,false,true;movie(H, A), movie(H, F).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,false,true;movie(G, H), movie(I, H).;false;false
5;true,false;movie(G, B).;true;true
5;true,false,false;movie(J, B).;false;false
5;true,true,false;movie(E, B).;false;false
5;true;genre(B, C).;true;true
5;true,true;movie(D, A).;false;true
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true,true;movie(E, D).;false;false
6;true,false;movie(H, G).;true;true
6;true,false,false;movie(I, A), movie(J, B).;false;false
6;true;movie(C, B), movie(C, A).;true;true
6;true,false,true;movie(H, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false;movie(G, A), movie(H, B).;true;true
7;true,false,false;movie(J, B).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,true;movie(G, I), director(I).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false;movie(H, B).;true;true
8;true,false,false;movie(K, B).;false;false
8;true;movie(C, A), movie(C, B).;true;true
8;true,false,true;movie(H, I), genre(I, J).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false;movie(G, A), movie(H, B).;true;true
9;true,false,false;movie(J, B).;false;false
9;true;movie(C, A), movie(C, B).;true;true
9;true,false,true;movie(G, I), director(I).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), actor(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783624;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A), movie(H, G) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.24920106723689517;  // std dev = 0,337, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2107492095705297;  // std dev = 6,66e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.10671932118263243;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.17782337056633318;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.09696441179525307;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.15329504070408997;  // std dev = 5,58e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), genre(G, H) )
%   | | | then return -0.08879946670120858;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13443718280608064;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.08187184535103184;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098502
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.801 seconds
Total inference time: 1.121 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'false': [5.77e-08, 55, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, B)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 55, 0], 'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), actor(G)', 'true,false': 'movie(F, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [3.49e-08, 55, 0], 'true,true,true': [1.03e-07, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, B)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [3.49e-08, 55, 0], 'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(H, A), movie(H, G)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 55, 0], 'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,true': 'movie(D, A)'}, {'false': [1.83e-08, 55, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.337, 1, 56], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, B)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [1.05e-08, 55, 0], 'true,true,true': [6.66e-08, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), director(H)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [1.05e-08, 55, 0], 'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), genre(G, H)', 'true,false': 'movie(F, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [1.29e-08, 55, 0], 'true,true,true': [5.58e-08, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), director(H)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 55, 0], 'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}]]
[{'': [0.017236072637734554, 6.055761952500853e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,true': [-1.2688263138573217e-16, nan], 'true,false': [0.0, nan]}, {'': [0.012304599783948732, -3.431598439750484e-17], 'true': [-1.9032394707859825e-16, 0.0], 'true,true': [-1.9032394707859825e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.007683847065712494, 2.2204460492503132e-17], 'true': [1.9032394707859825e-16, 0.0], 'true,false,true': [0.0, nan], 'true,true': [1.9032394707859825e-16, nan], 'true,false': [0.0, nan]}, {'': [0.004644692439814939, 2.2204460492503132e-17], 'true': [-3.489272363107635e-16, 0.0], 'true,true': [-3.489272363107635e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0029456817402654088, -2.0185873175002845e-18], 'true': [-1.2688263138573217e-16, 0.0], 'true,true': [-1.2688263138573217e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.001996676351744731, 6.0557619525008536e-18], 'true': [0.001996676351744731, nan], 'true,true': [0.001996676351744731, nan]}, {'': [0.0017371594364543803, 2.0185873175002845e-18], 'true': [7.930164461608261e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [7.930164461608261e-17, nan], 'true,false': [0.0, nan]}, {'': [0.001301466980231163, 2.0185873175002845e-18], 'true': [-3.172065784643304e-17, 0.0], 'true,true': [-3.172065784643304e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.00101020191717014, 3.0278809762504268e-18], 'true': [5.551115123125783e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [5.551115123125783e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0008064688695251768, -3.0278809762504268e-18], 'true': [-2.3790493384824782e-17, 0.0], 'true,true': [-2.3790493384824782e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- actor(A), director(B).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- actor(A), director(B).;true;true', '8;true;movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783624;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.24301663564242218;  // std dev = 0,063, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.25517224256948956;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21073261583070926;  // std dev = 0,008, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1061311897540308;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1778113887553376;  // std dev = 0,007, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0964754908405195;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15328607606362127;  // std dev = 0,006, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08838707458426924;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13443026995618895;  // std dev = 0,005, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08151962068926842;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095673
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.619 seconds
Total inference time: 0.806 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 1, Type: transfer, Time: 00:01:41
{'Mapping results': {'Generating paths time': 2.5581421852111816, 'Finding best mapping': 0.1976323127746582, 'Possible mappings': 864, 'Generating mappings time': 0.1773221492767334, 'Knowledge compiling time': 0.013165473937988281, 'Total time': 2.94626784324646}, 'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 0.806, 'Recall': 1.0, 'CLL': -0.095673, 'Learning time': 3.42, 'Parameter Learning results': {'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 1.121, 'Recall': 1.0, 'CLL': -0.098502, 'Learning time': 1.801, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.6909105759500754;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109546;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5354626841427582;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.4024026492217927;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4175135841583101;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.30700250684980995;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3207118471601494;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.24152182581632603;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.25517224256948956;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1958080954961511;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.20975771563253548;  // std dev = 3,33e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1628100390760043;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1770964977452775;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13816881840032139;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.11920579263429053;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */


Results
   AUC ROC   = 0.920833
   AUC PR    = 0.860033
   CLL	      = -0.244754
   Precision = 0.873995 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932761


Total learning time: 2.279 seconds
Total inference time: 0.752 seconds
AUC ROC: 0.920833


Dataset: uwcse->imdb(workedunder), Fold: 1, Type: scratch, Time: 00:01:45
{'AUC ROC': 0.920833, 'F1': 0.932761, 'Inference time': 0.752, 'Recall': 1.0, 'CLL': -0.244754, 'Learning time': 2.279, 'AUC PR': 0.860033, 'Precision': [0.873995, 0.5]}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.013916254043579102
   Generating paths time   = 2.5875935554504395
   Generating mappings time   = 0.1773509979248047
   Possible mappings   = 864
   Finding best mapping   = 0.19347023963928223
   Total time   = 2.9723360538482666


Best mapping found: ['inphase(A,B) -> movie(B,A)', 'student(A) -> actor(A)', 'professor(A) -> director(A)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'publication(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,false,false;genre(B, I).;false;false
0;true;movie(C, B), movie(C, A).;true;true
0;true,true;movie(E, D).;false;false
0;true,false;movie(F, A), movie(G, B).;false;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,true;movie(E, D).;false;false
1;true,false;movie(G, F).;true;true
1;true,false,false;movie(H, B), movie(I, A).;false;false
1;true;movie(C, B), movie(C, A).;true;true
1;true,false,true;movie(G, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true,false,true;movie(H, I), actor(I).;false;false
2;true,false;movie(H, B).;true;true
2;true,false,false;movie(J, A).;false;false
2;true,true,false;movie(F, B), movie(G, A).;false;false
2;true;movie(D, B), movie(D, A).;true;true
2;true,true;movie(E, C).;false;true
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false;movie(G, F).;true;true
3;true,false,false;movie(H, A).;false;false
3;true;movie(C, A), movie(C, B).;true;true
3;true,false,true;movie(G, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false;movie(G, F).;true;true
4;true,false,false;genre(B, I), movie(J, A).;false;false
4;true;movie(C, B), movie(C, A).;true;true
4;true,false,true;movie(H, A), movie(H, F).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,false,true;movie(G, H), movie(I, H).;false;false
5;true,false;movie(G, B).;true;true
5;true,false,false;movie(J, B).;false;false
5;true,true,false;movie(E, B).;false;false
5;true;genre(B, C).;true;true
5;true,true;movie(D, A).;false;true
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true,true;movie(E, D).;false;false
6;true,false;movie(H, G).;true;true
6;true,false,false;movie(I, A), movie(J, B).;false;false
6;true;movie(C, B), movie(C, A).;true;true
6;true,false,true;movie(H, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false;movie(G, A), movie(H, B).;true;true
7;true,false,false;movie(J, B).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,true;movie(G, I), director(I).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false;movie(H, B).;true;true
8;true,false,false;movie(K, B).;false;false
8;true;movie(C, A), movie(C, B).;true;true
8;true,false,true;movie(H, I), genre(I, J).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false;movie(G, A), movie(H, B).;true;true
9;true,false,false;movie(J, B).;false;false
9;true;movie(C, A), movie(C, B).;true;true
9;true,false,true;movie(G, I), director(I).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), actor(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783626;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A), movie(H, G) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.23321372683027117;  // std dev = 0,658, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.21342074474735873;  // std dev = 8,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.10520479794461;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1797785296687149;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.0957045095025229;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.15477541837174053;  // std dev = 2,58e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), genre(G, H) )
%   | | | then return -0.08773614795066574;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13559104686010143;  // std dev = 4,71e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.08096320139609739;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098757
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.154 seconds
Total inference time: 1.128 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'false': [5.58e-08, 54, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, B)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 54, 0], 'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), actor(G)', 'true,false': 'movie(F, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [3.33e-08, 54, 0], 'true,true,true': [1.19e-07, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, B)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [3.33e-08, 54, 0], 'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(H, A), movie(H, G)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 54, 0], 'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,true': 'movie(D, A)'}, {'false': [1.83e-08, 54, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.658, 4, 58], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, B)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [7.45e-09, 54, 0], 'true,true,true': [8.94e-08, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), director(H)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [7.45e-09, 54, 0], 'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), genre(G, H)', 'true,false': 'movie(F, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [1.49e-08, 54, 0], 'true,true,true': [2.58e-08, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), director(H)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 54, 0], 'true,true,true': [4.71e-08, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}]]
[{'': [0.06035379812695064, 5.756711979537848e-17], 'true': [-3.675221047035001e-16, 0.0], 'true,true': [-3.675221047035001e-16, nan], 'true,false': [0.0, nan]}, {'': [0.04308576245887642, -3.4951465590051226e-17], 'true': [-1.2250736823450003e-16, 0.0], 'true,true': [-1.2250736823450003e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.026905743807732977, 2.05596856412066e-17], 'true': [2.4501473646900006e-16, 0.0], 'true,false,true': [0.0, nan], 'true,true': [2.4501473646900006e-16, nan], 'true,false': [0.0, nan]}, {'': [0.01626384593324757, 2.05596856412066e-17], 'true': [-3.3689526264487507e-16, 0.0], 'true,true': [-3.3689526264487507e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.010314593401574014, -2.05596856412066e-18], 'true': [-1.5313421029312505e-16, 0.0], 'true,true': [-1.5313421029312505e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.006991557995307807, 6.1679056923619804e-18], 'true': [0.006991557995307807, nan], 'true,true': [0.006991557995307807, nan]}, {'': [0.006127252564447163, 1.02798428206033e-18], 'true': [1.3782078926381254e-16, 0.0], 'true,false,true': [0.0, nan], 'true,true': [1.3782078926381254e-16, nan], 'true,false': [0.0, nan]}, {'': [0.004580304352257299, 1.02798428206033e-18], 'true': [-7.656710514656252e-18, 0.0], 'true,true': [-7.656710514656252e-18, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0035495191138486303, 4.11193712824132e-18], 'true': [1.1485065771984378e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [1.1485065771984378e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0028303361721049537, -3.0839528461809902e-18], 'true': [3.828355257328126e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [3.828355257328126e-17, nan], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- actor(A), director(B).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- actor(A), director(B).;true;true', '8;true;movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783626;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109179;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.771 seconds
Total inference time: 0.847 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 2, Type: transfer, Time: 00:01:54
{'Mapping results': {'Generating paths time': 2.5875935554504395, 'Finding best mapping': 0.19347023963928223, 'Possible mappings': 864, 'Generating mappings time': 0.1773509979248047, 'Knowledge compiling time': 0.013916254043579102, 'Total time': 2.9723360538482666}, 'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 0.847, 'Recall': 1.0, 'CLL': -0.094637, 'Learning time': 3.925, 'Parameter Learning results': {'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 1.128, 'Recall': 1.0, 'CLL': -0.098757, 'Learning time': 2.154, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.990741
   AUC PR    = 0.981818
   CLL	      = -0.113754
   Precision = 0.981818 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990826


Total learning time: 2.252 seconds
Total inference time: 0.761 seconds
AUC ROC: 0.990741


Dataset: uwcse->imdb(workedunder), Fold: 2, Type: scratch, Time: 00:01:57
{'AUC ROC': 0.990741, 'F1': 0.990826, 'Inference time': 0.761, 'Recall': 1.0, 'CLL': -0.113754, 'Learning time': 2.252, 'AUC PR': 0.981818, 'Precision': [0.981818, 0.5]}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.015474081039428711
   Generating paths time   = 2.5225119590759277
   Generating mappings time   = 0.1797335147857666
   Possible mappings   = 864
   Finding best mapping   = 0.20049691200256348
   Total time   = 2.9182214736938477


Best mapping found: ['inphase(A,B) -> genre(A,B)', 'student(A) -> director(A)', 'professor(A) -> actor(A)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> movie(A,B)', 'publication(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- actor(B), director(A).;true;false
0;true,false,false;movie(I, B).;false;false
0;true;movie(C, B), movie(C, A).;true;true
0;true,true;movie(E, D).;false;false
0;true,false;movie(F, A), movie(G, B).;false;true
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true,true;movie(E, D).;false;false
1;true,false;movie(G, F).;true;true
1;true,false,false;movie(H, B), movie(I, A).;false;false
1;true;movie(C, B), movie(C, A).;true;true
1;true,false,true;movie(G, B).;false;false
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,false,true;movie(H, I), director(I).;false;false
2;true,false;movie(H, B).;true;true
2;true,false,false;movie(J, A).;false;false
2;true,true,false;movie(F, B), movie(G, A).;false;false
2;true;movie(D, B), movie(D, A).;true;true
2;true,true;movie(E, C).;false;true
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false;movie(G, F).;true;true
3;true,false,false;movie(H, A).;false;false
3;true;movie(C, A), movie(C, B).;true;true
3;true,false,true;movie(G, B).;false;false
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false;movie(G, F).;true;true
4;true,false,false;movie(I, B), movie(J, A).;false;false
4;true;movie(C, B), movie(C, A).;true;true
4;true,false,true;genre(A, H), genre(F, H).;false;false
5;;workedunder(B, A) :- actor(B), director(A).;true;false
5;true,false,true;movie(G, H), genre(H, I).;false;false
5;true,false;movie(G, B).;true;true
5;true,false,false;movie(J, B).;false;false
5;true,true,false;movie(E, B).;false;false
5;true;movie(C, B).;true;true
5;true,true;movie(D, A).;false;true
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true,true;movie(E, D).;false;false
6;true,false;movie(H, G).;true;true
6;true,false,false;movie(I, A), movie(J, B).;false;false
6;true;movie(C, B), movie(C, A).;true;true
6;true,false,true;movie(H, B).;false;false
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false;movie(G, A), movie(H, B).;true;true
7;true,false,false;movie(J, B).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,true;movie(G, I), actor(I).;false;false
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false;movie(H, B).;true;true
8;true,false,false;movie(K, B).;false;false
8;true;movie(C, A), movie(C, B).;true;true
8;true,false,true;movie(H, I), movie(J, I).;false;false
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false;movie(G, A), movie(H, B).;true;true
9;true,false,false;movie(J, B).;false;false
9;true;movie(C, A), movie(C, B).;true;true
9;true,false,true;movie(G, I), actor(I).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 1,07e-07, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 1,05e-07, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783642;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( genre(B, H), genre(G, H) )
%   | | | then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.21325635661408415;  // std dev = 1,594, 203,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 6,14e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21679019428226082;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10334082425923624;  // std dev = 1,97e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109154;  // std dev = 7,74e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.18223756027315202;  // std dev = 1,91e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(F, H), actor(H) )
%   | | | then return -0.09415002723807396;  // std dev = 7,45e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333706;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15663278828944277;  // std dev = 1,46e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), movie(H, G) )
%   | | | then return -0.08642139228635282;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 6,41e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.13703578659326016;  // std dev = 1,48e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(F, H), actor(H) )
%   | | | then return -0.07983760222622299;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096372
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.187 seconds
Total inference time: 1.036 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)'}, {'false': [1.07e-07, 153, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.83e-08, 25, 0], 'true,true,true': [1.09e-06, 0, 178]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, A)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 153, 0], 'true,true,true': [0.0, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [1.05e-07, 153, 0], 'true,true,true': [5.9e-07, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, A)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 153, 0], 'true,true,true': [3.77e-07, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'genre(B, H), genre(G, H)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 11, 0], 'false': [4.94e-08, 153, 0], 'true,true,true': [3.58e-07, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(D, B)'}, {'false': [6.14e-08, 153, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.594, 25, 178], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, A)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [7.74e-08, 153, 0], 'true,true,true': [0.0, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.97e-08, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), actor(H)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 153, 0], 'true,true,true': [1.91e-07, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [7.45e-09, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), movie(H, G)', 'true,false': 'movie(F, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [6.41e-08, 153, 0], 'true,true,true': [1.46e-07, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), actor(H)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 153, 0], 'true,true,true': [1.48e-07, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 25, 0]}]]
[{'': [0.10798611953700064, 7.546614023595836e-17], 'true': [6.706246045376226e-15, 1.3322676295501878e-17], 'true,true': [6.706246045376226e-15, nan], 'true,false': [1.3322676295501878e-17, nan]}, {'': [0.07708983427090953, -1.4512719276145838e-17], 'true': [-3.193450497798203e-15, -4.440892098500626e-18], 'true,true': [-3.193450497798203e-15, nan], 'true,false,true': [-4.440892098500626e-18, nan], 'true,false': [-4.440892098500626e-18, nan]}, {'': [0.04814024895239027, 7.256359638072919e-17], 'true': [1.9559884299013994e-15, 0.0], 'true,false,true': [0.0, nan], 'true,true': [1.9559884299013994e-15, nan], 'true,false': [0.0, nan]}, {'': [0.02909957062494659, -4.4989429756052096e-17], 'true': [7.983626244495507e-16, -2.220446049250313e-18], 'true,false,true': [-2.220446049250313e-18, nan], 'true,true': [7.983626244495507e-16, nan], 'true,false': [-2.220446049250313e-18, nan]}, {'': [0.018455059177800756, 1.596399120376042e-17], 'true': [7.185263620045957e-16, 3.3306690738754695e-18], 'true,false,true': [3.96508223080413e-18, 0.0], 'true,true': [7.185263620045957e-16, nan], 'true,false': [3.3306690738754695e-18, nan]}, {'': [0.012509423447437237, 2.4671622769447922e-17], 'true': [0.012509423447437237, nan], 'true,true': [0.012509423447437237, nan]}, {'': [0.011066835331948095, 3.918434204559376e-17], 'true': [-8.981579525057446e-17, 1.5543122344752193e-17], 'true,true': [-8.981579525057446e-17, nan], 'true,false,true': [1.5543122344752193e-17, nan], 'true,false': [1.5543122344752193e-17, nan]}, {'': [0.008249070311333217, -2.1769078914218755e-18], 'true': [2.045804225151974e-16, 2.220446049250313e-18], 'true,false,true': [2.220446049250313e-18, nan], 'true,true': [2.045804225151974e-16, nan], 'true,false': [2.220446049250313e-18, nan]}, {'': [0.006379316154102433, 2.68485306608698e-17], 'true': [1.197543936674326e-16, -4.440892098500626e-18], 'true,false,true': [-4.440892098500626e-18, nan], 'true,true': [1.197543936674326e-16, nan], 'true,false': [-4.440892098500626e-18, nan]}, {'': [0.0050790263574052716, -1.161017542091667e-17], 'true': [1.2224927686883746e-16, -8.881784197001253e-18], 'true,false,true': [-8.881784197001253e-18, nan], 'true,true': [1.2224927686883746e-16, nan], 'true,false': [-8.881784197001253e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '4;true,false;genre(B, H), genre(G, H).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;true;movie(C, A), movie(C, B).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048763;  // std dev = 1,07e-07, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360618;  // std dev = 1,05e-07, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783642;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D), genre(E, D) )
%   | | then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926098;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694898;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694898;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.08518475138839682;  // std dev = 3,48e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839693;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.08518475138839694;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( female(A) )
%   | | | then return -0.0851847513883969;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.0851847513883969;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839691;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08518475138839687;  // std dev = 2,46e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253578;  // std dev = 1,09e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253578;  // std dev = 1,09e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( actor(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333706;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06419184008202625;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.37 seconds
Total inference time: 0.803 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 3, Type: transfer, Time: 00:02:09
{'Mapping results': {'Generating paths time': 2.5225119590759277, 'Finding best mapping': 0.20049691200256348, 'Possible mappings': 864, 'Generating mappings time': 0.1797335147857666, 'Knowledge compiling time': 0.015474081039428711, 'Total time': 2.9182214736938477}, 'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 0.803, 'Recall': 1.0, 'CLL': -0.094637, 'Learning time': 6.557, 'Parameter Learning results': {'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 1.036, 'Recall': 1.0, 'CLL': -0.096372, 'Learning time': 3.187, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048796;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839122;  // std dev = 6,32e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360625;  // std dev = 8,43e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783642;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926096;  // std dev = 1,49e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839679;  // std dev = 4,47e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109165;  // std dev = 5,96e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333706;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420267;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06419184008202625;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.051 seconds
Total inference time: 0.755 seconds
AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 3, Type: scratch, Time: 00:02:13
{'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 0.755, 'Recall': 1.0, 'CLL': -0.094637, 'Learning time': 3.051, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.013278722763061523
   Generating paths time   = 2.516103506088257
   Generating mappings time   = 0.17916488647460938
   Possible mappings   = 864
   Finding best mapping   = 0.20108604431152344
   Total time   = 2.9096386432647705


Best mapping found: ['professor(A) -> actor(A)', 'inphase(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- actor(B), director(A).;true;false
0;true;movie(C, B), movie(C, A).;true;true
0;true,true;movie(E, D).;false;false
0;true,false;movie(F, A), movie(G, B).;false;false
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true,true;movie(E, D).;false;false
1;true,false;movie(G, F).;true;true
1;true,false,false;movie(H, B), movie(I, A).;false;false
1;true;movie(C, B), movie(C, A).;true;true
1;true,false,true;movie(G, B).;false;false
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,false,true;movie(H, I), director(I).;false;false
2;true,false;movie(H, B).;true;true
2;true,false,false;movie(J, A).;false;false
2;true,true,false;movie(F, B), movie(G, A).;false;false
2;true;movie(D, B), movie(D, A).;true;true
2;true,true;movie(E, C).;false;true
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false;movie(G, F).;true;true
3;true,false,false;movie(H, A).;false;false
3;true;movie(C, A), movie(C, B).;true;true
3;true,false,true;movie(G, B).;false;false
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false;movie(G, F).;true;true
4;true,false,false;movie(J, A).;false;false
4;true;movie(C, B), movie(C, A).;true;true
4;true,false,true;genre(A, H), genre(F, H).;false;false
5;;workedunder(B, A) :- actor(B), director(A).;true;false
5;true,false,false;movie(J, B).;false;false
5;true;movie(D, A).;false;true
5;true,false,true;movie(G, H), genre(H, I).;false;false
5;true,false;movie(G, B).;true;true
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true,true;movie(E, D).;false;false
6;true,false;movie(H, G).;true;true
6;true,false,false;movie(I, A), movie(J, B).;false;false
6;true;movie(C, B), movie(C, A).;true;true
6;true,false,true;movie(H, B).;false;false
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false;movie(G, A), movie(H, B).;true;true
7;true,false,false;movie(J, B).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,true;movie(G, I), actor(I).;false;false
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false;movie(H, B).;true;true
8;true,false,false;movie(K, B).;false;false
8;true;movie(C, A), movie(C, B).;true;true
8;true,false,true;movie(H, I).;false;false
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false;movie(G, A), movie(H, B).;true;true
9;true,false,false;movie(J, B).;false;false
9;true;movie(C, A), movie(C, B).;true;true
9;true,false,true;movie(G, I), actor(I).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4,21e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( genre(B, H), genre(G, H) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.092691276189261;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then return 0.2273879981647642;  // std dev = 0,652, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2144003561179578;  // std dev = 7,30e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10465764277859313;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1804942387088193;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(F, H), actor(H) )
%   | | | then return -0.09524864844677486;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15531652914160407;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.08735091188673094;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.13601228498892967;  // std dev = 4,34e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(F, H), actor(H) )
%   | | | then return -0.08063363030435926;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096387
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.797 seconds
Total inference time: 1.267 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)'}, {'false': [4.21e-08, 41, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true': [2.23e-07, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, A)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, A)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'genre(B, H), genre(G, H)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,true,true': [2.98e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)'}, {'false': [1.83e-08, 41, 0], 'true,true': [0.652, 4, 45], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, A)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,true,true': [7.3e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), actor(H)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [1.05e-08, 41, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [5.27e-09, 41, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), actor(H)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,true,true': [4.34e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}]]
[{'': [0.07496876301541104, 4.332577657073782e-17], 'true': [1.105288700071267e-15, 0.0], 'true,true': [1.105288700071267e-15, nan], 'true,false': [0.0, nan]}, {'': [0.05351918877289897, -2.4370749321040022e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,true': [-9.473903143468002e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.03342110014406096, -2.7078610356711136e-18], 'true': [-3.947459643111668e-17, 0.0], 'true,true': [-3.947459643111668e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.020202215093805483, -6.769652589177784e-18], 'true': [-4.144832625267251e-16, 0.0], 'true,true': [-4.144832625267251e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.012812322212040247, -1.0831444142684454e-17], 'true': [1.973729821555834e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [1.973729821555834e-17, nan], 'true,false': [0.0, nan]}, {'': [0.008684597667842037, 8.12358310701334e-18], 'true': [0.008684597667842037, nan]}, {'': [0.007631670636725153, -2.7078610356711136e-18], 'true': [1.1842378929335003e-16, 0.0], 'true,false,true': [0.0, nan], 'true,true': [1.1842378929335003e-16, nan], 'true,false': [0.0, nan]}, {'': [0.005700185409013944, 2.7078610356711136e-18], 'true': [-1.4802973661668754e-17, 0.0], 'true,true': [-1.4802973661668754e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0044147220526210675, 6.769652589177784e-19], 'true': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0035186928239850763, -2.7078610356711136e-18], 'true': [4.194175870806147e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [4.194175870806147e-17, nan], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;true;movie(C, A), movie(C, B).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048768;  // std dev = 4,21e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.092691276189261;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.345 seconds
Total inference time: 0.806 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 4, Type: transfer, Time: 00:02:22
{'Mapping results': {'Generating paths time': 2.516103506088257, 'Finding best mapping': 0.20108604431152344, 'Possible mappings': 864, 'Generating mappings time': 0.17916488647460938, 'Knowledge compiling time': 0.013278722763061523, 'Total time': 2.9096386432647705}, 'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 0.806, 'Recall': 1.0, 'CLL': -0.094637, 'Learning time': 3.142, 'Parameter Learning results': {'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 1.267, 'Recall': 1.0, 'CLL': -0.096387, 'Learning time': 1.797, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.991098
   AUC PR    = 0.982507
   CLL	      = -0.113016
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 1.858 seconds
Total inference time: 0.765 seconds
AUC ROC: 0.991098


Dataset: uwcse->imdb(workedunder), Fold: 4, Type: scratch, Time: 00:02:25
{'AUC ROC': 0.991098, 'F1': 0.991176, 'Inference time': 0.765, 'Recall': 1.0, 'CLL': -0.113016, 'Learning time': 1.858, 'AUC PR': 0.982507, 'Precision': [0.982507, 0.5]}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.01278376579284668
   Generating paths time   = 2.5281808376312256
   Generating mappings time   = 0.17749786376953125
   Possible mappings   = 864
   Finding best mapping   = 0.19967126846313477
   Total time   = 2.9181385040283203


Best mapping found: ['professor(A) -> actor(A)', 'inphase(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- actor(B), director(A).;true;false
0;true;movie(C, B), movie(C, A).;true;true
0;true,true;movie(E, D).;false;false
0;true,false;movie(F, A), movie(G, B).;false;false
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true,true;movie(E, D).;false;false
1;true,false;movie(G, F).;true;true
1;true,false,false;movie(H, B), movie(I, A).;false;false
1;true;movie(C, B), movie(C, A).;true;true
1;true,false,true;movie(G, B).;false;false
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,false,true;movie(H, I), director(I).;false;false
2;true,false;movie(H, B).;true;true
2;true,false,false;movie(J, A).;false;false
2;true,true,false;movie(F, B), movie(G, A).;false;false
2;true;movie(D, B), movie(D, A).;true;true
2;true,true;movie(E, C).;false;true
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false;movie(G, F).;true;true
3;true,false,false;movie(H, A).;false;false
3;true;movie(C, A), movie(C, B).;true;true
3;true,false,true;movie(G, B).;false;false
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false;movie(G, F).;true;true
4;true,false,false;movie(J, A).;false;false
4;true;movie(C, B), movie(C, A).;true;true
4;true,false,true;genre(A, H), genre(F, H).;false;false
5;;workedunder(B, A) :- actor(B), director(A).;true;false
5;true,false,false;movie(J, B).;false;false
5;true;movie(D, A).;false;true
5;true,false,true;movie(G, H), genre(H, I).;false;false
5;true,false;movie(G, B).;true;true
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true,true;movie(E, D).;false;false
6;true,false;movie(H, G).;true;true
6;true,false,false;movie(I, A), movie(J, B).;false;false
6;true;movie(C, B), movie(C, A).;true;true
6;true,false,true;movie(H, B).;false;false
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false;movie(G, A), movie(H, B).;true;true
7;true,false,false;movie(J, B).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,true;movie(G, I), actor(I).;false;false
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false;movie(H, B).;true;true
8;true,false,false;movie(K, B).;false;false
8;true;movie(C, A), movie(C, B).;true;true
8;true,false,true;movie(H, I).;false;false
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false;movie(G, A), movie(H, B).;true;true
9;true,false,false;movie(J, B).;false;false
9;true;movie(C, A), movie(C, B).;true;true
9;true,false,true;movie(G, I), actor(I).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 3,94e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( genre(B, H), genre(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then return 0.24777317748344863;  // std dev = 0,337, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21098681425125518;  // std dev = 3,65e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.1065832764337205;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1779974596252114;  // std dev = 3,65e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(F, H), actor(H) )
%   | | | then return -0.0968513537369759;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15342698502307137;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.08870413241238491;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.13454011098182664;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(F, H), actor(H) )
%   | | | then return -0.08179044035098695;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095964
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.583 seconds
Total inference time: 1.154 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)'}, {'false': [4.21e-08, 44, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true,true': [2.23e-07, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, A)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [3.94e-08, 44, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [1.49e-08, 44, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, A)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [2.11e-08, 44, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'genre(B, H), genre(G, H)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 1, 0], 'false': [0.0, 44, 0], 'true,true,true': [2.98e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)'}, {'false': [2.24e-08, 44, 0], 'true,true': [0.337, 1, 45], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, A)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 44, 0], 'true,true,true': [3.65e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), actor(H)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [1.05e-08, 44, 0], 'true,true,true': [3.65e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [9.13e-09, 44, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), actor(H)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 44, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}]]
[{'': [0.021266540642723226, 4.0371746350005693e-17], 'true': [1.105288700071267e-15, 0.0], 'true,true': [1.105288700071267e-15, nan], 'true,false': [0.0, nan]}, {'': [0.015181896531630958, 3.532527805625498e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,true': [-9.473903143468002e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.009480631078200644, 5.046468293750712e-18], 'true': [-3.947459643111668e-17, 0.0], 'true,true': [-3.947459643111668e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.005730803218362994, 1.0092936587501423e-17], 'true': [-4.144832625267251e-16, 0.0], 'true,true': [-4.144832625267251e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.003634497357172579, -6.308085367188389e-18], 'true': [1.973729821555834e-17, 0.0], 'true,false,true': [nan, 0.0], 'true,true': [1.973729821555834e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0024635773866361816, 1.1354553660939102e-17], 'true': [0.0024635773866361816, nan]}, {'': [0.002144746839506109, 0.0], 'true': [2.960594732333751e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [2.960594732333751e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0016065142529759816, 2.523234146875356e-18], 'true': [2.960594732333751e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [2.960594732333751e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0012468036443168261, 1.8924256101565167e-18], 'true': [-9.86864910777917e-18, 0.0], 'true,true': [-9.86864910777917e-18, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.000995250867106829, -1.261617073437678e-18], 'true': [-5.181040781584064e-17, 0.0], 'true,true': [-5.181040781584064e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;true;movie(C, A), movie(C, B).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839127;  // std dev = 3,94e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.2403741123974075;  // std dev = 0,069, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21096207637484485;  // std dev = 0,008, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10588076134269644;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.177979600498046;  // std dev = 0,007, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0962671779658765;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1534136251599374;  // std dev = 0,006, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08821127488193181;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13452981021325283;  // std dev = 0,006, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.081369400960431;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095784
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.584 seconds
Total inference time: 0.809 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 5, Type: transfer, Time: 00:02:33
{'Mapping results': {'Generating paths time': 2.5281808376312256, 'Finding best mapping': 0.19967126846313477, 'Possible mappings': 864, 'Generating mappings time': 0.17749786376953125, 'Knowledge compiling time': 0.01278376579284668, 'Total time': 2.9181385040283203}, 'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 0.809, 'Recall': 1.0, 'CLL': -0.095784, 'Learning time': 3.167, 'Parameter Learning results': {'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 1.154, 'Recall': 1.0, 'CLL': -0.095964, 'Learning time': 1.583, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1352095945470413;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.11622033579851573;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */


Results
   AUC ROC   = 0.935462
   AUC PR    = 0.889597
   CLL	      = -0.23826
   Precision = 0.877604 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.934813


Total learning time: 2.006 seconds
Total inference time: 0.769 seconds
AUC ROC: 0.935462


Dataset: uwcse->imdb(workedunder), Fold: 5, Type: scratch, Time: 00:02:36
{'AUC ROC': 0.935462, 'F1': 0.934813, 'Inference time': 0.769, 'Recall': 1.0, 'CLL': -0.23826, 'Learning time': 2.006, 'AUC PR': 0.889597, 'Precision': [0.877604, 0.5]}


Starting experiment #2 for uwcse->imdb(workedunder)

Start learning from source dataset

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.8055173561521439;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.6359267128772901;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( projectmember(I, B) )
%   | | | then return 0.5854216623722396;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.7129876447769319;  // std dev = 2,774, 62,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=53 */
%   else return -0.14185106490048768;  // std dev = 7,15e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6773408397065112;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, B), publication(G, A) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return 0.2616318086752123;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5398498420741675;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.31924728266569014;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.6153366280791784;  // std dev = 2,776, 66,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   else return -0.12544463852839152;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.525995951478812;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(F, H), professor(H) )
%   | | | then return 0.20063817801631484;  // std dev = 1,513, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.4784592498495066;  // std dev = 1,159, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.25446580730441576;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.4843670821365135;  // std dev = 2,773, 66,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   else return -0.11231637819360633;  // std dev = 3,94e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3953438564084147;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | then if ( publication(H, A) )
%   | | | then return 0.15061058398187407;  // std dev = 1,463, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.32026386190992623;  // std dev = 2,285, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.42228487972931855;  // std dev = 1,574, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return 0.28876494306253636;  // std dev = 1,761, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.10159632948783626;  // std dev = 3,49e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3007522660526577;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.2981095526786919;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.11855711398797475;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(H, A), publication(I, B) )
%   | | | then return 0.1868251398369542;  // std dev = 1,922, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.2806642394747868;  // std dev = 2,755, 66,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   else return -0.09269127618926107;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.23540269973125594;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | then if ( publication(G, H), projectmember(I, H) )
%   | | | then return -0.031012177686784458;  // std dev = 1,101, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1853151551346953;  // std dev = 2,414, 38,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=28 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.2592171093712905;  // std dev = 1,568, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return 0.14948196985339426;  // std dev = 1,761, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.0851847513883968;  // std dev = 2,58e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.18962398231281402;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.17790856156095258;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.13513920965039639;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.16782421663057462;  // std dev = 2,841, 66,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=54 */
%   | | | else return 0.11532209014201815;  // std dev = 1,761, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.07877675473109176;  // std dev = 2,11e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.15653159872672676;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( projectmember(F, B), publication(G, A) )
%   | | then return 0.32753423588833563;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( projectmember(H, B) )
%   | | | then return -0.03936734652897381;  // std dev = 1,372, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.1240472377211709;  // std dev = 3,253, 80,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=64 */
%   else return -0.07324622576333704;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.1318147743472161;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, B), publication(G, A) )
%   | | then if ( publication(G, H), professor(H) )
%   | | | then return -0.0837903976239903;  // std dev = 1,472, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.15334061583497127;  // std dev = 1,123, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | | then return 0.26353836300618344;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10133647473487842;  // std dev = 2,970, 69,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=57 */
%   else return -0.06842697784420271;  // std dev = 1,49e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.11280465504816395;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(F, H), publication(G, H) )
%   | | | then return -0.1433543244772429;  // std dev = 1,124, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.07863876892548759;  // std dev = 1,463, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | | then return 0.2156592741603537;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08206635739146184;  // std dev = 2,974, 69,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=57 */
%   else return -0.06419184008202623;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */


Predicates from source: ['advisedby(person,person).', 'publication(title,person).', 'student(person).', 'professor(person).', 'tempadvisedby(person,person).', 'projectmember(project,person).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.012117862701416016
   Generating paths time   = 2.5872962474823
   Generating mappings time   = 0.0608823299407959
   Possible mappings   = 288
   Finding best mapping   = 0.04925107955932617
   Total time   = 2.709552764892578


Best mapping found: ['projectmember(A,B) -> genre(B,A)', 'professor(A) -> director(A)', 'advisedby(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,false,false;genre(B, I).;false;false
0;true;movie(C, B), movie(C, A).;true;true
0;true,true;movie(E, D).;false;false
0;true,false;movie(F, A), movie(G, B).;false;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false,false;movie(J, I).;false;false
1;true;movie(C, B), movie(C, A).;true;true
1;true,true;movie(E, D).;false;false
1;true,false;movie(F, B), movie(G, A).;false;true
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true,true;movie(E, D).;false;false
2;true,false;movie(F, A), movie(G, B).;true;true
2;true,false,false;movie(J, I).;false;false
2;true;movie(C, B), movie(C, A).;true;true
2;true,false,true;movie(F, H), director(H).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false;movie(F, B).;true;true
3;true,false,false;movie(I, B).;false;false
3;true;movie(C, B), movie(C, A).;true;true
3;true,false,true;movie(H, A).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false;movie(G, F).;true;true
4;true,false,false;movie(H, A), movie(I, B).;false;false
4;true;movie(C, A), movie(C, B).;true;true
4;true,false,true;movie(G, B).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,true;movie(E, D).;false;false
5;true,false;movie(G, B).;true;true
5;true,false,false;movie(J, B).;false;false
5;true;movie(C, A), movie(C, B).;true;true
5;true,false,true;movie(G, H), genre(H, I).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true,true;movie(E, D).;false;false
6;true,false;movie(G, F).;true;true
6;true,false,false;movie(H, B).;false;false
6;true;movie(C, B), movie(C, A).;true;true
6;true,false,true;movie(G, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,false,false;genre(B, H).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,true;movie(E, D).;false;false
7;true,false;genre(B, F), movie(G, A).;false;true
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false;movie(F, B), movie(G, A).;true;true
8;true,false,false;movie(J, A).;false;false
8;true;movie(C, B), movie(C, A).;true;true
8;true,false,true;movie(G, H), director(H).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false;movie(F, A), movie(G, B).;true;true
9;true,false,false;movie(I, A).;false;false
9;true;movie(C, B), movie(C, A).;true;true
9;true,false,true;movie(F, H), movie(G, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783624;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), genre(G, H) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, F), movie(G, A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), movie(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094896
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.865 seconds
Total inference time: 1.133 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'false': [5.77e-08, 55, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)'}, {'false': [0.0, 55, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), director(H)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [3.49e-08, 55, 0], 'true,true,true': [1.03e-07, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, A)', 'true,false': 'movie(F, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [3.49e-08, 55, 0], 'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, B)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 55, 0], 'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), genre(G, H)', 'true,false': 'movie(F, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [1.83e-08, 55, 0], 'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, B)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [1.05e-08, 55, 0], 'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'genre(B, F), movie(G, A)'}, {'false': [1.05e-08, 55, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H), director(H)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [1.29e-08, 55, 0], 'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,false,true,false': [0.0, 1, 0], 'false': [0.0, 55, 0], 'true,true,true': [5.16e-08, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0]}]]
[{'': [0.017236072637734554, 6.055761952500853e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,true': [-1.2688263138573217e-16, nan], 'true,false': [0.0, nan]}, {'': [0.012304599783948732, -3.431598439750484e-17], 'true': [-1.9032394707859825e-16, 0.0], 'true,true': [-1.9032394707859825e-16, nan], 'true,false': [0.0, nan]}, {'': [0.007683847065712494, 2.2204460492503132e-17], 'true': [1.9032394707859825e-16, 0.0], 'true,false,true': [0.0, nan], 'true,true': [1.9032394707859825e-16, nan], 'true,false': [0.0, nan]}, {'': [0.004644692439814939, 2.2204460492503132e-17], 'true': [-3.489272363107635e-16, 0.0], 'true,true': [-3.489272363107635e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0029456817402654088, -2.0185873175002845e-18], 'true': [-1.2688263138573217e-16, 0.0], 'true,true': [-1.2688263138573217e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.001996676351744731, 6.0557619525008536e-18], 'true': [-3.172065784643304e-17, 0.0], 'true,true': [-3.172065784643304e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0014349399424219715, 2.0185873175002845e-18], 'true': [-1.586032892321652e-17, 0.0], 'true,true': [-1.586032892321652e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0010802101680417507, 2.0185873175002845e-18], 'true': [-3.9650822308041306e-17, 0.0], 'true,true': [-3.9650822308041306e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0008431290136933203, 3.0278809762504268e-18], 'true': [-1.1895246692412391e-17, 0.0], 'true,true': [-1.1895246692412391e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0006770810581342941, -3.0278809762504268e-18], 'true': [4.7580986769649563e-17, 0.0], 'true,false,true': [nan, 0.0], 'true,true': [4.7580986769649563e-17, nan], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- actor(A), director(B).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- actor(A), director(B).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783624;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.615 seconds
Total inference time: 0.834 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 1, Type: transfer, Time: 02:18:46
{'Mapping results': {'Generating paths time': 2.5872962474823, 'Finding best mapping': 0.04925107955932617, 'Possible mappings': 288, 'Generating mappings time': 0.0608823299407959, 'Knowledge compiling time': 0.012117862701416016, 'Total time': 2.709552764892578}, 'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 0.834, 'Recall': 1.0, 'CLL': -0.094637, 'Learning time': 3.48, 'Parameter Learning results': {'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 1.133, 'Recall': 1.0, 'CLL': -0.094896, 'Learning time': 1.865, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.6909105759500754;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109546;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5354626841427582;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.4024026492217927;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4175135841583101;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.30700250684980995;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3207118471601494;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.24152182581632603;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.25517224256948956;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1958080954961511;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.20975771563253548;  // std dev = 3,33e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.1628100390760043;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1770964977452775;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13816881840032139;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.11920579263429053;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */


Results
   AUC ROC   = 0.920833
   AUC PR    = 0.860033
   CLL	      = -0.244754
   Precision = 0.873995 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932761


Total learning time: 2.08 seconds
Total inference time: 0.743 seconds
AUC ROC: 0.920833


Dataset: uwcse->imdb(workedunder), Fold: 1, Type: scratch, Time: 02:18:49
{'AUC ROC': 0.920833, 'F1': 0.932761, 'Inference time': 0.743, 'Recall': 1.0, 'CLL': -0.244754, 'Learning time': 2.08, 'AUC PR': 0.860033, 'Precision': [0.873995, 0.5]}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.01352381706237793
   Generating paths time   = 2.581766128540039
   Generating mappings time   = 0.0612642765045166
   Possible mappings   = 288
   Finding best mapping   = 0.049221038818359375
   Total time   = 2.7057836055755615


Best mapping found: ['projectmember(A,B) -> genre(B,A)', 'professor(A) -> director(A)', 'advisedby(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,false,false;genre(B, I).;false;false
0;true;movie(C, B), movie(C, A).;true;true
0;true,true;movie(E, D).;false;false
0;true,false;movie(F, A), movie(G, B).;false;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false,false;movie(J, I).;false;false
1;true;movie(C, B), movie(C, A).;true;true
1;true,true;movie(E, D).;false;false
1;true,false;movie(F, B), movie(G, A).;false;true
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true,true;movie(E, D).;false;false
2;true,false;movie(F, A), movie(G, B).;true;true
2;true,false,false;movie(J, I).;false;false
2;true;movie(C, B), movie(C, A).;true;true
2;true,false,true;movie(F, H), director(H).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false;movie(F, B).;true;true
3;true,false,false;movie(I, B).;false;false
3;true;movie(C, B), movie(C, A).;true;true
3;true,false,true;movie(H, A).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false;movie(G, F).;true;true
4;true,false,false;movie(H, A), movie(I, B).;false;false
4;true;movie(C, A), movie(C, B).;true;true
4;true,false,true;movie(G, B).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,true;movie(E, D).;false;false
5;true,false;movie(G, B).;true;true
5;true,false,false;movie(J, B).;false;false
5;true;movie(C, A), movie(C, B).;true;true
5;true,false,true;movie(G, H), genre(H, I).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true,true;movie(E, D).;false;false
6;true,false;movie(G, F).;true;true
6;true,false,false;movie(H, B).;false;false
6;true;movie(C, B), movie(C, A).;true;true
6;true,false,true;movie(G, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,false,false;genre(B, H).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,true;movie(E, D).;false;false
7;true,false;genre(B, F), movie(G, A).;false;true
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false;movie(F, B), movie(G, A).;true;true
8;true,false,false;movie(J, A).;false;false
8;true;movie(C, B), movie(C, A).;true;true
8;true,false,true;movie(G, H), director(H).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false;movie(F, A), movie(G, B).;true;true
9;true,false,false;movie(I, A).;false;false
9;true;movie(C, B), movie(C, A).;true;true
9;true,false,true;movie(F, H), movie(G, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783626;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), genre(G, H) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, F), movie(G, A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), movie(G, H) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094987
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.125 seconds
Total inference time: 1.09 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'false': [5.58e-08, 54, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)'}, {'false': [0.0, 54, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), director(H)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [3.33e-08, 54, 0], 'true,true,true': [1.19e-07, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, A)', 'true,false': 'movie(F, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [3.33e-08, 54, 0], 'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, B)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 54, 0], 'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), genre(G, H)', 'true,false': 'movie(F, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [1.83e-08, 54, 0], 'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, B)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [7.45e-09, 54, 0], 'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'genre(B, F), movie(G, A)'}, {'false': [7.45e-09, 54, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H), director(H)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [1.49e-08, 54, 0], 'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 54, 0], 'true,true,true': [3.94e-08, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}]]
[{'': [0.06035379812695064, 5.756711979537848e-17], 'true': [-3.675221047035001e-16, 0.0], 'true,true': [-3.675221047035001e-16, nan], 'true,false': [0.0, nan]}, {'': [0.04308576245887642, -3.4951465590051226e-17], 'true': [-1.2250736823450003e-16, 0.0], 'true,true': [-1.2250736823450003e-16, nan], 'true,false': [0.0, nan]}, {'': [0.026905743807732977, 2.05596856412066e-17], 'true': [2.4501473646900006e-16, 0.0], 'true,false,true': [0.0, nan], 'true,true': [2.4501473646900006e-16, nan], 'true,false': [0.0, nan]}, {'': [0.01626384593324757, 2.05596856412066e-17], 'true': [-3.3689526264487507e-16, 0.0], 'true,true': [-3.3689526264487507e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.010314593401574014, -2.05596856412066e-18], 'true': [-1.5313421029312505e-16, 0.0], 'true,true': [-1.5313421029312505e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.006991557995307807, 6.1679056923619804e-18], 'true': [-3.062684205862501e-17, 0.0], 'true,true': [-3.062684205862501e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.005024582886685825, 1.02798428206033e-18], 'true': [-2.2970131543968756e-17, 0.0], 'true,true': [-2.2970131543968756e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.003782461804781654, 1.02798428206033e-18], 'true': [-3.062684205862501e-17, 0.0], 'true,true': [-3.062684205862501e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0029522988999256465, 4.11193712824132e-18], 'true': [0.0, 0.0], 'true,false,true': [0.0, nan], 'true,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0023708657045662224, -3.0839528461809902e-18], 'true': [2.6798486801296883e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [2.6798486801296883e-17, nan], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- actor(A), director(B).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- actor(A), director(B).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783626;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109179;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.502 seconds
Total inference time: 0.851 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 2, Type: transfer, Time: 02:18:58
{'Mapping results': {'Generating paths time': 2.581766128540039, 'Finding best mapping': 0.049221038818359375, 'Possible mappings': 288, 'Generating mappings time': 0.0612642765045166, 'Knowledge compiling time': 0.01352381706237793, 'Total time': 2.7057836055755615}, 'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 0.851, 'Recall': 1.0, 'CLL': -0.094637, 'Learning time': 3.627, 'Parameter Learning results': {'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 1.09, 'Recall': 1.0, 'CLL': -0.094987, 'Learning time': 2.125, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.990741
   AUC PR    = 0.981818
   CLL	      = -0.113754
   Precision = 0.981818 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990826


Total learning time: 2.02 seconds
Total inference time: 0.766 seconds
AUC ROC: 0.990741


Dataset: uwcse->imdb(workedunder), Fold: 2, Type: scratch, Time: 02:19:01
{'AUC ROC': 0.990741, 'F1': 0.990826, 'Inference time': 0.766, 'Recall': 1.0, 'CLL': -0.113754, 'Learning time': 2.02, 'AUC PR': 0.981818, 'Precision': [0.981818, 0.5]}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.013943910598754883
   Generating paths time   = 2.54921555519104
   Generating mappings time   = 0.0619046688079834
   Possible mappings   = 288
   Finding best mapping   = 0.04907369613647461
   Total time   = 2.674144744873047


Best mapping found: ['projectmember(A,B) -> genre(B,A)', 'professor(A) -> director(A)', 'advisedby(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,false,false;genre(B, I).;false;false
0;true;movie(C, B), movie(C, A).;true;true
0;true,true;movie(E, D).;false;false
0;true,false;movie(F, A), movie(G, B).;false;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false,false;movie(J, I).;false;false
1;true;movie(C, B), movie(C, A).;true;true
1;true,true;movie(E, D).;false;false
1;true,false;movie(F, B), movie(G, A).;false;true
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true,true;movie(E, D).;false;false
2;true,false;movie(F, A), movie(G, B).;true;true
2;true,false,false;movie(J, I).;false;false
2;true;movie(C, B), movie(C, A).;true;true
2;true,false,true;movie(F, H), director(H).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false;movie(F, B).;true;true
3;true,false,false;movie(I, B).;false;false
3;true;movie(C, B), movie(C, A).;true;true
3;true,false,true;movie(H, A).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false;movie(G, F).;true;true
4;true,false,false;movie(H, A), movie(I, B).;false;false
4;true;movie(C, A), movie(C, B).;true;true
4;true,false,true;movie(G, B).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,true;movie(E, D).;false;false
5;true,false;movie(G, B).;true;true
5;true,false,false;movie(J, B).;false;false
5;true;movie(C, A), movie(C, B).;true;true
5;true,false,true;movie(G, H), genre(H, I).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true,true;movie(E, D).;false;false
6;true,false;movie(G, F).;true;true
6;true,false,false;movie(H, B).;false;false
6;true;movie(C, B), movie(C, A).;true;true
6;true,false,true;movie(G, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,false,false;genre(B, H).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,true;movie(E, D).;false;false
7;true,false;genre(B, F), movie(G, A).;false;true
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false;movie(F, B), movie(G, A).;true;true
8;true,false,false;movie(J, A).;false;false
8;true;movie(C, B), movie(C, A).;true;true
8;true,false,true;movie(G, H), director(H).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false;movie(F, A), movie(G, B).;true;true
9;true,false,false;movie(I, A).;false;false
9;true;movie(C, B), movie(C, A).;true;true
9;true,false,true;movie(F, H), movie(G, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048796;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283911;  // std dev = 9,42e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360625;  // std dev = 8,43e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 4,47e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926076;  // std dev = 8,16e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), genre(G, H) )
%   | | | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6,99e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109166;  // std dev = 5,87e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, F), movie(G, A) )
%   | | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07324622576333725;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), movie(G, H) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.181 seconds
Total inference time: 1.001 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'false': [0.0, 153, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.83e-08, 25, 0], 'true,true,true': [1.09e-06, 0, 178]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)'}, {'false': [9.42e-08, 153, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 25, 0], 'true,true,true': [0.0, 0, 178]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), director(H)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [8.43e-08, 153, 0], 'true,true,true': [5.9e-07, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, A)', 'true,false': 'movie(F, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [4.47e-08, 153, 0], 'true,true,true': [3.77e-07, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, B)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [8.16e-08, 153, 0], 'true,true,true': [3.58e-07, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [9.13e-09, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), genre(G, H)', 'true,false': 'movie(F, B)'}, {'true,false,true,false': [5.27e-09, 11, 0], 'false': [6.99e-08, 153, 0], 'true,true,true': [3.63e-07, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [8.33e-09, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, B)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [5.87e-08, 153, 0], 'true,true,true': [3e-07, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,false': 'genre(B, H)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'genre(B, F), movie(G, A)'}, {'false': [0.0, 153, 0], 'true,false,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 178], 'true,false,false,false': [2.63e-09, 11, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [3.73e-09, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H), director(H)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [4.94e-08, 153, 0], 'true,true,true': [0.0, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,false,true,false': [0.0, 22, 0], 'false': [0.0, 153, 0], 'true,true,true': [7.6e-08, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0]}]]
[{'': [0.10798611953700064, -6.966105252550002e-17], 'true': [6.706246045376226e-15, 1.3322676295501878e-17], 'true,true': [6.706246045376226e-15, nan], 'true,false': [1.3322676295501878e-17, nan]}, {'': [0.07708983427090953, 5.805087710458335e-17], 'true': [-3.193450497798203e-15, -4.440892098500626e-18], 'true,true': [-3.193450497798203e-15, nan], 'true,false': [-4.440892098500626e-18, nan]}, {'': [0.04814024895239027, 4.644070168366668e-17], 'true': [1.9559884299013994e-15, 0.0], 'true,false,true': [0.0, nan], 'true,true': [1.9559884299013994e-15, nan], 'true,false': [0.0, nan]}, {'': [0.02909957062494659, 1.3061447348531253e-17], 'true': [7.983626244495507e-16, -2.220446049250313e-18], 'true,false,true': [-2.220446049250313e-18, nan], 'true,true': [7.983626244495507e-16, nan], 'true,false': [-2.220446049250313e-18, nan]}, {'': [0.018455059177800756, 4.353815782843751e-17], 'true': [7.185263620045957e-16, 3.3306690738754695e-18], 'true,false,true': [3.3306690738754695e-18, nan], 'true,true': [7.185263620045957e-16, nan], 'true,false': [3.3306690738754695e-18, nan]}, {'': [0.012509423447437237, 3.192798240752084e-17], 'true': [7.384854276158345e-16, 1.2212453270876722e-17], 'true,false,true': [4.956352788505163e-18, 2.523234146875356e-18], 'true,true': [7.384854276158345e-16, nan], 'true,false': [1.2212453270876722e-17, nan]}, {'': [0.008990075605248978, 2.2494714878026048e-17], 'true': [5.03966406683779e-16, -3.3306690738754695e-18], 'true,false,true': [-3.3306690738754695e-18, nan], 'true,true': [5.03966406683779e-16, nan], 'true,false': [-3.3306690738754695e-18, nan]}, {'': [0.0067676498459319405, -2.1769078914218755e-17], 'true,false,false': [nan, 6.30808536718839e-19], 'true': [-1.6965205769552953e-16, -1.1102230246251566e-18], 'true,true': [-1.6965205769552953e-16, nan], 'true,false': [9.912705577010326e-19, 6.30808536718839e-19]}, {'': [0.0052823071920960795, 1.596399120376042e-17], 'true': [-4.490789762528723e-17, -4.440892098500626e-18], 'true,true': [-4.490789762528723e-17, nan], 'true,false,true': [-4.440892098500626e-18, nan], 'true,false': [-4.440892098500626e-18, nan]}, {'': [0.004241996283993872, -1.0884539457109378e-17], 'true': [3.2433481618263e-17, -2.220446049250313e-18], 'true,false,true': [-5.782411586589357e-19, -1.8924256101565167e-18], 'true,true': [3.2433481618263e-17, nan], 'true,false': [-2.220446049250313e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- actor(A), director(B).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '5;true,false;movie(F, G), genre(G, H).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '7;true,false;genre(B, F), movie(G, A).;true;true', '8;;workedunder(A, B) :- actor(A), director(B).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, B), movie(C, A).;true;true', '9;true,false;movie(F, H), movie(G, H).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048796;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.1254446385283911;  // std dev = 9,42e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360625;  // std dev = 8,43e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783628;  // std dev = 4,47e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926076;  // std dev = 8,16e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E), genre(E, F) )
%   | | then return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6,99e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253584;  // std dev = 1,32e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253584;  // std dev = 1,32e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.0787767547310918;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.0787767547310918;  // std dev = 5,27e-09, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0787767547310918;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.0787767547310918;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.0787767547310918;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D), movie(E, A) )
%   | | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07324622576333725;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080112;  // std dev = 2,63e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1340070300080112;  // std dev = 2,63e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.483 seconds
Total inference time: 0.814 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 3, Type: transfer, Time: 02:19:11
{'Mapping results': {'Generating paths time': 2.54921555519104, 'Finding best mapping': 0.04907369613647461, 'Possible mappings': 288, 'Generating mappings time': 0.0619046688079834, 'Knowledge compiling time': 0.013943910598754883, 'Total time': 2.674144744873047}, 'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 0.814, 'Recall': 1.0, 'CLL': -0.094637, 'Learning time': 5.664, 'Parameter Learning results': {'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 1.001, 'Recall': 1.0, 'CLL': -0.094637, 'Learning time': 3.181, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048796;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839122;  // std dev = 6,32e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360625;  // std dev = 8,43e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783642;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926096;  // std dev = 1,49e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839679;  // std dev = 4,47e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109165;  // std dev = 5,96e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333706;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420267;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06419184008202625;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.18 seconds
Total inference time: 0.749 seconds
AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 3, Type: scratch, Time: 02:19:16
{'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 0.749, 'Recall': 1.0, 'CLL': -0.094637, 'Learning time': 3.18, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.012885808944702148
   Generating paths time   = 2.580361843109131
   Generating mappings time   = 0.061136722564697266
   Possible mappings   = 288
   Finding best mapping   = 0.0483400821685791
   Total time   = 2.7027316093444824


Best mapping found: ['projectmember(A,B) -> genre(B,A)', 'professor(A) -> director(A)', 'advisedby(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,false,false;genre(B, I).;false;false
0;true;movie(C, B), movie(C, A).;true;true
0;true,true;movie(E, D).;false;false
0;true,false;movie(F, A), movie(G, B).;false;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false,false;movie(J, I).;false;false
1;true;movie(C, B), movie(C, A).;true;true
1;true,true;movie(E, D).;false;false
1;true,false;movie(F, B), movie(G, A).;false;true
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true,true;movie(E, D).;false;false
2;true,false;movie(F, A), movie(G, B).;true;true
2;true,false,false;movie(J, I).;false;false
2;true;movie(C, B), movie(C, A).;true;true
2;true,false,true;movie(F, H), director(H).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false;movie(F, B).;true;true
3;true,false,false;movie(I, B).;false;false
3;true;movie(C, B), movie(C, A).;true;true
3;true,false,true;movie(H, A).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false;movie(G, F).;true;true
4;true,false,false;movie(H, A), movie(I, B).;false;false
4;true;movie(C, A), movie(C, B).;true;true
4;true,false,true;movie(G, B).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,true;movie(E, D).;false;false
5;true,false;movie(G, B).;true;true
5;true,false,false;movie(J, B).;false;false
5;true;movie(C, A), movie(C, B).;true;true
5;true,false,true;movie(G, H), genre(H, I).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true,true;movie(E, D).;false;false
6;true,false;movie(G, F).;true;true
6;true,false,false;movie(H, B).;false;false
6;true;movie(C, B), movie(C, A).;true;true
6;true,false,true;movie(G, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,false,false;genre(B, H).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,true;movie(E, D).;false;false
7;true,false;genre(B, F), movie(G, A).;false;true
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false;movie(F, B), movie(G, A).;true;true
8;true,false,false;movie(J, A).;false;false
8;true;movie(C, B), movie(C, A).;true;true
8;true,false,true;movie(G, H), director(H).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false;movie(F, A), movie(G, B).;true;true
9;true,false,false;movie(I, A).;false;false
9;true;movie(C, B), movie(C, A).;true;true
9;true,false,true;movie(F, H), movie(G, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), genre(G, H) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, F), movie(G, A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), movie(G, H) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094821
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.644 seconds
Total inference time: 1.192 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'false': [4.34e-08, 41, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true': [2.23e-07, 0, 45]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)'}, {'false': [0.0, 41, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), director(H)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, A)', 'true,false': 'movie(F, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, B)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,true,true': [2.98e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), genre(G, H)', 'true,false': 'movie(F, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [1.67e-08, 41, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, B)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,true,true': [5.58e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'genre(B, F), movie(G, A)'}, {'false': [1.18e-08, 41, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H), director(H)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,false,true,false': [0.0, 1, 0], 'false': [0.0, 41, 0], 'true,true,true': [2.36e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.32e-09, 3, 0]}]]
[{'': [0.07496876301541104, 4.603363760640893e-17], 'true': [1.105288700071267e-15, 0.0], 'true,true': [1.105288700071267e-15, nan], 'true,false': [0.0, nan]}, {'': [0.05351918877289897, -2.166288828536891e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,true': [-9.473903143468002e-16, nan], 'true,false': [0.0, nan]}, {'': [0.03342110014406096, -5.415722071342227e-18], 'true': [-3.947459643111668e-17, 0.0], 'true,true': [-3.947459643111668e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.020202215093805483, -8.12358310701334e-18], 'true': [-4.144832625267251e-16, 0.0], 'true,true': [-4.144832625267251e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.012812322212040247, -1.3539305178355567e-17], 'true': [1.973729821555834e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [1.973729821555834e-17, nan], 'true,false': [0.0, nan]}, {'': [0.008684597667842037, 6.769652589177784e-18], 'true': [-2.960594732333751e-17, 0.0], 'true,true': [-2.960594732333751e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0062413099982688465, -2.7078610356711136e-18], 'true': [6.908054375445419e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [6.908054375445419e-17, nan], 'true,false': [0.0, nan]}, {'': [0.004698403272997808, 3.384826294588892e-18], 'true': [-8.388351741612294e-17, 0.0], 'true,true': [-8.388351741612294e-17, nan], 'true,false': [0.0, nan]}, {'': [0.003667212395044684, -6.769652589177784e-19], 'true': [-3.947459643111668e-17, 0.0], 'true,true': [-3.947459643111668e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.002944982331900951, -2.030895776753335e-18], 'true': [1.2335811384723961e-17, 0.0], 'true,false,true': [5.782411586589357e-19, 0.0], 'true,true': [1.2335811384723961e-17, nan], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- actor(A), director(B).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- actor(A), director(B).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, B), movie(C, A).;true;true', '9;true,false;movie(F, H), movie(G, H).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360639;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.386 seconds
Total inference time: 0.797 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 4, Type: transfer, Time: 02:19:24
{'Mapping results': {'Generating paths time': 2.580361843109131, 'Finding best mapping': 0.0483400821685791, 'Possible mappings': 288, 'Generating mappings time': 0.061136722564697266, 'Knowledge compiling time': 0.012885808944702148, 'Total time': 2.7027316093444824}, 'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 0.797, 'Recall': 1.0, 'CLL': -0.094637, 'Learning time': 3.03, 'Parameter Learning results': {'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 1.192, 'Recall': 1.0, 'CLL': -0.094821, 'Learning time': 1.644, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.991098
   AUC PR    = 0.982507
   CLL	      = -0.113016
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 1.959 seconds
Total inference time: 0.813 seconds
AUC ROC: 0.991098


Dataset: uwcse->imdb(workedunder), Fold: 4, Type: scratch, Time: 02:19:27
{'AUC ROC': 0.991098, 'F1': 0.991176, 'Inference time': 0.813, 'Recall': 1.0, 'CLL': -0.113016, 'Learning time': 1.959, 'AUC PR': 0.982507, 'Precision': [0.982507, 0.5]}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.05179166793823242
   Generating paths time   = 2.5733983516693115
   Generating mappings time   = 0.061249732971191406
   Possible mappings   = 288
   Finding best mapping   = 0.04851984977722168
   Total time   = 2.7349672317504883


Best mapping found: ['projectmember(A,B) -> genre(B,A)', 'professor(A) -> director(A)', 'advisedby(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,false,false;genre(B, I).;false;false
0;true;movie(C, B), movie(C, A).;true;true
0;true,true;movie(E, D).;false;false
0;true,false;movie(F, A), movie(G, B).;false;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false,false;movie(J, I).;false;false
1;true;movie(C, B), movie(C, A).;true;true
1;true,true;movie(E, D).;false;false
1;true,false;movie(F, B), movie(G, A).;false;true
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true,true;movie(E, D).;false;false
2;true,false;movie(F, A), movie(G, B).;true;true
2;true,false,false;movie(J, I).;false;false
2;true;movie(C, B), movie(C, A).;true;true
2;true,false,true;movie(F, H), director(H).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false;movie(F, B).;true;true
3;true,false,false;movie(I, B).;false;false
3;true;movie(C, B), movie(C, A).;true;true
3;true,false,true;movie(H, A).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false;movie(G, F).;true;true
4;true,false,false;movie(H, A), movie(I, B).;false;false
4;true;movie(C, A), movie(C, B).;true;true
4;true,false,true;movie(G, B).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,true;movie(E, D).;false;false
5;true,false;movie(G, B).;true;true
5;true,false,false;movie(J, B).;false;false
5;true;movie(C, A), movie(C, B).;true;true
5;true,false,true;movie(G, H), genre(H, I).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true,true;movie(E, D).;false;false
6;true,false;movie(G, F).;true;true
6;true,false,false;movie(H, B).;false;false
6;true;movie(C, B), movie(C, A).;true;true
6;true,false,true;movie(G, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,false,false;genre(B, H).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,true;movie(E, D).;false;false
7;true,false;genre(B, F), movie(G, A).;false;true
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false;movie(F, B), movie(G, A).;true;true
8;true,false,false;movie(J, A).;false;false
8;true;movie(C, B), movie(C, A).;true;true
8;true,false,true;movie(G, H), director(H).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false;movie(F, A), movie(G, B).;true;true
9;true,false,false;movie(I, A).;false;false
9;true;movie(C, B), movie(C, A).;true;true
9;true,false,true;movie(F, H), movie(G, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), genre(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, F), movie(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), movie(G, H) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095144
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.651 seconds
Total inference time: 1.327 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'false': [4.59e-08, 44, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true,true': [2.23e-07, 0, 45]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)'}, {'false': [0.0, 44, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), director(H)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 44, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, A)', 'true,false': 'movie(F, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 44, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, B)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 44, 0], 'true,true,true': [2.98e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), genre(G, H)', 'true,false': 'movie(F, B)'}, {'true,false,true,false': [0.0, 1, 0], 'false': [1.67e-08, 44, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, B)', 'true,false': 'movie(F, G)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 44, 0], 'true,true,true': [5.58e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,false': 'genre(B, H)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'genre(B, F), movie(G, A)'}, {'false': [1.18e-08, 44, 0], 'true,false,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false,false': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H), director(H)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [5.27e-09, 44, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, H), movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 44, 0], 'true,true,true': [2.36e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}]]
[{'': [0.021266540642723226, 4.794144879063176e-17], 'true': [1.105288700071267e-15, 0.0], 'true,true': [1.105288700071267e-15, nan], 'true,false': [0.0, nan]}, {'': [0.015181896531630958, -2.0185873175002847e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,true': [-9.473903143468002e-16, nan], 'true,false': [0.0, nan]}, {'': [0.009480631078200644, 0.0], 'true': [-3.947459643111668e-17, 0.0], 'true,true': [-3.947459643111668e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.005730803218362994, -7.569702440626067e-18], 'true': [-4.144832625267251e-16, 0.0], 'true,true': [-4.144832625267251e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.003634497357172579, -1.6401021954689813e-17], 'true': [1.973729821555834e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [1.973729821555834e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0024635773866361816, 6.308085367188389e-18], 'true': [-2.960594732333751e-17, 0.0], 'true,true': [-2.960594732333751e-17, nan], 'true,false,true': [nan, 0.0], 'true,false': [0.0, nan]}, {'': [0.0017704850314087769, -1.261617073437678e-18], 'true': [6.908054375445419e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [6.908054375445419e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0013328055598378111, 3.1540426835941946e-18], 'true,false,false': [nan, 0.0], 'true': [-8.388351741612294e-17, 0.0], 'true,true': [-8.388351741612294e-17, nan], 'true,false': [nan, 0.0]}, {'': [0.0010402855577152684, 6.30808536718839e-19], 'true': [-3.947459643111668e-17, 0.0], 'true,true': [-3.947459643111668e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0008354090948599093, -2.523234146875356e-18], 'true': [1.2335811384723961e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [1.2335811384723961e-17, nan], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- actor(A), director(B).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- actor(A), director(B).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1254446385283915;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360638;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783635;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109176;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.431 seconds
Total inference time: 0.85 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 5, Type: transfer, Time: 02:19:35
{'Mapping results': {'Generating paths time': 2.5733983516693115, 'Finding best mapping': 0.04851984977722168, 'Possible mappings': 288, 'Generating mappings time': 0.061249732971191406, 'Knowledge compiling time': 0.05179166793823242, 'Total time': 2.7349672317504883}, 'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 0.85, 'Recall': 1.0, 'CLL': -0.094637, 'Learning time': 3.082, 'Parameter Learning results': {'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 1.327, 'Recall': 1.0, 'CLL': -0.095144, 'Learning time': 1.651, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1352095945470413;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.11622033579851573;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */


Results
   AUC ROC   = 0.935462
   AUC PR    = 0.889597
   CLL	      = -0.23826
   Precision = 0.877604 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.934813


Total learning time: 1.939 seconds
Total inference time: 0.782 seconds
AUC ROC: 0.935462


Dataset: uwcse->imdb(workedunder), Fold: 5, Type: scratch, Time: 02:19:38
{'AUC ROC': 0.935462, 'F1': 0.934813, 'Inference time': 0.782, 'Recall': 1.0, 'CLL': -0.23826, 'Learning time': 1.939, 'AUC PR': 0.889597, 'Precision': [0.877604, 0.5]}


Starting experiment #3 for uwcse->imdb(workedunder)

Start learning from source dataset

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.8055173561521439;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.6359267128772901;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( projectmember(I, B) )
%   | | | then return 0.5854216623722396;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.7129876447769319;  // std dev = 2,774, 62,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=53 */
%   else return -0.14185106490048768;  // std dev = 7,15e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6773408397065112;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, B), publication(G, A) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return 0.2616318086752123;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5398498420741675;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | | then return 0.7652857006627484;  // std dev = 0,020, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5766058786845597;  // std dev = 3,137, 69,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=57 */
%   else return -0.12544463852839152;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.525995951478812;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.3749017572227238;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.04176490944394292;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.3647967664269055;  // std dev = 2,217, 25,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | | | else return 0.49329405976644364;  // std dev = 2,609, 59,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=51 */
%   else return -0.11231637819360633;  // std dev = 3,94e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3953438564084147;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | then if ( publication(H, A) )
%   | | | then return 0.14939361257528264;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.3161825688958473;  // std dev = 2,283, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.4223432053056252;  // std dev = 1,609, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return 0.2982102388921876;  // std dev = 1,747, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.10159632948783626;  // std dev = 3,49e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3007522660526577;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | then if ( publication(H, F) )
%   | | | then return 0.07085526069481228;  // std dev = 1,259, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.24019789013723228;  // std dev = 2,404, 36,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=27 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.3178475811770624;  // std dev = 1,610, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return 0.2239533562204264;  // std dev = 1,748, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.09269127618926107;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.23540269973125594;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, B), publication(G, A) )
%   | | then if ( publication(G, H), professor(H) )
%   | | | then return -0.02352688163330881;  // std dev = 1,470, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.2795739114012047;  // std dev = 1,118, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.05333631862437966;  // std dev = 1,259, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.22650034539312758;  // std dev = 2,739, 66,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   else return -0.0851847513883968;  // std dev = 2,58e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( projectmember(C, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.33980393491171923;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.012319667771693946;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.04656760503877564;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.1970063511967119;  // std dev = 0,975, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.08637117022475381;  // std dev = 2,094, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | | else return 0.18458969619377202;  // std dev = 2,489, 58,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=50 */
%   else return -0.07877675473109176;  // std dev = 2,11e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.17896245424246016;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.15531307376858713;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.13002099223760588;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1848567499359736;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(H, B), publication(I, A) )
%   | | | then return 0.06450786885522404;  // std dev = 1,912, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.14344091275215717;  // std dev = 2,712, 66,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   else return -0.07324622576333704;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), projectmember(E, D) )
%   | | then if ( projectmember(F, B) )
%   | | | then return -0.022014959758938153;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.032787733892201576;  // std dev = 0,829, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(C, G), student(G) )
%   | | | then return 0.1154819453327591;  // std dev = 2,899, 97,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=84 */
%   | | | else return 0.21968519718748228;  // std dev = 0,823, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( tempadvisedby(H, B), publication(I, A) )
%   | | then return 0.24690304144613218;  // std dev = 0,021, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( projectmember(J, B) )
%   | | | then return -0.06837816254387982;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05038377117059445;  // std dev = 1,237, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.06842697784420271;  // std dev = 1,49e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), student(D) )
%   | | then if ( inphase(D, E) )
%   | | | then return 0.10714984060265262;  // std dev = 2,770, 98,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=86 */
%   | | | else return -0.22705691771560832;  // std dev = 1,264, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.124578596899983;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19774379247513368;  // std dev = 0,060, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(H, B) )
%   | | then if ( inphase(A, I), inphase(H, I) )
%   | | | then return -0.08269746339767217;  // std dev = 1,048, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.24327747680186704;  // std dev = 0,124, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(J, A) )
%   | | | then return -0.04082859878886776;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.002122754808650762;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06419184008202623;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */


Predicates from source: ['advisedby(person,person).', 'inphase(person,prequals).', 'tempadvisedby(person,person).', 'professor(person).', 'student(person).', 'publication(title,person).', 'projectmember(project,person).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.012884378433227539
   Generating paths time   = 2.0904157161712646
   Generating mappings time   = 0.06887578964233398
   Possible mappings   = 864
   Finding best mapping   = 0.1533346176147461
   Total time   = 2.3255162239074707


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'inphase(A,B) -> movie(B,A)', 'professor(A) -> director(A)', 'student(A) -> actor(A)', 'projectmember(A,B) -> genre(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,false;movie(F, A), movie(G, B).;false;true
0;true,true;movie(E, D).;false;false
0;true,false,false;genre(B, I).;false;false
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(F, B), movie(G, A).;false;true
1;true,true;movie(E, D).;false;false
1;true,false,false;movie(J, A).;false;false
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true,true;movie(E, D).;false;false
2;true,false,false;movie(H, A).;false;false
2;true,false,true;movie(G, B).;false;false
2;true,false;movie(G, F).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false,false;movie(I, B).;false;false
3;true,false,true;movie(H, A).;false;false
3;true,false;movie(F, B).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false,false;movie(I, B).;false;false
4;true,false,true;movie(H, F).;false;false
4;true,false;movie(G, B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,true;movie(E, D).;false;false
5;true,false,false;movie(J, I).;false;false
5;true,false,true;movie(G, H), director(H).;false;false
5;true,false;movie(F, B), movie(G, A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true,true;movie(D, A).;false;true
6;true,false,false;movie(H, A).;false;false
6;true,false;movie(F, A), movie(F, B).;false;true
6;true,true,false;movie(E, B).;false;false
6;true;genre(B, C).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false,false;movie(H, B), movie(I, A).;false;false
7;true,false,true;movie(G, B).;false;false
7;true,false;movie(G, F).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true,false;movie(I, A).;false;true
8;true,false,false;genre(B, J).;false;false
8;true,true;movie(C, D), genre(D, E).;true;true
8;true,true,false;movie(C, G), actor(G).;false;false
8;true,true,true;genre(B, F).;false;false
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,false;movie(I, A), movie(I, H).;false;true
9;true,false,false;movie(J, A).;false;false
9;true,true;movie(C, D), actor(D).;true;true
9;true,true,false;movie(F, A).;false;false
9;true,true,true;movie(E, D).;false;false
9;true;movie(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783624;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.20469570738054216;  // std dev = 0,286, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1778354072548556;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.09497157366234624;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), genre(D, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0.14908625557509447;  // std dev = 0,238, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then if ( movie(E, D) )
%   | | | then return 0.13081901851218244;  // std dev = 0,233, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102139
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.589 seconds
Total inference time: 1.214 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [5.77e-08, 55, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 55, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.03e-07, 0, 56], 'false': [3.49e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(G, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [3.49e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [0.0, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [1.83e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, A)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.286, 1, 56], 'false': [1.05e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [1.05e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D), genre(D, E)', 'true,true,true': 'genre(B, F)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.238, 1, 56], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [1.29e-08, 55, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true,true,true': 'movie(E, D)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.233, 1, 56], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 55, 0], 'true,true,true,false': [0.0, 0, 0]}]]
[{'': [0.017236072637734554, 6.055761952500853e-17], 'true,true': [-1.2688263138573217e-16, nan], 'true,false': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0]}, {'': [0.012304599783948732, -3.431598439750484e-17], 'true,true': [-1.9032394707859825e-16, nan], 'true,false': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0]}, {'': [0.007683847065712494, 2.2204460492503132e-17], 'true,false': [0.0, nan], 'true,true': [1.9032394707859825e-16, nan], 'true,false,true': [0.0, nan], 'true': [1.9032394707859825e-16, 0.0]}, {'': [0.004644692439814939, 2.2204460492503132e-17], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-3.489272363107635e-16, nan], 'true': [-3.489272363107635e-16, 0.0]}, {'': [0.0029456817402654088, -2.0185873175002845e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-1.2688263138573217e-16, nan], 'true': [-1.2688263138573217e-16, 0.0]}, {'': [0.001996676351744731, 6.0557619525008536e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-3.172065784643304e-17, nan], 'true': [-3.172065784643304e-17, 0.0]}, {'': [0.0014349399424219715, 2.0185873175002845e-18], 'true,true': [0.0014349399424219715, nan], 'true': [0.0014349399424219715, nan]}, {'': [0.001282771417322517, 2.0185873175002845e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-1.1895246692412391e-17, nan], 'true': [-1.1895246692412391e-17, 0.0]}, {'': [0.0009962822180731418, 3.0278809762504268e-18], 'true,true': [0.0009962822180731418, nan], 'true,true,true': [0.0009962822180731418, nan], 'true': [0.0009962822180731418, nan]}, {'': [0.0009491241284840674, -3.0278809762504268e-18], 'true,true': [0.0009491241284840674, nan], 'true,true,true': [0.0009491241284840674, nan], 'true': [0.0009491241284840674, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- actor(A), director(B).;true;true', '2;true;movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783624;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20469570738054216;  // std dev = 0,038, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1778354072548556;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09497157366234624;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.14471770726729338;  // std dev = 0,045, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.15330416428607482;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.127061602710717;  // std dev = 0,044, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1344443005433478;  // std dev = 2,36e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098209
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.638 seconds
Total inference time: 0.803 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 1, Type: transfer, Time: 01:58:14
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.803, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 1.214, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.589, 'CLL': -0.102139}, 'Learning time': 3.227, 'CLL': -0.098209, 'Mapping results': {'Generating mappings time': 0.06887578964233398, 'Total time': 2.3255162239074707, 'Possible mappings': 864, 'Finding best mapping': 0.1533346176147461, 'Generating paths time': 2.0904157161712646, 'Knowledge compiling time': 0.012884378433227539}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.6909105759500754;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109546;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5354626841427582;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.4024026492217927;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4175135841583101;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.30700250684980995;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3207118471601494;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.24152182581632603;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.25517224256948956;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1958080954961511;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.20975771563253548;  // std dev = 3,33e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1628100390760043;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1770964977452775;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13816881840032139;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.11920579263429053;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */


Results
   AUC ROC   = 0.920833
   AUC PR    = 0.860033
   CLL	      = -0.244754
   Precision = 0.873995 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932761


Total learning time: 2.185 seconds
Total inference time: 0.74 seconds
AUC ROC: 0.920833


Dataset: uwcse->imdb(workedunder), Fold: 1, Type: scratch, Time: 01:58:17
{'AUC ROC': 0.920833, 'Recall': 1.0, 'Inference time': 0.74, 'F1': 0.932761, 'AUC PR': 0.860033, 'Precision': [0.873995, 0.5], 'Learning time': 2.185, 'CLL': -0.244754}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.01341104507446289
   Generating paths time   = 2.409738540649414
   Generating mappings time   = 0.0691690444946289
   Possible mappings   = 864
   Finding best mapping   = 0.15389108657836914
   Total time   = 2.6462149620056152


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'inphase(A,B) -> movie(B,A)', 'professor(A) -> director(A)', 'student(A) -> actor(A)', 'projectmember(A,B) -> genre(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,false;movie(F, A), movie(G, B).;false;true
0;true,true;movie(E, D).;false;false
0;true,false,false;genre(B, I).;false;false
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(F, B), movie(G, A).;false;true
1;true,true;movie(E, D).;false;false
1;true,false,false;movie(J, A).;false;false
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true,true;movie(E, D).;false;false
2;true,false,false;movie(H, A).;false;false
2;true,false,true;movie(G, B).;false;false
2;true,false;movie(G, F).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false,false;movie(I, B).;false;false
3;true,false,true;movie(H, A).;false;false
3;true,false;movie(F, B).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false,false;movie(I, B).;false;false
4;true,false,true;movie(H, F).;false;false
4;true,false;movie(G, B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,true;movie(E, D).;false;false
5;true,false,false;movie(J, I).;false;false
5;true,false,true;movie(G, H), director(H).;false;false
5;true,false;movie(F, B), movie(G, A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true,true;movie(D, A).;false;true
6;true,false,false;movie(H, A).;false;false
6;true,false;movie(F, A), movie(F, B).;false;true
6;true,true,false;movie(E, B).;false;false
6;true;genre(B, C).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false,false;movie(H, B), movie(I, A).;false;false
7;true,false,true;movie(G, B).;false;false
7;true,false;movie(G, F).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true,false;movie(I, A).;false;true
8;true,false,false;genre(B, J).;false;false
8;true,true;movie(C, D), genre(D, E).;true;true
8;true,true,false;movie(C, G), actor(G).;false;false
8;true,true,true;genre(B, F).;false;false
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,false;movie(I, A), movie(I, H).;false;true
9;true,false,false;movie(J, A).;false;false
9;true,true;movie(C, D), actor(D).;true;true
9;true,true,false;movie(F, A).;false;false
9;true,true,true;movie(E, D).;false;false
9;true;movie(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783626;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.19114258851230162;  // std dev = 0,558, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.17982566810854425;  // std dev = 4,71e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.09381303376475986;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), genre(D, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0.13926610101170345;  // std dev = 0,466, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then if ( movie(E, D) )
%   | | | then return 0.12227720595112945;  // std dev = 0,455, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103399
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.604 seconds
Total inference time: 1.169 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [5.58e-08, 54, 0], 'true,true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 54, 0], 'true,true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.19e-07, 0, 58], 'false': [3.33e-08, 54, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(G, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'false': [3.33e-08, 54, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'false': [0.0, 54, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'false': [1.83e-08, 54, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, A)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.558, 4, 58], 'false': [7.45e-09, 54, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [4.71e-08, 0, 58], 'false': [7.45e-09, 54, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D), genre(D, E)', 'true,true,true': 'genre(B, F)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.466, 4, 58], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [1.49e-08, 54, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true,true,true': 'movie(E, D)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.455, 4, 58], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 54, 0], 'true,true,true,false': [0.0, 0, 0]}]]
[{'': [0.06035379812695064, 5.756711979537848e-17], 'true,true': [-3.675221047035001e-16, nan], 'true,false': [0.0, nan], 'true': [-3.675221047035001e-16, 0.0]}, {'': [0.04308576245887642, -3.4951465590051226e-17], 'true,true': [-1.2250736823450003e-16, nan], 'true,false': [0.0, nan], 'true': [-1.2250736823450003e-16, 0.0]}, {'': [0.026905743807732977, 2.05596856412066e-17], 'true,false': [0.0, nan], 'true,true': [2.4501473646900006e-16, nan], 'true,false,true': [0.0, nan], 'true': [2.4501473646900006e-16, 0.0]}, {'': [0.01626384593324757, 2.05596856412066e-17], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-3.3689526264487507e-16, nan], 'true': [-3.3689526264487507e-16, 0.0]}, {'': [0.010314593401574014, -2.05596856412066e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-1.5313421029312505e-16, nan], 'true': [-1.5313421029312505e-16, 0.0]}, {'': [0.006991557995307807, 6.1679056923619804e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-3.062684205862501e-17, nan], 'true': [-3.062684205862501e-17, 0.0]}, {'': [0.005024582886685825, 1.02798428206033e-18], 'true,true': [0.005024582886685825, nan], 'true': [0.005024582886685825, nan]}, {'': [0.004519180095159886, 1.02798428206033e-18], 'true,false': [0.0, nan], 'true,true': [3.828355257328126e-17, nan], 'true,false,true': [0.0, nan], 'true': [3.828355257328126e-17, 0.0]}, {'': [0.003503868081191086, 4.11193712824132e-18], 'true,true': [0.003503868081191086, nan], 'true,true,true': [0.003503868081191086, nan], 'true': [0.003503868081191086, nan]}, {'': [0.0033387289742719505, -3.0839528461809902e-18], 'true,true': [0.0033387289742719505, nan], 'true,true,true': [0.0033387289742719505, nan], 'true': [0.0033387289742719505, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- actor(A), director(B).;true;true', '2;true;movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783626;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109179;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.506 seconds
Total inference time: 0.803 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 2, Type: transfer, Time: 01:58:26
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.803, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 1.169, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.604, 'CLL': -0.103399}, 'Learning time': 3.1100000000000003, 'CLL': -0.094637, 'Mapping results': {'Generating mappings time': 0.0691690444946289, 'Total time': 2.6462149620056152, 'Possible mappings': 864, 'Finding best mapping': 0.15389108657836914, 'Generating paths time': 2.409738540649414, 'Knowledge compiling time': 0.01341104507446289}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.990741
   AUC PR    = 0.981818
   CLL	      = -0.113754
   Precision = 0.981818 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990826


Total learning time: 1.821 seconds
Total inference time: 0.867 seconds
AUC ROC: 0.990741


Dataset: uwcse->imdb(workedunder), Fold: 2, Type: scratch, Time: 01:58:29
{'AUC ROC': 0.990741, 'Recall': 1.0, 'Inference time': 0.867, 'F1': 0.990826, 'AUC PR': 0.981818, 'Precision': [0.981818, 0.5], 'Learning time': 1.821, 'CLL': -0.113754}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.0519254207611084
   Generating paths time   = 2.509531259536743
   Generating mappings time   = 0.08979511260986328
   Possible mappings   = 864
   Finding best mapping   = 0.19875407218933105
   Total time   = 2.8500115871429443


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- actor(B), director(A).;true;false
0;true,false;movie(F, A), movie(G, B).;false;false
0;true,true;movie(E, D).;false;false
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true,false;movie(F, B), movie(G, A).;false;true
1;true,true;movie(E, D).;false;false
1;true,false,false;movie(J, A).;false;false
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,true;movie(E, D).;false;false
2;true,false,false;movie(H, A).;false;false
2;true,false,true;movie(G, B).;false;false
2;true,false;movie(G, F).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false,false;movie(I, B).;false;false
3;true,false,true;movie(H, A).;false;false
3;true,false;movie(F, B).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false,false;movie(I, B).;false;false
4;true,false,true;movie(H, F).;false;false
4;true,false;movie(G, B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(B, A) :- actor(B), director(A).;true;false
5;true,true;movie(E, D).;false;false
5;true,false,false;movie(J, I).;false;false
5;true,false,true;movie(G, H), actor(H).;false;false
5;true,false;movie(F, B), movie(G, A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true,false;movie(F, A), movie(F, B).;false;true
6;true,false,false;movie(H, A).;false;false
6;true;movie(D, A).;false;true
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false,false;movie(H, B), movie(I, A).;false;false
7;true,false,true;movie(G, B).;false;false
7;true,false;movie(G, F).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,false;movie(I, A).;false;false
8;true,true;movie(C, D).;false;true
8;true,true,false;movie(C, G), director(G).;false;false
8;true;movie(C, B).;true;true
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,false;genre(A, I), genre(H, I).;false;true
9;true,false,false;movie(J, A).;false;false
9;true,true;movie(C, D), director(D).;true;true
9;true,true,false;movie(F, A).;false;false
9;true,true,true;genre(D, E).;false;false
9;true;movie(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 1,07e-07, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 1,05e-07, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783642;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H), actor(H) )
%   | | | then return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 6,14e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.17422391386361513;  // std dev = 1,351, 203,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109154;  // std dev = 7,74e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.18233450666215562;  // std dev = 2,02e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09238459142000305;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333706;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.12694848335469816;  // std dev = 1,131, 203,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 6,41e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( genre(D, E) )
%   | | | then return 0.10627056607318403;  // std dev = 1,023, 151,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=129 */
%   | | | else return 0.12703707814028936;  // std dev = 0,397, 52,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100952
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.939 seconds
Total inference time: 0.979 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [1.83e-08, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [1.07e-07, 153, 0], 'true,true,true': [1.09e-06, 0, 178]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 153, 0], 'true,true,true': [0.0, 0, 178]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.9e-07, 0, 178], 'false': [1.05e-07, 153, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.77e-07, 0, 178], 'false': [0.0, 153, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [9.13e-09, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.58e-07, 0, 178], 'false': [4.94e-08, 153, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(G, H), actor(H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [1.75e-08, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.63e-07, 0, 178], 'false': [6.14e-08, 153, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [1.351, 25, 178], 'false': [7.74e-08, 153, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.02e-07, 0, 178], 'false': [0.0, 153, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.131, 25, 178], 'false': [6.41e-08, 153, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'genre(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [1.023, 22, 129], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 153, 0], 'true,true,true,false': [0.397, 3, 49]}]]
[{'': [0.10798611953700064, 7.546614023595836e-17], 'true,false': [1.3322676295501878e-17, nan], 'true,true': [6.706246045376226e-15, nan], 'true': [6.706246045376226e-15, 1.3322676295501878e-17]}, {'': [0.07708983427090953, -1.4512719276145838e-17], 'true,true': [-3.193450497798203e-15, nan], 'true,false': [-4.440892098500626e-18, nan], 'true': [-3.193450497798203e-15, -4.440892098500626e-18]}, {'': [0.04814024895239027, 7.256359638072919e-17], 'true,false': [0.0, nan], 'true,true': [1.9559884299013994e-15, nan], 'true,false,true': [0.0, nan], 'true': [1.9559884299013994e-15, 0.0]}, {'': [0.02909957062494659, -4.4989429756052096e-17], 'true,false': [-2.220446049250313e-18, nan], 'true,true': [7.983626244495507e-16, nan], 'true,false,true': [-2.220446049250313e-18, nan], 'true': [7.983626244495507e-16, -2.220446049250313e-18]}, {'': [0.018455059177800756, 1.596399120376042e-17], 'true,false': [3.3306690738754695e-18, nan], 'true,true': [7.185263620045957e-16, nan], 'true,false,true': [3.3306690738754695e-18, nan], 'true': [7.185263620045957e-16, 3.3306690738754695e-18]}, {'': [0.012509423447437237, 2.4671622769447922e-17], 'true,false': [1.2212453270876722e-17, nan], 'true,true': [7.384854276158345e-16, nan], 'true,false,true': [1.2212453270876722e-17, nan], 'true': [7.384854276158345e-16, 1.2212453270876722e-17]}, {'': [0.008990075605248978, 3.918434204559376e-17], 'true': [0.008990075605248978, nan]}, {'': [0.008149775381283036, -2.1769078914218755e-18], 'true,false': [0.0, nan], 'true,true': [2.2952925452924586e-16, nan], 'true,false,true': [0.0, nan], 'true': [2.2952925452924586e-16, 0.0]}, {'': [0.006304792505567835, 2.68485306608698e-17], 'true,true': [0.006304792505567835, nan], 'true': [0.006304792505567835, nan]}, {'': [0.006013115416351562, -1.161017542091667e-17], 'true,true': [0.006013115416351562, nan], 'true,true,true': [0.0069309074746880936, 0.003027207928269986], 'true': [0.006013115416351562, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048763;  // std dev = 1,07e-07, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360618;  // std dev = 1,05e-07, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783642;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926098;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839683;  // std dev = 6,14e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109154;  // std dev = 7,74e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333706;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420264;  // std dev = 6,41e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06419184008202626;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.442 seconds
Total inference time: 0.741 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 3, Type: transfer, Time: 01:58:40
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.741, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.979, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.939, 'CLL': -0.100952}, 'Learning time': 6.381, 'CLL': -0.094637, 'Mapping results': {'Generating mappings time': 0.08979511260986328, 'Total time': 2.8500115871429443, 'Possible mappings': 864, 'Finding best mapping': 0.19875407218933105, 'Generating paths time': 2.509531259536743, 'Knowledge compiling time': 0.0519254207611084}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048796;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839122;  // std dev = 6,32e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360625;  // std dev = 8,43e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783642;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926096;  // std dev = 1,49e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839679;  // std dev = 4,47e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109165;  // std dev = 5,96e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333706;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420267;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06419184008202625;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.888 seconds
Total inference time: 0.75 seconds
AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 3, Type: scratch, Time: 01:58:44
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.75, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 2.888, 'CLL': -0.094637}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.012891530990600586
   Generating paths time   = 2.376701831817627
   Generating mappings time   = 0.0695183277130127
   Possible mappings   = 864
   Finding best mapping   = 0.15631961822509766
   Total time   = 2.615436315536499


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- actor(B), director(A).;true;false
0;true,false;movie(F, A), movie(G, B).;false;false
0;true,true;movie(E, D).;false;false
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true,false;movie(F, B), movie(G, A).;false;true
1;true,true;movie(E, D).;false;false
1;true,false,false;movie(J, A).;false;false
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,true;movie(E, D).;false;false
2;true,false,false;movie(H, A).;false;false
2;true,false,true;movie(G, B).;false;false
2;true,false;movie(G, F).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false,false;movie(I, B).;false;false
3;true,false,true;movie(H, A).;false;false
3;true,false;movie(F, B).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false,false;movie(I, B).;false;false
4;true,false,true;movie(H, F).;false;false
4;true,false;movie(G, B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(B, A) :- actor(B), director(A).;true;false
5;true,true;movie(E, D).;false;false
5;true,false,false;movie(J, I).;false;false
5;true,false,true;movie(G, H), actor(H).;false;false
5;true,false;movie(F, B), movie(G, A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true,false;movie(F, A), movie(F, B).;false;true
6;true,false,false;movie(H, A).;false;false
6;true;movie(D, A).;false;true
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false,false;movie(H, B), movie(I, A).;false;false
7;true,false,true;movie(G, B).;false;false
7;true,false;movie(G, F).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,false;movie(I, A).;false;false
8;true,true;movie(C, D).;false;true
8;true,true,false;movie(C, G), director(G).;false;false
8;true;movie(C, B).;true;true
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,false;genre(A, I), genre(H, I).;false;true
9;true,false,false;movie(J, A).;false;false
9;true,true;movie(C, D), director(D).;true;true
9;true,true,false;movie(F, A).;false;false
9;true,true,true;genre(D, E).;false;false
9;true;movie(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4,21e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.092691276189261;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H), actor(H) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.1862038813171374;  // std dev = 0,553, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.18055522223960294;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09339402505474592;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.135677435432013;  // std dev = 0,462, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( genre(D, E) )
%   | | | then return 0.11916100836471565;  // std dev = 0,451, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101491
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.326 seconds
Total inference time: 1.139 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [4.21e-08, 41, 0], 'true,true,true': [2.23e-07, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.98e-08, 0, 45], 'false': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(G, H), actor(H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [1.83e-08, 41, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.553, 4, 45], 'false': [0.0, 41, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.58e-08, 0, 45], 'false': [1.05e-08, 41, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.462, 4, 45], 'false': [5.27e-09, 41, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'genre(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.451, 4, 45], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,true,true,false': [0.0, 0, 0]}]]
[{'': [0.07496876301541104, 4.332577657073782e-17], 'true,false': [0.0, nan], 'true,true': [1.105288700071267e-15, nan], 'true': [1.105288700071267e-15, 0.0]}, {'': [0.05351918877289897, -2.4370749321040022e-17], 'true,true': [-9.473903143468002e-16, nan], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0]}, {'': [0.03342110014406096, -2.7078610356711136e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan], 'true': [-3.947459643111668e-17, 0.0]}, {'': [0.020202215093805483, -6.769652589177784e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-4.144832625267251e-16, nan], 'true': [-4.144832625267251e-16, 0.0]}, {'': [0.012812322212040247, -1.0831444142684454e-17], 'true,false': [0.0, nan], 'true,true': [1.973729821555834e-17, nan], 'true,false,true': [0.0, nan], 'true': [1.973729821555834e-17, 0.0]}, {'': [0.008684597667842037, 8.12358310701334e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-2.960594732333751e-17, nan], 'true': [-2.960594732333751e-17, 0.0]}, {'': [0.0062413099982688465, -2.7078610356711136e-18], 'true': [0.0062413099982688465, nan]}, {'': [0.005626269977828161, 2.7078610356711136e-18], 'true,false': [0.0, nan], 'true,true': [6.908054375445419e-17, nan], 'true,false,true': [0.0, nan], 'true': [6.908054375445419e-17, 0.0]}, {'': [0.004359446238795896, 6.769652589177784e-19], 'true,true': [0.004359446238795896, nan], 'true': [0.004359446238795896, nan]}, {'': [0.0041547803407331035, -2.7078610356711136e-18], 'true,true': [0.0041547803407331035, nan], 'true,true,true': [0.0041547803407331035, nan], 'true': [0.0041547803407331035, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048768;  // std dev = 4,21e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.092691276189261;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.625 seconds
Total inference time: 0.798 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 4, Type: transfer, Time: 01:58:52
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.798, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 1.139, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.326, 'CLL': -0.101491}, 'Learning time': 2.951, 'CLL': -0.094637, 'Mapping results': {'Generating mappings time': 0.0695183277130127, 'Total time': 2.615436315536499, 'Possible mappings': 864, 'Finding best mapping': 0.15631961822509766, 'Generating paths time': 2.376701831817627, 'Knowledge compiling time': 0.012891530990600586}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.991098
   AUC PR    = 0.982507
   CLL	      = -0.113016
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 1.86 seconds
Total inference time: 0.792 seconds
AUC ROC: 0.991098


Dataset: uwcse->imdb(workedunder), Fold: 4, Type: scratch, Time: 01:58:55
{'AUC ROC': 0.991098, 'Recall': 1.0, 'Inference time': 0.792, 'F1': 0.991176, 'AUC PR': 0.982507, 'Precision': [0.982507, 0.5], 'Learning time': 1.86, 'CLL': -0.113016}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.013689279556274414
   Generating paths time   = 2.289313316345215
   Generating mappings time   = 0.06968903541564941
   Possible mappings   = 864
   Finding best mapping   = 0.15229296684265137
   Total time   = 2.524989604949951


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- actor(B), director(A).;true;false
0;true,false;movie(F, A), movie(G, B).;false;false
0;true,true;movie(E, D).;false;false
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true,false;movie(F, B), movie(G, A).;false;true
1;true,true;movie(E, D).;false;false
1;true,false,false;movie(J, A).;false;false
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,true;movie(E, D).;false;false
2;true,false,false;movie(H, A).;false;false
2;true,false,true;movie(G, B).;false;false
2;true,false;movie(G, F).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false,false;movie(I, B).;false;false
3;true,false,true;movie(H, A).;false;false
3;true,false;movie(F, B).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false,false;movie(I, B).;false;false
4;true,false,true;movie(H, F).;false;false
4;true,false;movie(G, B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(B, A) :- actor(B), director(A).;true;false
5;true,true;movie(E, D).;false;false
5;true,false,false;movie(J, I).;false;false
5;true,false,true;movie(G, H), actor(H).;false;false
5;true,false;movie(F, B), movie(G, A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true,false;movie(F, A), movie(F, B).;false;true
6;true,false,false;movie(H, A).;false;false
6;true;movie(D, A).;false;true
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false,false;movie(H, B), movie(I, A).;false;false
7;true,false,true;movie(G, B).;false;false
7;true,false;movie(G, F).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,false;movie(I, A).;false;false
8;true,true;movie(C, D).;false;true
8;true,true,false;movie(C, G), director(G).;false;false
8;true;movie(C, B).;true;true
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,false;genre(A, I), genre(H, I).;false;true
9;true,false,false;movie(J, A).;false;false
9;true,true;movie(C, D), director(D).;true;true
9;true,true,false;movie(F, A).;false;false
9;true,true,true;genre(D, E).;false;false
9;true;movie(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 3,94e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H), actor(H) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.20348522714636968;  // std dev = 0,285, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1780124605643971;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09486758149476647;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1482108091087561;  // std dev = 0,238, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( genre(D, E) )
%   | | | then return 0.128815435312519;  // std dev = 0,232, 37,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return 0.13515886640091268;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09832
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.249 seconds
Total inference time: 1.271 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [4.21e-08, 44, 0], 'true,true,true': [2.23e-07, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [3.94e-08, 44, 0], 'true,true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [1.49e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [2.11e-08, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.98e-08, 0, 45], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(G, H), actor(H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [2.24e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.285, 1, 45], 'false': [0.0, 44, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [4.71e-08, 0, 45], 'false': [1.05e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.238, 1, 45], 'false': [9.13e-09, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'genre(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.232, 1, 36], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 44, 0], 'true,true,true,false': [5.27e-09, 0, 9]}]]
[{'': [0.021266540642723226, 4.0371746350005693e-17], 'true,false': [0.0, nan], 'true,true': [1.105288700071267e-15, nan], 'true': [1.105288700071267e-15, 0.0]}, {'': [0.015181896531630958, 3.532527805625498e-17], 'true,true': [-9.473903143468002e-16, nan], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0]}, {'': [0.009480631078200644, 5.046468293750712e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan], 'true': [-3.947459643111668e-17, 0.0]}, {'': [0.005730803218362994, 1.0092936587501423e-17], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-4.144832625267251e-16, nan], 'true': [-4.144832625267251e-16, 0.0]}, {'': [0.003634497357172579, -6.308085367188389e-18], 'true,false': [0.0, nan], 'true,true': [1.973729821555834e-17, nan], 'true,false,true': [0.0, nan], 'true': [1.973729821555834e-17, 0.0]}, {'': [0.0024635773866361816, 1.1354553660939102e-17], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-2.960594732333751e-17, nan], 'true': [-2.960594732333751e-17, 0.0]}, {'': [0.0017704850314087769, 0.0], 'true': [0.0017704850314087769, nan]}, {'': [0.0015835814182134113, 2.523234146875356e-18], 'true,false': [0.0, nan], 'true,true': [4.9343245538895844e-17, nan], 'true,false,true': [0.0, nan], 'true': [4.9343245538895844e-17, 0.0]}, {'': [0.0012297247897875708, 1.8924256101565167e-18], 'true,true': [0.0012297247897875708, nan], 'true': [0.0012297247897875708, nan]}, {'': [0.0011715174209541229, -1.261617073437678e-18], 'true,true': [0.0011715174209541229, nan], 'true,true,true': [0.001448608247035158, 3.0839528461809902e-18], 'true': [0.0011715174209541229, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;true;genre(D, E).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839127;  // std dev = 3,94e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19721273866020397;  // std dev = 0,059, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17799391831638386;  // std dev = 0,006, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09433034417062781;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15262775624019875;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.14378638044423867;  // std dev = 0,049, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, D) )
%   | then if ( female(A) )
%   | | then return 0.1339163845634661;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.12619642368050038;  // std dev = 0,048, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098427
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.443 seconds
Total inference time: 0.87 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 5, Type: transfer, Time: 01:59:03
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.87, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 1.271, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.249, 'CLL': -0.09832}, 'Learning time': 2.692, 'CLL': -0.098427, 'Mapping results': {'Generating mappings time': 0.06968903541564941, 'Total time': 2.524989604949951, 'Possible mappings': 864, 'Finding best mapping': 0.15229296684265137, 'Generating paths time': 2.289313316345215, 'Knowledge compiling time': 0.013689279556274414}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1352095945470413;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.11622033579851573;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */


Results
   AUC ROC   = 0.935462
   AUC PR    = 0.889597
   CLL	      = -0.23826
   Precision = 0.877604 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.934813


Total learning time: 1.745 seconds
Total inference time: 0.764 seconds
AUC ROC: 0.935462


Dataset: uwcse->imdb(workedunder), Fold: 5, Type: scratch, Time: 01:59:05
{'AUC ROC': 0.935462, 'Recall': 1.0, 'Inference time': 0.764, 'F1': 0.934813, 'AUC PR': 0.889597, 'Precision': [0.877604, 0.5], 'Learning time': 1.745, 'CLL': -0.23826}


Starting experiment #4 for uwcse->imdb(workedunder)

Start learning from source dataset

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.8055173561521439;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.6359267128772901;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.7217852987358753;  // std dev = 2,788, 66,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   else return -0.14185106490048768;  // std dev = 7,15e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6773408397065112;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return 0.2616318086752123;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5398498420741675;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.36887697659770574;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.6097923471103882;  // std dev = 2,788, 66,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   else return -0.12544463852839152;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.525995951478812;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, B), publication(G, A) )
%   | | then if ( publication(G, H), professor(H) )
%   | | | then return 0.20063817801631484;  // std dev = 1,513, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.4784592498495066;  // std dev = 1,159, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.484364178942388;  // std dev = 2,541, 55,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=47 */
%   | | | else return 0.39278805864729277;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.11231637819360633;  // std dev = 3,94e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3953438564084147;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | then if ( publication(H, A) )
%   | | | then return 0.15061058398187407;  // std dev = 1,463, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.3169945291914893;  // std dev = 2,291, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.42171607678683876;  // std dev = 1,574, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return 0.29667734285962066;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.10159632948783626;  // std dev = 3,49e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3007522660526577;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.29988023514105566;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.11678643152561101;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(H, B), publication(I, A) )
%   | | | then return 0.1868957937446583;  // std dev = 1,922, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.28061864551599575;  // std dev = 2,761, 66,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   else return -0.09269127618926107;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.3771502443425818;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.017915348268658853;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.022849755657418182;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | then if ( publication(F, H), inphase(H, I) )
%   | | | then return 0.21720875943707627;  // std dev = 2,318, 62,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=53 */
%   | | | else return 0.07081952165850716;  // std dev = 1,434, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.2577969626063419;  // std dev = 1,568, 42,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | | else return 0.17715024434258184;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.0851847513883968;  // std dev = 2,58e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.21611985830756097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.1929794464942145;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.209322975008156;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(G, A), publication(H, B) )
%   | | then if ( publication(G, I), professor(I) )
%   | | | then return -0.018220014346045053;  // std dev = 1,473, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.2302282398276811;  // std dev = 1,123, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.17257702657771298;  // std dev = 2,452, 55,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=47 */
%   | | | else return 0.11990004561430127;  // std dev = 1,728, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.07877675473109176;  // std dev = 2,11e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.18174895360733814;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.15899668259017535;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.17677757041431078;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | then if ( publication(H, I), student(I) )
%   | | | then return 0.062080387481804646;  // std dev = 2,516, 38,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=27 */
%   | | | else return 0.23698396402256466;  // std dev = 0,824, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(J, B), publication(K, A) )
%   | | | then return 0.279471328610117;  // std dev = 0,036, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1324993838820994;  // std dev = 2,321, 44,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   else return -0.07324622576333704;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.1562641289616992;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.13368332482133982;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.15250187660327308;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | then if ( publication(H, I), inphase(I, J) )
%   | | | then return 0.09734840283124488;  // std dev = 2,087, 32,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   | | | else return -0.03119639674584964;  // std dev = 1,616, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.15027862934707809;  // std dev = 1,553, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return 0.05978804392593647;  // std dev = 1,720, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.06842697784420271;  // std dev = 1,49e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.13674928925884186;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.11426012988517961;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.13381809045018764;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.09323565859024452;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.22446743853502663;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(H, B), publication(I, A) )
%   | | | then return 0.018622632034078785;  // std dev = 1,891, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.10203036968446698;  // std dev = 2,684, 66,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   else return -0.06419184008202623;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */


Predicates from source: ['advisedby(person,person).', 'inphase(person,prequals).', 'tempadvisedby(person,person).', 'professor(person).', 'student(person).', 'publication(title,person).', 'projectmember(project,person).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.012502193450927734
   Generating paths time   = 2.5532913208007812
   Generating mappings time   = 0.08949828147888184
   Possible mappings   = 864
   Finding best mapping   = 0.20357537269592285
   Total time   = 2.858873128890991


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'inphase(A,B) -> movie(B,A)', 'professor(A) -> director(A)', 'student(A) -> actor(A)', 'projectmember(A,B) -> genre(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,false;movie(F, A), movie(G, B).;false;true
0;true,true;movie(E, D).;false;false
0;true,false,false;movie(J, I).;false;false
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(F, A), movie(G, B).;false;true
1;true,true;movie(E, D).;false;false
1;true,false,false;movie(J, I).;false;false
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true,true;movie(E, D).;false;false
2;true,false,false;movie(I, B).;false;false
2;true,false,true;movie(G, H), director(H).;false;false
2;true,false;movie(F, B), movie(G, A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false,false;movie(I, B).;false;false
3;true,false,true;movie(H, A).;false;false
3;true,false;movie(F, B).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false,false;movie(H, B), movie(I, A).;false;false
4;true,false,true;movie(G, B).;false;false
4;true,false;movie(G, F).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,true;movie(D, A).;false;true
5;true,false,false;movie(J, B).;false;false
5;true,false,true;movie(F, H), movie(I, H).;false;false
5;true,false;movie(F, B).;true;true
5;true,true,false;movie(E, B).;false;false
5;true;genre(B, C).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true,true;movie(E, D).;false;false
6;true,false,false;movie(J, B).;false;false
6;true,false,true;movie(G, I), director(I).;false;false
6;true,false;movie(G, A), movie(H, B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false,false;movie(K, A).;false;false
7;true,false,true;movie(H, I), actor(I).;false;false
7;true,false;movie(H, B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false,false;movie(K, B).;false;false
8;true,false,true;movie(H, I), movie(J, I).;false;false
8;true,false;movie(H, B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false,false;movie(H, B), movie(I, A).;false;false
9;true,false,true;movie(G, B).;false;false
9;true,false;movie(G, F).;true;true
9;true;movie(C, B), movie(C, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783624;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.24920106723689517;  // std dev = 0,337, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2107492095705297;  // std dev = 6,66e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.10671932118263243;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.17782337056633318;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), actor(G) )
%   | | | then return -0.09696441179525307;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15329504070408997;  // std dev = 5,58e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), movie(H, G) )
%   | | | then return -0.08879946670120858;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.13443718280608064;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.08187184535103184;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098399
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.8 seconds
Total inference time: 1.112 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [5.77e-08, 55, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 55, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.03e-07, 0, 56], 'false': [3.49e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(G, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [3.49e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [0.0, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.337, 1, 56], 'false': [1.83e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [6.66e-08, 0, 56], 'false': [1.05e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(F, G), actor(G)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [1.05e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(F, G), movie(H, G)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.58e-08, 0, 56], 'false': [1.29e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [0.0, 55, 0]}]]
[{'': [0.017236072637734554, 6.055761952500853e-17], 'true,true': [-1.2688263138573217e-16, nan], 'true,false': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0]}, {'': [0.012304599783948732, -3.431598439750484e-17], 'true,true': [-1.9032394707859825e-16, nan], 'true,false': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0]}, {'': [0.007683847065712494, 2.2204460492503132e-17], 'true,false': [0.0, nan], 'true,true': [1.9032394707859825e-16, nan], 'true,false,true': [0.0, nan], 'true': [1.9032394707859825e-16, 0.0]}, {'': [0.004644692439814939, 2.2204460492503132e-17], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-3.489272363107635e-16, nan], 'true': [-3.489272363107635e-16, 0.0]}, {'': [0.0029456817402654088, -2.0185873175002845e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-1.2688263138573217e-16, nan], 'true': [-1.2688263138573217e-16, 0.0]}, {'': [0.001996676351744731, 6.0557619525008536e-18], 'true,true': [0.001996676351744731, nan], 'true': [0.001996676351744731, nan]}, {'': [0.0017371594364543803, 2.0185873175002845e-18], 'true,false': [0.0, nan], 'true,true': [7.930164461608261e-17, nan], 'true,false,true': [0.0, nan], 'true': [7.930164461608261e-17, 0.0]}, {'': [0.001301466980231163, 2.0185873175002845e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-3.172065784643304e-17, nan], 'true': [-3.172065784643304e-17, 0.0]}, {'': [0.00101020191717014, 3.0278809762504268e-18], 'true,false': [0.0, nan], 'true,true': [5.551115123125783e-17, nan], 'true,false,true': [0.0, nan], 'true': [5.551115123125783e-17, 0.0]}, {'': [0.0008064688695251768, -3.0278809762504268e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-2.3790493384824782e-17, nan], 'true': [-2.3790493384824782e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- actor(A), director(B).;true;true', '2;true;movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, A), movie(C, B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- actor(A), director(B).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783624;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.24301663564242218;  // std dev = 0,063, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.25517224256948956;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21073261583070926;  // std dev = 0,008, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1061311897540308;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1778113887553376;  // std dev = 0,007, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0964754908405195;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15328607606362127;  // std dev = 0,006, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08838707458426924;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13443026995618895;  // std dev = 0,005, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08151962068926842;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095673
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.455 seconds
Total inference time: 0.772 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 1, Type: transfer, Time: 03:58:33
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.772, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 1.112, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.8, 'CLL': -0.098399}, 'Learning time': 3.255, 'CLL': -0.095673, 'Mapping results': {'Generating mappings time': 0.08949828147888184, 'Total time': 2.858873128890991, 'Possible mappings': 864, 'Finding best mapping': 0.20357537269592285, 'Generating paths time': 2.5532913208007812, 'Knowledge compiling time': 0.012502193450927734}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.6909105759500754;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109546;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5354626841427582;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.4024026492217927;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4175135841583101;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.30700250684980995;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3207118471601494;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.24152182581632603;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.25517224256948956;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1958080954961511;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.20975771563253548;  // std dev = 3,33e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1628100390760043;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1770964977452775;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13816881840032139;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.11920579263429053;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */


Results
   AUC ROC   = 0.920833
   AUC PR    = 0.860033
   CLL	      = -0.244754
   Precision = 0.873995 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932761


Total learning time: 2.258 seconds
Total inference time: 0.785 seconds
AUC ROC: 0.920833


Dataset: uwcse->imdb(workedunder), Fold: 1, Type: scratch, Time: 03:58:36
{'AUC ROC': 0.920833, 'Recall': 1.0, 'Inference time': 0.785, 'F1': 0.932761, 'AUC PR': 0.860033, 'Precision': [0.873995, 0.5], 'Learning time': 2.258, 'CLL': -0.244754}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.013918399810791016
   Generating paths time   = 2.554847240447998
   Generating mappings time   = 0.08989214897155762
   Possible mappings   = 864
   Finding best mapping   = 0.20105624198913574
   Total time   = 2.8597187995910645


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'inphase(A,B) -> movie(B,A)', 'professor(A) -> director(A)', 'student(A) -> actor(A)', 'projectmember(A,B) -> genre(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,false;movie(F, A), movie(G, B).;false;true
0;true,true;movie(E, D).;false;false
0;true,false,false;movie(J, I).;false;false
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(F, A), movie(G, B).;false;true
1;true,true;movie(E, D).;false;false
1;true,false,false;movie(J, I).;false;false
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true,true;movie(E, D).;false;false
2;true,false,false;movie(I, B).;false;false
2;true,false,true;movie(G, H), director(H).;false;false
2;true,false;movie(F, B), movie(G, A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false,false;movie(I, B).;false;false
3;true,false,true;movie(H, A).;false;false
3;true,false;movie(F, B).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false,false;movie(H, B), movie(I, A).;false;false
4;true,false,true;movie(G, B).;false;false
4;true,false;movie(G, F).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,true;movie(D, A).;false;true
5;true,false,false;movie(J, B).;false;false
5;true,false,true;movie(F, H), movie(I, H).;false;false
5;true,false;movie(F, B).;true;true
5;true,true,false;movie(E, B).;false;false
5;true;genre(B, C).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true,true;movie(E, D).;false;false
6;true,false,false;movie(J, B).;false;false
6;true,false,true;movie(G, I), director(I).;false;false
6;true,false;movie(G, A), movie(H, B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false,false;movie(K, A).;false;false
7;true,false,true;movie(H, I), actor(I).;false;false
7;true,false;movie(H, B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false,false;movie(K, B).;false;false
8;true,false,true;movie(H, I), movie(J, I).;false;false
8;true,false;movie(H, B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false,false;movie(H, B), movie(I, A).;false;false
9;true,false,true;movie(G, B).;false;false
9;true,false;movie(G, F).;true;true
9;true;movie(C, B), movie(C, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783626;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.23321372683027117;  // std dev = 0,658, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21342074474735873;  // std dev = 8,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.10520479794461;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1797785296687149;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), actor(G) )
%   | | | then return -0.0957045095025229;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15477541837174053;  // std dev = 2,58e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), movie(H, G) )
%   | | | then return -0.08773614795066574;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.13559104686010143;  // std dev = 4,71e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.08096320139609739;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098655
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.122 seconds
Total inference time: 1.127 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [5.58e-08, 54, 0], 'true,true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 54, 0], 'true,true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.19e-07, 0, 58], 'false': [3.33e-08, 54, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(G, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'false': [3.33e-08, 54, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'false': [0.0, 54, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.658, 4, 58], 'false': [1.83e-08, 54, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [8.94e-08, 0, 58], 'false': [7.45e-09, 54, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(F, G), actor(G)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'false': [7.45e-09, 54, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(F, G), movie(H, G)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.58e-08, 0, 58], 'false': [1.49e-08, 54, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [4.71e-08, 0, 58], 'false': [0.0, 54, 0]}]]
[{'': [0.06035379812695064, 5.756711979537848e-17], 'true,true': [-3.675221047035001e-16, nan], 'true,false': [0.0, nan], 'true': [-3.675221047035001e-16, 0.0]}, {'': [0.04308576245887642, -3.4951465590051226e-17], 'true,true': [-1.2250736823450003e-16, nan], 'true,false': [0.0, nan], 'true': [-1.2250736823450003e-16, 0.0]}, {'': [0.026905743807732977, 2.05596856412066e-17], 'true,false': [0.0, nan], 'true,true': [2.4501473646900006e-16, nan], 'true,false,true': [0.0, nan], 'true': [2.4501473646900006e-16, 0.0]}, {'': [0.01626384593324757, 2.05596856412066e-17], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-3.3689526264487507e-16, nan], 'true': [-3.3689526264487507e-16, 0.0]}, {'': [0.010314593401574014, -2.05596856412066e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-1.5313421029312505e-16, nan], 'true': [-1.5313421029312505e-16, 0.0]}, {'': [0.006991557995307807, 6.1679056923619804e-18], 'true,true': [0.006991557995307807, nan], 'true': [0.006991557995307807, nan]}, {'': [0.006127252564447163, 1.02798428206033e-18], 'true,false': [0.0, nan], 'true,true': [1.3782078926381254e-16, nan], 'true,false,true': [0.0, nan], 'true': [1.3782078926381254e-16, 0.0]}, {'': [0.004580304352257299, 1.02798428206033e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-7.656710514656252e-18, nan], 'true': [-7.656710514656252e-18, 0.0]}, {'': [0.0035495191138486303, 4.11193712824132e-18], 'true,false': [0.0, nan], 'true,true': [1.1485065771984378e-17, nan], 'true,false,true': [0.0, nan], 'true': [1.1485065771984378e-17, 0.0]}, {'': [0.0028303361721049537, -3.0839528461809902e-18], 'true,false': [0.0, nan], 'true,true': [3.828355257328126e-17, nan], 'true,false,true': [0.0, nan], 'true': [3.828355257328126e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- actor(A), director(B).;true;true', '2;true;movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, A), movie(C, B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- actor(A), director(B).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783626;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109179;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.384 seconds
Total inference time: 0.82 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 2, Type: transfer, Time: 03:58:45
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.82, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 1.127, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 2.122, 'CLL': -0.098655}, 'Learning time': 3.506, 'CLL': -0.094637, 'Mapping results': {'Generating mappings time': 0.08989214897155762, 'Total time': 2.8597187995910645, 'Possible mappings': 864, 'Finding best mapping': 0.20105624198913574, 'Generating paths time': 2.554847240447998, 'Knowledge compiling time': 0.013918399810791016}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.990741
   AUC PR    = 0.981818
   CLL	      = -0.113754
   Precision = 0.981818 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990826


Total learning time: 1.495 seconds
Total inference time: 0.649 seconds
AUC ROC: 0.990741


Dataset: uwcse->imdb(workedunder), Fold: 2, Type: scratch, Time: 03:58:48
{'AUC ROC': 0.990741, 'Recall': 1.0, 'Inference time': 0.649, 'F1': 0.990826, 'AUC PR': 0.981818, 'Precision': [0.981818, 0.5], 'Learning time': 1.495, 'CLL': -0.113754}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.011135101318359375
   Generating paths time   = 2.466770887374878
   Generating mappings time   = 0.0916144847869873
   Possible mappings   = 864
   Finding best mapping   = 0.20259523391723633
   Total time   = 2.7721214294433594


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- actor(B), director(A).;true;false
0;true,false;movie(F, A), movie(G, B).;false;true
0;true,true;movie(E, D).;false;false
0;true,false,false;movie(J, I).;false;false
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true,false;movie(F, A), movie(G, B).;false;true
1;true,true;movie(E, D).;false;false
1;true,false,false;movie(J, I).;false;false
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,true;movie(E, D).;false;false
2;true,false,false;movie(I, B).;false;false
2;true,false,true;movie(G, H), actor(H).;false;false
2;true,false;movie(F, B), movie(G, A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false,false;movie(I, B).;false;false
3;true,false,true;movie(H, A).;false;false
3;true,false;movie(F, B).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false,false;movie(H, B), movie(I, A).;false;false
4;true,false,true;movie(G, B).;false;false
4;true,false;movie(G, F).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(B, A) :- actor(B), director(A).;true;false
5;true,false,true;movie(F, H), genre(H, I).;false;false
5;true,false;movie(F, B).;true;true
5;true,false,false;movie(J, B).;false;false
5;true;movie(D, A).;false;true
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true,true;movie(E, D).;false;false
6;true,false,false;movie(J, B).;false;false
6;true,false,true;movie(G, I), actor(I).;false;false
6;true,false;movie(G, A), movie(H, B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false,false;movie(K, A).;false;false
7;true,false,true;movie(H, I), director(I).;false;false
7;true,false;movie(H, B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false,false;movie(K, B).;false;false
8;true,false,true;movie(H, I), genre(I, J).;false;false
8;true,false;movie(H, B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false,false;movie(H, B), movie(I, A).;false;false
9;true,false,true;movie(G, B).;false;false
9;true,false;movie(G, F).;true;true
9;true;movie(C, B), movie(C, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 1,07e-07, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H), actor(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 1,05e-07, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783642;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then return 0.21325635661408415;  // std dev = 1,594, 203,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 6,14e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.21679019428226082;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(F, H), actor(H) )
%   | | | then return -0.10334082425923624;  // std dev = 1,97e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109154;  // std dev = 7,74e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.18223756027315202;  // std dev = 1,91e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.09415002723807396;  // std dev = 7,45e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333706;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.15663278828944277;  // std dev = 1,46e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), genre(G, H) )
%   | | | then return -0.08642139228635282;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.08642139228635282;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 6,41e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13703578659326016;  // std dev = 1,48e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.07983760222622299;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096372
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.744 seconds
Total inference time: 1.037 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [1.83e-08, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [1.07e-07, 153, 0], 'true,true,true': [1.09e-06, 0, 178]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 153, 0], 'true,true,true': [0.0, 0, 178]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(G, H), actor(H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.9e-07, 0, 178], 'false': [1.05e-07, 153, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.77e-07, 0, 178], 'false': [0.0, 153, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [9.13e-09, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.58e-07, 0, 178], 'false': [4.94e-08, 153, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)'}, {'true,true': [1.594, 25, 178], 'false': [6.14e-08, 153, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(F, H), actor(H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [1.97e-08, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 178], 'false': [7.74e-08, 153, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [7.45e-09, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.91e-07, 0, 178], 'false': [0.0, 153, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), genre(G, H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 22, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 3, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.46e-07, 0, 178], 'false': [6.41e-08, 153, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.48e-07, 0, 178], 'false': [0.0, 153, 0]}]]
[{'': [0.10798611953700064, 7.546614023595836e-17], 'true,false': [1.3322676295501878e-17, nan], 'true,true': [6.706246045376226e-15, nan], 'true': [6.706246045376226e-15, 1.3322676295501878e-17]}, {'': [0.07708983427090953, -1.4512719276145838e-17], 'true,true': [-3.193450497798203e-15, nan], 'true,false': [-4.440892098500626e-18, nan], 'true': [-3.193450497798203e-15, -4.440892098500626e-18]}, {'': [0.04814024895239027, 7.256359638072919e-17], 'true,false': [0.0, nan], 'true,true': [1.9559884299013994e-15, nan], 'true,false,true': [0.0, nan], 'true': [1.9559884299013994e-15, 0.0]}, {'': [0.02909957062494659, -4.4989429756052096e-17], 'true,false': [-2.220446049250313e-18, nan], 'true,true': [7.983626244495507e-16, nan], 'true,false,true': [-2.220446049250313e-18, nan], 'true': [7.983626244495507e-16, -2.220446049250313e-18]}, {'': [0.018455059177800756, 1.596399120376042e-17], 'true,false': [3.3306690738754695e-18, nan], 'true,true': [7.185263620045957e-16, nan], 'true,false,true': [3.3306690738754695e-18, nan], 'true': [7.185263620045957e-16, 3.3306690738754695e-18]}, {'': [0.012509423447437237, 2.4671622769447922e-17], 'true': [0.012509423447437237, nan]}, {'': [0.011066835331948095, 3.918434204559376e-17], 'true,false,true': [1.5543122344752193e-17, nan], 'true,false': [1.5543122344752193e-17, nan], 'true,true': [-8.981579525057446e-17, nan], 'true': [-8.981579525057446e-17, 1.5543122344752193e-17]}, {'': [0.008249070311333217, -2.1769078914218755e-18], 'true,false': [2.220446049250313e-18, nan], 'true,true': [2.045804225151974e-16, nan], 'true,false,true': [2.220446049250313e-18, nan], 'true': [2.045804225151974e-16, 2.220446049250313e-18]}, {'': [0.006379316154102433, 2.68485306608698e-17], 'true,false': [-4.440892098500626e-18, nan], 'true,true': [1.197543936674326e-16, nan], 'true,false,true': [-3.784851220313033e-18, 0.0], 'true': [1.197543936674326e-16, -4.440892098500626e-18]}, {'': [0.0050790263574052716, -1.161017542091667e-17], 'true,false': [-8.881784197001253e-18, nan], 'true,true': [1.2224927686883746e-16, nan], 'true,false,true': [-8.881784197001253e-18, nan], 'true': [1.2224927686883746e-16, -8.881784197001253e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true,false;movie(F, G), genre(G, H).;true;true', '8;true;movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048763;  // std dev = 1,07e-07, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360618;  // std dev = 1,05e-07, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783642;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926098;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839683;  // std dev = 6,14e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109154;  // std dev = 7,74e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333706;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E), genre(E, F) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 6,41e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080112;  // std dev = 2,63e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1340070300080112;  // std dev = 2,63e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06419184008202626;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.361 seconds
Total inference time: 0.697 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 3, Type: transfer, Time: 03:58:58
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.697, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 1.037, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 2.744, 'CLL': -0.096372}, 'Learning time': 5.105, 'CLL': -0.094637, 'Mapping results': {'Generating mappings time': 0.0916144847869873, 'Total time': 2.7721214294433594, 'Possible mappings': 864, 'Finding best mapping': 0.20259523391723633, 'Generating paths time': 2.466770887374878, 'Knowledge compiling time': 0.011135101318359375}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048796;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839122;  // std dev = 6,32e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360625;  // std dev = 8,43e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783642;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926096;  // std dev = 1,49e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839679;  // std dev = 4,47e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109165;  // std dev = 5,96e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333706;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420267;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06419184008202625;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.34 seconds
Total inference time: 0.753 seconds
AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 3, Type: scratch, Time: 03:59:02
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.753, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.34, 'CLL': -0.094637}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.012877225875854492
   Generating paths time   = 2.38920259475708
   Generating mappings time   = 0.06972861289978027
   Possible mappings   = 864
   Finding best mapping   = 0.1603240966796875
   Total time   = 2.6321375370025635


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- actor(B), director(A).;true;false
0;true,false;movie(F, A), movie(G, B).;false;true
0;true,true;movie(E, D).;false;false
0;true,false,false;movie(J, I).;false;false
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true,false;movie(F, A), movie(G, B).;false;true
1;true,true;movie(E, D).;false;false
1;true,false,false;movie(J, I).;false;false
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,true;movie(E, D).;false;false
2;true,false,false;movie(I, B).;false;false
2;true,false,true;movie(G, H), actor(H).;false;false
2;true,false;movie(F, B), movie(G, A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false,false;movie(I, B).;false;false
3;true,false,true;movie(H, A).;false;false
3;true,false;movie(F, B).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false,false;movie(H, B), movie(I, A).;false;false
4;true,false,true;movie(G, B).;false;false
4;true,false;movie(G, F).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(B, A) :- actor(B), director(A).;true;false
5;true,false,true;movie(F, H), genre(H, I).;false;false
5;true,false;movie(F, B).;true;true
5;true,false,false;movie(J, B).;false;false
5;true;movie(D, A).;false;true
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true,true;movie(E, D).;false;false
6;true,false,false;movie(J, B).;false;false
6;true,false,true;movie(G, I), actor(I).;false;false
6;true,false;movie(G, A), movie(H, B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false,false;movie(K, A).;false;false
7;true,false,true;movie(H, I), director(I).;false;false
7;true,false;movie(H, B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false,false;movie(K, B).;false;false
8;true,false,true;movie(H, I), genre(I, J).;false;false
8;true,false;movie(H, B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false,false;movie(H, B), movie(I, A).;false;false
9;true,false,true;movie(G, B).;false;false
9;true,false;movie(G, F).;true;true
9;true;movie(C, B), movie(C, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4,21e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H), actor(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.092691276189261;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then return 0.2273879981647642;  // std dev = 0,652, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2144003561179578;  // std dev = 7,30e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(F, H), actor(H) )
%   | | | then return -0.10465764277859313;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1804942387088193;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.09524864844677486;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.15531652914160407;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), genre(G, H) )
%   | | | then return -0.08735091188673094;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13601228498892967;  // std dev = 4,34e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.08063363030435926;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096289
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.643 seconds
Total inference time: 1.139 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [4.21e-08, 41, 0], 'true,true,true': [2.23e-07, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(G, H), actor(H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.98e-08, 0, 45], 'false': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)'}, {'true,true': [0.652, 4, 45], 'false': [1.83e-08, 41, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(F, H), actor(H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [7.3e-08, 0, 45], 'false': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [1.05e-08, 41, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), genre(G, H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [5.27e-09, 41, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [4.34e-08, 0, 45], 'false': [0.0, 41, 0]}]]
[{'': [0.07496876301541104, 4.332577657073782e-17], 'true,false': [0.0, nan], 'true,true': [1.105288700071267e-15, nan], 'true': [1.105288700071267e-15, 0.0]}, {'': [0.05351918877289897, -2.4370749321040022e-17], 'true,true': [-9.473903143468002e-16, nan], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0]}, {'': [0.03342110014406096, -2.7078610356711136e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan], 'true': [-3.947459643111668e-17, 0.0]}, {'': [0.020202215093805483, -6.769652589177784e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-4.144832625267251e-16, nan], 'true': [-4.144832625267251e-16, 0.0]}, {'': [0.012812322212040247, -1.0831444142684454e-17], 'true,false': [0.0, nan], 'true,true': [1.973729821555834e-17, nan], 'true,false,true': [0.0, nan], 'true': [1.973729821555834e-17, 0.0]}, {'': [0.008684597667842037, 8.12358310701334e-18], 'true': [0.008684597667842037, nan]}, {'': [0.007631670636725153, -2.7078610356711136e-18], 'true,false': [0.0, nan], 'true,true': [1.1842378929335003e-16, nan], 'true,false,true': [0.0, nan], 'true': [1.1842378929335003e-16, 0.0]}, {'': [0.005700185409013944, 2.7078610356711136e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-1.4802973661668754e-17, nan], 'true': [-1.4802973661668754e-17, 0.0]}, {'': [0.0044147220526210675, 6.769652589177784e-19], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, 0.0]}, {'': [0.0035186928239850763, -2.7078610356711136e-18], 'true,false': [0.0, nan], 'true,true': [4.194175870806147e-17, nan], 'true,false,true': [0.0, nan], 'true': [4.194175870806147e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048768;  // std dev = 4,21e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.092691276189261;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.301 seconds
Total inference time: 0.855 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 4, Type: transfer, Time: 03:59:10
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.855, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 1.139, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.643, 'CLL': -0.096289}, 'Learning time': 2.944, 'CLL': -0.094637, 'Mapping results': {'Generating mappings time': 0.06972861289978027, 'Total time': 2.6321375370025635, 'Possible mappings': 864, 'Finding best mapping': 0.1603240966796875, 'Generating paths time': 2.38920259475708, 'Knowledge compiling time': 0.012877225875854492}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.991098
   AUC PR    = 0.982507
   CLL	      = -0.113016
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 1.722 seconds
Total inference time: 0.81 seconds
AUC ROC: 0.991098


Dataset: uwcse->imdb(workedunder), Fold: 4, Type: scratch, Time: 03:59:13
{'AUC ROC': 0.991098, 'Recall': 1.0, 'Inference time': 0.81, 'F1': 0.991176, 'AUC PR': 0.982507, 'Precision': [0.982507, 0.5], 'Learning time': 1.722, 'CLL': -0.113016}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.012634992599487305
   Generating paths time   = 2.5297725200653076
   Generating mappings time   = 0.07002735137939453
   Possible mappings   = 864
   Finding best mapping   = 0.15475106239318848
   Total time   = 2.767191171646118


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)', 'student(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(B, A) :- actor(B), director(A).;true;false
0;true,false;movie(F, A), movie(G, B).;false;true
0;true,true;movie(E, D).;false;false
0;true,false,false;movie(J, I).;false;false
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(B, A) :- director(A), actor(B).;true;false
1;true,false;movie(F, A), movie(G, B).;false;true
1;true,true;movie(E, D).;false;false
1;true,false,false;movie(J, I).;false;false
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(B, A) :- director(A), actor(B).;true;false
2;true,true;movie(E, D).;false;false
2;true,false,false;movie(I, B).;false;false
2;true,false,true;movie(G, H), actor(H).;false;false
2;true,false;movie(F, B), movie(G, A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(B, A) :- director(A), actor(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false,false;movie(I, B).;false;false
3;true,false,true;movie(H, A).;false;false
3;true,false;movie(F, B).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(B, A) :- actor(B), director(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false,false;movie(H, B), movie(I, A).;false;false
4;true,false,true;movie(G, B).;false;false
4;true,false;movie(G, F).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(B, A) :- actor(B), director(A).;true;false
5;true,false,true;movie(F, H), genre(H, I).;false;false
5;true,false;movie(F, B).;true;true
5;true,false,false;movie(J, B).;false;false
5;true;movie(D, A).;false;true
6;;workedunder(B, A) :- director(A), actor(B).;true;false
6;true,true;movie(E, D).;false;false
6;true,false,false;movie(J, B).;false;false
6;true,false,true;movie(G, I), actor(I).;false;false
6;true,false;movie(G, A), movie(H, B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(B, A) :- actor(B), director(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false,false;movie(K, A).;false;false
7;true,false,true;movie(H, I), director(I).;false;false
7;true,false;movie(H, B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(B, A) :- director(A), actor(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false,false;movie(K, B).;false;false
8;true,false,true;movie(H, I), genre(I, J).;false;false
8;true,false;movie(H, B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(B, A) :- actor(B), director(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false,false;movie(H, B), movie(I, A).;false;false
9;true,false,true;movie(G, B).;false;false
9;true,false;movie(G, F).;true;true
9;true;movie(C, B), movie(C, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 3,94e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H), actor(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then return 0.24777317748344863;  // std dev = 0,337, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.21098681425125518;  // std dev = 3,65e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(F, H), actor(H) )
%   | | | then return -0.1065832764337205;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1779974596252114;  // std dev = 3,65e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.0968513537369759;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.15342698502307137;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), genre(G, H) )
%   | | | then return -0.08870413241238491;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13454011098182664;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.08179044035098695;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095745
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.191 seconds
Total inference time: 1.07 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [4.21e-08, 44, 0], 'true,true,true': [2.23e-07, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [3.94e-08, 44, 0], 'true,true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(G, H), actor(H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [1.49e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [2.11e-08, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.98e-08, 0, 45], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)'}, {'true,true': [0.337, 1, 45], 'false': [2.24e-08, 44, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(F, H), actor(H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.65e-08, 0, 45], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.65e-08, 0, 45], 'false': [1.05e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), genre(G, H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [9.13e-09, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [0.0, 44, 0]}]]
[{'': [0.021266540642723226, 4.0371746350005693e-17], 'true,false': [0.0, nan], 'true,true': [1.105288700071267e-15, nan], 'true': [1.105288700071267e-15, 0.0]}, {'': [0.015181896531630958, 3.532527805625498e-17], 'true,true': [-9.473903143468002e-16, nan], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0]}, {'': [0.009480631078200644, 5.046468293750712e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan], 'true': [-3.947459643111668e-17, 0.0]}, {'': [0.005730803218362994, 1.0092936587501423e-17], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-4.144832625267251e-16, nan], 'true': [-4.144832625267251e-16, 0.0]}, {'': [0.003634497357172579, -6.308085367188389e-18], 'true,false': [0.0, nan], 'true,true': [1.973729821555834e-17, nan], 'true,false,true': [0.0, nan], 'true': [1.973729821555834e-17, 0.0]}, {'': [0.0024635773866361816, 1.1354553660939102e-17], 'true': [0.0024635773866361816, nan]}, {'': [0.002144746839506109, 0.0], 'true,false': [0.0, nan], 'true,true': [2.960594732333751e-17, nan], 'true,false,true': [0.0, nan], 'true': [2.960594732333751e-17, 0.0]}, {'': [0.0016065142529759816, 2.523234146875356e-18], 'true,false': [0.0, nan], 'true,true': [2.960594732333751e-17, nan], 'true,false,true': [0.0, nan], 'true': [2.960594732333751e-17, 0.0]}, {'': [0.0012468036443168261, 1.8924256101565167e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-9.86864910777917e-18, nan], 'true': [-9.86864910777917e-18, 0.0]}, {'': [0.000995250867106829, -1.261617073437678e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-5.181040781584064e-17, nan], 'true': [-5.181040781584064e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- actor(A), director(B).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839127;  // std dev = 3,94e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.2403741123974075;  // std dev = 0,069, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21096207637484485;  // std dev = 0,008, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10588076134269644;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.177979600498046;  // std dev = 0,007, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0962671779658765;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1534136251599374;  // std dev = 0,006, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08821127488193181;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13452981021325283;  // std dev = 0,006, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.081369400960431;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095784
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.53 seconds
Total inference time: 0.841 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 5, Type: transfer, Time: 03:59:21
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.841, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 1.07, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.191, 'CLL': -0.095745}, 'Learning time': 2.721, 'CLL': -0.095784, 'Mapping results': {'Generating mappings time': 0.07002735137939453, 'Total time': 2.767191171646118, 'Possible mappings': 864, 'Finding best mapping': 0.15475106239318848, 'Generating paths time': 2.5297725200653076, 'Knowledge compiling time': 0.012634992599487305}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1352095945470413;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.11622033579851573;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */


Results
   AUC ROC   = 0.935462
   AUC PR    = 0.889597
   CLL	      = -0.23826
   Precision = 0.877604 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.934813


Total learning time: 1.882 seconds
Total inference time: 0.769 seconds
AUC ROC: 0.935462


Dataset: uwcse->imdb(workedunder), Fold: 5, Type: scratch, Time: 03:59:24
{'AUC ROC': 0.935462, 'Recall': 1.0, 'Inference time': 0.769, 'F1': 0.934813, 'AUC PR': 0.889597, 'Precision': [0.877604, 0.5], 'Learning time': 1.882, 'CLL': -0.23826}


Starting experiment #5 for uwcse->imdb(workedunder)

Start learning from source dataset

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.8055173561521439;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, A) )
%   | | then if ( publication(G, B), tempadvisedby(H, B) )
%   | | | then return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.6706489350995123;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.7225557147605286;  // std dev = 2,630, 59,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=51 */
%   else return -0.14185106490048768;  // std dev = 7,15e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6773408397065112;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, B), publication(G, A) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return 0.2616318086752123;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5334968983169034;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.36887697659770574;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.6106761487351268;  // std dev = 2,788, 66,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   else return -0.12544463852839152;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( projectmember(C, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.6268378652272977;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.28128519962247917;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21461853295581249;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.5367651294102187;  // std dev = 0,976, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.3310529947796655;  // std dev = 2,173, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | | else return 0.49077726794553517;  // std dev = 2,551, 58,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=50 */
%   else return -0.11231637819360633;  // std dev = 3,94e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.4220441684245987;  // std dev = 2,58e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.39268222623468896;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | then if ( publication(I, A) )
%   | | | then return 0.15636331456037425;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.31969331576083543;  // std dev = 2,281, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.4155434511453057;  // std dev = 1,605, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return 0.2990858824489495;  // std dev = 1,724, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.10159632948783626;  // std dev = 3,49e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.32378493702829675;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.29890187106276994;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | then if ( publication(H, I), student(I) )
%   | | | then return 0.1956267004325079;  // std dev = 2,591, 38,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=27 */
%   | | | else return 0.37325670781718207;  // std dev = 0,820, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.313008998485795;  // std dev = 1,605, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return 0.22490208880624124;  // std dev = 1,724, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.09269127618926107;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.25726806773811645;  // std dev = 2,58e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.23412124585385977;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(G, B), publication(H, A) )
%   | | then if ( publication(H, I), professor(I) )
%   | | | then return -0.014434560250705147;  // std dev = 1,467, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.2757375901899309;  // std dev = 1,115, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( tempadvisedby(J, B), publication(K, A) )
%   | | | then return 0.3644403564872458;  // std dev = 0,060, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2006148528509347;  // std dev = 3,021, 69,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=57 */
%   else return -0.0851847513883968;  // std dev = 2,58e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( projectmember(C, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.2696121446494617;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.03707815486693004;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.01596423619365326;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.21123708659042648;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.19685859130587402;  // std dev = 0,975, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | | then return 0.12709986443533233;  // std dev = 2,584, 40,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | | else return 0.18786774698803854;  // std dev = 2,020, 40,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   else return -0.07877675473109176;  // std dev = 2,11e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.1781807879777335;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.15451901566141107;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.17898416635629602;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, A) )
%   | | then if ( publication(F, G), professor(G) )
%   | | | then return 0.007009910000905034;  // std dev = 1,719, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.1923018715065562;  // std dev = 1,123, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.0030645173892516753;  // std dev = 1,367, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.15047987807631658;  // std dev = 2,519, 58,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=50 */
%   else return -0.07324622576333704;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.1535659043198645;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.13028570613817358;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.15417434092509308;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(F, H), professor(H) )
%   | | | then return -0.05077926629502712;  // std dev = 1,463, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.13158222599348973;  // std dev = 1,117, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return -0.046967606827729234;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1249465286690223;  // std dev = 2,683, 66,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   else return -0.06842697784420271;  // std dev = 1,49e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.13464846210470202;  // std dev = 1,29e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.11161126744430903;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.1351227977092461;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(F, H), publication(G, H) )
%   | | | then return -0.11887564754323936;  // std dev = 1,138, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.07875003513255059;  // std dev = 1,431, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( projectmember(I, B) )
%   | | | then return 0.034747134041770183;  // std dev = 1,407, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.09821425756770401;  // std dev = 2,653, 62,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=53 */
%   else return -0.06419184008202623;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */


Predicates from source: ['advisedby(person,person).', 'publication(title,person).', 'projectmember(project,person).', 'tempadvisedby(person,person).', 'professor(person).', 'student(person).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.012671947479248047
   Generating paths time   = 2.5980677604675293
   Generating mappings time   = 0.05126190185546875
   Possible mappings   = 288
   Finding best mapping   = 0.05019664764404297
   Total time   = 2.7122039794921875


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'professor(A) -> director(A)', 'student(A) -> actor(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,true;movie(E, D).;false;false
0;true,false,false;movie(J, I).;false;false
0;true,false,true;movie(G, B).;false;false
0;true,false;movie(F, A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(F, B), movie(G, A).;false;true
1;true,true;movie(E, D).;false;false
1;true,false,false;movie(J, I).;false;false
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true,true;movie(D, A).;false;true
2;true,false,false;movie(H, A).;false;false
2;true,false;movie(F, A), movie(F, B).;false;true
2;true,true,false;movie(E, B).;false;false
2;true;genre(B, C).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false,false;movie(J, B).;false;false
3;true,false,true;movie(I, A).;false;false
3;true,false;movie(H, B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false,false;movie(J, B).;false;false
4;true,false,true;movie(H, I), actor(I).;false;false
4;true,false;movie(H, B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,true;movie(E, D).;false;false
5;true,false,false;movie(K, A).;false;false
5;true,false,true;movie(H, I), director(I).;false;false
5;true,false;movie(G, B), movie(H, A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true,true;movie(D, A).;false;true
6;true,false,false;movie(J, B).;false;false
6;true,false,true;movie(H, G).;false;false
6;true,false;movie(F, A), movie(F, B).;true;true
6;true,true,false;movie(E, B).;false;false
6;true;genre(B, C).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false,false;genre(B, H).;false;false
7;true,false,true;movie(F, G), director(G).;false;false
7;true,false;movie(F, A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false,false;movie(J, I).;false;false
8;true,false,true;movie(F, H), director(H).;false;false
8;true,false;movie(F, A), movie(G, B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false,false;genre(B, I).;false;false
9;true,false,true;movie(F, H), movie(G, H).;false;false
9;true,false;movie(F, A), movie(G, B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.5436527031508471;  // std dev = 0,662, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4203650397509549;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.17892569538695807;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783624;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.3226456053490519;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), actor(G) )
%   | | | then return -0.15413007635644027;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2564913049155226;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.13508830117723888;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.2048862959117417;  // std dev = 0,328, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.17862908357995688;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14345311771872274;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1539054866954335;  // std dev = 5,37e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1267114144730909;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.13491324357641327;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), movie(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11334041544929056;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107955
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.893 seconds
Total inference time: 0.927 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [5.77e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 55, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, A)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.662, 1, 56], 'false': [3.49e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(G, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [3.49e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(F, G), actor(G)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [0.0, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [1.83e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, A)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.328, 1, 56], 'false': [1.05e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [1.05e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.37e-08, 0, 56], 'false': [1.29e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), movie(G, H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [0.0, 55, 0]}]]
[{'': [0.017236072637734554, 6.055761952500853e-17], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-1.2688263138573217e-16, nan], 'true': [-1.2688263138573217e-16, 0.0]}, {'': [0.012304599783948732, -3.431598439750484e-17], 'true,true': [-1.9032394707859825e-16, nan], 'true,false': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0]}, {'': [0.007683847065712494, 2.2204460492503132e-17], 'true,true': [0.007683847065712494, nan], 'true': [0.007683847065712494, nan]}, {'': [0.006190324891486486, 2.2204460492503132e-17], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-9.516197353929913e-17, nan], 'true': [-9.516197353929913e-17, 0.0]}, {'': [0.003918018724924802, -2.0185873175002845e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-1.9032394707859825e-16, nan], 'true': [-1.9032394707859825e-16, 0.0]}, {'': [0.0026428860950551375, 6.0557619525008536e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-1.7446361815538174e-16, nan], 'true': [-1.7446361815538174e-16, 0.0]}, {'': [0.0018856294111857402, 2.0185873175002845e-18], 'true,true': [0.0018856294111857402, nan], 'true': [0.0018856294111857402, nan]}, {'': [0.0017880175087813001, 2.0185873175002845e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-4.3615904538845435e-17, nan], 'true': [-4.3615904538845435e-17, 0.0]}, {'': [0.0013572691081563534, 3.0278809762504268e-18], 'true,false': [0.0, nan], 'true,true': [5.15460690004537e-17, nan], 'true,false,true': [0.0, nan], 'true': [5.15460690004537e-17, 0.0]}, {'': [0.0010622570748846775, -3.0278809762504268e-18], 'true,false,true': [nan, 0.0], 'true,false': [0.0, nan], 'true,true': [-3.172065784643304e-17, nan], 'true': [-3.172065784643304e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- actor(A), director(B).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5315206219270028;  // std dev = 0,124, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4203150077150414;  // std dev = 0,022, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17715029317263212;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783624;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32261469633062695;  // std dev = 0,019, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15278466610065863;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25647201929529084;  // std dev = 0,017, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1340388873805856;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.20087476600016133;  // std dev = 0,062, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.20876422217441998;  // std dev = 3,33e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17861299218764115;  // std dev = 0,017, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1419881676663279;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15389411036971143;  // std dev = 0,015, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12555315113170223;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.134904932627872;  // std dev = 0,014, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11240416756722592;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097393
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.263 seconds
Total inference time: 0.846 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 1, Type: transfer, Time: 06:07:06
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.846, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.927, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.893, 'CLL': -0.107955}, 'Learning time': 3.1559999999999997, 'CLL': -0.097393, 'Mapping results': {'Generating mappings time': 0.05126190185546875, 'Total time': 2.7122039794921875, 'Possible mappings': 288, 'Finding best mapping': 0.05019664764404297, 'Generating paths time': 2.5980677604675293, 'Knowledge compiling time': 0.012671947479248047}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.6909105759500754;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109546;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5354626841427582;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.4024026492217927;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4175135841583101;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.30700250684980995;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3207118471601494;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.24152182581632603;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.25517224256948956;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.1958080954961511;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.20975771563253548;  // std dev = 3,33e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1628100390760043;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1770964977452775;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13816881840032139;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.11920579263429053;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */


Results
   AUC ROC   = 0.920833
   AUC PR    = 0.860033
   CLL	      = -0.244754
   Precision = 0.873995 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932761


Total learning time: 2.088 seconds
Total inference time: 0.741 seconds
AUC ROC: 0.920833


Dataset: uwcse->imdb(workedunder), Fold: 1, Type: scratch, Time: 06:07:09
{'AUC ROC': 0.920833, 'Recall': 1.0, 'Inference time': 0.741, 'F1': 0.932761, 'AUC PR': 0.860033, 'Precision': [0.873995, 0.5], 'Learning time': 2.088, 'CLL': -0.244754}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.013330459594726562
   Generating paths time   = 2.5333633422851562
   Generating mappings time   = 0.04053092002868652
   Possible mappings   = 288
   Finding best mapping   = 0.03769993782043457
   Total time   = 2.624929666519165


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'professor(A) -> director(A)', 'student(A) -> actor(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,true;movie(E, D).;false;false
0;true,false,false;movie(J, I).;false;false
0;true,false,true;movie(G, B).;false;false
0;true,false;movie(F, A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(F, B), movie(G, A).;false;true
1;true,true;movie(E, D).;false;false
1;true,false,false;movie(J, I).;false;false
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true,true;movie(D, A).;false;true
2;true,false,false;movie(H, A).;false;false
2;true,false;movie(F, A), movie(F, B).;false;true
2;true,true,false;movie(E, B).;false;false
2;true;genre(B, C).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false,false;movie(J, B).;false;false
3;true,false,true;movie(I, A).;false;false
3;true,false;movie(H, B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false,false;movie(J, B).;false;false
4;true,false,true;movie(H, I), actor(I).;false;false
4;true,false;movie(H, B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,true;movie(E, D).;false;false
5;true,false,false;movie(K, A).;false;false
5;true,false,true;movie(H, I), director(I).;false;false
5;true,false;movie(G, B), movie(H, A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true,true;movie(D, A).;false;true
6;true,false,false;movie(J, B).;false;false
6;true,false,true;movie(H, G).;false;false
6;true,false;movie(F, A), movie(F, B).;true;true
6;true,true,false;movie(E, B).;false;false
6;true;genre(B, C).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false,false;genre(B, H).;false;false
7;true,false,true;movie(F, G), director(G).;false;false
7;true,false;movie(F, A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false,false;movie(J, I).;false;false
8;true,false,true;movie(F, H), director(H).;false;false
8;true,false;movie(F, A), movie(G, B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false,false;genre(B, I).;false;false
9;true,false,true;movie(F, H), movie(G, H).;false;false
9;true,false;movie(F, A), movie(G, B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.5122901261050006;  // std dev = 1,292, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.42802529516055554;  // std dev = 1,03e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.17436448269598823;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783626;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.32784726189354035;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), actor(G) )
%   | | | then return -0.15066817371058555;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26003531171004296;  // std dev = 9,42e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.13238448199875974;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.19182632699300872;  // std dev = 0,640, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1827767770995905;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1393623264311549;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15703940576083755;  // std dev = 5,58e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12347151560046905;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.13735163299816305;  // std dev = 5,16e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), movie(G, H) )
%   | | | then return -0.11071777715398019;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10829
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.604 seconds
Total inference time: 1.101 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'false': [5.58e-08, 54, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 54, 0], 'true,true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, A)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.292, 4, 58], 'false': [3.33e-08, 54, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(G, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.03e-07, 0, 58], 'false': [3.33e-08, 54, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(F, G), actor(G)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'false': [0.0, 54, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [9.42e-08, 0, 58], 'false': [1.83e-08, 54, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, A)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.64, 4, 58], 'false': [7.45e-09, 54, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.94e-08, 0, 58], 'false': [7.45e-09, 54, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.58e-08, 0, 58], 'false': [1.49e-08, 54, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), movie(G, H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.16e-08, 0, 58], 'false': [0.0, 54, 0]}]]
[{'': [0.06035379812695064, 5.756711979537848e-17], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-3.675221047035001e-16, nan], 'true': [-3.675221047035001e-16, 0.0]}, {'': [0.04308576245887642, -3.4951465590051226e-17], 'true,true': [-1.2250736823450003e-16, nan], 'true,false': [0.0, nan], 'true': [-1.2250736823450003e-16, 0.0]}, {'': [0.026905743807732977, 2.05596856412066e-17], 'true,true': [0.026905743807732977, nan], 'true': [0.026905743807732977, nan]}, {'': [0.021900790612935966, 2.05596856412066e-17], 'true,false': [0.0, nan], 'true,true': [1.8376105235175005e-16, nan], 'true,false,true': [0.0, nan], 'true': [1.8376105235175005e-16, 0.0]}, {'': [0.013819632968222228, -2.05596856412066e-18], 'true,false': [0.0, nan], 'true,true': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [0.0, 0.0]}, {'': [0.009294080208822851, 6.1679056923619804e-18], 'true,false': [0.0, nan], 'true,true': [1.5313421029312505e-16, nan], 'true,false,true': [0.0, nan], 'true': [1.5313421029312505e-16, 0.0]}, {'': [0.00661609345078538, 1.02798428206033e-18], 'true,true': [0.00661609345078538, nan], 'true': [0.00661609345078538, nan]}, {'': [0.006263131027438473, 1.02798428206033e-18], 'true,false': [0.0, nan], 'true,true': [2.6798486801296883e-17, nan], 'true,false,true': [0.0, nan], 'true': [2.6798486801296883e-17, 0.0]}, {'': [0.004749021712978425, 4.11193712824132e-18], 'true,false': [0.0, nan], 'true,true': [5.3596973602593766e-17, nan], 'true,false,true': [0.0, nan], 'true': [5.3596973602593766e-17, 0.0]}, {'': [0.003714078117260682, -3.0839528461809902e-18], 'true,false': [0.0, nan], 'true,true': [4.594026308793751e-17, nan], 'true,false,true': [0.0, nan], 'true': [4.594026308793751e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- actor(A), director(B).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783626;  // std dev = 3,33e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109179;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.805 seconds
Total inference time: 0.829 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 2, Type: transfer, Time: 06:07:17
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.829, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 1.101, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.604, 'CLL': -0.10829}, 'Learning time': 3.409, 'CLL': -0.094637, 'Mapping results': {'Generating mappings time': 0.04053092002868652, 'Total time': 2.624929666519165, 'Possible mappings': 288, 'Finding best mapping': 0.03769993782043457, 'Generating paths time': 2.5333633422851562, 'Knowledge compiling time': 0.013330459594726562}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.990741
   AUC PR    = 0.981818
   CLL	      = -0.113754
   Precision = 0.981818 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990826


Total learning time: 2.123 seconds
Total inference time: 0.762 seconds
AUC ROC: 0.990741


Dataset: uwcse->imdb(workedunder), Fold: 2, Type: scratch, Time: 06:07:20
{'AUC ROC': 0.990741, 'Recall': 1.0, 'Inference time': 0.762, 'F1': 0.990826, 'AUC PR': 0.981818, 'Precision': [0.981818, 0.5], 'Learning time': 2.123, 'CLL': -0.113754}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.01389765739440918
   Generating paths time   = 2.5132744312286377
   Generating mappings time   = 0.04079294204711914
   Possible mappings   = 288
   Finding best mapping   = 0.038434505462646484
   Total time   = 2.606405258178711


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'professor(A) -> director(A)', 'student(A) -> actor(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,true;movie(E, D).;false;false
0;true,false,false;movie(J, I).;false;false
0;true,false,true;movie(G, B).;false;false
0;true,false;movie(F, A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(F, B), movie(G, A).;false;true
1;true,true;movie(E, D).;false;false
1;true,false,false;movie(J, I).;false;false
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true,true;movie(D, A).;false;true
2;true,false,false;movie(H, A).;false;false
2;true,false;movie(F, A), movie(F, B).;false;true
2;true,true,false;movie(E, B).;false;false
2;true;genre(B, C).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false,false;movie(J, B).;false;false
3;true,false,true;movie(I, A).;false;false
3;true,false;movie(H, B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false,false;movie(J, B).;false;false
4;true,false,true;movie(H, I), actor(I).;false;false
4;true,false;movie(H, B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,true;movie(E, D).;false;false
5;true,false,false;movie(K, A).;false;false
5;true,false,true;movie(H, I), director(I).;false;false
5;true,false;movie(G, B), movie(H, A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true,true;movie(D, A).;false;true
6;true,false,false;movie(J, B).;false;false
6;true,false,true;movie(H, G).;false;false
6;true,false;movie(F, A), movie(F, B).;true;true
6;true,true,false;movie(E, B).;false;false
6;true;genre(B, C).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false,false;genre(B, H).;false;false
7;true,false,true;movie(F, G), director(G).;false;false
7;true,false;movie(F, A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false,false;movie(J, I).;false;false
8;true,false,true;movie(F, H), director(H).;false;false
8;true,false;movie(F, A), movie(G, B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false,false;genre(B, I).;false;false
9;true,false,true;movie(F, H), movie(G, H).;false;false
9;true,false;movie(F, A), movie(G, B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048796;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283911;  // std dev = 9,42e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.4899988884304895;  // std dev = 2,373, 143,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 2,02e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( movie(F, A) )
%   | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360625;  // std dev = 8,43e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.42909284662962094;  // std dev = 0,095, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.14056243440297997;  // std dev = 0,173, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 4,47e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.3285917966281375;  // std dev = 0,085, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), actor(G) )
%   | | | then return -0.12456735283600474;  // std dev = 0,156, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926076;  // std dev = 8,16e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2605531446655354;  // std dev = 0,075, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11171067463926906;  // std dev = 0,141, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6,99e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.1832034578039357;  // std dev = 1,211, 143,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(F, G) )
%   | | | then return 0.20566991463751982;  // std dev = 2,11e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, B) )
%   | | | then return -0.07199419191921931;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109166;  // std dev = 5,87e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1835085058390654;  // std dev = 0,077, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11106386011347277;  // std dev = 0,194, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333725;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15759596974323056;  // std dev = 0,069, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.10070935627429259;  // std dev = 0,177, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.13778721995516127;  // std dev = 0,061, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), movie(G, H) )
%   | | | then return -0.12103056203701522;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0881098148495555;  // std dev = 0,154, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098705
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.155 seconds
Total inference time: 1.046 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [1.83e-08, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.09e-06, 0, 178], 'false': [0.0, 153, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [9.42e-08, 153, 0], 'true,true,true': [0.0, 0, 178]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(B, C)', 'true,true': 'movie(D, A)', 'true,false': 'movie(E, A), movie(E, B)', 'true,false,false': 'movie(F, A)'}, {'true,false,false,true': [7.45e-09, 11, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.02e-07, 0, 49], 'true,false,false,false': [0.0, 0, 0], 'true,true,true': [2.373, 14, 129], 'false': [8.43e-08, 153, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(G, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.173, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.095, 0, 178], 'false': [4.47e-08, 153, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(F, G), actor(G)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.156, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.085, 0, 178], 'false': [8.16e-08, 153, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.141, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.075, 0, 178], 'false': [6.99e-08, 153, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(E, A), movie(E, B)', 'true,false,false': 'movie(H, B)', 'true,false,true': 'movie(F, G)', 'true,true': 'movie(D, A)', 'true': 'genre(B, C)'}, {'true,false,false,true': [0.0, 11, 0], 'true,false,true,true': [2.11e-08, 0, 49], 'true,false,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.211, 14, 129], 'false': [5.87e-08, 153, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.194, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.077, 0, 178], 'false': [0.0, 153, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.177, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.069, 0, 178], 'false': [4.94e-08, 153, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), movie(G, H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.154, 22, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.061, 0, 178], 'false': [0.0, 153, 0]}]]
[{'': [0.10798611953700064, -6.966105252550002e-17], 'true,false': [1.3322676295501878e-17, nan], 'true,true': [6.706246045376226e-15, nan], 'true,false,true': [1.3322676295501878e-17, nan], 'true': [6.706246045376226e-15, 1.3322676295501878e-17]}, {'': [0.07708983427090953, 5.805087710458335e-17], 'true,true': [-3.193450497798203e-15, nan], 'true,false': [-4.440892098500626e-18, nan], 'true': [-3.193450497798203e-15, -4.440892098500626e-18]}, {'': [0.04814024895239027, 4.644070168366668e-17], 'true,true': [0.03937187229239288, nan], 'true,false': [8.338001491062401e-16, 5.046468293750712e-18], 'true,false,false': [5.046468293750712e-18, nan], 'true': [0.03937187229239288, 0.06674621777675215]}, {'': [0.035233844563379677, 1.3061447348531253e-17], 'true,false,true': [0.0011929950467741278, nan], 'true,false': [0.0011929950467741278, nan], 'true,true': [5.092935387348151e-05, nan], 'true': [5.092935387348151e-05, 0.0011929950467741278]}, {'': [0.022330525596384054, 4.353815782843751e-17], 'true,false,true': [0.0009680911955329851, nan], 'true,false': [0.0009680911955329851, nan], 'true,true': [4.106273530250859e-05, nan], 'true': [4.106273530250859e-05, 0.0009680911955329851]}, {'': [0.015090488718230264, 3.192798240752084e-17], 'true,false,true': [0.0007988870089820854, nan], 'true,false': [0.0007988870089820854, nan], 'true,true': [3.1190439526103316e-05, nan], 'true': [3.1190439526103316e-05, 0.0007988870089820854]}, {'': [0.01079990716431994, 2.2494714878026048e-17], 'true,false': [9.063045098980869e-18, -6.30808536718839e-19], 'true,false,false': [-6.30808536718839e-19, nan], 'true,false,true': [9.063045098980869e-18, nan], 'true,true': [0.010249000222366805, nan], 'true': [0.010249000222366805, 0.011543187478251197]}, {'': [0.009584871047200714, -2.1769078914218755e-17], 'true,false,true': [0.001502802005265127, nan], 'true,false': [0.001502802005265127, nan], 'true,true': [3.367798260852363e-05, nan], 'true': [3.367798260852363e-05, 0.001502802005265127]}, {'': [0.007383181030999597, 1.596399120376042e-17], 'true,false,true': [0.001258875994256543, nan], 'true,false': [0.001258875994256543, nan], 'true,true': [2.6385315422481698e-05, nan], 'true': [2.6385315422481698e-05, 0.001258875994256543]}, {'': [0.005854939702673836, -1.0884539457109378e-17], 'true,false,true': [2.3129646346357427e-18, 0.0010837755953806401], 'true,false': [0.0010681692268071597, nan], 'true,true': [2.1095515026034617e-05, nan], 'true': [2.1095515026034617e-05, 0.0010681692268071597]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- actor(A), director(B).;true;true', '2;true,false;movie(E, A), movie(E, B).;true;true', '2;true;genre(B, C).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true,false;movie(E, A), movie(E, B).;true;true', '6;true;genre(B, C).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- actor(A), director(B).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true,false;movie(F, H), movie(G, H).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048796;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.1254446385283911;  // std dev = 9,42e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 2,02e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.11231637819360625;  // std dev = 8,43e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,72e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783628;  // std dev = 4,47e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926076;  // std dev = 8,16e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,37e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.0851847513883968;  // std dev = 6,99e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253537;  // std dev = 2,21e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.209757715632536;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07877675473109166;  // std dev = 5,87e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1770964977452782;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333725;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420267;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801092;  // std dev = 8,16e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.06419184008202622;  // std dev = 3,73e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.475 seconds
Total inference time: 0.77 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 3, Type: transfer, Time: 06:07:31
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.77, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 1.046, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.155, 'CLL': -0.098705}, 'Learning time': 5.63, 'CLL': -0.094637, 'Mapping results': {'Generating mappings time': 0.04079294204711914, 'Total time': 2.606405258178711, 'Possible mappings': 288, 'Finding best mapping': 0.038434505462646484, 'Generating paths time': 2.5132744312286377, 'Knowledge compiling time': 0.01389765739440918}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048796;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839122;  // std dev = 6,32e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360625;  // std dev = 8,43e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783642;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926096;  // std dev = 1,49e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839679;  // std dev = 4,47e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109165;  // std dev = 5,96e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333706;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420267;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06419184008202625;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.016 seconds
Total inference time: 0.708 seconds
AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 3, Type: scratch, Time: 06:07:35
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.708, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.016, 'CLL': -0.094637}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.02192401885986328
   Generating paths time   = 2.6035990715026855
   Generating mappings time   = 0.051845550537109375
   Possible mappings   = 288
   Finding best mapping   = 0.048580169677734375
   Total time   = 2.725954532623291


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'professor(A) -> director(A)', 'student(A) -> actor(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,true;movie(E, D).;false;false
0;true,false,false;movie(J, I).;false;false
0;true,false,true;movie(G, B).;false;false
0;true,false;movie(F, A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(F, B), movie(G, A).;false;true
1;true,true;movie(E, D).;false;false
1;true,false,false;movie(J, I).;false;false
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true,true;movie(D, A).;false;true
2;true,false,false;movie(H, A).;false;false
2;true,false;movie(F, A), movie(F, B).;false;true
2;true,true,false;movie(E, B).;false;false
2;true;genre(B, C).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false,false;movie(J, B).;false;false
3;true,false,true;movie(I, A).;false;false
3;true,false;movie(H, B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false,false;movie(J, B).;false;false
4;true,false,true;movie(H, I), actor(I).;false;false
4;true,false;movie(H, B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,true;movie(E, D).;false;false
5;true,false,false;movie(K, A).;false;false
5;true,false,true;movie(H, I), director(I).;false;false
5;true,false;movie(G, B), movie(H, A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true,true;movie(D, A).;false;true
6;true,false,false;movie(J, B).;false;false
6;true,false,true;movie(H, G).;false;false
6;true,false;movie(F, A), movie(F, B).;true;true
6;true,true,false;movie(E, B).;false;false
6;true;genre(B, C).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false,false;genre(B, H).;false;false
7;true,false,true;movie(F, G), director(G).;false;false
7;true,false;movie(F, A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false,false;movie(J, I).;false;false
8;true,false,true;movie(F, H), director(H).;false;false
8;true,false;movie(F, A), movie(G, B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false,false;genre(B, I).;false;false
9;true,false,true;movie(F, H), movie(G, H).;false;false
9;true,false;movie(F, A), movie(G, B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.500861717159354;  // std dev = 1,280, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4308254669676994;  // std dev = 9,42e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.17272534955630986;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.32975142644990335;  // std dev = 1,12e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), actor(G) )
%   | | | then return -0.149419745985079;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26133122335951775;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.1314065665261517;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.18706069470933007;  // std dev = 0,635, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1843043446291419;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.13789019653239634;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15819003632450573;  // std dev = 4,94e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12230135861578278;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.13824455649510894;  // std dev = 3,49e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), movie(G, H) )
%   | | | then return -0.10976766252980197;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10976766252980197;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107631
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.678 seconds
Total inference time: 1.044 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.23e-07, 0, 45], 'false': [4.34e-08, 41, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 41, 0], 'true,true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, A)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.28, 4, 45], 'false': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(G, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [9.42e-08, 0, 45], 'false': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(F, G), actor(G)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.12e-07, 0, 45], 'false': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [1.67e-08, 41, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, A)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.635, 4, 45], 'false': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [1.18e-08, 41, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [4.94e-08, 0, 45], 'false': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), movie(G, H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.49e-08, 0, 45], 'false': [0.0, 41, 0]}]]
[{'': [0.07496876301541104, 4.603363760640893e-17], 'true,false': [0.0, nan], 'true,true': [1.105288700071267e-15, nan], 'true,false,true': [0.0, nan], 'true': [1.105288700071267e-15, 0.0]}, {'': [0.05351918877289897, -2.166288828536891e-17], 'true,true': [-9.473903143468002e-16, nan], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0]}, {'': [0.03342110014406096, -5.415722071342227e-18], 'true,true': [0.03342110014406096, nan], 'true': [0.03342110014406096, nan]}, {'': [0.027309140301051218, -8.12358310701334e-18], 'true,false': [0.0, nan], 'true,true': [1.9737298215558337e-16, nan], 'true,false,true': [0.0, nan], 'true': [1.9737298215558337e-16, 0.0]}, {'': [0.017213203768716944, -1.3539305178355567e-17], 'true,false': [0.0, nan], 'true,true': [2.7632217501781674e-16, nan], 'true,false,true': [0.0, nan], 'true': [2.7632217501781674e-16, 0.0]}, {'': [0.011563404784993936, 6.769652589177784e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-1.973729821555834e-17, nan], 'true': [-1.973729821555834e-17, 0.0]}, {'': [0.008224549682719918, -2.7078610356711136e-18], 'true,true': [0.008224549682719918, nan], 'true': [0.008224549682719918, nan]}, {'': [0.007782456486369313, 3.384826294588892e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-9.868649107779169e-17, nan], 'true': [-9.868649107779169e-17, 0.0]}, {'': [0.005898199114701751, -6.769652589177784e-19], 'true,false': [0.0, nan], 'true,true': [5.427757009278543e-17, nan], 'true,false,true': [0.0, nan], 'true': [5.427757009278543e-17, 0.0]}, {'': [0.004611333170103685, -2.030895776753335e-18], 'true,false': [0.0, nan], 'true,true': [2.7138785046392715e-17, nan], 'true,false,true': [0.0, 0.0], 'true': [2.7138785046392715e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- actor(A), director(B).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true,false;movie(F, H), movie(G, H).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360639;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.308 seconds
Total inference time: 0.835 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 4, Type: transfer, Time: 06:07:43
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.835, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 1.044, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.678, 'CLL': -0.107631}, 'Learning time': 2.9859999999999998, 'CLL': -0.094637, 'Mapping results': {'Generating mappings time': 0.051845550537109375, 'Total time': 2.725954532623291, 'Possible mappings': 288, 'Finding best mapping': 0.048580169677734375, 'Generating paths time': 2.6035990715026855, 'Knowledge compiling time': 0.02192401885986328}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.991098
   AUC PR    = 0.982507
   CLL	      = -0.113016
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 1.361 seconds
Total inference time: 0.632 seconds
AUC ROC: 0.991098


Dataset: uwcse->imdb(workedunder), Fold: 4, Type: scratch, Time: 06:07:46
{'AUC ROC': 0.991098, 'Recall': 1.0, 'Inference time': 0.632, 'F1': 0.991176, 'AUC PR': 0.982507, 'Precision': [0.982507, 0.5], 'Learning time': 1.361, 'CLL': -0.113016}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.04325580596923828
   Generating paths time   = 2.4982528686523438
   Generating mappings time   = 0.05196380615234375
   Possible mappings   = 288
   Finding best mapping   = 0.04845738410949707
   Total time   = 2.641935110092163


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'professor(A) -> director(A)', 'student(A) -> actor(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,true;movie(E, D).;false;false
0;true,false,false;movie(J, I).;false;false
0;true,false,true;movie(G, B).;false;false
0;true,false;movie(F, A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(F, B), movie(G, A).;false;true
1;true,true;movie(E, D).;false;false
1;true,false,false;movie(J, I).;false;false
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true,true;movie(D, A).;false;true
2;true,false,false;movie(H, A).;false;false
2;true,false;movie(F, A), movie(F, B).;false;true
2;true,true,false;movie(E, B).;false;false
2;true;genre(B, C).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true,true;movie(E, D).;false;false
3;true,false,false;movie(J, B).;false;false
3;true,false,true;movie(I, A).;false;false
3;true,false;movie(H, B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,true;movie(E, D).;false;false
4;true,false,false;movie(J, B).;false;false
4;true,false,true;movie(H, I), actor(I).;false;false
4;true,false;movie(H, B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,true;movie(E, D).;false;false
5;true,false,false;movie(K, A).;false;false
5;true,false,true;movie(H, I), director(I).;false;false
5;true,false;movie(G, B), movie(H, A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true,true;movie(D, A).;false;true
6;true,false,false;movie(J, B).;false;false
6;true,false,true;movie(H, G).;false;false
6;true,false;movie(F, A), movie(F, B).;true;true
6;true,true,false;movie(E, B).;false;false
6;true;genre(B, C).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,true;movie(E, D).;false;false
7;true,false,false;genre(B, H).;false;false
7;true,false,true;movie(F, G), director(G).;false;false
7;true,false;movie(F, A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true,true;movie(E, D).;false;false
8;true,false,false;movie(J, I).;false;false
8;true,false,true;movie(F, H), director(H).;false;false
8;true,false;movie(F, A), movie(G, B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,true;movie(E, D).;false;false
9;true,false,false;genre(B, I).;false;false
9;true,false,true;movie(F, H), movie(G, H).;false;false
9;true,false;movie(F, A), movie(G, B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( movie(F, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.3207118471601494;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G), actor(G) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.20975771563253542;  // std dev = 5,37e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(F, G) )
%   | | | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1340070300080108;  // std dev = 4,47e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), movie(G, H) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098039
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.432 seconds
Total inference time: 1.095 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.23e-07, 0, 45], 'false': [4.59e-08, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 44, 0], 'true,true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(B, C)', 'true,true': 'movie(D, A)', 'true,false': 'movie(E, A), movie(E, B)', 'true,false,false': 'movie(F, A)'}, {'true,false,false,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 10], 'true,false,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 35], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(G, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(F, G), actor(G)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [1.67e-08, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(E, A), movie(E, B)', 'true,false,false': 'movie(H, B)', 'true,false,true': 'movie(F, G)', 'true,true': 'movie(D, A)', 'true': 'genre(B, C)'}, {'true,false,false,true': [0.0, 1, 0], 'true,false,true,true': [0.0, 0, 10], 'true,false,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.37e-08, 0, 35], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [1.18e-08, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [5.27e-09, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), movie(G, H)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [4.47e-08, 0, 45], 'false': [0.0, 44, 0]}]]
[{'': [0.021266540642723226, 4.794144879063176e-17], 'true,false': [0.0, nan], 'true,true': [1.105288700071267e-15, nan], 'true,false,true': [0.0, nan], 'true': [1.105288700071267e-15, 0.0]}, {'': [0.015181896531630958, -2.0185873175002847e-17], 'true,true': [-9.473903143468002e-16, nan], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0]}, {'': [0.009480631078200644, 0.0], 'true,true': [-2.0301221021717148e-16, nan], 'true,false': [-1.3322676295501878e-16, 0.0], 'true,false,false': [0.0, nan], 'true': [-2.0301221021717148e-16, 0.03684300341868225]}, {'': [0.005730803218362994, -7.569702440626067e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-4.144832625267251e-16, nan], 'true': [-4.144832625267251e-16, 0.0]}, {'': [0.0036344973571725593, -1.6401021954689813e-17], 'true,false': [0.0, nan], 'true,true': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [0.0, 0.0]}, {'': [0.0024635773866361816, 6.308085367188389e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-2.960594732333751e-17, nan], 'true': [-2.960594732333751e-17, 0.0]}, {'': [0.0017704850314087769, -1.261617073437678e-18], 'true,false': [-2.7755575615628914e-17, 0.0], 'true,false,false': [0.0, nan], 'true,false,true': [-2.7755575615628914e-17, nan], 'true,true': [8.247371040072592e-17, nan], 'true': [8.247371040072592e-17, 0.006880342197356912]}, {'': [0.0013328055598378111, 3.1540426835941946e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-8.388351741612294e-17, nan], 'true': [-8.388351741612294e-17, 0.0]}, {'': [0.0010402855577152684, 6.30808536718839e-19], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan], 'true': [-3.947459643111668e-17, 0.0]}, {'': [0.0008354090948599358, -2.523234146875356e-18], 'true,false': [0.0, nan], 'true,true': [4.4408920985006264e-17, nan], 'true,false,true': [0.0, nan], 'true': [4.4408920985006264e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B), movie(C, A).;true;true', '2;;workedunder(A, B) :- actor(A), director(B).;true;true', '2;true,false;movie(E, A), movie(E, B).;true;true', '2;true;genre(B, C).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true,false;movie(E, A), movie(E, B).;true;true', '6;true;genre(B, C).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- actor(A), director(B).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1254446385283915;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360638;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783635;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then return 0.20975771563253542;  // std dev = 5,37e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109176;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1340070300080108;  // std dev = 4,47e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097791
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.45 seconds
Total inference time: 0.798 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: uwcse->imdb(workedunder), Fold: 5, Type: transfer, Time: 06:07:54
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.798, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 1.095, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.432, 'CLL': -0.098039}, 'Learning time': 2.8819999999999997, 'CLL': -0.097791, 'Mapping results': {'Generating mappings time': 0.05196380615234375, 'Total time': 2.641935110092163, 'Possible mappings': 288, 'Finding best mapping': 0.04845738410949707, 'Generating paths time': 2.4982528686523438, 'Knowledge compiling time': 0.04325580596923828}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1352095945470413;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.11622033579851573;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */


Results
   AUC ROC   = 0.935462
   AUC PR    = 0.889597
   CLL	      = -0.23826
   Precision = 0.877604 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.934813


Total learning time: 1.66 seconds
Total inference time: 0.61 seconds
AUC ROC: 0.935462


Dataset: uwcse->imdb(workedunder), Fold: 5, Type: scratch, Time: 06:07:56
{'AUC ROC': 0.935462, 'Recall': 1.0, 'Inference time': 0.61, 'F1': 0.934813, 'AUC PR': 0.889597, 'Precision': [0.877604, 0.5], 'Learning time': 1.66, 'CLL': -0.23826}


