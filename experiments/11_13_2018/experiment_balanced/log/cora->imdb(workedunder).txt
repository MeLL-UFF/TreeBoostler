Starting experiment #1 for cora->imdb(workedunder)

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.733148935099512;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.4402384873383177;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.2800239350995111;  // std dev = 3,951, 64,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   | else return 0.41059088866235743;  // std dev = 0,497, 4.996,000 (wgt'ed) examples reached here.  /* #neg=2.236 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordvenue(B, J) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.16460054800273813;  // std dev = 0,461, 62,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return 0.1368374596896763;  // std dev = 0,448, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else return 0.13907136696533606;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6189976143448207;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.377810486779606;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.24240995600057916;  // std dev = 3,951, 64,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   | else return 0.3529398479501201;  // std dev = 0,497, 4.996,000 (wgt'ed) examples reached here.  /* #neg=2.236 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.5035746342739031;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15681746674870153;  // std dev = 0,034, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.10812648491655566;  // std dev = 0,441, 56,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return 0.11935060438598011;  // std dev = 0,448, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else return 0.12128505347454718;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.29068602501031504;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.1330336894389874;  // std dev = 0,026, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.1657315767359845;  // std dev = 1,485, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.115724613384539;  // std dev = 3,254, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.10415067949856827;  // std dev = 0,449, 538,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=151 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.5392111747016414;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3813164378595361;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.24833782562750512;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.15034624023658572;  // std dev = 3,951, 64,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   | else return 0.23070114811791703;  // std dev = 0,497, 4.996,000 (wgt'ed) examples reached here.  /* #neg=2.236 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then if ( author(K, I), venue(K, B) )
%   | | | then return 0.20462317959293452;  // std dev = 0,950, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.1697574551576997;  // std dev = 0,060, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.09278436973154325;  // std dev = 0,447, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else return 0.08849817307624634;  // std dev = 0,449, 538,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=151 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.3111624188540821;  // std dev = 0,328, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1912745552679741;  // std dev = 4,113, 73,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.11193190065623179;  // std dev = 3,868, 58,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=25 */
%   | else return 0.17843903088860388;  // std dev = 0,497, 4.996,000 (wgt'ed) examples reached here.  /* #neg=2.236 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.02989874319953166;  // std dev = 0,350, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.07786987435545441;  // std dev = 0,447, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, B) )
%   | | | then return -0.03901362028959663;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.08522880395282734;  // std dev = 3,368, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return 0.07456030039021355;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13588457843368748;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.13287642723978163;  // std dev = 0,034, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.07813529679055284;  // std dev = 0,452, 62,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | else return 0.06193157597971752;  // std dev = 0,449, 538,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10257259474473063;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.43822136018110625;  // std dev = 1,159, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.20279011459945098;  // std dev = 0,086, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.04119987542648866;  // std dev = 0,432, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | else return 0.05034176687117196;  // std dev = 0,449, 537,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=151 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07710989921852034;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.32301747315965207;  // std dev = 1,147, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.18881391738092623;  // std dev = 0,099, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.12008881187487022;  // std dev = 0,032, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0472355614010096;  // std dev = 3,229, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.04196936270163747;  // std dev = 0,449, 538,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=151 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05787644621694572;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else return 0.03359852625027097;  // std dev = 0,446, 606,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=170 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04342693784171338;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else return 0.027319820491225635;  // std dev = 0,446, 606,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=170 */


Predicates from source: ['samevenue(venue,venue).', 'haswordvenue(venue,word).', 'venue(class,venue).', 'author(class,author).', 'haswordauthor(author,word).', 'samebib(class,class).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.3867189884185791
   Generating paths time   = 2.3282148838043213
   Generating mappings time   = 0.054482221603393555
   Possible mappings   = 126
   Finding best mapping   = 0.02110576629638672
   Total time   = 2.7905282974243164


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;movie(H, A), movie(H, I).;true;true
0;false,false;movie(K, B), movie(K, L).;false;false
0;false,true;movie(J, I), movie(J, B).;false;false
0;true,true,false;genre(E, G), genre(B, G).;false;false
0;true;movie(D, A), movie(D, E).;true;false
0;true,true;movie(C, F).;false;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;movie(H, A), movie(H, I).;true;true
1;false,false;movie(L, B), movie(L, M).;false;false
1;false,true;genre(I, J), genre(B, J).;true;false
1;false,true,true;genre(A, K).;false;false
1;true,true,false;genre(E, G), genre(B, G).;false;false
1;true;movie(D, A), movie(D, E).;true;false
1;true,true;movie(C, F).;false;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false;movie(D, A), movie(D, E).;true;false
2;false,true;movie(F, E), movie(F, B).;false;true
2;false,true,false;genre(E, G), genre(B, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;movie(H, A), movie(H, I).;true;false
3;false,true;genre(I, J), genre(A, J).;true;false
3;true,true,true;genre(E, F), genre(A, F).;false;false
3;false,true,true;genre(I, K), genre(B, K).;false;false
3;true,true,false;genre(E, G), genre(B, G).;false;false
3;true;movie(D, A), movie(D, E).;true;false
3;true,true;movie(C, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;movie(H, A), movie(H, I).;true;true
4;false,false;movie(K, B), movie(K, L).;true;false
4;false,true;genre(I, J), genre(A, J).;false;false
4;false,false,true;genre(L, M), genre(B, M).;false;false
4;true,true,false;genre(E, G), genre(A, G).;false;false
4;true;movie(D, A), movie(D, E).;true;false
4;true,true;movie(C, F).;false;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false;movie(D, A), movie(D, E).;true;false
5;false,true;movie(F, E), movie(F, B).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false;movie(D, B), movie(D, E).;true;false
6;false,true,true;genre(B, G).;false;false
6;false,true;genre(E, F), genre(A, F).;true;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false;movie(D, A), movie(D, E).;true;false
7;false,true,true;genre(A, G).;false;false
7;false,true;genre(E, F), genre(B, F).;true;true
7;false,true,false;movie(H, E), movie(H, B).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.6697431379980635;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then if ( movie(I, H), movie(I, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.56748050185077;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then if ( genre(H, I), genre(B, I) )
%   | | then if ( genre(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839127;  // std dev = 3,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.44868889566071973;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then if ( genre(E, F), genre(A, F) )
%   | | | then return -0.47150903026098717;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3520203815037193;  // std dev = 3,144, 68,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then if ( genre(H, I), genre(A, I) )
%   | | then if ( genre(H, J), genre(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783634;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.2553111516153758;  // std dev = 3,204, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then if ( genre(H, I), genre(A, I) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1936615181545967;  // std dev = 3,203, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.0851847513883968;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14920557854615552;  // std dev = 3,204, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11676749481966493;  // std dev = 3,205, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07324622576333704;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09264541999406388;  // std dev = 3,206, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0743557088906288;  // std dev = 3,207, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else return -0.06419184008202623;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */


Results
   AUC ROC   = 0.897239
   AUC PR    = 0.829517
   CLL	      = -0.324693
   Precision = 0.804938 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.891929


Total learning time: 1.813 seconds
Total inference time: 1.163 seconds
AUC ROC: 0.897239


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'true': 'movie(D, A), movie(D, E)', 'false,true': 'movie(I, H), movie(I, B)', 'true,true': 'movie(C, F)'}, {'false,true,false': [2.58e-08, 29, 0], 'true,true,true': [3.248, 13, 56], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 14, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'false,true': 'genre(H, I), genre(B, I)', 'false,true,true': 'genre(A, J)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, F)'}, {'false,true,false': [3.49e-08, 42, 0], 'true,true,true': [3.248, 13, 56], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'false,true,true': [1.18e-08, 14, 0], 'false,true,false,true': [0.0, 1, 0], 'true': [3.248, 13, 56], 'false,true,false,false': [0.0, 28, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'false,true': 'genre(H, I), genre(A, I)', 'true,true,true': 'genre(E, F), genre(A, F)', 'false,true,true': 'genre(H, J), genre(B, J)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, E)'}, {'true,true,true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.05e-08, 41, 0], 'true,true,true,false': [3.144, 12, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'true': 'movie(D, A), movie(D, E)', 'false,true': 'genre(H, I), genre(A, I)', 'true,true': 'movie(C, F)'}, {'false,true,false': [0.0, 41, 0], 'true,true,true': [3.204, 13, 56], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)'}, {'false,true,true': [8.33e-09, 14, 0], 'false,true,false': [1.97e-08, 29, 0], 'true': [3.203, 13, 56], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(E, F), genre(A, F)'}, {'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.204, 13, 56], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(H, E), movie(H, B)'}, {'true': [3.205, 13, 56], 'false,true,false,false': [5.27e-09, 28, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [3.73e-09, 14, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [7.45e-09, 43, 0], 'true': [3.206, 13, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 43, 0], 'true': [3.207, 13, 56]}]]
[{'': [0.1529090527200164, 4.6474452193611206e-17], 'false': [4.6474452193611206e-17, nan], 'true': [0.1529090527200164, nan], 'false,true': [-1.1895246692412391e-17, 2.2970131543968756e-17], 'true,true': [0.1529090527200164, nan]}, {'': [0.15290905272001531, 3.0982968129074136e-17], 'false': [3.0982968129074136e-17, nan], 'false,true': [0.0, 2.9077269692563625e-17], 'false,true,true': [nan, 0.0], 'true': [0.15290905272001531, nan], 'true,true': [0.15290905272001531, nan]}, {'': [0.15290905272001734, 2.581914010756178e-18], 'false': [2.581914010756178e-18, nan], 'false,true': [9.912705577010326e-18, -7.656710514656252e-18], 'false,true,false': [0.0, -5.9476233462061954e-18]}, {'': [0.15290905272001654, 7.745742032268534e-18], 'false': [7.745742032268534e-18, nan], 'false,true': [0.0, 2.7078610356711136e-18], 'true,true,true': [0.0, 0.14532871972318312], 'false,true,true': [nan, 0.0], 'true': [0.15290905272001654, nan], 'true,true': [0.15290905272001654, nan]}, {'': [0.14874774606279156, -5.163828021512356e-18], 'false': [-5.163828021512356e-18, nan], 'true': [0.14874774606279156, nan], 'false,true': [0.0, -5.415722071342227e-18], 'true,true': [0.14874774606279156, nan]}, {'': [0.14872749566734106, 1.1618613048402802e-17], 'false': [1.1618613048402802e-17, nan], 'false,true': [4.956352788505163e-18, 1.3399243400648442e-17]}, {'': [0.14878649571525362, -2.581914010756178e-18], 'false': [-2.581914010756178e-18, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -2.7078610356711136e-18]}, {'': [0.14887385923677235, 3.2273925134452225e-18], 'false': [3.2273925134452225e-18, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 3.3042351923367752e-18], 'false,true,false': [9.912705577010326e-19, 9.912705577010326e-19]}, {'': [0.14896584690102435, 1.290957005378089e-18]}, {'': [0.14905237225978327, -1.9364355080671335e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false;movie(I, H), movie(I, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;genre(H, I), genre(B, I).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;movie(F, E), movie(F, B).;true;true', '2;false,false;genre(E, G), genre(B, G).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;genre(H, I), genre(A, I).;true;true', '3;true;genre(E, F), genre(A, F).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;genre(H, I), genre(A, I).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;false;movie(F, E), movie(F, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;genre(E, F), genre(A, F).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false;genre(E, F), genre(B, F).;true;true', '7;false,false;movie(H, E), movie(H, B).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(F, G), genre(A, G) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( movie(F, D), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06842697784420272;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801087;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06419184008202618;  // std dev = 9,31e-10, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 9,31e-10, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06419184008202619;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.995399
   AUC PR    = 0.990881
   CLL	      = -0.111607
   Precision = 0.981928 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990881


Total learning time: 3.43 seconds
Total inference time: 1.385 seconds
AUC ROC: 0.995399


Refined model AUC ROC: 0.995399


Dataset: cora->imdb(workedunder), Fold: 1, Type: transfer, Time: 00:05:22
{'Mapping results': {'Generating paths time': 2.3282148838043213, 'Finding best mapping': 0.02110576629638672, 'Possible mappings': 126, 'Generating mappings time': 0.054482221603393555, 'Knowledge compiling time': 0.3867189884185791, 'Total time': 2.7905282974243164}, 'AUC ROC': 0.995399, 'F1': 0.990881, 'Inference time': 1.385, 'Recall': 1.0, 'CLL': -0.111607, 'Learning time': 5.243, 'Parameter Learning results': {'AUC ROC': 0.897239, 'F1': 0.891929, 'Inference time': 1.163, 'Recall': 1.0, 'CLL': -0.324693, 'Learning time': 1.813, 'AUC PR': 0.829517, 'Precision': [0.804938, 0.5]}, 'AUC PR': 0.990881, 'Precision': [0.981928, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.6909105759500754;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109546;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5354626841427582;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.4024026492217927;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4175135841583101;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.30700250684980995;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3207118471601494;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.24152182581632603;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.25517224256948956;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1958080954961511;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.20975771563253548;  // std dev = 3,33e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1628100390760043;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1770964977452775;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13816881840032139;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.11920579263429053;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */


Results
   AUC ROC   = 0.920833
   AUC PR    = 0.860033
   CLL	      = -0.244754
   Precision = 0.873995 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932761


Total learning time: 2.026 seconds
Total inference time: 0.827 seconds
AUC ROC: 0.920833


Dataset: cora->imdb(workedunder), Fold: 1, Type: scratch, Time: 00:05:25
{'AUC ROC': 0.920833, 'F1': 0.932761, 'Inference time': 0.827, 'Recall': 1.0, 'CLL': -0.244754, 'Learning time': 2.026, 'AUC PR': 0.860033, 'Precision': [0.873995, 0.5]}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.36562371253967285
   Generating paths time   = 2.2217936515808105
   Generating mappings time   = 0.054482460021972656
   Possible mappings   = 126
   Finding best mapping   = 0.02124810218811035
   Total time   = 2.6631548404693604


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> movie(A,B)', 'author(A,B) -> movie(A,B)', 'haswordvenue(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
0;false;genre(A, H).;true;true
0;false,false;genre(B, K).;false;false
0;false,true;genre(B, J).;false;false
0;true;genre(A, D).;true;false
0;true,true;movie(G, E), movie(G, B).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;false;genre(A, H).;true;true
1;false,false;genre(B, L).;false;false
1;false,true;movie(J, I), movie(J, B).;true;false
1;false,true,true;movie(K, A).;false;false
1;true;genre(A, D).;true;false
1;true,true;movie(G, E), movie(G, B).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
2;false;genre(A, D).;true;false
2;false,true;genre(B, F).;false;true
2;false,true,false;movie(G, E), movie(G, B).;false;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;false;genre(A, H).;true;false
3;false,true;movie(J, I), movie(J, A).;true;false
3;false,true,true;movie(K, I), movie(K, B).;false;false
3;true,true,false;movie(G, E), movie(G, B).;false;false
3;true;genre(A, D).;true;false
3;true,true;movie(F, E), movie(F, A).;false;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;false;genre(A, H).;true;true
4;false,false;genre(B, K).;true;false
4;false,true;movie(J, I), movie(J, A).;false;false
4;false,false,true;movie(M, L), movie(M, B).;false;false
4;true;genre(A, D).;true;false
4;true,true;movie(G, E), movie(G, A).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false;genre(A, D).;true;false
5;false,true;genre(B, F).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
6;false;genre(B, D).;true;false
6;false,true,true;movie(G, B).;false;false
6;false,true;movie(F, E), movie(F, A).;true;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
7;false;genre(A, D).;true;false
7;false,true,true;movie(G, A).;false;false
7;false,true;movie(F, E), movie(F, B).;true;true
7;false,true,false;genre(B, H).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, F) )
%   | | then return 0.7936328060672545;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.14185106490048768;  // std dev = 5,37e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H) )
%   | | then return 0.6677924726556769;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, G), movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.23424963798833046;  // std dev = 3,861, 113,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then if ( movie(G, F), movie(G, B) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.19100803520303394;  // std dev = 3,714, 113,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G) )
%   | | then if ( movie(H, I), movie(H, B) )
%   | | | then return 0.41382669217582624;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1621879381994801;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.10789281364635805;  // std dev = 3,085, 113,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.28790757594539135;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.15071322602880638;  // std dev = 0,128, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.0685105149922809;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.06213237467115254;  // std dev = 2,720, 113,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.04883125115488123;  // std dev = 2,708, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.040893842934407856;  // std dev = 2,695, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */


Results
   AUC ROC   = 0.885679
   AUC PR    = 0.87883
   CLL	      = -0.41212
   Precision = 0.923345 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.86743


Total learning time: 1.562 seconds
Total inference time: 1.14 seconds
AUC ROC: 0.885679


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D)', 'false,false': 'genre(B, F)', 'false,true': 'genre(B, E)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'true': [0.0, 0, 0], 'false,false,true': [1.934, 4, 58], 'false,false,false': [5.37e-08, 51, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D)', 'false,true,true': 'movie(G, A)', 'false,true': 'movie(E, F), movie(E, B)', 'false,false': 'genre(B, H)'}, {'false,false,false': [0.0, 51, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.934, 4, 58], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D)', 'false,true': 'genre(B, E)', 'false,true,false': 'movie(F, G), movie(F, B)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,true': [2.63e-09, 3, 0], 'true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false': [3.861, 55, 58]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D)', 'false,true,true': 'movie(G, F), movie(G, B)', 'false,true': 'movie(E, F), movie(E, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'true': [0.0, 0, 0], 'false,false': [3.714, 55, 58], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D)', 'false,false': 'genre(B, G)', 'false,false,true': 'movie(H, I), movie(H, B)', 'false,true': 'movie(E, F), movie(E, A)'}, {'false,false,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 3, 0], 'false,false,false': [0.0, 51, 0], 'true': [0.0, 0, 0], 'false,false,true,true': [1.934, 4, 58]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D)', 'false,true': 'genre(B, E)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'true': [0.0, 0, 0], 'false,false': [3.085, 55, 58]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(E, F), movie(E, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [1.934, 4, 58], 'true': [0.0, 0, 0], 'false,false': [0.128, 54, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D)', 'false,true,true': 'movie(G, A)', 'false,true': 'movie(E, F), movie(E, B)'}, {'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'true': [0.0, 0, 0], 'false,false': [2.72, 55, 58], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'false': [2.708, 58, 58], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'false': [2.695, 58, 58], 'true': [0.0, 0, 0]}]]
[{'': [nan, 0.2499999999999999], 'false': [0.0, 0.24982379199624066], 'false,false': [0.06035379812695064, 5.659960517696876e-17], 'false,true': [nan, 0.0]}, {'': [nan, 0.1888161563373026], 'false': [0.0, 0.18893010587477765], 'false,false': [0.06035379812695207, -3.2653618371328135e-17], 'false,true,true': [0.0, nan], 'false,true': [0.0, nan]}, {'': [nan, 0.13152735711031596], 'false': [2.3129646346357427e-18, 0.1319129923760627], 'false,true': [nan, 2.3129646346357427e-18], 'false,true,false': [2.3129646346357427e-18, nan]}, {'': [nan, 0.12108807404509131], 'false': [-1.1564823173178713e-18, 0.1220885607891894], 'false,true,true': [-1.1564823173178713e-18, nan], 'false,true': [-1.1564823173178713e-18, nan]}, {'': [nan, 0.113826748153107], 'false': [2.3129646346357427e-18, 0.11527666342786856], 'false,false': [0.06035379812695095, -6.966105252550002e-17], 'false,false,true': [0.06035379812695095, nan], 'false,true': [2.3129646346357427e-18, nan]}, {'': [nan, 0.0829709939948807], 'false': [0.0, 0.0842096530714464], 'false,true': [nan, 0.0]}, {'': [nan, 0.08026806023028729], 'false': [0.060353798126950985, 0.0003044032883980713], 'false,true,true': [0.060353798126950985, nan], 'false,true': [0.060353798126950985, nan]}, {'': [nan, 0.0642144242787791], 'false': [-5.782411586589357e-19, 0.06547782946972865], 'false,true,true': [-5.782411586589357e-19, nan], 'false,true': [-5.782411586589357e-19, nan]}, {'': [nan, 0.06323358662530149]}, {'': [nan, 0.06259510788188456]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D).;true;true', '0;false;genre(B, F).;true;true', '1;;workedunder(A, B) :- genre(A, D).;true;true', '1;false;genre(B, H).;true;true', '2;;workedunder(A, B) :- genre(A, D).;true;true', '3;;workedunder(A, B) :- genre(A, D).;true;true', '4;;workedunder(A, B) :- genre(A, D).;true;true', '4;false;genre(B, G).;true;true', '5;;workedunder(A, B) :- genre(A, D).;true;true', '6;;workedunder(A, B) :- genre(B, D).;true;true', '7;;workedunder(A, B) :- genre(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.11231637819360632;  // std dev = 3,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.10159632948783626;  // std dev = 2,58e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 1,83e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.999157
   AUC PR    = 0.999106
   CLL	      = -0.176554
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 1.947 seconds
Total inference time: 0.835 seconds
AUC ROC: 0.999157


Refined model AUC ROC: 0.999157


Dataset: cora->imdb(workedunder), Fold: 2, Type: transfer, Time: 00:05:34
{'Mapping results': {'Generating paths time': 2.2217936515808105, 'Finding best mapping': 0.02124810218811035, 'Possible mappings': 126, 'Generating mappings time': 0.054482460021972656, 'Knowledge compiling time': 0.36562371253967285, 'Total time': 2.6631548404693604}, 'AUC ROC': 0.999157, 'F1': 0.89983, 'Inference time': 0.835, 'Recall': 0.817901, 'CLL': -0.176554, 'Learning time': 3.5090000000000003, 'Parameter Learning results': {'AUC ROC': 0.885679, 'F1': 0.86743, 'Inference time': 1.14, 'Recall': 0.817901, 'CLL': -0.41212, 'Learning time': 1.562, 'AUC PR': 0.87883, 'Precision': [0.923345, 0.5]}, 'AUC PR': 0.999106, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.990741
   AUC PR    = 0.981818
   CLL	      = -0.113754
   Precision = 0.981818 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990826


Total learning time: 2.002 seconds
Total inference time: 0.767 seconds
AUC ROC: 0.990741


Dataset: cora->imdb(workedunder), Fold: 2, Type: scratch, Time: 00:05:37
{'AUC ROC': 0.990741, 'F1': 0.990826, 'Inference time': 0.767, 'Recall': 1.0, 'CLL': -0.113754, 'Learning time': 2.002, 'AUC PR': 0.981818, 'Precision': [0.981818, 0.5]}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.35236191749572754
   Generating paths time   = 2.494976282119751
   Generating mappings time   = 0.0697317123413086
   Possible mappings   = 126
   Finding best mapping   = 0.027134418487548828
   Total time   = 2.944214344024658


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;movie(H, A), movie(H, I).;true;true
0;false,false;movie(K, B), movie(K, L).;false;false
0;false,true;movie(J, I), movie(J, B).;false;false
0;true,true,false;genre(E, G), genre(B, G).;false;false
0;true;movie(D, A), movie(D, E).;true;false
0;true,true;movie(C, F).;false;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;movie(H, A), movie(H, I).;true;true
1;false,false;movie(L, B), movie(L, M).;false;false
1;false,true;genre(I, J), genre(B, J).;true;false
1;false,true,true;genre(A, K).;false;false
1;true,true,false;genre(E, G), genre(B, G).;false;false
1;true;movie(D, A), movie(D, E).;true;false
1;true,true;movie(C, F).;false;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false;movie(D, A), movie(D, E).;true;false
2;false,true;movie(F, E), movie(F, B).;false;true
2;false,true,false;genre(E, G), genre(B, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;movie(H, A), movie(H, I).;true;false
3;false,true;genre(I, J), genre(A, J).;true;false
3;true,true,true;genre(E, F), genre(A, F).;false;false
3;false,true,true;genre(I, K), genre(B, K).;false;false
3;true,true,false;genre(E, G), genre(B, G).;false;false
3;true;movie(D, A), movie(D, E).;true;false
3;true,true;movie(C, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;movie(H, A), movie(H, I).;true;true
4;false,false;movie(K, B), movie(K, L).;true;false
4;false,true;genre(I, J), genre(A, J).;false;false
4;false,false,true;genre(L, M), genre(B, M).;false;false
4;true,true,false;genre(E, G), genre(A, G).;false;false
4;true;movie(D, A), movie(D, E).;true;false
4;true,true;movie(C, F).;false;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false;movie(D, A), movie(D, E).;true;false
5;false,true;movie(F, E), movie(F, B).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false;movie(D, B), movie(D, E).;true;false
6;false,true,true;genre(B, G).;false;false
6;false,true;genre(E, F), genre(A, F).;true;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false;movie(D, A), movie(D, E).;true;false
7;false,true,true;genre(A, G).;false;false
7;false,true;genre(E, F), genre(B, F).;true;true
7;false,true,false;movie(H, E), movie(H, B).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.6709343232273629;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then if ( movie(I, H), movie(I, B) )
%   | | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.14185106490048768;  // std dev = 6,66e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.5684518199673092;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then if ( genre(H, I), genre(B, I) )
%   | | then if ( genre(A, J) )
%   | | | then return -0.12544463852839138;  // std dev = 2,63e-09, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4493799511287352;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11231637819360629;  // std dev = 5,58e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then if ( genre(E, F), genre(A, F) )
%   | | | then return -0.4722201609627135;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.3713817347718836;  // std dev = 5,276, 211,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then if ( genre(H, I), genre(A, I) )
%   | | then if ( genre(H, J), genre(B, J) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.10159632948783621;  // std dev = 5,96e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.25565739372875457;  // std dev = 5,565, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then if ( genre(H, I), genre(A, I) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19419489669879766;  // std dev = 5,564, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.08518475138839682;  // std dev = 1,49e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.08518475138839678;  // std dev = 5,05e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14982719870165168;  // std dev = 5,567, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.07877675473109175;  // std dev = 1,32e-09, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07877675473109164;  // std dev = 5,37e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11741445004950747;  // std dev = 5,572, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09328235123971215;  // std dev = 5,577, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else return -0.06842697784420264;  // std dev = 6,23e-08, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07496399786337916;  // std dev = 5,581, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else return -0.06419184008202626;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */


Results
   AUC ROC   = 0.887255
   AUC PR    = 0.816
   CLL	      = -0.332231
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 3.631 seconds
Total inference time: 1.035 seconds
AUC ROC: 0.887255


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'true': 'movie(D, A), movie(D, E)', 'false,true': 'movie(I, H), movie(I, B)', 'true,true': 'movie(C, F)'}, {'false,true,false': [6.66e-08, 115, 0], 'true,true,true': [5.773, 41, 178], 'true,false': [0.0, 0, 0], 'false,true,true': [1.05e-08, 22, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'false,true': 'genre(H, I), genre(B, I)', 'false,true,true': 'genre(A, J)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, F)'}, {'false,true,false': [0.0, 127, 0], 'true,true,true': [5.773, 41, 178], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 8, 0], 'false,true,true,true': [2.63e-09, 2, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'false,true,true': [1.29e-08, 22, 0], 'false,true,false,true': [0.0, 6, 0], 'true': [5.773, 41, 178], 'false,true,false,false': [5.58e-08, 109, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'false,true': 'genre(H, I), genre(A, I)', 'true,true,true': 'genre(E, F), genre(A, F)', 'false,true,true': 'genre(H, J), genre(B, J)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, E)'}, {'true,true,true,true': [1.49e-08, 8, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 20, 0], 'false,true,true,true': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [5.96e-08, 115, 0], 'true,true,true,false': [5.276, 33, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'true': 'movie(D, A), movie(D, E)', 'false,true': 'genre(H, I), genre(A, I)', 'true,true': 'movie(C, F)'}, {'false,true,false': [0.0, 115, 0], 'true,true,true': [5.565, 41, 178], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 22, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)'}, {'false,true,true': [1.49e-08, 22, 0], 'false,true,false': [5.05e-08, 115, 0], 'true': [5.564, 41, 178], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(E, F), genre(A, F)'}, {'false,true,true,false': [0.0, 15, 0], 'false,true,true,true': [1.32e-09, 2, 0], 'true': [5.567, 41, 178], 'false,false': [0.0, 0, 0], 'false,true,false': [5.37e-08, 120, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(H, E), movie(H, B)'}, {'true': [5.572, 41, 178], 'false,true,false,false': [0.0, 109, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [2.63e-09, 8, 0], 'false,true,false,true': [0.0, 18, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [6.23e-08, 137, 0], 'true': [5.577, 41, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 137, 0], 'true': [5.581, 41, 178]}]]
[{'': [0.15216530097371384, -6.807206866314829e-17], 'false': [-6.807206866314829e-17, nan], 'true': [0.15216530097371384, nan], 'false,true': [5.046468293750712e-18, 3.8616453030440226e-17], 'true,true': [0.15216530097371384, nan]}, {'': [0.15216530097371034, -6.4830541583950745e-18], 'false': [-6.4830541583950745e-18, nan], 'false,true': [-2.7755575615628915e-18, -1.049029629567077e-17], 'false,true,true': [3.469446951953614e-18, -3.469446951953614e-18], 'true': [0.15216530097371034, nan], 'true,true': [0.15216530097371034, nan]}, {'': [0.15216530097370537, 7.77966499007409e-17], 'false': [7.77966499007409e-17, nan], 'false,true': [7.569702440626067e-18, 6.950961545479241e-17], 'false,true,false': [0.0, 2.851949054082971e-17]}, {'': [0.15216530097370667, -4.3760615569166756e-17], 'false': [-4.3760615569166756e-17, nan], 'false,true': [-1.261617073437678e-18, 3.089316242435218e-17], 'true,true,true': [2.7755575615628914e-17, 0.1319377372475909], 'false,true,true': [0.0, -1.3877787807814458e-18], 'true': [0.15216530097370667, nan], 'true,true': [0.15216530097370667, nan]}, {'': [0.14140226570383843, 4.700214264836429e-17], 'false': [4.700214264836429e-17, nan], 'true': [0.14140226570383843, nan], 'false,true': [-6.308085367188389e-18, -2.896233977283017e-18], 'true,true': [0.14140226570383843, nan]}, {'': [0.14136394521793647, 2.6742598403379684e-17], 'false': [2.6742598403379684e-17, nan], 'false,true': [1.0092936587501423e-17, 2.2204460492503132e-17]}, {'': [0.14152731045768302, 4.2139852029567983e-17], 'false': [4.2139852029567983e-17, nan], 'false,true,true': [8.673617379884035e-19, -9.251858538542971e-19], 'false,true': [-1.6326809185664067e-18, 2.4054832200211726e-17]}, {'': [0.14176172806529294, 3.322565256177476e-17], 'false': [3.322565256177476e-17, nan], 'false,true,true': [0.0, 8.673617379884035e-19], 'false,true': [6.938893903907229e-19, -6.119339505807949e-18], 'false,true,false': [-7.709882115452476e-19, -1.0185532336010611e-18]}, {'': [0.14200647504602631, 2.8363361942978454e-17]}, {'': [0.14223589806812664, -1.2966108316790149e-17]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false;movie(I, H), movie(I, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;genre(H, I), genre(B, I).;true;true', '1;false,true;genre(A, J).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;movie(F, E), movie(F, B).;true;true', '2;false,false;genre(E, G), genre(B, G).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;genre(H, I), genre(A, I).;true;true', '3;true;genre(E, F), genre(A, F).;true;true', '3;false,true;genre(H, J), genre(B, J).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;genre(H, I), genre(A, I).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;false;movie(F, E), movie(F, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;genre(E, F), genre(A, F).;true;true', '6;false,true;genre(B, G).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false;genre(E, F), genre(B, F).;true;true', '7;false,false;movie(H, E), movie(H, B).;true;true', '7;false,true;genre(A, G).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.14185106490048796;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( genre(D, E), genre(B, E) )
%   | then if ( genre(A, F) )
%   | | then return -0.12544463852839136;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.12544463852839113;  // std dev = 6,83e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.12544463852839136;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then if ( actor(B) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.41751358415831014;  // std dev = 1,69e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.41751358415831014;  // std dev = 1,69e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(F, G), genre(A, G) )
%   | then if ( genre(F, H), genre(B, H) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then return -0.092691276189261;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(D, E), genre(A, E) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(B) )
%   | | | then return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839683;  // std dev = 2,95e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839679;  // std dev = 1,86e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839679;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.0851847513883968;  // std dev = 1,67e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( movie(F, D), movie(F, B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420275;  // std dev = 9,31e-10, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420271;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.0684269778442027;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420271;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06842697784420271;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(B) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06419184008202619;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.06419184008202618;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.79 seconds
Total inference time: 1.443 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: transfer, Time: 00:05:52
{'Mapping results': {'Generating paths time': 2.494976282119751, 'Finding best mapping': 0.027134418487548828, 'Possible mappings': 126, 'Generating mappings time': 0.0697317123413086, 'Knowledge compiling time': 0.35236191749572754, 'Total time': 2.944214344024658}, 'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 1.443, 'Recall': 1.0, 'CLL': -0.094637, 'Learning time': 8.421, 'Parameter Learning results': {'AUC ROC': 0.887255, 'F1': 0.888889, 'Inference time': 1.035, 'Recall': 1.0, 'CLL': -0.332231, 'Learning time': 3.631, 'AUC PR': 0.816, 'Precision': [0.8, 0.5]}, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048796;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839122;  // std dev = 6,32e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360625;  // std dev = 8,43e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783642;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926096;  // std dev = 1,49e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839679;  // std dev = 4,47e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109165;  // std dev = 5,96e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333706;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420267;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06419184008202625;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.357 seconds
Total inference time: 0.761 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: scratch, Time: 00:05:56
{'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 0.761, 'Recall': 1.0, 'CLL': -0.094637, 'Learning time': 3.357, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.40535855293273926
   Generating paths time   = 2.5373497009277344
   Generating mappings time   = 0.06915664672851562
   Possible mappings   = 126
   Finding best mapping   = 0.026880741119384766
   Total time   = 3.038752555847168


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;movie(H, A), movie(H, I).;true;true
0;false,false;movie(K, B), movie(K, L).;false;false
0;false,true;movie(J, I), movie(J, B).;false;false
0;true,true,false;genre(E, G), genre(B, G).;false;false
0;true;movie(D, A), movie(D, E).;true;false
0;true,true;movie(C, F).;false;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;movie(H, A), movie(H, I).;true;true
1;false,false;movie(L, B), movie(L, M).;false;false
1;false,true;genre(I, J), genre(B, J).;true;false
1;false,true,true;genre(A, K).;false;false
1;true,true,false;genre(E, G), genre(B, G).;false;false
1;true;movie(D, A), movie(D, E).;true;false
1;true,true;movie(C, F).;false;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false;movie(D, A), movie(D, E).;true;false
2;false,true;movie(F, E), movie(F, B).;false;true
2;false,true,false;genre(E, G), genre(B, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;movie(H, A), movie(H, I).;true;false
3;false,true;genre(I, J), genre(A, J).;true;false
3;true,true,true;genre(E, F), genre(A, F).;false;false
3;false,true,true;genre(I, K), genre(B, K).;false;false
3;true,true,false;genre(E, G), genre(B, G).;false;false
3;true;movie(D, A), movie(D, E).;true;false
3;true,true;movie(C, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;movie(H, A), movie(H, I).;true;true
4;false,false;movie(K, B), movie(K, L).;true;false
4;false,true;genre(I, J), genre(A, J).;false;false
4;false,false,true;genre(L, M), genre(B, M).;false;false
4;true,true,false;genre(E, G), genre(A, G).;false;false
4;true;movie(D, A), movie(D, E).;true;false
4;true,true;movie(C, F).;false;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false;movie(D, A), movie(D, E).;true;false
5;false,true;movie(F, E), movie(F, B).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false;movie(D, B), movie(D, E).;true;false
6;false,true,true;genre(B, G).;false;false
6;false,true;genre(E, F), genre(A, F).;true;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false;movie(D, A), movie(D, E).;true;false
7;false,true,true;genre(A, G).;false;false
7;false,true;genre(E, F), genre(B, F).;true;true
7;false,true,false;movie(H, E), movie(H, B).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.661720363670941;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then if ( movie(I, H), movie(I, B) )
%   | | then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.5609350667283574;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then if ( genre(H, I), genre(B, I) )
%   | | then if ( genre(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4440275917969893;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then if ( genre(E, F), genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.33685139605703973;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then if ( genre(H, I), genre(A, I) )
%   | | then if ( genre(H, J), genre(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.25286275913656375;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then if ( genre(H, I), genre(A, I) )
%   | | then return -0.09269127618926097;  // std dev = 1,86e-09, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19141228931974416;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14705476720760274;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109175;  // std dev = 1,32e-09, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11469660809076895;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09066113953316608;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else return -0.06842697784420271;  // std dev = 5,27e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07246920796007848;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else return -0.06419184008202622;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 0.89911
   AUC PR    = 0.832099
   CLL	      = -0.330526
   Precision = 0.80622 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.892715


Total learning time: 1.947 seconds
Total inference time: 1.187 seconds
AUC ROC: 0.89911


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'true': 'movie(D, A), movie(D, E)', 'false,true': 'movie(I, H), movie(I, B)', 'true,true': 'movie(C, F)'}, {'false,true,false': [0.0, 10, 0], 'true,true,true': [2.973, 11, 45], 'true,false': [0.0, 0, 0], 'false,true,true': [1.49e-08, 24, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'false,true': 'genre(H, I), genre(B, I)', 'false,true,true': 'genre(A, J)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, F)'}, {'false,true,false': [0.0, 30, 0], 'true,true,true': [2.973, 11, 45], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'false,true,true': [7.45e-09, 24, 0], 'false,true,false,true': [0.0, 1, 0], 'true': [2.973, 11, 45], 'false,true,false,false': [0.0, 9, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'false,true': 'genre(H, I), genre(A, I)', 'true,true,true': 'genre(E, F), genre(A, F)', 'false,true,true': 'genre(H, J), genre(B, J)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, E)'}, {'true,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 32, 0], 'true,true,true,false': [2.973, 11, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, A), movie(G, H)', 'true': 'movie(D, A), movie(D, E)', 'false,true': 'genre(H, I), genre(A, I)', 'true,true': 'movie(C, F)'}, {'false,true,false': [0.0, 32, 0], 'true,true,true': [2.973, 11, 45], 'true,false': [0.0, 0, 0], 'false,true,true': [1.86e-09, 2, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)'}, {'false,true,true': [1.67e-08, 24, 0], 'false,true,false': [0.0, 10, 0], 'true': [2.973, 11, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(E, F), genre(A, F)'}, {'false,true,true,false': [1.32e-09, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [2.973, 11, 45], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 32, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(H, E), movie(H, B)'}, {'true': [2.973, 11, 45], 'false,true,false,false': [0.0, 9, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'false,true,false,true': [0.0, 21, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [5.27e-09, 34, 0], 'true': [2.973, 11, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 34, 0], 'true': [2.973, 11, 45]}]]
[{'': [0.15784438775510257, 3.2653618371328135e-17], 'false': [3.2653618371328135e-17, nan], 'true': [0.15784438775510257, nan], 'false,true': [9.25185853854297e-18, -1.1102230246251566e-17], 'true,true': [0.15784438775510257, nan]}, {'': [0.15784438775510182, 3.2653618371328133e-18], 'false': [3.2653618371328133e-18, nan], 'false,true': [0.0, -7.401486830834377e-18], 'false,true,true': [nan, 0.0], 'true': [0.15784438775510182, nan], 'true,true': [0.15784438775510182, nan]}, {'': [0.15784438775510165, -1.1428766429964846e-17], 'false': [-1.1428766429964846e-17, nan], 'false,true': [2.3129646346357427e-18, 0.0], 'false,true,false': [0.0, -1.5419764230904951e-18]}, {'': [0.15784438775510187, -3.2653618371328133e-18], 'false': [-3.2653618371328133e-18, nan], 'false,true': [-1.734723475976807e-18, -5.204170427930421e-18], 'true,true,true': [nan, 0.15784438775510187], 'false,true,true': [nan, -1.734723475976807e-18], 'true': [0.15784438775510187, nan], 'true,true': [0.15784438775510187, nan]}, {'': [0.15784438775510232, -4.89804275569922e-18], 'false': [-4.89804275569922e-18, nan], 'true': [0.15784438775510232, nan], 'false,true': [1.734723475976807e-18, -5.204170427930421e-18], 'true,true': [0.15784438775510232, nan]}, {'': [0.15784438775510204, 1.3877787807814457e-17], 'false': [1.3877787807814457e-17, nan], 'false,true': [1.1564823173178714e-17, -4.163336342344337e-18]}, {'': [0.15784438775510196, -2.44902137784961e-18], 'false': [-2.44902137784961e-18, nan], 'false,true,true': [nan, 8.673617379884035e-19], 'false,true': [8.673617379884035e-19, -1.734723475976807e-18]}, {'': [0.15784438775510207, 8.163404592832033e-19], 'false': [8.163404592832033e-19, nan], 'false,true,true': [nan, -1.734723475976807e-18], 'false,true': [-1.734723475976807e-18, 9.251858538542971e-19], 'false,true,false': [-1.32169407693471e-18, -7.709882115452476e-19]}, {'': [0.15784438775510226, 8.163404592832033e-19]}, {'': [0.15784438775510207, -1.6326809185664067e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false;movie(I, H), movie(I, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;genre(H, I), genre(B, I).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;movie(F, E), movie(F, B).;true;true', '2;false,false;genre(E, G), genre(B, G).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;genre(H, I), genre(A, I).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;genre(H, I), genre(A, I).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;false;movie(F, E), movie(F, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;genre(E, F), genre(A, F).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false;genre(E, F), genre(B, F).;true;true', '7;false,false;movie(H, E), movie(H, B).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783627;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.092691276189261;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(F, D), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1527438580936709;  // std dev = 5,89e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801095;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13400703000801115;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(B) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.995298
   AUC PR    = 0.994219
   CLL	      = -0.113016
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 2.576 seconds
Total inference time: 1.323 seconds
AUC ROC: 0.995298


Refined model AUC ROC: 0.995298


Dataset: cora->imdb(workedunder), Fold: 4, Type: transfer, Time: 00:06:07
{'Mapping results': {'Generating paths time': 2.5373497009277344, 'Finding best mapping': 0.026880741119384766, 'Possible mappings': 126, 'Generating mappings time': 0.06915664672851562, 'Knowledge compiling time': 0.40535855293273926, 'Total time': 3.038752555847168}, 'AUC ROC': 0.995298, 'F1': 0.991176, 'Inference time': 1.323, 'Recall': 1.0, 'CLL': -0.113016, 'Learning time': 4.523, 'Parameter Learning results': {'AUC ROC': 0.89911, 'F1': 0.892715, 'Inference time': 1.187, 'Recall': 1.0, 'CLL': -0.330526, 'Learning time': 1.947, 'AUC PR': 0.832099, 'Precision': [0.80622, 0.5]}, 'AUC PR': 0.994219, 'Precision': [0.982507, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.991098
   AUC PR    = 0.982507
   CLL	      = -0.113016
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 2.031 seconds
Total inference time: 0.752 seconds
AUC ROC: 0.991098


Dataset: cora->imdb(workedunder), Fold: 4, Type: scratch, Time: 00:06:10
{'AUC ROC': 0.991098, 'F1': 0.991176, 'Inference time': 0.752, 'Recall': 1.0, 'CLL': -0.113016, 'Learning time': 2.031, 'AUC PR': 0.982507, 'Precision': [0.982507, 0.5]}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.4295649528503418
   Generating paths time   = 2.5415565967559814
   Generating mappings time   = 0.06922101974487305
   Possible mappings   = 126
   Finding best mapping   = 0.02788853645324707
   Total time   = 3.0682384967803955


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> movie(A,B)', 'author(A,B) -> movie(A,B)', 'haswordvenue(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
0;false;genre(A, H).;true;true
0;false,false;genre(B, K).;false;false
0;false,true;genre(B, J).;false;false
0;true;genre(A, D).;true;false
0;true,true;movie(G, E), movie(G, B).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;false;genre(A, H).;true;true
1;false,false;genre(B, L).;false;false
1;false,true;movie(J, I), movie(J, B).;true;false
1;false,true,true;movie(K, A).;false;false
1;true;genre(A, D).;true;false
1;true,true;movie(G, E), movie(G, B).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
2;false;genre(A, D).;true;false
2;false,true;genre(B, F).;false;true
2;false,true,false;movie(G, E), movie(G, B).;false;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;false;genre(A, H).;true;false
3;false,true;movie(J, I), movie(J, A).;true;false
3;false,true,true;movie(K, I), movie(K, B).;false;false
3;true,true,false;movie(G, E), movie(G, B).;false;false
3;true;genre(A, D).;true;false
3;true,true;movie(F, E), movie(F, A).;false;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;false;genre(A, H).;true;true
4;false,false;genre(B, K).;true;false
4;false,true;movie(J, I), movie(J, A).;false;false
4;false,false,true;movie(M, L), movie(M, B).;false;false
4;true;genre(A, D).;true;false
4;true,true;movie(G, E), movie(G, A).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false;genre(A, D).;true;false
5;false,true;genre(B, F).;false;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
6;false;genre(B, D).;true;false
6;false,true,true;movie(G, B).;false;false
6;false,true;movie(F, E), movie(F, A).;true;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
7;false;genre(A, D).;true;false
7;false,true,true;movie(G, A).;false;false
7;false,true;movie(F, E), movie(F, B).;true;true
7;false,true,false;genre(B, H).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, F) )
%   | | then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.05045662740720468;  // std dev = 2,842, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H) )
%   | | then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.04420289095842993;  // std dev = 2,842, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, G), movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.24645786763691274;  // std dev = 3,697, 87,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then if ( movie(G, F), movie(G, B) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20092088998726057;  // std dev = 3,620, 87,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G) )
%   | | then if ( movie(H, I), movie(H, B) )
%   | | | then return 0.44398583668853137;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.029017277320827636;  // std dev = 2,842, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.12188933018107026;  // std dev = 3,291, 87,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.3119805478439937;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.04725458996009852;  // std dev = 2,843, 55,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.07541498363651256;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.07815259304593052;  // std dev = 3,129, 87,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.05948127682203074;  // std dev = 3,137, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.048832254974721774;  // std dev = 3,137, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */


Results
   AUC ROC   = 0.896922
   AUC PR    = 0.882525
   CLL	      = -0.389352
   Precision = 0.917197 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.884793


Total learning time: 1.799 seconds
Total inference time: 1.24 seconds
AUC ROC: 0.896922


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D)', 'false,false': 'genre(B, F)', 'false,true': 'genre(B, E)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'true': [0.0, 0, 0], 'false,false,true': [2.38e-07, 0, 35], 'false,false,false': [2.842, 42, 10]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D)', 'false,true,true': 'movie(G, A)', 'false,true': 'movie(E, F), movie(E, B)', 'false,false': 'genre(B, H)'}, {'false,false,false': [2.842, 42, 10], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 35], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D)', 'false,true': 'genre(B, E)', 'false,true,false': 'movie(F, G), movie(F, B)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,true': [2.63e-09, 3, 0], 'true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false': [3.697, 42, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D)', 'false,true,true': 'movie(G, F), movie(G, B)', 'false,true': 'movie(E, F), movie(E, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'true': [0.0, 0, 0], 'false,false': [3.62, 42, 45], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D)', 'false,false': 'genre(B, G)', 'false,false,true': 'movie(H, I), movie(H, B)', 'false,true': 'movie(E, F), movie(E, A)'}, {'false,false,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 3, 0], 'false,false,false': [2.842, 42, 10], 'true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 35]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D)', 'false,true': 'genre(B, E)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'true': [0.0, 0, 0], 'false,false': [3.291, 42, 45]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D)', 'false,true,true': 'movie(G, B)', 'false,true': 'movie(E, F), movie(E, A)'}, {'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 35], 'true': [0.0, 0, 0], 'false,false': [2.843, 45, 10], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D)', 'false,true,true': 'movie(G, A)', 'false,true': 'movie(E, F), movie(E, B)'}, {'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 3, 0], 'true': [0.0, 0, 0], 'false,false': [3.129, 42, 45], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'false': [3.137, 45, 45], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'false': [3.137, 45, 45], 'true': [0.0, 0, 0]}]]
[{'': [nan, 0.25000000000000033], 'false': [0.0, 0.2497027348394771], 'false,false': [1.6240976817373718e-15, 0.15532544378698224], 'false,true': [nan, 0.0]}, {'': [nan, 0.20200903567714365], 'false': [0.0, 0.2024831036597355], 'false,false': [-6.0903663065151445e-16, 0.15532544378698226], 'false,true,true': [0.0, nan], 'false,true': [0.0, nan]}, {'': [nan, 0.1559782978587559], 'false': [2.3129646346357427e-18, 0.15706622787151014], 'false,true': [nan, 2.3129646346357427e-18], 'false,true,false': [2.3129646346357427e-18, nan]}, {'': [nan, 0.14857197148644682], 'false': [-1.1564823173178713e-18, 0.15064458731438246], 'false,true,true': [-1.1564823173178713e-18, nan], 'false,true': [-1.1564823173178713e-18, nan]}, {'': [nan, 0.14382593152439682], 'false': [2.3129646346357427e-18, 0.14663554619661123], 'false,false': [-2.0301221021717148e-16, 0.15532544378698204], 'false,false,true': [-2.0301221021717148e-16, nan], 'false,true': [2.3129646346357427e-18, nan]}, {'': [nan, 0.12171655617379568], 'false': [0.0, 0.12448435629188367], 'false,true': [nan, 0.0]}, {'': [nan, 0.12044788477631196], 'false': [-1.0150610510858574e-16, 0.1469104726342151], 'false,true,true': [-1.0150610510858574e-16, nan], 'false,true': [-1.0150610510858574e-16, nan]}, {'': [nan, 0.10954054294327398], 'false': [1.1564823173178713e-18, 0.1125317030244956], 'false,true,true': [1.1564823173178713e-18, nan], 'false,true': [1.1564823173178713e-18, nan]}, {'': [nan, 0.10933073663599799]}, {'': [nan, 0.10935246584440583]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(A, D).;true;true', '0;false;genre(B, F).;true;true', '1;;workedunder(A, B) :- genre(A, D).;true;true', '1;false;genre(B, H).;true;true', '2;;workedunder(A, B) :- genre(A, D).;true;true', '3;;workedunder(A, B) :- genre(A, D).;true;true', '4;;workedunder(A, B) :- genre(A, D).;true;true', '4;false;genre(B, G).;true;true', '5;;workedunder(A, B) :- genre(A, D).;true;true', '6;;workedunder(A, B) :- genre(B, D).;true;true', '7;;workedunder(A, B) :- genre(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( female(A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( female(A) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.5307103874589273;  // std dev = 0,192, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.3995555475981101;  // std dev = 0,192, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then return 0.32552235910478844;  // std dev = 0,028, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( female(A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.21424738337132604;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( female(A) )
%   | | then return 0.25449726453235827;  // std dev = 0,002, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.24089436106185258;  // std dev = 0,191, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.21393208981459036;  // std dev = 0,028, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( actor(B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( female(A) )
%   | | then return 0.20986962151694585;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.10968850902198098;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( female(A) )
%   | | then return 0.17622519916621668;  // std dev = 0,003, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.16300271288460583;  // std dev = 0,191, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.15208261608102544;  // std dev = 0,002, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.13782210388416782;  // std dev = 0,192, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.1334906294480698;  // std dev = 0,002, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.11843642944035532;  // std dev = 0,192, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 0.94804
   AUC PR    = 0.904925
   CLL	      = -0.213464
   Precision = 0.893899 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.943978


Total learning time: 2.284 seconds
Total inference time: 0.807 seconds
AUC ROC: 0.94804


Refined model AUC ROC: 0.94804


Dataset: cora->imdb(workedunder), Fold: 5, Type: transfer, Time: 00:06:19
{'Mapping results': {'Generating paths time': 2.5415565967559814, 'Finding best mapping': 0.02788853645324707, 'Possible mappings': 126, 'Generating mappings time': 0.06922101974487305, 'Knowledge compiling time': 0.4295649528503418, 'Total time': 3.0682384967803955}, 'AUC ROC': 0.94804, 'F1': 0.943978, 'Inference time': 0.807, 'Recall': 1.0, 'CLL': -0.213464, 'Learning time': 4.083, 'Parameter Learning results': {'AUC ROC': 0.896922, 'F1': 0.884793, 'Inference time': 1.24, 'Recall': 0.854599, 'CLL': -0.389352, 'Learning time': 1.799, 'AUC PR': 0.882525, 'Precision': [0.917197, 0.5]}, 'AUC PR': 0.904925, 'Precision': [0.893899, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1352095945470413;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.11622033579851573;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */


Results
   AUC ROC   = 0.935462
   AUC PR    = 0.889597
   CLL	      = -0.23826
   Precision = 0.877604 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.934813


Total learning time: 1.853 seconds
Total inference time: 0.767 seconds
AUC ROC: 0.935462


Dataset: cora->imdb(workedunder), Fold: 5, Type: scratch, Time: 00:06:22
{'AUC ROC': 0.935462, 'F1': 0.934813, 'Inference time': 0.767, 'Recall': 1.0, 'CLL': -0.23826, 'Learning time': 1.853, 'AUC PR': 0.889597, 'Precision': [0.877604, 0.5]}


Starting experiment #2 for cora->imdb(workedunder)

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.733148935099512;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.4402384873383177;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.2800239350995111;  // std dev = 3,951, 64,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   | else return 0.41059088866235743;  // std dev = 0,497, 4.996,000 (wgt'ed) examples reached here.  /* #neg=2.236 #pos=2.760 */
%   else return 0.1386769879047883;  // std dev = 0,449, 606,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=170 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.3531296763543682;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.24041552175397637;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.15958447824602365;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.17374885508730972;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.11819329953175452;  // std dev = 3,291, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | else return 0.12160732808545256;  // std dev = 0,450, 537,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), venue(E, A) )
%   | | then return 0.671222928585498;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5133281917433931;  // std dev = 0,365, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else return 0.28956071955443285;  // std dev = 0,497, 5.127,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.826 */
%   else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | then if ( haswordauthor(G, H), haswordvenue(A, H) )
%   | | then return -0.17302790712847646;  // std dev = 0,040, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(I, G), venue(I, A) )
%   | | | then return 0.1797164436456706;  // std dev = 1,582, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.11379445399487045;  // std dev = 3,261, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else return 0.10461519657321404;  // std dev = 0,450, 537,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=151 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.4167420885542017;  // std dev = 0,328, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.2882726181931371;  // std dev = 3,899, 64,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | | | else return 0.08745570414611387;  // std dev = 3,995, 66,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=27 */
%   | else return 0.23105927173694552;  // std dev = 0,497, 4.997,000 (wgt'ed) examples reached here.  /* #neg=2.237 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordvenue(A, J) )
%   | | then return -0.14968984463326138;  // std dev = 0,036, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.10629393081480279;  // std dev = 0,457, 63,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, A) )
%   | | | then return -0.025638546325601547;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.1039910833040279;  // std dev = 3,355, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.08861721887356135;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5468705399418504;  // std dev = 1,418, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.38602872706389774;  // std dev = 0,030, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.13088655255449247;  // std dev = 1,681, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.1839679954662473;  // std dev = 3,869, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | else return 0.17875020746890868;  // std dev = 0,497, 4.997,000 (wgt'ed) examples reached here.  /* #neg=2.237 #pos=2.760 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then return 0.07855485560902223;  // std dev = 0,444, 68,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, A) )
%   | | | then return 0.07057633560471692;  // std dev = 1,438, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.06586159550209901;  // std dev = 3,180, 51,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else return 0.07447652278517167;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.2551897406910527;  // std dev = 0,327, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.15987710546823194;  // std dev = 4,023, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.03840087222076247;  // std dev = 3,941, 64,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   | else return 0.1361861257663728;  // std dev = 0,496, 4.996,000 (wgt'ed) examples reached here.  /* #neg=2.236 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.09681447391237102;  // std dev = 0,462, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.05059856172809336;  // std dev = 0,436, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, A) )
%   | | | then return -0.03399177357402239;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.07403804878352514;  // std dev = 3,355, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.06200850802361626;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.3779556352106928;  // std dev = 1,420, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.32787283666648115;  // std dev = 0,047, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.1340055964956543;  // std dev = 1,672, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.1009884021219237;  // std dev = 3,857, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | else return 0.10287106908620407;  // std dev = 0,497, 4.997,000 (wgt'ed) examples reached here.  /* #neg=2.237 #pos=2.760 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordvenue(B, K) )
%   | | then return -0.1481817250655726;  // std dev = 0,039, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(L, J), venue(L, B) )
%   | | | then return 0.143134033394125;  // std dev = 1,586, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.059552742373793946;  // std dev = 3,238, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.05051129773078167;  // std dev = 0,449, 538,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=151 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07707005400785283;  // std dev = 0,495, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.41233582305100946;  // std dev = 1,169, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.21868743527675108;  // std dev = 0,106, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.18046972340019848;  // std dev = 0,060, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.04479300340601246;  // std dev = 3,238, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return -0.07550502994026946;  // std dev = 0,871, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.04795054545999631;  // std dev = 3,367, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return 0.04216190853757574;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05788683510611685;  // std dev = 0,495, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.12682048862112696;  // std dev = 0,046, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.0909803206443391;  // std dev = 1,571, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.040951239147143444;  // std dev = 3,237, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.03368255001713776;  // std dev = 0,807, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.03589512270002436;  // std dev = 3,332, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.03441463207926832;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04346503494965662;  // std dev = 0,495, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.13480247689131658;  // std dev = 1,033, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.17102250891353596;  // std dev = 0,090, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return -0.11073874980708923;  // std dev = 0,024, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.04108360682698999;  // std dev = 3,421, 56,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.028402441098956743;  // std dev = 0,809, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.028947274793210916;  // std dev = 3,332, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.027966786049254556;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */


Predicates from source: ['samevenue(venue,venue).', 'haswordvenue(venue,word).', 'venue(class,venue).', 'author(class,author).', 'haswordauthor(author,word).', 'samebib(class,class).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.40161561965942383
   Generating paths time   = 2.473545551300049
   Generating mappings time   = 0.0687856674194336
   Possible mappings   = 126
   Finding best mapping   = 0.027521133422851562
   Total time   = 2.9714736938476562


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
0;true,true,false;genre(E, G), genre(B, G).;false;false
0;true;movie(D, A), movie(D, E).;true;false
0;true,true;movie(C, F).;false;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false;movie(D, B), movie(D, E).;true;false
1;false,true,true;genre(E, G), genre(A, G).;false;false
1;false,true;genre(E, F), genre(B, F).;true;true
1;false,true,false;genre(E, H), genre(A, H).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;movie(F, B), movie(F, G).;true;false
2;false,true;movie(H, G), movie(H, A).;false;true
2;false,true,false;genre(G, I), genre(A, I).;false;false
2;true;movie(C, D).;true;false
2;true,true;genre(D, E), genre(A, E).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;movie(H, B), movie(H, I).;true;true
3;false,false;movie(K, A), movie(K, L).;true;false
3;false,true;movie(J, I), movie(J, A).;false;false
3;false,false,true;genre(L, M), genre(A, M).;false;false
3;true,true,false;genre(E, G), genre(A, G).;false;false
3;true;movie(D, B), movie(D, E).;true;false
3;true,true;movie(C, F).;false;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;movie(I, A), movie(I, J).;false;true
4;false,false;movie(K, B), movie(K, L).;true;false
4;true,true,true;genre(B, G).;false;false
4;false,false,true;genre(L, M), genre(A, M).;false;false
4;true,true,false;genre(E, H), genre(B, H).;false;false
4;true;movie(D, B), movie(D, E).;true;false
4;true,true;genre(E, F), genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;movie(H, B), movie(H, I).;true;true
5;false,false;movie(K, A), movie(K, L).;true;false
5;false,true;genre(I, J), genre(A, J).;false;false
5;false,false,true;genre(L, M), genre(A, M).;false;false
5;true,true,false;genre(E, G), genre(B, G).;false;false
5;true;movie(D, A), movie(D, E).;true;false
5;true,true;movie(C, F).;false;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;movie(I, A), movie(I, J).;true;false
6;false,true;movie(K, J), movie(K, B).;false;true
6;true,true,true;genre(B, G).;false;false
6;true,true,false;genre(E, H), genre(B, H).;false;false
6;true;movie(D, B), movie(D, E).;true;false
6;false,true,false;genre(J, L), genre(B, L).;false;false
6;true,true;genre(E, F), genre(A, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false;movie(D, A), movie(D, E).;true;true
7;false,true;genre(E, F), genre(B, F).;true;true
7;false,true,false;genre(E, H), genre(A, H).;false;false
7;false,true,true;genre(A, G).;false;false
7;false,false;movie(I, B), movie(I, J).;true;false
7;false,false,true;genre(J, K), genre(B, K).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false;movie(D, B), movie(D, E).;true;true
8;false,true;movie(F, E), movie(F, A).;false;true
8;false,true,false;genre(E, G), genre(A, G).;false;false
8;false,false,true;genre(I, J), genre(A, J).;false;false
8;false,false;movie(H, A), movie(H, I).;true;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false;movie(D, B), movie(D, E).;true;true
9;false,true;genre(E, F), genre(B, F).;true;true
9;false,true,false;movie(H, E), movie(H, A).;false;false
9;false,true,true;genre(E, G), genre(A, G).;false;false
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,false,true;genre(J, K), genre(A, K).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.6697431379980635;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.56748050185077;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return -0.36290530723783027;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.46062410452687486;  // std dev = 3,144, 68,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( genre(G, I), genre(A, I) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.3398735966405301;  // std dev = 3,206, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.3575972544987847;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return 0.44084796659344766;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.5591520334065525;  // std dev = 4,71e-08, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, A), movie(I, J) )
%   | then return -0.09269127618926101;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.1960055132590902;  // std dev = 2,427, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( genre(H, I), genre(A, I) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.08518475138839679;  // std dev = 1,97e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.32138813254180143;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return 0.2943032694063059;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.4686847473851028;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, A), movie(I, J) )
%   | then if ( movie(K, J), movie(K, B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( genre(J, L), genre(B, L) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12683038043336853;  // std dev = 1,903, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333704;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10333489560618768;  // std dev = 1,926, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08499015323498044;  // std dev = 1,951, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(H, E), movie(H, A) )
%   | | | then return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.979737
   AUC PR    = 0.981095
   CLL	      = -0.249814
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total learning time: 2.728 seconds
Total inference time: 1.092 seconds
AUC ROC: 0.979737


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, F)'}, {'false': [4.47e-08, 43, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.248, 13, 56], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,true': 'genre(E, G), genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'genre(E, H), genre(A, H)'}, {'true': [3.248, 13, 56], 'false,true,false,false': [0.0, 40, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'movie(H, G), movie(H, A)', 'false,true,false': 'genre(G, I), genre(A, I)', 'true': 'movie(C, D)', 'true,true': 'genre(D, E), genre(A, E)'}, {'true,true,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 27, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [1.18e-08, 14, 0], 'false,true,false,true': [0.0, 2, 0], 'true,true,false': [3.144, 12, 56], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, B), movie(G, H)', 'true': 'movie(D, B), movie(D, E)', 'false,true': 'movie(I, H), movie(I, A)', 'true,true': 'movie(C, F)'}, {'false,true,false': [0.0, 29, 0], 'true,true,true': [3.206, 13, 56], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 14, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(I, A), movie(I, J)', 'true,true,true': 'genre(B, G)', 'true,true,false': 'genre(E, H), genre(B, H)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'genre(E, F), genre(A, F)'}, {'false,true': [0.0, 43, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 56], 'false,false': [0.0, 0, 0], 'true,true,false,false': [4.71e-08, 12, 0], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, B), movie(G, H)', 'true': 'movie(D, A), movie(D, E)', 'false,true': 'genre(H, I), genre(A, I)', 'true,true': 'movie(C, F)'}, {'false,true,false': [1.97e-08, 41, 0], 'true,true,true': [2.427, 13, 56], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(I, A), movie(I, J)', 'false,true': 'movie(K, J), movie(K, B)', 'true,true,true': 'genre(B, G)', 'true,true,false': 'genre(E, H), genre(B, H)', 'true': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(J, L), genre(B, L)', 'true,true': 'genre(E, F), genre(A, F)'}, {'true,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 28, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 14, 0], 'false,true,false,true': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 56], 'false,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 12, 0], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'genre(E, H), genre(A, H)'}, {'true': [1.903, 13, 56], 'false,true,false,false': [1.05e-08, 40, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'false,true,true': [3.73e-09, 14, 0], 'false,true,false,true': [0.0, 2, 0], 'true': [1.926, 13, 56], 'false,true,false,false': [0.0, 27, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,true': 'genre(E, G), genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(H, E), movie(H, A)'}, {'true': [1.951, 13, 56], 'false,true,false,false': [0.0, 28, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [6.97e-09, 14, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1529090527200164, 4.6474452193611206e-17], 'true': [0.1529090527200164, nan], 'true,true': [0.1529090527200164, nan]}, {'': [0.15290905272001531, -2.840105411831796e-17], 'false': [-2.840105411831796e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -2.6433881538694202e-17], 'false,true,false': [0.0, -2.4980018054066023e-17]}, {'': [0.15290905272001734, 2.581914010756178e-18], 'false': [2.581914010756178e-18, nan], 'false,true': [9.912705577010326e-18, -7.656710514656252e-18], 'false,true,false': [0.0, -4.11193712824132e-18], 'true': [0.15290905272001734, nan], 'true,true': [0.0, 0.145328719723184]}, {'': [0.14894266506837586, 0.0], 'false': [0.0, nan], 'true': [0.14894266506837586, nan], 'false,true': [-3.96508223080413e-18, -1.1485065771984378e-17], 'true,true': [0.14894266506837586, nan]}, {'': [0.14874780910051835, -1.6782441069915156e-17], 'false': [-1.6782441069915156e-17, nan], 'true,true,true': [nan, 0.0], 'true,true,false': [-6.344131569286608e-17, 1.8503717077085943e-16], 'true': [0.14874780910051835, nan], 'true,true': [0.0, 0.14532871972318334]}, {'': [0.08538858471215016, 9.036699037646624e-18], 'false': [9.036699037646624e-18, nan], 'true': [0.08538858471215016, nan], 'false,true': [0.0, 9.477513624848898e-18], 'true,true': [0.08538858471215016, nan]}, {'': [0.08668218561243143, -1.290957005378089e-18], 'false': [-1.290957005378089e-18, nan], 'false,true': [-9.912705577010326e-19, -4.785444071660158e-18], 'true,true,true': [nan, 0.0], 'true,true,false': [-1.2688263138573217e-16, 0.0], 'true': [0.08668218561243143, nan], 'false,true,false': [0.0, -1.982541115402065e-18], 'true,true': [0.0, 0.08460321791773708]}, {'': [0.05247279284621954, 3.2273925134452225e-18], 'false': [3.2273925134452225e-18, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 3.3042351923367752e-18], 'false,true,false': [0.0, 2.7755575615628915e-18]}, {'': [0.05375229159684614, 1.290957005378089e-18], 'false': [1.290957005378089e-18, nan], 'false,true': [9.912705577010326e-19, -5.742532885992189e-18], 'false,true,false': [0.0, -5.13992141030165e-18]}, {'': [0.055139878810520446, -2.581914010756178e-18], 'false': [-2.581914010756178e-18, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -2.64338815386942e-18], 'false,true,false': [3.469446951953614e-18, -2.4781763942525816e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;genre(E, F), genre(B, F).;true;true', '1;false,false;genre(E, H), genre(A, H).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;movie(H, G), movie(H, A).;true;true', '2;true;genre(D, E), genre(A, E).;true;true', '2;false,false;genre(G, I), genre(A, I).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;movie(I, H), movie(I, A).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;true;genre(E, F), genre(A, F).;true;true', '4;true,false;genre(E, H), genre(B, H).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;false;genre(H, I), genre(A, I).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;movie(K, J), movie(K, B).;true;true', '6;true;genre(E, F), genre(A, F).;true;true', '6;false,false;genre(J, L), genre(B, L).;true;true', '6;true,false;genre(E, H), genre(B, H).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false;genre(E, F), genre(B, F).;true;true', '7;false,false;genre(E, H), genre(A, H).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;false;movie(F, E), movie(F, A).;true;true', '8;false,false;genre(E, G), genre(A, G).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;genre(E, F), genre(B, F).;true;true', '9;false,false;movie(H, E), movie(H, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( movie(F, G), movie(F, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.11231637819360638;  // std dev = 2,28e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(D, F), genre(B, F) )
%   | | then return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926101;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(D, F), genre(B, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( movie(G, H), movie(G, B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801087;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( movie(F, D), movie(F, A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202619;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999167
   AUC PR    = 0.999118
   CLL	      = -0.116372
   Precision = 0.981928 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990881


Total learning time: 4.046 seconds
Total inference time: 1.531 seconds
AUC ROC: 0.999167


Refined model AUC ROC: 0.999167


Dataset: cora->imdb(workedunder), Fold: 1, Type: transfer, Time: 02:29:00
{'Mapping results': {'Generating paths time': 2.473545551300049, 'Finding best mapping': 0.027521133422851562, 'Possible mappings': 126, 'Generating mappings time': 0.0687856674194336, 'Knowledge compiling time': 0.40161561965942383, 'Total time': 2.9714736938476562}, 'AUC ROC': 0.999167, 'F1': 0.990881, 'Inference time': 1.531, 'Recall': 1.0, 'CLL': -0.116372, 'Learning time': 6.774000000000001, 'Parameter Learning results': {'AUC ROC': 0.979737, 'F1': 0.900506, 'Inference time': 1.092, 'Recall': 0.819018, 'CLL': -0.249814, 'Learning time': 2.728, 'AUC PR': 0.981095, 'Precision': [1.0, 0.5]}, 'AUC PR': 0.999118, 'Precision': [0.981928, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.6909105759500754;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109546;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5354626841427582;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.4024026492217927;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4175135841583101;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.30700250684980995;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3207118471601494;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.24152182581632603;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.25517224256948956;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1958080954961511;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.20975771563253548;  // std dev = 3,33e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1628100390760043;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1770964977452775;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13816881840032139;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.11920579263429053;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */


Results
   AUC ROC   = 0.920833
   AUC PR    = 0.860033
   CLL	      = -0.244754
   Precision = 0.873995 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932761


Total learning time: 1.938 seconds
Total inference time: 0.775 seconds
AUC ROC: 0.920833


Dataset: cora->imdb(workedunder), Fold: 1, Type: scratch, Time: 02:29:03
{'AUC ROC': 0.920833, 'F1': 0.932761, 'Inference time': 0.775, 'Recall': 1.0, 'CLL': -0.244754, 'Learning time': 1.938, 'AUC PR': 0.860033, 'Precision': [0.873995, 0.5]}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.4268953800201416
   Generating paths time   = 2.451265573501587
   Generating mappings time   = 0.06923222541809082
   Possible mappings   = 126
   Finding best mapping   = 0.026958227157592773
   Total time   = 2.974357843399048


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
0;true,true,false;genre(E, G), genre(B, G).;false;false
0;true;movie(D, A), movie(D, E).;true;false
0;true,true;movie(C, F).;false;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false;movie(D, B), movie(D, E).;true;false
1;false,true,true;genre(E, G), genre(A, G).;false;false
1;false,true;genre(E, F), genre(B, F).;true;true
1;false,true,false;genre(E, H), genre(A, H).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;movie(F, B), movie(F, G).;true;false
2;false,true;movie(H, G), movie(H, A).;false;true
2;false,true,false;genre(G, I), genre(A, I).;false;false
2;true;movie(C, D).;true;false
2;true,true;genre(D, E), genre(A, E).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;movie(H, B), movie(H, I).;true;true
3;false,false;movie(K, A), movie(K, L).;true;false
3;false,true;movie(J, I), movie(J, A).;false;false
3;false,false,true;genre(L, M), genre(A, M).;false;false
3;true,true,false;genre(E, G), genre(A, G).;false;false
3;true;movie(D, B), movie(D, E).;true;false
3;true,true;movie(C, F).;false;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;movie(I, A), movie(I, J).;false;true
4;false,false;movie(K, B), movie(K, L).;true;false
4;true,true,true;genre(B, G).;false;false
4;false,false,true;genre(L, M), genre(A, M).;false;false
4;true,true,false;genre(E, H), genre(B, H).;false;false
4;true;movie(D, B), movie(D, E).;true;false
4;true,true;genre(E, F), genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;movie(H, B), movie(H, I).;true;true
5;false,false;movie(K, A), movie(K, L).;true;false
5;false,true;genre(I, J), genre(A, J).;false;false
5;false,false,true;genre(L, M), genre(A, M).;false;false
5;true,true,false;genre(E, G), genre(B, G).;false;false
5;true;movie(D, A), movie(D, E).;true;false
5;true,true;movie(C, F).;false;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;movie(I, A), movie(I, J).;true;false
6;false,true;movie(K, J), movie(K, B).;false;true
6;true,true,true;genre(B, G).;false;false
6;true,true,false;genre(E, H), genre(B, H).;false;false
6;true;movie(D, B), movie(D, E).;true;false
6;false,true,false;genre(J, L), genre(B, L).;false;false
6;true,true;genre(E, F), genre(A, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false;movie(D, A), movie(D, E).;true;true
7;false,true;genre(E, F), genre(B, F).;true;true
7;false,true,false;genre(E, H), genre(A, H).;false;false
7;false,true,true;genre(A, G).;false;false
7;false,false;movie(I, B), movie(I, J).;true;false
7;false,false,true;genre(J, K), genre(B, K).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false;movie(D, B), movie(D, E).;true;true
8;false,true;movie(F, E), movie(F, A).;false;true
8;false,true,false;genre(E, G), genre(A, G).;false;false
8;false,false,true;genre(I, J), genre(A, J).;false;false
8;false,false;movie(H, A), movie(H, I).;true;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false;movie(D, B), movie(D, E).;true;true
9;false,true;genre(E, F), genre(B, F).;true;true
9;false,true,false;movie(H, E), movie(H, A).;false;false
9;false,true,true;genre(E, G), genre(A, G).;false;false
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,false,true;genre(J, K), genre(A, K).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.6419327188832966;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.544765136174259;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return -0.35130630250610984;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.46559510594459425;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return -0.11231637819360636;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.3282320840352203;  // std dev = 3,429, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return -0.10159632948783633;  // std dev = 1,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.3460661260986126;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return 0.45499090693911987;  // std dev = 9,42e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.5450090930608801;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, A), movie(I, J) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.18834512204190798;  // std dev = 2,595, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( genre(H, I), genre(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08518475138839679;  // std dev = 2,24e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.311289562970774;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return 0.3049446762682604;  // std dev = 8,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.4560787642377096;  // std dev = 2,98e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, A), movie(I, J) )
%   | then if ( movie(K, J), movie(K, B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12049774087761356;  // std dev = 2,035, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09777782135417531;  // std dev = 2,054, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06842697784420271;  // std dev = 7,45e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07999308123002054;  // std dev = 2,076, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(H, E), movie(H, A) )
%   | | | then return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.979767
   AUC PR    = 0.981095
   CLL	      = -0.261958
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 2.218 seconds
Total inference time: 1.317 seconds
AUC ROC: 0.979767


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, F)'}, {'false': [4.47e-08, 42, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.541, 16, 58], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,true': 'genre(E, G), genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'genre(E, H), genre(A, H)'}, {'true': [3.541, 16, 58], 'false,true,false,false': [0.0, 38, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'false,true,false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B), movie(F, G)', 'true': 'movie(C, D)', 'false,true': 'movie(H, G), movie(H, A)', 'true,true': 'genre(D, E), genre(A, E)'}, {'false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 42, 0], 'true,true,false': [3.259, 13, 58], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, B), movie(G, H)', 'true': 'movie(D, B), movie(D, E)', 'false,true': 'movie(I, H), movie(I, A)', 'true,true': 'movie(C, F)'}, {'false,true,false': [0.0, 0, 0], 'true,true,true': [3.429, 16, 58], 'true,false': [0.0, 0, 0], 'false,true,true': [1.49e-08, 42, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(I, A), movie(I, J)', 'true,true,true': 'genre(B, G)', 'true,true,false': 'genre(E, H), genre(B, H)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'genre(E, F), genre(A, F)'}, {'false,true': [0.0, 42, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false,true': [9.42e-08, 0, 58], 'false,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 13, 0], 'true,true,true,false': [7.45e-09, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, B), movie(G, H)', 'true': 'movie(D, A), movie(D, E)', 'false,true': 'genre(H, I), genre(A, I)', 'true,true': 'movie(C, F)'}, {'false,true,false': [2.24e-08, 42, 0], 'true,true,true': [2.595, 16, 58], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(I, A), movie(I, J)', 'false,true': 'movie(K, J), movie(K, B)', 'true,true,true': 'genre(B, G)', 'true,true,false': 'genre(E, H), genre(B, H)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'genre(E, F), genre(A, F)'}, {'true,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 42, 0], 'true,true,false,true': [8.94e-08, 0, 58], 'false,false': [0.0, 0, 0], 'true,true,false,false': [2.98e-08, 13, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'genre(E, H), genre(A, H)'}, {'true': [2.035, 16, 58], 'false,true,false,false': [1.05e-08, 40, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)'}, {'false,true,true': [7.45e-09, 42, 0], 'false,true,false': [0.0, 0, 0], 'true': [2.054, 16, 58], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,true': 'genre(E, G), genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(H, E), movie(H, A)'}, {'true': [2.076, 16, 58], 'false,true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'false,true,false,true': [0.0, 38, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.16946676406135816, 4.7580986769649563e-17], 'true': [0.16946676406135816, nan], 'true,true': [0.16946676406135816, nan]}, {'': [0.1694667640613594, -2.6433881538694202e-17], 'false': [-2.6433881538694202e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -2.0451476769410777e-17], 'false,true,false': [nan, -2.0451476769410777e-17]}, {'': [0.1694667640613589, 0.0], 'false': [0.0, nan], 'true': [0.1694667640613589, nan], 'false,true': [0.0, nan], 'true,true': [0.0, 0.14957349732196018]}, {'': [0.15893409248017765, 5.28677630773884e-18], 'false': [5.28677630773884e-18, nan], 'true': [0.15893409248017765, nan], 'false,true': [5.28677630773884e-18, nan], 'true,true': [0.15893409248017765, nan]}, {'': [0.15836340874200705, -6.6084703846735505e-18], 'false': [-6.6084703846735505e-18, nan], 'true,true,true': [nan, 1.850371707708594e-17], 'true,true,false': [1.5313421029312505e-16, -1.0248212535001446e-16], 'true': [0.15836340874200705, nan], 'true,true': [1.850371707708594e-17, 0.1495734973219601]}, {'': [0.09102047012311311, 1.1895246692412391e-17], 'false': [1.1895246692412391e-17, nan], 'true': [0.09102047012311311, nan], 'false,true': [nan, 1.1895246692412391e-17], 'true,true': [0.09102047012311311, nan]}, {'': [0.09196079145383905, 0.0], 'false': [0.0, nan], 'false,true': [0.0, nan], 'true,true,true': [nan, -1.850371707708594e-17], 'true,true,false': [1.3782078926381254e-16, 6.832141690000964e-17], 'true': [0.09196079145383905, nan], 'true,true': [-1.850371707708594e-17, 0.08662648967618654]}, {'': [0.055951736841583014, 3.3042351923367752e-18], 'false': [3.3042351923367752e-18, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 2.7755575615628915e-18], 'false,true,false': [nan, 2.7755575615628915e-18]}, {'': [0.057028073211245006, 1.32169407693471e-18], 'false': [1.32169407693471e-18, nan], 'false,true': [1.32169407693471e-18, nan]}, {'': [0.05824705938834741, -1.982541115402065e-18], 'false': [-1.982541115402065e-18, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -1.460819769243627e-18], 'false,true,false': [-1.460819769243627e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;genre(E, F), genre(B, F).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;true;genre(D, E), genre(A, E).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;true;genre(E, F), genre(A, F).;true;true', '4;true,false;genre(E, H), genre(B, H).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;true;genre(E, F), genre(A, F).;true;true', '6;true,false;genre(E, H), genre(B, H).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false;genre(E, F), genre(B, F).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;genre(E, F), genre(B, F).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(A) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(D, F), genre(B, F) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.09269127618926101;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839686;  // std dev = 2,08e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(D, F), genre(B, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1340070300080111;  // std dev = 2,63e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06419184008202622;  // std dev = 9,31e-10, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */


Results
   AUC ROC   = 0.999157
   AUC PR    = 0.999106
   CLL	      = -0.116507
   Precision = 0.981818 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990826


Total learning time: 2.755 seconds
Total inference time: 1.167 seconds
AUC ROC: 0.999157


Refined model AUC ROC: 0.999157


Dataset: cora->imdb(workedunder), Fold: 2, Type: transfer, Time: 02:29:15
{'Mapping results': {'Generating paths time': 2.451265573501587, 'Finding best mapping': 0.026958227157592773, 'Possible mappings': 126, 'Generating mappings time': 0.06923222541809082, 'Knowledge compiling time': 0.4268953800201416, 'Total time': 2.974357843399048}, 'AUC ROC': 0.999157, 'F1': 0.990826, 'Inference time': 1.167, 'Recall': 1.0, 'CLL': -0.116507, 'Learning time': 4.973, 'Parameter Learning results': {'AUC ROC': 0.979767, 'F1': 0.89983, 'Inference time': 1.317, 'Recall': 0.817901, 'CLL': -0.261958, 'Learning time': 2.218, 'AUC PR': 0.981095, 'Precision': [1.0, 0.5]}, 'AUC PR': 0.999106, 'Precision': [0.981818, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.990741
   AUC PR    = 0.981818
   CLL	      = -0.113754
   Precision = 0.981818 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990826


Total learning time: 2.117 seconds
Total inference time: 0.79 seconds
AUC ROC: 0.990741


Dataset: cora->imdb(workedunder), Fold: 2, Type: scratch, Time: 02:29:18
{'AUC ROC': 0.990741, 'F1': 0.990826, 'Inference time': 0.79, 'Recall': 1.0, 'CLL': -0.113754, 'Learning time': 2.117, 'AUC PR': 0.981818, 'Precision': [0.981818, 0.5]}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.3634209632873535
   Generating paths time   = 2.4360711574554443
   Generating mappings time   = 0.07183003425598145
   Possible mappings   = 126
   Finding best mapping   = 0.02759099006652832
   Total time   = 2.898921251296997


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
0;true,true,false;genre(E, G), genre(B, G).;false;false
0;true;movie(D, A), movie(D, E).;true;false
0;true,true;movie(C, F).;false;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false;movie(D, B), movie(D, E).;true;false
1;false,true,true;genre(E, G), genre(A, G).;false;false
1;false,true;genre(E, F), genre(B, F).;true;true
1;false,true,false;genre(E, H), genre(A, H).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;movie(F, B), movie(F, G).;true;false
2;false,true;movie(H, G), movie(H, A).;false;true
2;false,true,false;genre(G, I), genre(A, I).;false;false
2;true;movie(C, D).;true;false
2;true,true;genre(D, E), genre(A, E).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;movie(H, B), movie(H, I).;true;true
3;false,false;movie(K, A), movie(K, L).;true;false
3;false,true;movie(J, I), movie(J, A).;false;false
3;false,false,true;genre(L, M), genre(A, M).;false;false
3;true,true,false;genre(E, G), genre(A, G).;false;false
3;true;movie(D, B), movie(D, E).;true;false
3;true,true;movie(C, F).;false;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;movie(I, A), movie(I, J).;false;true
4;false,false;movie(K, B), movie(K, L).;true;false
4;true,true,true;genre(B, G).;false;false
4;false,false,true;genre(L, M), genre(A, M).;false;false
4;true,true,false;genre(E, H), genre(B, H).;false;false
4;true;movie(D, B), movie(D, E).;true;false
4;true,true;genre(E, F), genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;movie(H, B), movie(H, I).;true;true
5;false,false;movie(K, A), movie(K, L).;true;false
5;false,true;genre(I, J), genre(A, J).;false;false
5;false,false,true;genre(L, M), genre(A, M).;false;false
5;true,true,false;genre(E, G), genre(B, G).;false;false
5;true;movie(D, A), movie(D, E).;true;false
5;true,true;movie(C, F).;false;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;movie(I, A), movie(I, J).;true;false
6;false,true;movie(K, J), movie(K, B).;false;true
6;true,true,true;genre(B, G).;false;false
6;true,true,false;genre(E, H), genre(B, H).;false;false
6;true;movie(D, B), movie(D, E).;true;false
6;false,true,false;genre(J, L), genre(B, L).;false;false
6;true,true;genre(E, F), genre(A, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false;movie(D, A), movie(D, E).;true;true
7;false,true;genre(E, F), genre(B, F).;true;true
7;false,true,false;genre(E, H), genre(A, H).;false;false
7;false,true,true;genre(A, G).;false;false
7;false,false;movie(I, B), movie(I, J).;true;false
7;false,false,true;genre(J, K), genre(B, K).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false;movie(D, B), movie(D, E).;true;true
8;false,true;movie(F, E), movie(F, A).;false;true
8;false,true,false;genre(E, G), genre(A, G).;false;false
8;false,false,true;genre(I, J), genre(A, J).;false;false
8;false,false;movie(H, A), movie(H, I).;true;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false;movie(D, B), movie(D, E).;true;true
9;false,true;genre(E, F), genre(B, F).;true;true
9;false,true,false;movie(H, E), movie(H, A).;false;false
9;false,true,true;genre(E, G), genre(A, G).;false;false
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,false,true;genre(J, K), genre(A, K).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.6709343232273629;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048796;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5684518199673092;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(E, G), genre(A, G) )
%   | | | then return -0.12544463852839136;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.12544463852839136;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.12544463852839136;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.1254446385283912;  // std dev = 6,50e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return -0.36340543699912015;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.48019645873547745;  // std dev = 5,276, 211,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(G, I), genre(A, I) )
%   | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360628;  // std dev = 6,14e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.3400302100270914;  // std dev = 5,574, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.35801522298861105;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.35801522298861105;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return 0.43545888997488036;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0.03301986558463572;  // std dev = 4,441, 82,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, A), movie(I, J) )
%   | then return -0.09269127618926075;  // std dev = 7,88e-08, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.195179721788199;  // std dev = 5,134, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( genre(H, I), genre(A, I) )
%   | | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.08518475138839682;  // std dev = 5,27e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.3215136011752157;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.3215136011752157;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return 0.29105794512916167;  // std dev = 2,15e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.022029978686170397;  // std dev = 4,441, 82,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, A), movie(I, J) )
%   | then if ( movie(K, J), movie(K, B) )
%   | | then return -0.0787767547310918;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(J, L), genre(B, L) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109172;  // std dev = 3,80e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.122676015726969;  // std dev = 4,907, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.07324622576333706;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07324622576333706;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09851993258479586;  // std dev = 4,926, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0684269778442027;  // std dev = 3,41e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0799663431268679;  // std dev = 4,944, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(E, G), genre(A, G) )
%   | | | then return -0.06419184008202619;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( movie(H, E), movie(H, A) )
%   | | | then return -0.0641918400820262;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.994473
   AUC PR    = 0.995114
   CLL	      = -0.264182
   Precision = 0.816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.898678


Total learning time: 3.896 seconds
Total inference time: 1.053 seconds
AUC ROC: 0.994473


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, F)'}, {'false': [0.0, 137, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.773, 41, 178], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,true': 'genre(E, G), genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'genre(E, H), genre(A, H)'}, {'true': [5.773, 41, 178], 'false,true,false,false': [6.5e-08, 103, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 17, 0], 'false,true,false,true': [0.0, 15, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'movie(H, G), movie(H, A)', 'false,true,false': 'genre(G, I), genre(A, I)', 'true': 'movie(C, D)', 'true,true': 'genre(D, E), genre(A, E)'}, {'true,true,true': [1.49e-08, 8, 0], 'false,true,false,false': [6.14e-08, 104, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [1.29e-08, 22, 0], 'false,true,false,true': [7.45e-09, 11, 0], 'true,true,false': [5.276, 33, 178], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, B), movie(G, H)', 'true': 'movie(D, B), movie(D, E)', 'false,true': 'movie(I, H), movie(I, A)', 'true,true': 'movie(C, F)'}, {'false,true,false': [0.0, 115, 0], 'true,true,true': [5.574, 41, 178], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 22, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(I, A), movie(I, J)', 'true,true,true': 'genre(B, G)', 'true,true,false': 'genre(E, H), genre(B, H)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'genre(E, F), genre(A, F)'}, {'false,true': [7.88e-08, 137, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 3, 0], 'true,true,false,true': [0.0, 0, 129], 'false,false': [0.0, 0, 0], 'true,true,false,false': [4.441, 33, 49], 'true,true,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, B), movie(G, H)', 'true': 'movie(D, A), movie(D, E)', 'false,true': 'genre(H, I), genre(A, I)', 'true,true': 'movie(C, F)'}, {'false,true,false': [5.27e-08, 120, 0], 'true,true,true': [5.134, 41, 178], 'true,false': [0.0, 0, 0], 'false,true,true': [1.18e-08, 17, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(I, A), movie(I, J)', 'false,true': 'movie(K, J), movie(K, B)', 'true,true,true': 'genre(B, G)', 'true,true,false': 'genre(E, H), genre(B, H)', 'true': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(J, L), genre(B, L)', 'true,true': 'genre(E, F), genre(A, F)'}, {'true,true,true,true': [7.45e-09, 3, 0], 'false,true,false,false': [3.8e-08, 109, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 22, 0], 'false,true,false,true': [0.0, 6, 0], 'true,true,false,true': [2.15e-07, 0, 129], 'false,false': [0.0, 0, 0], 'true,true,false,false': [4.441, 33, 49], 'true,true,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'genre(E, H), genre(A, H)'}, {'true': [4.907, 41, 178], 'false,true,false,false': [0.0, 107, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [2.63e-09, 8, 0], 'false,true,false,true': [0.0, 20, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'false,true,true': [0.0, 22, 0], 'false,true,false,true': [2.63e-09, 11, 0], 'true': [4.926, 41, 178], 'false,true,false,false': [3.41e-08, 104, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,true': 'genre(E, G), genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(H, E), movie(H, A)'}, {'true': [4.944, 41, 178], 'false,true,false,false': [0.0, 100, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [7.45e-09, 17, 0], 'false,true,false,true': [6.45e-09, 18, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.15216530097371384, -6.807206866314829e-17], 'true': [0.15216530097371384, nan], 'true,true': [0.15216530097371384, nan]}, {'': [0.15216530097371034, 3.565679787117291e-17], 'false': [3.565679787117291e-17, nan], 'false,true,true': [0.0, -3.2653618371328133e-18], 'false,true': [-5.843279076974508e-18, 4.516161456102332e-17], 'false,true,false': [-9.25185853854297e-18, 4.095968440364655e-17]}, {'': [0.15216530097370537, 7.77966499007409e-17], 'false': [7.77966499007409e-17, nan], 'false,true': [7.569702440626067e-18, 6.950961545479241e-17], 'false,true,false': [5.046468293750712e-18, 3.629575272813012e-17], 'true': [0.15216530097370537, nan], 'true,true': [2.7755575615628914e-17, 0.13193773724759]}, {'': [0.14188920312678072, -4.3760615569166756e-17], 'false': [-4.3760615569166756e-17, nan], 'true': [0.14188920312678072, nan], 'false,true': [-3.784851220313033e-18, -1.544658121217609e-17], 'true,true': [0.14188920312678072, nan]}, {'': [0.14140264881556627, 4.538137910876552e-17], 'false': [4.538137910876552e-17, nan], 'true,true,true': [0.0, 0.0], 'true,true,false': [-7.986720673272444e-16, 0.2404818560380725], 'true': [0.14140264881556627, nan], 'true,true': [0.0, 0.13193773724759045]}, {'': [0.12033614571841242, 3.727756141077168e-17], 'false': [3.727756141077168e-17, nan], 'true': [0.12033614571841242, nan], 'false,true': [8.163404592832034e-18, 2.312964634635743e-17], 'true,true': [0.12033614571841242, nan]}, {'': [0.12096412050916709, 4.295023379936737e-17], 'false': [4.295023379936737e-17, nan], 'true,true,true': [1.850371707708594e-17, -2.2204460492503132e-17], 'false,true': [-1.261617073437678e-18, 3.765104170467922e-17], 'false,true,false': [-1.1564823173178713e-18, 1.3241192036813794e-17], 'true,true,false': [3.5802540949152334e-16, 0.24048185603807262], 'true': [0.12096412050916709, nan], 'true,true': [0.0, 0.11674750013088732]}, {'': [0.10996788183144308, -4.862290618796306e-18], 'false': [-4.862290618796306e-18, nan], 'false,true,true': [0.0, 8.673617379884035e-19], 'false,true': [6.938893903907229e-19, -4.370956789862821e-18], 'false,true,false': [-1.3877787807814458e-18, -1.0375916117992116e-18]}, {'': [0.11081828209519548, 2.917374371277784e-17], 'false': [2.917374371277784e-17, nan], 'false,true': [-3.784851220313033e-18, 2.6066105795547154e-17], 'false,true,false': [6.30808536718839e-19, 1.120898246015783e-17]}, {'': [0.1116124279174271, -1.2966108316790149e-17], 'false': [-1.2966108316790149e-17, nan], 'false,true,true': [0.0, 3.2653618371328133e-18], 'false,true': [2.1912296538654404e-18, -9.40866970021319e-18], 'false,true,false': [2.3129646346357427e-18, -1.4432899320127036e-17]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;genre(E, F), genre(B, F).;true;true', '1;false,false;genre(E, H), genre(A, H).;true;true', '1;false,true;genre(E, G), genre(A, G).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;movie(H, G), movie(H, A).;true;true', '2;true;genre(D, E), genre(A, E).;true;true', '2;false,false;genre(G, I), genre(A, I).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;movie(I, H), movie(I, A).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;true;genre(E, F), genre(A, F).;true;true', '4;true,true;genre(B, G).;true;true', '4;true,false;genre(E, H), genre(B, H).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;false;genre(H, I), genre(A, I).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;movie(K, J), movie(K, B).;true;true', '6;false,false;genre(J, L), genre(B, L).;true;true', '6;true,false;genre(E, H), genre(B, H).;true;true', '6;true;genre(E, F), genre(A, F).;true;true', '6;true,true;genre(B, G).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false;genre(E, F), genre(B, F).;true;true', '7;false,false;genre(E, H), genre(A, H).;true;true', '7;false,true;genre(A, G).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;false;movie(F, E), movie(F, A).;true;true', '8;false,false;genre(E, G), genre(A, G).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;genre(E, F), genre(B, F).;true;true', '9;false,false;movie(H, E), movie(H, A).;true;true', '9;false,true;genre(E, G), genre(A, G).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.14185106490048796;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( genre(D, E), genre(B, E) )
%   | then if ( genre(D, F), genre(A, F) )
%   | | then return -0.12544463852839136;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( genre(D, G), genre(A, G) )
%   | | then return -0.12544463852839136;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.12544463852839108;  // std dev = 7,45e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.5553664367462835;  // std dev = 3,72e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.5553664367462835;  // std dev = 3,72e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( movie(F, G), movie(F, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360626;  // std dev = 4,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.10159632948783642;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(D, G), genre(B, G) )
%   | | then if ( female(A) )
%   | | | then return 0.32071184716014944;  // std dev = 9,88e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return 0.3207118471601501;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.32071184716014944;  // std dev = 9,88e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.09269127618926103;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.08518475138839682;  // std dev = 1,86e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839679;  // std dev = 2,08e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.08518475138839679;  // std dev = 1,86e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( genre(D, F), genre(B, F) )
%   | | then if ( female(A) )
%   | | | then return 0.209757715632536;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return 0.20975771563253565;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.209757715632536;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( movie(G, H), movie(G, B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 2,08e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333702;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367125;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420268;  // std dev = 1,67e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return -0.0684269778442027;  // std dev = 9,13e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1340070300080108;  // std dev = 6,97e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06419184008202619;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06419184008202619;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(D, E), genre(B, E) )
%   | then if ( genre(D, F), genre(A, F) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.044 seconds
Total inference time: 1.398 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: transfer, Time: 02:29:33
{'Mapping results': {'Generating paths time': 2.4360711574554443, 'Finding best mapping': 0.02759099006652832, 'Possible mappings': 126, 'Generating mappings time': 0.07183003425598145, 'Knowledge compiling time': 0.3634209632873535, 'Total time': 2.898921251296997}, 'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 1.398, 'Recall': 1.0, 'CLL': -0.094637, 'Learning time': 8.94, 'Parameter Learning results': {'AUC ROC': 0.994473, 'F1': 0.898678, 'Inference time': 1.053, 'Recall': 1.0, 'CLL': -0.264182, 'Learning time': 3.896, 'AUC PR': 0.995114, 'Precision': [0.816, 0.5]}, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048796;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839122;  // std dev = 6,32e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360625;  // std dev = 8,43e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783642;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926096;  // std dev = 1,49e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839679;  // std dev = 4,47e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109165;  // std dev = 5,96e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333706;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420267;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06419184008202625;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.876 seconds
Total inference time: 0.754 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: scratch, Time: 02:29:36
{'AUC ROC': 1.0, 'F1': 1.0, 'Inference time': 0.754, 'Recall': 1.0, 'CLL': -0.094637, 'Learning time': 2.876, 'AUC PR': 1.0, 'Precision': [1.0, 0.5]}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.3573427200317383
   Generating paths time   = 2.445462465286255
   Generating mappings time   = 0.06919169425964355
   Possible mappings   = 126
   Finding best mapping   = 0.027642488479614258
   Total time   = 2.899646520614624


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
0;true,true,false;genre(E, G), genre(B, G).;false;false
0;true;movie(D, A), movie(D, E).;true;false
0;true,true;movie(C, F).;false;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false;movie(D, B), movie(D, E).;true;false
1;false,true,true;genre(E, G), genre(A, G).;false;false
1;false,true;genre(E, F), genre(B, F).;true;true
1;false,true,false;genre(E, H), genre(A, H).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;movie(F, B), movie(F, G).;true;false
2;false,true;movie(H, G), movie(H, A).;false;true
2;false,true,false;genre(G, I), genre(A, I).;false;false
2;true;movie(C, D).;true;false
2;true,true;genre(D, E), genre(A, E).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;movie(H, B), movie(H, I).;true;true
3;false,false;movie(K, A), movie(K, L).;true;false
3;false,true;movie(J, I), movie(J, A).;false;false
3;false,false,true;genre(L, M), genre(A, M).;false;false
3;true,true,false;genre(E, G), genre(A, G).;false;false
3;true;movie(D, B), movie(D, E).;true;false
3;true,true;movie(C, F).;false;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;movie(I, A), movie(I, J).;false;true
4;false,false;movie(K, B), movie(K, L).;true;false
4;true,true,true;genre(B, G).;false;false
4;false,false,true;genre(L, M), genre(A, M).;false;false
4;true,true,false;genre(E, H), genre(B, H).;false;false
4;true;movie(D, B), movie(D, E).;true;false
4;true,true;genre(E, F), genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;movie(H, B), movie(H, I).;true;true
5;false,false;movie(K, A), movie(K, L).;true;false
5;false,true;genre(I, J), genre(A, J).;false;false
5;false,false,true;genre(L, M), genre(A, M).;false;false
5;true,true,false;genre(E, G), genre(B, G).;false;false
5;true;movie(D, A), movie(D, E).;true;false
5;true,true;movie(C, F).;false;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;movie(I, A), movie(I, J).;true;false
6;false,true;movie(K, J), movie(K, B).;false;true
6;true,true,true;genre(B, G).;false;false
6;true,true,false;genre(E, H), genre(B, H).;false;false
6;true;movie(D, B), movie(D, E).;true;false
6;false,true,false;genre(J, L), genre(B, L).;false;false
6;true,true;genre(E, F), genre(A, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false;movie(D, A), movie(D, E).;true;true
7;false,true;genre(E, F), genre(B, F).;true;true
7;false,true,false;genre(E, H), genre(A, H).;false;false
7;false,true,true;genre(A, G).;false;false
7;false,false;movie(I, B), movie(I, J).;true;false
7;false,false,true;genre(J, K), genre(B, K).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false;movie(D, B), movie(D, E).;true;true
8;false,true;movie(F, E), movie(F, A).;false;true
8;false,true,false;genre(E, G), genre(A, G).;false;false
8;false,false,true;genre(I, J), genre(A, J).;false;false
8;false,false;movie(H, A), movie(H, I).;true;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false;movie(D, B), movie(D, E).;true;true
9;false,true;genre(E, F), genre(B, F).;true;true
9;false,true,false;movie(H, E), movie(H, A).;false;false
9;false,true,true;genre(E, G), genre(A, G).;false;false
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,false,true;genre(J, K), genre(A, K).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.661720363670941;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5609350667283574;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4440275917969893;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( genre(G, I), genre(A, I) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.33685139605703973;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0.44929133056513526;  // std dev = 1,19e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.5507086694348644;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, A), movie(H, I) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.19377037336652783;  // std dev = 2,249, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( genre(H, I), genre(A, I) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0.3001473857016523;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.46172406262724225;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, A), movie(H, I) )
%   | then if ( movie(J, I), movie(J, B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( genre(I, K), genre(B, K) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12480364630027392;  // std dev = 1,760, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333704;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10136918688512686;  // std dev = 1,780, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08309019541295216;  // std dev = 1,802, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(H, E), movie(H, A) )
%   | | | then return -0.0641918400820262;  // std dev = 5,27e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.975583
   AUC PR    = 0.977558
   CLL	      = -0.257007
   Precision = 0.955326 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.88535


Total learning time: 1.595 seconds
Total inference time: 1.071 seconds
AUC ROC: 0.975583


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, F)'}, {'false': [3.33e-08, 34, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.973, 11, 45], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,true': 'genre(E, G), genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'genre(E, H), genre(A, H)'}, {'true': [2.973, 11, 45], 'false,true,false,false': [0.0, 28, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'false,true,false,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'movie(H, G), movie(H, A)', 'false,true,false': 'genre(G, I), genre(A, I)', 'true': 'movie(C, D)', 'true,true': 'genre(D, E), genre(A, E)'}, {'true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 24, 0], 'false,true,false,true': [0.0, 1, 0], 'true,true,false': [2.973, 11, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, B), movie(G, H)', 'true': 'movie(D, B), movie(D, E)', 'false,true': 'movie(I, H), movie(I, A)', 'true,true': 'movie(C, F)'}, {'false,true,false': [0.0, 10, 0], 'true,true,true': [2.973, 11, 45], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 24, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, A), movie(H, I)', 'true,true,false': 'genre(E, G), genre(B, G)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'genre(E, F), genre(A, F)'}, {'false,true': [0.0, 34, 0], 'true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false,true': [1.19e-07, 0, 45], 'false,false': [0.0, 0, 0], 'true,true,false,false': [4.21e-08, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, B), movie(G, H)', 'true': 'movie(D, A), movie(D, E)', 'false,true': 'genre(H, I), genre(A, I)', 'true,true': 'movie(C, F)'}, {'false,true,false': [2.17e-08, 32, 0], 'true,true,true': [2.249, 11, 45], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, A), movie(H, I)', 'false,true': 'movie(J, I), movie(J, B)', 'false,true,false': 'genre(I, K), genre(B, K)', 'true,true,false': 'genre(E, G), genre(B, G)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'genre(E, F), genre(A, F)'}, {'true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 24, 0], 'false,true,false,true': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 45], 'false,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'genre(E, H), genre(A, H)'}, {'true': [1.76, 11, 45], 'false,true,false,false': [5.27e-09, 28, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'false,true,false,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'false,true,true': [0.0, 24, 0], 'false,true,false,true': [0.0, 1, 0], 'true': [1.78, 11, 45], 'false,true,false,false': [0.0, 9, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true,true': 'genre(E, G), genre(A, G)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(H, E), movie(H, A)'}, {'true': [1.802, 11, 45], 'false,true,false,false': [2.63e-09, 9, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'false,true,false,true': [5.27e-09, 21, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.15784438775510257, 3.2653618371328135e-17], 'true': [0.15784438775510257, nan], 'true,true': [0.15784438775510257, nan]}, {'': [0.15784438775510182, 3.2653618371328133e-18], 'false': [3.2653618371328133e-18, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -7.401486830834377e-18], 'false,true,false': [0.0, -5.9476233462061954e-18]}, {'': [0.15784438775510165, -1.1428766429964846e-17], 'false': [-1.1428766429964846e-17, nan], 'false,true': [2.3129646346357427e-18, 0.0], 'false,true,false': [0.0, -1.5419764230904951e-18], 'true': [0.15784438775510165, nan], 'true,true': [nan, 0.15784438775510165]}, {'': [0.15784438775510187, 0.0], 'false': [0.0, nan], 'true': [0.15784438775510187, nan], 'false,true': [-2.3129646346357427e-18, -5.551115123125783e-18], 'true,true': [0.15784438775510187, nan]}, {'': [0.15784438775510232, -6.530723674265627e-18], 'false': [-6.530723674265627e-18, nan], 'true,true,false': [3.1579677144893343e-16, 1.6148698540002277e-16], 'true': [0.15784438775510232, nan], 'true,true': [nan, 0.15784438775510232]}, {'': [0.09031422290760564, 1.469412826709766e-17], 'false': [1.469412826709766e-17, nan], 'true': [0.09031422290760564, nan], 'false,true': [0.0, 1.474514954580286e-17], 'true,true': [0.09031422290760564, nan]}, {'': [0.09162047556456931, -8.163404592832033e-19], 'false': [-8.163404592832033e-19, nan], 'false,true': [0.0, -1.3877787807814458e-18], 'false,true,false': [0.0, -1.5419764230904951e-18], 'true,true,false': [-1.5789838572446671e-16, -1.6148698540002277e-16], 'true': [0.09162047556456931, nan], 'true,true': [nan, 0.09162047556456931]}, {'': [0.05531405330938358, 2.44902137784961e-18], 'false': [2.44902137784961e-18, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 1.8503717077085942e-18], 'false,true,false': [0.0, 9.912705577010326e-19]}, {'': [0.05659874368536957, -2.44902137784961e-18], 'false': [-2.44902137784961e-18, nan], 'false,true': [-4.625929269271485e-18, 6.938893903907229e-19], 'false,true,false': [0.0, 0.0]}, {'': [0.05798870636431728, -1.6326809185664067e-18], 'false': [-1.6326809185664067e-18, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -1.3877787807814458e-18], 'false,true,false': [1.32169407693471e-18, 7.709882115452476e-19]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;genre(E, F), genre(B, F).;true;true', '1;false,false;genre(E, H), genre(A, H).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;movie(H, G), movie(H, A).;true;true', '2;false,false;genre(G, I), genre(A, I).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;movie(I, H), movie(I, A).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;true;genre(E, G), genre(B, G).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;false;genre(H, I), genre(A, I).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;movie(J, I), movie(J, B).;true;true', '6;true;genre(E, G), genre(B, G).;true;true', '6;false,false;genre(I, K), genre(B, K).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false;genre(E, F), genre(B, F).;true;true', '7;false,false;genre(E, H), genre(A, H).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;false;movie(F, E), movie(F, A).;true;true', '8;false,false;genre(E, G), genre(A, G).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;genre(E, F), genre(B, F).;true;true', '9;false,false;movie(H, E), movie(H, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783627;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(B, E) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.092691276189261;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(B, E) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( movie(F, G), movie(F, B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1527438580936709;  // std dev = 5,89e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.13400703000801098;  // std dev = 5,27e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(F, D), movie(F, A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.995457
   AUC PR    = 0.994053
   CLL	      = -0.120424
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 2.718 seconds
Total inference time: 1.302 seconds
AUC ROC: 0.995457


Refined model AUC ROC: 0.995457


Dataset: cora->imdb(workedunder), Fold: 4, Type: transfer, Time: 02:29:47
{'Mapping results': {'Generating paths time': 2.445462465286255, 'Finding best mapping': 0.027642488479614258, 'Possible mappings': 126, 'Generating mappings time': 0.06919169425964355, 'Knowledge compiling time': 0.3573427200317383, 'Total time': 2.899646520614624}, 'AUC ROC': 0.995457, 'F1': 0.991176, 'Inference time': 1.302, 'Recall': 1.0, 'CLL': -0.120424, 'Learning time': 4.313, 'Parameter Learning results': {'AUC ROC': 0.975583, 'F1': 0.88535, 'Inference time': 1.071, 'Recall': 0.824926, 'CLL': -0.257007, 'Learning time': 1.595, 'AUC PR': 0.977558, 'Precision': [0.955326, 0.5]}, 'AUC PR': 0.994053, 'Precision': [0.982507, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.991098
   AUC PR    = 0.982507
   CLL	      = -0.113016
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 1.845 seconds
Total inference time: 0.79 seconds
AUC ROC: 0.991098


Dataset: cora->imdb(workedunder), Fold: 4, Type: scratch, Time: 02:29:50
{'AUC ROC': 0.991098, 'F1': 0.991176, 'Inference time': 0.79, 'Recall': 1.0, 'CLL': -0.113016, 'Learning time': 1.845, 'AUC PR': 0.982507, 'Precision': [0.982507, 0.5]}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.41448426246643066
   Generating paths time   = 2.4447524547576904
   Generating mappings time   = 0.06893277168273926
   Possible mappings   = 126
   Finding best mapping   = 0.027885913848876953
   Total time   = 2.9560630321502686


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
0;true,true,false;genre(E, G), genre(B, G).;false;false
0;true;movie(D, A), movie(D, E).;true;false
0;true,true;movie(C, F).;false;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false;movie(D, B), movie(D, E).;true;false
1;false,true,true;genre(E, G), genre(A, G).;false;false
1;false,true;genre(E, F), genre(B, F).;true;true
1;false,true,false;genre(E, H), genre(A, H).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;movie(F, B), movie(F, G).;true;false
2;false,true;movie(H, G), movie(H, A).;false;true
2;false,true,false;genre(G, I), genre(A, I).;false;false
2;true;movie(C, D).;true;false
2;true,true;genre(D, E), genre(A, E).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;movie(H, B), movie(H, I).;true;true
3;false,false;movie(K, A), movie(K, L).;true;false
3;false,true;movie(J, I), movie(J, A).;false;false
3;false,false,true;genre(L, M), genre(A, M).;false;false
3;true,true,false;genre(E, G), genre(A, G).;false;false
3;true;movie(D, B), movie(D, E).;true;false
3;true,true;movie(C, F).;false;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;movie(I, A), movie(I, J).;false;true
4;false,false;movie(K, B), movie(K, L).;true;false
4;true,true,true;genre(B, G).;false;false
4;false,false,true;genre(L, M), genre(A, M).;false;false
4;true,true,false;genre(E, H), genre(B, H).;false;false
4;true;movie(D, B), movie(D, E).;true;false
4;true,true;genre(E, F), genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;movie(H, B), movie(H, I).;true;true
5;false,false;movie(K, A), movie(K, L).;true;false
5;false,true;genre(I, J), genre(A, J).;false;false
5;false,false,true;genre(L, M), genre(A, M).;false;false
5;true,true,false;genre(E, G), genre(B, G).;false;false
5;true;movie(D, A), movie(D, E).;true;false
5;true,true;movie(C, F).;false;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;movie(I, A), movie(I, J).;true;false
6;false,true;movie(K, J), movie(K, B).;false;true
6;true,true,true;genre(B, G).;false;false
6;true,true,false;genre(E, H), genre(B, H).;false;false
6;true;movie(D, B), movie(D, E).;true;false
6;false,true,false;genre(J, L), genre(B, L).;false;false
6;true,true;genre(E, F), genre(A, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false;movie(D, A), movie(D, E).;true;true
7;false,true;genre(E, F), genre(B, F).;true;true
7;false,true,false;genre(E, H), genre(A, H).;false;false
7;false,true,true;genre(A, G).;false;false
7;false,false;movie(I, B), movie(I, J).;true;false
7;false,false,true;genre(J, K), genre(B, K).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false;movie(D, B), movie(D, E).;true;true
8;false,true;movie(F, E), movie(F, A).;false;true
8;false,true,false;genre(E, G), genre(A, G).;false;false
8;false,false,true;genre(I, J), genre(A, J).;false;false
8;false,false;movie(H, A), movie(H, I).;true;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false;movie(D, B), movie(D, E).;true;true
9;false,true;genre(E, F), genre(B, F).;true;true
9;false,true,false;movie(H, E), movie(H, A).;false;false
9;false,true,true;genre(E, G), genre(A, G).;false;false
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,false,true;genre(J, K), genre(A, K).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.661720363670941;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5609350667283574;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 1,05e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return -0.35954383677443996;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.45863798140737855;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(G, I), genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.3365852200471441;  // std dev = 2,928, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.3542743325840277;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return 0.44574480190310195;  // std dev = 8,94e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.05425519809689785;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, A), movie(I, J) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.1929134377247455;  // std dev = 2,659, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( genre(H, I), genre(A, I) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839685;  // std dev = 1,58e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.3182850852576501;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return 0.2980633998996786;  // std dev = 3,65e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.0882018505545715;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, A), movie(I, J) )
%   | then if ( movie(K, J), movie(K, B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(J, L), genre(B, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12143832424293718;  // std dev = 2,517, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333704;  // std dev = 5,27e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09707403973042061;  // std dev = 2,530, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07838930167049551;  // std dev = 2,541, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.985115
   AUC PR    = 0.986236
   CLL	      = -0.259099
   Precision = 0.830049 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.907133


Total learning time: 2.013 seconds
Total inference time: 1.09 seconds
AUC ROC: 0.985115


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, F)'}, {'false': [3.33e-08, 34, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.973, 11, 45], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'true': [2.973, 11, 45], 'false,true,false,false': [1.05e-08, 33, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'movie(H, G), movie(H, A)', 'false,true,false': 'genre(G, I), genre(A, I)', 'true': 'movie(C, D)', 'true,true': 'genre(D, E), genre(A, E)'}, {'true,true,true': [0.0, 1, 0], 'false,true,false,false': [5.27e-09, 8, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 26, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true,false': [2.86, 10, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, B), movie(G, H)', 'true': 'movie(D, B), movie(D, E)', 'false,true': 'movie(I, H), movie(I, A)', 'true,true': 'movie(C, F)'}, {'false,true,false': [0.0, 8, 0], 'true,true,true': [2.928, 11, 45], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 26, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(I, A), movie(I, J)', 'true,true,true': 'genre(B, G)', 'true,true,false': 'genre(E, H), genre(B, H)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'genre(E, F), genre(A, F)'}, {'false,true': [0.0, 34, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false,true': [8.94e-08, 0, 35], 'false,false': [0.0, 0, 0], 'true,true,false,false': [2.236, 10, 10], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(G, B), movie(G, H)', 'true': 'movie(D, A), movie(D, E)', 'false,true': 'genre(H, I), genre(A, I)', 'true,true': 'movie(C, F)'}, {'false,true,false': [1.58e-08, 33, 0], 'true,true,true': [2.659, 11, 45], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(I, A), movie(I, J)', 'false,true': 'movie(K, J), movie(K, B)', 'true,true,true': 'genre(B, G)', 'true,true,false': 'genre(E, H), genre(B, H)', 'true': 'movie(D, B), movie(D, E)', 'false,true,false': 'genre(J, L), genre(B, L)', 'true,true': 'genre(E, F), genre(A, F)'}, {'true,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 8, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 26, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true,false,true': [3.65e-08, 0, 35], 'false,false': [0.0, 0, 0], 'true,true,false,false': [2.236, 10, 10], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 2, 0], 'true': [2.517, 11, 45], 'false,true,false,false': [5.27e-09, 32, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'false,true,true': [0.0, 26, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [2.53, 11, 45], 'false,true,false,false': [0.0, 8, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,false': 'movie(G, E), movie(G, A)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 26, 0], 'true': [2.541, 11, 45], 'false,true,false,false': [0.0, 8, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.15784438775510257, 3.2653618371328135e-17], 'true': [0.15784438775510257, nan], 'true,true': [0.15784438775510257, nan]}, {'': [0.15784438775510182, 3.2653618371328133e-18], 'false': [3.2653618371328133e-18, nan], 'false,true': [nan, -3.2653618371328133e-18], 'false,true,false': [0.0, 3.3643121958338078e-18]}, {'': [0.15784438775510165, -1.1428766429964846e-17], 'false': [-1.1428766429964846e-17, nan], 'false,true': [-2.135044278125301e-18, -1.734723475976807e-18], 'false,true,false': [nan, 3.469446951953614e-18], 'true': [0.15784438775510165, nan], 'true,true': [0.0, 0.14876033057851226]}, {'': [0.15305054260871806, 0.0], 'false': [0.0, nan], 'true': [0.15305054260871806, nan], 'false,true': [-2.135044278125301e-18, -5.204170427930421e-18], 'true,true': [0.15305054260871806, nan]}, {'': [0.1528065373613717, -6.530723674265627e-18], 'false': [-6.530723674265627e-18, nan], 'true,true,true': [nan, 0.0], 'true,true,false': [2.283887364943179e-16, 0.25], 'true': [0.1528065373613717, nan], 'true,true': [0.0, 0.14876033057851257]}, {'': [0.12626340006925668, 1.469412826709766e-17], 'false': [1.469412826709766e-17, nan], 'true': [0.12626340006925668, nan], 'false,true': [0.0, 7.569702440626067e-18], 'true,true': [0.12626340006925668, nan]}, {'': [0.1271668837449678, -2.44902137784961e-18], 'false': [-2.44902137784961e-18, nan], 'false,true': [-2.135044278125301e-18, 0.0], 'true,true,true': [nan, 0.0], 'true,true,false': [3.8064789415719653e-17, 0.25000000000000006], 'true': [0.1271668837449678, nan], 'false,true,false': [nan, 0.0], 'true,true': [0.0, 0.12543490598212872]}, {'': [0.11316928681197258, 2.44902137784961e-18], 'false': [2.44902137784961e-18, nan], 'false,true': [nan, 1.6326809185664067e-18], 'false,true,false': [0.0, 8.673617379884035e-19]}, {'': [0.1143052677579285, -2.44902137784961e-18], 'false': [-2.44902137784961e-18, nan], 'false,true': [-4.803849625781927e-18, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.11533700820007506, -1.6326809185664067e-18], 'false': [-1.6326809185664067e-18, nan], 'false,true': [nan, -8.163404592832033e-19], 'false,true,false': [-1.6012832085939759e-18, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;genre(E, G), genre(A, G).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;movie(H, G), movie(H, A).;true;true', '2;true;genre(D, E), genre(A, E).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;movie(I, H), movie(I, A).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;true;genre(E, F), genre(A, F).;true;true', '4;true,false;genre(E, H), genre(B, H).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;false;genre(H, I), genre(A, I).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;movie(K, J), movie(K, B).;true;true', '6;true;genre(E, F), genre(A, F).;true;true', '6;true,false;genre(E, H), genre(B, H).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false;genre(E, G), genre(A, G).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;false;movie(F, E), movie(F, A).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;movie(G, E), movie(G, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(F, G), movie(F, A) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(D, F), genre(B, F) )
%   | | then if ( female(A) )
%   | | | then return 0.32071184716014967;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.3207118471601496;  // std dev = 2,11e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( actor(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926098;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(D, F), genre(B, F) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.20975771563253562;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( actor(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( movie(G, H), movie(G, B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 4,56e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.1340070300080109;  // std dev = 4,56e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.995549
   AUC PR    = 0.991176
   CLL	      = -0.108255
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 3.561 seconds
Total inference time: 1.736 seconds
AUC ROC: 0.995549


Refined model AUC ROC: 0.995549


Dataset: cora->imdb(workedunder), Fold: 5, Type: transfer, Time: 02:30:02
{'Mapping results': {'Generating paths time': 2.4447524547576904, 'Finding best mapping': 0.027885913848876953, 'Possible mappings': 126, 'Generating mappings time': 0.06893277168273926, 'Knowledge compiling time': 0.41448426246643066, 'Total time': 2.9560630321502686}, 'AUC ROC': 0.995549, 'F1': 0.991176, 'Inference time': 1.736, 'Recall': 1.0, 'CLL': -0.108255, 'Learning time': 5.574, 'Parameter Learning results': {'AUC ROC': 0.985115, 'F1': 0.907133, 'Inference time': 1.09, 'Recall': 1.0, 'CLL': -0.259099, 'Learning time': 2.013, 'AUC PR': 0.986236, 'Precision': [0.830049, 0.5]}, 'AUC PR': 0.991176, 'Precision': [0.982507, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1352095945470413;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.11622033579851573;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */


Results
   AUC ROC   = 0.935462
   AUC PR    = 0.889597
   CLL	      = -0.23826
   Precision = 0.877604 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.934813


Total learning time: 1.967 seconds
Total inference time: 0.805 seconds
AUC ROC: 0.935462


Dataset: cora->imdb(workedunder), Fold: 5, Type: scratch, Time: 02:30:05
{'AUC ROC': 0.935462, 'F1': 0.934813, 'Inference time': 0.805, 'Recall': 1.0, 'CLL': -0.23826, 'Learning time': 1.967, 'AUC PR': 0.889597, 'Precision': [0.877604, 0.5]}


Starting experiment #3 for cora->imdb(workedunder)

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.733148935099512;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.4675239350995118;  // std dev = 3,903, 64,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | | | else return 0.2672398441904202;  // std dev = 3,994, 66,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=27 */
%   | else return 0.4104803339388107;  // std dev = 0,497, 4.997,000 (wgt'ed) examples reached here.  /* #neg=2.237 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordvenue(A, J) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.15973623668681391;  // std dev = 0,459, 63,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, A) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.15444523139580865;  // std dev = 3,355, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.13907136696533606;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.35312583665063013;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5076382465303586;  // std dev = 1,159, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.14726037789898674;  // std dev = 0,030, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.13305220597975384;  // std dev = 3,251, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.1375708245419049;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.11208062846347312;  // std dev = 3,187, 51,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else return 0.12128505347454718;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.29075359500264536;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.11195692258949436;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.18167321293445243;  // std dev = 1,596, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.10894384450175015;  // std dev = 3,253, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else return 0.10412964340818473;  // std dev = 0,449, 537,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=151 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.4791941164761829;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.2750296681523109;  // std dev = 3,903, 64,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | | | else return 0.1177500484213939;  // std dev = 3,994, 66,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=27 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.26913707781921;  // std dev = 3,994, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return 0.10679941548154684;  // std dev = 3,928, 63,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=27 */
%   | | else return 0.2316380115608748;  // std dev = 0,497, 4.868,000 (wgt'ed) examples reached here.  /* #neg=2.174 #pos=2.694 */
%   else return 0.08807797815373124;  // std dev = 0,448, 606,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=170 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3609480804696547;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | else return 0.17763321964029744;  // std dev = 0,497, 5.127,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.826 */
%   else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, A) )
%   | | then if ( samebib(G, H), venue(H, B) )
%   | | | then return 0.4411311359395242;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.2063820653019822;  // std dev = 0,106, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(I, F), venue(I, B) )
%   | | | then return -0.17596407780702705;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07483514859569482;  // std dev = 3,248, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return -0.014347877059051634;  // std dev = 0,834, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.08200535541563372;  // std dev = 3,334, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.07463255443196723;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), venue(E, A) )
%   | | then return 0.39719400723980103;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2392992703976956;  // std dev = 0,365, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.157300583297318;  // std dev = 4,028, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.034322655780433274;  // std dev = 3,957, 64,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   | | else return 0.13623182634258094;  // std dev = 0,497, 4.996,000 (wgt'ed) examples reached here.  /* #neg=2.236 #pos=2.760 */
%   else return 0.06144740506483339;  // std dev = 0,447, 606,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=170 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.2093305915173833;  // std dev = 0,328, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.13214974920909564;  // std dev = 3,980, 70,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=41 */
%   | | | else return 0.012997557371613159;  // std dev = 3,909, 60,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=25 */
%   | else return 0.10270409202094055;  // std dev = 0,497, 4.997,000 (wgt'ed) examples reached here.  /* #neg=2.237 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.03510385961553218;  // std dev = 0,363, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.05603862319140044;  // std dev = 0,444, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, B) )
%   | | | then return -0.05175018202475062;  // std dev = 0,796, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.05290638855167874;  // std dev = 3,345, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return 0.051461221279402565;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0771085333101496;  // std dev = 0,496, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.11995861324538053;  // std dev = 0,030, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.09116758742368795;  // std dev = 1,458, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.04732091256637721;  // std dev = 3,242, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.05637198360507303;  // std dev = 1,336, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.03585269724049911;  // std dev = 3,168, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.04223602665579198;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.14891233261702339;  // std dev = 0,329, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.08752604133887193;  // std dev = 3,856, 64,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | | | else return -0.007707304563740675;  // std dev = 4,025, 66,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=27 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.08390861100345824;  // std dev = 4,062, 71,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=41 */
%   | | | else return -0.020978191185074074;  // std dev = 3,847, 58,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=25 */
%   | | else return 0.058490987628452104;  // std dev = 0,497, 4.868,000 (wgt'ed) examples reached here.  /* #neg=2.174 #pos=2.694 */
%   else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | then return 0.03805422629311948;  // std dev = 0,432, 68,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return 0.02451655933642259;  // std dev = 0,441, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else return 0.03447661238624261;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.043452763022883964;  // std dev = 0,496, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else return 0.027546710378487414;  // std dev = 0,447, 606,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=170 */


Predicates from source: ['samevenue(venue,venue).', 'author(class,author).', 'haswordauthor(author,word).', 'samebib(class,class).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.39493799209594727
   Generating paths time   = 2.18454647064209
   Generating mappings time   = 0.04825735092163086
   Possible mappings   = 126
   Finding best mapping   = 0.021978378295898438
   Total time   = 2.6497256755828857


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;movie(J, I), movie(J, A).;false;false
0;false,false;movie(K, A), movie(K, L).;true;false
0;true,true;movie(C, F).;false;true
0;true,true,false;genre(E, G), genre(A, G).;false;false
0;false;movie(H, B), movie(H, I).;true;true
0;false,false,true;genre(L, M), genre(A, M).;false;false
0;true;movie(D, B), movie(D, E).;true;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false,true,false;movie(H, E), movie(H, B).;false;false
1;false,true;genre(E, F), genre(B, F).;true;true
1;false,false;movie(I, B), movie(I, J).;true;false
1;false;movie(D, A), movie(D, E).;true;true
1;false,false,true;genre(J, K), genre(A, K).;false;false
1;false,true,true;genre(A, G).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true,false;genre(E, G), genre(A, G).;false;false
2;false,true;movie(F, E), movie(F, A).;false;true
2;false;movie(D, B), movie(D, E).;true;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
3;true,true;movie(C, F).;false;true
3;true,false,true;genre(I, J), genre(B, J).;false;false
3;true,false;movie(H, A), movie(H, I).;true;false
3;true,true,false;genre(E, G), genre(A, G).;false;false
3;true;movie(D, B), movie(D, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;movie(C, D).;false;false
4;false,true,false;genre(F, I), genre(B, I).;false;false
4;false,true;genre(F, G), genre(A, G).;true;true
4;false,false;movie(J, A), movie(J, K).;true;false
4;false;movie(E, B), movie(E, F).;true;true
4;false,false,true;genre(K, L), genre(A, L).;false;false
4;false,true,true;genre(B, H).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
5;true,false;movie(F, A), movie(F, G).;true;false
5;true,true;genre(D, E), genre(A, E).;false;false
5;true,false,true;genre(G, H), genre(B, H).;false;false
5;true;movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(I, J), genre(A, J).;false;false
6;false,false;movie(K, B), movie(K, L).;true;false
6;true,true;movie(C, F).;false;true
6;true,true,false;genre(E, G), genre(B, G).;false;false
6;false;movie(H, A), movie(H, I).;true;true
6;false,false,true;genre(L, M), genre(B, M).;false;false
6;true;movie(D, B), movie(D, E).;true;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false,true,false;genre(E, G), genre(A, G).;false;false
7;false,true;movie(F, E), movie(F, A).;false;true
7;false,false;movie(H, A), movie(H, I).;true;false
7;false;movie(D, B), movie(D, E).;true;true
7;false,false,true;genre(I, J), genre(B, J).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true,true;movie(C, E).;false;true
8;false,false;movie(L, B), movie(L, M).;false;false
8;true,false,true;genre(H, I), genre(A, I).;false;false
8;true,false;movie(G, A), movie(G, H).;true;false
8;true,true,false;genre(E, F), genre(A, F).;false;false
8;false;movie(J, A), movie(J, K).;false;true
8;true;movie(D, B), movie(D, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.6697431379980635;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.56748050185077;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.44868889566071973;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.3400851726375641;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 1,29e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then return 0.25533402946634376;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B), movie(E, F) )
%   | then if ( genre(F, G), genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(F, I), genre(B, I) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return -0.618062295863275;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.20546711590143066;  // std dev = 3,144, 68,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.14922938711093006;  // std dev = 3,204, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then if ( genre(H, I), genre(A, I) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11678503386235697;  // std dev = 3,205, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.09265859860118675;  // std dev = 3,206, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07436579703419045;  // std dev = 3,207, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else return -0.06419184008202625;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */


Results
   AUC ROC   = 0.897239
   AUC PR    = 0.829517
   CLL	      = -0.324655
   Precision = 0.804938 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.891929


Total learning time: 1.554 seconds
Total inference time: 1.034 seconds
AUC ROC: 0.897239


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'false,true': 'movie(I, H), movie(I, A)', 'false': 'movie(G, B), movie(G, H)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false': [2.58e-08, 29, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.248, 13, 56], 'false,true,true': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(H, E), movie(H, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)'}, {'false,true,false,true': [7.45e-09, 14, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,false': [0.0, 28, 0], 'false,false': [0.0, 0, 0], 'true': [3.248, 13, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 2, 0], 'false,true,false,false': [0.0, 27, 0], 'true': [3.248, 13, 56], 'false,false': [0.0, 0, 0], 'false,true,true': [1.18e-08, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'true': 'movie(D, B), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.248, 13, 56], 'false': [1.29e-08, 43, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(F, I), genre(B, I)', 'false,true': 'genre(F, G), genre(A, G)', 'false,true,true': 'genre(B, H)', 'false': 'movie(E, B), movie(E, F)', 'true': 'movie(C, D)'}, {'false,true,false,true': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [3.248, 13, 56], 'false,true,true,false': [0.0, 2, 0], 'false,true,false,false': [0.0, 40, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(D, E), genre(A, E)', 'true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [3.144, 12, 56], 'true,true,true': [0.0, 1, 0], 'false': [2.24e-08, 43, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'false,true': 'genre(H, I), genre(A, I)', 'false': 'movie(G, A), movie(G, H)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 41, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.204, 13, 56], 'false,true,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 2, 0], 'false,true,false,false': [0.0, 27, 0], 'true': [3.205, 13, 56], 'false,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, E)', 'false': 'movie(F, A), movie(F, G)', 'true': 'movie(D, B), movie(D, E)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [7.45e-09, 43, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [3.206, 13, 56], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 43, 0], 'true': [3.207, 13, 56]}]]
[{'': [0.1529090527200164, 4.6474452193611206e-17], 'false,true': [-1.1895246692412391e-17, 2.2970131543968756e-17], 'true,true': [0.1529090527200164, nan], 'false': [4.6474452193611206e-17, nan], 'true': [0.1529090527200164, nan]}, {'': [0.15290905272001531, 3.0982968129074136e-17], 'false,true,false': [3.96508223080413e-18, -5.9476233462061954e-18], 'false,true': [0.0, 2.9077269692563625e-17], 'false': [3.0982968129074136e-17, nan], 'false,true,true': [nan, 0.0]}, {'': [0.15290905272001734, 2.581914010756178e-18], 'false,true,false': [0.0, -4.11193712824132e-18], 'false,true': [9.912705577010326e-18, -7.656710514656252e-18], 'false': [2.581914010756178e-18, nan]}, {'': [0.15290905272001654, 3.872871016134267e-18], 'true,true': [0.15290905272001654, nan], 'true': [0.15290905272001654, nan]}, {'': [0.1529090527200172, -3.872871016134267e-18], 'true': [0.1529090527200172, nan], 'false,true,false': [0.0, -1.3877787807814458e-18], 'false,true': [0.0, -4.06179155350667e-18], 'false': [-3.872871016134267e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.15290905272001698, 1.1618613048402802e-17], 'true,true': [0.0, 0.14532871972318356], 'true': [0.15290905272001698, nan]}, {'': [0.14878644595493873, 0.0], 'false,true': [0.0, 0.0], 'true,true': [0.14878644595493873, nan], 'false': [0.0, nan], 'true': [0.14878644595493873, nan]}, {'': [0.14887380105047254, 3.2273925134452225e-18], 'false,true,false': [0.0, 0.0], 'false,true': [9.912705577010326e-19, 1.914177628664063e-18], 'false': [3.2273925134452225e-18, nan]}, {'': [0.1489657899278217, 1.290957005378089e-18], 'true,true': [0.1489657899278217, nan], 'false': [1.290957005378089e-18, nan], 'true': [0.1489657899278217, nan]}, {'': [0.1490523203310754, -1.9364355080671335e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false;movie(I, H), movie(I, A).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false,false;movie(H, E), movie(H, B).;true;true', '1;false;genre(E, F), genre(B, F).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false,false;genre(E, G), genre(A, G).;true;true', '2;false;movie(F, E), movie(F, A).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false,false;genre(F, I), genre(B, I).;true;true', '4;false;genre(F, G), genre(A, G).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;true;genre(D, E), genre(A, E).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;genre(H, I), genre(A, I).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false,false;genre(E, G), genre(A, G).;true;true', '7;false;movie(F, E), movie(F, A).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( movie(F, D), movie(F, B) )
%   | | then return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( female(A) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(D, F), genre(B, F) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926101;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( director(B) )
%   | | then return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08518475138839687;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06842697784420272;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1340070300080109;  // std dev = 5,89e-09, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06419184008202618;  // std dev = 9,31e-10, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 9,31e-10, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06419184008202619;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.997417
   AUC PR    = 0.996746
   CLL	      = -0.112288
   Precision = 0.981928 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990881


Total learning time: 3.383 seconds
Total inference time: 1.503 seconds
AUC ROC: 0.997417


Refined model AUC ROC: 0.997417


Dataset: cora->imdb(workedunder), Fold: 1, Type: transfer, Time: 02:08:19
{'AUC ROC': 0.997417, 'Recall': 1.0, 'Inference time': 1.503, 'F1': 0.990881, 'AUC PR': 0.996746, 'Precision': [0.981928, 0.5], 'Parameter Learning results': {'AUC ROC': 0.897239, 'Recall': 1.0, 'Inference time': 1.034, 'F1': 0.891929, 'AUC PR': 0.829517, 'Precision': [0.804938, 0.5], 'Learning time': 1.554, 'CLL': -0.324655}, 'Learning time': 4.937, 'CLL': -0.112288, 'Mapping results': {'Generating mappings time': 0.04825735092163086, 'Total time': 2.6497256755828857, 'Possible mappings': 126, 'Finding best mapping': 0.021978378295898438, 'Generating paths time': 2.18454647064209, 'Knowledge compiling time': 0.39493799209594727}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.6909105759500754;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109546;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5354626841427582;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.4024026492217927;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4175135841583101;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.30700250684980995;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3207118471601494;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.24152182581632603;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.25517224256948956;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1958080954961511;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.20975771563253548;  // std dev = 3,33e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1628100390760043;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1770964977452775;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13816881840032139;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.11920579263429053;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */


Results
   AUC ROC   = 0.920833
   AUC PR    = 0.860033
   CLL	      = -0.244754
   Precision = 0.873995 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932761


Total learning time: 1.996 seconds
Total inference time: 0.608 seconds
AUC ROC: 0.920833


Dataset: cora->imdb(workedunder), Fold: 1, Type: scratch, Time: 02:08:21
{'AUC ROC': 0.920833, 'Recall': 1.0, 'Inference time': 0.608, 'F1': 0.932761, 'AUC PR': 0.860033, 'Precision': [0.873995, 0.5], 'Learning time': 1.996, 'CLL': -0.244754}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.3496863842010498
   Generating paths time   = 2.324239730834961
   Generating mappings time   = 0.06067466735839844
   Possible mappings   = 126
   Finding best mapping   = 0.02803182601928711
   Total time   = 2.762639284133911


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;movie(J, I), movie(J, A).;false;false
0;false,false;movie(K, A), movie(K, L).;true;false
0;true,true;movie(C, F).;false;true
0;true,true,false;genre(E, G), genre(A, G).;false;false
0;false;movie(H, B), movie(H, I).;true;true
0;false,false,true;genre(L, M), genre(A, M).;false;false
0;true;movie(D, B), movie(D, E).;true;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false,true,false;movie(H, E), movie(H, B).;false;false
1;false,true;genre(E, F), genre(B, F).;true;true
1;false,false;movie(I, B), movie(I, J).;true;false
1;false;movie(D, A), movie(D, E).;true;true
1;false,false,true;genre(J, K), genre(A, K).;false;false
1;false,true,true;genre(A, G).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true,false;genre(E, G), genre(A, G).;false;false
2;false,true;movie(F, E), movie(F, A).;false;true
2;false;movie(D, B), movie(D, E).;true;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
3;true,true;movie(C, F).;false;true
3;true,false,true;genre(I, J), genre(B, J).;false;false
3;true,false;movie(H, A), movie(H, I).;true;false
3;true,true,false;genre(E, G), genre(A, G).;false;false
3;true;movie(D, B), movie(D, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;movie(C, D).;false;false
4;false,true,false;genre(F, I), genre(B, I).;false;false
4;false,true;genre(F, G), genre(A, G).;true;true
4;false,false;movie(J, A), movie(J, K).;true;false
4;false;movie(E, B), movie(E, F).;true;true
4;false,false,true;genre(K, L), genre(A, L).;false;false
4;false,true,true;genre(B, H).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
5;true,false;movie(F, A), movie(F, G).;true;false
5;true,true;genre(D, E), genre(A, E).;false;false
5;true,false,true;genre(G, H), genre(B, H).;false;false
5;true;movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(I, J), genre(A, J).;false;false
6;false,false;movie(K, B), movie(K, L).;true;false
6;true,true;movie(C, F).;false;true
6;true,true,false;genre(E, G), genre(B, G).;false;false
6;false;movie(H, A), movie(H, I).;true;true
6;false,false,true;genre(L, M), genre(B, M).;false;false
6;true;movie(D, B), movie(D, E).;true;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false,true,false;genre(E, G), genre(A, G).;false;false
7;false,true;movie(F, E), movie(F, A).;false;true
7;false,false;movie(H, A), movie(H, I).;true;false
7;false;movie(D, B), movie(D, E).;true;true
7;false,false,true;genre(I, J), genre(B, J).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true,true;movie(C, E).;false;true
8;false,false;movie(L, B), movie(L, M).;false;false
8;true,false,true;genre(H, I), genre(A, I).;false;false
8;true,false;movie(G, A), movie(G, H).;true;false
8;true,true,false;genre(E, F), genre(A, F).;false;false
8;false;movie(J, A), movie(J, K).;false;true
8;true;movie(D, B), movie(D, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.6419327188832966;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.544765136174259;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4324774812776738;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.11231637819360636;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.3288671735260793;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then return 0.24684060404597968;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B), movie(E, F) )
%   | then if ( genre(F, G), genre(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(F, H), genre(B, H) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return -0.5974576548075587;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.21944375364314483;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.14294031426592216;  // std dev = 3,423, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then if ( genre(H, I), genre(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109179;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11095600291780018;  // std dev = 3,425, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07324622576333704;  // std dev = 1,18e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.08717340677865949;  // std dev = 3,427, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then return -0.06842697784420271;  // std dev = 7,45e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.069191250560482;  // std dev = 3,429, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else return -0.06419184008202625;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */


Results
   AUC ROC   = 0.898148
   AUC PR    = 0.830769
   CLL	      = -0.33417
   Precision = 0.81 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.895028


Total learning time: 1.779 seconds
Total inference time: 1.1 seconds
AUC ROC: 0.898148


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'false,true': 'movie(I, H), movie(I, A)', 'false': 'movie(G, B), movie(G, H)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.541, 16, 58], 'false,true,true': [4.47e-08, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(H, E), movie(H, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)'}, {'false,true,false,true': [0.0, 40, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true': [3.541, 16, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.541, 16, 58], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'true': 'movie(D, B), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.541, 16, 58], 'false': [0.0, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(F, H), genre(B, H)', 'false,true': 'genre(F, G), genre(A, G)', 'false': 'movie(E, B), movie(E, F)', 'true': 'movie(C, D)'}, {'false,true,false,true': [0.0, 4, 0], 'true,true': [3.541, 16, 58], 'false,true,false,false': [0.0, 38, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(D, E), genre(A, E)', 'true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [3.259, 13, 58], 'true,true,true': [0.0, 3, 0], 'false': [2.24e-08, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'false,true': 'genre(H, I), genre(A, I)', 'false': 'movie(G, A), movie(G, H)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 42, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.423, 16, 58], 'false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.425, 16, 58], 'false,false': [0.0, 0, 0], 'false,true,true': [1.18e-08, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, E)', 'false': 'movie(F, A), movie(F, G)', 'true': 'movie(D, B), movie(D, E)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [7.45e-09, 42, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [3.427, 16, 58], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 42, 0], 'true': [3.429, 16, 58]}]]
[{'': [0.16946676406135816, 4.7580986769649563e-17], 'false,true': [4.7580986769649563e-17, nan], 'true,true': [0.16946676406135816, nan], 'false': [4.7580986769649563e-17, nan], 'true': [0.16946676406135816, nan]}, {'': [0.1694667640613594, -2.6433881538694202e-17], 'false,true,false': [-2.4980018054066023e-17, nan], 'false,true': [0.0, -2.4980018054066023e-17], 'false': [-2.6433881538694202e-17, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1694667640613589, 0.0], 'false,true': [0.0, nan], 'false': [0.0, nan]}, {'': [0.16946676406135908, -2.64338815386942e-18], 'true,true': [0.16946676406135908, nan], 'true': [0.16946676406135908, nan]}, {'': [0.1694667640613588, -1.3216940769347101e-17], 'false,true,false': [-1.734723475976807e-18, -1.1686558153949016e-17], 'false,true': [nan, -1.3216940769347101e-17], 'false': [-1.3216940769347101e-17, nan], 'true': [0.1694667640613588, nan]}, {'': [0.16946676406135874, 1.1895246692412391e-17], 'true,true': [0.0, 0.14957349732196004], 'true': [0.16946676406135874, nan]}, {'': [0.15834152530987167, 0.0], 'false,true': [nan, 0.0], 'true,true': [0.15834152530987167, nan], 'false': [0.0, nan], 'true': [0.15834152530987167, nan]}, {'': [0.15852144590076023, 3.3042351923367752e-18], 'false,true': [3.3042351923367752e-18, nan], 'false': [3.3042351923367752e-18, nan]}, {'': [0.1587210269942703, 1.32169407693471e-18], 'true,true': [0.1587210269942703, nan], 'false': [1.32169407693471e-18, nan], 'true': [0.1587210269942703, nan]}, {'': [0.15891221001461453, -1.982541115402065e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;genre(E, F), genre(B, F).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;genre(F, H), genre(B, H).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;true;genre(D, E), genre(A, E).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.2551722425694892;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.2551722425694892;  // std dev = 3,65e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.08518475138839686;  // std dev = 2,08e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109172;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1340070300080111;  // std dev = 2,63e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06419184008202622;  // std dev = 9,31e-10, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.99537
   AUC PR    = 0.990826
   CLL	      = -0.112397
   Precision = 0.981818 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990826


Total learning time: 2.526 seconds
Total inference time: 1.064 seconds
AUC ROC: 0.99537


Refined model AUC ROC: 0.99537


Dataset: cora->imdb(workedunder), Fold: 2, Type: transfer, Time: 02:08:31
{'AUC ROC': 0.99537, 'Recall': 1.0, 'Inference time': 1.064, 'F1': 0.990826, 'AUC PR': 0.990826, 'Precision': [0.981818, 0.5], 'Parameter Learning results': {'AUC ROC': 0.898148, 'Recall': 1.0, 'Inference time': 1.1, 'F1': 0.895028, 'AUC PR': 0.830769, 'Precision': [0.81, 0.5], 'Learning time': 1.779, 'CLL': -0.33417}, 'Learning time': 4.305, 'CLL': -0.112397, 'Mapping results': {'Generating mappings time': 0.06067466735839844, 'Total time': 2.762639284133911, 'Possible mappings': 126, 'Finding best mapping': 0.02803182601928711, 'Generating paths time': 2.324239730834961, 'Knowledge compiling time': 0.3496863842010498}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.990741
   AUC PR    = 0.981818
   CLL	      = -0.113754
   Precision = 0.981818 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990826


Total learning time: 1.892 seconds
Total inference time: 0.94 seconds
AUC ROC: 0.990741


Dataset: cora->imdb(workedunder), Fold: 2, Type: scratch, Time: 02:08:34
{'AUC ROC': 0.990741, 'Recall': 1.0, 'Inference time': 0.94, 'F1': 0.990826, 'AUC PR': 0.981818, 'Precision': [0.981818, 0.5], 'Learning time': 1.892, 'CLL': -0.113754}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.3574211597442627
   Generating paths time   = 1.9472200870513916
   Generating mappings time   = 0.04877662658691406
   Possible mappings   = 126
   Finding best mapping   = 0.021380186080932617
   Total time   = 2.3748037815093994


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;movie(J, I), movie(J, A).;false;false
0;false,false;movie(K, A), movie(K, L).;true;false
0;true,true;movie(C, F).;false;true
0;true,true,false;genre(E, G), genre(A, G).;false;false
0;false;movie(H, B), movie(H, I).;true;true
0;false,false,true;genre(L, M), genre(A, M).;false;false
0;true;movie(D, B), movie(D, E).;true;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false,true,false;movie(H, E), movie(H, B).;false;false
1;false,true;genre(E, F), genre(B, F).;true;true
1;false,false;movie(I, B), movie(I, J).;true;false
1;false;movie(D, A), movie(D, E).;true;true
1;false,false,true;genre(J, K), genre(A, K).;false;false
1;false,true,true;genre(A, G).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true,false;genre(E, G), genre(A, G).;false;false
2;false,true;movie(F, E), movie(F, A).;false;true
2;false;movie(D, B), movie(D, E).;true;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
3;true,true;movie(C, F).;false;true
3;true,false,true;genre(I, J), genre(B, J).;false;false
3;true,false;movie(H, A), movie(H, I).;true;false
3;true,true,false;genre(E, G), genre(A, G).;false;false
3;true;movie(D, B), movie(D, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;movie(C, D).;false;false
4;false,true,false;genre(F, I), genre(B, I).;false;false
4;false,true;genre(F, G), genre(A, G).;true;true
4;false,false;movie(J, A), movie(J, K).;true;false
4;false;movie(E, B), movie(E, F).;true;true
4;false,false,true;genre(K, L), genre(A, L).;false;false
4;false,true,true;genre(B, H).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
5;true,false;movie(F, A), movie(F, G).;true;false
5;true,true;genre(D, E), genre(A, E).;false;false
5;true,false,true;genre(G, H), genre(B, H).;false;false
5;true;movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(I, J), genre(A, J).;false;false
6;false,false;movie(K, B), movie(K, L).;true;false
6;true,true;movie(C, F).;false;true
6;true,true,false;genre(E, G), genre(B, G).;false;false
6;false;movie(H, A), movie(H, I).;true;true
6;false,false,true;genre(L, M), genre(B, M).;false;false
6;true;movie(D, B), movie(D, E).;true;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false,true,false;genre(E, G), genre(A, G).;false;false
7;false,true;movie(F, E), movie(F, A).;false;true
7;false,false;movie(H, A), movie(H, I).;true;false
7;false;movie(D, B), movie(D, E).;true;true
7;false,false,true;genre(I, J), genre(B, J).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true,true;movie(C, E).;false;true
8;false,false;movie(L, B), movie(L, M).;false;false
8;true,false,true;genre(H, I), genre(A, I).;false;false
8;true,false;movie(G, A), movie(G, H).;true;false
8;true,true,false;genre(E, F), genre(A, F).;false;false
8;false;movie(J, A), movie(J, K).;false;true
8;true;movie(D, B), movie(D, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.6709343232273629;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.14185106490048768;  // std dev = 6,66e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5684518199673092;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.12544463852839138;  // std dev = 2,63e-09, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.12544463852839133;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4493799511287352;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360628;  // std dev = 6,14e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.3405652271651408;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783642;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then return 0.25570251799533067;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B), movie(E, F) )
%   | then if ( genre(F, G), genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( genre(F, I), genre(B, I) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return -0.6189358360189746;  // std dev = 2,11e-08, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.22466605971562176;  // std dev = 5,276, 211,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 6,05e-08, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.14989384590214538;  // std dev = 5,567, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then if ( genre(H, I), genre(A, I) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.07877675473109168;  // std dev = 4,47e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11746360598155194;  // std dev = 5,572, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.09331932923960552;  // std dev = 5,577, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then return -0.06842697784420264;  // std dev = 6,23e-08, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0749923358191452;  // std dev = 5,581, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else return -0.06419184008202626;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */


Results
   AUC ROC   = 0.887255
   AUC PR    = 0.816
   CLL	      = -0.332235
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 3.556 seconds
Total inference time: 0.929 seconds
AUC ROC: 0.887255


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'false,true': 'movie(I, H), movie(I, A)', 'false': 'movie(G, B), movie(G, H)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false': [6.66e-08, 115, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.773, 41, 178], 'false,true,true': [1.05e-08, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(H, E), movie(H, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)'}, {'false,true,false,true': [0.0, 18, 0], 'false,true,true,true': [2.63e-09, 2, 0], 'false,true,true,false': [0.0, 8, 0], 'false,true,false,false': [0.0, 109, 0], 'false,false': [0.0, 0, 0], 'true': [5.773, 41, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [7.45e-09, 11, 0], 'false,true,false,false': [6.14e-08, 104, 0], 'true': [5.773, 41, 178], 'false,false': [0.0, 0, 0], 'false,true,true': [1.29e-08, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'true': 'movie(D, B), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.773, 41, 178], 'false': [0.0, 137, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(F, I), genre(B, I)', 'false,true': 'genre(F, G), genre(A, G)', 'false,true,true': 'genre(B, H)', 'false': 'movie(E, B), movie(E, F)', 'true': 'movie(C, D)'}, {'false,true,false,true': [0.0, 17, 0], 'false,true,true,true': [0.0, 2, 0], 'true,true': [5.773, 41, 178], 'false,true,true,false': [0.0, 15, 0], 'false,true,false,false': [0.0, 103, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(D, E), genre(A, E)', 'true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [5.276, 33, 178], 'true,true,true': [2.11e-08, 8, 0], 'false': [6.05e-08, 137, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'false,true': 'genre(H, I), genre(A, I)', 'false': 'movie(G, A), movie(G, H)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false': [4.47e-08, 115, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.567, 41, 178], 'false,true,true': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [2.63e-09, 11, 0], 'false,true,false,false': [0.0, 104, 0], 'true': [5.572, 41, 178], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, E)', 'false': 'movie(F, A), movie(F, G)', 'true': 'movie(D, B), movie(D, E)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [6.23e-08, 137, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [5.577, 41, 178], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 137, 0], 'true': [5.581, 41, 178]}]]
[{'': [0.15216530097371384, -6.807206866314829e-17], 'false,true': [5.046468293750712e-18, 3.8616453030440226e-17], 'true,true': [0.15216530097371384, nan], 'false': [-6.807206866314829e-17, nan], 'true': [0.15216530097371384, nan]}, {'': [0.15216530097371034, -6.4830541583950745e-18], 'false,true,false': [0.0, -8.148425868808489e-18], 'false,true': [-2.7755575615628915e-18, -1.049029629567077e-17], 'false': [-6.4830541583950745e-18, nan], 'false,true,true': [3.469446951953614e-18, -3.469446951953614e-18]}, {'': [0.15216530097370537, 7.77966499007409e-17], 'false,true,false': [5.046468293750712e-18, 3.629575272813012e-17], 'false,true': [7.569702440626067e-18, 6.950961545479241e-17], 'false': [7.77966499007409e-17, nan]}, {'': [0.15216530097370667, -4.3760615569166756e-17], 'true,true': [0.15216530097370667, nan], 'true': [0.15216530097370667, nan]}, {'': [0.1521653009737077, 4.538137910876552e-17], 'false,true,false': [-1.6326809185664067e-18, -4.311545726699637e-18], 'false,true': [0.0, 5.551115123125783e-18], 'false,true,true': [0.0, -5.551115123125783e-18], 'false': [4.538137910876552e-17, nan], 'true': [0.1521653009737077, nan]}, {'': [0.15216530097370823, 2.6742598403379684e-17], 'true,true': [5.551115123125783e-17, 0.13193773724759153], 'true': [0.15216530097370823, nan]}, {'': [0.14152693306196823, 4.2139852029567983e-17], 'false,true': [0.0, 1.7377403863698104e-17], 'true,true': [0.14152693306196823, nan], 'false': [4.2139852029567983e-17, nan], 'true': [0.14152693306196823, nan]}, {'': [0.1417612929301321, 3.322565256177476e-17], 'false,true,false': [6.30808536718839e-19, -4.270088556250602e-18], 'false,true': [-1.8924256101565167e-18, 7.723290606088046e-18], 'false': [3.322565256177476e-17, nan]}, {'': [0.1420060511254471, 2.8363361942978454e-17], 'true,true': [0.1420060511254471, nan], 'false': [2.8363361942978454e-17, nan], 'true': [0.1420060511254471, nan]}, {'': [0.14223551253505046, -1.2966108316790149e-17]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false;movie(I, H), movie(I, A).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false,true;genre(A, G).;true;true', '1;false,false;movie(H, E), movie(H, B).;true;true', '1;false;genre(E, F), genre(B, F).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false,false;genre(E, G), genre(A, G).;true;true', '2;false;movie(F, E), movie(F, A).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false,true;genre(B, H).;true;true', '4;false,false;genre(F, I), genre(B, I).;true;true', '4;false;genre(F, G), genre(A, G).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;true;genre(D, E), genre(A, E).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;genre(H, I), genre(A, I).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false,false;genre(E, G), genre(A, G).;true;true', '7;false;movie(F, E), movie(F, A).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.14185106490048796;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( genre(D, E), genre(B, E) )
%   | then if ( genre(A, F) )
%   | | then return -0.12544463852839136;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( movie(G, D), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return -0.1254446385283911;  // std dev = 7,15e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.12544463852839136;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360626;  // std dev = 4,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.10159632948783642;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( genre(D, E), genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( genre(D, G), genre(B, G) )
%   | | then return -0.09269127618926094;  // std dev = 2,28e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926104;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.08518475138839679;  // std dev = 3,23e-09, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 1,32e-09, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420275;  // std dev = 9,31e-10, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420271;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.06842697784420271;  // std dev = 3,73e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0684269778442027;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06419184008202618;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06419184008202618;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.771 seconds
Total inference time: 1.103 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: transfer, Time: 02:08:48
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 1.103, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 0.887255, 'Recall': 1.0, 'Inference time': 0.929, 'F1': 0.888889, 'AUC PR': 0.816, 'Precision': [0.8, 0.5], 'Learning time': 3.556, 'CLL': -0.332235}, 'Learning time': 8.327, 'CLL': -0.094637, 'Mapping results': {'Generating mappings time': 0.04877662658691406, 'Total time': 2.3748037815093994, 'Possible mappings': 126, 'Finding best mapping': 0.021380186080932617, 'Generating paths time': 1.9472200870513916, 'Knowledge compiling time': 0.3574211597442627}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048796;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839122;  // std dev = 6,32e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360625;  // std dev = 8,43e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783642;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926096;  // std dev = 1,49e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839679;  // std dev = 4,47e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109165;  // std dev = 5,96e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333706;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420267;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06419184008202625;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.933 seconds
Total inference time: 0.73 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: scratch, Time: 02:08:52
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.73, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 2.933, 'CLL': -0.094637}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.3812837600708008
   Generating paths time   = 2.438523054122925
   Generating mappings time   = 0.06097841262817383
   Possible mappings   = 126
   Finding best mapping   = 0.02812480926513672
   Total time   = 2.9089152812957764


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;movie(J, I), movie(J, A).;false;false
0;false,false;movie(K, A), movie(K, L).;true;false
0;true,true;movie(C, F).;false;true
0;true,true,false;genre(E, G), genre(A, G).;false;false
0;false;movie(H, B), movie(H, I).;true;true
0;false,false,true;genre(L, M), genre(A, M).;false;false
0;true;movie(D, B), movie(D, E).;true;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false,true,false;movie(H, E), movie(H, B).;false;false
1;false,true;genre(E, F), genre(B, F).;true;true
1;false,false;movie(I, B), movie(I, J).;true;false
1;false;movie(D, A), movie(D, E).;true;true
1;false,false,true;genre(J, K), genre(A, K).;false;false
1;false,true,true;genre(A, G).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true,false;genre(E, G), genre(A, G).;false;false
2;false,true;movie(F, E), movie(F, A).;false;true
2;false;movie(D, B), movie(D, E).;true;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
3;true,true;movie(C, F).;false;true
3;true,false,true;genre(I, J), genre(B, J).;false;false
3;true,false;movie(H, A), movie(H, I).;true;false
3;true,true,false;genre(E, G), genre(A, G).;false;false
3;true;movie(D, B), movie(D, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;movie(C, D).;false;false
4;false,true,false;genre(F, I), genre(B, I).;false;false
4;false,true;genre(F, G), genre(A, G).;true;true
4;false,false;movie(J, A), movie(J, K).;true;false
4;false;movie(E, B), movie(E, F).;true;true
4;false,false,true;genre(K, L), genre(A, L).;false;false
4;false,true,true;genre(B, H).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
5;true,false;movie(F, A), movie(F, G).;true;false
5;true,true;genre(D, E), genre(A, E).;false;false
5;true,false,true;genre(G, H), genre(B, H).;false;false
5;true;movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(I, J), genre(A, J).;false;false
6;false,false;movie(K, B), movie(K, L).;true;false
6;true,true;movie(C, F).;false;true
6;true,true,false;genre(E, G), genre(B, G).;false;false
6;false;movie(H, A), movie(H, I).;true;true
6;false,false,true;genre(L, M), genre(B, M).;false;false
6;true;movie(D, B), movie(D, E).;true;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false,true,false;genre(E, G), genre(A, G).;false;false
7;false,true;movie(F, E), movie(F, A).;false;true
7;false,false;movie(H, A), movie(H, I).;true;false
7;false;movie(D, B), movie(D, E).;true;true
7;false,false,true;genre(I, J), genre(B, J).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true,true;movie(C, E).;false;true
8;false,false;movie(L, B), movie(L, M).;false;false
8;true,false,true;genre(H, I), genre(A, I).;false;false
8;true,false;movie(G, A), movie(G, H).;true;false
8;true,true,false;genre(E, F), genre(A, F).;false;false
8;false;movie(J, A), movie(J, K).;false;true
8;true;movie(D, B), movie(D, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.661720363670941;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5609350667283574;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4440275917969893;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.33685139605703973;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then return 0.25286275913656375;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B), movie(E, F) )
%   | then if ( genre(F, G), genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(F, I), genre(B, I) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926097;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.19141228931974416;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2,11e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.14705476720760274;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then if ( genre(H, I), genre(A, I) )
%   | | then return -0.07877675473109175;  // std dev = 1,32e-09, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11469660809076895;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.09066113953316608;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07246920796007848;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 0.89911
   AUC PR    = 0.832099
   CLL	      = -0.332428
   Precision = 0.80622 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.892715


Total learning time: 1.747 seconds
Total inference time: 1.06 seconds
AUC ROC: 0.89911


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'false,true': 'movie(I, H), movie(I, A)', 'false': 'movie(G, B), movie(G, H)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 10, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.973, 11, 45], 'false,true,true': [1.49e-08, 24, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(H, E), movie(H, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)'}, {'false,true,false,true': [0.0, 21, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'false,true,false,false': [0.0, 9, 0], 'false,false': [0.0, 0, 0], 'true': [2.973, 11, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 9, 0], 'true': [2.973, 11, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 24, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'true': 'movie(D, B), movie(D, E)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.973, 11, 45], 'false': [0.0, 34, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(F, I), genre(B, I)', 'false,true': 'genre(F, G), genre(A, G)', 'false,true,true': 'genre(B, H)', 'false': 'movie(E, B), movie(E, F)', 'true': 'movie(C, D)'}, {'false,true,false,true': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [2.973, 11, 45], 'false,true,true,false': [0.0, 2, 0], 'false,true,false,false': [5.27e-09, 28, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(D, E), genre(A, E)', 'true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [2.973, 11, 45], 'true,true,true': [0.0, 0, 0], 'false': [2.11e-08, 34, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, F)', 'false,true': 'genre(H, I), genre(A, I)', 'false': 'movie(G, A), movie(G, H)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 32, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.973, 11, 45], 'false,true,true': [1.32e-09, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [2.63e-09, 9, 0], 'true': [2.973, 11, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, E)', 'false': 'movie(F, A), movie(F, G)', 'true': 'movie(D, B), movie(D, E)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 34, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [2.973, 11, 45], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 34, 0], 'true': [2.973, 11, 45]}]]
[{'': [0.15784438775510257, 3.2653618371328135e-17], 'false,true': [9.25185853854297e-18, -1.1102230246251566e-17], 'true,true': [0.15784438775510257, nan], 'false': [3.2653618371328135e-17, nan], 'true': [0.15784438775510257, nan]}, {'': [0.15784438775510182, 3.2653618371328133e-18], 'false,true,false': [-2.64338815386942e-18, 0.0], 'false,true': [0.0, -7.401486830834377e-18], 'false': [3.2653618371328133e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.15784438775510165, -1.1428766429964846e-17], 'false,true,false': [0.0, -1.5419764230904951e-18], 'false,true': [2.3129646346357427e-18, 0.0], 'false': [-1.1428766429964846e-17, nan]}, {'': [0.15784438775510187, -3.2653618371328133e-18], 'true,true': [0.15784438775510187, nan], 'true': [0.15784438775510187, nan]}, {'': [0.15784438775510232, -6.530723674265627e-18], 'true': [0.15784438775510232, nan], 'false,true,false': [0.0, 9.912705577010326e-19], 'false,true': [0.0, -5.204170427930421e-18], 'false': [-6.530723674265627e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.15784438775510204, 1.3061447348531253e-17], 'true,true': [nan, 0.15784438775510204], 'true': [0.15784438775510204, nan]}, {'': [0.15784438775510196, -1.6326809185664067e-18], 'false,true': [8.673617379884035e-19, -8.673617379884035e-19], 'true,true': [0.15784438775510196, nan], 'false': [-1.6326809185664067e-18, nan], 'true': [0.15784438775510196, nan]}, {'': [0.15784438775510207, 2.44902137784961e-18], 'false,true,false': [0.0, 7.709882115452476e-19], 'false,true': [-1.1564823173178713e-18, 6.938893903907229e-19], 'false': [2.44902137784961e-18, nan]}, {'': [0.15784438775510226, -2.44902137784961e-18], 'true,true': [0.15784438775510226, nan], 'false': [-2.44902137784961e-18, nan], 'true': [0.15784438775510226, nan]}, {'': [0.15784438775510207, -1.6326809185664067e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false;movie(I, H), movie(I, A).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false,false;movie(H, E), movie(H, B).;true;true', '1;false;genre(E, F), genre(B, F).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false,false;genre(E, G), genre(A, G).;true;true', '2;false;movie(F, E), movie(F, A).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false,false;genre(F, I), genre(B, I).;true;true', '4;false;genre(F, G), genre(A, G).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;genre(H, I), genre(A, I).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false,false;genre(E, G), genre(A, G).;true;true', '7;false;movie(F, E), movie(F, A).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(F, D), movie(F, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783627;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.32071184716014944;  // std dev = 3,73e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(D, F), genre(B, F) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926097;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(A) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839682;  // std dev = 1,49e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1527438580936709;  // std dev = 5,89e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.13400703000801104;  // std dev = 3,73e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(B) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.995298
   AUC PR    = 0.994219
   CLL	      = -0.113016
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 2.279 seconds
Total inference time: 1.413 seconds
AUC ROC: 0.995298


Refined model AUC ROC: 0.995298


Dataset: cora->imdb(workedunder), Fold: 4, Type: transfer, Time: 02:09:02
{'AUC ROC': 0.995298, 'Recall': 1.0, 'Inference time': 1.413, 'F1': 0.991176, 'AUC PR': 0.994219, 'Precision': [0.982507, 0.5], 'Parameter Learning results': {'AUC ROC': 0.89911, 'Recall': 1.0, 'Inference time': 1.06, 'F1': 0.892715, 'AUC PR': 0.832099, 'Precision': [0.80622, 0.5], 'Learning time': 1.747, 'CLL': -0.332428}, 'Learning time': 4.026, 'CLL': -0.113016, 'Mapping results': {'Generating mappings time': 0.06097841262817383, 'Total time': 2.9089152812957764, 'Possible mappings': 126, 'Finding best mapping': 0.02812480926513672, 'Generating paths time': 2.438523054122925, 'Knowledge compiling time': 0.3812837600708008}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.991098
   AUC PR    = 0.982507
   CLL	      = -0.113016
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 1.676 seconds
Total inference time: 0.783 seconds
AUC ROC: 0.991098


Dataset: cora->imdb(workedunder), Fold: 4, Type: scratch, Time: 02:09:04
{'AUC ROC': 0.991098, 'Recall': 1.0, 'Inference time': 0.783, 'F1': 0.991176, 'AUC PR': 0.982507, 'Precision': [0.982507, 0.5], 'Learning time': 1.676, 'CLL': -0.113016}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.4123396873474121
   Generating paths time   = 2.4476335048675537
   Generating mappings time   = 0.0608370304107666
   Possible mappings   = 126
   Finding best mapping   = 0.02814340591430664
   Total time   = 2.9489588737487793


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> movie(A,B)', 'author(A,B) -> movie(A,B)', 'haswordvenue(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
0;true,true;movie(G, E), movie(G, A).;false;false
0;false,true;genre(A, J).;false;false
0;false,false;genre(A, K).;true;false
0;false;genre(B, H).;true;true
0;false,false,true;movie(M, L), movie(M, A).;false;false
0;true;genre(B, D).;true;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
1;false,true,false;genre(B, H).;false;false
1;false,true;movie(F, E), movie(F, B).;true;true
1;false,false;genre(B, I).;true;false
1;false;genre(A, D).;true;true
1;false,false,true;movie(K, J), movie(K, A).;false;false
1;false,true,true;movie(G, A).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
2;false,true,false;movie(G, E), movie(G, A).;false;false
2;false,true;genre(A, F).;false;true
2;false;genre(B, D).;true;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
3;true,false;genre(A, H).;true;false
3;true,true;movie(G, E), movie(G, A).;false;false
3;true,false,true;movie(J, I), movie(J, B).;false;false
3;true;genre(B, D).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,false;movie(I, F), movie(I, B).;false;false
4;false,true;movie(G, F), movie(G, A).;true;true
4;false,false;genre(A, J).;true;false
4;false;genre(B, E).;true;true
4;false,false,true;movie(L, K), movie(L, A).;false;false
4;false,true,true;movie(H, B).;false;false
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;false
5;true,false,true;movie(H, G), movie(H, B).;false;false
5;true,false;genre(A, F).;true;false
5;true;movie(E, D), movie(E, A).;false;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;true,true;movie(G, E), movie(G, B).;false;false
6;false,true;movie(J, I), movie(J, A).;false;false
6;false,false;genre(B, K).;true;false
6;false;genre(A, H).;true;true
6;false,false,true;movie(M, L), movie(M, B).;false;false
6;true;genre(B, D).;true;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
7;false,true,false;movie(G, E), movie(G, A).;false;false
7;false,true;genre(A, F).;false;true
7;false,false;genre(A, H).;true;false
7;false;genre(B, D).;true;true
7;false,false,true;movie(J, I), movie(J, B).;false;false
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;true,true;movie(F, E), movie(F, A).;false;false
8;true,false,true;movie(I, H), movie(I, A).;false;false
8;true,false;genre(A, G).;true;false
8;false,false;genre(B, L).;false;false
8;false;genre(A, J).;false;true
8;true;genre(B, D).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(G, H), movie(G, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.05045662740720468;  // std dev = 2,842, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H) )
%   | | then if ( movie(I, J), movie(I, A) )
%   | | | then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.04420289095842993;  // std dev = 2,842, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, G), movie(F, A) )
%   | | | then return 0.5553664367462844;  // std dev = 9,42e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.030310182976557264;  // std dev = 2,853, 55,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.17848456594044876;  // std dev = 3,378, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then if ( movie(G, B) )
%   | | | then return 0.3748482014603544;  // std dev = 7,30e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H) )
%   | | then if ( movie(I, J), movie(I, A) )
%   | | | then return -0.13487787360455;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.009366411525699447;  // std dev = 2,842, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.11410854184732397;  // std dev = 3,152, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then if ( movie(E, F), movie(E, A) )
%   | | then return -0.13247271245033246;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G) )
%   | | then if ( movie(H, I), movie(H, B) )
%   | | | then return 0.26885686829776156;  // std dev = 2,98e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.009816476559470762;  // std dev = 2,842, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, G), movie(F, A) )
%   | | | then return 0.2193793369369529;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H) )
%   | | then if ( movie(I, J), movie(I, B) )
%   | | | then return -0.11797548531645864;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.008238001770138271;  // std dev = 2,842, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D) )
%   | then return -0.10624171989640192;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, E) )
%   | | then return 0.18412199310062408;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.006920484324352502;  // std dev = 2,842, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.054884133480585295;  // std dev = 2,951, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */


Results
   AUC ROC   = 0.896922
   AUC PR    = 0.882525
   CLL	      = -0.357665
   Precision = 0.917197 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.884793


Total learning time: 2.085 seconds
Total inference time: 1.492 seconds
AUC ROC: 0.896922


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(A, E)', 'false,false': 'genre(A, F)', 'false': 'genre(B, D)', 'false,false,true': 'movie(G, H), movie(G, A)'}, {'false,true,false': [2.38e-07, 0, 35], 'false,false,true,true': [0.0, 3, 0], 'false,true,true': [0.0, 0, 0], 'false,false,false': [2.842, 42, 10], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'movie(E, F), movie(E, B)', 'false,false': 'genre(B, H)', 'false': 'genre(A, D)', 'false,false,true': 'movie(I, J), movie(I, A)', 'false,true,true': 'movie(G, A)'}, {'false,true,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 35], 'false,false,false': [2.842, 42, 10], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,false': 'movie(F, G), movie(F, A)', 'false,true': 'genre(A, E)', 'false': 'genre(B, D)'}, {'false,true,false,true': [9.42e-08, 0, 35], 'false,true,false,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false': [2.853, 45, 10], 'false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'false': [3.378, 45, 45], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'movie(E, F), movie(E, A)', 'false,false': 'genre(A, H)', 'false': 'genre(B, D)', 'false,false,true': 'movie(I, J), movie(I, A)', 'false,true,true': 'movie(G, B)'}, {'false,true,true,true': [7.3e-08, 0, 35], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 3, 0], 'false,false,false': [2.842, 42, 10], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'false': [3.152, 45, 45], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'movie(E, F), movie(E, A)', 'false,false': 'genre(B, G)', 'false': 'genre(A, D)', 'false,false,true': 'movie(H, I), movie(H, B)'}, {'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.98e-08, 0, 35], 'false,true,true': [0.0, 3, 0], 'false,false,false': [2.842, 42, 10], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,false': 'movie(F, G), movie(F, A)', 'false,true': 'genre(A, E)', 'false,false': 'genre(A, H)', 'false': 'genre(B, D)', 'false,false,true': 'movie(I, J), movie(I, B)'}, {'false,true,false,true': [0.0, 0, 35], 'false,false,false': [2.842, 42, 10], 'false,false,true,true': [0.0, 3, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,false': 'genre(B, E)', 'false': 'genre(A, D)'}, {'false,false,false': [2.842, 42, 10], 'false,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 35], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'false': [2.951, 45, 45], 'true': [0.0, 0, 0]}]]
[{'': [nan, 0.25000000000000033], 'false,true': [nan, 1.6240976817373718e-15], 'false,false': [0.0, 0.15532544378698224], 'false': [1.6240976817373718e-15, 0.14876033057851237], 'false,false,true': [0.0, nan]}, {'': [nan, 0.20200903567714365], 'false,true': [0.0, nan], 'false,false': [-6.0903663065151445e-16, 0.15532544378698226], 'false': [0.0, 0.2024831036597355], 'false,false,true': [-6.0903663065151445e-16, nan], 'false,true,true': [0.0, nan]}, {'': [nan, 0.1559782978587559], 'false,true,false': [2.5376526277146434e-16, nan], 'false,true': [nan, 2.5376526277146434e-16], 'false': [2.5376526277146434e-16, 0.14802674315802541]}, {'': [nan, 0.12681054595151406]}, {'': [nan, 0.12352593537793102], 'false,true': [1.5225915766287861e-16, nan], 'false,false': [-2.3129646346357427e-18, 0.15532544378698246], 'false': [1.5225915766287861e-16, 0.14792613877105346], 'false,false,true': [-2.3129646346357427e-18, nan], 'false,true,true': [1.5225915766287861e-16, nan]}, {'': [nan, 0.11036725273879215]}, {'': [nan, 0.10957049058897833], 'false,true': [-2.3129646346357427e-18, nan], 'false,false': [2.5376526277146434e-17, 0.15532544378698254], 'false': [-2.3129646346357427e-18, 0.1115116110445289], 'false,false,true': [2.5376526277146434e-17, nan]}, {'': [nan, 0.10309198954828855], 'false,true,false': [-3.8064789415719653e-17, nan], 'false,true': [nan, -3.8064789415719653e-17], 'false,false': [-2.3129646346357427e-18, 0.15532544378698254], 'false': [-3.8064789415719653e-17, 0.14747417203861232], 'false,false,true': [-2.3129646346357427e-18, nan]}, {'': [nan, 0.09922710995628645], 'false,false': [-5.709718412357947e-17, 0.1553254437869822], 'false': [0.0, 0.10161411850721822]}, {'': [nan, 0.09677643537200722]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(B, D).;true;true', '0;false;genre(A, F).;true;true', '1;;workedunder(A, B) :- genre(A, D).;true;true', '1;false;genre(B, H).;true;true', '2;;workedunder(A, B) :- genre(B, D).;true;true', '4;;workedunder(A, B) :- genre(B, D).;true;true', '4;false;genre(A, H).;true;true', '6;;workedunder(A, B) :- genre(A, D).;true;true', '6;false;genre(B, G).;true;true', '7;;workedunder(A, B) :- genre(B, D).;true;true', '7;false;genre(A, H).;true;true', '8;;workedunder(A, B) :- genre(A, D).;true;true', '8;false;genre(B, E).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( female(A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( female(A) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.5553664367462844;  // std dev = 9,42e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( actor(B) )
%   | then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3996652821567083;  // std dev = 0,190, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.3227179389938912;  // std dev = 0,012, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( female(A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.23590897986869316;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.25489056790657316;  // std dev = 0,000803, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.24098389641952986;  // std dev = 0,189, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then return 0.21220129923215397;  // std dev = 0,016, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( female(A) )
%   | | | then return 0.2098044096773768;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.12416966203879583;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.17888791802896334;  // std dev = 0,014, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( female(A) )
%   | | | then return 0.1771307448511974;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0975807773877407;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then return 0.1541022893401784;  // std dev = 0,012, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( female(A) )
%   | | | then return 0.1527698374650165;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.07759444429332125;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1333863081158922;  // std dev = 0,002, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.12065906325654732;  // std dev = 0,189, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */


Results
   AUC ROC   = 0.94804
   AUC PR    = 0.904925
   CLL	      = -0.218743
   Precision = 0.882199 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.937413


Total learning time: 1.85 seconds
Total inference time: 0.746 seconds
AUC ROC: 0.94804


Refined model AUC ROC: 0.94804


Dataset: cora->imdb(workedunder), Fold: 5, Type: transfer, Time: 02:09:14
{'AUC ROC': 0.94804, 'Recall': 1.0, 'Inference time': 0.746, 'F1': 0.937413, 'AUC PR': 0.904925, 'Precision': [0.882199, 0.5], 'Parameter Learning results': {'AUC ROC': 0.896922, 'Recall': 0.854599, 'Inference time': 1.492, 'F1': 0.884793, 'AUC PR': 0.882525, 'Precision': [0.917197, 0.5], 'Learning time': 2.085, 'CLL': -0.357665}, 'Learning time': 3.935, 'CLL': -0.218743, 'Mapping results': {'Generating mappings time': 0.0608370304107666, 'Total time': 2.9489588737487793, 'Possible mappings': 126, 'Finding best mapping': 0.02814340591430664, 'Generating paths time': 2.4476335048675537, 'Knowledge compiling time': 0.4123396873474121}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1352095945470413;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.11622033579851573;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */


Results
   AUC ROC   = 0.935462
   AUC PR    = 0.889597
   CLL	      = -0.23826
   Precision = 0.877604 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.934813


Total learning time: 2.026 seconds
Total inference time: 0.743 seconds
AUC ROC: 0.935462


Dataset: cora->imdb(workedunder), Fold: 5, Type: scratch, Time: 02:09:17
{'AUC ROC': 0.935462, 'Recall': 1.0, 'Inference time': 0.743, 'F1': 0.934813, 'AUC PR': 0.889597, 'Precision': [0.877604, 0.5], 'Learning time': 2.026, 'CLL': -0.23826}


Starting experiment #4 for cora->imdb(workedunder)

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.733148935099512;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.4675239350995118;  // std dev = 3,903, 64,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | | | else return 0.2672398441904202;  // std dev = 3,994, 66,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=27 */
%   | else return 0.4104803339388107;  // std dev = 0,497, 4.997,000 (wgt'ed) examples reached here.  /* #neg=2.237 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordauthor(H, I), haswordvenue(A, I) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(J, H), venue(J, A) )
%   | | | then return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.14661047356105084;  // std dev = 3,267, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then return 0.1414822684328457;  // std dev = 0,451, 60,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | | else return 0.13907136696533606;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), venue(E, A) )
%   | | then return 0.7439976143448209;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5861028775027154;  // std dev = 0,365, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else return 0.35188126425650557;  // std dev = 0,497, 5.127,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.826 */
%   else return 0.12090302592615512;  // std dev = 0,449, 606,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=170 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2907076932219137;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4777878248077354;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1806190606633534;  // std dev = 0,045, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return -0.13932015468546435;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.11083136613203431;  // std dev = 3,267, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else return 0.1046210650276122;  // std dev = 0,450, 537,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=151 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2308021232470321;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else return 0.0881818176185152;  // std dev = 0,448, 606,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=170 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1785306342387027;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4596358722288576;  // std dev = 1,154, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1944833073882848;  // std dev = 0,067, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.13236059893022728;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08574850117160034;  // std dev = 3,237, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.07363464649901198;  // std dev = 0,449, 538,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=151 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13590067918170354;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return 0.05742726728561184;  // std dev = 0,433, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else return 0.062023275567299016;  // std dev = 0,449, 537,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10255647394869787;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.12303266540689027;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.10104674838838122;  // std dev = 1,461, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.05596348681909428;  // std dev = 3,251, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.0544364604507337;  // std dev = 0,822, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.06058954832756287;  // std dev = 3,333, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.051498137552296507;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.25486421615073657;  // std dev = 0,328, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | else return 0.07624411538336365;  // std dev = 0,497, 5.127,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.826 */
%   else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, A) )
%   | | then if ( author(H, F), venue(H, B) )
%   | | | then return 0.1852553311360666;  // std dev = 0,931, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.18366875262062712;  // std dev = 0,090, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordauthor(F, I), haswordvenue(B, I) )
%   | | | then return -0.11103097661009789;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.06056271381202585;  // std dev = 3,386, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.023938496771119484;  // std dev = 1,324, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.03337132031280745;  // std dev = 3,187, 51,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else return 0.042267259847285236;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4400934011256938;  // std dev = 1,418, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.49290242168178444;  // std dev = 0,035, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.2845447021695604;  // std dev = 1,683, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.05679096482456628;  // std dev = 3,811, 65,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=39 */
%   | else return 0.058450724596540354;  // std dev = 0,497, 4.996,000 (wgt'ed) examples reached here.  /* #neg=2.236 #pos=2.760 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then return 0.0358248900494045;  // std dev = 0,431, 68,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, B) )
%   | | | then return -0.0810978601237585;  // std dev = 0,806, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.03757658622147039;  // std dev = 3,344, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return 0.0345027324279526;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0434195818131503;  // std dev = 0,495, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else return 0.02745992147081837;  // std dev = 0,447, 606,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=170 */


Predicates from source: ['samevenue(venue,venue).', 'author(class,author).', 'haswordauthor(author,word).', 'samebib(class,class).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.38010597229003906
   Generating paths time   = 2.462557315826416
   Generating mappings time   = 0.06061244010925293
   Possible mappings   = 126
   Finding best mapping   = 0.028211355209350586
   Total time   = 2.9314935207366943


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true,false;genre(H, J), genre(A, J).;false;false
0;false,true;movie(I, H), movie(I, A).;false;true
0;false,false;movie(K, A), movie(K, L).;false;false
0;true,true;movie(D, A).;false;true
0;true,true,false;genre(E, F), genre(A, F).;false;false
0;false;movie(G, B), movie(G, H).;true;true
0;true;movie(D, B), movie(D, E).;true;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
1;true,true;genre(D, E), genre(A, E).;false;false
1;true;movie(C, D).;true;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true,false;movie(H, E), movie(H, A).;false;false
2;false,true;genre(E, F), genre(A, F).;true;true
2;false;movie(D, B), movie(D, E).;true;false
2;false,true,true;genre(B, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,true,false;movie(H, E), movie(H, B).;false;false
4;false,true;genre(E, F), genre(B, F).;true;true
4;false;movie(D, A), movie(D, E).;true;false
4;false,true,true;genre(A, G).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false;movie(D, B), movie(D, E).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false,true,false;genre(E, G), genre(A, G).;false;false
6;false,true;movie(F, E), movie(F, A).;false;true
6;false,false;movie(H, A), movie(H, I).;true;false
6;false;movie(D, B), movie(D, E).;true;true
6;false,false,true;genre(I, J), genre(A, J).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;movie(C, D).;false;false
7;false,true,false;movie(I, F), movie(I, B).;false;false
7;false,true;genre(F, G), genre(A, G).;true;true
7;false,false;movie(J, B), movie(J, K).;true;false
7;false;movie(E, A), movie(E, F).;true;true
7;false,false,true;genre(K, L), genre(A, L).;false;false
7;false,true,true;genre(F, H), genre(B, H).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;movie(I, A), movie(I, J).;false;true
8;false,false;movie(K, B), movie(K, L).;true;false
8;true,true;genre(E, F), genre(B, F).;true;true
8;true,true,false;genre(E, H), genre(A, H).;false;false
8;true,true,true;genre(A, G).;false;false
8;false,false,true;genre(L, M), genre(B, M).;false;false
8;true;movie(D, A), movie(D, E).;true;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(D, A) )
%   | | then return 0.6697431379980635;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( genre(G, I), genre(A, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return -0.24411370104778135;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.5794157107169252;  // std dev = 3,144, 68,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 3,65e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4482981811126405;  // std dev = 3,211, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(H, E), movie(H, A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.33997075885345407;  // std dev = 3,206, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else return -0.10159632948783631;  // std dev = 1,83e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.255435544009495;  // std dev = 3,204, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19375118741211383;  // std dev = 3,203, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then return -0.08518475138839679;  // std dev = 2,24e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1492705075697149;  // std dev = 3,204, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07877675473109179;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then return 0.11681532554094468;  // std dev = 3,205, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), movie(E, F) )
%   | then if ( genre(F, G), genre(A, G) )
%   | | then if ( genre(F, H), genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(I, F), movie(I, B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2783420835253526;  // std dev = 8,43e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.5322479094403301;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.7216579164746469;  // std dev = 7,30e-08, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, A), movie(I, J) )
%   | then return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08065669329799233;  // std dev = 2,510, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else return -0.06419184008202625;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */


Results
   AUC ROC   = 0.981402
   AUC PR    = 0.982595
   CLL	      = -0.270772
   Precision = 0.823232 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.903047


Total learning time: 1.796 seconds
Total inference time: 0.799 seconds
AUC ROC: 0.981402


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(G, I), genre(A, I)', 'true,true': 'movie(D, A)', 'false,true': 'movie(H, G), movie(H, A)', 'false': 'movie(F, B), movie(F, G)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [2.36e-08, 27, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.248, 13, 56], 'false,true,true': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(D, E), genre(A, E)', 'true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [3.144, 12, 56], 'true,true,true': [0.0, 1, 0], 'false': [3.65e-08, 43, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(H, E), movie(H, A)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'movie(D, B), movie(D, E)', 'false,true,true': 'genre(B, G)'}, {'false,true,false,true': [1.18e-08, 14, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,false,false': [0.0, 27, 0], 'false,false': [0.0, 0, 0], 'true': [3.211, 13, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [1.83e-08, 43, 0], 'true': [3.206, 13, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(H, E), movie(H, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)'}, {'false,true,false,true': [0.0, 14, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,false': [0.0, 28, 0], 'false,false': [0.0, 0, 0], 'true': [3.204, 13, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true': [2.24e-08, 43, 0], 'false,false': [0.0, 0, 0], 'true': [3.203, 13, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 2, 0], 'false,true,false,false': [5.27e-09, 27, 0], 'true': [3.204, 13, 56], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(I, F), movie(I, B)', 'false,true': 'genre(F, G), genre(A, G)', 'false,true,true': 'genre(F, H), genre(B, H)', 'false': 'movie(E, A), movie(E, F)', 'true': 'movie(C, D)'}, {'false,true,false,true': [3.73e-09, 14, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [3.205, 13, 56], 'false,true,true,false': [0.0, 2, 0], 'false,true,false,false': [0.0, 27, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'genre(E, F), genre(B, F)', 'true,true,false': 'genre(E, H), genre(A, H)', 'false': 'movie(I, A), movie(I, J)', 'true,true,true': 'genre(A, G)'}, {'true,true,false,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [8.43e-08, 0, 56], 'true,true,false,false': [7.3e-08, 12, 0], 'false,true': [7.45e-09, 43, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 43, 0], 'true': [2.51, 13, 56]}]]
[{'': [0.1529090527200164, 4.6474452193611206e-17], 'false,true,false': [0.0, 2.05596856412066e-17], 'true,true': [0.1529090527200164, nan], 'false,true': [-1.1895246692412391e-17, 2.2970131543968756e-17], 'false': [4.6474452193611206e-17, nan], 'true': [0.1529090527200164, nan]}, {'': [0.15290905272001531, 3.0982968129074136e-17], 'true,true': [0.0, 0.14532871972318193], 'true': [0.15290905272001531, nan]}, {'': [0.1494398108766771, 2.581914010756178e-18], 'false,true,false': [9.912705577010326e-18, -4.11193712824132e-18], 'false,true': [0.0, -2.7078610356711136e-18], 'false': [2.581914010756178e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.14894299072247233, 7.745742032268534e-18]}, {'': [0.14874789668776808, -6.454785026890445e-18], 'false,true,false': [-2.9738116731030977e-18, -1.1895246692412391e-17], 'false,true': [0.0, -6.6084703846735505e-18], 'false': [-6.454785026890445e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.14872744235794674, 1.1618613048402802e-17], 'false': [1.1618613048402802e-17, nan]}, {'': [0.14878636006036788, 0.0], 'false,true,false': [0.0, 1.02798428206033e-18], 'false,true': [-9.912705577010326e-19, 9.570888143320315e-19], 'false': [0.0, nan]}, {'': [0.14887370058584687, 3.2273925134452225e-18], 'false,true,false': [9.912705577010326e-19, 0.0], 'false,true': [0.0, 3.384826294588892e-18], 'false,true,true': [nan, 0.0], 'false': [3.2273925134452225e-18, nan], 'true': [0.14887370058584687, nan]}, {'': [0.14896569154886766, 1.290957005378089e-18], 'false': [1.290957005378089e-18, nan], 'true,true': [1.2688263138573217e-16, 0.0025474189892126155], 'true,true,false': [0.0, 4.440892098500626e-16], 'true,true,true': [nan, 1.2688263138573217e-16], 'true': [0.14896569154886766, nan]}, {'': [0.09132685523279024, -1.9364355080671335e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false,false;genre(G, I), genre(A, I).;true;true', '0;false;movie(H, G), movie(H, A).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;true;genre(D, E), genre(A, E).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false,false;movie(H, E), movie(H, A).;true;true', '2;false;genre(E, F), genre(A, F).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false,false;movie(H, E), movie(H, B).;true;true', '4;false;genre(E, F), genre(B, F).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false,false;genre(E, G), genre(A, G).;true;true', '6;false;movie(F, E), movie(F, A).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false,false;movie(I, F), movie(I, B).;true;true', '7;false;genre(F, G), genre(A, G).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;true,false;genre(E, H), genre(A, H).;true;true', '8;true;genre(E, F), genre(B, F).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( director(B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.12544463852839152;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( movie(F, D), movie(F, A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.10159632948783631;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( movie(F, D), movie(F, B) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08518475138839686;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.07324622576333702;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( movie(F, D), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(B, E) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return -0.0684269778442027;  // std dev = 9,31e-10, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.0684269778442027;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801087;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06419184008202618;  // std dev = 9,31e-10, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 9,31e-10, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06419184008202618;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.999167
   AUC PR    = 0.999118
   CLL	      = -0.112173
   Precision = 0.981928 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990881


Total learning time: 2.992 seconds
Total inference time: 1.413 seconds
AUC ROC: 0.999167


Refined model AUC ROC: 0.999167


Dataset: cora->imdb(workedunder), Fold: 1, Type: transfer, Time: 04:08:15
{'AUC ROC': 0.999167, 'Recall': 1.0, 'Inference time': 1.413, 'F1': 0.990881, 'AUC PR': 0.999118, 'Precision': [0.981928, 0.5], 'Parameter Learning results': {'AUC ROC': 0.981402, 'Recall': 1.0, 'Inference time': 0.799, 'F1': 0.903047, 'AUC PR': 0.982595, 'Precision': [0.823232, 0.5], 'Learning time': 1.796, 'CLL': -0.270772}, 'Learning time': 4.788, 'CLL': -0.112173, 'Mapping results': {'Generating mappings time': 0.06061244010925293, 'Total time': 2.9314935207366943, 'Possible mappings': 126, 'Finding best mapping': 0.028211355209350586, 'Generating paths time': 2.462557315826416, 'Knowledge compiling time': 0.38010597229003906}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.6909105759500754;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109546;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5354626841427582;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.4024026492217927;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4175135841583101;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.30700250684980995;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3207118471601494;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.24152182581632603;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.25517224256948956;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1958080954961511;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.20975771563253548;  // std dev = 3,33e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1628100390760043;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1770964977452775;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13816881840032139;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.11920579263429053;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 0.920833
   AUC PR    = 0.860033
   CLL	      = -0.244754
   Precision = 0.873995 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932761


Total learning time: 1.768 seconds
Total inference time: 0.612 seconds
AUC ROC: 0.920833


Dataset: cora->imdb(workedunder), Fold: 1, Type: scratch, Time: 04:08:18
{'AUC ROC': 0.920833, 'Recall': 1.0, 'Inference time': 0.612, 'F1': 0.932761, 'AUC PR': 0.860033, 'Precision': [0.873995, 0.5], 'Learning time': 1.768, 'CLL': -0.244754}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.2793593406677246
   Generating paths time   = 2.351001739501953
   Generating mappings time   = 0.061287879943847656
   Possible mappings   = 126
   Finding best mapping   = 0.02829742431640625
   Total time   = 2.7199525833129883


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true,false;genre(H, J), genre(A, J).;false;false
0;false,true;movie(I, H), movie(I, A).;false;true
0;false,false;movie(K, A), movie(K, L).;false;false
0;true,true;movie(D, A).;false;true
0;true,true,false;genre(E, F), genre(A, F).;false;false
0;false;movie(G, B), movie(G, H).;true;true
0;true;movie(D, B), movie(D, E).;true;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
1;true,true;genre(D, E), genre(A, E).;false;false
1;true;movie(C, D).;true;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true,false;movie(H, E), movie(H, A).;false;false
2;false,true;genre(E, F), genre(A, F).;true;true
2;false;movie(D, B), movie(D, E).;true;false
2;false,true,true;genre(B, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,true,false;movie(H, E), movie(H, B).;false;false
4;false,true;genre(E, F), genre(B, F).;true;true
4;false;movie(D, A), movie(D, E).;true;false
4;false,true,true;genre(A, G).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false;movie(D, B), movie(D, E).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false,true,false;genre(E, G), genre(A, G).;false;false
6;false,true;movie(F, E), movie(F, A).;false;true
6;false,false;movie(H, A), movie(H, I).;true;false
6;false;movie(D, B), movie(D, E).;true;true
6;false,false,true;genre(I, J), genre(A, J).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;movie(C, D).;false;false
7;false,true,false;movie(I, F), movie(I, B).;false;false
7;false,true;genre(F, G), genre(A, G).;true;true
7;false,false;movie(J, B), movie(J, K).;true;false
7;false;movie(E, A), movie(E, F).;true;true
7;false,false,true;genre(K, L), genre(A, L).;false;false
7;false,true,true;genre(F, H), genre(B, H).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;movie(I, A), movie(I, J).;false;true
8;false,false;movie(K, B), movie(K, L).;true;false
8;true,true;genre(E, F), genre(B, F).;true;true
8;true,true,false;genre(E, H), genre(A, H).;false;false
8;true,true,true;genre(A, G).;false;false
8;false,false,true;genre(L, M), genre(B, M).;false;false
8;true;movie(D, A), movie(D, E).;true;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(D, A) )
%   | | then return 0.6419327188832966;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return -0.23901864760952404;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.5778827608411796;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4314049119459329;  // std dev = 3,444, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return -0.11231637819360636;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3284966333506924;  // std dev = 3,429, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else return -0.10159632948783633;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2470396104509781;  // std dev = 3,423, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.09269127618926101;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18685039868066;  // std dev = 3,422, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then return -0.08518475138839679;  // std dev = 2,24e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14310489671838983;  // std dev = 3,423, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then return 0.1110774153368638;  // std dev = 3,425, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), movie(E, F) )
%   | then if ( genre(F, G), genre(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, F), movie(H, B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,18e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2957145011813403;  // std dev = 7,88e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.5127192397646955;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.7042854988186596;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, A), movie(I, J) )
%   | then return -0.06842697784420271;  // std dev = 7,45e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0758911943188076;  // std dev = 2,666, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else return -0.06419184008202625;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */


Results
   AUC ROC   = 0.981453
   AUC PR    = 0.982617
   CLL	      = -0.283018
   Precision = 0.824427 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.903766


Total learning time: 1.902 seconds
Total inference time: 0.79 seconds
AUC ROC: 0.981453


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, A)', 'false,true': 'movie(H, G), movie(H, A)', 'false': 'movie(F, B), movie(F, G)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.541, 16, 58], 'false,true,true': [4.47e-08, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(D, E), genre(A, E)', 'true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [3.259, 13, 58], 'true,true,true': [0.0, 3, 0], 'false': [0.0, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(G, E), movie(G, A)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 42, 0], 'false,true,false,false': [0.0, 0, 0], 'true': [3.444, 16, 58], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 42, 0], 'true': [3.429, 16, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(H, E), movie(H, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)'}, {'false,true,false,true': [0.0, 40, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true': [3.423, 16, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true': [2.24e-08, 42, 0], 'false,false': [0.0, 0, 0], 'true': [3.422, 16, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.423, 16, 58], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(H, F), movie(H, B)', 'false,true': 'genre(F, G), genre(A, G)', 'false': 'movie(E, A), movie(E, F)', 'true': 'movie(C, D)'}, {'false,true,false,true': [1.18e-08, 42, 0], 'true,true': [3.425, 16, 58], 'false,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'genre(E, F), genre(B, F)', 'true,true,false': 'genre(E, H), genre(A, H)', 'false': 'movie(I, A), movie(I, J)', 'true,true,true': 'genre(A, G)'}, {'true,true,false,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [7.88e-08, 0, 58], 'true,true,false,false': [4.21e-08, 13, 0], 'false,true': [7.45e-09, 42, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 42, 0], 'true': [2.666, 16, 58]}]]
[{'': [0.16946676406135816, 4.7580986769649563e-17], 'false,true': [4.7580986769649563e-17, nan], 'true,true': [0.16946676406135816, nan], 'false': [4.7580986769649563e-17, nan], 'true': [0.16946676406135816, nan]}, {'': [0.1694667640613594, -2.6433881538694202e-17], 'true,true': [0.0, 0.14957349732196065], 'true': [0.1694667640613594, nan]}, {'': [0.16026330198565122, 0.0], 'false,true,false': [0.0, nan], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.15893666064293382, -3.96508223080413e-18]}, {'': [0.15836425194694578, -1.4538634846281813e-17], 'false,true,false': [-1.3877787807814457e-17, nan], 'false,true': [0.0, -1.3877787807814457e-17], 'false': [-1.4538634846281813e-17, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1582447369781672, 1.1895246692412391e-17], 'false': [1.1895246692412391e-17, nan]}, {'': [0.1583408476117029, 0.0], 'false,true': [0.0, nan], 'false': [0.0, nan]}, {'': [0.15852057571998676, 3.3042351923367752e-18], 'false,true,false': [3.3042351923367752e-18, nan], 'false,true': [nan, 3.3042351923367752e-18], 'false': [3.3042351923367752e-18, nan], 'true': [0.15852057571998676, nan]}, {'': [0.15872014926619984, 1.32169407693471e-18], 'false': [1.32169407693471e-18, nan], 'true,true': [1.0719394720518753e-16, 0.0055906548152707125], 'true,true,false': [-3.700743415417188e-17, 1.3664283380001927e-16], 'true,true,true': [nan, 1.0719394720518753e-16], 'true': [0.15872014926619984, nan]}, {'': [0.0960825669942799, -1.982541115402065e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;true;genre(D, E), genre(A, E).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;genre(E, F), genre(B, F).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;true,false;genre(E, H), genre(A, H).;true;true', '8;true;genre(E, F), genre(B, F).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.11231637819360636;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.10159632948783633;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(B, E) )
%   | then if ( female(A) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1340070300080111;  // std dev = 2,63e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06419184008202622;  // std dev = 9,31e-10, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.999157
   AUC PR    = 0.999106
   CLL	      = -0.112281
   Precision = 0.981818 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990826


Total learning time: 2.366 seconds
Total inference time: 1.046 seconds
AUC ROC: 0.999157


Refined model AUC ROC: 0.999157


Dataset: cora->imdb(workedunder), Fold: 2, Type: transfer, Time: 04:08:27
{'AUC ROC': 0.999157, 'Recall': 1.0, 'Inference time': 1.046, 'F1': 0.990826, 'AUC PR': 0.999106, 'Precision': [0.981818, 0.5], 'Parameter Learning results': {'AUC ROC': 0.981453, 'Recall': 1.0, 'Inference time': 0.79, 'F1': 0.903766, 'AUC PR': 0.982617, 'Precision': [0.824427, 0.5], 'Learning time': 1.902, 'CLL': -0.283018}, 'Learning time': 4.268, 'CLL': -0.112281, 'Mapping results': {'Generating mappings time': 0.061287879943847656, 'Total time': 2.7199525833129883, 'Possible mappings': 126, 'Finding best mapping': 0.02829742431640625, 'Generating paths time': 2.351001739501953, 'Knowledge compiling time': 0.2793593406677246}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.990741
   AUC PR    = 0.981818
   CLL	      = -0.113754
   Precision = 0.981818 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990826


Total learning time: 1.835 seconds
Total inference time: 0.8 seconds
AUC ROC: 0.990741


Dataset: cora->imdb(workedunder), Fold: 2, Type: scratch, Time: 04:08:30
{'AUC ROC': 0.990741, 'Recall': 1.0, 'Inference time': 0.8, 'F1': 0.990826, 'AUC PR': 0.981818, 'Precision': [0.981818, 0.5], 'Learning time': 1.835, 'CLL': -0.113754}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.35300111770629883
   Generating paths time   = 2.484846591949463
   Generating mappings time   = 0.06131768226623535
   Possible mappings   = 126
   Finding best mapping   = 0.028441429138183594
   Total time   = 2.927612543106079


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true,false;genre(H, J), genre(A, J).;false;false
0;false,true;movie(I, H), movie(I, A).;false;true
0;false,false;movie(K, A), movie(K, L).;false;false
0;true,true;movie(D, A).;false;true
0;true,true,false;genre(E, F), genre(A, F).;false;false
0;false;movie(G, B), movie(G, H).;true;true
0;true;movie(D, B), movie(D, E).;true;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
1;true,true;genre(D, E), genre(A, E).;false;false
1;true;movie(C, D).;true;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true,false;movie(H, E), movie(H, A).;false;false
2;false,true;genre(E, F), genre(A, F).;true;true
2;false;movie(D, B), movie(D, E).;true;false
2;false,true,true;genre(B, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,true,false;movie(H, E), movie(H, B).;false;false
4;false,true;genre(E, F), genre(B, F).;true;true
4;false;movie(D, A), movie(D, E).;true;false
4;false,true,true;genre(A, G).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false;movie(D, B), movie(D, E).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false,true,false;genre(E, G), genre(A, G).;false;false
6;false,true;movie(F, E), movie(F, A).;false;true
6;false,false;movie(H, A), movie(H, I).;true;false
6;false;movie(D, B), movie(D, E).;true;true
6;false,false,true;genre(I, J), genre(A, J).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;movie(C, D).;false;false
7;false,true,false;movie(I, F), movie(I, B).;false;false
7;false,true;genre(F, G), genre(A, G).;true;true
7;false,false;movie(J, B), movie(J, K).;true;false
7;false;movie(E, A), movie(E, F).;true;true
7;false,false,true;genre(K, L), genre(A, L).;false;false
7;false,true,true;genre(F, H), genre(B, H).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;movie(I, A), movie(I, J).;false;true
8;false,false;movie(K, B), movie(K, L).;true;false
8;true,true;genre(E, F), genre(B, F).;true;true
8;true,true,false;genre(E, H), genre(A, H).;false;false
8;true,true,true;genre(A, G).;false;false
8;false,false,true;genre(L, M), genre(B, M).;false;false
8;true;movie(D, A), movie(D, E).;true;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(D, A) )
%   | | then return 0.6709343232273629;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(G, I), genre(A, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.14185106490048766;  // std dev = 7,60e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return -0.24433356816054427;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.5992683275740541;  // std dev = 5,276, 211,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.44837622745148054;  // std dev = 5,599, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( movie(H, E), movie(H, A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.1123163781936062;  // std dev = 8,30e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.34027903552872946;  // std dev = 5,574, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else return -0.10159632948783642;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2559737496844112;  // std dev = 5,565, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.09269127618926089;  // std dev = 6,23e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19442314721923568;  // std dev = 5,564, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then return -0.08518475138839679;  // std dev = 7,07e-08, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14999266494450383;  // std dev = 5,567, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0787767547310917;  // std dev = 4,08e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then return 0.11753648728212542;  // std dev = 5,572, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), movie(E, F) )
%   | then if ( genre(F, G), genre(A, G) )
%   | | then if ( genre(F, H), genre(B, H) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333706;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( movie(I, F), movie(I, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07324622576333707;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.5332463890994044;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2735303815876508;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.5332463890994044;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12890864280259304;  // std dev = 4,441, 82,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, A), movie(I, J) )
%   | then return -0.06842697784420264;  // std dev = 6,32e-08, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07808667237227505;  // std dev = 5,189, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else return -0.06419184008202626;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */


Results
   AUC ROC   = 0.994473
   AUC PR    = 0.995114
   CLL	      = -0.291999
   Precision = 0.816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.898678


Total learning time: 3.706 seconds
Total inference time: 0.833 seconds
AUC ROC: 0.994473


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(G, I), genre(A, I)', 'true,true': 'movie(D, A)', 'false,true': 'movie(H, G), movie(H, A)', 'false': 'movie(F, B), movie(F, G)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 11, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [7.6e-08, 104, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.773, 41, 178], 'false,true,true': [1.05e-08, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(D, E), genre(A, E)', 'true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [5.276, 33, 178], 'true,true,true': [0.0, 8, 0], 'false': [0.0, 137, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(H, E), movie(H, A)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'movie(D, B), movie(D, E)', 'false,true,true': 'genre(B, G)'}, {'false,true,false,true': [1.39e-08, 16, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [1.39e-08, 15, 0], 'false,true,false,false': [8.3e-08, 104, 0], 'false,false': [0.0, 0, 0], 'true': [5.599, 41, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 137, 0], 'true': [5.574, 41, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(H, E), movie(H, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)'}, {'false,true,false,true': [1.05e-08, 18, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 8, 0], 'false,true,false,false': [6.23e-08, 109, 0], 'false,false': [0.0, 0, 0], 'true': [5.565, 41, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true': [7.07e-08, 137, 0], 'false,false': [0.0, 0, 0], 'true': [5.564, 41, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 11, 0], 'false,true,false,false': [4.08e-08, 104, 0], 'true': [5.567, 41, 178], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(I, F), movie(I, B)', 'false,true': 'genre(F, G), genre(A, G)', 'false,true,true': 'genre(F, H), genre(B, H)', 'false': 'movie(E, A), movie(E, F)', 'true': 'movie(C, D)'}, {'false,true,false,true': [0.0, 16, 0], 'false,true,true,true': [0.0, 2, 0], 'true,true': [5.572, 41, 178], 'false,true,true,false': [0.0, 20, 0], 'false,true,false,false': [0.0, 99, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'genre(E, F), genre(B, F)', 'true,true,false': 'genre(E, H), genre(A, H)', 'false': 'movie(I, A), movie(I, J)', 'true,true,true': 'genre(A, G)'}, {'true,true,false,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 129], 'true,true,false,false': [4.441, 33, 49], 'false,true': [6.32e-08, 137, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 137, 0], 'true': [5.189, 41, 178]}]]
[{'': [0.15216530097371384, -6.807206866314829e-17], 'false,true,false': [-1.0092936587501423e-17, 5.551115123125783e-17], 'true,true': [0.15216530097371384, nan], 'false,true': [5.046468293750712e-18, 3.8616453030440226e-17], 'false': [-6.807206866314829e-17, nan], 'true': [0.15216530097371384, nan]}, {'': [0.15216530097371034, -6.4830541583950745e-18], 'true,true': [0.0, 0.13193773724758995], 'true': [0.15216530097371034, nan]}, {'': [0.1431591122289374, 7.77966499007409e-17], 'false,true,false': [1.214306433183765e-17, 6.618637262188433e-17], 'false,true': [1.3061447348531253e-17, 4.4408920985006264e-17], 'false': [7.77966499007409e-17, nan], 'false,true,true': [0.0, 1.295260195396016e-17]}, {'': [0.14189131925196616, -4.3760615569166756e-17]}, {'': [0.1414031915049328, 4.3760615569166756e-17], 'false,true,false': [6.1679056923619804e-18, 3.564936317603714e-17], 'false,true': [-1.3877787807814458e-18, 1.7483827159451284e-18], 'false': [4.3760615569166756e-17, nan], 'false,true,true': [0.0, -1.734723475976807e-18]}, {'': [0.1413635409363419, 3.6467179640972294e-17], 'false': [3.6467179640972294e-17, nan]}, {'': [0.1415263742536642, 4.295023379936737e-17], 'false,true,false': [-1.261617073437678e-18, 1.6012832085939756e-17], 'false,true': [0.0, 3.8616453030440226e-17], 'false': [4.295023379936737e-17, nan]}, {'': [0.14176064823593956, -6.4830541583950745e-18], 'true': [0.14176064823593956, nan], 'false,true,false': [0.0, -6.7286243916676156e-18], 'false,true': [-1.261617073437678e-18, -4.827056628805028e-18], 'false': [-6.4830541583950745e-18, nan], 'false,true,true': [0.0, -1.3877787807814458e-18]}, {'': [0.14200542290838364, 2.917374371277784e-17], 'false': [2.917374371277784e-17, nan], 'true,true': [0.014456723441099925, 0.23551698458694253], 'true,true,false': [0.0, 0.24048185603807262], 'true,true,true': [0.0, -2.616339530899594e-16], 'true': [0.14200542290838364, nan]}, {'': [0.1229665188039766, -1.2966108316790149e-17]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false,false;genre(G, I), genre(A, I).;true;true', '0;false;movie(H, G), movie(H, A).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;true;genre(D, E), genre(A, E).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false,true;genre(B, G).;true;true', '2;false,false;movie(H, E), movie(H, A).;true;true', '2;false;genre(E, F), genre(A, F).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false,true;genre(A, G).;true;true', '4;false,false;movie(H, E), movie(H, B).;true;true', '4;false;genre(E, F), genre(B, F).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false,false;genre(E, G), genre(A, G).;true;true', '6;false;movie(F, E), movie(F, A).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false,true;genre(F, H), genre(B, H).;true;true', '7;false,false;movie(I, F), movie(I, B).;true;true', '7;false;genre(F, G), genre(A, G).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;true,false;genre(E, H), genre(A, H).;true;true', '8;true,true;genre(A, G).;true;true', '8;true;genre(E, F), genre(B, F).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.14185106490048796;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( actor(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839127;  // std dev = 3,33e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.12544463852839133;  // std dev = 1,05e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.12544463852839136;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( genre(D, E), genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( movie(G, D), movie(G, A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.11231637819360622;  // std dev = 6,32e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.10159632948783642;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( genre(D, E), genre(B, E) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( movie(G, D), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926103;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( female(A) )
%   | then return -0.08518475138839679;  // std dev = 1,86e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 9,31e-10, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( actor(B) )
%   | | | then return -0.07877675473109169;  // std dev = 2,79e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( movie(F, D), movie(F, B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(B, E) )
%   | then if ( genre(A, F) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.15274385809367066;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( genre(D, G), genre(A, G) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( female(A) )
%   | then return -0.06842697784420268;  // std dev = 2,46e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.0684269778442027;  // std dev = 1,18e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.06842697784420268;  // std dev = 1,18e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.0684269778442027;  // std dev = 1,61e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06419184008202618;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06419184008202616;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.035 seconds
Total inference time: 1.234 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: transfer, Time: 04:08:45
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 1.234, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 0.994473, 'Recall': 1.0, 'Inference time': 0.833, 'F1': 0.898678, 'AUC PR': 0.995114, 'Precision': [0.816, 0.5], 'Learning time': 3.706, 'CLL': -0.291999}, 'Learning time': 8.741, 'CLL': -0.094637, 'Mapping results': {'Generating mappings time': 0.06131768226623535, 'Total time': 2.927612543106079, 'Possible mappings': 126, 'Finding best mapping': 0.028441429138183594, 'Generating paths time': 2.484846591949463, 'Knowledge compiling time': 0.35300111770629883}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048796;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839122;  // std dev = 6,32e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360625;  // std dev = 8,43e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783642;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926096;  // std dev = 1,49e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839679;  // std dev = 4,47e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109165;  // std dev = 5,96e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333706;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420267;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06419184008202625;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.008 seconds
Total inference time: 0.731 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: scratch, Time: 04:08:49
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.731, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.008, 'CLL': -0.094637}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.4039649963378906
   Generating paths time   = 2.529538631439209
   Generating mappings time   = 0.061170339584350586
   Possible mappings   = 126
   Finding best mapping   = 0.02804398536682129
   Total time   = 3.02272367477417


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true,false;genre(H, J), genre(A, J).;false;false
0;false,true;movie(I, H), movie(I, A).;false;true
0;false,false;movie(K, A), movie(K, L).;false;false
0;true,true;movie(D, A).;false;true
0;true,true,false;genre(E, F), genre(A, F).;false;false
0;false;movie(G, B), movie(G, H).;true;true
0;true;movie(D, B), movie(D, E).;true;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
1;true,true;genre(D, E), genre(A, E).;false;false
1;true;movie(C, D).;true;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true,false;movie(H, E), movie(H, A).;false;false
2;false,true;genre(E, F), genre(A, F).;true;true
2;false;movie(D, B), movie(D, E).;true;false
2;false,true,true;genre(B, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,true,false;movie(H, E), movie(H, B).;false;false
4;false,true;genre(E, F), genre(B, F).;true;true
4;false;movie(D, A), movie(D, E).;true;false
4;false,true,true;genre(A, G).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false;movie(D, B), movie(D, E).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false,true,false;genre(E, G), genre(A, G).;false;false
6;false,true;movie(F, E), movie(F, A).;false;true
6;false,false;movie(H, A), movie(H, I).;true;false
6;false;movie(D, B), movie(D, E).;true;true
6;false,false,true;genre(I, J), genre(A, J).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;movie(C, D).;false;false
7;false,true,false;movie(I, F), movie(I, B).;false;false
7;false,true;genre(F, G), genre(A, G).;true;true
7;false,false;movie(J, B), movie(J, K).;true;false
7;false;movie(E, A), movie(E, F).;true;true
7;false,false,true;genre(K, L), genre(A, L).;false;false
7;false,true,true;genre(F, H), genre(B, H).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;movie(I, A), movie(I, J).;false;true
8;false,false;movie(K, B), movie(K, L).;true;false
8;true,true;genre(E, F), genre(B, F).;true;true
8;true,true,false;genre(E, H), genre(A, H).;false;false
8;true,true,true;genre(A, G).;false;false
8;false,false,true;genre(L, M), genre(B, M).;false;false
8;true;movie(D, A), movie(D, E).;true;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(D, A) )
%   | | then return 0.661720363670941;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( genre(G, I), genre(A, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5609350667283574;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 1,05e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4440275917969893;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(H, E), movie(H, A) )
%   | | | then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.33685139605703973;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.25286275913656375;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.09269127618926093;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19141228931974416;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then return -0.0851847513883968;  // std dev = 2,24e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14705476720760274;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then return 0.11469660809076895;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), movie(E, F) )
%   | then if ( genre(F, G), genre(A, G) )
%   | | then if ( genre(F, H), genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(I, F), movie(I, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2870897109617375;  // std dev = 9,88e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.7129102890382625;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, A), movie(I, J) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07864587569717396;  // std dev = 2,322, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 0.975583
   AUC PR    = 0.977558
   CLL	      = -0.2775
   Precision = 0.80622 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.892715


Total learning time: 2.04 seconds
Total inference time: 1.038 seconds
AUC ROC: 0.975583


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(G, I), genre(A, I)', 'true,true': 'movie(D, A)', 'false,true': 'movie(H, G), movie(H, A)', 'false': 'movie(F, B), movie(F, G)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.973, 11, 45], 'false,true,true': [1.49e-08, 24, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(D, E), genre(A, E)', 'true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [2.973, 11, 45], 'true,true,true': [0.0, 0, 0], 'false': [1.05e-08, 34, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(H, E), movie(H, A)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'movie(D, B), movie(D, E)', 'false,true,true': 'genre(B, G)'}, {'false,true,false,true': [1.05e-08, 23, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,false,false': [0.0, 9, 0], 'false,false': [0.0, 0, 0], 'true': [2.973, 11, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 34, 0], 'true': [2.973, 11, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(H, E), movie(H, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)'}, {'false,true,false,true': [1.29e-08, 21, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'false,true,false,false': [0.0, 9, 0], 'false,false': [0.0, 0, 0], 'true': [2.973, 11, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true': [2.24e-08, 34, 0], 'false,false': [0.0, 0, 0], 'true': [2.973, 11, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 9, 0], 'true': [2.973, 11, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(I, F), movie(I, B)', 'false,true': 'genre(F, G), genre(A, G)', 'false,true,true': 'genre(F, H), genre(B, H)', 'false': 'movie(E, A), movie(E, F)', 'true': 'movie(C, D)'}, {'false,true,false,true': [0.0, 23, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [2.973, 11, 45], 'false,true,true,false': [0.0, 2, 0], 'false,true,false,false': [2.63e-09, 9, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'genre(E, F), genre(B, F)', 'true,true,false': 'genre(E, H), genre(A, H)', 'false': 'movie(I, A), movie(I, J)', 'true,true,true': 'genre(A, G)'}, {'true,true,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [9.88e-08, 0, 45], 'true,true,false,false': [0.0, 11, 0], 'false,true': [0.0, 34, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 34, 0], 'true': [2.322, 11, 45]}]]
[{'': [0.15784438775510257, 3.2653618371328135e-17], 'false,true,false': [0.0, -9.25185853854297e-18], 'true,true': [0.15784438775510257, nan], 'false,true': [9.25185853854297e-18, -1.1102230246251566e-17], 'false': [3.2653618371328135e-17, nan], 'true': [0.15784438775510257, nan]}, {'': [0.15784438775510182, 3.2653618371328133e-18], 'true,true': [nan, 0.15784438775510182], 'true': [0.15784438775510182, nan]}, {'': [0.15784438775510165, -1.1428766429964846e-17], 'false,true,false': [4.827056628805028e-18, -1.5419764230904951e-18], 'false,true': [0.0, -1.0408340855860843e-17], 'false': [-1.1428766429964846e-17, nan], 'false,true,true': [nan, 0.0]}, {'': [0.15784438775510187, -3.2653618371328133e-18]}, {'': [0.15784438775510232, -6.530723674265627e-18], 'false,true,false': [7.93016446160826e-18, 0.0], 'false,true': [0.0, -1.8503717077085942e-18], 'false': [-6.530723674265627e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.15784438775510204, 1.469412826709766e-17], 'false': [1.469412826709766e-17, nan]}, {'': [0.15784438775510196, 0.0], 'false,true,false': [0.0, -1.5419764230904951e-18], 'false,true': [0.0, -1.3877787807814458e-18], 'false': [0.0, nan]}, {'': [0.15784438775510207, 2.44902137784961e-18], 'false,true,false': [-1.8101462358018856e-18, 7.709882115452476e-19], 'false,true': [0.0, 1.734723475976807e-18], 'false,true,true': [nan, 0.0], 'false': [2.44902137784961e-18, nan], 'true': [0.15784438775510207, nan]}, {'': [0.15784438775510226, -2.44902137784961e-18], 'true': [0.15784438775510226, nan], 'true,true': [2.1711028037114172e-16, -1.6148698540002277e-16], 'true,true,false': [nan, -1.6148698540002277e-16], 'false': [-2.44902137784961e-18, nan], 'true,true,true': [nan, 2.1711028037114172e-16]}, {'': [0.09629776220315452, -8.163404592832033e-19]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false,false;genre(G, I), genre(A, I).;true;true', '0;false;movie(H, G), movie(H, A).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false,false;movie(H, E), movie(H, A).;true;true', '2;false;genre(E, F), genre(A, F).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false,false;movie(H, E), movie(H, B).;true;true', '4;false;genre(E, F), genre(B, F).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false,false;genre(E, G), genre(A, G).;true;true', '6;false;movie(F, E), movie(F, A).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false,false;movie(I, F), movie(I, B).;true;true', '7;false;genre(F, G), genre(A, G).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;true;genre(E, F), genre(B, F).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.12544463852839136;  // std dev = 1,05e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( movie(F, D), movie(F, A) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783627;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(A) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(F, D), movie(F, B) )
%   | | then return -0.092691276189261;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839682;  // std dev = 1,49e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( movie(F, D), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(B, E) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1527438580936709;  // std dev = 5,89e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801095;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13400703000801115;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( female(B) )
%   | then return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(B) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.99609
   AUC PR    = 0.994719
   CLL	      = -0.114707
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 2.025 seconds
Total inference time: 1.539 seconds
AUC ROC: 0.99609


Refined model AUC ROC: 0.99609


Dataset: cora->imdb(workedunder), Fold: 4, Type: transfer, Time: 04:08:59
{'AUC ROC': 0.99609, 'Recall': 1.0, 'Inference time': 1.539, 'F1': 0.991176, 'AUC PR': 0.994719, 'Precision': [0.982507, 0.5], 'Parameter Learning results': {'AUC ROC': 0.975583, 'Recall': 1.0, 'Inference time': 1.038, 'F1': 0.892715, 'AUC PR': 0.977558, 'Precision': [0.80622, 0.5], 'Learning time': 2.04, 'CLL': -0.2775}, 'Learning time': 4.0649999999999995, 'CLL': -0.114707, 'Mapping results': {'Generating mappings time': 0.061170339584350586, 'Total time': 3.02272367477417, 'Possible mappings': 126, 'Finding best mapping': 0.02804398536682129, 'Generating paths time': 2.529538631439209, 'Knowledge compiling time': 0.4039649963378906}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.991098
   AUC PR    = 0.982507
   CLL	      = -0.113016
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 1.714 seconds
Total inference time: 0.774 seconds
AUC ROC: 0.991098


Dataset: cora->imdb(workedunder), Fold: 4, Type: scratch, Time: 04:09:02
{'AUC ROC': 0.991098, 'Recall': 1.0, 'Inference time': 0.774, 'F1': 0.991176, 'AUC PR': 0.982507, 'Precision': [0.982507, 0.5], 'Learning time': 1.714, 'CLL': -0.113016}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.41893744468688965
   Generating paths time   = 2.525270462036133
   Generating mappings time   = 0.061371564865112305
   Possible mappings   = 126
   Finding best mapping   = 0.028360605239868164
   Total time   = 3.0339460372924805


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true,false;genre(H, J), genre(A, J).;false;false
0;false,true;movie(I, H), movie(I, A).;false;true
0;false,false;movie(K, A), movie(K, L).;false;false
0;true,true;movie(D, A).;false;true
0;true,true,false;genre(E, F), genre(A, F).;false;false
0;false;movie(G, B), movie(G, H).;true;true
0;true;movie(D, B), movie(D, E).;true;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
1;true,true;genre(D, E), genre(A, E).;false;false
1;true;movie(C, D).;true;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true,false;movie(H, E), movie(H, A).;false;false
2;false,true;genre(E, F), genre(A, F).;true;true
2;false;movie(D, B), movie(D, E).;true;false
2;false,true,true;genre(B, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,true,false;movie(H, E), movie(H, B).;false;false
4;false,true;genre(E, F), genre(B, F).;true;true
4;false;movie(D, A), movie(D, E).;true;false
4;false,true,true;genre(A, G).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false;movie(D, B), movie(D, E).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false,true,false;genre(E, G), genre(A, G).;false;false
6;false,true;movie(F, E), movie(F, A).;false;true
6;false,false;movie(H, A), movie(H, I).;true;false
6;false;movie(D, B), movie(D, E).;true;true
6;false,false,true;genre(I, J), genre(A, J).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;movie(C, D).;false;false
7;false,true,false;movie(I, F), movie(I, B).;false;false
7;false,true;genre(F, G), genre(A, G).;true;true
7;false,false;movie(J, B), movie(J, K).;true;false
7;false;movie(E, A), movie(E, F).;true;true
7;false,false,true;genre(K, L), genre(A, L).;false;false
7;false,true,true;genre(F, H), genre(B, H).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;movie(I, A), movie(I, J).;false;true
8;false,false;movie(K, B), movie(K, L).;true;false
8;true,true;genre(E, F), genre(B, F).;true;true
8;true,true,false;genre(E, H), genre(A, H).;false;false
8;true,true,true;genre(A, G).;false;false
8;false,false,true;genre(L, M), genre(B, M).;false;false
8;true;movie(D, A), movie(D, E).;true;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(D, A) )
%   | | then return 0.661720363670941;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(G, I), genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return -0.2426363618430711;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.5755454563387465;  // std dev = 2,860, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 1,05e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.44355017495477694;  // std dev = 2,933, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(H, E), movie(H, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3367037535282256;  // std dev = 2,928, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2529758661694994;  // std dev = 2,925, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19166961340566394;  // std dev = 2,925, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then return -0.0851847513883968;  // std dev = 2,24e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14737253080088403;  // std dev = 2,926, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07877675473109179;  // std dev = 5,27e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then return 0.11502779087277479;  // std dev = 2,926, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), movie(E, F) )
%   | then if ( genre(F, G), genre(A, G) )
%   | | then if ( genre(F, H), genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(I, F), movie(I, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.28402854610467965;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.5265708779599255;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.2159714538953203;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, A), movie(I, J) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07589225057756045;  // std dev = 2,695, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 0.985115
   AUC PR    = 0.986236
   CLL	      = -0.285384
   Precision = 0.823961 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.903485


Total learning time: 1.858 seconds
Total inference time: 1.033 seconds
AUC ROC: 0.985115


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(G, I), genre(A, I)', 'true,true': 'movie(D, A)', 'false,true': 'movie(H, G), movie(H, A)', 'false': 'movie(F, B), movie(F, G)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 8, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.973, 11, 45], 'false,true,true': [2.11e-08, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(D, E), genre(A, E)', 'true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [2.86, 10, 45], 'true,true,true': [0.0, 1, 0], 'false': [1.05e-08, 34, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(H, E), movie(H, A)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'movie(D, B), movie(D, E)', 'false,true,true': 'genre(B, G)'}, {'false,true,false,true': [0.0, 25, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,false': [0.0, 8, 0], 'false,false': [0.0, 0, 0], 'true': [2.933, 11, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 34, 0], 'true': [2.928, 11, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false,true': [7.45e-09, 26, 0], 'false,true,false,false': [0.0, 8, 0], 'true': [2.925, 11, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true': [2.24e-08, 34, 0], 'false,false': [0.0, 0, 0], 'true': [2.925, 11, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 8, 0], 'true': [2.926, 11, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [5.27e-09, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(I, F), movie(I, B)', 'false,true': 'genre(F, G), genre(A, G)', 'false,true,true': 'genre(F, H), genre(B, H)', 'false': 'movie(E, A), movie(E, F)', 'true': 'movie(C, D)'}, {'false,true,false,true': [0.0, 24, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [2.926, 11, 45], 'false,true,true,false': [0.0, 2, 0], 'false,true,false,false': [2.63e-09, 8, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'genre(E, F), genre(B, F)', 'true,true,false': 'genre(E, H), genre(A, H)', 'false': 'movie(I, A), movie(I, J)', 'true,true,true': 'genre(A, G)'}, {'true,true,false,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 35], 'true,true,false,false': [2.236, 10, 10], 'false,true': [0.0, 34, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 34, 0], 'true': [2.695, 11, 45]}]]
[{'': [0.15784438775510257, 3.2653618371328135e-17], 'false,true,false': [nan, 0.0], 'true,true': [0.15784438775510257, nan], 'false,true': [1.708035422500241e-17, -6.938893903907228e-18], 'false': [3.2653618371328135e-17, nan], 'true': [0.15784438775510257, nan]}, {'': [0.15784438775510182, 3.2653618371328133e-18], 'true,true': [0.0, 0.14876033057851276], 'true': [0.15784438775510182, nan]}, {'': [0.15365420440908398, -1.1428766429964846e-17], 'false,true,false': [0.0, -1.734723475976807e-18], 'false,true': [0.0, 8.41078048958452e-18], 'false': [-1.1428766429964846e-17, nan], 'false,true,true': [nan, 0.0]}, {'': [0.15305103657383823, 0.0]}, {'': [0.15280667984643584, -6.530723674265627e-18], 'false,true,false': [2.135044278125301e-18, 0.0], 'false,true': [nan, -3.2653618371328133e-18], 'false': [-6.530723674265627e-18, nan]}, {'': [0.15277239414060154, 1.469412826709766e-17], 'false': [1.469412826709766e-17, nan]}, {'': [0.15283495296027078, 0.0], 'false,true,false': [nan, 0.0], 'false,true': [1.0675221390626506e-18, -2.6020852139652106e-18], 'false': [0.0, nan]}, {'': [0.15293309067975752, 2.44902137784961e-18], 'false,true,false': [-1.1564823173178713e-18, 8.673617379884035e-19], 'false,true': [0.0, 8.673617379884035e-19], 'false,true,true': [nan, 0.0], 'false': [2.44902137784961e-18, nan], 'true': [0.15293309067975752, nan]}, {'': [0.15303792728471644, -2.44902137784961e-18], 'false': [-2.44902137784961e-18, nan], 'true,true': [0.0, 0.24247038558862877], 'true,true,false': [0.0, 0.25], 'true,true,true': [nan, 0.0], 'true': [0.15303792728471644, nan]}, {'': [0.12971355675805782, -8.163404592832033e-19]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false;movie(H, G), movie(H, A).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;true;genre(D, E), genre(A, E).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false,false;movie(H, E), movie(H, A).;true;true', '2;false;genre(E, F), genre(A, F).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;movie(G, E), movie(G, B).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;movie(F, E), movie(F, A).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false,false;movie(I, F), movie(I, B).;true;true', '7;false;genre(F, G), genre(A, G).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;true,false;genre(E, H), genre(A, H).;true;true', '8;true;genre(E, F), genre(B, F).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( director(B) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839136;  // std dev = 1,05e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( movie(F, D), movie(F, A) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 1,61e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08518475138839687;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(D, E), genre(A, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( movie(F, D), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E), genre(B, E) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( genre(D, F), genre(A, F) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.15274385809367078;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( actor(A) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.995549
   AUC PR    = 0.991176
   CLL	      = -0.10991
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 2.729 seconds
Total inference time: 1.291 seconds
AUC ROC: 0.995549


Refined model AUC ROC: 0.995549


Dataset: cora->imdb(workedunder), Fold: 5, Type: transfer, Time: 04:09:12
{'AUC ROC': 0.995549, 'Recall': 1.0, 'Inference time': 1.291, 'F1': 0.991176, 'AUC PR': 0.991176, 'Precision': [0.982507, 0.5], 'Parameter Learning results': {'AUC ROC': 0.985115, 'Recall': 1.0, 'Inference time': 1.033, 'F1': 0.903485, 'AUC PR': 0.986236, 'Precision': [0.823961, 0.5], 'Learning time': 1.858, 'CLL': -0.285384}, 'Learning time': 4.587, 'CLL': -0.10991, 'Mapping results': {'Generating mappings time': 0.061371564865112305, 'Total time': 3.0339460372924805, 'Possible mappings': 126, 'Finding best mapping': 0.028360605239868164, 'Generating paths time': 2.525270462036133, 'Knowledge compiling time': 0.41893744468688965}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1352095945470413;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.11622033579851573;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */


Results
   AUC ROC   = 0.935462
   AUC PR    = 0.889597
   CLL	      = -0.23826
   Precision = 0.877604 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.934813


Total learning time: 2.006 seconds
Total inference time: 0.768 seconds
AUC ROC: 0.935462


Dataset: cora->imdb(workedunder), Fold: 5, Type: scratch, Time: 04:09:15
{'AUC ROC': 0.935462, 'Recall': 1.0, 'Inference time': 0.768, 'F1': 0.934813, 'AUC PR': 0.889597, 'Precision': [0.877604, 0.5], 'Learning time': 2.006, 'CLL': -0.23826}


Starting experiment #5 for cora->imdb(workedunder)

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.4108571470971775;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.14661047356105084;  // std dev = 3,267, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.15444523139580865;  // std dev = 3,355, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.13907136696533606;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.35316358124032;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.13912056329303057;  // std dev = 0,459, 63,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.02176788419240575;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.13458565557492252;  // std dev = 3,355, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.12128505347454718;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2907816711253487;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4914825585814084;  // std dev = 1,165, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15279286491311547;  // std dev = 0,057, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.09416658094708888;  // std dev = 0,439, 56,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.021226108638800072;  // std dev = 0,909, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.10936078678037285;  // std dev = 3,368, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return 0.10433533807002326;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23083959318066555;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.11803781727799532;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1622186235297196;  // std dev = 1,591, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.09088943342622241;  // std dev = 3,250, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.011901917264922892;  // std dev = 0,841, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.09728027642921334;  // std dev = 3,335, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.08864948598435836;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.17853574814437423;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.10630096234049925;  // std dev = 0,020, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.14718470243897136;  // std dev = 1,476, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.08469422120509477;  // std dev = 3,241, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.06487911610040799;  // std dev = 0,448, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else return 0.07450527062728336;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13588355615886066;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.09662292287040325;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.12192160468220004;  // std dev = 1,466, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.07033636144295152;  // std dev = 3,240, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.06109733103568089;  // std dev = 0,449, 538,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10252703725362321;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.0885162904562652;  // std dev = 0,017, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.09957573208850211;  // std dev = 1,459, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.05789053463449879;  // std dev = 3,240, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.06132952596534528;  // std dev = 0,904, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.05432776157122577;  // std dev = 3,367, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return 0.051408201815568634;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07704188956832556;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.08163380842834944;  // std dev = 0,016, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.08040652058622522;  // std dev = 1,453, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0472943811482493;  // std dev = 3,239, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.0350252912501596;  // std dev = 0,447, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else return 0.04219117187202561;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05780047997972216;  // std dev = 0,497, 5.151,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.075722075186088;  // std dev = 0,015, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.10162341357155819;  // std dev = 1,582, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.03760996089392253;  // std dev = 3,234, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.046961835107152676;  // std dev = 0,808, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.02989410066785395;  // std dev = 3,332, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.034439102484384275;  // std dev = 0,449, 477,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=134 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.36564341646341353;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.10001841646341353;  // std dev = 3,903, 64,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | | | else return -0.1002656744456774;  // std dev = 3,994, 66,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=27 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.08155250737250444;  // std dev = 3,994, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return -0.08078515496515791;  // std dev = 3,928, 63,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=27 */
%   | | else return 0.044053441114182634;  // std dev = 0,497, 4.868,000 (wgt'ed) examples reached here.  /* #neg=2.174 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then if ( haswordauthor(K, L), haswordvenue(A, L) )
%   | | then return -0.07059222829959065;  // std dev = 0,014, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.03940861688592542;  // std dev = 0,454, 63,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else return 0.026839240547913278;  // std dev = 0,449, 537,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=151 */


Predicates from source: ['samevenue(venue,venue).', 'author(class,author).', 'haswordauthor(author,word).', 'samebib(class,class).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 0.3959038257598877
   Generating paths time   = 2.4644291400909424
   Generating mappings time   = 0.06031012535095215
   Possible mappings   = 126
   Finding best mapping   = 0.028772354125976562
   Total time   = 2.9494218826293945


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;false,true,false;genre(E, G), genre(A, G).;false;false
0;false,true;movie(F, E), movie(F, A).;false;true
0;false,false;movie(H, A), movie(H, I).;true;false
0;false;movie(D, B), movie(D, E).;true;true
0;false,false,true;genre(I, J), genre(A, J).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false,true;movie(F, E), movie(F, A).;false;false
1;false,false;movie(G, A), movie(G, H).;true;false
1;false;movie(D, B), movie(D, E).;true;true
1;false,false,true;genre(H, I), genre(A, I).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true;genre(E, F), genre(B, F).;true;false
2;false,false;movie(H, B), movie(H, I).;true;false
2;false;movie(D, A), movie(D, E).;true;true
2;false,false,true;genre(I, J), genre(B, J).;false;false
2;false,true,true;genre(A, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false,true,false;genre(E, G), genre(A, G).;false;false
3;false,true;movie(F, E), movie(F, A).;false;true
3;false,false;movie(H, A), movie(H, I).;true;false
3;false;movie(D, B), movie(D, E).;true;true
3;false,false,true;genre(I, J), genre(A, J).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,true,false;genre(E, G), genre(B, G).;false;false
4;false,true;movie(F, E), movie(F, B).;false;true
4;false,false;movie(H, B), movie(H, I).;false;false
4;false;movie(D, A), movie(D, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false,true,false;genre(E, G), genre(B, G).;false;false
5;false,true;movie(F, E), movie(F, B).;false;true
5;false;movie(D, A), movie(D, E).;true;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false,true,false;genre(E, G), genre(B, G).;false;false
6;false,true;movie(F, E), movie(F, B).;false;true
6;false,false;movie(H, B), movie(H, I).;true;false
6;false;movie(D, A), movie(D, E).;true;true
6;false,false,true;genre(I, J), genre(B, J).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false,true,false;genre(E, G), genre(B, G).;false;false
7;false,true;movie(F, E), movie(F, B).;false;true
7;false,false;movie(H, B), movie(H, I).;false;false
7;false;movie(D, A), movie(D, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false,true,false;genre(E, G), genre(A, G).;false;false
8;false,true;movie(F, E), movie(F, A).;false;true
8;false,false;movie(H, A), movie(H, I).;true;false
8;false;movie(D, B), movie(D, E).;true;true
8;false,false,true;genre(I, J), genre(A, J).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;movie(L, K), movie(L, A).;false;false
9;true,true;movie(D, A).;false;true
9;true,false,true;genre(H, I), genre(B, I).;false;false
9;true,false;movie(G, A), movie(G, H).;true;false
9;true,true,false;genre(E, F), genre(A, F).;false;false
9;false;movie(J, B), movie(J, K).;true;false
9;true;movie(D, B), movie(D, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6697431379980635;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.56748050185077;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.44868889566071973;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360636;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3400851726375641;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.25533402946634376;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1935319070352755;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0851847513883968;  // std dev = 1,90e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14900284920739562;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11653773041487836;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07324622576333704;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0924129012950206;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(D, A) )
%   | | then return 0.07413251314943417;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.878834
   AUC PR    = 0.804938
   CLL	      = -0.335172
   Precision = 0.804938 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.891929


Total learning time: 1.776 seconds
Total inference time: 0.735 seconds
AUC ROC: 0.878834


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 2, 0], 'false,true,false,false': [2.36e-08, 27, 0], 'true': [3.248, 13, 56], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 29, 0], 'true': [3.248, 13, 56], 'false,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)'}, {'false,true,true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 42, 0], 'false,false': [0.0, 0, 0], 'true': [3.248, 13, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 2, 0], 'false,true,false,false': [0.0, 27, 0], 'true': [3.248, 13, 56], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 28, 0], 'true': [3.248, 13, 56], 'false,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [1.9e-08, 28, 0], 'true': [3.248, 13, 56], 'false,false': [0.0, 0, 0], 'false,true,true': [8.33e-09, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 28, 0], 'true': [3.248, 13, 56], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [5.27e-09, 28, 0], 'true': [3.248, 13, 56], 'false,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 2, 0], 'false,true,false,false': [0.0, 27, 0], 'true': [3.248, 13, 56], 'false,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, A)', 'false,true': 'movie(H, G), movie(H, A)', 'false': 'movie(F, B), movie(F, G)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.248, 13, 56], 'false,true,true': [6.97e-09, 14, 0]}]]
[{'': [0.1529090527200164, 4.6474452193611206e-17], 'false,true,false': [0.0, 2.05596856412066e-17], 'false,true': [-1.1895246692412391e-17, 2.2970131543968756e-17], 'false': [4.6474452193611206e-17, nan]}, {'': [0.15290905272001531, 3.0982968129074136e-17], 'false,true': [3.96508223080413e-18, -5.742532885992189e-18], 'false': [3.0982968129074136e-17, nan]}, {'': [0.15290905272001734, 2.581914010756178e-18], 'false,true': [0.0, 0.0], 'false': [2.581914010756178e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.15290905272001654, 3.872871016134267e-18], 'false,true,false': [0.0, -2.05596856412066e-18], 'false,true': [-3.96508223080413e-18, 0.0], 'false': [3.872871016134267e-18, nan]}, {'': [0.1529090527200172, -3.872871016134267e-18], 'false,true,false': [0.0, -1.1895246692412391e-17], 'false,true': [3.96508223080413e-18, -8.613799328988284e-18], 'false': [-3.872871016134267e-18, nan]}, {'': [0.15290905272001698, 1.1618613048402802e-17], 'false,true,false': [0.0, 1.2886517250113425e-17], 'false,true': [4.956352788505163e-18, 1.3399243400648442e-17], 'false': [1.1618613048402802e-17, nan]}, {'': [0.15290905272001698, -2.581914010756178e-18], 'false,true,false': [0.0, 0.0], 'false,true': [-9.912705577010326e-19, 0.0], 'false': [-2.581914010756178e-18, nan]}, {'': [0.1529090527200169, 3.2273925134452225e-18], 'false,true,false': [0.0, 9.912705577010326e-19], 'false,true': [9.912705577010326e-19, 1.914177628664063e-18], 'false': [3.2273925134452225e-18, nan]}, {'': [0.15290905272001684, 1.290957005378089e-18], 'false,true,false': [0.0, -5.13992141030165e-18], 'false,true': [9.912705577010326e-19, -5.742532885992189e-18], 'false': [1.290957005378089e-18, nan]}, {'': [0.1529090527200169, -1.9364355080671335e-18], 'false,true': [3.469446951953614e-18, -4.785444071660157e-19], 'true,true': [0.1529090527200169, nan], 'false': [-1.9364355080671335e-18, nan], 'true': [0.1529090527200169, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false,false;genre(E, G), genre(A, G).;true;true', '0;false;movie(F, E), movie(F, A).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;movie(F, E), movie(F, A).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;genre(E, F), genre(B, F).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false,false;genre(E, G), genre(A, G).;true;true', '3;false;movie(F, E), movie(F, A).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false,false;genre(E, G), genre(B, G).;true;true', '4;false;movie(F, E), movie(F, B).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;false,false;genre(E, G), genre(B, G).;true;true', '5;false;movie(F, E), movie(F, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false,false;genre(E, G), genre(B, G).;true;true', '6;false;movie(F, E), movie(F, B).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false,false;genre(E, G), genre(B, G).;true;true', '7;false;movie(F, E), movie(F, B).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;false,false;genre(E, G), genre(A, G).;true;true', '8;false;movie(F, E), movie(F, A).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;movie(H, G), movie(H, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.12544463852839152;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.09269127618926101;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801087;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202619;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.990798
   AUC PR    = 0.981928
   CLL	      = -0.113637
   Precision = 0.981928 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990881


Total learning time: 3.989 seconds
Total inference time: 1.768 seconds
AUC ROC: 0.990798


Refined model AUC ROC: 0.990798


Dataset: cora->imdb(workedunder), Fold: 1, Type: transfer, Time: 06:15:39
{'AUC ROC': 0.990798, 'Recall': 1.0, 'Inference time': 1.768, 'F1': 0.990881, 'AUC PR': 0.981928, 'Precision': [0.981928, 0.5], 'Parameter Learning results': {'AUC ROC': 0.878834, 'Recall': 1.0, 'Inference time': 0.735, 'F1': 0.891929, 'AUC PR': 0.804938, 'Precision': [0.804938, 0.5], 'Learning time': 1.776, 'CLL': -0.335172}, 'Learning time': 5.765, 'CLL': -0.113637, 'Mapping results': {'Generating mappings time': 0.06031012535095215, 'Total time': 2.9494218826293945, 'Possible mappings': 126, 'Finding best mapping': 0.028772354125976562, 'Generating paths time': 2.4644291400909424, 'Knowledge compiling time': 0.3959038257598877}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.6909105759500754;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109546;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5354626841427582;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.4024026492217927;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4175135841583101;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.30700250684980995;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3207118471601494;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.24152182581632603;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.25517224256948956;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1958080954961511;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.20975771563253548;  // std dev = 3,33e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1628100390760043;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1770964977452775;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13816881840032139;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.11920579263429053;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */


Results
   AUC ROC   = 0.920833
   AUC PR    = 0.860033
   CLL	      = -0.244754
   Precision = 0.873995 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932761


Total learning time: 2.174 seconds
Total inference time: 0.68 seconds
AUC ROC: 0.920833


Dataset: cora->imdb(workedunder), Fold: 1, Type: scratch, Time: 06:15:42
{'AUC ROC': 0.920833, 'Recall': 1.0, 'Inference time': 0.68, 'F1': 0.932761, 'AUC PR': 0.860033, 'Precision': [0.873995, 0.5], 'Learning time': 2.174, 'CLL': -0.244754}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 0.3570218086242676
   Generating paths time   = 2.064981460571289
   Generating mappings time   = 0.06079435348510742
   Possible mappings   = 126
   Finding best mapping   = 0.02891254425048828
   Total time   = 2.5117175579071045


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;false,true,false;genre(E, G), genre(A, G).;false;false
0;false,true;movie(F, E), movie(F, A).;false;true
0;false,false;movie(H, A), movie(H, I).;true;false
0;false;movie(D, B), movie(D, E).;true;true
0;false,false,true;genre(I, J), genre(A, J).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false,true;movie(F, E), movie(F, A).;false;false
1;false,false;movie(G, A), movie(G, H).;true;false
1;false;movie(D, B), movie(D, E).;true;true
1;false,false,true;genre(H, I), genre(A, I).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true;genre(E, F), genre(B, F).;true;false
2;false,false;movie(H, B), movie(H, I).;true;false
2;false;movie(D, A), movie(D, E).;true;true
2;false,false,true;genre(I, J), genre(B, J).;false;false
2;false,true,true;genre(A, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false,true,false;genre(E, G), genre(A, G).;false;false
3;false,true;movie(F, E), movie(F, A).;false;true
3;false,false;movie(H, A), movie(H, I).;true;false
3;false;movie(D, B), movie(D, E).;true;true
3;false,false,true;genre(I, J), genre(A, J).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,true,false;genre(E, G), genre(B, G).;false;false
4;false,true;movie(F, E), movie(F, B).;false;true
4;false,false;movie(H, B), movie(H, I).;false;false
4;false;movie(D, A), movie(D, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false,true,false;genre(E, G), genre(B, G).;false;false
5;false,true;movie(F, E), movie(F, B).;false;true
5;false;movie(D, A), movie(D, E).;true;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false,true,false;genre(E, G), genre(B, G).;false;false
6;false,true;movie(F, E), movie(F, B).;false;true
6;false,false;movie(H, B), movie(H, I).;true;false
6;false;movie(D, A), movie(D, E).;true;true
6;false,false,true;genre(I, J), genre(B, J).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false,true,false;genre(E, G), genre(B, G).;false;false
7;false,true;movie(F, E), movie(F, B).;false;true
7;false,false;movie(H, B), movie(H, I).;false;false
7;false;movie(D, A), movie(D, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false,true,false;genre(E, G), genre(A, G).;false;false
8;false,true;movie(F, E), movie(F, A).;false;true
8;false,false;movie(H, A), movie(H, I).;true;false
8;false;movie(D, B), movie(D, E).;true;true
8;false,false,true;genre(I, J), genre(A, J).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;movie(L, K), movie(L, A).;false;false
9;true,true;movie(D, A).;false;true
9;true,false,true;genre(H, I), genre(B, I).;false;false
9;true,false;movie(G, A), movie(G, H).;true;false
9;true,true,false;genre(E, F), genre(A, F).;false;false
9;false;movie(J, B), movie(J, K).;true;false
9;true;movie(D, B), movie(D, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6419327188832966;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.544765136174259;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4324774812776738;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3288671735260793;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24684060404597968;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1863261289762244;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.08518475138839679;  // std dev = 1,67e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14243817816780466;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11037408596762807;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07324622576333704;  // std dev = 1,18e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08657919951629273;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06842697784420271;  // std dev = 7,45e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(D, A) )
%   | | then return 0.0686192957983845;  // std dev = 3,541, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.882716
   AUC PR    = 0.81
   CLL	      = -0.353945
   Precision = 0.81 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.895028


Total learning time: 1.536 seconds
Total inference time: 1.144 seconds
AUC ROC: 0.882716


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.541, 16, 58], 'false,false': [0.0, 0, 0], 'false,true,true': [4.47e-08, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.541, 16, 58], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)'}, {'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 40, 0], 'false,false': [0.0, 0, 0], 'true': [3.541, 16, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.541, 16, 58], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.541, 16, 58], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.541, 16, 58], 'false,false': [0.0, 0, 0], 'false,true,true': [1.67e-08, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.541, 16, 58], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.541, 16, 58], 'false,false': [0.0, 0, 0], 'false,true,true': [1.18e-08, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.541, 16, 58], 'false,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, A)', 'false,true': 'movie(H, G), movie(H, A)', 'false': 'movie(F, B), movie(F, G)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [3.541, 16, 58], 'false,true,true': [0.0, 42, 0]}]]
[{'': [0.16946676406135816, 4.7580986769649563e-17], 'false,true': [4.7580986769649563e-17, nan], 'false': [4.7580986769649563e-17, nan]}, {'': [0.1694667640613594, -2.6433881538694202e-17], 'false,true': [-2.6433881538694202e-17, nan], 'false': [-2.6433881538694202e-17, nan]}, {'': [0.1694667640613589, 0.0], 'false,true': [0.0, -5.551115123125783e-18], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.16946676406135908, -3.96508223080413e-18], 'false,true': [-3.96508223080413e-18, nan], 'false': [-3.96508223080413e-18, nan]}, {'': [0.1694667640613588, -1.4538634846281813e-17], 'false,true': [-1.4538634846281813e-17, nan], 'false': [-1.4538634846281813e-17, nan]}, {'': [0.16946676406135874, 6.6084703846735505e-18], 'false,true': [6.6084703846735505e-18, nan], 'false': [6.6084703846735505e-18, nan]}, {'': [0.1694667640613586, -2.64338815386942e-18], 'false,true': [-2.64338815386942e-18, nan], 'false': [-2.64338815386942e-18, nan]}, {'': [0.16946676406135855, 3.3042351923367752e-18], 'false,true': [3.3042351923367752e-18, nan], 'false': [3.3042351923367752e-18, nan]}, {'': [0.16946676406135852, 1.32169407693471e-18], 'false,true': [1.32169407693471e-18, nan], 'false': [1.32169407693471e-18, nan]}, {'': [0.16946676406135877, -2.64338815386942e-18], 'false,true': [-2.64338815386942e-18, nan], 'true,true': [0.16946676406135877, nan], 'false': [-2.64338815386942e-18, nan], 'true': [0.16946676406135877, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false;genre(E, F), genre(B, F).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(D, E), genre(B, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.10159632948783633;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.09269127618926101;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.08518475138839685;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.07877675473109177;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07324622576333704;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0684269778442027;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0684269778442027;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.0684269778442027;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.0684269778442027;  // std dev = 5,27e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.0684269778442027;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1340070300080111;  // std dev = 2,63e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.06419184008202623;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */


Results
   AUC ROC   = 0.990741
   AUC PR    = 0.981818
   CLL	      = -0.113754
   Precision = 0.981818 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990826


Total learning time: 2.327 seconds
Total inference time: 0.892 seconds
AUC ROC: 0.990741


Refined model AUC ROC: 0.990741


Dataset: cora->imdb(workedunder), Fold: 2, Type: transfer, Time: 06:15:52
{'AUC ROC': 0.990741, 'Recall': 1.0, 'Inference time': 0.892, 'F1': 0.990826, 'AUC PR': 0.981818, 'Precision': [0.981818, 0.5], 'Parameter Learning results': {'AUC ROC': 0.882716, 'Recall': 1.0, 'Inference time': 1.144, 'F1': 0.895028, 'AUC PR': 0.81, 'Precision': [0.81, 0.5], 'Learning time': 1.536, 'CLL': -0.353945}, 'Learning time': 3.863, 'CLL': -0.113754, 'Mapping results': {'Generating mappings time': 0.06079435348510742, 'Total time': 2.5117175579071045, 'Possible mappings': 126, 'Finding best mapping': 0.02891254425048828, 'Generating paths time': 2.064981460571289, 'Knowledge compiling time': 0.3570218086242676}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.990741
   AUC PR    = 0.981818
   CLL	      = -0.113754
   Precision = 0.981818 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990826


Total learning time: 1.819 seconds
Total inference time: 0.776 seconds
AUC ROC: 0.990741


Dataset: cora->imdb(workedunder), Fold: 2, Type: scratch, Time: 06:15:54
{'AUC ROC': 0.990741, 'Recall': 1.0, 'Inference time': 0.776, 'F1': 0.990826, 'AUC PR': 0.981818, 'Precision': [0.981818, 0.5], 'Learning time': 1.819, 'CLL': -0.113754}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 0.35737180709838867
   Generating paths time   = 2.1267824172973633
   Generating mappings time   = 0.048992156982421875
   Possible mappings   = 126
   Finding best mapping   = 0.021620750427246094
   Total time   = 2.5547733306884766


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;false,true,false;genre(E, G), genre(A, G).;false;false
0;false,true;movie(F, E), movie(F, A).;false;true
0;false,false;movie(H, A), movie(H, I).;true;false
0;false;movie(D, B), movie(D, E).;true;true
0;false,false,true;genre(I, J), genre(A, J).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false,true;movie(F, E), movie(F, A).;false;false
1;false,false;movie(G, A), movie(G, H).;true;false
1;false;movie(D, B), movie(D, E).;true;true
1;false,false,true;genre(H, I), genre(A, I).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true;genre(E, F), genre(B, F).;true;false
2;false,false;movie(H, B), movie(H, I).;true;false
2;false;movie(D, A), movie(D, E).;true;true
2;false,false,true;genre(I, J), genre(B, J).;false;false
2;false,true,true;genre(A, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false,true,false;genre(E, G), genre(A, G).;false;false
3;false,true;movie(F, E), movie(F, A).;false;true
3;false,false;movie(H, A), movie(H, I).;true;false
3;false;movie(D, B), movie(D, E).;true;true
3;false,false,true;genre(I, J), genre(A, J).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,true,false;genre(E, G), genre(B, G).;false;false
4;false,true;movie(F, E), movie(F, B).;false;true
4;false,false;movie(H, B), movie(H, I).;false;false
4;false;movie(D, A), movie(D, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false,true,false;genre(E, G), genre(B, G).;false;false
5;false,true;movie(F, E), movie(F, B).;false;true
5;false;movie(D, A), movie(D, E).;true;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false,true,false;genre(E, G), genre(B, G).;false;false
6;false,true;movie(F, E), movie(F, B).;false;true
6;false,false;movie(H, B), movie(H, I).;true;false
6;false;movie(D, A), movie(D, E).;true;true
6;false,false,true;genre(I, J), genre(B, J).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false,true,false;genre(E, G), genre(B, G).;false;false
7;false,true;movie(F, E), movie(F, B).;false;true
7;false,false;movie(H, B), movie(H, I).;false;false
7;false;movie(D, A), movie(D, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false,true,false;genre(E, G), genre(A, G).;false;false
8;false,true;movie(F, E), movie(F, A).;false;true
8;false,false;movie(H, A), movie(H, I).;true;false
8;false;movie(D, B), movie(D, E).;true;true
8;false,false,true;genre(I, J), genre(A, J).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;movie(L, K), movie(L, A).;false;false
9;true,true;movie(D, A).;false;true
9;true,false,true;genre(H, I), genre(B, I).;false;false
9;true,false;movie(G, A), movie(G, H).;true;false
9;true,true,false;genre(E, F), genre(A, F).;false;false
9;false;movie(J, B), movie(J, K).;true;false
9;true;movie(D, B), movie(D, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6709343232273629;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.14185106490048766;  // std dev = 7,60e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5684518199673092;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.1254446385283913;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4493799511287352;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360626;  // std dev = 7,15e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3405652271651408;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.1015963294878362;  // std dev = 5,77e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.25570251799533067;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.092691276189261;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1938495521088778;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.08518475138839682;  // std dev = 1,49e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.08518475138839691;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839685;  // std dev = 4,08e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1492959516977717;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0787767547310917;  // std dev = 3,94e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11681556415838365;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09267788774357363;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0684269778442027;  // std dev = 3,16e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(D, A) )
%   | | then return 0.07438466731487134;  // std dev = 5,773, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return -0.06419184008202622;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.06419184008202626;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.340098
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 2.8 seconds
Total inference time: 0.861 seconds
AUC ROC: 0.875


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 11, 0], 'false,true,false,false': [7.6e-08, 104, 0], 'true': [5.773, 41, 178], 'false,false': [0.0, 0, 0], 'false,true,true': [1.05e-08, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 115, 0], 'true': [5.773, 41, 178], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'movie(D, A), movie(D, E)', 'false,true,true': 'genre(A, G)'}, {'false,true,true,false': [0.0, 8, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,false': [7.15e-08, 127, 0], 'false,false': [0.0, 0, 0], 'true': [5.773, 41, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 11, 0], 'false,true,false,false': [5.77e-08, 104, 0], 'true': [5.773, 41, 178], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false,true': [0.0, 6, 0], 'false,true,false,false': [0.0, 109, 0], 'true': [5.773, 41, 178], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false,true': [0.0, 6, 0], 'false,true,false,false': [4.08e-08, 109, 0], 'true': [5.773, 41, 178], 'false,false': [0.0, 0, 0], 'false,true,true': [1.49e-08, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false,true': [0.0, 6, 0], 'false,true,false,false': [3.94e-08, 109, 0], 'true': [5.773, 41, 178], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false,true': [0.0, 6, 0], 'false,true,false,false': [0.0, 109, 0], 'true': [5.773, 41, 178], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [2.63e-09, 11, 0], 'false,true,false,false': [3.16e-08, 104, 0], 'true': [5.773, 41, 178], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, A)', 'false,true': 'movie(H, G), movie(H, A)', 'false': 'movie(F, B), movie(F, G)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 115, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.773, 41, 178], 'false,true,true': [0.0, 22, 0]}]]
[{'': [0.15216530097371384, -6.807206866314829e-17], 'false,true,false': [-1.0092936587501423e-17, 5.551115123125783e-17], 'false,true': [5.046468293750712e-18, 3.8616453030440226e-17], 'false': [-6.807206866314829e-17, nan]}, {'': [0.15216530097371034, -6.4830541583950745e-18], 'false,true': [-2.523234146875356e-18, -5.792467954566034e-18], 'false': [-6.4830541583950745e-18, nan]}, {'': [0.15216530097370537, 7.77966499007409e-17], 'false,true': [0.0, 4.0212802466737956e-17], 'false': [7.77966499007409e-17, nan], 'false,true,true': [0.0, -1.734723475976807e-18]}, {'': [0.15216530097370667, -4.3760615569166756e-17], 'false,true,false': [-6.308085367188389e-18, 3.202566417187951e-17], 'false,true': [-1.261617073437678e-18, -1.544658121217609e-17], 'false': [-4.3760615569166756e-17, nan]}, {'': [0.1521653009737077, 4.538137910876552e-17], 'false,true,false': [-1.1564823173178713e-18, -3.0556597008031833e-18], 'false,true': [-2.523234146875356e-18, 4.344350965924526e-17], 'false': [4.538137910876552e-17, nan]}, {'': [0.15216530097370823, 3.6467179640972294e-17], 'false,true,false': [-1.1564823173178713e-18, 1.5278298504015917e-17], 'false,true': [1.0092936587501423e-17, 3.572021905315721e-17], 'false': [3.6467179640972294e-17, nan]}, {'': [0.1521653009737082, 4.2139852029567983e-17], 'false,true,false': [-1.1564823173178713e-18, 1.4259745270414855e-17], 'false,true': [-2.523234146875356e-18, 3.6685630378918214e-17], 'false': [4.2139852029567983e-17, nan]}, {'': [0.15216530097370803, 3.322565256177476e-17], 'false,true,false': [0.0, -2.0371064672021222e-18], 'false,true': [-1.8924256101565167e-18, 7.723290606088046e-18], 'false': [3.322565256177476e-17, nan]}, {'': [0.152165300973708, 2.8363361942978454e-17], 'false,true,false': [6.30808536718839e-19, 9.607699251563854e-18], 'false,true': [-3.784851220313033e-18, 2.5100694469786148e-17], 'false': [2.8363361942978454e-17, nan]}, {'': [0.1521653009737079, -1.2966108316790149e-17], 'false,true': [0.0, -1.68946982008176e-17], 'true,true': [0.1521653009737079, nan], 'false': [-1.2966108316790149e-17, nan], 'true': [0.1521653009737079, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false,false;genre(E, G), genre(A, G).;true;true', '0;false;movie(F, E), movie(F, A).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;movie(F, E), movie(F, A).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '2;false,true;genre(A, G).;true;true', '2;false;genre(E, F), genre(B, F).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false,false;genre(E, G), genre(A, G).;true;true', '3;false;movie(F, E), movie(F, A).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false,false;genre(E, G), genre(B, G).;true;true', '4;false;movie(F, E), movie(F, B).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;false,false;genre(E, G), genre(B, G).;true;true', '5;false;movie(F, E), movie(F, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false,false;genre(E, G), genre(B, G).;true;true', '6;false;movie(F, E), movie(F, B).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false,false;genre(E, G), genre(B, G).;true;true', '7;false;movie(F, E), movie(F, B).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;false,false;genre(E, G), genre(A, G).;true;true', '8;false;movie(F, E), movie(F, A).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;movie(H, G), movie(H, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.14185106490048796;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.12544463852839113;  // std dev = 6,83e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.12544463852839136;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( actor(A) )
%   | | | then return -0.12544463852839136;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.12544463852839136;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( genre(D, E), genre(B, E) )
%   | then if ( genre(A, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360633;  // std dev = 3,48e-09, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.10159632948783642;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839683;  // std dev = 2,95e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839679;  // std dev = 1,86e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1,67e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.0851847513883968;  // std dev = 1,67e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.06842697784420271;  // std dev = 5,27e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420267;  // std dev = 1,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return -0.06842697784420265;  // std dev = 1,67e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06419184008202618;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202626;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( actor(A) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.06419184008202618;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.715 seconds
Total inference time: 1.281 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: transfer, Time: 06:16:08
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 1.281, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Parameter Learning results': {'AUC ROC': 0.875, 'Recall': 1.0, 'Inference time': 0.861, 'F1': 0.888889, 'AUC PR': 0.8, 'Precision': [0.8, 0.5], 'Learning time': 2.8, 'CLL': -0.340098}, 'Learning time': 8.515, 'CLL': -0.094637, 'Mapping results': {'Generating mappings time': 0.048992156982421875, 'Total time': 2.5547733306884766, 'Possible mappings': 126, 'Finding best mapping': 0.021620750427246094, 'Generating paths time': 2.1267824172973633, 'Knowledge compiling time': 0.35737180709838867}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048796;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839122;  // std dev = 6,32e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360625;  // std dev = 8,43e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783642;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926096;  // std dev = 1,49e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839679;  // std dev = 4,47e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109165;  // std dev = 5,96e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333706;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420267;  // std dev = 4,94e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06419184008202625;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.976 seconds
Total inference time: 0.761 seconds
AUC ROC: 1.0


Dataset: cora->imdb(workedunder), Fold: 3, Type: scratch, Time: 06:16:12
{'AUC ROC': 1.0, 'Recall': 1.0, 'Inference time': 0.761, 'F1': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 2.976, 'CLL': -0.094637}


Starting fold 4

Mapping Results
   Knowledge compiling time   = 0.35413622856140137
   Generating paths time   = 2.4512176513671875
   Generating mappings time   = 0.06172895431518555
   Possible mappings   = 126
   Finding best mapping   = 0.027962684631347656
   Total time   = 2.8950514793395996


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> movie(A,B)', 'author(A,B) -> movie(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'haswordvenue(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
0;false,true,false;movie(G, E), movie(G, A).;false;false
0;false,true;genre(E, F), genre(A, F).;false;true
0;false,false;genre(A, H), genre(I, H).;true;false
0;false;genre(B, D), genre(E, D).;true;true
0;false,false,true;movie(J, I), movie(J, A).;false;false
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
1;false,true;genre(E, F), genre(A, F).;false;false
1;false,false;genre(A, G), genre(H, G).;true;false
1;false;genre(B, D), genre(E, D).;true;true
1;false,false,true;movie(I, H), movie(I, A).;false;false
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
2;false,true;movie(F, E), movie(F, B).;true;false
2;false,false;genre(B, H), genre(I, H).;true;false
2;false;genre(A, D), genre(E, D).;true;true
2;false,false,true;movie(J, I), movie(J, B).;false;false
2;false,true,true;movie(G, A).;false;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false,true,false;movie(G, E), movie(G, A).;false;false
3;false,true;genre(E, F), genre(A, F).;false;true
3;false,false;genre(A, H), genre(I, H).;true;false
3;false;genre(B, D), genre(E, D).;true;true
3;false,false,true;movie(J, I), movie(J, A).;false;false
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
4;false,true,false;movie(G, E), movie(G, B).;false;false
4;false,true;genre(E, F), genre(B, F).;false;true
4;false,false;genre(B, H), genre(I, H).;false;false
4;false;genre(A, D), genre(E, D).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
5;false,true,false;movie(G, E), movie(G, B).;false;false
5;false,true;genre(E, F), genre(B, F).;false;true
5;false;genre(A, D), genre(E, D).;true;false
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
6;false,true,false;movie(G, E), movie(G, B).;false;false
6;false,true;genre(E, F), genre(B, F).;false;true
6;false,false;genre(B, H), genre(I, H).;true;false
6;false;genre(A, D), genre(E, D).;true;true
6;false,false,true;movie(J, I), movie(J, B).;false;false
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
7;false,true,false;movie(G, E), movie(G, B).;false;false
7;false,true;genre(E, F), genre(B, F).;false;true
7;false,false;genre(B, H), genre(I, H).;false;false
7;false;genre(A, D), genre(E, D).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
8;false,true,false;movie(G, E), movie(G, A).;false;false
8;false,true;genre(E, F), genre(A, F).;false;true
8;false,false;genre(A, H), genre(I, H).;true;false
8;false;genre(B, D), genre(E, D).;true;true
8;false,false,true;movie(J, I), movie(J, A).;false;false
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;false,true;genre(K, L), genre(A, L).;false;false
9;true,true;genre(A, D).;false;true
9;true,false,true;movie(I, H), movie(I, B).;false;false
9;true,false;genre(A, G), genre(H, G).;true;false
9;true,true,false;movie(F, E), movie(F, A).;false;false
9;false;genre(B, J), genre(K, J).;true;false
9;true;genre(B, D), genre(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.7765162820382877;  // std dev = 1,917, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.6540179767262501;  // std dev = 1,917, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | else if ( genre(A, G), genre(H, G) )
%   | | then if ( movie(I, H), movie(I, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, B) )
%   | | | then return 0.5096972233133978;  // std dev = 1,917, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.3833668143689365;  // std dev = 1,917, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783634;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then return 0.290378564254742;  // std dev = 1,917, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return -0.092691276189261;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.08776063567710396;  // std dev = 2,402, 88,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, B) )
%   | | | then return 0.20706091918535666;  // std dev = 1,917, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09227744321337293;  // std dev = 2,47e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), genre(E, D) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, H), genre(I, H) )
%   | | then return 0.1664623158396041;  // std dev = 1,917, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return -0.08483342307298482;  // std dev = 1,83e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return 0.1367253787057579;  // std dev = 1,917, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, H), genre(I, H) )
%   | | then if ( movie(J, I), movie(J, A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07847499174034354;  // std dev = 5,27e-09, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), genre(E, D) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.11428833058558335;  // std dev = 1,917, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | else return -0.07255547948667623;  // std dev = 0,012, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */


Results
   AUC ROC   = 0.897701
   AUC PR    = 0.909643
   CLL	      = -0.391048
   Precision = 0.926667 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.872841


Total learning time: 1.692 seconds
Total inference time: 1.193 seconds
AUC ROC: 0.897701


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,false': 'movie(G, E), movie(G, A)', 'false,true': 'genre(E, F), genre(A, F)', 'false,false': 'genre(A, H), genre(I, H)', 'false': 'genre(B, D), genre(E, D)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,false,true': [1.917, 4, 45], 'false,false,false': [4.08e-08, 39, 0], 'false,false,true,true': [0.0, 2, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false,false': 'genre(A, G), genre(H, G)', 'false': 'genre(B, D), genre(E, D)', 'false,false,true': 'movie(I, H), movie(I, A)'}, {'false,true,false': [1.917, 4, 45], 'false,false,true,true': [0.0, 2, 0], 'false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 39, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'movie(F, E), movie(F, B)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,false,true': 'movie(J, I), movie(J, B)', 'false,true,true': 'movie(G, A)'}, {'false,true,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,false,true,true': [1.917, 4, 45], 'false,false,false': [0.0, 39, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,false': 'movie(G, E), movie(G, A)', 'false,true': 'genre(E, F), genre(A, F)', 'false,false': 'genre(A, H), genre(I, H)', 'false': 'genre(B, D), genre(E, D)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,false,true': [1.917, 4, 45], 'false,false,false': [0.0, 39, 0], 'false,false,true,true': [0.0, 2, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true,false,true': [0.0, 2, 0], 'false,false,false': [0.0, 39, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,true': [1.917, 4, 45], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true,false,true': [0.0, 2, 0], 'false,true,false,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false': [2.402, 43, 45], 'false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)', 'false,false,true': 'movie(J, I), movie(J, B)'}, {'false,true,false,true': [0.0, 2, 0], 'false,false,false': [2.47e-08, 39, 0], 'false,false,true,true': [1.917, 4, 45], 'false,true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,false': 'movie(G, E), movie(G, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false,false': 'genre(B, H), genre(I, H)', 'false': 'genre(A, D), genre(E, D)'}, {'false,true,false,true': [0.0, 2, 0], 'false,false,false': [1.83e-08, 39, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,true': [1.917, 4, 45], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true,false': 'movie(G, E), movie(G, A)', 'false,true': 'genre(E, F), genre(A, F)', 'false,false': 'genre(A, H), genre(I, H)', 'false': 'genre(B, D), genre(E, D)', 'false,false,true': 'movie(J, I), movie(J, A)'}, {'false,true,false,true': [1.917, 4, 45], 'false,false,false': [5.27e-09, 39, 0], 'false,false,true,true': [0.0, 2, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false,true': 'genre(E, F), genre(A, F)', 'false': 'genre(B, D), genre(E, D)'}, {'false,true,false': [1.917, 4, 45], 'true': [0.0, 0, 0], 'false,false': [0.012, 41, 0], 'false,true,true': [0.0, 0, 0]}]]
[{'': [nan, 0.25000000000000033], 'false,true,false': [0.07496876301541104, nan], 'false,true': [nan, 0.07496876301541104], 'false,false': [0.0, 4.2700885562506023e-17], 'false': [0.07496876301541104, 4.603363760640893e-17], 'false,false,true': [0.0, nan]}, {'': [nan, 0.19150669626844324], 'false,true': [nan, 0.07496876301540994], 'false,false': [0.0, -2.2773805633336544e-17], 'false': [0.07496876301540994, -1.8955027249697796e-17], 'false,false,true': [0.0, nan]}, {'': [nan, 0.13677730791376821], 'false,true': [0.0, nan], 'false,false': [0.07496876301540976, -5.693451408334136e-18], 'false': [0.0, 0.13722016595053724], 'false,false,true': [0.07496876301540976, nan], 'false,true,true': [0.0, nan]}, {'': [nan, 0.09914906789567215], 'false,true,false': [0.07496876301541015, nan], 'false,true': [nan, 0.07496876301541015], 'false,false': [0.0, -8.540177112501205e-18], 'false': [0.07496876301541015, -6.769652589177784e-18], 'false,false,true': [0.0, nan]}, {'': [nan, 0.07721209046141568], 'false,true,false': [0.0, nan], 'false,true': [nan, 0.0], 'false,false': [0.07496876301541025, -1.2810265668751807e-17], 'false': [0.0, 0.07795586630959361]}, {'': [nan, 0.0647432063075713], 'false,true,false': [0.0, nan], 'false,true': [nan, 0.0], 'false': [0.0, 0.06554997377217854]}, {'': [nan, 0.06294636740410688], 'false,true,false': [0.0, nan], 'false,true': [nan, 0.0], 'false,false': [0.07496876301541028, 1.5656991372918874e-17], 'false': [0.0, 0.06385556676348633], 'false,false,true': [0.07496876301541028, nan]}, {'': [nan, 0.056411432410980185], 'false,true,false': [0.0, nan], 'false,true': [nan, 0.0], 'false,false': [0.0749687630154103, 8.540177112501205e-18], 'false': [0.0, 0.057327491361891365]}, {'': [nan, 0.05225251803340302], 'false,true,false': [0.0749687630154103, nan], 'false,true': [nan, 0.0749687630154103], 'false,false': [0.0, 7.11681426041767e-19], 'false': [0.0749687630154103, 4.684759960767137e-06], 'false,false,true': [0.0, nan]}, {'': [nan, 0.049476653813208135], 'false,true': [nan, 0.07496876301541032], 'false': [0.07496876301541032, 3.587203286720131e-06]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '0;false;genre(A, H), genre(I, H).;true;true', '1;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '1;false;genre(A, G), genre(H, G).;true;true', '2;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '2;false;genre(B, H), genre(I, H).;true;true', '3;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '3;false;genre(A, H), genre(I, H).;true;true', '4;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '4;false;genre(B, H), genre(I, H).;true;true', '5;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '6;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '6;false;genre(B, H), genre(I, H).;true;true', '7;;workedunder(A, B) :- genre(A, D), genre(E, D).;true;true', '7;false;genre(B, H), genre(I, H).;true;true', '8;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true', '8;false;genre(A, H), genre(I, H).;true;true', '9;;workedunder(A, B) :- genre(B, D), genre(E, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, F), genre(G, F) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, F), genre(G, F) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, E), genre(F, E) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, F), genre(G, F) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, E), genre(F, E) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3207118471601495;  // std dev = 2,11e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.092691276189261;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839682;  // std dev = 1,05e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, E), genre(F, E) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.20975771563253542;  // std dev = 4,94e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(D, C) )
%   then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, E), genre(F, E) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( movie(H, A), movie(H, B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(I, A), movie(I, B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then return 0.15274385809367086;  // std dev = 4,93e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, F), genre(G, F) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), genre(D, C) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801095;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13400703000801115;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(B) )
%   | then return -0.06419184008202618;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return -0.06419184008202618;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.997662
   AUC PR    = 0.997495
   CLL	      = -0.304492
   Precision = 0.989324 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.899676


Total learning time: 2.358 seconds
Total inference time: 1.096 seconds
AUC ROC: 0.997662


Refined model AUC ROC: 0.997662


Dataset: cora->imdb(workedunder), Fold: 4, Type: transfer, Time: 06:16:22
{'AUC ROC': 0.997662, 'Recall': 0.824926, 'Inference time': 1.096, 'F1': 0.899676, 'AUC PR': 0.997495, 'Precision': [0.989324, 0.5], 'Parameter Learning results': {'AUC ROC': 0.897701, 'Recall': 0.824926, 'Inference time': 1.193, 'F1': 0.872841, 'AUC PR': 0.909643, 'Precision': [0.926667, 0.5], 'Learning time': 1.692, 'CLL': -0.391048}, 'Learning time': 4.05, 'CLL': -0.304492, 'Mapping results': {'Generating mappings time': 0.06172895431518555, 'Total time': 2.8950514793395996, 'Possible mappings': 126, 'Finding best mapping': 0.027962684631347656, 'Generating paths time': 2.4512176513671875, 'Knowledge compiling time': 0.35413622856140137}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.991098
   AUC PR    = 0.982507
   CLL	      = -0.113016
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 1.428 seconds
Total inference time: 0.638 seconds
AUC ROC: 0.991098


Dataset: cora->imdb(workedunder), Fold: 4, Type: scratch, Time: 06:16:24
{'AUC ROC': 0.991098, 'Recall': 1.0, 'Inference time': 0.638, 'F1': 0.991176, 'AUC PR': 0.982507, 'Precision': [0.982507, 0.5], 'Learning time': 1.428, 'CLL': -0.113016}


Starting fold 5

Mapping Results
   Knowledge compiling time   = 0.35242271423339844
   Generating paths time   = 2.4446849822998047
   Generating mappings time   = 0.06121945381164551
   Possible mappings   = 126
   Finding best mapping   = 0.028858661651611328
   Total time   = 2.8871920108795166


Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> genre(B,A)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;false,true,false;genre(E, G), genre(A, G).;false;false
0;false,true;movie(F, E), movie(F, A).;false;true
0;false,false;movie(H, A), movie(H, I).;true;false
0;false;movie(D, B), movie(D, E).;true;true
0;false,false,true;genre(I, J), genre(A, J).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false,true;movie(F, E), movie(F, A).;false;false
1;false,false;movie(G, A), movie(G, H).;true;false
1;false;movie(D, B), movie(D, E).;true;true
1;false,false,true;genre(H, I), genre(A, I).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false,true;genre(E, F), genre(B, F).;true;false
2;false,false;movie(H, B), movie(H, I).;true;false
2;false;movie(D, A), movie(D, E).;true;true
2;false,false,true;genre(I, J), genre(B, J).;false;false
2;false,true,true;genre(A, G).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false,true,false;genre(E, G), genre(A, G).;false;false
3;false,true;movie(F, E), movie(F, A).;false;true
3;false,false;movie(H, A), movie(H, I).;true;false
3;false;movie(D, B), movie(D, E).;true;true
3;false,false,true;genre(I, J), genre(A, J).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false,true,false;genre(E, G), genre(B, G).;false;false
4;false,true;movie(F, E), movie(F, B).;false;true
4;false,false;movie(H, B), movie(H, I).;false;false
4;false;movie(D, A), movie(D, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false,true,false;genre(E, G), genre(B, G).;false;false
5;false,true;movie(F, E), movie(F, B).;false;true
5;false;movie(D, A), movie(D, E).;true;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false,true,false;genre(E, G), genre(B, G).;false;false
6;false,true;movie(F, E), movie(F, B).;false;true
6;false,false;movie(H, B), movie(H, I).;true;false
6;false;movie(D, A), movie(D, E).;true;true
6;false,false,true;genre(I, J), genre(B, J).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false,true,false;genre(E, G), genre(B, G).;false;false
7;false,true;movie(F, E), movie(F, B).;false;true
7;false,false;movie(H, B), movie(H, I).;false;false
7;false;movie(D, A), movie(D, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false,true,false;genre(E, G), genre(A, G).;false;false
8;false,true;movie(F, E), movie(F, A).;false;true
8;false,false;movie(H, A), movie(H, I).;true;false
8;false;movie(D, B), movie(D, E).;true;true
8;false,false,true;genre(I, J), genre(A, J).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;movie(L, K), movie(L, A).;false;false
9;true,true;movie(D, A).;false;true
9;true,false,true;genre(H, I), genre(B, I).;false;false
9;true,false;movie(G, A), movie(G, H).;true;false
9;true,true,false;genre(E, F), genre(A, F).;false;false
9;false;movie(J, B), movie(J, K).;true;false
9;true;movie(D, B), movie(D, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.661720363670941;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5609350667283574;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4440275917969893;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936064;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.33685139605703973;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.25286275913656375;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19141228931974416;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14705476720760274;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11469660809076895;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09066113953316608;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(D, A) )
%   | | then return 0.07246920796007848;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.879822
   AUC PR    = 0.80622
   CLL	      = -0.336025
   Precision = 0.80622 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.892715


Total learning time: 1.735 seconds
Total inference time: 0.915 seconds
AUC ROC: 0.879822


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 8, 0], 'true': [2.973, 11, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [2.11e-08, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 8, 0], 'true': [2.973, 11, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(E, F), genre(B, F)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false': [0.0, 34, 0], 'true': [2.973, 11, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 8, 0], 'true': [2.973, 11, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 8, 0], 'true': [2.973, 11, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [3.73e-09, 8, 0], 'true': [2.973, 11, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [1.75e-08, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 8, 0], 'true': [2.973, 11, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(B, G)', 'false,true': 'movie(F, E), movie(F, B)', 'false': 'movie(D, A), movie(D, E)'}, {'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [2.63e-09, 8, 0], 'true': [2.973, 11, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(E, G), genre(A, G)', 'false,true': 'movie(F, E), movie(F, A)', 'false': 'movie(D, B), movie(D, E)'}, {'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 8, 0], 'true': [2.973, 11, 45], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, A)', 'false,true': 'movie(H, G), movie(H, A)', 'false': 'movie(F, B), movie(F, G)', 'true': 'movie(D, B), movie(D, E)'}, {'false,true,false': [0.0, 8, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.973, 11, 45], 'false,true,true': [0.0, 26, 0]}]]
[{'': [0.15784438775510257, 3.2653618371328135e-17], 'false,true,false': [nan, 0.0], 'false,true': [1.708035422500241e-17, -6.938893903907228e-18], 'false': [3.2653618371328135e-17, nan]}, {'': [0.15784438775510182, 3.2653618371328133e-18], 'false,true': [-4.270088556250602e-18, 0.0], 'false': [3.2653618371328133e-18, nan]}, {'': [0.15784438775510165, -1.1428766429964846e-17], 'false,true': [nan, -6.530723674265627e-18], 'false': [-1.1428766429964846e-17, nan]}, {'': [0.15784438775510187, -3.2653618371328133e-18], 'false,true,false': [nan, 0.0], 'false,true': [-2.135044278125301e-18, 1.734723475976807e-18], 'false': [-3.2653618371328133e-18, nan]}, {'': [0.15784438775510232, -6.530723674265627e-18], 'false,true,false': [nan, 0.0], 'false,true': [2.135044278125301e-18, 0.0], 'false': [-6.530723674265627e-18, nan]}, {'': [0.15784438775510204, 1.469412826709766e-17], 'false,true,false': [nan, 1.734723475976807e-18], 'false,true': [1.1742743529689156e-17, 1.734723475976807e-18], 'false': [1.469412826709766e-17, nan]}, {'': [0.15784438775510196, -2.44902137784961e-18], 'false,true,false': [nan, 0.0], 'false,true': [-2.135044278125301e-18, 0.0], 'false': [-2.44902137784961e-18, nan]}, {'': [0.15784438775510207, 2.44902137784961e-18], 'false,true,false': [nan, 8.673617379884035e-19], 'false,true': [-1.0675221390626506e-18, 8.673617379884035e-19], 'false': [2.44902137784961e-18, nan]}, {'': [0.15784438775510226, -2.44902137784961e-18], 'false,true,false': [nan, 0.0], 'false,true': [-4.803849625781927e-18, 0.0], 'false': [-2.44902137784961e-18, nan]}, {'': [0.15784438775510207, -1.6326809185664067e-18], 'false,true': [-1.6012832085939759e-18, 0.0], 'true,true': [0.15784438775510207, nan], 'false': [-1.6326809185664067e-18, nan], 'true': [0.15784438775510207, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '0;false;movie(F, E), movie(F, A).;true;true', '1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '1;false;movie(F, E), movie(F, A).;true;true', '2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '3;false;movie(F, E), movie(F, A).;true;true', '4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '4;false;movie(F, E), movie(F, B).;true;true', '5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '5;false;movie(F, E), movie(F, B).;true;true', '6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '6;false;movie(F, E), movie(F, B).;true;true', '7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '7;false;movie(F, E), movie(F, B).;true;true', '8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '8;false;movie(F, E), movie(F, A).;true;true', '9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true', '9;false;movie(H, G), movie(H, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.12544463852839136;  // std dev = 1,05e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( movie(D, E), movie(D, B) )
%   | then return -0.07877675473109176;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(D, E), movie(D, B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( movie(D, E), movie(D, A) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( movie(D, E), movie(D, A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.991098
   AUC PR    = 0.982507
   CLL	      = -0.113016
   Precision = 0.982507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991176


Total learning time: 2.683 seconds
Total inference time: 1.496 seconds
AUC ROC: 0.991098


Refined model AUC ROC: 0.991098


Dataset: cora->imdb(workedunder), Fold: 5, Type: transfer, Time: 06:16:35
{'AUC ROC': 0.991098, 'Recall': 1.0, 'Inference time': 1.496, 'F1': 0.991176, 'AUC PR': 0.982507, 'Precision': [0.982507, 0.5], 'Parameter Learning results': {'AUC ROC': 0.879822, 'Recall': 1.0, 'Inference time': 0.915, 'F1': 0.892715, 'AUC PR': 0.80622, 'Precision': [0.80622, 0.5], 'Learning time': 1.735, 'CLL': -0.336025}, 'Learning time': 4.418, 'CLL': -0.113016, 'Mapping results': {'Generating mappings time': 0.06121945381164551, 'Total time': 2.8871920108795166, 'Possible mappings': 126, 'Finding best mapping': 0.028858661651611328, 'Generating paths time': 2.4446849822998047, 'Knowledge compiling time': 0.35242271423339844}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5311214831143678;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39915588358350124;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3041152323386091;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23868640062742874;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.20975771563253573;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19293672275810375;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15989025251836994;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return 0.14397672632035616;  // std dev = 0,144, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.13502771671092778;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.11504733805930753;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */


Results
   AUC ROC   = 0.935462
   AUC PR    = 0.889597
   CLL	      = -0.23827
   Precision = 0.877604 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.934813


Total learning time: 2.149 seconds
Total inference time: 0.76 seconds
AUC ROC: 0.935462


Dataset: cora->imdb(workedunder), Fold: 5, Type: scratch, Time: 06:16:38
{'AUC ROC': 0.935462, 'Recall': 1.0, 'Inference time': 0.76, 'F1': 0.934813, 'AUC PR': 0.889597, 'Precision': [0.877604, 0.5], 'Learning time': 2.149, 'CLL': -0.23827}


