

Start learning from source dataset


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.6772826809348238;  // std dev = 0,385, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.6615790142551802;  // std dev = 0,397, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then return -0.1043510649004902;  // std dev = 0,190, 2.080,000 (wgt'ed) examples reached here.  /* #neg=2.002 #pos=78 */
%   | else return -0.14185106490048763;  // std dev = 2,00e-07, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.5736261491305331;  // std dev = 0,385, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.5608196912957326;  // std dev = 0,397, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return -0.12961681177776277;  // std dev = 3,33e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.090964680955168;  // std dev = 0,193, 2.018,000 (wgt'ed) examples reached here.  /* #neg=1.940 #pos=78 */
%   | else return -0.12544463852839216;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.4530584556313184;  // std dev = 0,385, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.4439453568105933;  // std dev = 0,397, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then return -0.08207599154901281;  // std dev = 0,190, 2.080,000 (wgt'ed) examples reached here.  /* #neg=2.002 #pos=78 */
%   | else return -0.11231637819360657;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.34312349056132435;  // std dev = 0,385, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.33679441023040385;  // std dev = 0,397, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return -0.10754719403976162;  // std dev = 2,36e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.07266159153329256;  // std dev = 0,193, 2.018,000 (wgt'ed) examples reached here.  /* #neg=1.940 #pos=78 */
%   | else return -0.10159632948783642;  // std dev = 3,65e-08, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.25767343310953894;  // std dev = 0,385, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.2528193799794548;  // std dev = 0,397, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then return -0.06662729366513188;  // std dev = 0,190, 2.080,000 (wgt'ed) examples reached here.  /* #neg=2.002 #pos=78 */
%   | else return -0.09269127618926042;  // std dev = 2,01e-07, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.19555546268392962;  // std dev = 0,385, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.1913752496843941;  // std dev = 0,397, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return -0.09782624185623244;  // std dev = 0,012, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.09193631907295521;  // std dev = 2,11e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return -0.0585476648156623;  // std dev = 0,195, 1.964,000 (wgt'ed) examples reached here.  /* #neg=1.886 #pos=78 */
%   | else return -0.08518475138839678;  // std dev = 1,13e-07, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.15087510206912205;  // std dev = 0,385, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.14702084719144;  // std dev = 0,397, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return -0.08952587585587374;  // std dev = 0,011, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.05437158945019473;  // std dev = 0,193, 2.022,000 (wgt'ed) examples reached here.  /* #neg=1.944 #pos=78 */
%   | else return -0.07877675473109143;  // std dev = 5,58e-08, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.11831603229792957;  // std dev = 0,385, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.11466463659800485;  // std dev = 0,397, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then return -0.050797213848217684;  // std dev = 0,190, 2.080,000 (wgt'ed) examples reached here.  /* #neg=2.002 #pos=78 */
%   | else return -0.07324622576333709;  // std dev = 8,16e-08, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.09411176544026008;  // std dev = 0,385, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.09063078602825957;  // std dev = 0,397, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return -0.07656723219869113;  // std dev = 0,006, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.04587796834147554;  // std dev = 0,193, 2.018,000 (wgt'ed) examples reached here.  /* #neg=1.940 #pos=78 */
%   | else return -0.06842697784420317;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.07575153119104502;  // std dev = 0,385, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.07244044374492473;  // std dev = 0,397, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return -0.07532669967335734;  // std dev = 0,013, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.04233723058361673;  // std dev = 0,193, 2.022,000 (wgt'ed) examples reached here.  /* #neg=1.944 #pos=78 */
%   | else return -0.06419184008202579;  // std dev = 1,51e-07, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */


Predicates from source: ['samevenue(venue,venue).', 'haswordvenue(venue,word).', 'author(class,author).', 'venue(class,venue).', 'samebib(class,class).', 'haswordauthor(author,word).'] 

Source structured tree: [['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [2e-07, 337, 0]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false,true': 'haswordvenue(A, G), haswordauthor(H, G)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'false,true,false': [0.193, 1940, 78], 'true,true': [0.385, 380, 1721], 'true,false': [0.397, 298, 1218], 'false,false': [0.0, 337, 0], 'false,true,true': [3.33e-08, 62, 0]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [0.0, 337, 0]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false,true': 'haswordvenue(A, G), haswordauthor(H, G)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'false,true,false': [0.193, 1940, 78], 'true,true': [0.385, 380, 1721], 'true,false': [0.397, 298, 1218], 'false,false': [3.65e-08, 337, 0], 'false,true,true': [2.36e-08, 62, 0]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [2.01e-07, 337, 0]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false,true': 'haswordvenue(B, G), haswordauthor(H, G)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)', 'false,true,false': 'haswordvenue(A, I), haswordauthor(J, I)'}, {'false,true,false,true': [2.11e-08, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false,false': [0.195, 1886, 78], 'true,false': [0.397, 298, 1218], 'false,false': [1.13e-07, 337, 0], 'false,true,true': [0.012, 58, 0]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false,true': 'haswordvenue(B, G), haswordauthor(H, G)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'false,true,false': [0.193, 1944, 78], 'true,true': [0.385, 380, 1721], 'true,false': [0.397, 298, 1218], 'false,false': [5.58e-08, 337, 0], 'false,true,true': [0.011, 58, 0]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [8.16e-08, 337, 0]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false,true': 'haswordvenue(A, G), haswordauthor(H, G)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'false,true,false': [0.193, 1940, 78], 'true,true': [0.385, 380, 1721], 'true,false': [0.397, 298, 1218], 'false,false': [0.0, 337, 0], 'false,true,true': [0.006, 62, 0]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false,true': 'haswordvenue(B, G), haswordauthor(H, G)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'false,true,false': [0.193, 1944, 78], 'true,true': [0.385, 380, 1721], 'true,false': [0.397, 298, 1218], 'false,false': [1.51e-07, 337, 0], 'false,true,true': [0.013, 58, 0]}]] 



Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'author(A,B) -> movie(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> movie(A,B)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [2e-07, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(A, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [3.33e-08, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [0.0, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(A, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [2.36e-08, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [3.65e-08, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [2.01e-07, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(B, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)', 'false,true,false': 'genre(A, I), genre(J, I)'}, {'false,true,false,true': [2.11e-08, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false,false': [0.195, 1886, 78], 'false,true,true': [0.012, 58, 0], 'true,false': [0.397, 298, 1218], 'false,false': [1.13e-07, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(B, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [0.011, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [5.58e-08, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [8.16e-08, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(A, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [0.006, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(B, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [0.013, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [1.51e-07, 337, 0], 'true,false': [0.397, 298, 1218]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '0;true;movie(C, E), movie(D, E).;false;false', '0;false;genre(A, F), genre(B, F).;false;false', '1;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '1;true;movie(C, E), movie(D, E).;false;false', '1;false,true;genre(A, G), genre(H, G).;false;false', '1;false;genre(A, F), genre(B, F).;true;false', '2;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '2;true;movie(C, E), movie(D, E).;false;false', '2;false;genre(A, F), genre(B, F).;false;false', '3;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '3;true;movie(C, E), movie(D, E).;false;false', '3;false,true;genre(A, G), genre(H, G).;false;false', '3;false;genre(A, F), genre(B, F).;true;false', '4;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '4;true;movie(C, E), movie(D, E).;false;false', '4;false;genre(A, F), genre(B, F).;false;false', '5;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '5;true;movie(C, E), movie(D, E).;false;false', '5;false,true;genre(B, G), genre(H, G).;false;true', '5;false;genre(A, F), genre(B, F).;true;false', '5;false,true,false;genre(A, I), genre(J, I).;false;false', '6;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '6;true;movie(C, E), movie(D, E).;false;false', '6;false,true;genre(B, G), genre(H, G).;false;false', '6;false;genre(A, F), genre(B, F).;true;false', '7;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '7;true;movie(C, E), movie(D, E).;false;false', '7;false;genre(A, F), genre(B, F).;false;false', '8;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '8;true;movie(C, E), movie(D, E).;false;false', '8;false,true;genre(A, G), genre(H, G).;false;false', '8;false;genre(A, F), genre(B, F).;true;false', '9;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '9;true;movie(C, E), movie(D, E).;false;false', '9;false,true;genre(B, G), genre(H, G).;false;false', '9;false;genre(A, F), genre(B, F).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.4444798703513064;  // std dev = 11,613, 556,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=326 */
%   | else return -0.14185106490048763;  // std dev = 8,69e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.38136157189643866;  // std dev = 11,613, 556,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=326 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.3122785453624369;  // std dev = 11,613, 556,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=326 */
%   | else return -0.1123163781936062;  // std dev = 7,74e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.24601351587474965;  // std dev = 11,613, 556,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=326 */
%   | else return -0.10159632948783626;  // std dev = 4,59e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.1888246521749621;  // std dev = 11,613, 556,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=326 */
%   | else return -0.092691276189261;  // std dev = 3,94e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.14284882266256282;  // std dev = 11,613, 556,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=326 */
%   | else return -0.08518475138839682;  // std dev = 5,37e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.10736676615986904;  // std dev = 11,613, 556,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=326 */
%   | else return -0.0787767547310916;  // std dev = 5,58e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.08053775838439028;  // std dev = 11,613, 556,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=326 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.06042627474808273;  // std dev = 11,613, 556,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=326 */
%   | else return -0.06842697784420265;  // std dev = 4,59e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.04538836978851813;  // std dev = 11,613, 556,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=326 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.609375
   AUC PR    = 0.561404
   CLL	      = -0.617573
   Precision = 0.561404 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.719101


Total learning time: 4.053 seconds
Total inference time: 0.595 seconds
AUC ROC: 0.609375


Results in test set
   AUC ROC   = 0.609375
   AUC PR    = 0.561404
   CLL	      = -0.617573
   Precision = 0.561404 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.719101


Total inference time: 0.595 seconds
AUC ROC: 0.609375
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.613, 230, 326], 'true,false': [8.69e-08, 96, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.613, 230, 326], 'true,false': [0.0, 96, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.613, 230, 326], 'true,false': [7.74e-08, 96, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.613, 230, 326], 'true,false': [4.59e-08, 96, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.613, 230, 326], 'true,false': [3.94e-08, 96, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.613, 230, 326], 'true,false': [5.37e-08, 96, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.613, 230, 326], 'true,false': [5.58e-08, 96, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.613, 230, 326], 'true,false': [0.0, 96, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.613, 230, 326], 'true,false': [4.59e-08, 96, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.613, 230, 326], 'true,false': [0.0, 96, 0], 'false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
[]
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0), ('true,true', 0.5863309352517986)]
Tree #2: [('false', 0), ('true,true', 0.5863309352517986)]
Tree #3: [('false', 0), ('true,true', 0.5863309352517986)]
Tree #4: [('false', 0), ('true,true', 0.5863309352517986)]
Tree #5: [('false', 0), ('true,true', 0.5863309352517986)]
Tree #6: [('false', 0), ('true,true', 0.5863309352517986)]
Tree #7: [('false', 0), ('true,true', 0.5863309352517986)]
Tree #8: [('false', 0), ('true,true', 0.5863309352517986)]
Tree #9: [('false', 0), ('true,true', 0.5863309352517986)]
Tree #10: [('false', 0), ('true,true', 0.5863309352517986)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995101;  // std dev = 8,68e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.8473381242886986;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.1418510649004879;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.719473412210956;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.7108393767079625;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.12544463852839188;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.5519741001747521;  // std dev = 0,078, 328,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=326 */
%   else return -0.1123163781936069;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41833881693994535;  // std dev = 3,32e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.4122669243622543;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.10159632948783658;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.32127136271329754;  // std dev = 2,92e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.3160498188030004;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.09269127618926047;  // std dev = 1,44e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2555539910296006;  // std dev = 8,43e-08, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.25063482519713787;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.08518475138839678;  // std dev = 1,01e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.21002734105847687;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.20519383655523002;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.07877675473109147;  // std dev = 3,65e-08, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17729422993823277;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.1724668352942577;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.07324622576333693;  // std dev = 1,03e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1528938412642659;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.14804530907112382;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.0684269778442029;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.13412410865834812;  // std dev = 4,71e-08, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.12924708947878993;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.06419184008202604;  // std dev = 1,00e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096898
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.042 seconds
Total inference time: 0.513 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


Refining iteration 2
********************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '0;true;female(A).;false;true', '1;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '1;true;female(A).;false;true', '2;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '3;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '3;true;female(A).;false;true', '4;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '4;true;female(A).;false;true', '5;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '5;true;female(A).;false;true', '6;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '6;true;female(A).;false;true', '7;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '7;true;female(A).;false;true', '8;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '8;true;female(A).;false;true', '9;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '9;true;female(A).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false', 0.9891891891891892)]
Tree #2: [('true,false', 0.9891891891891892)]
Tree #3: [('true', 0.9939024390243902)]
Tree #4: [('true,false', 0.9891891891891892)]
Tree #5: [('true,false', 0.9891891891891892)]
Tree #6: [('true,false', 0.9891891891891892)]
Tree #7: [('true,false', 0.9891891891891892)]
Tree #8: [('true,false', 0.9891891891891892)]
Tree #9: [('true,false', 0.9891891891891892)]
Tree #10: [('true,false', 0.9891891891891892)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995101;  // std dev = 8,68e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.8473381242886986;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.1418510649004879;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.719473412210956;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.7108393767079625;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.12544463852839188;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462834;  // std dev = 5,13e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.5493519156897265;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.1123163781936069;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830897;  // std dev = 4,30e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.41290708368271967;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.10159632948783658;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601499;  // std dev = 2,49e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.3164860590072188;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.09269127618926047;  // std dev = 1,44e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694903;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.25093341366754296;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.08518475138839678;  // std dev = 1,01e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253523;  // std dev = 2,35e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.2054051198985752;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.07877675473109147;  // std dev = 3,65e-08, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.17262194885259713;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.07324622576333693;  // std dev = 1,03e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.14816303763087268;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.0684269778442029;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.13400703000801104;  // std dev = 6,32e-08, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.12933902028450983;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.06419184008202604;  // std dev = 1,00e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096907
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.265 seconds
Total inference time: 0.525 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 19.993
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096433
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.582 seconds
AUC ROC: 1.0
Dataset: 8, Run: 1, Fold: 1, Type: transfer, Time: 00:35:29
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'Inference time': 0.582, 'F1': 1.0, 'Mapping results': {'Generating paths time': 4.52384614944458, 'Possible mappings': 126, 'Finding best mapping': 0.026962757110595703, 'Generating mappings time': 0.06345868110656738, 'Knowledge compiling time': 0.40241384506225586, 'Total time': 5.016688346862793}, 'AUC PR': 1.0, 'Learning time': 19.993, 'Parameter Learning results': {'Precision': [0.674699, 0.5], 'Recall': 1.0, 'Inference time': 0.593, 'F1': 0.805755, 'AUC PR': 0.674699, 'Learning time': 4.053, 'AUC ROC': 0.758929, 'CLL': -0.506748}, 'AUC ROC': 1.0, 'CLL': -0.096433}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995101;  // std dev = 8,68e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.8473381242886986;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.1418510649004879;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.719473412210956;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.7108393767079625;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.12544463852839188;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462834;  // std dev = 5,13e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.5493519156897265;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.1123163781936069;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830897;  // std dev = 4,30e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.41290708368271967;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.10159632948783658;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601499;  // std dev = 2,49e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.3164860590072188;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.09269127618926047;  // std dev = 1,44e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694903;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.25093341366754296;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.08518475138839678;  // std dev = 1,01e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253523;  // std dev = 2,35e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.2054051198985752;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.07877675473109147;  // std dev = 3,65e-08, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.17262194885259713;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.07324622576333693;  // std dev = 1,03e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.14816303763087268;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.0684269778442029;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.13400703000801104;  // std dev = 6,32e-08, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.12933902028450983;  // std dev = 0,103, 185,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=183 */
%   else return -0.06419184008202604;  // std dev = 1,00e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096429
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.318 seconds
Total inference time: 0.534 seconds
AUC ROC: 1.0


Dataset: 8, Run: 1, Fold: 1, Type: scratch, Time: 00:35:38
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'Inference time': 0.534, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 8.318, 'AUC ROC': 1.0, 'CLL': -0.096429}


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'author(A,B) -> movie(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> movie(A,B)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [2e-07, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(A, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [3.33e-08, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [0.0, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(A, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [2.36e-08, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [3.65e-08, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [2.01e-07, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(B, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)', 'false,true,false': 'genre(A, I), genre(J, I)'}, {'false,true,false,true': [2.11e-08, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false,false': [0.195, 1886, 78], 'false,true,true': [0.012, 58, 0], 'true,false': [0.397, 298, 1218], 'false,false': [1.13e-07, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(B, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [0.011, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [5.58e-08, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [8.16e-08, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(A, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [0.006, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(B, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [0.013, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [1.51e-07, 337, 0], 'true,false': [0.397, 298, 1218]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '0;true;movie(C, E), movie(D, E).;false;false', '0;false;genre(A, F), genre(B, F).;false;false', '1;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '1;true;movie(C, E), movie(D, E).;false;false', '1;false,true;genre(A, G), genre(H, G).;false;false', '1;false;genre(A, F), genre(B, F).;true;false', '2;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '2;true;movie(C, E), movie(D, E).;false;false', '2;false;genre(A, F), genre(B, F).;false;false', '3;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '3;true;movie(C, E), movie(D, E).;false;false', '3;false,true;genre(A, G), genre(H, G).;false;false', '3;false;genre(A, F), genre(B, F).;true;false', '4;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '4;true;movie(C, E), movie(D, E).;false;false', '4;false;genre(A, F), genre(B, F).;false;false', '5;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '5;true;movie(C, E), movie(D, E).;false;false', '5;false,true;genre(B, G), genre(H, G).;false;true', '5;false;genre(A, F), genre(B, F).;true;false', '5;false,true,false;genre(A, I), genre(J, I).;false;false', '6;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '6;true;movie(C, E), movie(D, E).;false;false', '6;false,true;genre(B, G), genre(H, G).;false;false', '6;false;genre(A, F), genre(B, F).;true;false', '7;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '7;true;movie(C, E), movie(D, E).;false;false', '7;false;genre(A, F), genre(B, F).;false;false', '8;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '8;true;movie(C, E), movie(D, E).;false;false', '8;false,true;genre(A, G), genre(H, G).;false;false', '8;false;genre(A, F), genre(B, F).;true;false', '9;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '9;true;movie(C, E), movie(D, E).;false;false', '9;false,true;genre(B, G), genre(H, G).;false;false', '9;false;genre(A, F), genre(B, F).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.4884991296520371;  // std dev = 10,944, 514,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=324 */
%   | else return -0.1418510649004879;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.41811439197192485;  // std dev = 10,944, 514,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=324 */
%   | else return -0.12544463852839113;  // std dev = 7,88e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.3399387226902973;  // std dev = 10,944, 514,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=324 */
%   | else return -0.11231637819360617;  // std dev = 1,01e-07, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.2652853206839726;  // std dev = 10,944, 514,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=324 */
%   | else return -0.10159632948783641;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.2018964017507253;  // std dev = 10,944, 514,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=324 */
%   | else return -0.09269127618926076;  // std dev = 8,02e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.15190333828954772;  // std dev = 10,944, 514,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=324 */
%   | else return -0.0851847513883968;  // std dev = 6,91e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.11394675705382425;  // std dev = 10,944, 514,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=324 */
%   | else return -0.07877675473109153;  // std dev = 7,52e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.08557445083306925;  // std dev = 10,944, 514,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=324 */
%   | else return -0.07324622576333722;  // std dev = 1,05e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.06444625149288702;  // std dev = 10,944, 514,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=324 */
%   | else return -0.06842697784420264;  // std dev = 6,14e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.04868698772245807;  // std dev = 10,944, 514,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=324 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.734375
   AUC PR    = 0.653061
   CLL	      = -0.514587
   Precision = 0.653061 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.790123


Total learning time: 4.391 seconds
Total inference time: 0.59 seconds
AUC ROC: 0.734375


Results in test set
   AUC ROC   = 0.734375
   AUC PR    = 0.653061
   CLL	      = -0.514587
   Precision = 0.653061 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.790123


Total inference time: 0.59 seconds
AUC ROC: 0.734375
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [10.944, 190, 324], 'true,false': [0.0, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [10.944, 190, 324], 'true,false': [7.88e-08, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [10.944, 190, 324], 'true,false': [1.01e-07, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [10.944, 190, 324], 'true,false': [0.0, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [10.944, 190, 324], 'true,false': [8.02e-08, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [10.944, 190, 324], 'true,false': [6.91e-08, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [10.944, 190, 324], 'true,false': [7.52e-08, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [10.944, 190, 324], 'true,false': [1.05e-08, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [10.944, 190, 324], 'true,false': [6.14e-08, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [10.944, 190, 324], 'true,false': [0.0, 134, 0], 'false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
[]
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0), ('true,true', 0.6303501945525292)]
Tree #2: [('false', 0), ('true,true', 0.6303501945525292)]
Tree #3: [('false', 0), ('true,true', 0.6303501945525292)]
Tree #4: [('false', 0), ('true,true', 0.6303501945525292)]
Tree #5: [('false', 0), ('true,true', 0.6303501945525292)]
Tree #6: [('false', 0), ('true,true', 0.6303501945525292)]
Tree #7: [('false', 0), ('true,true', 0.6303501945525292)]
Tree #8: [('false', 0), ('true,true', 0.6303501945525292)]
Tree #9: [('false', 0), ('true,true', 0.6303501945525292)]
Tree #10: [('false', 0), ('true,true', 0.6303501945525292)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.85814893509951;  // std dev = 9,23e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.8356770249871499;  // std dev = 0,148, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.14185106490048788;  // std dev = 5,16e-08, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109562;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.7015145912413361;  // std dev = 0,148, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.12544463852839194;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,26e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.5428546188788582;  // std dev = 0,148, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.11231637819360689;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830886;  // std dev = 4,54e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.4079705308323158;  // std dev = 0,148, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.10159632948783659;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601498;  // std dev = 2,80e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.31200248854567314;  // std dev = 0,148, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.09269127618926046;  // std dev = 1,48e-07, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694904;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.24646572561289223;  // std dev = 0,148, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.08518475138839678;  // std dev = 1,01e-07, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21703536390842745;  // std dev = 0,122, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.07877675473109143;  // std dev = 3,65e-08, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.7766908013709755;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0787767547310917;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18242435153785855;  // std dev = 0,107, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.073246225763337;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.07324622576333695;  // std dev = 1,01e-07, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.615335040099477;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333699;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15111967120919187;  // std dev = 1,30e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.147605279765013;  // std dev = 0,093, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.06842697784420293;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13805458108123425;  // std dev = 0,089, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06419184008202611;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.064191840082026;  // std dev = 1,06e-07, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.500516104414901;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06419184008202615;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096929
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.35 seconds
Total inference time: 0.544 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


Refining iteration 2
********************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '0;true;female(A).;false;true', '1;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '1;true;female(A).;false;true', '2;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '2;true;female(A).;false;true', '3;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '3;true;female(A).;false;true', '4;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '4;true;female(A).;false;true', '5;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '5;true;female(A).;false;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;true', '6;true;movie(C, A), movie(C, B).;false;false', '6;false;actor(B).;false;true', '6;false,false;movie(D, A), movie(D, B).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, A), movie(C, B).;false;false', '7;false;actor(B).;false;true', '7;false,false;movie(D, A), movie(D, B).;false;false', '8;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '8;true;female(A).;false;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, A), movie(C, B).;false;false', '9;false;actor(B).;false;true', '9;false,false;movie(D, A), movie(D, B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false', 0.9775280898876404)]
Tree #2: [('true,false', 0.9775280898876404)]
Tree #3: [('true,false', 0.9775280898876404)]
Tree #4: [('true,false', 0.9775280898876404)]
Tree #5: [('true,false', 0.9775280898876404)]
Tree #6: [('true,false', 0.9775280898876404)]
Tree #7: []
Tree #8: []
Tree #9: [('true,false', 0.9775280898876404)]
Tree #10: []


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.85814893509951;  // std dev = 9,23e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.8356770249871499;  // std dev = 0,148, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.14185106490048788;  // std dev = 5,16e-08, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109562;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.7015145912413361;  // std dev = 0,148, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.12544463852839194;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,26e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.5428546188788582;  // std dev = 0,148, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.11231637819360689;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830886;  // std dev = 4,54e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.4079705308323158;  // std dev = 0,148, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.10159632948783659;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601498;  // std dev = 2,80e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.31200248854567314;  // std dev = 0,148, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.09269127618926046;  // std dev = 1,48e-07, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694904;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.24646572561289223;  // std dev = 0,148, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.08518475138839678;  // std dev = 1,01e-07, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21703536390842745;  // std dev = 0,122, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.07877675473109143;  // std dev = 3,65e-08, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.7766908013709755;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0787767547310917;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18242435153785855;  // std dev = 0,107, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.073246225763337;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.07324622576333695;  // std dev = 1,01e-07, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.615335040099477;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333699;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15111967120919187;  // std dev = 1,30e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.147605279765013;  // std dev = 0,093, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.06842697784420293;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13805458108123425;  // std dev = 0,089, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06419184008202611;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.064191840082026;  // std dev = 1,06e-07, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.500516104414901;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06419184008202615;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096929
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.77 seconds
Total inference time: 0.508 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 19.153
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097083
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.553 seconds
AUC ROC: 1.0
Dataset: 8, Run: 1, Fold: 2, Type: transfer, Time: 00:36:05
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'Inference time': 0.553, 'F1': 1.0, 'Mapping results': {'Generating paths time': 4.589615345001221, 'Possible mappings': 126, 'Finding best mapping': 0.027080774307250977, 'Generating mappings time': 0.06517696380615234, 'Knowledge compiling time': 0.4623990058898926, 'Total time': 5.144278287887573}, 'AUC PR': 1.0, 'Learning time': 19.153, 'Parameter Learning results': {'Precision': [0.5, 0.5], 'Recall': 1.0, 'Inference time': 0.578, 'F1': 0.666667, 'AUC PR': 0.5, 'Learning time': 4.391, 'AUC ROC': 0.5, 'CLL': -0.71093}, 'AUC ROC': 1.0, 'CLL': -0.097083}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.85814893509951;  // std dev = 9,23e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.8356770249871499;  // std dev = 0,148, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.14185106490048788;  // std dev = 5,16e-08, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109562;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.7015145912413361;  // std dev = 0,148, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.12544463852839194;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,26e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.5428546188788582;  // std dev = 0,148, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.11231637819360689;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830886;  // std dev = 4,54e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.4079705308323158;  // std dev = 0,148, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.10159632948783659;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601498;  // std dev = 2,80e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else if ( director(A) )
%   | | then return -0.6655256013419667;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3344743986580327;  // std dev = 2,23e-07, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else return -0.09269127618926046;  // std dev = 1,48e-07, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694904;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.2472353575664722;  // std dev = 0,114, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.08518475138839678;  // std dev = 1,01e-07, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2097577156325352;  // std dev = 2,46e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.20163373718681452;  // std dev = 0,117, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.07877675473109146;  // std dev = 3,65e-08, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18227324023959576;  // std dev = 0,087, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.073246225763337;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.07324622576333695;  // std dev = 1,01e-07, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.615705660963648;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333699;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15207512307602852;  // std dev = 5,16e-08, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else return 0.14658264133681226;  // std dev = 0,093, 178,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   else return -0.06842697784420293;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13796363863010358;  // std dev = 0,075, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06419184008202612;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.064191840082026;  // std dev = 1,06e-07, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.5005593096977461;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06419184008202615;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096944
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.148 seconds
Total inference time: 0.576 seconds
AUC ROC: 1.0


Dataset: 8, Run: 1, Fold: 2, Type: scratch, Time: 00:36:14
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'Inference time': 0.576, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 8.148, 'AUC ROC': 1.0, 'CLL': -0.096944}


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'author(A,B) -> movie(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> movie(A,B)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [2e-07, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(A, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [3.33e-08, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [0.0, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(A, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [2.36e-08, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [3.65e-08, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [2.01e-07, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(B, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)', 'false,true,false': 'genre(A, I), genre(J, I)'}, {'false,true,false,true': [2.11e-08, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false,false': [0.195, 1886, 78], 'false,true,true': [0.012, 58, 0], 'true,false': [0.397, 298, 1218], 'false,false': [1.13e-07, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(B, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [0.011, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [5.58e-08, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [8.16e-08, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(A, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [0.006, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(B, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [0.013, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [1.51e-07, 337, 0], 'true,false': [0.397, 298, 1218]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '0;true;movie(C, E), movie(D, E).;false;false', '0;false;genre(A, F), genre(B, F).;false;false', '1;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '1;true;movie(C, E), movie(D, E).;false;false', '1;false,true;genre(A, G), genre(H, G).;false;false', '1;false;genre(A, F), genre(B, F).;true;false', '2;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '2;true;movie(C, E), movie(D, E).;false;false', '2;false;genre(A, F), genre(B, F).;false;false', '3;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '3;true;movie(C, E), movie(D, E).;false;false', '3;false,true;genre(A, G), genre(H, G).;false;false', '3;false;genre(A, F), genre(B, F).;true;false', '4;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '4;true;movie(C, E), movie(D, E).;false;false', '4;false;genre(A, F), genre(B, F).;false;false', '5;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '5;true;movie(C, E), movie(D, E).;false;false', '5;false,true;genre(B, G), genre(H, G).;false;true', '5;false;genre(A, F), genre(B, F).;true;false', '5;false,true,false;genre(A, I), genre(J, I).;false;false', '6;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '6;true;movie(C, E), movie(D, E).;false;false', '6;false,true;genre(B, G), genre(H, G).;false;false', '6;false;genre(A, F), genre(B, F).;true;false', '7;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '7;true;movie(C, E), movie(D, E).;false;false', '7;false;genre(A, F), genre(B, F).;false;false', '8;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '8;true;movie(C, E), movie(D, E).;false;false', '8;false,true;genre(A, G), genre(H, G).;false;false', '8;false;genre(A, F), genre(B, F).;true;false', '9;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '9;true;movie(C, E), movie(D, E).;false;false', '9;false,true;genre(B, G), genre(H, G).;false;false', '9;false;genre(A, F), genre(B, F).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.4327968224234519;  // std dev = 9,315, 355,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=204 */
%   | else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.3715757963083396;  // std dev = 9,315, 355,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=204 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.3048458888351292;  // std dev = 9,315, 355,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=204 */
%   | else return -0.1123163781936063;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.24078863840453565;  // std dev = 9,315, 355,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=204 */
%   | else return -0.10159632948783624;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.185285422253083;  // std dev = 9,315, 355,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=204 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.1404410159978489;  // std dev = 9,315, 355,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=204 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.10567457499712021;  // std dev = 9,315, 355,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=204 */
%   | else return -0.07877675473109177;  // std dev = 1,05e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.07929571364054107;  // std dev = 9,315, 355,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=204 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.059476577628838796;  // std dev = 9,315, 355,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=204 */
%   | else return -0.0684269778442027;  // std dev = 1,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.044638885196781324;  // std dev = 9,315, 355,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=204 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.65
   AUC PR    = 0.588235
   CLL	      = -0.589049
   Precision = 0.588235 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.740741


Total learning time: 3.677 seconds
Total inference time: 0.542 seconds
AUC ROC: 0.65


Results in test set
   AUC ROC   = 0.65
   AUC PR    = 0.588235
   CLL	      = -0.589049
   Precision = 0.588235 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.740741


Total inference time: 0.542 seconds
AUC ROC: 0.65
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [9.315, 151, 204], 'true,false': [5.58e-08, 53, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [9.315, 151, 204], 'true,false': [0.0, 53, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [9.315, 151, 204], 'true,false': [3.49e-08, 53, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [9.315, 151, 204], 'true,false': [3.49e-08, 53, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [9.315, 151, 204], 'true,false': [0.0, 53, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [9.315, 151, 204], 'true,false': [1.83e-08, 53, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [9.315, 151, 204], 'true,false': [1.05e-08, 53, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [9.315, 151, 204], 'true,false': [7.45e-09, 53, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [9.315, 151, 204], 'true,false': [1.58e-08, 53, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [9.315, 151, 204], 'true,false': [0.0, 53, 0], 'false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
[]
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0), ('true,true', 0.5746478873239437)]
Tree #2: [('false', 0), ('true,true', 0.5746478873239437)]
Tree #3: [('false', 0), ('true,true', 0.5746478873239437)]
Tree #4: [('false', 0), ('true,true', 0.5746478873239437)]
Tree #5: [('false', 0), ('true,true', 0.5746478873239437)]
Tree #6: [('false', 0), ('true,true', 0.5746478873239437)]
Tree #7: [('false', 0), ('true,true', 0.5746478873239437)]
Tree #8: [('false', 0), ('true,true', 0.5746478873239437)]
Tree #9: [('false', 0), ('true,true', 0.5746478873239437)]
Tree #10: [('false', 0), ('true,true', 0.5746478873239437)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.14185106490048832;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.12544463852839158;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,36e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.11231637819360654;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.41751358415831014;  // std dev = 2,53e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.10159632948783652;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.3207118471601491;  // std dev = 4,00e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.0926912761892606;  // std dev = 9,19e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.25517224256948845;  // std dev = 4,46e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.08518475138839678;  // std dev = 7,45e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.20975771563253498;  // std dev = 3,04e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.07877675473109148;  // std dev = 7,60e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.17709649774527791;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.0732462257633367;  // std dev = 1,13e-07, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.15274385809367166;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.06842697784420264;  // std dev = 7,96e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.13400703000801098;  // std dev = 1,38e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.06419184008202626;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.921 seconds
Total inference time: 0.454 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


Refining iteration 2
********************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;false;false', '1;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;false;false', '2;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;false;false', '3;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;false;false', '4;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;false;false', '5;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;false;false', '6;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;false;false', '7;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;false;false', '8;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;false;false', '9;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: []
Tree #2: []
Tree #3: []
Tree #4: []
Tree #5: []
Tree #6: []
Tree #7: []
Tree #8: []
Tree #9: []
Tree #10: []


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.14185106490048832;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.12544463852839158;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,36e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.11231637819360654;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.41751358415831014;  // std dev = 2,53e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.10159632948783652;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.3207118471601491;  // std dev = 4,00e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.0926912761892606;  // std dev = 9,19e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.25517224256948845;  // std dev = 4,46e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.08518475138839678;  // std dev = 7,45e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.20975771563253498;  // std dev = 3,04e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.07877675473109148;  // std dev = 7,60e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.17709649774527791;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.0732462257633367;  // std dev = 1,13e-07, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.15274385809367166;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.06842697784420264;  // std dev = 7,96e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.13400703000801098;  // std dev = 1,38e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.06419184008202626;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.857 seconds
Total inference time: 0.494 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 9.945
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 0.991573
   AUC PR    = 0.983425
   CLL	      = -0.112035
   Precision = 0.983425 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991643


Total inference time: 0.684 seconds
AUC ROC: 0.991573
Dataset: 8, Run: 1, Fold: 3, Type: transfer, Time: 00:36:31
{'Precision': [0.983425, 0.5], 'Recall': 1.0, 'Inference time': 0.684, 'F1': 0.991643, 'Mapping results': {'Generating paths time': 4.53952169418335, 'Possible mappings': 126, 'Finding best mapping': 0.02702188491821289, 'Generating mappings time': 0.06345129013061523, 'Knowledge compiling time': 0.489818811416626, 'Total time': 5.119820833206177}, 'AUC PR': 0.983425, 'Learning time': 9.945, 'Parameter Learning results': {'Precision': [0.74477, 0.5], 'Recall': 1.0, 'Inference time': 0.832, 'F1': 0.853717, 'AUC PR': 0.74477, 'Learning time': 3.677, 'AUC ROC': 0.828652, 'CLL': -0.461026}, 'AUC ROC': 0.991573, 'CLL': -0.112035}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.14185106490048832;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.12544463852839158;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,36e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.11231637819360654;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.41751358415831014;  // std dev = 2,53e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.10159632948783652;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.3207118471601491;  // std dev = 4,00e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.0926912761892606;  // std dev = 9,19e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.25517224256948845;  // std dev = 4,46e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.08518475138839678;  // std dev = 7,45e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.20975771563253498;  // std dev = 3,04e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.07877675473109148;  // std dev = 7,60e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.17709649774527791;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.0732462257633367;  // std dev = 1,13e-07, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.15274385809367166;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.06842697784420264;  // std dev = 7,96e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.13400703000801098;  // std dev = 1,38e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.06419184008202626;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
Results
   AUC ROC   = 0.991573
   AUC PR    = 0.983425
   CLL	      = -0.112035
   Precision = 0.983425 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.991643


Total learning time: 2.632 seconds
Total inference time: 0.666 seconds
AUC ROC: 0.991573


Dataset: 8, Run: 1, Fold: 3, Type: scratch, Time: 00:36:35
{'Precision': [0.983425, 0.5], 'Recall': 1.0, 'Inference time': 0.666, 'F1': 0.991643, 'AUC PR': 0.983425, 'Learning time': 2.632, 'AUC ROC': 0.991573, 'CLL': -0.112035}


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'author(A,B) -> movie(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> movie(A,B)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [2e-07, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(A, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [3.33e-08, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [0.0, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(A, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [2.36e-08, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [3.65e-08, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [2.01e-07, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(B, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)', 'false,true,false': 'genre(A, I), genre(J, I)'}, {'false,true,false,true': [2.11e-08, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false,false': [0.195, 1886, 78], 'false,true,true': [0.012, 58, 0], 'true,false': [0.397, 298, 1218], 'false,false': [1.13e-07, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(B, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [0.011, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [5.58e-08, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [8.16e-08, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(A, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [0.006, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(B, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [0.013, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [1.51e-07, 337, 0], 'true,false': [0.397, 298, 1218]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '0;true;movie(C, E), movie(D, E).;false;false', '0;false;genre(A, F), genre(B, F).;false;false', '1;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '1;true;movie(C, E), movie(D, E).;false;false', '1;false,true;genre(A, G), genre(H, G).;false;false', '1;false;genre(A, F), genre(B, F).;true;false', '2;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '2;true;movie(C, E), movie(D, E).;false;false', '2;false;genre(A, F), genre(B, F).;false;false', '3;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '3;true;movie(C, E), movie(D, E).;false;false', '3;false,true;genre(A, G), genre(H, G).;false;false', '3;false;genre(A, F), genre(B, F).;true;false', '4;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '4;true;movie(C, E), movie(D, E).;false;false', '4;false;genre(A, F), genre(B, F).;false;false', '5;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '5;true;movie(C, E), movie(D, E).;false;false', '5;false,true;genre(B, G), genre(H, G).;false;true', '5;false;genre(A, F), genre(B, F).;true;false', '5;false,true,false;genre(A, I), genre(J, I).;false;false', '6;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '6;true;movie(C, E), movie(D, E).;false;false', '6;false,true;genre(B, G), genre(H, G).;false;false', '6;false;genre(A, F), genre(B, F).;true;false', '7;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '7;true;movie(C, E), movie(D, E).;false;false', '7;false;genre(A, F), genre(B, F).;false;false', '8;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '8;true;movie(C, E), movie(D, E).;false;false', '8;false,true;genre(A, G), genre(H, G).;false;false', '8;false;genre(A, F), genre(B, F).;true;false', '9;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '9;true;movie(C, E), movie(D, E).;false;false', '9;false,true;genre(B, G), genre(H, G).;false;false', '9;false;genre(A, F), genre(B, F).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.48222300917358196;  // std dev = 11,256, 540,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=337 */
%   | else return -0.1418510649004879;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.4128856920397516;  // std dev = 11,256, 540,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=337 */
%   | else return -0.12544463852839113;  // std dev = 7,88e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.33602770202746124;  // std dev = 11,256, 540,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=337 */
%   | else return -0.11231637819360617;  // std dev = 1,01e-07, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.2625749887778716;  // std dev = 11,256, 540,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=337 */
%   | else return -0.10159632948783641;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.2000531689785;  // std dev = 11,256, 540,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=337 */
%   | else return -0.09269127618926076;  // std dev = 8,02e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.15060798344544687;  // std dev = 11,256, 540,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=337 */
%   | else return -0.0851847513883968;  // std dev = 6,91e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.11298275773241287;  // std dev = 11,256, 540,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=337 */
%   | else return -0.07877675473109153;  // std dev = 7,52e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.08481621942240304;  // std dev = 11,256, 540,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=337 */
%   | else return -0.07324622576333722;  // std dev = 1,05e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.06382535703753482;  // std dev = 11,256, 540,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=337 */
%   | else return -0.06842697784420264;  // std dev = 6,14e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.0481662289831668;  // std dev = 11,256, 540,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=337 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.636364
   AUC PR    = 0.578947
   CLL	      = -0.596452
   Precision = 0.578947 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.733333


Total learning time: 5.084 seconds
Total inference time: 0.6 seconds
AUC ROC: 0.636364


Results in test set
   AUC ROC   = 0.636364
   AUC PR    = 0.578947
   CLL	      = -0.596452
   Precision = 0.578947 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.733333


Total inference time: 0.6 seconds
AUC ROC: 0.636364
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.256, 203, 337], 'true,false': [0.0, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.256, 203, 337], 'true,false': [7.88e-08, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.256, 203, 337], 'true,false': [1.01e-07, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.256, 203, 337], 'true,false': [0.0, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.256, 203, 337], 'true,false': [8.02e-08, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.256, 203, 337], 'true,false': [6.91e-08, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.256, 203, 337], 'true,false': [7.52e-08, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.256, 203, 337], 'true,false': [1.05e-08, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.256, 203, 337], 'true,false': [6.14e-08, 134, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.256, 203, 337], 'true,false': [0.0, 134, 0], 'false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
[]
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0), ('true,true', 0.6240740740740741)]
Tree #2: [('false', 0), ('true,true', 0.6240740740740741)]
Tree #3: [('false', 0), ('true,true', 0.6240740740740741)]
Tree #4: [('false', 0), ('true,true', 0.6240740740740741)]
Tree #5: [('false', 0), ('true,true', 0.6240740740740741)]
Tree #6: [('false', 0), ('true,true', 0.6240740740740741)]
Tree #7: [('false', 0), ('true,true', 0.6240740740740741)]
Tree #8: [('false', 0), ('true,true', 0.6240740740740741)]
Tree #9: [('false', 0), ('true,true', 0.6240740740740741)]
Tree #10: [('false', 0), ('true,true', 0.6240740740740741)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995097;  // std dev = 9,90e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.8470378239883983;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.14185106490048785;  // std dev = 9,42e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.7105993940723562;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.1254446385283919;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,46e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.5491847262103365;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.11231637819360682;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.417513584158309;  // std dev = 4,54e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.41277954404908035;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.10159632948783659;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.32071184716014967;  // std dev = 3,10e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.31636963284550357;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.0926912761892605;  // std dev = 1,67e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.25517224256949056;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.2508170054266839;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.08518475138839678;  // std dev = 1,05e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253517;  // std dev = 2,60e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.20528583874633344;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.07877675473109147;  // std dev = 2,11e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1770964977452782;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.17249952950467928;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.07324622576333698;  // std dev = 9,66e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.14803790348464016;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.06842697784420294;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1340070300080108;  // std dev = 9,19e-08, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.12921169960183068;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.064191840082026;  // std dev = 1,12e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096578
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.871 seconds
Total inference time: 0.555 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


Refining iteration 2
********************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '0;true;female(A).;false;true', '1;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '1;true;female(A).;false;true', '2;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '2;true;female(A).;false;true', '3;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '3;true;female(A).;false;true', '4;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '4;true;female(A).;false;true', '5;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '5;true;female(A).;false;true', '6;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '6;true;female(A).;false;true', '7;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '7;true;female(A).;false;true', '8;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '8;true;female(A).;false;true', '9;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '9;true;female(A).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false', 0.9888888888888889)]
Tree #2: [('true,false', 0.9888888888888889)]
Tree #3: [('true,false', 0.9888888888888889)]
Tree #4: [('true,false', 0.9888888888888889)]
Tree #5: [('true,false', 0.9888888888888889)]
Tree #6: [('true,false', 0.9888888888888889)]
Tree #7: [('true,false', 0.9888888888888889)]
Tree #8: [('true,false', 0.9888888888888889)]
Tree #9: [('true,false', 0.9888888888888889)]
Tree #10: [('true,false', 0.9888888888888889)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995097;  // std dev = 9,90e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.8470378239883983;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.14185106490048785;  // std dev = 9,42e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.7105993940723562;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.1254446385283919;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,46e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.5491847262103365;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.11231637819360682;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.417513584158309;  // std dev = 4,54e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.41277954404908035;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.10159632948783659;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.32071184716014967;  // std dev = 3,10e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.31636963284550357;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.0926912761892605;  // std dev = 1,67e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.25517224256949056;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.2508170054266839;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.08518475138839678;  // std dev = 1,05e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253517;  // std dev = 2,60e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.20528583874633344;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.07877675473109147;  // std dev = 2,11e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1770964977452782;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.17249952950467928;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.07324622576333698;  // std dev = 9,66e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.14803790348464016;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.06842697784420294;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1340070300080108;  // std dev = 9,19e-08, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.12921169960183068;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.064191840082026;  // std dev = 1,12e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096578
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.477 seconds
Total inference time: 0.54 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 21.127
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097325
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.519 seconds
AUC ROC: 1.0
Dataset: 8, Run: 1, Fold: 4, Type: transfer, Time: 00:37:03
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'Inference time': 0.519, 'F1': 1.0, 'Mapping results': {'Generating paths time': 4.563283681869507, 'Possible mappings': 126, 'Finding best mapping': 0.027188777923583984, 'Generating mappings time': 0.06386566162109375, 'Knowledge compiling time': 0.44602060317993164, 'Total time': 5.100365161895752}, 'AUC PR': 1.0, 'Learning time': 21.127, 'Parameter Learning results': {'Precision': [0.6, 0.5], 'Recall': 1.0, 'Inference time': 0.568, 'F1': 0.75, 'AUC PR': 0.6, 'Learning time': 5.084, 'AUC ROC': 0.666667, 'CLL': -0.571498}, 'AUC ROC': 1.0, 'CLL': -0.097325}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995097;  // std dev = 9,90e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.8470378239883983;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.14185106490048785;  // std dev = 9,42e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.7105993940723562;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.1254446385283919;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,46e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.5491847262103365;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.11231637819360682;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.417513584158309;  // std dev = 4,54e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.41277954404908035;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.10159632948783659;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.32071184716014967;  // std dev = 3,10e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.31636963284550357;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.0926912761892605;  // std dev = 1,67e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.25517224256949056;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.2508170054266839;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.08518475138839678;  // std dev = 1,05e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253517;  // std dev = 2,60e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.20528583874633344;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.07877675473109147;  // std dev = 2,11e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1770964977452782;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.17249952950467928;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.07324622576333698;  // std dev = 9,66e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.14803790348464016;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.06842697784420294;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1340070300080108;  // std dev = 9,19e-08, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.12921169960183068;  // std dev = 0,105, 180,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=178 */
%   else return -0.064191840082026;  // std dev = 1,12e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097325
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.708 seconds
Total inference time: 0.52 seconds
AUC ROC: 1.0


Dataset: 8, Run: 1, Fold: 4, Type: scratch, Time: 00:37:12
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'Inference time': 0.52, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 8.708, 'AUC ROC': 1.0, 'CLL': -0.097325}


Best mapping found: ['haswordvenue(A,B) -> genre(A,B)', 'author(A,B) -> movie(A,B)', 'haswordauthor(A,B) -> genre(A,B)', 'samevenue(A,B) -> workedunder(A,B)', 'venue(A,B) -> movie(A,B)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [2e-07, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(A, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [3.33e-08, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [0.0, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(A, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [2.36e-08, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [3.65e-08, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [2.01e-07, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(B, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)', 'false,true,false': 'genre(A, I), genre(J, I)'}, {'false,true,false,true': [2.11e-08, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false,false': [0.195, 1886, 78], 'false,true,true': [0.012, 58, 0], 'true,false': [0.397, 298, 1218], 'false,false': [1.13e-07, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(B, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [0.011, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [5.58e-08, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false': 'genre(A, F), genre(B, F)'}, {'true,true': [0.385, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.397, 298, 1218], 'false,false': [8.16e-08, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(A, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [0.006, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.397, 298, 1218]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)', 'false,true': 'genre(B, G), genre(H, G)', 'false': 'genre(A, F), genre(B, F)'}, {'false,true,true': [0.013, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [1.51e-07, 337, 0], 'true,false': [0.397, 298, 1218]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '0;true;movie(C, E), movie(D, E).;false;false', '0;false;genre(A, F), genre(B, F).;false;false', '1;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '1;true;movie(C, E), movie(D, E).;false;false', '1;false,true;genre(A, G), genre(H, G).;false;false', '1;false;genre(A, F), genre(B, F).;true;false', '2;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '2;true;movie(C, E), movie(D, E).;false;false', '2;false;genre(A, F), genre(B, F).;false;false', '3;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '3;true;movie(C, E), movie(D, E).;false;false', '3;false,true;genre(A, G), genre(H, G).;false;false', '3;false;genre(A, F), genre(B, F).;true;false', '4;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '4;true;movie(C, E), movie(D, E).;false;false', '4;false;genre(A, F), genre(B, F).;false;false', '5;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '5;true;movie(C, E), movie(D, E).;false;false', '5;false,true;genre(B, G), genre(H, G).;false;true', '5;false;genre(A, F), genre(B, F).;true;false', '5;false,true,false;genre(A, I), genre(J, I).;false;false', '6;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '6;true;movie(C, E), movie(D, E).;false;false', '6;false,true;genre(B, G), genre(H, G).;false;false', '6;false;genre(A, F), genre(B, F).;true;false', '7;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '7;true;movie(C, E), movie(D, E).;false;false', '7;false;genre(A, F), genre(B, F).;false;false', '8;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '8;true;movie(C, E), movie(D, E).;false;false', '8;false,true;genre(A, G), genre(H, G).;false;false', '8;false;genre(A, F), genre(B, F).;true;false', '9;;workedunder(A, B) :- movie(C, A), movie(D, B).;true;true', '9;true;movie(C, E), movie(D, E).;false;false', '9;false,true;genre(B, G), genre(H, G).;false;false', '9;false;genre(A, F), genre(B, F).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.47536505231562515;  // std dev = 11,358, 546,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=337 */
%   | else return -0.14185106490048785;  // std dev = 0,000, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.40716792467180096;  // std dev = 11,358, 546,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=337 */
%   | else return -0.12544463852839105;  // std dev = 8,43e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.3317418303954624;  // std dev = 11,358, 546,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=337 */
%   | else return -0.1123163781936062;  // std dev = 9,31e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.2595998236074609;  // std dev = 11,358, 546,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=337 */
%   | else return -0.1015963294878364;  // std dev = 0,000, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.19803243908390336;  // std dev = 11,358, 546,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=337 */
%   | else return -0.0926912761892608;  // std dev = 7,60e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.14919563552547319;  // std dev = 11,358, 546,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=337 */
%   | else return -0.0851847513883968;  // std dev = 6,75e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.11194063658965309;  // std dev = 11,358, 546,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=337 */
%   | else return -0.07877675473109154;  // std dev = 7,30e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.08400425618705573;  // std dev = 11,358, 546,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=337 */
%   | else return -0.0732462257633372;  // std dev = 2,58e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.06316624048207412;  // std dev = 11,358, 546,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=337 */
%   | else return -0.06842697784420265;  // std dev = 5,96e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(D, B) )
%   then if ( movie(C, E), movie(D, E) )
%   | then return 0.04761746861165019;  // std dev = 11,358, 546,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=337 */
%   | else return -0.06419184008202626;  // std dev = 3,80e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.727273
   AUC PR    = 0.647059
   CLL	      = -0.522864
   Precision = 0.647059 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.785714


Total learning time: 4.312 seconds
Total inference time: 0.592 seconds
AUC ROC: 0.727273


Results in test set
   AUC ROC   = 0.727273
   AUC PR    = 0.647059
   CLL	      = -0.522864
   Precision = 0.647059 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.785714


Total inference time: 0.592 seconds
AUC ROC: 0.727273
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.358, 209, 337], 'true,false': [0.0, 128, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.358, 209, 337], 'true,false': [8.43e-08, 128, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.358, 209, 337], 'true,false': [9.31e-08, 128, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.358, 209, 337], 'true,false': [0.0, 128, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.358, 209, 337], 'true,false': [7.6e-08, 128, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.358, 209, 337], 'true,false': [6.75e-08, 128, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.358, 209, 337], 'true,false': [7.3e-08, 128, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.358, 209, 337], 'true,false': [2.58e-08, 128, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.358, 209, 337], 'true,false': [5.96e-08, 128, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(D, B)', 'true': 'movie(C, E), movie(D, E)'}, {'true,true': [11.358, 209, 337], 'true,false': [3.8e-08, 128, 0], 'false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
[]
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0), ('true,true', 0.6172161172161172)]
Tree #2: [('false', 0), ('true,true', 0.6172161172161172)]
Tree #3: [('false', 0), ('true,true', 0.6172161172161172)]
Tree #4: [('false', 0), ('true,true', 0.6172161172161172)]
Tree #5: [('false', 0), ('true,true', 0.6172161172161172)]
Tree #6: [('false', 0), ('true,true', 0.6172161172161172)]
Tree #7: [('false', 0), ('true,true', 0.6172161172161172)]
Tree #8: [('false', 0), ('true,true', 0.6172161172161172)]
Tree #9: [('false', 0), ('true,true', 0.6172161172161172)]
Tree #10: [('false', 0), ('true,true', 0.6172161172161172)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.85814893509951;  // std dev = 9,00e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.8477322684328427;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.1418510649004878;  // std dev = 1,23e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109561;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.7111543417308827;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.12544463852839197;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,20e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.5495713417542955;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.11231637819360678;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.4175135841583089;  // std dev = 4,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.41307451320260163;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.10159632948783659;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.32071184716014983;  // std dev = 2,63e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.31663894630336864;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.09269127618926049;  // std dev = 1,76e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.25517224256949034;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.251086308717642;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2097577156325352;  // std dev = 2,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.20556180922203773;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.07877675473109146;  // std dev = 2,11e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1770964977452782;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.17278277746663348;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.073246225763337;  // std dev = 9,19e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.14832744879098875;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.068426977844203;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.134007030008011;  // std dev = 6,32e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.12950632048031221;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.06419184008202594;  // std dev = 1,23e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096757
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.584 seconds
Total inference time: 0.561 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


Refining iteration 2
********************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '0;true;female(A).;false;true', '1;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '1;true;female(A).;false;true', '2;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '2;true;female(A).;false;true', '3;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '3;true;female(A).;false;true', '4;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '4;true;female(A).;false;true', '5;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '5;true;female(A).;false;true', '6;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '6;true;female(A).;false;true', '7;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '7;true;female(A).;false;true', '8;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '8;true;female(A).;false;true', '9;;workedunder(A, B) :- director(B), movie(C, A), movie(C, B).;true;false', '9;true;female(A).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false', 0.9895833333333334)]
Tree #2: [('true,false', 0.9895833333333334)]
Tree #3: [('true,false', 0.9895833333333334)]
Tree #4: [('true,false', 0.9895833333333334)]
Tree #5: [('true,false', 0.9895833333333334)]
Tree #6: [('true,false', 0.9895833333333334)]
Tree #7: [('true,false', 0.9895833333333334)]
Tree #8: [('true,false', 0.9895833333333334)]
Tree #9: [('true,false', 0.9895833333333334)]
Tree #10: [('true,false', 0.9895833333333334)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.85814893509951;  // std dev = 9,00e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.8477322684328427;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.1418510649004878;  // std dev = 1,23e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109561;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.7111543417308827;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.12544463852839197;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,20e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.5495713417542955;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.11231637819360678;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.4175135841583089;  // std dev = 4,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.41307451320260163;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.10159632948783659;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.32071184716014983;  // std dev = 2,63e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.31663894630336864;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.09269127618926049;  // std dev = 1,76e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.25517224256949034;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.251086308717642;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2097577156325352;  // std dev = 2,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.20556180922203773;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.07877675473109146;  // std dev = 2,11e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1770964977452782;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.17278277746663348;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.073246225763337;  // std dev = 9,19e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.14832744879098875;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.068426977844203;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.134007030008011;  // std dev = 6,32e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.12950632048031221;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.06419184008202594;  // std dev = 1,23e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096757
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.855 seconds
Total inference time: 0.551 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 21.455
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096266
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.521 seconds
AUC ROC: 1.0
Dataset: 8, Run: 1, Fold: 5, Type: transfer, Time: 00:37:41
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'Inference time': 0.521, 'F1': 1.0, 'Mapping results': {'Generating paths time': 4.525170564651489, 'Possible mappings': 126, 'Finding best mapping': 0.026844263076782227, 'Generating mappings time': 0.06346249580383301, 'Knowledge compiling time': 0.46084046363830566, 'Total time': 5.076324939727783}, 'AUC PR': 1.0, 'Learning time': 21.455, 'Parameter Learning results': {'Precision': [0.542169, 0.5], 'Recall': 1.0, 'Inference time': 0.579, 'F1': 0.703125, 'AUC PR': 0.542169, 'Learning time': 4.312, 'AUC ROC': 0.577778, 'CLL': -0.64367}, 'AUC ROC': 1.0, 'CLL': -0.096266}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.85814893509951;  // std dev = 9,00e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.8477322684328427;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.1418510649004878;  // std dev = 1,23e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109561;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.7111543417308827;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.12544463852839197;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,20e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.5495713417542955;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.11231637819360678;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.4175135841583089;  // std dev = 4,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.41307451320260163;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.10159632948783659;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.32071184716014983;  // std dev = 2,63e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.31663894630336864;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.09269127618926049;  // std dev = 1,76e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.25517224256949034;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.251086308717642;  // std dev = 0,102, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109143;  // std dev = 2,98e-08, 306,000 (wgt'ed) examples reached here.  /* #neg=306 */
%   else if ( actor(A), movie(C, B), movie(C, A) )
%   | then return 0.21326496918942567;  // std dev = 0,057, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.2198257086071324;  // std dev = 0,282, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17658595272932942;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.17239813273733975;  // std dev = 0,094, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.07303089738082644;  // std dev = 0,025, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15235644797485062;  // std dev = 1,56e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.14804366999112015;  // std dev = 0,095, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.06823858972157133;  // std dev = 0,024, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.13370451222622967;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.1292905100569075;  // std dev = 0,095, 192,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=190 */
%   else return -0.06402570330838908;  // std dev = 0,022, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096005
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.908 seconds
Total inference time: 0.527 seconds
AUC ROC: 1.0


Dataset: 8, Run: 1, Fold: 5, Type: scratch, Time: 00:37:50
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'Inference time': 0.527, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 8.908, 'AUC ROC': 1.0, 'CLL': -0.096005}


Start learning from source dataset


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.6772826809348238;  // std dev = 0,385, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.6615790142551802;  // std dev = 0,397, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.10319893407789349;  // std dev = 0,193, 2.018,000 (wgt'ed) examples reached here.  /* #neg=1.940 #pos=78 */
%   | else return -0.14185106490048763;  // std dev = 2,00e-07, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.5736261491305331;  // std dev = 0,385, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.5608196912957326;  // std dev = 0,397, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return -0.12945014239256497;  // std dev = 0,008, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.0910477721710625;  // std dev = 0,193, 2.022,000 (wgt'ed) examples reached here.  /* #neg=1.944 #pos=78 */
%   | else return -0.12544463852839216;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( venue(D, A), samebib(D, E), venue(E, B) )
%   | then if ( author(D, F), author(E, F) )
%   | | then return 0.47824230190809164;  // std dev = 0,363, 1.927,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=1.627 */
%   | | else return 0.4585668535861532;  // std dev = 0,386, 1.396,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=1.142 */
%   | else return -0.08207752161916736;  // std dev = 0,190, 2.080,000 (wgt'ed) examples reached here.  /* #neg=2.002 #pos=78 */
%   else if ( venue(G, A), samebib(G, H), venue(H, B) )
%   | then if ( author(G, I), author(H, I) )
%   | | then return 0.17415459485344917;  // std dev = 0,498, 174,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=94 */
%   | | else return 0.27384861098827334;  // std dev = 0,482, 120,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=76 */
%   | else return -0.11231637819360657;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.3430454528411085;  // std dev = 0,381, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.3367659582862314;  // std dev = 0,396, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then return -0.07370277070201241;  // std dev = 0,190, 2.080,000 (wgt'ed) examples reached here.  /* #neg=2.002 #pos=78 */
%   | else return -0.10159632948783642;  // std dev = 3,65e-08, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.2577630276284447;  // std dev = 0,381, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.2528497189687118;  // std dev = 0,396, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then return -0.06662432774244124;  // std dev = 0,190, 2.080,000 (wgt'ed) examples reached here.  /* #neg=2.002 #pos=78 */
%   | else return -0.09269127618926042;  // std dev = 2,01e-07, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.1957260010471667;  // std dev = 0,381, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.19143421968483237;  // std dev = 0,396, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return -0.09468347091750372;  // std dev = 0,006, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.05952333570629457;  // std dev = 0,193, 2.018,000 (wgt'ed) examples reached here.  /* #neg=1.940 #pos=78 */
%   | else return -0.08518475138839678;  // std dev = 1,13e-07, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.1510725459720413;  // std dev = 0,381, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.14708940367502826;  // std dev = 0,396, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then return -0.05534652160862923;  // std dev = 0,190, 2.080,000 (wgt'ed) examples reached here.  /* #neg=2.002 #pos=78 */
%   | else return -0.07877675473109143;  // std dev = 5,58e-08, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.11851357187741411;  // std dev = 0,381, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.11473324301860487;  // std dev = 0,396, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then return -0.0507888439327062;  // std dev = 0,190, 2.080,000 (wgt'ed) examples reached here.  /* #neg=2.002 #pos=78 */
%   | else return -0.07324622576333709;  // std dev = 8,16e-08, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.09429767407292683;  // std dev = 0,381, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.09069524454803257;  // std dev = 0,396, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return -0.08123692090624607;  // std dev = 0,010, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.04579706087203498;  // std dev = 0,193, 2.022,000 (wgt'ed) examples reached here.  /* #neg=1.944 #pos=78 */
%   | else return -0.06842697784420317;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), samebib(C, D), venue(D, B) )
%   then if ( author(C, E), author(D, E) )
%   | then return 0.07592146036499356;  // std dev = 0,382, 2.101,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=1.721 */
%   | else return 0.07249919045824381;  // std dev = 0,396, 1.516,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1.218 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return -0.07540057517462988;  // std dev = 0,010, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.07572163847058103;  // std dev = 1,97e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.04133948048274787;  // std dev = 0,195, 1.964,000 (wgt'ed) examples reached here.  /* #neg=1.886 #pos=78 */
%   | else return -0.06419184008202579;  // std dev = 1,51e-07, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */


Predicates from source: ['samevenue(venue,venue).', 'haswordvenue(venue,word).', 'author(class,author).', 'venue(class,venue).', 'samebib(class,class).', 'haswordauthor(author,word).'] 

Source structured tree: [['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false,true': 'haswordvenue(A, G), haswordauthor(H, G)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'false,true,false': [0.193, 1940, 78], 'true,true': [0.385, 380, 1721], 'true,false': [0.397, 298, 1218], 'false,false': [2e-07, 337, 0], 'false,true,true': [6.32e-08, 62, 0]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false,true': 'haswordvenue(B, G), haswordauthor(H, G)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'false,true,false': [0.193, 1944, 78], 'true,true': [0.385, 380, 1721], 'true,false': [0.397, 298, 1218], 'false,false': [0.0, 337, 0], 'false,true,true': [0.008, 58, 0]}], ['samevenue(A, B)', {'': 'haswordvenue(A, C), haswordvenue(B, C)', 'true': 'venue(D, A), samebib(D, E), venue(E, B)', 'true,true': 'author(D, F), author(E, F)', 'false,true': 'author(G, I), author(H, I)', 'false': 'venue(G, A), samebib(G, H), venue(H, B)'}, {'true,true,false': [0.386, 254, 1142], 'true,true,true': [0.363, 300, 1627], 'false,true,false': [0.482, 44, 76], 'true,false': [0.19, 2002, 78], 'false,false': [0.0, 337, 0], 'false,true,true': [0.498, 80, 94]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [3.65e-08, 337, 0]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [2.01e-07, 337, 0]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false,true': 'haswordvenue(A, G), haswordauthor(H, G)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'false,true,false': [0.193, 1940, 78], 'true,true': [0.381, 380, 1721], 'true,false': [0.396, 298, 1218], 'false,false': [1.13e-07, 337, 0], 'false,true,true': [0.006, 62, 0]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [5.58e-08, 337, 0]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [8.16e-08, 337, 0]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false,true': 'haswordvenue(B, G), haswordauthor(H, G)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)'}, {'false,true,false': [0.193, 1944, 78], 'true,true': [0.381, 380, 1721], 'true,false': [0.396, 298, 1218], 'false,false': [0.0, 337, 0], 'false,true,true': [0.01, 58, 0]}], ['samevenue(A, B)', {'': 'venue(C, A), samebib(C, D), venue(D, B)', 'true': 'author(C, E), author(D, E)', 'false,true': 'haswordvenue(A, G), haswordauthor(H, G)', 'false': 'haswordvenue(A, F), haswordvenue(B, F)', 'false,true,false': 'haswordvenue(B, I), haswordauthor(J, I)'}, {'false,true,false,true': [1.97e-08, 54, 0], 'true,true': [0.382, 380, 1721], 'false,true,false,false': [0.195, 1886, 78], 'true,false': [0.396, 298, 1218], 'false,false': [1.51e-07, 337, 0], 'false,true,true': [0.01, 62, 0]}]] 



Best mapping found: ['haswordvenue(A,B) -> publication(B,A)', 'author(A,B) -> yearsinprogram(A,B)', 'samevenue(A,B) -> advisedby(A,B)', 'venue(A,B) -> tempadvisedby(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [6.32e-08, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [2e-07, 337, 0], 'true,false': [0.397, 298, 1218]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [0.008, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.397, 298, 1218]}], ['advisedby(A, B)', {'': 'publication(C, A), publication(C, B)', 'true': 'tempadvisedby(D, A), tempadvisedby(E, B)', 'true,true': 'yearsinprogram(D, F), yearsinprogram(E, F)', 'false,true': 'yearsinprogram(G, I), yearsinprogram(H, I)', 'false': 'tempadvisedby(G, A), tempadvisedby(H, B)'}, {'false,true,true': [0.498, 80, 94], 'true,true,false': [0.386, 254, 1142], 'true,true,true': [0.363, 300, 1627], 'false,true,false': [0.482, 44, 76], 'true,false': [0.19, 2002, 78], 'false,false': [0.0, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [3.65e-08, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [2.01e-07, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [0.006, 62, 0], 'true,true': [0.381, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [1.13e-07, 337, 0], 'true,false': [0.396, 298, 1218]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [5.58e-08, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [8.16e-08, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [0.01, 58, 0], 'true,true': [0.381, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.396, 298, 1218]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)', 'false,true,false': 'publication(I, B)'}, {'false,true,false,true': [1.97e-08, 54, 0], 'true,true': [0.382, 380, 1721], 'false,true,false,false': [0.195, 1886, 78], 'false,true,true': [0.01, 62, 0], 'true,false': [0.396, 298, 1218], 'false,false': [1.51e-07, 337, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '0;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '0;false,true;publication(G, A).;false;false', '0;false;publication(F, A), publication(F, B).;true;false', '1;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '1;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '1;false,true;publication(G, B).;false;false', '1;false;publication(F, A), publication(F, B).;true;false', '2;;advisedby(A, B) :- publication(C, A), publication(C, B).;true;true', '2;true;tempadvisedby(D, A), tempadvisedby(E, B).;true;false', '2;true,true;yearsinprogram(D, F), yearsinprogram(E, F).;false;false', '2;false,true;yearsinprogram(G, I), yearsinprogram(H, I).;false;false', '2;false;tempadvisedby(G, A), tempadvisedby(H, B).;true;false', '3;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '3;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '3;false;publication(F, A), publication(F, B).;false;false', '4;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '4;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '4;false;publication(F, A), publication(F, B).;false;false', '5;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '5;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '5;false,true;publication(G, A).;false;false', '5;false;publication(F, A), publication(F, B).;true;false', '6;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '6;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '6;false;publication(F, A), publication(F, B).;false;false', '7;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '7;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '7;false;publication(F, A), publication(F, B).;false;false', '8;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '8;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '8;false,true;publication(G, B).;false;false', '8;false;publication(F, A), publication(F, B).;true;false', '9;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '9;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '9;false,true;publication(G, A).;false;true', '9;false;publication(F, A), publication(F, B).;true;false', '9;false,true,false;publication(I, B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.6522665821583351;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2831489350995123;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, B) )
%   | | then return 0.5532143200379044;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.245074315771458;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(C, B) )
%   then if ( tempadvisedby(D, A), tempadvisedby(E, B) )
%   | then if ( yearsinprogram(D, F), yearsinprogram(E, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.438519010524299;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   else if ( tempadvisedby(G, A), tempadvisedby(H, B) )
%   | then if ( yearsinprogram(G, I), yearsinprogram(H, I) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20604674634626827;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.33303876875193833;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | else return 0.16878403266448325;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.24997321695492863;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | else return 0.13532149444198874;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.1889577349652491;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.10670632108901615;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.14481629650937164;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | else return 0.08311790017244884;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.11259330370774821;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | else return 0.06417847060322378;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, B) )
%   | | then return 0.08866928766597514;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.04924879981260603;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.0705858813704474;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.037628131820298186;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
Results
   AUC ROC   = 0.571429
   AUC PR    = 0.580491
   CLL	      = -0.685877
   Precision = 0.666667 at threshold = 0.5
   Recall    = 0.285714
   F1        = 0.4


Total learning time: 11.148 seconds
Total inference time: 0.505 seconds
AUC ROC: 0.571429


Results in test set
   AUC ROC   = 0.571429
   AUC PR    = 0.580491
   CLL	      = -0.685877
   Precision = 0.666667 at threshold = 0.5
   Recall    = 0.285714
   F1        = 0.4


Total inference time: 0.505 seconds
AUC ROC: 0.571429
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,false': [5.415, 69, 51], 'false,true,true': [2.358, 7, 27]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,false': [5.415, 69, 51], 'false,true,true': [2.358, 7, 27]}], ['advisedby(A, B)', {'': 'publication(C, A), publication(C, B)', 'true': 'tempadvisedby(D, A), tempadvisedby(E, B)', 'true,true': 'yearsinprogram(D, F), yearsinprogram(E, F)', 'false,true': 'yearsinprogram(G, I), yearsinprogram(H, I)', 'false': 'tempadvisedby(G, A), tempadvisedby(H, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'true,false': [2.358, 7, 27], 'false,false': [5.415, 69, 51], 'false,true,true': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 2, 0], 'false,true': [2.358, 7, 27], 'true,false': [0.0, 0, 0], 'false,false': [5.415, 69, 51]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 2, 0], 'false,true': [2.358, 7, 27], 'true,false': [0.0, 0, 0], 'false,false': [5.415, 69, 51]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,false': [5.415, 69, 51], 'false,true,true': [2.358, 7, 27]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 2, 0], 'false,true': [2.358, 7, 27], 'true,false': [0.0, 0, 0], 'false,false': [5.415, 69, 51]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 2, 0], 'false,true': [2.358, 7, 27], 'true,false': [0.0, 0, 0], 'false,false': [5.415, 69, 51]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,false': [5.415, 69, 51], 'false,true,true': [2.358, 7, 27]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,false': [5.415, 69, 51], 'false,true,true': [2.358, 7, 27]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '0;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '0;false;publication(F, A), publication(F, B).;false;false', '1;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '1;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '1;false;publication(F, A), publication(F, B).;false;false', '2;;advisedby(A, B) :- publication(C, A), publication(C, B).;true;true', '2;true;tempadvisedby(D, A), tempadvisedby(E, B).;false;false', '2;false,true;yearsinprogram(G, I), yearsinprogram(H, I).;false;false', '2;false;tempadvisedby(G, A), tempadvisedby(H, B).;true;false', '3;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;false;true', '3;false;publication(F, A), publication(F, B).;false;false', '4;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;false;true', '4;false;publication(F, A), publication(F, B).;false;false', '5;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '5;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '5;false;publication(F, A), publication(F, B).;false;false', '6;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;false;true', '6;false;publication(F, A), publication(F, B).;false;false', '7;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;false;true', '7;false;publication(F, A), publication(F, B).;false;false', '8;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '8;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '8;false;publication(F, A), publication(F, B).;false;false', '9;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '9;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '9;false;publication(F, A), publication(F, B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,false', 0), ('true,false', 0), ('false,false', 0.575), ('false,true,true', 0.7941176470588235)]
Tree #2: [('false,true,false', 0), ('true,false', 0), ('false,false', 0.575), ('false,true,true', 0.7941176470588235)]
Tree #3: [('true,true,false', 0), ('false,true,false', 0), ('false,false', 0.575), ('true,false', 0.7941176470588235)]
Tree #4: [('true,false', 0), ('false,false', 0.575), ('false,true', 0.7941176470588235)]
Tree #5: [('true,false', 0), ('false,false', 0.575), ('false,true', 0.7941176470588235)]
Tree #6: [('false,true,false', 0), ('true,false', 0), ('false,false', 0.575), ('false,true,true', 0.7941176470588235)]
Tree #7: [('true,false', 0), ('false,false', 0.575), ('false,true', 0.7941176470588235)]
Tree #8: [('true,false', 0), ('false,false', 0.575), ('false,true', 0.7941176470588235)]
Tree #9: [('false,true,false', 0), ('true,false', 0), ('false,false', 0.575), ('false,true,true', 0.7941176470588235)]
Tree #10: [('false,true,false', 0), ('true,false', 0), ('false,false', 0.575), ('false,true,true', 0.7941176470588235)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.6522665821583351;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | else return 0.2831489350995123;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.5532143200379044;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | else return 0.245074315771458;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(C, B) )
%   then if ( tempadvisedby(D, A), tempadvisedby(E, B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.438519010524299;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   else if ( tempadvisedby(F, A), tempadvisedby(G, B) )
%   | then if ( yearsinprogram(F, H), yearsinprogram(G, H) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20604674634626827;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( publication(E, A), publication(E, B) )
%   | then return 0.33303876875193833;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | else return 0.16878403266448325;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( publication(E, A), publication(E, B) )
%   | then return 0.24997321695492863;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | else return 0.13532149444198874;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.1889577349652491;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | else return 0.10670632108901615;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( publication(E, A), publication(E, B) )
%   | then return 0.14481629650937164;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | else return 0.08311790017244884;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( publication(E, A), publication(E, B) )
%   | then return 0.11259330370774821;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | else return 0.06417847060322378;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.08866928766597514;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | else return 0.04924879981260603;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.0705858813704474;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | else return 0.037628131820298186;  // std dev = 5,415, 120,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=51 */
Results
   AUC ROC   = 0.571429
   AUC PR    = 0.580491
   CLL	      = -0.685877
   Precision = 0.666667 at threshold = 0.5
   Recall    = 0.285714
   F1        = 0.4


Total learning time: 4.701 seconds
Total inference time: 0.489 seconds
AUC ROC: 0.571429


Best model AUC ROC so far: 0.571429


******************************************
Best model found
******************************************
Total revision time: 16.843
Best validation AUC ROC: 0.571429


Results
   AUC ROC   = 0.628571
   AUC PR    = 0.636646
   CLL	      = -0.650398
   Precision = 0.736842 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.518519


Total inference time: 0.598 seconds
AUC ROC: 0.628571
Dataset: 9, Run: 1, Fold: 1, Type: transfer, Time: 01:11:48
{'Precision': [0.736842, 0.5], 'Recall': 0.4, 'Inference time': 0.598, 'F1': 0.518519, 'Mapping results': {'Generating paths time': 4.582049608230591, 'Possible mappings': 7036, 'Finding best mapping': 1.8753907680511475, 'Generating mappings time': 1.2223362922668457, 'Knowledge compiling time': 0.46082639694213867, 'Total time': 8.140610933303833}, 'AUC PR': 0.636646, 'Learning time': 16.843, 'Parameter Learning results': {'Precision': [0.736842, 0.5], 'Recall': 0.4, 'Inference time': 0.615, 'F1': 0.518519, 'AUC PR': 0.636646, 'Learning time': 11.148, 'AUC ROC': 0.628571, 'CLL': -0.650398}, 'AUC ROC': 0.628571, 'CLL': -0.650398}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else if ( publication(G, C) )
%   | | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( publication(H, B), publication(H, I), projectmember(J, I) )
%   | | | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(K, B) )
%   | | | | | | then if ( publication(L, A) )
%   | | | | | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | | else return 0.7002541982574071;  // std dev = 0,365, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7265699877310904;  // std dev = 0,338, 38,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   else return -0.14185106490048768;  // std dev = 5,37e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | | then return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else if ( publication(G, C) )
%   | | | | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( publication(H, B) )
%   | | | | | then if ( publication(I, A) )
%   | | | | | | then return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | else if ( publication(H, J), projectmember(K, J) )
%   | | | | | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.5923177366262468;  // std dev = 0,365, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | | | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6136697145138905;  // std dev = 0,338, 38,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   else return -0.12544463852839155;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B), publication(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( tempadvisedby(E, B), publication(F, B), publication(G, A) )
%   | | then if ( publication(F, H), student(H) )
%   | | | then return 0.0933647572823743;  // std dev = 1,124, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3779686050825171;  // std dev = 0,697, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(I, B), publication(I, J), tempadvisedby(J, K) )
%   | | | then return 0.6346326211442601;  // std dev = 0,136, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else if ( publication(L, B), publication(L, M), tempadvisedby(N, M) )
%   | | | | then if ( publication(P, N) )
%   | | | | | then if ( tempadvisedby(Q, B) )
%   | | | | | | then return 0.0822366256661933;  // std dev = 1,083, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | | else return 0.3004573105638624;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | | | else return 0.5461545810478917;  // std dev = 0,247, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | | else return 0.533531840020241;  // std dev = 0,348, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.11231637819360632;  // std dev = 3,65e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B), publication(D, A) )
%   | then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( tempadvisedby(E, B), publication(F, A) )
%   | | then if ( publication(F, G), professor(G), publication(H, B) )
%   | | | then return -0.01618639236820295;  // std dev = 0,907, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.42855862156418095;  // std dev = 0,888, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then if ( publication(J, I) )
%   | | | | then return 0.25363609887090754;  // std dev = 1,009, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( publication(K, B), publication(K, L), inphase(L, M) )
%   | | | | | then return 0.3724502490658769;  // std dev = 0,314, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | | | else if ( projectmember(N, B) )
%   | | | | | | then return 0.3115928859029153;  // std dev = 0,840, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | else return 0.2403195808319767;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.36884982574622366;  // std dev = 0,324, 38,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   else return -0.10159632948783626;  // std dev = 3,33e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.3209375772545409;  // std dev = 0,174, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( tempadvisedby(F, B), tempadvisedby(G, E) )
%   | | | then return 0.1507738296520021;  // std dev = 1,024, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.09438682149679159;  // std dev = 0,979, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then if ( publication(I, B), publication(I, J), student(J) )
%   | | | | then if ( inphase(J, K), inphase(H, K) )
%   | | | | | then return 0.4464070783453825;  // std dev = 0,138, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else if ( publication(L, H) )
%   | | | | | | then return -0.01799985798712859;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.218709310044266;  // std dev = 0,378, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | | else return 0.3259885418885417;  // std dev = 0,340, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.31729350295728037;  // std dev = 0,276, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else return -0.09269127618926105;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.2517478610611503;  // std dev = 0,174, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( tempadvisedby(F, B), tempadvisedby(G, E) )
%   | | | then return 0.12230681553649925;  // std dev = 1,021, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.07282285556514963;  // std dev = 0,979, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then if ( publication(I, B), publication(I, J), tempadvisedby(J, K) )
%   | | | | then return 0.3422249494313947;  // std dev = 0,125, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(L, H) )
%   | | | | | then return -0.013908781213919733;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else if ( publication(M, B), publication(M, N), projectmember(P, N) )
%   | | | | | | then return 0.29438215996680445;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.17454624359829532;  // std dev = 0,391, 24,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return 0.24367823495981167;  // std dev = 0,277, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.20345103740907772;  // std dev = 0,175, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( tempadvisedby(F, B), tempadvisedby(G, E) )
%   | | | then return 0.09782588548343385;  // std dev = 1,019, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.05619254950720286;  // std dev = 0,980, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(H, B), inphase(H, I), inphase(A, I) )
%   | | | then return 0.23419039312439685;  // std dev = 0,640, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else if ( tempadvisedby(J, B) )
%   | | | | then if ( publication(K, A) )
%   | | | | | then return 0.14359044834551016;  // std dev = 0,816, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else if ( projectmember(L, B) )
%   | | | | | | then return 0.05695498673987209;  // std dev = 0,797, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | else return 0.13925826801981236;  // std dev = 0,370, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | | else return 0.19194459665712252;  // std dev = 0,278, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else return -0.07877675473109177;  // std dev = 1,29e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.16867527644556998;  // std dev = 0,176, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( publication(D, B), publication(E, A), tempadvisedby(F, B) )
%   | | then if ( publication(D, G), inphase(G, H), inphase(A, H) )
%   | | | then return 0.17381017478237704;  // std dev = 0,823, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.11286291471033119;  // std dev = 0,819, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(I, B), publication(I, J), projectmember(K, J) )
%   | | | then return 0.22237643780787233;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(L, B), publication(L, M), inphase(M, N) )
%   | | | | then if ( inphase(A, N), publication(L, P), tempadvisedby(Q, P) )
%   | | | | | then return 0.08522375761323672;  // std dev = 0,406, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | | | else return 0.18976565339176044;  // std dev = 0,267, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | | else if ( publication(R, A), publication(S, B) )
%   | | | | | then return -0.25434857190849597;  // std dev = 0,593, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.16091771942649805;  // std dev = 0,333, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.14278771491165038;  // std dev = 0,176, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A), publication(F, G), professor(G) )
%   | | | then return -0.07216333713921577;  // std dev = 0,862, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else if ( publication(H, D) )
%   | | | | then return 0.05636454952861621;  // std dev = 0,916, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( publication(I, A) )
%   | | | | | then return 0.1192035646630332;  // std dev = 0,793, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.10804476078689876;  // std dev = 0,326, 22,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | else if ( publication(J, A) )
%   | | | then if ( publication(J, K), hasposition(K, L), hasposition(B, L) )
%   | | | | then return 0.45510552947094945;  // std dev = 0,072, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.01276988664532743;  // std dev = 0,776, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.08979301217664448;  // std dev = 0,332, 21,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.12292764532597822;  // std dev = 0,177, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( tempadvisedby(D, B), inphase(D, E), inphase(A, E) )
%   | | then return 0.13504536133039102;  // std dev = 0,654, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then if ( projectmember(G, B) )
%   | | | | then return -0.00922985367772533;  // std dev = 0,799, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else if ( publication(H, A), publication(I, B) )
%   | | | | | then if ( publication(H, J), professor(J) )
%   | | | | | | then return -0.05823962138878562;  // std dev = 0,863, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | | else return 0.09206344187196727;  // std dev = 0,795, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.07872538692613136;  // std dev = 0,369, 21,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else if ( publication(K, A), publication(K, L), professor(L) )
%   | | | | then return -0.05194346046611281;  // std dev = 0,771, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.1189588236340115;  // std dev = 0,278, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else return -0.06419184008202625;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
Results
   AUC ROC   = 0.907347
   AUC PR    = 0.869955
   CLL	      = -0.319623
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 16.03 seconds
Total inference time: 0.698 seconds
AUC ROC: 0.907347


Dataset: 9, Run: 1, Fold: 1, Type: scratch, Time: 01:12:05
{'Precision': [0.833333, 0.5], 'Recall': 1.0, 'Inference time': 0.698, 'F1': 0.909091, 'AUC PR': 0.869955, 'Learning time': 16.03, 'AUC ROC': 0.907347, 'CLL': -0.319623}


Best mapping found: ['haswordvenue(A,B) -> publication(B,A)', 'author(A,B) -> yearsinprogram(A,B)', 'samevenue(A,B) -> advisedby(A,B)', 'venue(A,B) -> tempadvisedby(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [6.32e-08, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [2e-07, 337, 0], 'true,false': [0.397, 298, 1218]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [0.008, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.397, 298, 1218]}], ['advisedby(A, B)', {'': 'publication(C, A), publication(C, B)', 'true': 'tempadvisedby(D, A), tempadvisedby(E, B)', 'true,true': 'yearsinprogram(D, F), yearsinprogram(E, F)', 'false,true': 'yearsinprogram(G, I), yearsinprogram(H, I)', 'false': 'tempadvisedby(G, A), tempadvisedby(H, B)'}, {'false,true,true': [0.498, 80, 94], 'true,true,false': [0.386, 254, 1142], 'true,true,true': [0.363, 300, 1627], 'false,true,false': [0.482, 44, 76], 'true,false': [0.19, 2002, 78], 'false,false': [0.0, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [3.65e-08, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [2.01e-07, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [0.006, 62, 0], 'true,true': [0.381, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [1.13e-07, 337, 0], 'true,false': [0.396, 298, 1218]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [5.58e-08, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [8.16e-08, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [0.01, 58, 0], 'true,true': [0.381, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.396, 298, 1218]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)', 'false,true,false': 'publication(I, B)'}, {'false,true,false,true': [1.97e-08, 54, 0], 'true,true': [0.382, 380, 1721], 'false,true,false,false': [0.195, 1886, 78], 'false,true,true': [0.01, 62, 0], 'true,false': [0.396, 298, 1218], 'false,false': [1.51e-07, 337, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '0;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '0;false,true;publication(G, A).;false;false', '0;false;publication(F, A), publication(F, B).;true;false', '1;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '1;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '1;false,true;publication(G, B).;false;false', '1;false;publication(F, A), publication(F, B).;true;false', '2;;advisedby(A, B) :- publication(C, A), publication(C, B).;true;true', '2;true;tempadvisedby(D, A), tempadvisedby(E, B).;true;false', '2;true,true;yearsinprogram(D, F), yearsinprogram(E, F).;false;false', '2;false,true;yearsinprogram(G, I), yearsinprogram(H, I).;false;false', '2;false;tempadvisedby(G, A), tempadvisedby(H, B).;true;false', '3;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '3;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '3;false;publication(F, A), publication(F, B).;false;false', '4;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '4;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '4;false;publication(F, A), publication(F, B).;false;false', '5;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '5;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '5;false,true;publication(G, A).;false;false', '5;false;publication(F, A), publication(F, B).;true;false', '6;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '6;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '6;false;publication(F, A), publication(F, B).;false;false', '7;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '7;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '7;false;publication(F, A), publication(F, B).;false;false', '8;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '8;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '8;false,true;publication(G, B).;false;false', '8;false;publication(F, A), publication(F, B).;true;false', '9;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '9;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '9;false,true;publication(G, A).;false;true', '9;false;publication(F, A), publication(F, B).;true;false', '9;false,true,false;publication(I, B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.7993254056877469;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.26754490825387517;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, B) )
%   | | then return 0.6723676618346625;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.23176121265818891;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(C, B) )
%   then if ( tempadvisedby(D, A), tempadvisedby(E, B) )
%   | then if ( yearsinprogram(D, F), yearsinprogram(E, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.5225238410881432;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   else if ( tempadvisedby(G, A), tempadvisedby(H, B) )
%   | then if ( yearsinprogram(G, I), yearsinprogram(H, I) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.19534771174978452;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.3927742928882812;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return 0.1606564486696673;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.29850198038149106;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return 0.12944195778771372;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.23321722189777613;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.10262261469002594;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.1874270393397717;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return 0.08037693461401653;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.15431037802711225;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return 0.062395035576214376;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, B) )
%   | | then return 0.12957531228094837;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.04812526874137118;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.11055711283622814;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.0369476931265624;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
Results
   AUC ROC   = 0.666667
   AUC PR    = 0.747588
   CLL	      = -0.589418
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.333333
   F1        = 0.5


Total learning time: 5.756 seconds
Total inference time: 0.539 seconds
AUC ROC: 0.666667


Results in test set
   AUC ROC   = 0.666667
   AUC PR    = 0.747588
   CLL	      = -0.589418
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.333333
   F1        = 0.5


Total inference time: 0.539 seconds
AUC ROC: 0.666667
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 1, 0], 'false,false': [6.002, 88, 61], 'false,true,true': [1.372, 2, 32]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 1, 0], 'false,false': [6.002, 88, 61], 'false,true,true': [1.372, 2, 32]}], ['advisedby(A, B)', {'': 'publication(C, A), publication(C, B)', 'true': 'tempadvisedby(D, A), tempadvisedby(E, B)', 'true,true': 'yearsinprogram(D, F), yearsinprogram(E, F)', 'false,true': 'yearsinprogram(G, I), yearsinprogram(H, I)', 'false': 'tempadvisedby(G, A), tempadvisedby(H, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 1, 0], 'true,false': [1.372, 2, 32], 'false,false': [6.002, 88, 61], 'false,true,true': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 2, 0], 'false,true': [1.372, 2, 32], 'true,false': [0.0, 1, 0], 'false,false': [6.002, 88, 61]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 2, 0], 'false,true': [1.372, 2, 32], 'true,false': [0.0, 1, 0], 'false,false': [6.002, 88, 61]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 1, 0], 'false,false': [6.002, 88, 61], 'false,true,true': [1.372, 2, 32]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 2, 0], 'false,true': [1.372, 2, 32], 'true,false': [0.0, 1, 0], 'false,false': [6.002, 88, 61]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 2, 0], 'false,true': [1.372, 2, 32], 'true,false': [0.0, 1, 0], 'false,false': [6.002, 88, 61]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 1, 0], 'false,false': [6.002, 88, 61], 'false,true,true': [1.372, 2, 32]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 1, 0], 'false,false': [6.002, 88, 61], 'false,true,true': [1.372, 2, 32]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '0;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '0;false;publication(F, A), publication(F, B).;false;false', '1;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '1;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '1;false;publication(F, A), publication(F, B).;false;false', '2;;advisedby(A, B) :- publication(C, A), publication(C, B).;true;true', '2;true;tempadvisedby(D, A), tempadvisedby(E, B).;false;false', '2;false,true;yearsinprogram(G, I), yearsinprogram(H, I).;false;false', '2;false;tempadvisedby(G, A), tempadvisedby(H, B).;true;false', '3;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;false', '3;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '4;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;false', '4;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '5;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '5;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '5;false;publication(F, A), publication(F, B).;false;false', '6;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;false', '6;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '7;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;false', '7;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '8;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '8;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '8;false;publication(F, A), publication(F, B).;false;false', '9;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '9;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '9;false;publication(F, A), publication(F, B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,false', 0), ('false,false', 0.5906040268456376), ('false,true,true', 0.9411764705882353)]
Tree #2: [('false,true,false', 0), ('false,false', 0.5906040268456376), ('false,true,true', 0.9411764705882353)]
Tree #3: [('true,true,false', 0), ('false,false', 0.5906040268456376), ('true,false', 0.9411764705882353)]
Tree #4: [('false,false', 0.5906040268456376), ('false,true', 0.9411764705882353)]
Tree #5: [('false,false', 0.5906040268456376), ('false,true', 0.9411764705882353)]
Tree #6: [('false,true,false', 0), ('false,false', 0.5906040268456376), ('false,true,true', 0.9411764705882353)]
Tree #7: [('false,false', 0.5906040268456376), ('false,true', 0.9411764705882353)]
Tree #8: [('false,false', 0.5906040268456376), ('false,true', 0.9411764705882353)]
Tree #9: [('false,true,false', 0), ('false,false', 0.5906040268456376), ('false,true,true', 0.9411764705882353)]
Tree #10: [('false,true,false', 0), ('false,false', 0.5906040268456376), ('false,true,true', 0.9411764705882353)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.7993254056877469;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return 0.26754490825387517;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.6723676618346625;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return 0.23176121265818891;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(C, B) )
%   then if ( tempadvisedby(D, A), tempadvisedby(E, B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.5225238410881432;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   else if ( tempadvisedby(F, A), tempadvisedby(G, B) )
%   | then if ( yearsinprogram(F, H), yearsinprogram(G, H) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.19534771174978452;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.20378216836055577;  // std dev = 6,277, 183,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=93 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.1619689457648016;  // std dev = 6,267, 183,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=93 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.30473132926083785;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return 0.08630327233395475;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.09880446241074396;  // std dev = 6,222, 183,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=93 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.07667353964949053;  // std dev = 6,224, 183,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=93 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.20229224536869672;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return 0.026627470905808904;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.16518287935355727;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return 0.02031722539047009;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
Results
   AUC ROC   = 0.666667
   AUC PR    = 0.747588
   CLL	      = -0.597392
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.333333
   F1        = 0.5


Total learning time: 9.032 seconds
Total inference time: 0.489 seconds
AUC ROC: 0.666667


Best model AUC ROC so far: 0.666667


******************************************
Best model found
******************************************
Total revision time: 15.816
Best validation AUC ROC: 0.666667


Results
   AUC ROC   = 0.65
   AUC PR    = 0.655212
   CLL	      = -0.647062
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.45
   F1        = 0.5625


Total inference time: 0.512 seconds
AUC ROC: 0.65
Dataset: 9, Run: 1, Fold: 2, Type: transfer, Time: 01:12:31
{'Precision': [0.75, 0.5], 'Recall': 0.45, 'Inference time': 0.512, 'F1': 0.5625, 'Mapping results': {'Generating paths time': 4.708783149719238, 'Possible mappings': 7036, 'Finding best mapping': 1.8777387142181396, 'Generating mappings time': 1.2324280738830566, 'Knowledge compiling time': 0.47544217109680176, 'Total time': 8.294399499893188}, 'AUC PR': 0.655212, 'Learning time': 15.816, 'Parameter Learning results': {'Precision': [0.75, 0.5], 'Recall': 0.45, 'Inference time': 0.521, 'F1': 0.5625, 'AUC PR': 0.655212, 'Learning time': 5.756, 'AUC ROC': 0.65, 'CLL': -0.647062}, 'AUC ROC': 0.65, 'CLL': -0.647062}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995116;  // std dev = 2,15e-07, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B), publication(D, G), publication(E, G) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else if ( publication(D, H), hasposition(H, I), hasposition(B, I) )
%   | | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else return 0.8581489350995121;  // std dev = 4,21e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( projectmember(J, B), publication(K, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(L, B), publication(L, M), tempadvisedby(M, N) )
%   | | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else if ( publication(P, B), publication(P, Q), student(Q) )
%   | | | | | then return 0.6581489350995116;  // std dev = 0,400, 35,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | | | | | else return 0.5538011090125557;  // std dev = 0,460, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.14185106490048768;  // std dev = 6,32e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B), publication(D, G), publication(E, G) )
%   | | | then return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else if ( publication(D, H), hasposition(H, I), hasposition(B, I) )
%   | | | | then return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(J, B), publication(J, K), student(K) )
%   | | | then return 0.5816467606105042;  // std dev = 0,374, 41,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | | else if ( projectmember(L, B), publication(M, A) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( projectmember(N, B) )
%   | | | | | then return 0.526641177518283;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.46085170383407226;  // std dev = 0,465, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   else return -0.12544463852839158;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B), publication(D, G), publication(E, G) )
%   | | | then return 0.04434629760466851;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else if ( publication(D, H), hasposition(H, I), hasposition(B, I) )
%   | | | | then return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | | then return 0.12464733064214067;  // std dev = 0,977, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( publication(L, B), tempadvisedby(M, B) )
%   | | | | then return 0.498113981724995;  // std dev = 0,343, 22,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | | else if ( projectmember(N, B), publication(P, A) )
%   | | | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.42354660634184577;  // std dev = 0,419, 38,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=29 */
%   else return -0.11231637819360626;  // std dev = 5,05e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.41751358415831014;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then if ( tempadvisedby(H, E), publication(I, B) )
%   | | | | | then return 0.0884286622369046;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | else return 0.005793710020040153;  // std dev = 0,736, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(J, E), publication(K, J), publication(L, B) )
%   | | | | | then return -0.0036184242311427064;  // std dev = 0,516, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.3583753507277403;  // std dev = 1,038, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(M, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.33130317821263744;  // std dev = 0,400, 61,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=48 */
%   else return -0.1015963294878362;  // std dev = 4,71e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.013550330455384785;  // std dev = 0,976, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.23940171903813784;  // std dev = 0,377, 40,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   | | else if ( publication(F, B), publication(G, A) )
%   | | | then return 0.18440128468400957;  // std dev = 0,379, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else if ( publication(H, B), publication(H, I), student(I) )
%   | | | | then return 0.31732440043160176;  // std dev = 0,328, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | | else if ( publication(J, B) )
%   | | | | | then if ( hasposition(B, K), hasposition(L, K), tempadvisedby(M, L) )
%   | | | | | | then return 0.5076237597593278;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | | else return -0.24237624024067222;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | else return 0.30627026914421224;  // std dev = 0,893, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926105;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.2545389276017345;  // std dev = 0,298, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | | then if ( tempadvisedby(G, F) )
%   | | | | then if ( tempadvisedby(H, B) )
%   | | | | | then return 0.03568880468673453;  // std dev = 1,118, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | | else if ( publication(I, G), publication(J, B) )
%   | | | | | | then return -0.03934869147341844;  // std dev = 0,507, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.36675967924337843;  // std dev = 0,819, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return -0.07427149228144751;  // std dev = 0,459, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(K, B), publication(K, L), student(L) )
%   | | | | then return 0.207223741021061;  // std dev = 0,362, 41,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | | | else return 0.15201771790273422;  // std dev = 0,415, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253545;  // std dev = 4,47e-08, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return -0.04144186250047174;  // std dev = 0,976, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( publication(F, A), publication(G, B) )
%   | | | | then return 0.02963096031027561;  // std dev = 0,915, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else if ( publication(H, B) )
%   | | | | | then return 0.1900738518196299;  // std dev = 0,343, 22,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | | | else if ( projectmember(I, B), inphase(D, J), inphase(A, J) )
%   | | | | | | then return 0.32168509536380224;  // std dev = 0,120, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.051262679798910665;  // std dev = 0,447, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( publication(K, B), publication(K, L), tempadvisedby(M, L) )
%   | | | then return 0.1344543809773409;  // std dev = 0,368, 33,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   | | | else return 0.21679524226104765;  // std dev = 0,902, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0787767547310917;  // std dev = 2,89e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452775;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.16390408197575304;  // std dev = 0,289, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | | then if ( tempadvisedby(G, F) )
%   | | | | then if ( publication(H, G), hasposition(B, I), hasposition(F, I) )
%   | | | | | then return -0.12841843177283538;  // std dev = 0,757, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | else if ( tempadvisedby(J, B) )
%   | | | | | | then return 0.02789349304246059;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | | else return 0.26329909146578717;  // std dev = 0,822, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else return -0.08046282102841389;  // std dev = 0,455, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(K, B), publication(K, L), tempadvisedby(L, M) )
%   | | | | then return 0.2840839870940492;  // std dev = 0,162, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else return 0.0975115172662378;  // std dev = 0,394, 52,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=40 */
%   else return -0.07324622576333704;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.12124620742280555;  // std dev = 0,222, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | else if ( publication(D, B), publication(D, E), tempadvisedby(E, F) )
%   | | then return 0.23103464432899679;  // std dev = 0,146, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, B), publication(G, H), projectmember(I, H) )
%   | | | then return 0.007406288555431795;  // std dev = 0,854, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | | | then return -0.20970736358212874;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( publication(L, B), publication(L, M), student(M) )
%   | | | | | then return 0.13023229502011727;  // std dev = 0,350, 28,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | | | else if ( tempadvisedby(N, B), inphase(N, P), inphase(A, P) )
%   | | | | | | then return -0.03088691440351299;  // std dev = 0,727, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else if ( tempadvisedby(Q, B) )
%   | | | | | | | then return 0.14426628607635542;  // std dev = 0,921, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | | else return 0.03063474128623102;  // std dev = 0,425, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else return -0.06842697784420268;  // std dev = 2,36e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.10292417395044044;  // std dev = 0,222, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | else if ( publication(D, B), publication(D, E), tempadvisedby(E, F) )
%   | | then return 0.1932381245329716;  // std dev = 0,130, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, B), publication(G, H), student(H) )
%   | | | then return 0.07132205003465399;  // std dev = 0,379, 35,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | | | else if ( tempadvisedby(I, B) )
%   | | | | then if ( projectmember(J, B) )
%   | | | | | then return 0.03174846946563281;  // std dev = 0,855, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.09063387452118343;  // std dev = 0,819, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else if ( publication(K, B) )
%   | | | | | then if ( hasposition(B, L), hasposition(M, L), tempadvisedby(N, M) )
%   | | | | | | then return 0.2907499108529301;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | | else return -0.28537696692307624;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | else return 0.06588839790255918;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06419184008202625;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
Results
   AUC ROC   = 0.9825
   AUC PR    = 0.982702
   CLL	      = -0.21659
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total learning time: 10.615 seconds
Total inference time: 0.575 seconds
AUC ROC: 0.9825


Dataset: 9, Run: 1, Fold: 2, Type: scratch, Time: 01:12:42
{'Precision': [0.909091, 0.5], 'Recall': 1.0, 'Inference time': 0.575, 'F1': 0.952381, 'AUC PR': 0.982702, 'Learning time': 10.615, 'AUC ROC': 0.9825, 'CLL': -0.21659}


Best mapping found: ['haswordvenue(A,B) -> publication(B,A)', 'author(A,B) -> inphase(A,B)', 'samevenue(A,B) -> advisedby(A,B)', 'venue(A,B) -> tempadvisedby(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [6.32e-08, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [2e-07, 337, 0], 'true,false': [0.397, 298, 1218]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [0.008, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.397, 298, 1218]}], ['advisedby(A, B)', {'': 'publication(C, A), publication(C, B)', 'true': 'tempadvisedby(D, A), tempadvisedby(E, B)', 'true,true': 'inphase(D, F), inphase(E, F)', 'false,true': 'inphase(G, I), inphase(H, I)', 'false': 'tempadvisedby(G, A), tempadvisedby(H, B)'}, {'false,true,true': [0.498, 80, 94], 'true,true,false': [0.386, 254, 1142], 'true,true,true': [0.363, 300, 1627], 'false,true,false': [0.482, 44, 76], 'true,false': [0.19, 2002, 78], 'false,false': [0.0, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [3.65e-08, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [2.01e-07, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [0.006, 62, 0], 'true,true': [0.381, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [1.13e-07, 337, 0], 'true,false': [0.396, 298, 1218]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [5.58e-08, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [8.16e-08, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [0.01, 58, 0], 'true,true': [0.381, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.396, 298, 1218]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)', 'false,true,false': 'publication(I, B)'}, {'false,true,false,true': [1.97e-08, 54, 0], 'true,true': [0.382, 380, 1721], 'false,true,false,false': [0.195, 1886, 78], 'false,true,true': [0.01, 62, 0], 'true,false': [0.396, 298, 1218], 'false,false': [1.51e-07, 337, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '0;true;inphase(C, E), inphase(D, E).;false;false', '0;false,true;publication(G, A).;false;false', '0;false;publication(F, A), publication(F, B).;true;false', '1;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '1;true;inphase(C, E), inphase(D, E).;false;false', '1;false,true;publication(G, B).;false;false', '1;false;publication(F, A), publication(F, B).;true;false', '2;;advisedby(A, B) :- publication(C, A), publication(C, B).;true;true', '2;true;tempadvisedby(D, A), tempadvisedby(E, B).;true;false', '2;true,true;inphase(D, F), inphase(E, F).;false;false', '2;false,true;inphase(G, I), inphase(H, I).;false;false', '2;false;tempadvisedby(G, A), tempadvisedby(H, B).;true;false', '3;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '3;true;inphase(C, E), inphase(D, E).;false;false', '3;false;publication(F, A), publication(F, B).;false;false', '4;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '4;true;inphase(C, E), inphase(D, E).;false;false', '4;false;publication(F, A), publication(F, B).;false;false', '5;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '5;true;inphase(C, E), inphase(D, E).;false;false', '5;false,true;publication(G, A).;false;false', '5;false;publication(F, A), publication(F, B).;true;false', '6;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '6;true;inphase(C, E), inphase(D, E).;false;false', '6;false;publication(F, A), publication(F, B).;false;false', '7;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '7;true;inphase(C, E), inphase(D, E).;false;false', '7;false;publication(F, A), publication(F, B).;false;false', '8;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '8;true;inphase(C, E), inphase(D, E).;false;false', '8;false,true;publication(G, B).;false;false', '8;false;publication(F, A), publication(F, B).;true;false', '9;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '9;true;inphase(C, E), inphase(D, E).;false;false', '9;false,true;publication(G, A).;false;true', '9;false;publication(F, A), publication(F, B).;true;false', '9;false,true,false;publication(I, B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.6744754657117571;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.27105216090596435;  // std dev = 6,130, 155,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=64 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, B) )
%   | | then return 0.5713385529711246;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.23475554416362;  // std dev = 6,130, 155,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=64 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(C, B) )
%   then if ( tempadvisedby(D, A), tempadvisedby(E, B) )
%   | then if ( inphase(D, F), inphase(E, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.451432754865725;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   else if ( tempadvisedby(G, A), tempadvisedby(H, B) )
%   | then if ( inphase(G, I), inphase(H, I) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.19775915908104985;  // std dev = 6,130, 155,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=64 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.34199225915197295;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | else return 0.16249441209782828;  // std dev = 6,130, 155,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=64 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.2568004182863115;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | else return 0.1307769092966475;  // std dev = 6,130, 155,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=64 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.19479839354852097;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.10355364313086775;  // std dev = 6,130, 155,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=64 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.1501732470963515;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | else return 0.08100411878873254;  // std dev = 6,130, 155,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=64 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.11764840976683372;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | else return 0.06280422138502376;  // std dev = 6,130, 155,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=64 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, B) )
%   | | then return 0.09347319589847985;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.04838337218913048;  // std dev = 6,130, 155,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=64 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.07514230535501709;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.037103862934552714;  // std dev = 6,130, 155,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=64 */
Results
   AUC ROC   = 0.8
   AUC PR    = 0.864768
   CLL	      = -0.518013
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total learning time: 7.097 seconds
Total inference time: 0.572 seconds
AUC ROC: 0.8


Results in test set
   AUC ROC   = 0.8
   AUC PR    = 0.864768
   CLL	      = -0.518013
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total inference time: 0.572 seconds
AUC ROC: 0.8
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 3, 0], 'true,false': [0.0, 1, 0], 'false,false': [6.13, 91, 64], 'false,true,true': [2.711, 9, 40]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 3, 0], 'true,false': [0.0, 1, 0], 'false,false': [6.13, 91, 64], 'false,true,true': [2.711, 9, 40]}], ['advisedby(A, B)', {'': 'publication(C, A), publication(C, B)', 'true': 'tempadvisedby(D, A), tempadvisedby(E, B)', 'true,true': 'inphase(D, F), inphase(E, F)', 'false,true': 'inphase(G, I), inphase(H, I)', 'false': 'tempadvisedby(G, A), tempadvisedby(H, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 1, 0], 'true,false': [2.711, 9, 40], 'false,false': [6.13, 91, 64], 'false,true,true': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 3, 0], 'false,true': [2.711, 9, 40], 'true,false': [0.0, 1, 0], 'false,false': [6.13, 91, 64]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [2.63e-09, 3, 0], 'false,true': [2.711, 9, 40], 'true,false': [0.0, 1, 0], 'false,false': [6.13, 91, 64]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 3, 0], 'true,false': [0.0, 1, 0], 'false,false': [6.13, 91, 64], 'false,true,true': [2.711, 9, 40]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 3, 0], 'false,true': [2.711, 9, 40], 'true,false': [0.0, 1, 0], 'false,false': [6.13, 91, 64]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [1.86e-09, 3, 0], 'false,true': [2.711, 9, 40], 'true,false': [0.0, 1, 0], 'false,false': [6.13, 91, 64]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 3, 0], 'true,false': [0.0, 1, 0], 'false,false': [6.13, 91, 64], 'false,true,true': [2.711, 9, 40]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'inphase(C, E), inphase(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [1.32e-09, 3, 0], 'true,false': [0.0, 1, 0], 'false,false': [6.13, 91, 64], 'false,true,true': [2.711, 9, 40]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '0;true;inphase(C, E), inphase(D, E).;false;false', '0;false;publication(F, A), publication(F, B).;false;false', '1;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '1;true;inphase(C, E), inphase(D, E).;false;false', '1;false;publication(F, A), publication(F, B).;false;false', '2;;advisedby(A, B) :- publication(C, A), publication(C, B).;true;true', '2;true;tempadvisedby(D, A), tempadvisedby(E, B).;false;false', '2;false,true;inphase(G, I), inphase(H, I).;false;false', '2;false;tempadvisedby(G, A), tempadvisedby(H, B).;true;false', '3;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;false', '3;true;inphase(C, E), inphase(D, E).;false;false', '4;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;false', '4;true;inphase(C, E), inphase(D, E).;false;false', '5;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '5;true;inphase(C, E), inphase(D, E).;false;false', '5;false;publication(F, A), publication(F, B).;false;false', '6;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;false', '6;true;inphase(C, E), inphase(D, E).;false;false', '7;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;false', '7;true;inphase(C, E), inphase(D, E).;false;false', '8;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '8;true;inphase(C, E), inphase(D, E).;false;false', '8;false;publication(F, A), publication(F, B).;false;false', '9;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '9;true;inphase(C, E), inphase(D, E).;false;false', '9;false;publication(F, A), publication(F, B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,false', 0), ('false,false', 0.5870967741935483), ('false,true,true', 0.8163265306122449)]
Tree #2: [('false,true,false', 0), ('false,false', 0.5870967741935483), ('false,true,true', 0.8163265306122449)]
Tree #3: [('true,true,false', 0), ('false,false', 0.5870967741935483), ('true,false', 0.8163265306122449)]
Tree #4: [('false,false', 0.5870967741935483), ('false,true', 0.8163265306122449)]
Tree #5: [('false,false', 0.5870967741935483), ('false,true', 0.8163265306122449)]
Tree #6: [('false,true,false', 0), ('false,false', 0.5870967741935483), ('false,true,true', 0.8163265306122449)]
Tree #7: [('false,false', 0.5870967741935483), ('false,true', 0.8163265306122449)]
Tree #8: [('false,false', 0.5870967741935483), ('false,true', 0.8163265306122449)]
Tree #9: [('false,true,false', 0), ('false,false', 0.5870967741935483), ('false,true,true', 0.8163265306122449)]
Tree #10: [('false,true,false', 0), ('false,false', 0.5870967741935483), ('false,true,true', 0.8163265306122449)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.6744754657117571;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | else return 0.27105216090596435;  // std dev = 6,130, 155,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=64 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.5713385529711246;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | else return 0.23475554416362;  // std dev = 6,130, 155,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=64 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(C, B) )
%   then if ( tempadvisedby(D, A), tempadvisedby(E, B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.451432754865725;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   else if ( tempadvisedby(F, A), tempadvisedby(G, B) )
%   | then if ( inphase(F, H), inphase(G, H) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.19775915908104985;  // std dev = 6,130, 155,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=64 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.2056090910471083;  // std dev = 6,791, 204,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=104 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.16247772484277692;  // std dev = 6,781, 204,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=104 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.25037957933569693;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | else return 0.08734550483813963;  // std dev = 6,130, 155,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=64 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.09725858561879093;  // std dev = 6,744, 204,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=104 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.07491906764076785;  // std dev = 6,744, 204,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=104 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.1508289651287752;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | else return 0.028008402597558796;  // std dev = 6,130, 155,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=64 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( inphase(C, E), inphase(D, E) )
%   | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.11813101071696251;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | else return 0.021356380242564414;  // std dev = 6,130, 155,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=64 */
Results
   AUC ROC   = 0.8
   AUC PR    = 0.864768
   CLL	      = -0.535083
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total learning time: 8.463 seconds
Total inference time: 0.551 seconds
AUC ROC: 0.8


Best model AUC ROC so far: 0.8


******************************************
Best model found
******************************************
Total revision time: 16.683
Best validation AUC ROC: 0.8


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.734288
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.111111
   F1        = 0.181818


Total inference time: 0.431 seconds
AUC ROC: 0.5
Dataset: 9, Run: 1, Fold: 3, Type: transfer, Time: 01:13:09
{'Precision': [0.5, 0.5], 'Recall': 0.111111, 'Inference time': 0.431, 'F1': 0.181818, 'Mapping results': {'Generating paths time': 4.772384405136108, 'Possible mappings': 7036, 'Finding best mapping': 1.870187759399414, 'Generating mappings time': 1.2150459289550781, 'Knowledge compiling time': 0.48636412620544434, 'Total time': 8.343989372253418}, 'AUC PR': 0.5, 'Learning time': 16.683, 'Parameter Learning results': {'Precision': [0.5, 0.5], 'Recall': 0.111111, 'Inference time': 0.442, 'F1': 0.181818, 'AUC PR': 0.5, 'Learning time': 7.097, 'AUC ROC': 0.5, 'CLL': -0.734288}, 'AUC ROC': 0.5, 'CLL': -0.734288}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), inphase(C, D), inphase(A, D) )
%   | then if ( projectmember(E, B) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, C) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then return 0.7883814932390467;  // std dev = 0,255, 43,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then if ( publication(I, A), publication(I, J), professor(J) )
%   | | | | then if ( projectmember(K, B) )
%   | | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.058148935099512175;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | | else return 0.6968586125188666;  // std dev = 0,368, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.6763307532813297;  // std dev = 0,386, 33,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   else return -0.14185106490048766;  // std dev = 6,66e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.639539087528334;  // std dev = 0,304, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( publication(D, B), publication(D, A) )
%   | | then return 0.6635693322748699;  // std dev = 0,255, 43,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | | then if ( tempadvisedby(G, B) )
%   | | | | then if ( tempadvisedby(H, F) )
%   | | | | | then return 0.13663631822783998;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | | | else return -0.1490779674864458;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else if ( hasposition(B, I), hasposition(F, I) )
%   | | | | | then return 0.08800202291047272;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | | else return 0.7546686895771394;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(J, B), inphase(J, K), inphase(A, K) )
%   | | | | then return 0.3079443863933019;  // std dev = 0,495, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | | else return 0.6179961420298027;  // std dev = 0,342, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   else return -0.12544463852839155;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.5031036920200526;  // std dev = 0,302, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B), publication(E, A) )
%   | | | then return 0.5516616703905524;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else if ( publication(F, A), publication(F, G), professor(G) )
%   | | | | then return 0.04358059616623641;  // std dev = 0,395, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | | else if ( publication(H, A) )
%   | | | | | then return 0.6189621112435794;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(I, B), publication(I, D) )
%   | | | | | | then return 0.6893667250382665;  // std dev = 0,086, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else if ( publication(J, B), publication(J, K), student(K) )
%   | | | | | | | then return 0.35761898154186494;  // std dev = 0,439, 24,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | | | | | | else return 0.3115520265130302;  // std dev = 1,071, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.45486705562303964;  // std dev = 0,357, 47,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   else return -0.11231637819360628;  // std dev = 5,05e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B), tempadvisedby(D, B) )
%   | then return 0.4147892533746205;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | then if ( publication(E, B), tempadvisedby(G, F) )
%   | | | then return 0.47332089241058567;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(E, B) )
%   | | | | then return 0.22332089241058567;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | | else if ( publication(H, B), tempadvisedby(I, F), publication(J, I) )
%   | | | | | then return -0.1542222428378345;  // std dev = 0,725, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else if ( tempadvisedby(K, B) )
%   | | | | | | then if ( tempadvisedby(L, F), publication(E, L) )
%   | | | | | | | then return 0.5053813369707607;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.008405972390017441;  // std dev = 0,419, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | | | | else return 0.376169524625405;  // std dev = 0,838, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.36416938653145015;  // std dev = 0,354, 65,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=54 */
%   else return -0.10159632948783621;  // std dev = 4,71e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2942619738608055;  // std dev = 0,247, 43,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B), tempadvisedby(G, E), publication(H, G) )
%   | | | then return -0.12152081206270124;  // std dev = 0,729, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else if ( tempadvisedby(I, B), publication(D, J), tempadvisedby(J, E) )
%   | | | | then return 0.3820516849789859;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then if ( tempadvisedby(L, E), publication(M, E), publication(M, B) )
%   | | | | | | then return 0.1587128254478327;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else if ( tempadvisedby(N, E) )
%   | | | | | | | then return 0.0017831493499955511;  // std dev = 0,981, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | | | else return -0.1371764135261643;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0.2851891086609622;  // std dev = 0,837, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2747021297484552;  // std dev = 0,353, 65,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=54 */
%   else return -0.09269127618926107;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), inphase(C, D), inphase(A, D) )
%   | then if ( projectmember(E, B) )
%   | | then return 0.28505471728064347;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, C) )
%   | | | then return 0.10470792943471618;  // std dev = 0,750, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03865856155199361;  // std dev = 1,091, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | then return 0.17147531310649544;  // std dev = 0,315, 65,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=49 */
%   | | else if ( publication(I, B), publication(I, J), tempadvisedby(J, K) )
%   | | | then return 0.35450430602178784;  // std dev = 0,061, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else if ( publication(L, B) )
%   | | | | then if ( tempadvisedby(M, B), publication(L, N), inphase(N, P) )
%   | | | | | then return 0.13611466833548563;  // std dev = 0,422, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | | | else return 0.22579604264692946;  // std dev = 0,333, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | | else return 0.36234411056433924;  // std dev = 0,043, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.0851847513883968;  // std dev = 1,49e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A), publication(D, B) )
%   | then return 0.21824078329311183;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return -5.622555575562627E-4;  // std dev = 0,357, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | then if ( publication(G, B), tempadvisedby(I, H) )
%   | | | | then return 0.2600177963691373;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else if ( publication(J, B), tempadvisedby(K, H), publication(L, K) )
%   | | | | | then return -0.14649608544291623;  // std dev = 1,017, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | | else if ( tempadvisedby(M, B), publication(G, N), tempadvisedby(N, H) )
%   | | | | | | then return 0.25647177933530646;  // std dev = 0,067, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else if ( tempadvisedby(P, B) )
%   | | | | | | | then return 6.684588480880271E-4;  // std dev = 0,433, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | | | | | else return 0.15889678400472793;  // std dev = 0,374, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.17357822126569125;  // std dev = 0,341, 59,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=50 */
%   else return -0.07877675473109172;  // std dev = 2,89e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A), publication(D, B) )
%   | then return 0.1792820110566628;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( tempadvisedby(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.14291272603942995;  // std dev = 0,233, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else if ( publication(G, B), publication(G, H), student(H) )
%   | | | | then if ( publication(I, E) )
%   | | | | | then return -4.4410604626610867E-4;  // std dev = 0,357, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | | | else if ( publication(J, A) )
%   | | | | | | then return 0.2947228051486252;  // std dev = 0,648, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else if ( inphase(A, K), inphase(E, K) )
%   | | | | | | | then return 0.19226838751461375;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | | else return 0.07736241651861307;  // std dev = 0,413, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | | else return 0.023066719284598573;  // std dev = 0,373, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.13306452493358037;  // std dev = 0,321, 47,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   else return -0.07324622576333704;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A), publication(D, B) )
%   | then return 0.150693782188286;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( tempadvisedby(E, B) )
%   | | then if ( publication(F, E), publication(F, G), tempadvisedby(H, G) )
%   | | | then return 0.23775551091650143;  // std dev = 0,461, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else if ( projectmember(I, B) )
%   | | | | then return 0.11777350156750227;  // std dev = 0,237, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | else if ( publication(J, E) )
%   | | | | | then return -0.3971946032841018;  // std dev = 0,220, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else if ( publication(K, A), publication(K, L), tempadvisedby(M, L) )
%   | | | | | | then return 0.17408804364839314;  // std dev = 1,064, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | | else if ( publication(N, B) )
%   | | | | | | | then return 0.06777727577543614;  // std dev = 0,405, 28,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | | | | | | else return -0.045730983187494925;  // std dev = 0,625, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.10747497015532072;  // std dev = 0,321, 47,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   else return -0.0684269778442027;  // std dev = 2,47e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), tempadvisedby(D, E) )
%   | then return 0.1293588011618601;  // std dev = 0,267, 25,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | else if ( tempadvisedby(F, B), publication(G, A), publication(G, B) )
%   | | then return 0.16350792137388612;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | then if ( publication(J, B), tempadvisedby(K, I), publication(L, K) )
%   | | | | then return -0.32049420327897404;  // std dev = 0,633, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else if ( tempadvisedby(M, B), publication(H, N), tempadvisedby(N, I) )
%   | | | | | then return 0.17106494503739636;  // std dev = 0,049, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(P, B), publication(P, Q), student(Q) )
%   | | | | | | then if ( tempadvisedby(R, I) )
%   | | | | | | | then return 0.11974954951654014;  // std dev = 1,049, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | | | else return 0.051709059101038;  // std dev = 0,339, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | | | | else return -0.07639543097666798;  // std dev = 0,377, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.08426086602682564;  // std dev = 0,355, 54,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=44 */
%   else return -0.06419184008202625;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
Results
   AUC ROC   = 0.975309
   AUC PR    = 0.974691
   CLL	      = -0.243008
   Precision = 0.9 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.947368


Total learning time: 64.027 seconds
Total inference time: 0.531 seconds
AUC ROC: 0.975309


Dataset: 9, Run: 1, Fold: 3, Type: scratch, Time: 01:14:14
{'Precision': [0.9, 0.5], 'Recall': 1.0, 'Inference time': 0.531, 'F1': 0.947368, 'AUC PR': 0.974691, 'Learning time': 64.027, 'AUC ROC': 0.975309, 'CLL': -0.243008}


Best mapping found: ['haswordvenue(A,B) -> publication(B,A)', 'author(A,B) -> yearsinprogram(A,B)', 'samevenue(A,B) -> advisedby(A,B)', 'venue(A,B) -> tempadvisedby(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [6.32e-08, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [2e-07, 337, 0], 'true,false': [0.397, 298, 1218]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [0.008, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.397, 298, 1218]}], ['advisedby(A, B)', {'': 'publication(C, A), publication(C, B)', 'true': 'tempadvisedby(D, A), tempadvisedby(E, B)', 'true,true': 'yearsinprogram(D, F), yearsinprogram(E, F)', 'false,true': 'yearsinprogram(G, I), yearsinprogram(H, I)', 'false': 'tempadvisedby(G, A), tempadvisedby(H, B)'}, {'false,true,true': [0.498, 80, 94], 'true,true,false': [0.386, 254, 1142], 'true,true,true': [0.363, 300, 1627], 'false,true,false': [0.482, 44, 76], 'true,false': [0.19, 2002, 78], 'false,false': [0.0, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [3.65e-08, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [2.01e-07, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [0.006, 62, 0], 'true,true': [0.381, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [1.13e-07, 337, 0], 'true,false': [0.396, 298, 1218]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [5.58e-08, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [8.16e-08, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [0.01, 58, 0], 'true,true': [0.381, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.396, 298, 1218]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)', 'false,true,false': 'publication(I, B)'}, {'false,true,false,true': [1.97e-08, 54, 0], 'true,true': [0.382, 380, 1721], 'false,true,false,false': [0.195, 1886, 78], 'false,true,true': [0.01, 62, 0], 'true,false': [0.396, 298, 1218], 'false,false': [1.51e-07, 337, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '0;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '0;false,true;publication(G, A).;false;false', '0;false;publication(F, A), publication(F, B).;true;false', '1;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '1;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '1;false,true;publication(G, B).;false;false', '1;false;publication(F, A), publication(F, B).;true;false', '2;;advisedby(A, B) :- publication(C, A), publication(C, B).;true;true', '2;true;tempadvisedby(D, A), tempadvisedby(E, B).;true;false', '2;true,true;yearsinprogram(D, F), yearsinprogram(E, F).;false;false', '2;false,true;yearsinprogram(G, I), yearsinprogram(H, I).;false;false', '2;false;tempadvisedby(G, A), tempadvisedby(H, B).;true;false', '3;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '3;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '3;false;publication(F, A), publication(F, B).;false;false', '4;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '4;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '4;false;publication(F, A), publication(F, B).;false;false', '5;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '5;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '5;false,true;publication(G, A).;false;false', '5;false;publication(F, A), publication(F, B).;true;false', '6;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '6;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '6;false;publication(F, A), publication(F, B).;false;false', '7;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '7;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '7;false;publication(F, A), publication(F, B).;false;false', '8;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '8;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '8;false,true;publication(G, B).;false;false', '8;false;publication(F, A), publication(F, B).;true;false', '9;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '9;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '9;false,true;publication(G, A).;false;true', '9;false;publication(F, A), publication(F, B).;true;false', '9;false,true,false;publication(I, B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.7331489350995116;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2741489350995123;  // std dev = 5,511, 125,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, B) )
%   | | then return 0.6189976143448207;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.23739846429153444;  // std dev = 5,511, 125,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(C, B) )
%   then if ( tempadvisedby(D, A), tempadvisedby(E, B) )
%   | then if ( yearsinprogram(D, F), yearsinprogram(E, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.4851287515461651;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   else if ( tempadvisedby(G, A), tempadvisedby(H, B) )
%   | then if ( yearsinprogram(G, I), yearsinprogram(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.1998851606176225;  // std dev = 5,511, 125,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.3656822536044495;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | else return 0.16411186524200239;  // std dev = 5,511, 125,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.2756019634733141;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | else return 0.13194908925322585;  // std dev = 5,511, 125,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.21158287903019796;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.10436926808201745;  // std dev = 5,511, 125,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.16608044254560728;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | else return 0.08155241345917807;  // std dev = 5,511, 125,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.13303193637503516;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | else return 0.06316135663770028;  // std dev = 5,511, 125,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, B) )
%   | | then return 0.10839224498101026;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.048608438849621925;  // std dev = 5,511, 125,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.08956128580326381;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.037240067503361486;  // std dev = 5,511, 125,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
Results
   AUC ROC   = 0.625
   AUC PR    = 0.639825
   CLL	      = -0.653163
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.375
   F1        = 0.5


Total learning time: 4.29 seconds
Total inference time: 0.558 seconds
AUC ROC: 0.625


Results in test set
   AUC ROC   = 0.625
   AUC PR    = 0.639825
   CLL	      = -0.653163
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.375
   F1        = 0.5


Total inference time: 0.558 seconds
AUC ROC: 0.625
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 1, 0], 'false,false': [5.511, 73, 52], 'false,true,true': [1.871, 4, 28]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 1, 0], 'false,false': [5.511, 73, 52], 'false,true,true': [1.871, 4, 28]}], ['advisedby(A, B)', {'': 'publication(C, A), publication(C, B)', 'true': 'tempadvisedby(D, A), tempadvisedby(E, B)', 'true,true': 'yearsinprogram(D, F), yearsinprogram(E, F)', 'false,true': 'yearsinprogram(G, I), yearsinprogram(H, I)', 'false': 'tempadvisedby(G, A), tempadvisedby(H, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 1, 0], 'true,false': [1.871, 4, 28], 'false,false': [5.511, 73, 52], 'false,true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 2, 0], 'false,true': [1.871, 4, 28], 'true,false': [0.0, 1, 0], 'false,false': [5.511, 73, 52]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 2, 0], 'false,true': [1.871, 4, 28], 'true,false': [0.0, 1, 0], 'false,false': [5.511, 73, 52]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 1, 0], 'false,false': [5.511, 73, 52], 'false,true,true': [1.871, 4, 28]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 2, 0], 'false,true': [1.871, 4, 28], 'true,false': [0.0, 1, 0], 'false,false': [5.511, 73, 52]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 2, 0], 'false,true': [1.871, 4, 28], 'true,false': [0.0, 1, 0], 'false,false': [5.511, 73, 52]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 1, 0], 'false,false': [5.511, 73, 52], 'false,true,true': [1.871, 4, 28]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 1, 0], 'false,false': [5.511, 73, 52], 'false,true,true': [1.871, 4, 28]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '0;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '0;false;publication(F, A), publication(F, B).;false;false', '1;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '1;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '1;false;publication(F, A), publication(F, B).;false;false', '2;;advisedby(A, B) :- publication(C, A), publication(C, B).;true;true', '2;true;tempadvisedby(D, A), tempadvisedby(E, B).;true;false', '2;true,true;yearsinprogram(D, F), yearsinprogram(E, F).;false;false', '2;false;tempadvisedby(G, A), tempadvisedby(H, B).;false;false', '3;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;false', '3;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '4;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;false', '4;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '5;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '5;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '5;false;publication(F, A), publication(F, B).;false;false', '6;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;false', '6;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '7;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;false', '7;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '8;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '8;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '8;false;publication(F, A), publication(F, B).;false;false', '9;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '9;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '9;false;publication(F, A), publication(F, B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,false', 0), ('false,false', 0.584), ('false,true,true', 0.875)]
Tree #2: [('false,true,false', 0), ('false,false', 0.584), ('false,true,true', 0.875)]
Tree #3: [('false,true,true', 0), ('true,true,false', 0), ('false,false', 0.584), ('true,false', 0.875)]
Tree #4: [('false,false', 0.584), ('false,true', 0.875)]
Tree #5: [('false,false', 0.584), ('false,true', 0.875)]
Tree #6: [('false,true,false', 0), ('false,false', 0.584), ('false,true,true', 0.875)]
Tree #7: [('false,false', 0.584), ('false,true', 0.875)]
Tree #8: [('false,false', 0.584), ('false,true', 0.875)]
Tree #9: [('false,true,false', 0), ('false,false', 0.584), ('false,true,true', 0.875)]
Tree #10: [('false,true,false', 0), ('false,false', 0.584), ('false,true,true', 0.875)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.7331489350995116;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | else return 0.2741489350995123;  // std dev = 5,511, 125,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.6189976143448207;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | else return 0.23739846429153444;  // std dev = 5,511, 125,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(C, B) )
%   then if ( tempadvisedby(D, A), tempadvisedby(E, B) )
%   | then if ( yearsinprogram(D, F), yearsinprogram(E, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.4851287515461651;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   else if ( tempadvisedby(G, A), tempadvisedby(H, B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.1998851606176225;  // std dev = 5,511, 125,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.20519627560887047;  // std dev = 5,908, 157,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=80 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.16248226581928615;  // std dev = 5,899, 157,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=80 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.2751227100365524;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | else return 0.08880272855065363;  // std dev = 5,511, 125,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.09796247124312023;  // std dev = 5,864, 157,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=80 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.07565167949378647;  // std dev = 5,864, 157,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=80 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.1736592218540433;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | else return 0.02865163410528701;  // std dev = 5,511, 125,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.1385981989433496;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | else return 0.021830777253413956;  // std dev = 5,511, 125,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
Results
   AUC ROC   = 0.625
   AUC PR    = 0.639825
   CLL	      = -0.650548
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.375
   F1        = 0.5


Total learning time: 63.339 seconds
Total inference time: 0.525 seconds
AUC ROC: 0.625


Best model AUC ROC so far: 0.625


******************************************
Best model found
******************************************
Total revision time: 68.712
Best validation AUC ROC: 0.625


Results
   AUC ROC   = 0.636364
   AUC PR    = 0.650431
   CLL	      = -0.644177
   Precision = 0.764706 at threshold = 0.5
   Recall    = 0.393939
   F1        = 0.52


Total inference time: 0.593 seconds
AUC ROC: 0.636364
Dataset: 9, Run: 1, Fold: 4, Type: transfer, Time: 01:15:33
{'Precision': [0.764706, 0.5], 'Recall': 0.393939, 'Inference time': 0.593, 'F1': 0.52, 'Mapping results': {'Generating paths time': 4.629822015762329, 'Possible mappings': 7036, 'Finding best mapping': 1.889418125152588, 'Generating mappings time': 1.2426435947418213, 'Knowledge compiling time': 0.49097681045532227, 'Total time': 8.252867937088013}, 'AUC PR': 0.650431, 'Learning time': 68.712, 'Parameter Learning results': {'Precision': [0.764706, 0.5], 'Recall': 0.393939, 'Inference time': 0.559, 'F1': 0.52, 'AUC PR': 0.650431, 'Learning time': 4.29, 'AUC ROC': 0.636364, 'CLL': -0.644177}, 'AUC ROC': 0.636364, 'CLL': -0.644177}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8236661764788221;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( publication(D, A), publication(D, E), tempadvisedby(F, E) )
%   | | then if ( projectmember(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else if ( tempadvisedby(K, B) )
%   | | | | then return 0.7840748610254378;  // std dev = 0,262, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | | else if ( publication(L, A) )
%   | | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.6081489350995123;  // std dev = 0,433, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   else return -0.14185106490048768;  // std dev = 5,58e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.691897402794752;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( publication(D, A), publication(D, E), tempadvisedby(F, E) )
%   | | then if ( projectmember(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(I, B), yearsinprogram(I, J), yearsinprogram(A, J) )
%   | | | then if ( inphase(A, K), inphase(I, K) )
%   | | | | then return 0.3938285298932624;  // std dev = 1,070, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return 0.0923657828110596;  // std dev = 0,788, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( tempadvisedby(L, B) )
%   | | | | then return 0.697160627502246;  // std dev = 0,197, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | | else return 0.5508055372324273;  // std dev = 0,402, 24,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   else return -0.12544463852839155;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), tempadvisedby(E, D) )
%   | then if ( tempadvisedby(F, B) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.5251789888729396;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.37712652450156425;  // std dev = 0,373, 32,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=23 */
%   | | else return 0.578213251288302;  // std dev = 0,200, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( projectmember(G, B) )
%   | | then return 0.5671947806999035;  // std dev = 0,029, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.0018920700912711992;  // std dev = 0,850, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | | then return 0.09302566037276873;  // std dev = 0,750, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( hasposition(B, K), hasposition(L, K), tempadvisedby(M, L) )
%   | | | | | then return 0.5848602042492895;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.2549897653089287;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.1123163781936063;  // std dev = 3,80e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), tempadvisedby(E, D) )
%   | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( publication(C, A) )
%   | | | then if ( publication(G, A) )
%   | | | | then return 0.19010336460848146;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.4401033646084814;  // std dev = 1,49e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.115360150907823;  // std dev = 0,457, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.3986353115264281;  // std dev = 0,243, 60,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=54 */
%   | else if ( publication(H, A), hasposition(B, I) )
%   | | then if ( tempadvisedby(J, B) )
%   | | | then return 0.2804971164825096;  // std dev = 0,465, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6075486172814489;  // std dev = 0,191, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return 0.4364722792726122;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.004819898936524493;  // std dev = 0,466, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else return -0.10159632948783624;  // std dev = 3,49e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.31280191801506246;  // std dev = 0,175, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(D, F), professor(F) )
%   | | | then return 0.009016151428075221;  // std dev = 0,264, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3244799240361655;  // std dev = 0,242, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( projectmember(G, B), publication(H, B) )
%   | | | then return 0.05436504987306693;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( tempadvisedby(I, B) )
%   | | | | then if ( publication(J, I) )
%   | | | | | then return 0.13440467154134259;  // std dev = 1,171, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | | else return 0.3468723273716393;  // std dev = 0,182, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | | else if ( publication(K, B), publication(K, L), tempadvisedby(M, L) )
%   | | | | | then return 0.3399062519448417;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | | | else return 0.04196708228750249;  // std dev = 0,481, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.09269127618926105;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(D, A) )
%   | | then return 0.0722069748144748;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(E, A), publication(E, B) )
%   | | | then return 0.270192161238878;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( inphase(A, F), inphase(C, F) )
%   | | | | then return 0.15961118169628297;  // std dev = 0,902, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return -0.06455079021564876;  // std dev = 0,729, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(G, B), publication(G, H), tempadvisedby(I, H) )
%   | | then return 0.23616174722436328;  // std dev = 0,229, 60,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=54 */
%   | | else if ( publication(J, B) )
%   | | | then return -0.07816736259105043;  // std dev = 0,675, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( projectmember(K, B) )
%   | | | | then return 0.30463471767660116;  // std dev = 0,103, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else return 0.14469158625033562;  // std dev = 0,396, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.0851847513883968;  // std dev = 1,97e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), yearsinprogram(C, D), yearsinprogram(A, D) )
%   | then if ( inphase(A, E), inphase(C, E) )
%   | | then return 0.1275689492376369;  // std dev = 0,998, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.17567630263980671;  // std dev = 0,727, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(F, B), projectmember(G, B) )
%   | | then return -0.011972311854088277;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | | then return 0.1428840884896402;  // std dev = 0,231, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | | | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | | | then return 0.28009844430160474;  // std dev = 0,071, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | | else if ( publication(L, A), hasposition(B, M) )
%   | | | | | then return 0.2630660879401752;  // std dev = 0,083, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | | | else if ( tempadvisedby(N, B) )
%   | | | | | | then return 0.2178689781656095;  // std dev = 0,027, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | else return 0.1130922942777498;  // std dev = 0,375, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.07877675473109176;  // std dev = 1,29e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B), projectmember(E, B) )
%   | then return -0.00935572803538561;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(F, B), publication(F, A) )
%   | | then return 0.17478823508030422;  // std dev = 0,172, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else if ( publication(G, A), tempadvisedby(H, B), publication(I, B) )
%   | | | then return -0.10137914855819948;  // std dev = 0,592, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else if ( tempadvisedby(J, B), yearsinprogram(J, K), yearsinprogram(A, K) )
%   | | | | then if ( inphase(A, L), inphase(J, L) )
%   | | | | | then return 0.09706905557672033;  // std dev = 0,998, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return -0.13512337050531134;  // std dev = 0,728, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(M, B), publication(N, B) )
%   | | | | | then return 0.22844906548350138;  // std dev = 0,066, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | | | else if ( projectmember(P, B), publication(Q, A) )
%   | | | | | | then return 0.2531562318725934;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.1250223330236136;  // std dev = 0,315, 33,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then return 0.1474578288470786;  // std dev = 0,172, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( tempadvisedby(E, B), publication(F, A) )
%   | | then return -0.008639134537683325;  // std dev = 0,238, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( projectmember(G, B), publication(H, B) )
%   | | | then return -0.007303307822227175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( tempadvisedby(I, B) )
%   | | | | then return 0.1341302849655943;  // std dev = 0,256, 28,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.23569575564375325;  // std dev = 0,224, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | | else if ( publication(K, B), publication(K, L), tempadvisedby(M, L) )
%   | | | | | | then if ( publication(K, M) )
%   | | | | | | | then return 0.04049170202480319;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | | else return 0.2404917020248032;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | | | else return -0.13606588418430557;  // std dev = 1,093, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.0663311480452222;  // std dev = 0,087, 65,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), yearsinprogram(C, D), yearsinprogram(A, D) )
%   | then if ( inphase(A, E), inphase(C, E) )
%   | | then return 0.04187944228442438;  // std dev = 1,000, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.1348944233327878;  // std dev = 0,728, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(F, A), publication(F, G), tempadvisedby(H, G) )
%   | | then return 0.07914302153455662;  // std dev = 0,222, 39,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=32 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.15278426068817924;  // std dev = 0,181, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else if ( publication(J, A) )
%   | | | | then return 0.1411855424971042;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( publication(K, B), publication(K, L), tempadvisedby(M, L) )
%   | | | | | then if ( publication(K, M) )
%   | | | | | | then return 0.0331735705351361;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | else return 0.1993315593977436;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | | else return -0.015505885947561573;  // std dev = 0,466, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.06431785424577642;  // std dev = 2,58e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
Results
   AUC ROC   = 0.890266
   AUC PR    = 0.835642
   CLL	      = -0.346632
   Precision = 0.815789 at threshold = 0.5
   Recall    = 0.939394
   F1        = 0.873239


Total learning time: 17.347 seconds
Total inference time: 0.724 seconds
AUC ROC: 0.890266


Dataset: 9, Run: 1, Fold: 4, Type: scratch, Time: 01:15:51
{'Precision': [0.815789, 0.5], 'Recall': 0.939394, 'Inference time': 0.724, 'F1': 0.873239, 'AUC PR': 0.835642, 'Learning time': 17.347, 'AUC ROC': 0.890266, 'CLL': -0.346632}


Best mapping found: ['haswordvenue(A,B) -> publication(B,A)', 'author(A,B) -> yearsinprogram(A,B)', 'samevenue(A,B) -> advisedby(A,B)', 'venue(A,B) -> tempadvisedby(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [6.32e-08, 62, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [2e-07, 337, 0], 'true,false': [0.397, 298, 1218]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [0.008, 58, 0], 'true,true': [0.385, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.397, 298, 1218]}], ['advisedby(A, B)', {'': 'publication(C, A), publication(C, B)', 'true': 'tempadvisedby(D, A), tempadvisedby(E, B)', 'true,true': 'yearsinprogram(D, F), yearsinprogram(E, F)', 'false,true': 'yearsinprogram(G, I), yearsinprogram(H, I)', 'false': 'tempadvisedby(G, A), tempadvisedby(H, B)'}, {'false,true,true': [0.498, 80, 94], 'true,true,false': [0.386, 254, 1142], 'true,true,true': [0.363, 300, 1627], 'false,true,false': [0.482, 44, 76], 'true,false': [0.19, 2002, 78], 'false,false': [0.0, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [3.65e-08, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [2.01e-07, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [0.006, 62, 0], 'true,true': [0.381, 380, 1721], 'false,true,false': [0.193, 1940, 78], 'false,false': [1.13e-07, 337, 0], 'true,false': [0.396, 298, 1218]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [5.58e-08, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.381, 380, 1721], 'false,true': [0.19, 2002, 78], 'true,false': [0.396, 298, 1218], 'false,false': [8.16e-08, 337, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,true': [0.01, 58, 0], 'true,true': [0.381, 380, 1721], 'false,true,false': [0.193, 1944, 78], 'false,false': [0.0, 337, 0], 'true,false': [0.396, 298, 1218]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)', 'false,true,false': 'publication(I, B)'}, {'false,true,false,true': [1.97e-08, 54, 0], 'true,true': [0.382, 380, 1721], 'false,true,false,false': [0.195, 1886, 78], 'false,true,true': [0.01, 62, 0], 'true,false': [0.396, 298, 1218], 'false,false': [1.51e-07, 337, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '0;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '0;false,true;publication(G, A).;false;false', '0;false;publication(F, A), publication(F, B).;true;false', '1;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '1;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '1;false,true;publication(G, B).;false;false', '1;false;publication(F, A), publication(F, B).;true;false', '2;;advisedby(A, B) :- publication(C, A), publication(C, B).;true;true', '2;true;tempadvisedby(D, A), tempadvisedby(E, B).;true;false', '2;true,true;yearsinprogram(D, F), yearsinprogram(E, F).;false;false', '2;false,true;yearsinprogram(G, I), yearsinprogram(H, I).;false;false', '2;false;tempadvisedby(G, A), tempadvisedby(H, B).;true;false', '3;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '3;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '3;false;publication(F, A), publication(F, B).;false;false', '4;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '4;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '4;false;publication(F, A), publication(F, B).;false;false', '5;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '5;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '5;false,true;publication(G, A).;false;false', '5;false;publication(F, A), publication(F, B).;true;false', '6;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '6;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '6;false;publication(F, A), publication(F, B).;false;false', '7;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '7;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '7;false;publication(F, A), publication(F, B).;false;false', '8;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '8;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '8;false,true;publication(G, B).;false;false', '8;false;publication(F, A), publication(F, B).;true;false', '9;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '9;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '9;false,true;publication(G, A).;false;true', '9;false;publication(F, A), publication(F, B).;true;false', '9;false,true,false;publication(I, B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.6624967611864678;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2777293546799321;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, B) )
%   | | then return 0.5615687618565198;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.24045302091054982;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(C, B) )
%   then if ( tempadvisedby(D, A), tempadvisedby(E, B) )
%   | then if ( yearsinprogram(D, F), yearsinprogram(E, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.44447922009716;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   else if ( tempadvisedby(G, A), tempadvisedby(H, B) )
%   | then if ( yearsinprogram(G, I), yearsinprogram(H, I) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.2023394370451322;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.3371643967199401;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | else return 0.16597564202045892;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.2531011278068465;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | else return 0.1332967764025773;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.19161592544732778;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.10530487974217144;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.14724132819699717;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | else return 0.0821800997637514;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.11487250572532787;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | else return 0.06356959691244758;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, B) )
%   | | then return 0.09082817657349083;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.04886553893097271;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.0726275340392219;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.03739574501656042;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
Results
   AUC ROC   = 0.666667
   AUC PR    = 0.684721
   CLL	      = -0.622537
   Precision = 0.8 at threshold = 0.5
   Recall    = 0.444444
   F1        = 0.571429


Total learning time: 6.586 seconds
Total inference time: 0.552 seconds
AUC ROC: 0.666667


Results in test set
   AUC ROC   = 0.666667
   AUC PR    = 0.684721
   CLL	      = -0.622537
   Precision = 0.8 at threshold = 0.5
   Recall    = 0.444444
   F1        = 0.571429


Total inference time: 0.552 seconds
AUC ROC: 0.666667
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 4, 0], 'true,false': [0.0, 1, 0], 'false,false': [5.901, 83, 60], 'false,true,true': [2.691, 9, 37]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 4, 0], 'true,false': [0.0, 1, 0], 'false,false': [5.901, 83, 60], 'false,true,true': [2.691, 9, 37]}], ['advisedby(A, B)', {'': 'publication(C, A), publication(C, B)', 'true': 'tempadvisedby(D, A), tempadvisedby(E, B)', 'true,true': 'yearsinprogram(D, F), yearsinprogram(E, F)', 'false,true': 'yearsinprogram(G, I), yearsinprogram(H, I)', 'false': 'tempadvisedby(G, A), tempadvisedby(H, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 1, 0], 'true,false': [2.691, 9, 37], 'false,false': [5.901, 83, 60], 'false,true,true': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 4, 0], 'false,true': [2.691, 9, 37], 'true,false': [0.0, 1, 0], 'false,false': [5.901, 83, 60]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 4, 0], 'false,true': [2.691, 9, 37], 'true,false': [0.0, 1, 0], 'false,false': [5.901, 83, 60]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 4, 0], 'true,false': [0.0, 1, 0], 'false,false': [5.901, 83, 60], 'false,true,true': [2.691, 9, 37]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 4, 0], 'false,true': [2.691, 9, 37], 'true,false': [0.0, 1, 0], 'false,false': [5.901, 83, 60]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false': 'publication(F, A), publication(F, B)'}, {'true,true': [0.0, 4, 0], 'false,true': [2.691, 9, 37], 'true,false': [0.0, 1, 0], 'false,false': [5.901, 83, 60]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, B)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 4, 0], 'true,false': [0.0, 1, 0], 'false,false': [5.901, 83, 60], 'false,true,true': [2.691, 9, 37]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, A), tempadvisedby(D, B)', 'true': 'yearsinprogram(C, E), yearsinprogram(D, E)', 'false,true': 'publication(G, A)', 'false': 'publication(F, A), publication(F, B)'}, {'false,true,false': [0.0, 0, 0], 'true,true': [0.0, 4, 0], 'true,false': [0.0, 1, 0], 'false,false': [5.901, 83, 60], 'false,true,true': [2.691, 9, 37]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '0;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '0;false;publication(F, A), publication(F, B).;false;false', '1;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '1;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '1;false;publication(F, A), publication(F, B).;false;false', '2;;advisedby(A, B) :- publication(C, A), publication(C, B).;true;true', '2;true;tempadvisedby(D, A), tempadvisedby(E, B).;false;false', '2;false,true;yearsinprogram(G, I), yearsinprogram(H, I).;false;false', '2;false;tempadvisedby(G, A), tempadvisedby(H, B).;true;false', '3;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;false', '3;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '4;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;false', '4;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '5;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '5;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '5;false;publication(F, A), publication(F, B).;false;false', '6;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;false', '6;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '7;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;false', '7;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '8;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '8;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '8;false;publication(F, A), publication(F, B).;false;false', '9;;advisedby(A, B) :- tempadvisedby(C, A), tempadvisedby(D, B).;true;true', '9;true;yearsinprogram(C, E), yearsinprogram(D, E).;false;false', '9;false;publication(F, A), publication(F, B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,false', 0), ('false,false', 0.5804195804195804), ('false,true,true', 0.8043478260869565)]
Tree #2: [('false,true,false', 0), ('false,false', 0.5804195804195804), ('false,true,true', 0.8043478260869565)]
Tree #3: [('true,true,false', 0), ('false,false', 0.5804195804195804), ('true,false', 0.8043478260869565)]
Tree #4: [('false,false', 0.5804195804195804), ('false,true', 0.8043478260869565)]
Tree #5: [('false,false', 0.5804195804195804), ('false,true', 0.8043478260869565)]
Tree #6: [('false,true,false', 0), ('false,false', 0.5804195804195804), ('false,true,true', 0.8043478260869565)]
Tree #7: [('false,false', 0.5804195804195804), ('false,true', 0.8043478260869565)]
Tree #8: [('false,false', 0.5804195804195804), ('false,true', 0.8043478260869565)]
Tree #9: [('false,true,false', 0), ('false,false', 0.5804195804195804), ('false,true,true', 0.8043478260869565)]
Tree #10: [('false,true,false', 0), ('false,false', 0.5804195804195804), ('false,true,true', 0.8043478260869565)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.6624967611864678;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | else return 0.2777293546799321;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.5615687618565198;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | else return 0.24045302091054982;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(C, B) )
%   then if ( tempadvisedby(D, A), tempadvisedby(E, B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.44447922009716;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   else if ( tempadvisedby(F, A), tempadvisedby(G, B) )
%   | then if ( yearsinprogram(F, H), yearsinprogram(G, H) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.2023394370451322;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.20764062993673263;  // std dev = 6,564, 189,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=97 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.16379673592117638;  // std dev = 6,555, 189,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=97 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.24463858578065753;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | else return 0.08954852812646814;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.09770179957789406;  // std dev = 6,522, 189,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=97 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.07510521322616479;  // std dev = 6,522, 189,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=97 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.14566550394036695;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | else return 0.029193301962461983;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   then if ( yearsinprogram(C, E), yearsinprogram(D, E) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(F, A), publication(F, B) )
%   | then return 0.11371206613651758;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | else return 0.02222392675487299;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
Results
   AUC ROC   = 0.666667
   AUC PR    = 0.684721
   CLL	      = -0.626051
   Precision = 0.8 at threshold = 0.5
   Recall    = 0.444444
   F1        = 0.571429


Total learning time: 4.506 seconds
Total inference time: 0.511 seconds
AUC ROC: 0.666667


Best model AUC ROC so far: 0.666667


******************************************
Best model found
******************************************
Total revision time: 12.155000000000001
Best validation AUC ROC: 0.666667


Results
   AUC ROC   = 0.625
   AUC PR    = 0.700399
   CLL	      = -0.636777
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.25
   F1        = 0.4


Total inference time: 0.505 seconds
AUC ROC: 0.625
Dataset: 9, Run: 1, Fold: 5, Type: transfer, Time: 01:16:13
{'Precision': [1.0, 0.5], 'Recall': 0.25, 'Inference time': 0.505, 'F1': 0.4, 'Mapping results': {'Generating paths time': 4.685579776763916, 'Possible mappings': 7036, 'Finding best mapping': 1.8634047508239746, 'Generating mappings time': 1.2298269271850586, 'Knowledge compiling time': 0.4975261688232422, 'Total time': 8.276345252990723}, 'AUC PR': 0.700399, 'Learning time': 12.155000000000001, 'Parameter Learning results': {'Precision': [1.0, 0.5], 'Recall': 0.25, 'Inference time': 0.489, 'F1': 0.4, 'AUC PR': 0.700399, 'Learning time': 6.586, 'AUC ROC': 0.625, 'CLL': -0.636777}, 'AUC ROC': 0.625, 'CLL': -0.636777}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8318331456258272;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( inphase(A, F), inphase(D, F) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.661720363670941;  // std dev = 0,397, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | | else if ( projectmember(H, B), publication(I, A) )
%   | | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(J, A), publication(J, K), tempadvisedby(L, K) )
%   | | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( tempadvisedby(M, B) )
%   | | | | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.14185106490048768;  // std dev = 6,50e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6984381727630617;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else if ( tempadvisedby(D, B), inphase(D, E), inphase(A, E) )
%   | | then if ( publication(F, D), publication(F, B) )
%   | | | then return 0.47540780245230163;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3183545067239124;  // std dev = 0,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( publication(G, B) )
%   | | | then if ( tempadvisedby(H, B), publication(G, I), student(I) )
%   | | | | then return 0.511003433369684;  // std dev = 0,432, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | | else return 0.6361515169448072;  // std dev = 0,326, 33,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else if ( publication(J, A), publication(J, K), tempadvisedby(L, K) )
%   | | | | then return 0.556766728629559;  // std dev = 0,869, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else if ( tempadvisedby(M, B) )
%   | | | | | then return 0.29279418357704884;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.12544463852839158;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), student(D) )
%   | then return 0.47905355952446593;  // std dev = 0,327, 88,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | else if ( publication(E, A), publication(F, B) )
%   | | then return 0.6229593166682129;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( projectmember(G, B), publication(H, A) )
%   | | | then return 0.6137369862036268;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(I, B) )
%   | | | | then if ( publication(J, B) )
%   | | | | | then return 0.3133796934355329;  // std dev = 0,758, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.29179215776707335;  // std dev = 0,498, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.39502773984145484;  // std dev = 0,784, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( publication(L, B) )
%   | | | | | | then return 0.33724503095392716;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.11231637819360628;  // std dev = 5,05e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.42154324014934813;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A), publication(E, F), professor(F) )
%   | | | then if ( projectmember(G, B) )
%   | | | | then return 0.4628696864206577;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return -0.1069854938109404;  // std dev = 1,177, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else if ( publication(H, B) )
%   | | | | then if ( publication(I, D) )
%   | | | | | then return 0.1752342215633583;  // std dev = 0,486, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | | else return 0.3722001654144991;  // std dev = 0,364, 23,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | | else return 0.27964350105217817;  // std dev = 1,093, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(J, A), publication(K, B) )
%   | | | then return 0.5006341720752221;  // std dev = 0,033, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.31490592141652907;  // std dev = 0,411, 29,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=22 */
%   else return -0.1015963294878362;  // std dev = 4,21e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.320997931265308;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else if ( tempadvisedby(D, B), inphase(D, E), inphase(A, E) )
%   | | then if ( publication(F, D), publication(F, B) )
%   | | | then return 0.24407796896662518;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0677028335302051;  // std dev = 0,482, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( publication(G, A), tempadvisedby(H, B) )
%   | | | then if ( publication(I, B), publication(G, J), professor(J) )
%   | | | | then return -0.18654201690144862;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.3043766911198875;  // std dev = 0,291, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else if ( publication(K, B) )
%   | | | | then return 0.30694422993638676;  // std dev = 0,330, 46,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | | | | else if ( publication(L, A) )
%   | | | | | then return 0.23686903144615798;  // std dev = 0,778, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.1270264967595014;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.09269127618926105;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2521939097984719;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else if ( tempadvisedby(D, B), inphase(D, E), inphase(A, E) )
%   | | then return 0.08422000185188233;  // std dev = 0,483, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then if ( publication(H, B), publication(F, I), professor(I) )
%   | | | | then return -0.14132402165979624;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.23509659008988568;  // std dev = 0,292, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else if ( publication(J, B), publication(J, K), student(K) )
%   | | | | then return 0.24988248255029097;  // std dev = 0,308, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | | | else if ( publication(L, B) )
%   | | | | | then return 0.17567870362676713;  // std dev = 0,395, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | | | else if ( publication(M, A) )
%   | | | | | | then return 0.1786785779845299;  // std dev = 0,778, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return 0.09688637769566262;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.0851847513883968;  // std dev = 1,49e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.204437970392208;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else if ( tempadvisedby(D, B), publication(E, A), projectmember(F, B) )
%   | | then return 0.2684025046159948;  // std dev = 0,104, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | | then if ( publication(H, I), professor(I) )
%   | | | | then return -0.07263887692264036;  // std dev = 1,125, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else return 0.28103171954939615;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, A), publication(K, B) )
%   | | | | then return 0.26034032861205897;  // std dev = 0,012, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else if ( tempadvisedby(L, B) )
%   | | | | | then if ( publication(M, L) )
%   | | | | | | then return 0.03383233585029073;  // std dev = 0,477, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | | | else return 0.16170097580226334;  // std dev = 0,397, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | | | else return 0.1262835821098719;  // std dev = 0,408, 29,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=22 */
%   else return -0.07877675473109172;  // std dev = 2,79e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17015529094284396;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( inphase(A, F), inphase(D, F) )
%   | | | then return 0.00822984926151811;  // std dev = 0,960, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04873796044997284;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(G, A), publication(G, H), tempadvisedby(H, I) )
%   | | | then return 0.21865610665696916;  // std dev = 0,092, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(J, B), publication(J, K), tempadvisedby(K, L) )
%   | | | | then return 0.021822982972314043;  // std dev = 0,385, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | else if ( publication(M, B), publication(M, N), student(N) )
%   | | | | | then return 0.16552286079800402;  // std dev = 0,323, 32,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | | | | else if ( publication(P, A), publication(P, Q), professor(Q) )
%   | | | | | | then return -0.031629131980296876;  // std dev = 0,956, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | else return 0.09698575146080109;  // std dev = 0,435, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.07324622576333704;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1446705139478784;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else if ( tempadvisedby(D, B), inphase(D, E), inphase(A, E) )
%   | | then if ( publication(F, D), publication(F, B) )
%   | | | then return 0.15211960465114474;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.036557818670493666;  // std dev = 0,469, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( publication(G, B) )
%   | | | then if ( publication(H, A), tempadvisedby(I, B) )
%   | | | | then return 0.019404034499234914;  // std dev = 0,363, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | else return 0.1283843763954306;  // std dev = 0,328, 46,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | | | else if ( publication(J, A), publication(J, K), tempadvisedby(L, K) )
%   | | | | then return 0.1461088254407703;  // std dev = 0,764, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else if ( tempadvisedby(M, B) )
%   | | | | | then return -0.0012445922329865633;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0.006506530969866364;  // std dev = 1,214, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.0684269778442027;  // std dev = 2,36e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.11385524308167254;  // std dev = 0,228, 60,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=54 */
%   | else if ( tempadvisedby(D, B), inphase(D, E), inphase(A, E) )
%   | | then if ( publication(F, D), publication(F, B) )
%   | | | then return 0.11427857591385253;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.06373541673769387;  // std dev = 0,486, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.13492422226859832;  // std dev = 0,314, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else if ( publication(I, B), publication(I, J), student(J) )
%   | | | | then return 0.09465539202010129;  // std dev = 0,338, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | | else if ( publication(K, B) )
%   | | | | | then return -0.013674778658989155;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | | else if ( tempadvisedby(L, B) )
%   | | | | | | then return -9.334456608205421E-4;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | else return 0.026999436621233497;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06419184008202623;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
Results
   AUC ROC   = 0.890625
   AUC PR    = 0.862358
   CLL	      = -0.381242
   Precision = 0.777778 at threshold = 0.5
   Recall    = 0.875
   F1        = 0.823529


Total learning time: 11.14 seconds
Total inference time: 0.58 seconds
AUC ROC: 0.890625


Dataset: 9, Run: 1, Fold: 5, Type: scratch, Time: 01:16:25
{'Precision': [0.777778, 0.5], 'Recall': 0.875, 'Inference time': 0.58, 'F1': 0.823529, 'AUC PR': 0.862358, 'Learning time': 11.14, 'AUC ROC': 0.890625, 'CLL': -0.381242}


Start learning from source dataset


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995096;  // std dev = 1,07e-06, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.8396304165809906;  // std dev = 0,135, 216,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=212 */
%   else return -0.1418510649004876;  // std dev = 2,09e-07, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109565;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.7046772772613799;  // std dev = 0,135, 216,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=212 */
%   else return -0.1254446385283921;  // std dev = 0,000, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,72e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.5450585534393646;  // std dev = 0,135, 216,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=212 */
%   else return -0.11231637819360653;  // std dev = 0,000, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830936;  // std dev = 4,13e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.40964050878275793;  // std dev = 0,135, 216,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=212 */
%   else return -0.10159632948783638;  // std dev = 6,32e-08, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601492;  // std dev = 3,82e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.3135139610554116;  // std dev = 0,135, 216,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=212 */
%   else return -0.09269127618926049;  // std dev = 1,99e-07, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694907;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.24796831369302438;  // std dev = 0,135, 216,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=212 */
%   else return -0.08518475138839678;  // std dev = 1,15e-07, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253512;  // std dev = 2,76e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.20237120125775546;  // std dev = 0,135, 216,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=212 */
%   else return -0.07877675473109146;  // std dev = 6,32e-08, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.1695117314144433;  // std dev = 0,135, 216,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=212 */
%   else return -0.07324622576333709;  // std dev = 7,88e-08, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15871639033148216;  // std dev = 0,105, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( actor(B) )
%   | then return -0.06842697784420318;  // std dev = 0,000, 341,000 (wgt'ed) examples reached here.  /* #neg=341 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.8364943149495182;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13865645100659174;  // std dev = 0,093, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( actor(B) )
%   | then return -0.06419184008202579;  // std dev = 1,53e-07, 341,000 (wgt'ed) examples reached here.  /* #neg=341 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.6890919803035764;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Predicates from source: ['workedunder(person,person).', 'director(person).', 'movie(movie,person).', 'female(person).', 'actor(person).'] 

Source structured tree: [['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [1.07e-06, 0, 170], 'true,false': [0.135, 4, 212], 'false': [2.09e-07, 378, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'true,false': [0.135, 4, 212], 'false': [0.0, 378, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [5.72e-07, 0, 170], 'true,false': [0.135, 4, 212], 'false': [0.0, 378, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [4.13e-07, 0, 170], 'true,false': [0.135, 4, 212], 'false': [6.32e-08, 378, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [3.82e-07, 0, 170], 'true,false': [0.135, 4, 212], 'false': [1.99e-07, 378, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'true,false': [0.135, 4, 212], 'false': [1.15e-07, 378, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [2.76e-07, 0, 170], 'true,false': [0.135, 4, 212], 'false': [6.32e-08, 378, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'true,false': [0.135, 4, 212], 'false': [7.88e-08, 378, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'false': 'actor(B)', 'false,false': 'movie(D, A), movie(D, B)'}, {'true,true': [0.105, 0, 382], 'false,true': [0.0, 341, 0], 'true,false': [0.0, 30, 0], 'false,false,true': [0.0, 4, 0], 'false,false,false': [2.63e-09, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'false': 'actor(B)', 'false,false': 'movie(D, A), movie(D, B)'}, {'true,true': [0.093, 0, 382], 'false,true': [1.53e-07, 341, 0], 'true,false': [0.0, 30, 0], 'false,false,true': [0.0, 4, 0], 'false,false,false': [0.0, 7, 0]}]] 



Best mapping found: ['workedunder(A,B) -> teamplaysagainstteam(A,B)', 'movie(A,B) -> teamalsoknownas(B,A)'] 

Tranferred structured tree: [['teamplaysagainstteam(A, B)', {'': 'teamalsoknownas(A, C), teamalsoknownas(B, C)'}, {'true,true': [1.07e-06, 0, 170], 'true,false': [0.135, 4, 212], 'false': [2.09e-07, 378, 0]}], ['teamplaysagainstteam(A, B)', {'': 'teamalsoknownas(A, C), teamalsoknownas(B, C)'}, {'true,true': [0.0, 0, 170], 'true,false': [0.135, 4, 212], 'false': [0.0, 378, 0]}], ['teamplaysagainstteam(A, B)', {'': 'teamalsoknownas(A, C), teamalsoknownas(B, C)'}, {'true,true': [5.72e-07, 0, 170], 'true,false': [0.135, 4, 212], 'false': [0.0, 378, 0]}], ['teamplaysagainstteam(A, B)', {'': 'teamalsoknownas(A, C), teamalsoknownas(B, C)'}, {'true,true': [4.13e-07, 0, 170], 'true,false': [0.135, 4, 212], 'false': [6.32e-08, 378, 0]}], ['teamplaysagainstteam(A, B)', {'': 'teamalsoknownas(A, C), teamalsoknownas(B, C)'}, {'true,true': [3.82e-07, 0, 170], 'true,false': [0.135, 4, 212], 'false': [1.99e-07, 378, 0]}], ['teamplaysagainstteam(A, B)', {'': 'teamalsoknownas(A, C), teamalsoknownas(B, C)'}, {'true,true': [0.0, 0, 170], 'true,false': [0.135, 4, 212], 'false': [1.15e-07, 378, 0]}], ['teamplaysagainstteam(A, B)', {'': 'teamalsoknownas(A, C), teamalsoknownas(B, C)'}, {'true,true': [2.76e-07, 0, 170], 'true,false': [0.135, 4, 212], 'false': [6.32e-08, 378, 0]}], ['teamplaysagainstteam(A, B)', {'': 'teamalsoknownas(A, C), teamalsoknownas(B, C)'}, {'true,true': [0.0, 0, 170], 'true,false': [0.135, 4, 212], 'false': [7.88e-08, 378, 0]}], ['teamplaysagainstteam(A, B)', {'false,false': 'teamalsoknownas(A, D), teamalsoknownas(B, D)'}, {'true,true': [0.105, 0, 382], 'false,true': [0.0, 341, 0], 'true,false': [0.0, 30, 0], 'false,false,true': [0.0, 4, 0], 'false,false,false': [2.63e-09, 7, 0]}], ['teamplaysagainstteam(A, B)', {'false,false': 'teamalsoknownas(A, D), teamalsoknownas(B, D)'}, {'true,true': [0.093, 0, 382], 'false,true': [1.53e-07, 341, 0], 'true,false': [0.0, 30, 0], 'false,false,true': [0.0, 4, 0], 'false,false,false': [0.0, 7, 0]}]] 

Transferred target predicate: teamplaysagainstteam 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;teamplaysagainstteam(A, B) :- teamalsoknownas(A, C), teamalsoknownas(B, C).;false;false', '1;;teamplaysagainstteam(A, B) :- teamalsoknownas(A, C), teamalsoknownas(B, C).;false;false', '2;;teamplaysagainstteam(A, B) :- teamalsoknownas(A, C), teamalsoknownas(B, C).;false;false', '3;;teamplaysagainstteam(A, B) :- teamalsoknownas(A, C), teamalsoknownas(B, C).;false;false', '4;;teamplaysagainstteam(A, B) :- teamalsoknownas(A, C), teamalsoknownas(B, C).;false;false', '5;;teamplaysagainstteam(A, B) :- teamalsoknownas(A, C), teamalsoknownas(B, C).;false;false', '6;;teamplaysagainstteam(A, B) :- teamalsoknownas(A, C), teamalsoknownas(B, C).;false;false', '7;;teamplaysagainstteam(A, B) :- teamalsoknownas(A, C), teamalsoknownas(B, C).;false;false', '8;false,false;teamalsoknownas(A, D), teamalsoknownas(B, D).;false;false', '9;false,false;teamalsoknownas(A, D), teamalsoknownas(B, D).;false;false']
Traceback (most recent call last):
  File "total_transfer_experiment.py", line 406, in <module>
    [model, total_revision_time, inference_time, t_results, structured, pl_t_results] = theory_revision(background, boostsrl, target, tar_train_pos, tar_train_neg, tar_train_facts, validation_pos, validation_neg, tar_test_pos, tar_test_neg, tar_test_facts, transferred_structured, trees=10, max_revision_iterations=10, testAfterPL=True, verbose=verbose)
  File "/home/rodrigoazs/Projetos/TPRE/boostedrevision.py", line 266, in theory_revision
    [model, learning_time, inference_time, t_results, structured, will] = learn_test_model(background, boostsrl, target, r_train_pos, r_train_neg, train_facts, validation_pos, validation_neg, train_facts, refine=get_boosted_refine_file(structured_tree), trees=trees, verbose=verbose)
  File "/home/rodrigoazs/Projetos/TPRE/boostedrevision.py", line 225, in learn_test_model
    will = ['WILL Produced-Tree #'+str(i+1)+'\n'+('\n'.join(model.get_will_produced_tree(treenumber=i+1))) for i in range(trees)]
  File "/home/rodrigoazs/Projetos/TPRE/boostedrevision.py", line 225, in <listcomp>
    will = ['WILL Produced-Tree #'+str(i+1)+'\n'+('\n'.join(model.get_will_produced_tree(treenumber=i+1))) for i in range(trees)]
  File "/home/rodrigoazs/anaconda3/lib/python3.5/site-packages/boostsrl/boostsrl.py", line 310, in get_will_produced_tree
    splitline = (line[0].split('\n'))[2:]
IndexError: list index out of range
