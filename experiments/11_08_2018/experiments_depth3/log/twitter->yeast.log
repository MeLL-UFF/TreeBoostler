Starting experiment #1 for twitter->yeast

Start learning from source dataset

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.31131052760536243;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06993932811261194;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5936949736434047;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.23638727706842558;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1487472256978015;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6415884255453697;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.26904308058139953;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.022753514022364314;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.08687974972962019;  // std dev = 7,150, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.5051905517056273;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.20510948611662866;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1296585851710834;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.5444834602885373;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.2251629074734654;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.053942980616506486;  // std dev = 0,408, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.022237501565017866;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(A, G), tweets(B, G) )
%   | then return 0.40398085775681314;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.17375466875970053;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11137140369626213;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.43227582690035005;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.18313417683133237;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.012678543708426466;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06880414795507066;  // std dev = 7,148, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.30928769511060755;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14403887646406802;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.09439937096602727;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.32872809626472155;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.1455585515025414;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.010961543432957051;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.05896948512422795;  // std dev = 7,148, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23250755639381143;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11722526031071193;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.07908428286053523;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.24673667513713926;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.11372159178628172;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.009465171715091035;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.05018607483037465;  // std dev = 7,148, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.1746839244775868;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.0939898922564742;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.18623935109027454;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.0655941935369208;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08777711205597939;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.008164168057971308;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.04245059754604778;  // std dev = 7,147, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.13221940124227713;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07448638412101843;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.14236015691334833;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.053950196907977414;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06719346751014121;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.007035345207310426;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03571936931027847;  // std dev = 7,147, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.10104744105043595;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05850731238683171;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11030155755664867;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.044066289665896534;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.051151957233311715;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.006057652767454916;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.029921478061743684;  // std dev = 7,147, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.07794711889426041;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.045649849825700986;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.08651110070997214;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.03578969600106187;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038795895256089515;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.005212153346311334;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.03529786444082668;  // std dev = 6,600, 233,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=58 */
%   | | | else return 0.023552741601999338;  // std dev = 7,457, 257,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=85 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.0606179950996989;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03544054826900334;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.0685553939062814;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.028934481462948563;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).']

Starting fold 1

Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> phenotype(A,B)', 'tweets(A,B) -> function(A,B)'] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
0;true;function(A, D), function(B, D).;false;true
0;true,false;function(A, E).;false;true
0;true,false,false;function(B, F).;false;false
0;false;function(B, G), function(A, G).;false;true
0;false,false;function(A, H).;true;true
0;false,false,true;function(B, I).;false;false
0;false,false,false;function(B, J).;false;false
1;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
1;true;function(A, D), function(B, D).;false;true
1;true,false;function(A, E), function(B, F).;false;true
1;true,false,false;function(B, G).;false;false
1;false;function(B, H), function(A, H).;false;true
1;false,false;function(A, I).;true;true
1;false,false,true;function(B, J).;false;false
1;false,false,false;function(B, K).;false;false
2;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
2;true;function(A, D), function(B, D).;false;true
2;true,false;function(A, E).;false;true
2;true,false,false;function(B, F).;false;false
2;false;function(A, G), function(B, G).;false;true
2;false,false;function(A, H).;true;true
2;false,false,true;function(B, I).;false;false
2;false,false,false;function(B, J).;false;false
3;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
3;true;function(A, D), function(B, D).;false;true
3;true,false;function(A, E), function(B, F).;false;true
3;true,false,false;function(B, G).;false;false
3;false;function(B, H), function(A, H).;false;true
3;false,false;function(A, I).;true;true
3;false,false,true;function(B, J).;false;false
3;false,false,false;function(B, K).;false;false
4;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
4;true;function(A, D), function(B, D).;false;true
4;true,false;function(B, E), function(A, F).;false;true
4;true,false,false;function(B, G).;false;false
4;false;function(B, H), function(A, H).;false;true
4;false,false;function(A, I).;true;true
4;false,false,true;function(B, J).;false;false
4;false,false,false;function(B, K).;false;false
5;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
5;true;function(B, D), function(A, D).;false;true
5;true,false;function(B, E), function(A, F).;false;true
5;true,false,false;function(B, G).;false;false
5;false;function(B, H).;true;true
5;false,true;function(A, H).;false;true
5;false,true,false;function(A, I).;false;false
5;false,false;function(A, J).;false;false
6;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
6;true;function(B, D), function(A, D).;false;true
6;true,false;function(B, E), function(A, F).;false;true
6;true,false,false;function(B, G).;false;false
6;false;function(B, H).;true;true
6;false,true;function(A, H).;false;true
6;false,true,false;function(A, I).;false;false
6;false,false;function(A, J).;false;false
7;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
7;true;function(A, D), function(B, D).;false;true
7;true,false;function(A, E), function(B, F).;false;true
7;true,false,false;function(B, G).;false;false
7;false;function(B, H).;true;true
7;false,true;function(A, H).;false;true
7;false,true,false;function(A, I).;false;false
7;false,false;function(A, J).;false;false
8;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
8;true;function(A, D), function(B, D).;false;true
8;true,false;function(A, E), function(B, F).;false;true
8;true,false,false;function(B, G).;false;false
8;false;function(B, H).;true;true
8;false,true;function(A, H).;false;true
8;false,true,false;function(A, I).;false;false
8;false,false;function(A, J).;false;false
9;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
9;true;function(A, D), function(B, D).;false;true
9;true,false;function(B, E), function(A, F).;false;true
9;true,false,false;function(A, G).;false;false
9;false;function(B, H).;true;true
9;false,true;function(A, H).;false;true
9;false,true,false;function(A, I).;false;false
9;false,false;function(A, J).;false;false


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.7321646831310048;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.3262340414824902;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.46835301673216045;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.23141626183218056;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3709694479200248;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.6182007830639386;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.28171422482890246;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.4013170162673985;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.2008489419404786;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3195707324298151;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.484568085605645;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.23519292070564615;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, F), function(B, F) )
%   | then return 0.3273463054812131;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.17028125601190675;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.26484890423013485;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.36528324812435614;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.19057755295478856;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.2565427055588793;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1413387994693832;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.2122559513279361;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.27527600052204043;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.15080101353659994;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.19595833641095553;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1152146941248648;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.16584376403710083;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.21128375211260753;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.11727501093763941;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.14775390354734844;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.09254875351524673;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.12737818535099144;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.16579122949997996;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.09012256866998798;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.11088626020987527;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.07348850098470627;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.09680041930186449;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.13274806914910878;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.06871315573496113;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.08319102379957895;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.057839200066892756;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.073108913239958;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.10811348660127582;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.05212246791353032;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.06251236736817915;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.04521858206590193;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.05502576330041963;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.08928867348059323;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.039407136735360955;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.04707750221522494;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.03517453997163866;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.04133900640598988;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.64196
   AUC PR    = 0.632509
   CLL	      = -0.657242
   Precision = 0.615908 at threshold = 0.5
   Recall    = 0.671747
   F1        = 0.642617


Total learning time: 47.753 seconds
Total inference time: 2.15 seconds
AUC ROC: 0.64196


Structure after Parameter Learning
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(A, F), function(B, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
{'': [0.15350823942341021, 0.24929802781329008], 'false': [0.23785506039152596, 0.2346018297994732], 'false,false': [0.23460182979947367, nan], 'true': [0.1101122202244454, 0.24898143956541524], 'true,false': [0.24898143956541524, nan]}
{'': [0.1467149227757434, 0.24544772536915183], 'false': [0.23785506039149654, 0.23450185190630202], 'false,false': [0.2345018519063027, nan], 'true': [0.11011222022443767, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1399902885252973, 0.24170235517391384], 'false': [0.2378550603915169, 0.23440611833627428], 'false,false': [0.23440611833627428, nan], 'true': [0.11011222022444243, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.13581784638924727, 0.23895111404591982], 'false': [0.23785506039149695, 0.23433339033496178], 'false,false': [0.2343333903349623, nan], 'true': [0.11011222022444034, 0.24898143956541452], 'true,false': [0.24898143956541452, nan]}
{'': [0.13383768114925532, 0.2373206687712768], 'false': [0.2378550603914989, 0.23428756710087567], 'false,false': [0.23428756710087603, nan], 'true': [0.11011222022443964, 0.24898143956541383], 'true,false': [0.24898143956541383, nan]}
{'': [0.13296060636954468, 0.2364820439207477], 'false': [0.23633133928866215, 0.24983563445101917], 'false,false': [0.24983563445101917, nan], 'false,true': [0.2378550603915007, 0.23393882952651093], 'true': [0.11011222022444135, 0.24898143956541466], 'true,false': [0.24898143956541466, nan]}
{'': [0.132550568637064, 0.23608363109221323], 'false': [0.2359293238134652, 0.24983563445101892], 'false,false': [0.24983563445101892, nan], 'false,true': [0.2378550603915106, 0.23393882952652967], 'true': [0.1101122202244407, 0.24898143956541408], 'true,false': [0.24898143956541408, nan]}
{'': [0.1323364148635707, 0.23590099717487653], 'false': [0.23574504762229387, 0.24983563445101922], 'false,false': [0.24983563445101922, nan], 'false,true': [0.2378550603915064, 0.23393882952652786], 'true': [0.11011222022444085, 0.24898143956541424], 'true,false': [0.24898143956541424, nan]}
{'': [0.13220919935780845, 0.23581798581592345], 'false': [0.23566127125865519, 0.24983563445101908], 'false,false': [0.24983563445101908, nan], 'false,true': [0.23785506039150842, 0.23393882952652453], 'true': [0.11011222022444023, 0.2489814395654141], 'true,false': [0.2489814395654141, nan]}
{'': [0.1321239705595983, 0.2357799833982129], 'false': [0.23562289988006616, 0.24983563445101914], 'false,false': [0.24983563445101914, nan], 'false,true': [0.23785506039150503, 0.2339388295265198], 'true': [0.11011222022444032, 0.24898143956541377], 'true,false': [0.24898143956541377, nan]}


******************************************
Performing Theory Revision
******************************************
'false,false,true'
Error in experiment of twitter->yeast
Starting experiment #1 for twitter->yeast

Starting experiment #1 for twitter->yeast

Start learning from source dataset

Start learning from source dataset

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.31131052760536243;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06993932811261194;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5936949736434047;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.23638727706842558;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1487472256978015;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6415884255453697;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.31131052760536243;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06993932811261194;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5936949736434047;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.23638727706842558;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1487472256978015;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6415884255453697;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.26904308058139953;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.061210573702132995;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03344134145876875;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5051905517056273;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.20510948611662866;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1296585851710834;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.5444834602885373;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.26904308058139953;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.061210573702132995;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03344134145876875;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5051905517056273;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.20510948611662866;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1296585851710834;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.5444834602885373;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.2251629074734654;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.053212842182282824;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.02920889340268885;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(A, G), tweets(B, G) )
%   | then return 0.40398085775681314;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.17375466875970053;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11137140369626213;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.43227582690035005;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.2251629074734654;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.053212842182282824;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.02920889340268885;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(A, G), tweets(B, G) )
%   | then return 0.40398085775681314;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.17375466875970053;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11137140369626213;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.43227582690035005;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.18313417683133237;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.007525908276951269;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.07292716062527996;  // std dev = 7,147, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.30928769511060755;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14403887646406802;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.09439937096602727;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.32872809626472155;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.18313417683133237;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.007525908276951269;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.07292716062527996;  // std dev = 7,147, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.30928769511060755;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14403887646406802;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.09439937096602727;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.32872809626472155;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.1455585515025414;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.006482340088309088;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06269230230219924;  // std dev = 7,147, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23250755639381143;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11722526031071193;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.07908428286053523;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.24673667513713926;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.1455585515025414;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.006482340088309088;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06269230230219924;  // std dev = 7,147, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23250755639381143;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11722526031071193;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.07908428286053523;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.24673667513713926;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.11372159178628172;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.005579271626958629;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.05349600800481879;  // std dev = 7,147, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.1746839244775868;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.0939898922564742;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.18623935109027454;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.0655941935369208;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.11372159178628172;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.005579271626958629;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.05349600800481879;  // std dev = 7,147, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.1746839244775868;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.0939898922564742;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.18623935109027454;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.0655941935369208;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08777711205597939;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.004798890244338547;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.04535438566102309;  // std dev = 7,146, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.13221940124227713;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07448638412101843;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.14236015691334833;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.053950196907977414;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08777711205597939;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.004798890244338547;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.04535438566102309;  // std dev = 7,146, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.13221940124227713;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07448638412101843;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.14236015691334833;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.053950196907977414;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.06719346751014121;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.004125348861722141;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.038237925034420306;  // std dev = 7,146, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.10104744105043595;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05850731238683171;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11030155755664867;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.044066289665896534;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.06719346751014121;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.004125348861722141;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.038237925034420306;  // std dev = 7,146, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.10104744105043595;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05850731238683171;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11030155755664867;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.044066289665896534;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.051151957233311715;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.0035446295248758265;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03208488818015623;  // std dev = 7,146, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.07794711889426041;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.045649849825700986;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.08651110070997214;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.03578969600106187;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.051151957233311715;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.0035446295248758265;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03208488818015623;  // std dev = 7,146, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.07794711889426041;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.045649849825700986;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.08651110070997214;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.03578969600106187;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038795895256089515;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E) )
%   | | then if ( tweets(A, F) )
%   | | | then return 0.003044391782343058;  // std dev = 5,678, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | | else return 0.03483512876560202;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | else return 0.026813567474001022;  // std dev = 0,425, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, G) )
%   | then if ( tweets(A, G) )
%   | | then return 0.0606179950996989;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.03544054826900334;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.0685553939062814;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, I) )
%   | | then return 0.028934481462948563;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038795895256089515;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E) )
%   | | then if ( tweets(A, F) )
%   | | | then return 0.003044391782343058;  // std dev = 5,678, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | | else return 0.03483512876560202;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | else return 0.026813567474001022;  // std dev = 0,425, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, G) )
%   | then if ( tweets(A, G) )
%   | | then return 0.0606179950996989;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.03544054826900334;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.0685553939062814;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, I) )
%   | | then return 0.028934481462948563;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */




Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).']

Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).']

Starting fold 1

Starting fold 1

Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> phenotype(A,B)', 'tweets(A,B) -> function(A,B)'] 

Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> phenotype(A,B)', 'tweets(A,B) -> function(A,B)'] 

Transferred target predicate: interaction 

Transferred target predicate: interaction 

******************************************
******************************************
Performing Parameter Learning
Performing Parameter Learning
******************************************
******************************************
Refine
Refine
0;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
0;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
0;true;function(A, D), function(B, D).;false;true
0;true;function(A, D), function(B, D).;false;true
0;true,false;function(A, E).;false;true
0;true,false;function(A, E).;false;true
0;true,false,false;function(B, F).;false;false
0;true,false,false;function(B, F).;false;false
0;false;function(B, G), function(A, G).;false;true
0;false;function(B, G), function(A, G).;false;true
0;false,false;function(A, H).;true;true
0;false,false;function(A, H).;true;true
0;false,false,true;function(B, I).;false;false
0;false,false,true;function(B, I).;false;false
0;false,false,false;function(B, J).;false;false
0;false,false,false;function(B, J).;false;false
1;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
1;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
1;true;function(A, D), function(B, D).;false;true
1;true;function(A, D), function(B, D).;false;true
1;true,false;function(A, E).;false;true
1;true,false;function(A, E).;false;true
1;true,false,false;function(B, F).;false;false
1;true,false,false;function(B, F).;false;false
1;false;function(B, G), function(A, G).;false;true
1;false;function(B, G), function(A, G).;false;true
1;false,false;function(A, H).;true;true
1;false,false;function(A, H).;true;true
1;false,false,true;function(B, I).;false;false
1;false,false,true;function(B, I).;false;false
1;false,false,false;function(B, J).;false;false
1;false,false,false;function(B, J).;false;false
2;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
2;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
2;true;function(A, D), function(B, D).;false;true
2;true;function(A, D), function(B, D).;false;true
2;true,false;function(A, E).;false;true
2;true,false;function(A, E).;false;true
2;true,false,false;function(B, F).;false;false
2;true,false,false;function(B, F).;false;false
2;false;function(A, G), function(B, G).;false;true
2;false;function(A, G), function(B, G).;false;true
2;false,false;function(A, H).;true;true
2;false,false;function(A, H).;true;true
2;false,false,true;function(B, I).;false;false
2;false,false,true;function(B, I).;false;false
2;false,false,false;function(B, J).;false;false
2;false,false,false;function(B, J).;false;false
3;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
3;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
3;true;function(A, D), function(B, D).;false;true
3;true;function(A, D), function(B, D).;false;true
3;true,false;function(A, E), function(B, F).;false;true
3;true,false;function(A, E), function(B, F).;false;true
3;true,false,false;function(B, G).;false;false
3;true,false,false;function(B, G).;false;false
3;false;function(B, H), function(A, H).;false;true
3;false;function(B, H), function(A, H).;false;true
3;false,false;function(A, I).;true;true
3;false,false;function(A, I).;true;true
3;false,false,true;function(B, J).;false;false
3;false,false,true;function(B, J).;false;false
3;false,false,false;function(B, K).;false;false
3;false,false,false;function(B, K).;false;false
4;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
4;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
4;true;function(A, D), function(B, D).;false;true
4;true;function(A, D), function(B, D).;false;true
4;true,false;function(B, E), function(A, F).;false;true
4;true,false;function(B, E), function(A, F).;false;true
4;true,false,false;function(B, G).;false;false
4;true,false,false;function(B, G).;false;false
4;false;function(B, H), function(A, H).;false;true
4;false;function(B, H), function(A, H).;false;true
4;false,false;function(A, I).;true;true
4;false,false;function(A, I).;true;true
4;false,false,true;function(B, J).;false;false
4;false,false,true;function(B, J).;false;false
4;false,false,false;function(B, K).;false;false
4;false,false,false;function(B, K).;false;false
5;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
5;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
5;true;function(B, D), function(A, D).;false;true
5;true;function(B, D), function(A, D).;false;true
5;true,false;function(B, E), function(A, F).;false;true
5;true,false;function(B, E), function(A, F).;false;true
5;true,false,false;function(B, G).;false;false
5;true,false,false;function(B, G).;false;false
5;false;function(B, H).;true;true
5;false;function(B, H).;true;true
5;false,true;function(A, H).;false;true
5;false,true;function(A, H).;false;true
5;false,true,false;function(A, I).;false;false
5;false,true,false;function(A, I).;false;false
5;false,false;function(A, J).;false;false
5;false,false;function(A, J).;false;false
6;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
6;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
6;true;function(B, D), function(A, D).;false;true
6;true;function(B, D), function(A, D).;false;true
6;true,false;function(A, E), function(B, F).;false;true
6;true,false;function(A, E), function(B, F).;false;true
6;true,false,false;function(B, G).;false;false
6;true,false,false;function(B, G).;false;false
6;false;function(B, H).;true;true
6;false;function(B, H).;true;true
6;false,true;function(A, H).;false;true
6;false,true;function(A, H).;false;true
6;false,true,false;function(A, I).;false;false
6;false,true,false;function(A, I).;false;false
6;false,false;function(A, J).;false;false
6;false,false;function(A, J).;false;false
7;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
7;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
7;true;function(B, D), function(A, D).;false;true
7;true;function(B, D), function(A, D).;false;true
7;true,false;function(B, E), function(A, F).;false;true
7;true,false;function(B, E), function(A, F).;false;true
7;true,false,false;function(B, G).;false;false
7;true,false,false;function(B, G).;false;false
7;false;function(B, H).;true;true
7;false;function(B, H).;true;true
7;false,true;function(A, H).;false;true
7;false,true;function(A, H).;false;true
7;false,true,false;function(A, I).;false;false
7;false,true,false;function(A, I).;false;false
7;false,false;function(A, J).;false;false
7;false,false;function(A, J).;false;false
8;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
8;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
8;true;function(A, D), function(B, D).;false;true
8;true;function(A, D), function(B, D).;false;true
8;true,false;function(A, E), function(B, F).;false;true
8;true,false;function(A, E), function(B, F).;false;true
8;true,false,false;function(B, G).;false;false
8;true,false,false;function(B, G).;false;false
8;false;function(B, H).;true;true
8;false;function(B, H).;true;true
8;false,true;function(A, H).;false;true
8;false,true;function(A, H).;false;true
8;false,true,false;function(A, I).;false;false
8;false,true,false;function(A, I).;false;false
8;false,false;function(A, J).;false;false
8;false,false;function(A, J).;false;false
9;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
9;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
9;true;function(A, D), function(B, D).;false;true
9;true;function(A, D), function(B, D).;false;true
9;true,false;function(B, E).;true;false
9;true,false;function(B, E).;true;false
9;true,false,true;function(A, F).;false;false
9;true,false,true;function(A, F).;false;false
9;false;function(B, G).;true;true
9;false;function(B, G).;true;true
9;false,true;function(A, G).;false;true
9;false,true;function(A, G).;false;true
9;false,true,false;function(A, H).;false;false
9;false,true,false;function(A, H).;false;false
9;false,false;function(A, I).;false;false
9;false,false;function(A, I).;false;false




WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.7321646831310048;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.3262340414824902;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.46835301673216045;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.23141626183218056;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3709694479200248;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.7321646831310048;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.3262340414824902;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.46835301673216045;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.23141626183218056;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3709694479200248;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.6182007830639386;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.28171422482890246;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.4013170162673985;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.2008489419404786;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3195707324298151;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.6182007830639386;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.28171422482890246;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.4013170162673985;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.2008489419404786;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3195707324298151;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.484568085605645;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.23519292070564615;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, F), function(B, F) )
%   | then return 0.3273463054812131;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.17028125601190675;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.26484890423013485;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.484568085605645;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.23519292070564615;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, F), function(B, F) )
%   | then return 0.3273463054812131;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.17028125601190675;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.26484890423013485;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.36528324812435614;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.19057755295478856;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.2565427055588793;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1413387994693832;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.2122559513279361;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.36528324812435614;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.19057755295478856;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.2565427055588793;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1413387994693832;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.2122559513279361;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.27527600052204043;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.15080101353659994;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.19595833641095553;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1152146941248648;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.16584376403710083;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.27527600052204043;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.15080101353659994;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.19595833641095553;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1152146941248648;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.16584376403710083;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.21128375211260753;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.11727501093763941;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.14775390354734844;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.09254875351524673;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.12737818535099144;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.21128375211260753;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.11727501093763941;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.14775390354734844;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.09254875351524673;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.12737818535099144;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.16579122949997996;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.09012256866998798;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.11088626020987527;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.07348850098470627;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.09680041930186449;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.16579122949997996;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.09012256866998798;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.11088626020987527;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.07348850098470627;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.09680041930186449;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.13274806914910878;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.06871315573496113;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.08319102379957895;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.057839200066892756;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.073108913239958;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.13274806914910878;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.06871315573496113;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.08319102379957895;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.057839200066892756;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.073108913239958;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.10811348660127582;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.05212246791353032;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.06251236736817915;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.04521858206590193;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.05502576330041963;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.10811348660127582;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.05212246791353032;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.06251236736817915;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.04521858206590193;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.05502576330041963;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.08928867348059323;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E) )
%   | | then if ( function(A, F) )
%   | | | then return 0.039407136735360955;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.04707750221522494;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.03517453997163866;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.04133900640598988;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.08928867348059323;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E) )
%   | | then if ( function(A, F) )
%   | | | then return 0.039407136735360955;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.04707750221522494;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.03517453997163866;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.04133900640598988;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.




Results
Results
   AUC ROC   = 0.64196
   AUC ROC   = 0.64196
   AUC PR    = 0.632509
   AUC PR    = 0.632509
   CLL	      = -0.657242
   CLL	      = -0.657242
   Precision = 0.615908 at threshold = 0.5
   Precision = 0.615908 at threshold = 0.5
   Recall    = 0.671747
   Recall    = 0.671747
   F1        = 0.642617
   F1        = 0.642617




Total learning time: 42.513 seconds
Total learning time: 42.513 seconds
Total inference time: 2.203 seconds
Total inference time: 2.203 seconds
AUC ROC: 0.64196
AUC ROC: 0.64196




Structure after Parameter Learning
Structure after Parameter Learning
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(A, F), function(B, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(A, F), function(B, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E)', 'true,false,true': 'function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true,true': [3.421, 25, 22], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E)', 'true,false,true': 'function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true,true': [3.421, 25, 22], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
{'': [0.15350823942341021, 0.24929802781329008], 'false': [0.23785506039152596, 0.2346018297994732], 'false,false': [0.23460182979947367, nan], 'true': [0.1101122202244454, 0.24898143956541524], 'true,false': [0.24898143956541524, nan]}
{'': [0.15350823942341021, 0.24929802781329008], 'false': [0.23785506039152596, 0.2346018297994732], 'false,false': [0.23460182979947367, nan], 'true': [0.1101122202244454, 0.24898143956541524], 'true,false': [0.24898143956541524, nan]}
{'': [0.1467149227757434, 0.24544772536915183], 'false': [0.23785506039149654, 0.23450185190630202], 'false,false': [0.2345018519063027, nan], 'true': [0.11011222022443767, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1467149227757434, 0.24544772536915183], 'false': [0.23785506039149654, 0.23450185190630202], 'false,false': [0.2345018519063027, nan], 'true': [0.11011222022443767, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1399902885252973, 0.24170235517391384], 'false': [0.2378550603915169, 0.23440611833627428], 'false,false': [0.23440611833627428, nan], 'true': [0.11011222022444243, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1399902885252973, 0.24170235517391384], 'false': [0.2378550603915169, 0.23440611833627428], 'false,false': [0.23440611833627428, nan], 'true': [0.11011222022444243, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.13581784638924727, 0.23895111404591982], 'false': [0.23785506039149695, 0.23433339033496178], 'false,false': [0.2343333903349623, nan], 'true': [0.11011222022444034, 0.24898143956541452], 'true,false': [0.24898143956541452, nan]}
{'': [0.13581784638924727, 0.23895111404591982], 'false': [0.23785506039149695, 0.23433339033496178], 'false,false': [0.2343333903349623, nan], 'true': [0.11011222022444034, 0.24898143956541452], 'true,false': [0.24898143956541452, nan]}
{'': [0.13383768114925532, 0.2373206687712768], 'false': [0.2378550603914989, 0.23428756710087567], 'false,false': [0.23428756710087603, nan], 'true': [0.11011222022443964, 0.24898143956541383], 'true,false': [0.24898143956541383, nan]}
{'': [0.13383768114925532, 0.2373206687712768], 'false': [0.2378550603914989, 0.23428756710087567], 'false,false': [0.23428756710087603, nan], 'true': [0.11011222022443964, 0.24898143956541383], 'true,false': [0.24898143956541383, nan]}
{'': [0.13296060636954468, 0.2364820439207477], 'false': [0.23633133928866215, 0.24983563445101917], 'false,false': [0.24983563445101917, nan], 'false,true': [0.2378550603915007, 0.23393882952651093], 'true': [0.11011222022444135, 0.24898143956541466], 'true,false': [0.24898143956541466, nan]}
{'': [0.13296060636954468, 0.2364820439207477], 'false': [0.23633133928866215, 0.24983563445101917], 'false,false': [0.24983563445101917, nan], 'false,true': [0.2378550603915007, 0.23393882952651093], 'true': [0.11011222022444135, 0.24898143956541466], 'true,false': [0.24898143956541466, nan]}
{'': [0.132550568637064, 0.23608363109221323], 'false': [0.2359293238134652, 0.24983563445101892], 'false,false': [0.24983563445101892, nan], 'false,true': [0.2378550603915106, 0.23393882952652967], 'true': [0.1101122202244407, 0.24898143956541408], 'true,false': [0.24898143956541408, nan]}
{'': [0.132550568637064, 0.23608363109221323], 'false': [0.2359293238134652, 0.24983563445101892], 'false,false': [0.24983563445101892, nan], 'false,true': [0.2378550603915106, 0.23393882952652967], 'true': [0.1101122202244407, 0.24898143956541408], 'true,false': [0.24898143956541408, nan]}
{'': [0.1323364148635707, 0.23590099717487653], 'false': [0.23574504762229387, 0.24983563445101922], 'false,false': [0.24983563445101922, nan], 'false,true': [0.2378550603915064, 0.23393882952652786], 'true': [0.11011222022444085, 0.24898143956541424], 'true,false': [0.24898143956541424, nan]}
{'': [0.1323364148635707, 0.23590099717487653], 'false': [0.23574504762229387, 0.24983563445101922], 'false,false': [0.24983563445101922, nan], 'false,true': [0.2378550603915064, 0.23393882952652786], 'true': [0.11011222022444085, 0.24898143956541424], 'true,false': [0.24898143956541424, nan]}
{'': [0.13220919935780845, 0.23581798581592345], 'false': [0.23566127125865519, 0.24983563445101908], 'false,false': [0.24983563445101908, nan], 'false,true': [0.23785506039150842, 0.23393882952652453], 'true': [0.11011222022444023, 0.2489814395654141], 'true,false': [0.2489814395654141, nan]}
{'': [0.13220919935780845, 0.23581798581592345], 'false': [0.23566127125865519, 0.24983563445101908], 'false,false': [0.24983563445101908, nan], 'false,true': [0.23785506039150842, 0.23393882952652453], 'true': [0.11011222022444023, 0.2489814395654141], 'true,false': [0.2489814395654141, nan]}
{'': [0.1321239705595983, 0.2357799833982129], 'false': [0.23562289988006616, 0.24983563445101914], 'false,false': [0.24983563445101914, nan], 'false,true': [0.23785506039150503, 0.2339388295265198], 'true': [0.11011222022444032, 0.24898143956541377], 'true,false': [0.24898143956541377, nan]}
{'': [0.1321239705595983, 0.2357799833982129], 'false': [0.23562289988006616, 0.24983563445101914], 'false,false': [0.24983563445101914, nan], 'false,true': [0.23785506039150503, 0.2339388295265198], 'true': [0.11011222022444032, 0.24898143956541377], 'true,false': [0.24898143956541377, nan]}




******************************************
******************************************
Performing Theory Revision
Performing Theory Revision
******************************************
******************************************
'false,false,true'
'false,false,true'
Error in experiment of twitter->yeast
Error in experiment of twitter->yeast
Starting experiment #1 for twitter->yeast

Starting experiment #1 for twitter->yeast

Starting experiment #1 for twitter->yeast

Start learning from source dataset

Start learning from source dataset

Start learning from source dataset

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.31131052760536243;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06993932811261194;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5936949736434047;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.23638727706842558;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1487472256978015;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6415884255453697;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.31131052760536243;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06993932811261194;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5936949736434047;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.23638727706842558;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1487472256978015;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6415884255453697;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.31131052760536243;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06993932811261194;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5936949736434047;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.23638727706842558;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1487472256978015;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6415884255453697;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.26904308058139953;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.022753514022364314;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.08687974972962019;  // std dev = 7,150, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.5051905517056273;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.20510948611662866;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1296585851710834;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.5444834602885373;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.26904308058139953;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.022753514022364314;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.08687974972962019;  // std dev = 7,150, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.5051905517056273;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.20510948611662866;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1296585851710834;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.5444834602885373;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.26904308058139953;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.022753514022364314;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.08687974972962019;  // std dev = 7,150, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.5051905517056273;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.20510948611662866;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1296585851710834;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.5444834602885373;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.2251629074734654;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.01982001727117023;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.07547087036960165;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.40398085775681314;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.17375466875970053;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11137140369626213;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.43227582690035005;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.2251629074734654;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.01982001727117023;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.07547087036960165;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.40398085775681314;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.17375466875970053;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11137140369626213;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.43227582690035005;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.2251629074734654;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.01982001727117023;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.07547087036960165;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.40398085775681314;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.17375466875970053;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11137140369626213;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.43227582690035005;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.18313417683133237;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01722674183161882;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06499960569768067;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.30928769511060755;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14403887646406802;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.09439937096602727;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.32872809626472155;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.18313417683133237;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01722674183161882;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06499960569768067;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.30928769511060755;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14403887646406802;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.09439937096602727;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.32872809626472155;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.18313417683133237;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01722674183161882;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06499960569768067;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.30928769511060755;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14403887646406802;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.09439937096602727;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.32872809626472155;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.1455585515025414;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01494386931498094;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.055555326017059925;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23250755639381143;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11722526031071193;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.07908428286053523;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.24673667513713926;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.1455585515025414;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01494386931498094;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.055555326017059925;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23250755639381143;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11722526031071193;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.07908428286053523;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.24673667513713926;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.1455585515025414;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01494386931498094;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.055555326017059925;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23250755639381143;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11722526031071193;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.07908428286053523;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.24673667513713926;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11372159178628172;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.012941633918787674;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.04716676146255043;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.1746839244775868;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.0939898922564742;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.18623935109027454;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.0655941935369208;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11372159178628172;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.012941633918787674;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.04716676146255043;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.1746839244775868;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.0939898922564742;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.18623935109027454;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.0655941935369208;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11372159178628172;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.012941633918787674;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.04716676146255043;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.1746839244775868;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.0939898922564742;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.18623935109027454;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.0655941935369208;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08777711205597939;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.011191164195034213;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03981389165384334;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.13221940124227713;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07448638412101843;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.14236015691334833;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.053950196907977414;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08777711205597939;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.011191164195034213;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03981389165384334;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.13221940124227713;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07448638412101843;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.14236015691334833;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.053950196907977414;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08777711205597939;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.011191164195034213;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03981389165384334;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.13221940124227713;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07448638412101843;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.14236015691334833;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.053950196907977414;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06719346751014121;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.009665066912476093;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.0334413529220261;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.10104744105043595;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05850731238683171;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11030155755664867;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.044066289665896534;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06719346751014121;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.009665066912476093;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.0334413529220261;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.10104744105043595;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05850731238683171;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11030155755664867;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.044066289665896534;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06719346751014121;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.009665066912476093;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.0334413529220261;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.10104744105043595;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05850731238683171;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11030155755664867;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.044066289665896534;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.051151957233311715;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.00833779905076543;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.027971097700531296;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.07794711889426041;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.045649849825700986;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.08651110070997214;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.03578969600106187;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.051151957233311715;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.00833779905076543;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.027971097700531296;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.07794711889426041;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.045649849825700986;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.08651110070997214;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.03578969600106187;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.051151957233311715;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.00833779905076543;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.027971097700531296;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.07794711889426041;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.045649849825700986;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.08651110070997214;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.03578969600106187;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038795895256089515;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.007185872846865357;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.03483512876560202;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.02331303155430923;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.0606179950996989;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03544054826900334;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.0685553939062814;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.028934481462948563;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038795895256089515;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.007185872846865357;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.03483512876560202;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.02331303155430923;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.0606179950996989;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03544054826900334;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.0685553939062814;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.028934481462948563;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038795895256089515;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.007185872846865357;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.03483512876560202;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.02331303155430923;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.0606179950996989;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03544054826900334;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.0685553939062814;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.028934481462948563;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */






Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).']

Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).']

Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).']

Starting fold 1

Starting fold 1

Starting fold 1

Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> phenotype(A,B)', 'tweets(A,B) -> function(A,B)'] 

Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> phenotype(A,B)', 'tweets(A,B) -> function(A,B)'] 

Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> phenotype(A,B)', 'tweets(A,B) -> function(A,B)'] 

Transferred target predicate: interaction 

Transferred target predicate: interaction 

Transferred target predicate: interaction 

******************************************
******************************************
******************************************
Performing Parameter Learning
Performing Parameter Learning
Performing Parameter Learning
******************************************
******************************************
******************************************
Refine
Refine
Refine
0;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
0;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
0;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
0;true;function(A, D), function(B, D).;false;true
0;true;function(A, D), function(B, D).;false;true
0;true;function(A, D), function(B, D).;false;true
0;true,false;function(A, E).;false;true
0;true,false;function(A, E).;false;true
0;true,false;function(A, E).;false;true
0;true,false,false;function(B, F).;false;false
0;true,false,false;function(B, F).;false;false
0;true,false,false;function(B, F).;false;false
0;false;function(B, G), function(A, G).;false;true
0;false;function(B, G), function(A, G).;false;true
0;false;function(B, G), function(A, G).;false;true
0;false,false;function(A, H).;true;true
0;false,false;function(A, H).;true;true
0;false,false;function(A, H).;true;true
0;false,false,true;function(B, I).;false;false
0;false,false,true;function(B, I).;false;false
0;false,false,true;function(B, I).;false;false
0;false,false,false;function(B, J).;false;false
0;false,false,false;function(B, J).;false;false
0;false,false,false;function(B, J).;false;false
1;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
1;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
1;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
1;true;function(A, D), function(B, D).;false;true
1;true;function(A, D), function(B, D).;false;true
1;true;function(A, D), function(B, D).;false;true
1;true,false;function(A, E), function(B, F).;false;true
1;true,false;function(A, E), function(B, F).;false;true
1;true,false;function(A, E), function(B, F).;false;true
1;true,false,false;function(B, G).;false;false
1;true,false,false;function(B, G).;false;false
1;true,false,false;function(B, G).;false;false
1;false;function(B, H), function(A, H).;false;true
1;false;function(B, H), function(A, H).;false;true
1;false;function(B, H), function(A, H).;false;true
1;false,false;function(A, I).;true;true
1;false,false;function(A, I).;true;true
1;false,false;function(A, I).;true;true
1;false,false,true;function(B, J).;false;false
1;false,false,true;function(B, J).;false;false
1;false,false,true;function(B, J).;false;false
1;false,false,false;function(B, K).;false;false
1;false,false,false;function(B, K).;false;false
1;false,false,false;function(B, K).;false;false
2;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
2;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
2;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
2;true;function(A, D), function(B, D).;false;true
2;true;function(A, D), function(B, D).;false;true
2;true;function(A, D), function(B, D).;false;true
2;true,false;function(B, E), function(A, F).;false;true
2;true,false;function(B, E), function(A, F).;false;true
2;true,false;function(B, E), function(A, F).;false;true
2;true,false,false;function(B, G).;false;false
2;true,false,false;function(B, G).;false;false
2;true,false,false;function(B, G).;false;false
2;false;function(A, H), function(B, H).;false;true
2;false;function(A, H), function(B, H).;false;true
2;false;function(A, H), function(B, H).;false;true
2;false,false;function(A, I).;true;true
2;false,false;function(A, I).;true;true
2;false,false;function(A, I).;true;true
2;false,false,true;function(B, J).;false;false
2;false,false,true;function(B, J).;false;false
2;false,false,true;function(B, J).;false;false
2;false,false,false;function(B, K).;false;false
2;false,false,false;function(B, K).;false;false
2;false,false,false;function(B, K).;false;false
3;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
3;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
3;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
3;true;function(B, D), function(A, D).;false;true
3;true;function(B, D), function(A, D).;false;true
3;true;function(B, D), function(A, D).;false;true
3;true,false;function(A, E), function(B, F).;false;true
3;true,false;function(A, E), function(B, F).;false;true
3;true,false;function(A, E), function(B, F).;false;true
3;true,false,false;function(B, G).;false;false
3;true,false,false;function(B, G).;false;false
3;true,false,false;function(B, G).;false;false
3;false;function(B, H), function(A, H).;false;true
3;false;function(B, H), function(A, H).;false;true
3;false;function(B, H), function(A, H).;false;true
3;false,false;function(A, I).;true;true
3;false,false;function(A, I).;true;true
3;false,false;function(A, I).;true;true
3;false,false,true;function(B, J).;false;false
3;false,false,true;function(B, J).;false;false
3;false,false,true;function(B, J).;false;false
3;false,false,false;function(B, K).;false;false
3;false,false,false;function(B, K).;false;false
3;false,false,false;function(B, K).;false;false
4;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
4;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
4;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
4;true;function(A, D), function(B, D).;false;true
4;true;function(A, D), function(B, D).;false;true
4;true;function(A, D), function(B, D).;false;true
4;true,false;function(A, E), function(B, F).;false;true
4;true,false;function(A, E), function(B, F).;false;true
4;true,false;function(A, E), function(B, F).;false;true
4;true,false,false;function(B, G).;false;false
4;true,false,false;function(B, G).;false;false
4;true,false,false;function(B, G).;false;false
4;false;function(B, H), function(A, H).;false;true
4;false;function(B, H), function(A, H).;false;true
4;false;function(B, H), function(A, H).;false;true
4;false,false;function(A, I).;true;true
4;false,false;function(A, I).;true;true
4;false,false;function(A, I).;true;true
4;false,false,true;function(B, J).;false;false
4;false,false,true;function(B, J).;false;false
4;false,false,true;function(B, J).;false;false
4;false,false,false;function(B, K).;false;false
4;false,false,false;function(B, K).;false;false
4;false,false,false;function(B, K).;false;false
5;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
5;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
5;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
5;true;function(A, D), function(B, D).;false;true
5;true;function(A, D), function(B, D).;false;true
5;true;function(A, D), function(B, D).;false;true
5;true,false;function(B, E), function(A, F).;false;true
5;true,false;function(B, E), function(A, F).;false;true
5;true,false;function(B, E), function(A, F).;false;true
5;true,false,false;function(B, G).;false;false
5;true,false,false;function(B, G).;false;false
5;true,false,false;function(B, G).;false;false
5;false;function(B, H).;true;true
5;false;function(B, H).;true;true
5;false;function(B, H).;true;true
5;false,true;function(A, H).;false;true
5;false,true;function(A, H).;false;true
5;false,true;function(A, H).;false;true
5;false,true,false;function(A, I).;false;false
5;false,true,false;function(A, I).;false;false
5;false,true,false;function(A, I).;false;false
5;false,false;function(A, J).;false;false
5;false,false;function(A, J).;false;false
5;false,false;function(A, J).;false;false
6;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
6;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
6;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
6;true;function(B, D), function(A, D).;false;true
6;true;function(B, D), function(A, D).;false;true
6;true;function(B, D), function(A, D).;false;true
6;true,false;function(A, E), function(B, F).;false;true
6;true,false;function(A, E), function(B, F).;false;true
6;true,false;function(A, E), function(B, F).;false;true
6;true,false,false;function(B, G).;false;false
6;true,false,false;function(B, G).;false;false
6;true,false,false;function(B, G).;false;false
6;false;function(B, H).;true;true
6;false;function(B, H).;true;true
6;false;function(B, H).;true;true
6;false,true;function(A, H).;false;true
6;false,true;function(A, H).;false;true
6;false,true;function(A, H).;false;true
6;false,true,false;function(A, I).;false;false
6;false,true,false;function(A, I).;false;false
6;false,true,false;function(A, I).;false;false
6;false,false;function(A, J).;false;false
6;false,false;function(A, J).;false;false
6;false,false;function(A, J).;false;false
7;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
7;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
7;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
7;true;function(A, D), function(B, D).;false;true
7;true;function(A, D), function(B, D).;false;true
7;true;function(A, D), function(B, D).;false;true
7;true,false;function(B, E), function(A, F).;false;true
7;true,false;function(B, E), function(A, F).;false;true
7;true,false;function(B, E), function(A, F).;false;true
7;true,false,false;function(B, G).;false;false
7;true,false,false;function(B, G).;false;false
7;true,false,false;function(B, G).;false;false
7;false;function(B, H).;true;true
7;false;function(B, H).;true;true
7;false;function(B, H).;true;true
7;false,true;function(A, H).;false;true
7;false,true;function(A, H).;false;true
7;false,true;function(A, H).;false;true
7;false,true,false;function(A, I).;false;false
7;false,true,false;function(A, I).;false;false
7;false,true,false;function(A, I).;false;false
7;false,false;function(A, J).;false;false
7;false,false;function(A, J).;false;false
7;false,false;function(A, J).;false;false
8;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
8;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
8;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
8;true;function(A, D), function(B, D).;false;true
8;true;function(A, D), function(B, D).;false;true
8;true;function(A, D), function(B, D).;false;true
8;true,false;function(A, E), function(B, F).;false;true
8;true,false;function(A, E), function(B, F).;false;true
8;true,false;function(A, E), function(B, F).;false;true
8;true,false,false;function(B, G).;false;false
8;true,false,false;function(B, G).;false;false
8;true,false,false;function(B, G).;false;false
8;false;function(B, H).;true;true
8;false;function(B, H).;true;true
8;false;function(B, H).;true;true
8;false,true;function(A, H).;false;true
8;false,true;function(A, H).;false;true
8;false,true;function(A, H).;false;true
8;false,true,false;function(A, I).;false;false
8;false,true,false;function(A, I).;false;false
8;false,true,false;function(A, I).;false;false
8;false,false;function(A, J).;false;false
8;false,false;function(A, J).;false;false
8;false,false;function(A, J).;false;false
9;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
9;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
9;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
9;true;function(A, D), function(B, D).;false;true
9;true;function(A, D), function(B, D).;false;true
9;true;function(A, D), function(B, D).;false;true
9;true,false;function(B, E), function(A, F).;false;true
9;true,false;function(B, E), function(A, F).;false;true
9;true,false;function(B, E), function(A, F).;false;true
9;true,false,false;function(B, G).;false;false
9;true,false,false;function(B, G).;false;false
9;true,false,false;function(B, G).;false;false
9;false;function(B, H).;true;true
9;false;function(B, H).;true;true
9;false;function(B, H).;true;true
9;false,true;function(A, H).;false;true
9;false,true;function(A, H).;false;true
9;false,true;function(A, H).;false;true
9;false,true,false;function(A, I).;false;false
9;false,true,false;function(A, I).;false;false
9;false,true,false;function(A, I).;false;false
9;false,false;function(A, J).;false;false
9;false,false;function(A, J).;false;false
9;false,false;function(A, J).;false;false






WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.7321646831310048;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.3262340414824902;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.46835301673216045;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.23141626183218056;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3709694479200248;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.7321646831310048;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.3262340414824902;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.46835301673216045;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.23141626183218056;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3709694479200248;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.7321646831310048;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.3262340414824902;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.46835301673216045;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.23141626183218056;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3709694479200248;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.6182007830639386;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.28171422482890246;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.4013170162673985;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.2008489419404786;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3195707324298151;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.6182007830639386;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.28171422482890246;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.4013170162673985;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.2008489419404786;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3195707324298151;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.6182007830639386;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.28171422482890246;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.4013170162673985;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.2008489419404786;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3195707324298151;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.484568085605645;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.23519292070564615;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, G), function(B, G) )
%   | then return 0.3273463054812131;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.17028125601190675;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.26484890423013485;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.484568085605645;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.23519292070564615;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, G), function(B, G) )
%   | then return 0.3273463054812131;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.17028125601190675;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.26484890423013485;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.484568085605645;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.23519292070564615;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, G), function(B, G) )
%   | then return 0.3273463054812131;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.17028125601190675;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.26484890423013485;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.36528324812435614;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.19057755295478856;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.2565427055588793;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1413387994693832;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.2122559513279361;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.36528324812435614;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.19057755295478856;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.2565427055588793;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1413387994693832;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.2122559513279361;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.36528324812435614;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.19057755295478856;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.2565427055588793;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1413387994693832;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.2122559513279361;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.27527600052204043;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.15080101353659994;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.19595833641095553;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1152146941248648;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.16584376403710083;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.27527600052204043;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.15080101353659994;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.19595833641095553;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1152146941248648;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.16584376403710083;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.27527600052204043;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.15080101353659994;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.19595833641095553;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1152146941248648;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.16584376403710083;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.21128375211260753;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.11727501093763941;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.14775390354734844;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.09254875351524673;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.12737818535099144;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.21128375211260753;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.11727501093763941;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.14775390354734844;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.09254875351524673;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.12737818535099144;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.21128375211260753;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.11727501093763941;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.14775390354734844;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.09254875351524673;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.12737818535099144;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.16579122949997996;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.09012256866998798;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.11088626020987527;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.07348850098470627;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.09680041930186449;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.16579122949997996;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.09012256866998798;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.11088626020987527;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.07348850098470627;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.09680041930186449;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.16579122949997996;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.09012256866998798;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.11088626020987527;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.07348850098470627;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.09680041930186449;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.13274806914910878;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.06871315573496113;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.08319102379957895;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.057839200066892756;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.073108913239958;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.13274806914910878;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.06871315573496113;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.08319102379957895;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.057839200066892756;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.073108913239958;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.13274806914910878;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.06871315573496113;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.08319102379957895;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.057839200066892756;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.073108913239958;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.10811348660127582;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.05212246791353032;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.06251236736817915;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.04521858206590193;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.05502576330041963;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.10811348660127582;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.05212246791353032;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.06251236736817915;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.04521858206590193;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.05502576330041963;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.10811348660127582;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.05212246791353032;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.06251236736817915;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.04521858206590193;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.05502576330041963;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.08928867348059323;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.039407136735360955;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.04707750221522494;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.03517453997163866;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.04133900640598988;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.08928867348059323;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.039407136735360955;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.04707750221522494;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.03517453997163866;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.04133900640598988;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.08928867348059323;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.039407136735360955;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.04707750221522494;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.03517453997163866;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.04133900640598988;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.






Results
Results
Results
   AUC ROC   = 0.64196
   AUC ROC   = 0.64196
   AUC ROC   = 0.64196
   AUC PR    = 0.632509
   AUC PR    = 0.632509
   AUC PR    = 0.632509
   CLL	      = -0.657242
   CLL	      = -0.657242
   CLL	      = -0.657242
   Precision = 0.615908 at threshold = 0.5
   Precision = 0.615908 at threshold = 0.5
   Precision = 0.615908 at threshold = 0.5
   Recall    = 0.671747
   Recall    = 0.671747
   Recall    = 0.671747
   F1        = 0.642617
   F1        = 0.642617
   F1        = 0.642617






Total learning time: 39.54 seconds
Total learning time: 39.54 seconds
Total learning time: 39.54 seconds
Total inference time: 2.183 seconds
Total inference time: 2.183 seconds
Total inference time: 2.183 seconds
AUC ROC: 0.64196
AUC ROC: 0.64196
AUC ROC: 0.64196






Structure after Parameter Learning
Structure after Parameter Learning
Structure after Parameter Learning
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(A, G), function(B, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(A, G), function(B, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(A, G), function(B, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
{'': [0.15350823942341021, 0.24929802781329008], 'false': [0.23785506039152596, 0.2346018297994732], 'false,false': [0.23460182979947367, nan], 'true': [0.1101122202244454, 0.24898143956541524], 'true,false': [0.24898143956541524, nan]}
{'': [0.15350823942341021, 0.24929802781329008], 'false': [0.23785506039152596, 0.2346018297994732], 'false,false': [0.23460182979947367, nan], 'true': [0.1101122202244454, 0.24898143956541524], 'true,false': [0.24898143956541524, nan]}
{'': [0.15350823942341021, 0.24929802781329008], 'false': [0.23785506039152596, 0.2346018297994732], 'false,false': [0.23460182979947367, nan], 'true': [0.1101122202244454, 0.24898143956541524], 'true,false': [0.24898143956541524, nan]}
{'': [0.1467149227757434, 0.24544772536915183], 'false': [0.23785506039149654, 0.23450185190630202], 'false,false': [0.2345018519063027, nan], 'true': [0.11011222022443767, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1467149227757434, 0.24544772536915183], 'false': [0.23785506039149654, 0.23450185190630202], 'false,false': [0.2345018519063027, nan], 'true': [0.11011222022443767, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1467149227757434, 0.24544772536915183], 'false': [0.23785506039149654, 0.23450185190630202], 'false,false': [0.2345018519063027, nan], 'true': [0.11011222022443767, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1399902885252973, 0.24170235517391384], 'false': [0.2378550603915169, 0.23440611833627428], 'false,false': [0.23440611833627428, nan], 'true': [0.11011222022444243, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1399902885252973, 0.24170235517391384], 'false': [0.2378550603915169, 0.23440611833627428], 'false,false': [0.23440611833627428, nan], 'true': [0.11011222022444243, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1399902885252973, 0.24170235517391384], 'false': [0.2378550603915169, 0.23440611833627428], 'false,false': [0.23440611833627428, nan], 'true': [0.11011222022444243, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.13581784638924727, 0.23895111404591982], 'false': [0.23785506039149695, 0.23433339033496178], 'false,false': [0.2343333903349623, nan], 'true': [0.11011222022444034, 0.24898143956541452], 'true,false': [0.24898143956541452, nan]}
{'': [0.13581784638924727, 0.23895111404591982], 'false': [0.23785506039149695, 0.23433339033496178], 'false,false': [0.2343333903349623, nan], 'true': [0.11011222022444034, 0.24898143956541452], 'true,false': [0.24898143956541452, nan]}
{'': [0.13581784638924727, 0.23895111404591982], 'false': [0.23785506039149695, 0.23433339033496178], 'false,false': [0.2343333903349623, nan], 'true': [0.11011222022444034, 0.24898143956541452], 'true,false': [0.24898143956541452, nan]}
{'': [0.13383768114925532, 0.2373206687712768], 'false': [0.2378550603914989, 0.23428756710087567], 'false,false': [0.23428756710087603, nan], 'true': [0.11011222022443964, 0.24898143956541383], 'true,false': [0.24898143956541383, nan]}
{'': [0.13383768114925532, 0.2373206687712768], 'false': [0.2378550603914989, 0.23428756710087567], 'false,false': [0.23428756710087603, nan], 'true': [0.11011222022443964, 0.24898143956541383], 'true,false': [0.24898143956541383, nan]}
{'': [0.13383768114925532, 0.2373206687712768], 'false': [0.2378550603914989, 0.23428756710087567], 'false,false': [0.23428756710087603, nan], 'true': [0.11011222022443964, 0.24898143956541383], 'true,false': [0.24898143956541383, nan]}
{'': [0.13296060636954468, 0.2364820439207477], 'false': [0.23633133928866215, 0.24983563445101917], 'false,false': [0.24983563445101917, nan], 'false,true': [0.2378550603915007, 0.23393882952651093], 'true': [0.11011222022444135, 0.24898143956541466], 'true,false': [0.24898143956541466, nan]}
{'': [0.13296060636954468, 0.2364820439207477], 'false': [0.23633133928866215, 0.24983563445101917], 'false,false': [0.24983563445101917, nan], 'false,true': [0.2378550603915007, 0.23393882952651093], 'true': [0.11011222022444135, 0.24898143956541466], 'true,false': [0.24898143956541466, nan]}
{'': [0.13296060636954468, 0.2364820439207477], 'false': [0.23633133928866215, 0.24983563445101917], 'false,false': [0.24983563445101917, nan], 'false,true': [0.2378550603915007, 0.23393882952651093], 'true': [0.11011222022444135, 0.24898143956541466], 'true,false': [0.24898143956541466, nan]}
{'': [0.132550568637064, 0.23608363109221323], 'false': [0.2359293238134652, 0.24983563445101892], 'false,false': [0.24983563445101892, nan], 'false,true': [0.2378550603915106, 0.23393882952652967], 'true': [0.1101122202244407, 0.24898143956541408], 'true,false': [0.24898143956541408, nan]}
{'': [0.132550568637064, 0.23608363109221323], 'false': [0.2359293238134652, 0.24983563445101892], 'false,false': [0.24983563445101892, nan], 'false,true': [0.2378550603915106, 0.23393882952652967], 'true': [0.1101122202244407, 0.24898143956541408], 'true,false': [0.24898143956541408, nan]}
{'': [0.132550568637064, 0.23608363109221323], 'false': [0.2359293238134652, 0.24983563445101892], 'false,false': [0.24983563445101892, nan], 'false,true': [0.2378550603915106, 0.23393882952652967], 'true': [0.1101122202244407, 0.24898143956541408], 'true,false': [0.24898143956541408, nan]}
{'': [0.1323364148635707, 0.23590099717487653], 'false': [0.23574504762229387, 0.24983563445101922], 'false,false': [0.24983563445101922, nan], 'false,true': [0.2378550603915064, 0.23393882952652786], 'true': [0.11011222022444085, 0.24898143956541424], 'true,false': [0.24898143956541424, nan]}
{'': [0.1323364148635707, 0.23590099717487653], 'false': [0.23574504762229387, 0.24983563445101922], 'false,false': [0.24983563445101922, nan], 'false,true': [0.2378550603915064, 0.23393882952652786], 'true': [0.11011222022444085, 0.24898143956541424], 'true,false': [0.24898143956541424, nan]}
{'': [0.1323364148635707, 0.23590099717487653], 'false': [0.23574504762229387, 0.24983563445101922], 'false,false': [0.24983563445101922, nan], 'false,true': [0.2378550603915064, 0.23393882952652786], 'true': [0.11011222022444085, 0.24898143956541424], 'true,false': [0.24898143956541424, nan]}
{'': [0.13220919935780845, 0.23581798581592345], 'false': [0.23566127125865519, 0.24983563445101908], 'false,false': [0.24983563445101908, nan], 'false,true': [0.23785506039150842, 0.23393882952652453], 'true': [0.11011222022444023, 0.2489814395654141], 'true,false': [0.2489814395654141, nan]}
{'': [0.13220919935780845, 0.23581798581592345], 'false': [0.23566127125865519, 0.24983563445101908], 'false,false': [0.24983563445101908, nan], 'false,true': [0.23785506039150842, 0.23393882952652453], 'true': [0.11011222022444023, 0.2489814395654141], 'true,false': [0.2489814395654141, nan]}
{'': [0.13220919935780845, 0.23581798581592345], 'false': [0.23566127125865519, 0.24983563445101908], 'false,false': [0.24983563445101908, nan], 'false,true': [0.23785506039150842, 0.23393882952652453], 'true': [0.11011222022444023, 0.2489814395654141], 'true,false': [0.2489814395654141, nan]}
{'': [0.1321239705595983, 0.2357799833982129], 'false': [0.23562289988006616, 0.24983563445101914], 'false,false': [0.24983563445101914, nan], 'false,true': [0.23785506039150503, 0.2339388295265198], 'true': [0.11011222022444032, 0.24898143956541377], 'true,false': [0.24898143956541377, nan]}
{'': [0.1321239705595983, 0.2357799833982129], 'false': [0.23562289988006616, 0.24983563445101914], 'false,false': [0.24983563445101914, nan], 'false,true': [0.23785506039150503, 0.2339388295265198], 'true': [0.11011222022444032, 0.24898143956541377], 'true,false': [0.24898143956541377, nan]}
{'': [0.1321239705595983, 0.2357799833982129], 'false': [0.23562289988006616, 0.24983563445101914], 'false,false': [0.24983563445101914, nan], 'false,true': [0.23785506039150503, 0.2339388295265198], 'true': [0.11011222022444032, 0.24898143956541377], 'true,false': [0.24898143956541377, nan]}






******************************************
******************************************
******************************************
Performing Theory Revision
Performing Theory Revision
Performing Theory Revision
******************************************
******************************************
******************************************
'false,false,true'
'false,false,true'
'false,false,true'
Error in experiment of twitter->yeast
Error in experiment of twitter->yeast
Error in experiment of twitter->yeast
Starting experiment #1 for twitter->yeast

Starting experiment #1 for twitter->yeast

Starting experiment #1 for twitter->yeast

Starting experiment #1 for twitter->yeast

Start learning from source dataset

Start learning from source dataset

Start learning from source dataset

Start learning from source dataset

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.31131052760536243;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06993932811261194;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5936949736434047;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.23638727706842558;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1487472256978015;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6415884255453697;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.31131052760536243;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06993932811261194;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5936949736434047;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.23638727706842558;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1487472256978015;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6415884255453697;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.31131052760536243;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06993932811261194;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5936949736434047;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.23638727706842558;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1487472256978015;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6415884255453697;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.31131052760536243;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06993932811261194;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5936949736434047;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.23638727706842558;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1487472256978015;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6415884255453697;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.26904308058139953;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.022753514022364314;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.08687974972962019;  // std dev = 7,150, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.5051905517056273;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.20510948611662866;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1296585851710834;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.5444834602885373;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.26904308058139953;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.022753514022364314;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.08687974972962019;  // std dev = 7,150, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.5051905517056273;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.20510948611662866;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1296585851710834;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.5444834602885373;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.26904308058139953;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.022753514022364314;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.08687974972962019;  // std dev = 7,150, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.5051905517056273;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.20510948611662866;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1296585851710834;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.5444834602885373;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.26904308058139953;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.022753514022364314;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.08687974972962019;  // std dev = 7,150, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.5051905517056273;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.20510948611662866;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1296585851710834;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.5444834602885373;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.2251629074734654;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.01982001727117023;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.07547087036960165;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.40398085775681314;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.17375466875970053;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11137140369626213;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.43227582690035005;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.2251629074734654;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.01982001727117023;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.07547087036960165;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.40398085775681314;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.17375466875970053;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11137140369626213;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.43227582690035005;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.2251629074734654;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.01982001727117023;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.07547087036960165;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.40398085775681314;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.17375466875970053;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11137140369626213;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.43227582690035005;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.2251629074734654;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.01982001727117023;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.07547087036960165;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.40398085775681314;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.17375466875970053;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11137140369626213;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.43227582690035005;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.18313417683133237;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01722674183161882;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06499960569768067;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.30928769511060755;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14403887646406802;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.09439937096602727;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.32872809626472155;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.18313417683133237;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01722674183161882;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06499960569768067;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.30928769511060755;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14403887646406802;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.09439937096602727;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.32872809626472155;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.18313417683133237;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01722674183161882;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06499960569768067;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.30928769511060755;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14403887646406802;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.09439937096602727;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.32872809626472155;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.18313417683133237;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01722674183161882;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06499960569768067;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.30928769511060755;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14403887646406802;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.09439937096602727;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.32872809626472155;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.1455585515025414;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01494386931498094;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.055555326017059925;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23250755639381143;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11722526031071193;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.07908428286053523;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.24673667513713926;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.1455585515025414;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01494386931498094;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.055555326017059925;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23250755639381143;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11722526031071193;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.07908428286053523;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.24673667513713926;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.1455585515025414;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01494386931498094;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.055555326017059925;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23250755639381143;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11722526031071193;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.07908428286053523;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.24673667513713926;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.1455585515025414;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01494386931498094;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.055555326017059925;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23250755639381143;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11722526031071193;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.07908428286053523;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.24673667513713926;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11372159178628172;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.012941633918787674;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.04716676146255043;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.1746839244775868;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.0939898922564742;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.18623935109027454;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.0655941935369208;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11372159178628172;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.012941633918787674;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.04716676146255043;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.1746839244775868;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.0939898922564742;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.18623935109027454;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.0655941935369208;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11372159178628172;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.012941633918787674;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.04716676146255043;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.1746839244775868;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.0939898922564742;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.18623935109027454;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.0655941935369208;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11372159178628172;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.012941633918787674;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.04716676146255043;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.1746839244775868;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.0939898922564742;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.18623935109027454;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.0655941935369208;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08777711205597939;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.011191164195034213;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03981389165384334;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.13221940124227713;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07448638412101843;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.14236015691334833;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.053950196907977414;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08777711205597939;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.011191164195034213;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03981389165384334;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.13221940124227713;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07448638412101843;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.14236015691334833;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.053950196907977414;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08777711205597939;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.011191164195034213;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03981389165384334;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.13221940124227713;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07448638412101843;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.14236015691334833;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.053950196907977414;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08777711205597939;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.011191164195034213;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03981389165384334;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.13221940124227713;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07448638412101843;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.14236015691334833;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.053950196907977414;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06719346751014121;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.009665066912476093;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.0334413529220261;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.10104744105043595;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05850731238683171;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11030155755664867;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.044066289665896534;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06719346751014121;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.009665066912476093;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.0334413529220261;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.10104744105043595;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05850731238683171;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11030155755664867;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.044066289665896534;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06719346751014121;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.009665066912476093;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.0334413529220261;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.10104744105043595;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05850731238683171;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11030155755664867;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.044066289665896534;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06719346751014121;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.009665066912476093;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.0334413529220261;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.10104744105043595;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05850731238683171;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11030155755664867;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.044066289665896534;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.051151957233311715;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.00833779905076543;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.027971097700531296;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.07794711889426041;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.045649849825700986;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.08651110070997214;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.03578969600106187;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.051151957233311715;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.00833779905076543;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.027971097700531296;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.07794711889426041;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.045649849825700986;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.08651110070997214;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.03578969600106187;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.051151957233311715;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.00833779905076543;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.027971097700531296;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.07794711889426041;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.045649849825700986;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.08651110070997214;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.03578969600106187;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.051151957233311715;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.00833779905076543;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.027971097700531296;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.07794711889426041;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.045649849825700986;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.08651110070997214;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.03578969600106187;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038795895256089515;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.007185872846865357;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.03455359731927674;  // std dev = 6,600, 233,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=58 */
%   | | | else return 0.022402612486216292;  // std dev = 7,459, 257,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=85 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.0606179950996989;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03544054826900334;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.0685553939062814;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.028934481462948563;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038795895256089515;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.007185872846865357;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.03455359731927674;  // std dev = 6,600, 233,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=58 */
%   | | | else return 0.022402612486216292;  // std dev = 7,459, 257,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=85 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.0606179950996989;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03544054826900334;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.0685553939062814;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.028934481462948563;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038795895256089515;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.007185872846865357;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.03455359731927674;  // std dev = 6,600, 233,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=58 */
%   | | | else return 0.022402612486216292;  // std dev = 7,459, 257,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=85 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.0606179950996989;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03544054826900334;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.0685553939062814;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.028934481462948563;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038795895256089515;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.007185872846865357;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.03455359731927674;  // std dev = 6,600, 233,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=58 */
%   | | | else return 0.022402612486216292;  // std dev = 7,459, 257,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=85 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.0606179950996989;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03544054826900334;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.0685553939062814;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.028934481462948563;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */








Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).']

Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).']

Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).']

Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).']

Starting fold 1

Starting fold 1

Starting fold 1

Starting fold 1

Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> phenotype(A,B)', 'tweets(A,B) -> function(A,B)'] 

Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> phenotype(A,B)', 'tweets(A,B) -> function(A,B)'] 

Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> phenotype(A,B)', 'tweets(A,B) -> function(A,B)'] 

Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> phenotype(A,B)', 'tweets(A,B) -> function(A,B)'] 

Transferred target predicate: interaction 

Transferred target predicate: interaction 

Transferred target predicate: interaction 

Transferred target predicate: interaction 

******************************************
******************************************
******************************************
******************************************
Performing Parameter Learning
Performing Parameter Learning
Performing Parameter Learning
Performing Parameter Learning
******************************************
******************************************
******************************************
******************************************
Refine
Refine
Refine
Refine
0;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
0;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
0;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
0;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
0;true;function(A, D), function(B, D).;false;true
0;true;function(A, D), function(B, D).;false;true
0;true;function(A, D), function(B, D).;false;true
0;true;function(A, D), function(B, D).;false;true
0;true,false;function(A, E).;false;true
0;true,false;function(A, E).;false;true
0;true,false;function(A, E).;false;true
0;true,false;function(A, E).;false;true
0;true,false,false;function(B, F).;false;false
0;true,false,false;function(B, F).;false;false
0;true,false,false;function(B, F).;false;false
0;true,false,false;function(B, F).;false;false
0;false;function(B, G), function(A, G).;false;true
0;false;function(B, G), function(A, G).;false;true
0;false;function(B, G), function(A, G).;false;true
0;false;function(B, G), function(A, G).;false;true
0;false,false;function(A, H).;true;true
0;false,false;function(A, H).;true;true
0;false,false;function(A, H).;true;true
0;false,false;function(A, H).;true;true
0;false,false,true;function(B, I).;false;false
0;false,false,true;function(B, I).;false;false
0;false,false,true;function(B, I).;false;false
0;false,false,true;function(B, I).;false;false
0;false,false,false;function(B, J).;false;false
0;false,false,false;function(B, J).;false;false
0;false,false,false;function(B, J).;false;false
0;false,false,false;function(B, J).;false;false
1;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
1;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
1;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
1;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
1;true;function(A, D), function(B, D).;false;true
1;true;function(A, D), function(B, D).;false;true
1;true;function(A, D), function(B, D).;false;true
1;true;function(A, D), function(B, D).;false;true
1;true,false;function(A, E), function(B, F).;false;true
1;true,false;function(A, E), function(B, F).;false;true
1;true,false;function(A, E), function(B, F).;false;true
1;true,false;function(A, E), function(B, F).;false;true
1;true,false,false;function(B, G).;false;false
1;true,false,false;function(B, G).;false;false
1;true,false,false;function(B, G).;false;false
1;true,false,false;function(B, G).;false;false
1;false;function(B, H), function(A, H).;false;true
1;false;function(B, H), function(A, H).;false;true
1;false;function(B, H), function(A, H).;false;true
1;false;function(B, H), function(A, H).;false;true
1;false,false;function(A, I).;true;true
1;false,false;function(A, I).;true;true
1;false,false;function(A, I).;true;true
1;false,false;function(A, I).;true;true
1;false,false,true;function(B, J).;false;false
1;false,false,true;function(B, J).;false;false
1;false,false,true;function(B, J).;false;false
1;false,false,true;function(B, J).;false;false
1;false,false,false;function(B, K).;false;false
1;false,false,false;function(B, K).;false;false
1;false,false,false;function(B, K).;false;false
1;false,false,false;function(B, K).;false;false
2;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
2;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
2;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
2;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
2;true;function(A, D), function(B, D).;false;true
2;true;function(A, D), function(B, D).;false;true
2;true;function(A, D), function(B, D).;false;true
2;true;function(A, D), function(B, D).;false;true
2;true,false;function(B, E), function(A, F).;false;true
2;true,false;function(B, E), function(A, F).;false;true
2;true,false;function(B, E), function(A, F).;false;true
2;true,false;function(B, E), function(A, F).;false;true
2;true,false,false;function(B, G).;false;false
2;true,false,false;function(B, G).;false;false
2;true,false,false;function(B, G).;false;false
2;true,false,false;function(B, G).;false;false
2;false;function(A, H), function(B, H).;false;true
2;false;function(A, H), function(B, H).;false;true
2;false;function(A, H), function(B, H).;false;true
2;false;function(A, H), function(B, H).;false;true
2;false,false;function(A, I).;true;true
2;false,false;function(A, I).;true;true
2;false,false;function(A, I).;true;true
2;false,false;function(A, I).;true;true
2;false,false,true;function(B, J).;false;false
2;false,false,true;function(B, J).;false;false
2;false,false,true;function(B, J).;false;false
2;false,false,true;function(B, J).;false;false
2;false,false,false;function(B, K).;false;false
2;false,false,false;function(B, K).;false;false
2;false,false,false;function(B, K).;false;false
2;false,false,false;function(B, K).;false;false
3;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
3;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
3;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
3;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
3;true;function(B, D), function(A, D).;false;true
3;true;function(B, D), function(A, D).;false;true
3;true;function(B, D), function(A, D).;false;true
3;true;function(B, D), function(A, D).;false;true
3;true,false;function(A, E), function(B, F).;false;true
3;true,false;function(A, E), function(B, F).;false;true
3;true,false;function(A, E), function(B, F).;false;true
3;true,false;function(A, E), function(B, F).;false;true
3;true,false,false;function(B, G).;false;false
3;true,false,false;function(B, G).;false;false
3;true,false,false;function(B, G).;false;false
3;true,false,false;function(B, G).;false;false
3;false;function(B, H), function(A, H).;false;true
3;false;function(B, H), function(A, H).;false;true
3;false;function(B, H), function(A, H).;false;true
3;false;function(B, H), function(A, H).;false;true
3;false,false;function(A, I).;true;true
3;false,false;function(A, I).;true;true
3;false,false;function(A, I).;true;true
3;false,false;function(A, I).;true;true
3;false,false,true;function(B, J).;false;false
3;false,false,true;function(B, J).;false;false
3;false,false,true;function(B, J).;false;false
3;false,false,true;function(B, J).;false;false
3;false,false,false;function(B, K).;false;false
3;false,false,false;function(B, K).;false;false
3;false,false,false;function(B, K).;false;false
3;false,false,false;function(B, K).;false;false
4;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
4;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
4;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
4;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
4;true;function(A, D), function(B, D).;false;true
4;true;function(A, D), function(B, D).;false;true
4;true;function(A, D), function(B, D).;false;true
4;true;function(A, D), function(B, D).;false;true
4;true,false;function(A, E), function(B, F).;false;true
4;true,false;function(A, E), function(B, F).;false;true
4;true,false;function(A, E), function(B, F).;false;true
4;true,false;function(A, E), function(B, F).;false;true
4;true,false,false;function(B, G).;false;false
4;true,false,false;function(B, G).;false;false
4;true,false,false;function(B, G).;false;false
4;true,false,false;function(B, G).;false;false
4;false;function(B, H), function(A, H).;false;true
4;false;function(B, H), function(A, H).;false;true
4;false;function(B, H), function(A, H).;false;true
4;false;function(B, H), function(A, H).;false;true
4;false,false;function(A, I).;true;true
4;false,false;function(A, I).;true;true
4;false,false;function(A, I).;true;true
4;false,false;function(A, I).;true;true
4;false,false,true;function(B, J).;false;false
4;false,false,true;function(B, J).;false;false
4;false,false,true;function(B, J).;false;false
4;false,false,true;function(B, J).;false;false
4;false,false,false;function(B, K).;false;false
4;false,false,false;function(B, K).;false;false
4;false,false,false;function(B, K).;false;false
4;false,false,false;function(B, K).;false;false
5;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
5;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
5;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
5;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
5;true;function(A, D), function(B, D).;false;true
5;true;function(A, D), function(B, D).;false;true
5;true;function(A, D), function(B, D).;false;true
5;true;function(A, D), function(B, D).;false;true
5;true,false;function(B, E), function(A, F).;false;true
5;true,false;function(B, E), function(A, F).;false;true
5;true,false;function(B, E), function(A, F).;false;true
5;true,false;function(B, E), function(A, F).;false;true
5;true,false,false;function(B, G).;false;false
5;true,false,false;function(B, G).;false;false
5;true,false,false;function(B, G).;false;false
5;true,false,false;function(B, G).;false;false
5;false;function(B, H).;true;true
5;false;function(B, H).;true;true
5;false;function(B, H).;true;true
5;false;function(B, H).;true;true
5;false,true;function(A, H).;false;true
5;false,true;function(A, H).;false;true
5;false,true;function(A, H).;false;true
5;false,true;function(A, H).;false;true
5;false,true,false;function(A, I).;false;false
5;false,true,false;function(A, I).;false;false
5;false,true,false;function(A, I).;false;false
5;false,true,false;function(A, I).;false;false
5;false,false;function(A, J).;false;false
5;false,false;function(A, J).;false;false
5;false,false;function(A, J).;false;false
5;false,false;function(A, J).;false;false
6;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
6;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
6;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
6;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
6;true;function(B, D), function(A, D).;false;true
6;true;function(B, D), function(A, D).;false;true
6;true;function(B, D), function(A, D).;false;true
6;true;function(B, D), function(A, D).;false;true
6;true,false;function(A, E), function(B, F).;false;true
6;true,false;function(A, E), function(B, F).;false;true
6;true,false;function(A, E), function(B, F).;false;true
6;true,false;function(A, E), function(B, F).;false;true
6;true,false,false;function(B, G).;false;false
6;true,false,false;function(B, G).;false;false
6;true,false,false;function(B, G).;false;false
6;true,false,false;function(B, G).;false;false
6;false;function(B, H).;true;true
6;false;function(B, H).;true;true
6;false;function(B, H).;true;true
6;false;function(B, H).;true;true
6;false,true;function(A, H).;false;true
6;false,true;function(A, H).;false;true
6;false,true;function(A, H).;false;true
6;false,true;function(A, H).;false;true
6;false,true,false;function(A, I).;false;false
6;false,true,false;function(A, I).;false;false
6;false,true,false;function(A, I).;false;false
6;false,true,false;function(A, I).;false;false
6;false,false;function(A, J).;false;false
6;false,false;function(A, J).;false;false
6;false,false;function(A, J).;false;false
6;false,false;function(A, J).;false;false
7;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
7;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
7;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
7;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
7;true;function(A, D), function(B, D).;false;true
7;true;function(A, D), function(B, D).;false;true
7;true;function(A, D), function(B, D).;false;true
7;true;function(A, D), function(B, D).;false;true
7;true,false;function(B, E), function(A, F).;false;true
7;true,false;function(B, E), function(A, F).;false;true
7;true,false;function(B, E), function(A, F).;false;true
7;true,false;function(B, E), function(A, F).;false;true
7;true,false,false;function(B, G).;false;false
7;true,false,false;function(B, G).;false;false
7;true,false,false;function(B, G).;false;false
7;true,false,false;function(B, G).;false;false
7;false;function(B, H).;true;true
7;false;function(B, H).;true;true
7;false;function(B, H).;true;true
7;false;function(B, H).;true;true
7;false,true;function(A, H).;false;true
7;false,true;function(A, H).;false;true
7;false,true;function(A, H).;false;true
7;false,true;function(A, H).;false;true
7;false,true,false;function(A, I).;false;false
7;false,true,false;function(A, I).;false;false
7;false,true,false;function(A, I).;false;false
7;false,true,false;function(A, I).;false;false
7;false,false;function(A, J).;false;false
7;false,false;function(A, J).;false;false
7;false,false;function(A, J).;false;false
7;false,false;function(A, J).;false;false
8;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
8;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
8;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
8;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
8;true;function(A, D), function(B, D).;false;true
8;true;function(A, D), function(B, D).;false;true
8;true;function(A, D), function(B, D).;false;true
8;true;function(A, D), function(B, D).;false;true
8;true,false;function(A, E), function(B, F).;false;true
8;true,false;function(A, E), function(B, F).;false;true
8;true,false;function(A, E), function(B, F).;false;true
8;true,false;function(A, E), function(B, F).;false;true
8;true,false,false;function(B, G).;false;false
8;true,false,false;function(B, G).;false;false
8;true,false,false;function(B, G).;false;false
8;true,false,false;function(B, G).;false;false
8;false;function(B, H).;true;true
8;false;function(B, H).;true;true
8;false;function(B, H).;true;true
8;false;function(B, H).;true;true
8;false,true;function(A, H).;false;true
8;false,true;function(A, H).;false;true
8;false,true;function(A, H).;false;true
8;false,true;function(A, H).;false;true
8;false,true,false;function(A, I).;false;false
8;false,true,false;function(A, I).;false;false
8;false,true,false;function(A, I).;false;false
8;false,true,false;function(A, I).;false;false
8;false,false;function(A, J).;false;false
8;false,false;function(A, J).;false;false
8;false,false;function(A, J).;false;false
8;false,false;function(A, J).;false;false
9;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
9;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
9;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
9;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
9;true;function(A, D), function(B, D).;false;true
9;true;function(A, D), function(B, D).;false;true
9;true;function(A, D), function(B, D).;false;true
9;true;function(A, D), function(B, D).;false;true
9;true,false;function(B, E), function(A, F).;false;true
9;true,false;function(B, E), function(A, F).;false;true
9;true,false;function(B, E), function(A, F).;false;true
9;true,false;function(B, E), function(A, F).;false;true
9;true,false,false;function(A, G).;false;false
9;true,false,false;function(A, G).;false;false
9;true,false,false;function(A, G).;false;false
9;true,false,false;function(A, G).;false;false
9;false;function(B, H).;true;true
9;false;function(B, H).;true;true
9;false;function(B, H).;true;true
9;false;function(B, H).;true;true
9;false,true;function(A, H).;false;true
9;false,true;function(A, H).;false;true
9;false,true;function(A, H).;false;true
9;false,true;function(A, H).;false;true
9;false,true,false;function(A, I).;false;false
9;false,true,false;function(A, I).;false;false
9;false,true,false;function(A, I).;false;false
9;false,true,false;function(A, I).;false;false
9;false,false;function(A, J).;false;false
9;false,false;function(A, J).;false;false
9;false,false;function(A, J).;false;false
9;false,false;function(A, J).;false;false








WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.7321646831310048;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.3262340414824902;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.46835301673216045;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.23141626183218056;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3709694479200248;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.7321646831310048;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.3262340414824902;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.46835301673216045;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.23141626183218056;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3709694479200248;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.7321646831310048;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.3262340414824902;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.46835301673216045;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.23141626183218056;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3709694479200248;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.7321646831310048;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.3262340414824902;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.46835301673216045;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.23141626183218056;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3709694479200248;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.6182007830639386;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.28171422482890246;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.4013170162673985;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.2008489419404786;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3195707324298151;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.6182007830639386;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.28171422482890246;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.4013170162673985;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.2008489419404786;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3195707324298151;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.6182007830639386;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.28171422482890246;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.4013170162673985;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.2008489419404786;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3195707324298151;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.6182007830639386;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.28171422482890246;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.4013170162673985;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.2008489419404786;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3195707324298151;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.484568085605645;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.23519292070564615;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, G), function(B, G) )
%   | then return 0.3273463054812131;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.17028125601190675;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.26484890423013485;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.484568085605645;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.23519292070564615;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, G), function(B, G) )
%   | then return 0.3273463054812131;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.17028125601190675;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.26484890423013485;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.484568085605645;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.23519292070564615;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, G), function(B, G) )
%   | then return 0.3273463054812131;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.17028125601190675;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.26484890423013485;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.484568085605645;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.23519292070564615;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, G), function(B, G) )
%   | then return 0.3273463054812131;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.17028125601190675;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.26484890423013485;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.36528324812435614;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.19057755295478856;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.2565427055588793;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1413387994693832;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.2122559513279361;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.36528324812435614;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.19057755295478856;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.2565427055588793;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1413387994693832;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.2122559513279361;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.36528324812435614;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.19057755295478856;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.2565427055588793;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1413387994693832;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.2122559513279361;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.36528324812435614;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.19057755295478856;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.2565427055588793;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1413387994693832;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.2122559513279361;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.27527600052204043;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.15080101353659994;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.19595833641095553;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1152146941248648;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.16584376403710083;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.27527600052204043;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.15080101353659994;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.19595833641095553;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1152146941248648;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.16584376403710083;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.27527600052204043;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.15080101353659994;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.19595833641095553;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1152146941248648;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.16584376403710083;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.27527600052204043;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.15080101353659994;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.19595833641095553;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1152146941248648;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.16584376403710083;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.21128375211260753;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.11727501093763941;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.14775390354734844;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.09254875351524673;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.12737818535099144;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.21128375211260753;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.11727501093763941;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.14775390354734844;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.09254875351524673;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.12737818535099144;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.21128375211260753;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.11727501093763941;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.14775390354734844;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.09254875351524673;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.12737818535099144;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.21128375211260753;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.11727501093763941;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.14775390354734844;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.09254875351524673;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.12737818535099144;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.16579122949997996;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.09012256866998798;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.11088626020987527;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.07348850098470627;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.09680041930186449;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.16579122949997996;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.09012256866998798;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.11088626020987527;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.07348850098470627;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.09680041930186449;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.16579122949997996;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.09012256866998798;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.11088626020987527;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.07348850098470627;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.09680041930186449;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.16579122949997996;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.09012256866998798;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.11088626020987527;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.07348850098470627;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.09680041930186449;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.13274806914910878;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.06871315573496113;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.08319102379957895;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.057839200066892756;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.073108913239958;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.13274806914910878;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.06871315573496113;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.08319102379957895;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.057839200066892756;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.073108913239958;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.13274806914910878;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.06871315573496113;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.08319102379957895;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.057839200066892756;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.073108913239958;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.13274806914910878;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.06871315573496113;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.08319102379957895;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.057839200066892756;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.073108913239958;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.10811348660127582;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.05212246791353032;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.06251236736817915;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.04521858206590193;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.05502576330041963;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.10811348660127582;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.05212246791353032;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.06251236736817915;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.04521858206590193;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.05502576330041963;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.10811348660127582;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.05212246791353032;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.06251236736817915;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.04521858206590193;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.05502576330041963;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.10811348660127582;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.05212246791353032;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.06251236736817915;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.04521858206590193;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.05502576330041963;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.08928867348059323;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.039407136735360955;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.04707750221522494;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.03517453997163866;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.04133900640598988;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.08928867348059323;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.039407136735360955;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.04707750221522494;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.03517453997163866;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.04133900640598988;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.08928867348059323;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.039407136735360955;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.04707750221522494;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.03517453997163866;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.04133900640598988;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.08928867348059323;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.039407136735360955;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.04707750221522494;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.03517453997163866;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.04133900640598988;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.








Results
Results
Results
Results
   AUC ROC   = 0.64196
   AUC ROC   = 0.64196
   AUC ROC   = 0.64196
   AUC ROC   = 0.64196
   AUC PR    = 0.632509
   AUC PR    = 0.632509
   AUC PR    = 0.632509
   AUC PR    = 0.632509
   CLL	      = -0.657242
   CLL	      = -0.657242
   CLL	      = -0.657242
   CLL	      = -0.657242
   Precision = 0.615908 at threshold = 0.5
   Precision = 0.615908 at threshold = 0.5
   Precision = 0.615908 at threshold = 0.5
   Precision = 0.615908 at threshold = 0.5
   Recall    = 0.671747
   Recall    = 0.671747
   Recall    = 0.671747
   Recall    = 0.671747
   F1        = 0.642617
   F1        = 0.642617
   F1        = 0.642617
   F1        = 0.642617








Total learning time: 50.841 seconds
Total learning time: 50.841 seconds
Total learning time: 50.841 seconds
Total learning time: 50.841 seconds
Total inference time: 2.142 seconds
Total inference time: 2.142 seconds
Total inference time: 2.142 seconds
Total inference time: 2.142 seconds
AUC ROC: 0.64196
AUC ROC: 0.64196
AUC ROC: 0.64196
AUC ROC: 0.64196








Structure after Parameter Learning
Structure after Parameter Learning
Structure after Parameter Learning
Structure after Parameter Learning
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(A, G), function(B, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(A, G), function(B, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(A, G), function(B, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(A, G), function(B, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
{'': [0.15350823942341021, 0.24929802781329008], 'false': [0.23785506039152596, 0.2346018297994732], 'false,false': [0.23460182979947367, nan], 'true': [0.1101122202244454, 0.24898143956541524], 'true,false': [0.24898143956541524, nan]}
{'': [0.15350823942341021, 0.24929802781329008], 'false': [0.23785506039152596, 0.2346018297994732], 'false,false': [0.23460182979947367, nan], 'true': [0.1101122202244454, 0.24898143956541524], 'true,false': [0.24898143956541524, nan]}
{'': [0.15350823942341021, 0.24929802781329008], 'false': [0.23785506039152596, 0.2346018297994732], 'false,false': [0.23460182979947367, nan], 'true': [0.1101122202244454, 0.24898143956541524], 'true,false': [0.24898143956541524, nan]}
{'': [0.15350823942341021, 0.24929802781329008], 'false': [0.23785506039152596, 0.2346018297994732], 'false,false': [0.23460182979947367, nan], 'true': [0.1101122202244454, 0.24898143956541524], 'true,false': [0.24898143956541524, nan]}
{'': [0.1467149227757434, 0.24544772536915183], 'false': [0.23785506039149654, 0.23450185190630202], 'false,false': [0.2345018519063027, nan], 'true': [0.11011222022443767, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1467149227757434, 0.24544772536915183], 'false': [0.23785506039149654, 0.23450185190630202], 'false,false': [0.2345018519063027, nan], 'true': [0.11011222022443767, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1467149227757434, 0.24544772536915183], 'false': [0.23785506039149654, 0.23450185190630202], 'false,false': [0.2345018519063027, nan], 'true': [0.11011222022443767, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1467149227757434, 0.24544772536915183], 'false': [0.23785506039149654, 0.23450185190630202], 'false,false': [0.2345018519063027, nan], 'true': [0.11011222022443767, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1399902885252973, 0.24170235517391384], 'false': [0.2378550603915169, 0.23440611833627428], 'false,false': [0.23440611833627428, nan], 'true': [0.11011222022444243, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1399902885252973, 0.24170235517391384], 'false': [0.2378550603915169, 0.23440611833627428], 'false,false': [0.23440611833627428, nan], 'true': [0.11011222022444243, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1399902885252973, 0.24170235517391384], 'false': [0.2378550603915169, 0.23440611833627428], 'false,false': [0.23440611833627428, nan], 'true': [0.11011222022444243, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1399902885252973, 0.24170235517391384], 'false': [0.2378550603915169, 0.23440611833627428], 'false,false': [0.23440611833627428, nan], 'true': [0.11011222022444243, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.13581784638924727, 0.23895111404591982], 'false': [0.23785506039149695, 0.23433339033496178], 'false,false': [0.2343333903349623, nan], 'true': [0.11011222022444034, 0.24898143956541452], 'true,false': [0.24898143956541452, nan]}
{'': [0.13581784638924727, 0.23895111404591982], 'false': [0.23785506039149695, 0.23433339033496178], 'false,false': [0.2343333903349623, nan], 'true': [0.11011222022444034, 0.24898143956541452], 'true,false': [0.24898143956541452, nan]}
{'': [0.13581784638924727, 0.23895111404591982], 'false': [0.23785506039149695, 0.23433339033496178], 'false,false': [0.2343333903349623, nan], 'true': [0.11011222022444034, 0.24898143956541452], 'true,false': [0.24898143956541452, nan]}
{'': [0.13581784638924727, 0.23895111404591982], 'false': [0.23785506039149695, 0.23433339033496178], 'false,false': [0.2343333903349623, nan], 'true': [0.11011222022444034, 0.24898143956541452], 'true,false': [0.24898143956541452, nan]}
{'': [0.13383768114925532, 0.2373206687712768], 'false': [0.2378550603914989, 0.23428756710087567], 'false,false': [0.23428756710087603, nan], 'true': [0.11011222022443964, 0.24898143956541383], 'true,false': [0.24898143956541383, nan]}
{'': [0.13383768114925532, 0.2373206687712768], 'false': [0.2378550603914989, 0.23428756710087567], 'false,false': [0.23428756710087603, nan], 'true': [0.11011222022443964, 0.24898143956541383], 'true,false': [0.24898143956541383, nan]}
{'': [0.13383768114925532, 0.2373206687712768], 'false': [0.2378550603914989, 0.23428756710087567], 'false,false': [0.23428756710087603, nan], 'true': [0.11011222022443964, 0.24898143956541383], 'true,false': [0.24898143956541383, nan]}
{'': [0.13383768114925532, 0.2373206687712768], 'false': [0.2378550603914989, 0.23428756710087567], 'false,false': [0.23428756710087603, nan], 'true': [0.11011222022443964, 0.24898143956541383], 'true,false': [0.24898143956541383, nan]}
{'': [0.13296060636954468, 0.2364820439207477], 'false': [0.23633133928866215, 0.24983563445101917], 'false,false': [0.24983563445101917, nan], 'false,true': [0.2378550603915007, 0.23393882952651093], 'true': [0.11011222022444135, 0.24898143956541466], 'true,false': [0.24898143956541466, nan]}
{'': [0.13296060636954468, 0.2364820439207477], 'false': [0.23633133928866215, 0.24983563445101917], 'false,false': [0.24983563445101917, nan], 'false,true': [0.2378550603915007, 0.23393882952651093], 'true': [0.11011222022444135, 0.24898143956541466], 'true,false': [0.24898143956541466, nan]}
{'': [0.13296060636954468, 0.2364820439207477], 'false': [0.23633133928866215, 0.24983563445101917], 'false,false': [0.24983563445101917, nan], 'false,true': [0.2378550603915007, 0.23393882952651093], 'true': [0.11011222022444135, 0.24898143956541466], 'true,false': [0.24898143956541466, nan]}
{'': [0.13296060636954468, 0.2364820439207477], 'false': [0.23633133928866215, 0.24983563445101917], 'false,false': [0.24983563445101917, nan], 'false,true': [0.2378550603915007, 0.23393882952651093], 'true': [0.11011222022444135, 0.24898143956541466], 'true,false': [0.24898143956541466, nan]}
{'': [0.132550568637064, 0.23608363109221323], 'false': [0.2359293238134652, 0.24983563445101892], 'false,false': [0.24983563445101892, nan], 'false,true': [0.2378550603915106, 0.23393882952652967], 'true': [0.1101122202244407, 0.24898143956541408], 'true,false': [0.24898143956541408, nan]}
{'': [0.132550568637064, 0.23608363109221323], 'false': [0.2359293238134652, 0.24983563445101892], 'false,false': [0.24983563445101892, nan], 'false,true': [0.2378550603915106, 0.23393882952652967], 'true': [0.1101122202244407, 0.24898143956541408], 'true,false': [0.24898143956541408, nan]}
{'': [0.132550568637064, 0.23608363109221323], 'false': [0.2359293238134652, 0.24983563445101892], 'false,false': [0.24983563445101892, nan], 'false,true': [0.2378550603915106, 0.23393882952652967], 'true': [0.1101122202244407, 0.24898143956541408], 'true,false': [0.24898143956541408, nan]}
{'': [0.132550568637064, 0.23608363109221323], 'false': [0.2359293238134652, 0.24983563445101892], 'false,false': [0.24983563445101892, nan], 'false,true': [0.2378550603915106, 0.23393882952652967], 'true': [0.1101122202244407, 0.24898143956541408], 'true,false': [0.24898143956541408, nan]}
{'': [0.1323364148635707, 0.23590099717487653], 'false': [0.23574504762229387, 0.24983563445101922], 'false,false': [0.24983563445101922, nan], 'false,true': [0.2378550603915064, 0.23393882952652786], 'true': [0.11011222022444085, 0.24898143956541424], 'true,false': [0.24898143956541424, nan]}
{'': [0.1323364148635707, 0.23590099717487653], 'false': [0.23574504762229387, 0.24983563445101922], 'false,false': [0.24983563445101922, nan], 'false,true': [0.2378550603915064, 0.23393882952652786], 'true': [0.11011222022444085, 0.24898143956541424], 'true,false': [0.24898143956541424, nan]}
{'': [0.1323364148635707, 0.23590099717487653], 'false': [0.23574504762229387, 0.24983563445101922], 'false,false': [0.24983563445101922, nan], 'false,true': [0.2378550603915064, 0.23393882952652786], 'true': [0.11011222022444085, 0.24898143956541424], 'true,false': [0.24898143956541424, nan]}
{'': [0.1323364148635707, 0.23590099717487653], 'false': [0.23574504762229387, 0.24983563445101922], 'false,false': [0.24983563445101922, nan], 'false,true': [0.2378550603915064, 0.23393882952652786], 'true': [0.11011222022444085, 0.24898143956541424], 'true,false': [0.24898143956541424, nan]}
{'': [0.13220919935780845, 0.23581798581592345], 'false': [0.23566127125865519, 0.24983563445101908], 'false,false': [0.24983563445101908, nan], 'false,true': [0.23785506039150842, 0.23393882952652453], 'true': [0.11011222022444023, 0.2489814395654141], 'true,false': [0.2489814395654141, nan]}
{'': [0.13220919935780845, 0.23581798581592345], 'false': [0.23566127125865519, 0.24983563445101908], 'false,false': [0.24983563445101908, nan], 'false,true': [0.23785506039150842, 0.23393882952652453], 'true': [0.11011222022444023, 0.2489814395654141], 'true,false': [0.2489814395654141, nan]}
{'': [0.13220919935780845, 0.23581798581592345], 'false': [0.23566127125865519, 0.24983563445101908], 'false,false': [0.24983563445101908, nan], 'false,true': [0.23785506039150842, 0.23393882952652453], 'true': [0.11011222022444023, 0.2489814395654141], 'true,false': [0.2489814395654141, nan]}
{'': [0.13220919935780845, 0.23581798581592345], 'false': [0.23566127125865519, 0.24983563445101908], 'false,false': [0.24983563445101908, nan], 'false,true': [0.23785506039150842, 0.23393882952652453], 'true': [0.11011222022444023, 0.2489814395654141], 'true,false': [0.2489814395654141, nan]}
{'': [0.1321239705595983, 0.2357799833982129], 'false': [0.23562289988006616, 0.24983563445101914], 'false,false': [0.24983563445101914, nan], 'false,true': [0.23785506039150503, 0.2339388295265198], 'true': [0.11011222022444032, 0.24898143956541377], 'true,false': [0.24898143956541377, nan]}
{'': [0.1321239705595983, 0.2357799833982129], 'false': [0.23562289988006616, 0.24983563445101914], 'false,false': [0.24983563445101914, nan], 'false,true': [0.23785506039150503, 0.2339388295265198], 'true': [0.11011222022444032, 0.24898143956541377], 'true,false': [0.24898143956541377, nan]}
{'': [0.1321239705595983, 0.2357799833982129], 'false': [0.23562289988006616, 0.24983563445101914], 'false,false': [0.24983563445101914, nan], 'false,true': [0.23785506039150503, 0.2339388295265198], 'true': [0.11011222022444032, 0.24898143956541377], 'true,false': [0.24898143956541377, nan]}
{'': [0.1321239705595983, 0.2357799833982129], 'false': [0.23562289988006616, 0.24983563445101914], 'false,false': [0.24983563445101914, nan], 'false,true': [0.23785506039150503, 0.2339388295265198], 'true': [0.11011222022444032, 0.24898143956541377], 'true,false': [0.24898143956541377, nan]}








******************************************
******************************************
******************************************
******************************************
Performing Theory Revision
Performing Theory Revision
Performing Theory Revision
Performing Theory Revision
******************************************
******************************************
******************************************
******************************************
'false,false,true'
'false,false,true'
'false,false,true'
'false,false,true'
Error in experiment of twitter->yeast
Error in experiment of twitter->yeast
Error in experiment of twitter->yeast
Error in experiment of twitter->yeast
Starting experiment #1 for twitter->yeast

Starting experiment #1 for twitter->yeast

Starting experiment #1 for twitter->yeast

Starting experiment #1 for twitter->yeast

Starting experiment #1 for twitter->yeast

Start learning from source dataset

Start learning from source dataset

Start learning from source dataset

Start learning from source dataset

Start learning from source dataset

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.31131052760536243;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06993932811261194;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5936949736434047;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.23638727706842558;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1487472256978015;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6415884255453697;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.31131052760536243;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06993932811261194;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5936949736434047;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.23638727706842558;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1487472256978015;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6415884255453697;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.31131052760536243;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06993932811261194;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5936949736434047;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.23638727706842558;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1487472256978015;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6415884255453697;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.31131052760536243;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06993932811261194;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5936949736434047;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.23638727706842558;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1487472256978015;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6415884255453697;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.31131052760536243;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06993932811261194;  // std dev = 0,409, 458,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5936949736434047;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.23638727706842558;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1487472256978015;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6415884255453697;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.26904308058139953;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.022753514022364314;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.08687974972962019;  // std dev = 7,150, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.5051905517056273;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.20510948611662866;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1296585851710834;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.5444834602885373;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.26904308058139953;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.022753514022364314;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.08687974972962019;  // std dev = 7,150, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.5051905517056273;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.20510948611662866;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1296585851710834;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.5444834602885373;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.26904308058139953;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.022753514022364314;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.08687974972962019;  // std dev = 7,150, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.5051905517056273;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.20510948611662866;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1296585851710834;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.5444834602885373;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.26904308058139953;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.022753514022364314;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.08687974972962019;  // std dev = 7,150, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.5051905517056273;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.20510948611662866;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1296585851710834;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.5444834602885373;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.26904308058139953;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.022753514022364314;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.08687974972962019;  // std dev = 7,150, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.5051905517056273;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.20510948611662866;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.1296585851710834;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.5444834602885373;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.2251629074734654;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.01982001727117023;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.07547087036960165;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.40398085775681314;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.17375466875970053;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11137140369626213;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.43227582690035005;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.2251629074734654;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.01982001727117023;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.07547087036960165;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.40398085775681314;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.17375466875970053;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11137140369626213;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.43227582690035005;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.2251629074734654;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.01982001727117023;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.07547087036960165;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.40398085775681314;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.17375466875970053;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11137140369626213;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.43227582690035005;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.2251629074734654;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.01982001727117023;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.07547087036960165;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.40398085775681314;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.17375466875970053;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11137140369626213;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.43227582690035005;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.2251629074734654;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.01982001727117023;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.07547087036960165;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.40398085775681314;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.17375466875970053;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11137140369626213;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.43227582690035005;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.18313417683133237;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01722674183161882;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06499960569768067;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.30928769511060755;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14403887646406802;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.09439937096602727;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.32872809626472155;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.18313417683133237;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01722674183161882;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06499960569768067;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.30928769511060755;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14403887646406802;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.09439937096602727;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.32872809626472155;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.18313417683133237;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01722674183161882;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06499960569768067;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.30928769511060755;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14403887646406802;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.09439937096602727;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.32872809626472155;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.18313417683133237;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01722674183161882;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06499960569768067;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.30928769511060755;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14403887646406802;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.09439937096602727;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.32872809626472155;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.18313417683133237;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01722674183161882;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06499960569768067;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.30928769511060755;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14403887646406802;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.09439937096602727;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.32872809626472155;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.1455585515025414;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01494386931498094;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.055555326017059925;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23250755639381143;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11722526031071193;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.07908428286053523;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.24673667513713926;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.1455585515025414;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01494386931498094;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.055555326017059925;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23250755639381143;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11722526031071193;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.07908428286053523;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.24673667513713926;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.1455585515025414;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01494386931498094;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.055555326017059925;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23250755639381143;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11722526031071193;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.07908428286053523;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.24673667513713926;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.1455585515025414;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01494386931498094;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.055555326017059925;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23250755639381143;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11722526031071193;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.07908428286053523;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.24673667513713926;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.1455585515025414;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01494386931498094;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.055555326017059925;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23250755639381143;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11722526031071193;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.07908428286053523;  // std dev = 4,911, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.24673667513713926;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11372159178628172;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.012941633918787674;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.04716676146255043;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.1746839244775868;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.0939898922564742;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.18623935109027454;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.0655941935369208;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11372159178628172;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.012941633918787674;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.04716676146255043;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.1746839244775868;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.0939898922564742;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.18623935109027454;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.0655941935369208;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11372159178628172;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.012941633918787674;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.04716676146255043;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.1746839244775868;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.0939898922564742;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.18623935109027454;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.0655941935369208;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11372159178628172;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.012941633918787674;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.04716676146255043;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.1746839244775868;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.0939898922564742;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.18623935109027454;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.0655941935369208;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11372159178628172;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.012941633918787674;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.04716676146255043;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.1746839244775868;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.0939898922564742;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.18623935109027454;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.0655941935369208;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08777711205597939;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.011191164195034213;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03981389165384334;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.13221940124227713;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07448638412101843;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.14236015691334833;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.053950196907977414;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08777711205597939;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.011191164195034213;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03981389165384334;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.13221940124227713;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07448638412101843;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.14236015691334833;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.053950196907977414;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08777711205597939;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.011191164195034213;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03981389165384334;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.13221940124227713;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07448638412101843;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.14236015691334833;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.053950196907977414;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08777711205597939;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.011191164195034213;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03981389165384334;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.13221940124227713;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07448638412101843;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.14236015691334833;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.053950196907977414;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08777711205597939;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.011191164195034213;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.03981389165384334;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.13221940124227713;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07448638412101843;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.14236015691334833;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.053950196907977414;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06719346751014121;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.009665066912476093;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.0334413529220261;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.10104744105043595;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05850731238683171;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11030155755664867;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.044066289665896534;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06719346751014121;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.009665066912476093;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.0334413529220261;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.10104744105043595;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05850731238683171;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11030155755664867;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.044066289665896534;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06719346751014121;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.009665066912476093;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.0334413529220261;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.10104744105043595;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05850731238683171;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11030155755664867;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.044066289665896534;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06719346751014121;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.009665066912476093;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.0334413529220261;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.10104744105043595;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05850731238683171;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11030155755664867;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.044066289665896534;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06719346751014121;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.009665066912476093;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.0334413529220261;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.10104744105043595;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05850731238683171;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.11030155755664867;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.044066289665896534;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.051151957233311715;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.00833779905076543;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.027971097700531296;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.07794711889426041;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.045649849825700986;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.08651110070997214;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.03578969600106187;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.051151957233311715;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.00833779905076543;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.027971097700531296;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.07794711889426041;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.045649849825700986;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.08651110070997214;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.03578969600106187;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.051151957233311715;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.00833779905076543;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.027971097700531296;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.07794711889426041;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.045649849825700986;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.08651110070997214;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.03578969600106187;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.051151957233311715;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.00833779905076543;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.027971097700531296;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.07794711889426041;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.045649849825700986;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.08651110070997214;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.03578969600106187;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.051151957233311715;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.00833779905076543;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.027971097700531296;  // std dev = 7,149, 283,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.07794711889426041;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.045649849825700986;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.08651110070997214;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.03578969600106187;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038795895256089515;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.007185872846865357;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.03455359731927674;  // std dev = 6,600, 233,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=58 */
%   | | | else return 0.022402612486216292;  // std dev = 7,459, 257,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=85 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.0606179950996989;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03544054826900334;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.0685553939062814;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.028934481462948563;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038795895256089515;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.007185872846865357;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.03455359731927674;  // std dev = 6,600, 233,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=58 */
%   | | | else return 0.022402612486216292;  // std dev = 7,459, 257,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=85 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.0606179950996989;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03544054826900334;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.0685553939062814;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.028934481462948563;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038795895256089515;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.007185872846865357;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.03455359731927674;  // std dev = 6,600, 233,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=58 */
%   | | | else return 0.022402612486216292;  // std dev = 7,459, 257,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=85 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.0606179950996989;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03544054826900334;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.0685553939062814;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.028934481462948563;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038795895256089515;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.007185872846865357;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.03455359731927674;  // std dev = 6,600, 233,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=58 */
%   | | | else return 0.022402612486216292;  // std dev = 7,459, 257,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=85 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.0606179950996989;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03544054826900334;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.0685553939062814;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.028934481462948563;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038795895256089515;  // std dev = 0,498, 854,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.007185872846865357;  // std dev = 0,379, 225,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=39 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.03455359731927674;  // std dev = 6,600, 233,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=58 */
%   | | | else return 0.022402612486216292;  // std dev = 7,459, 257,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=85 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.0606179950996989;  // std dev = 0,441, 934,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03544054826900334;  // std dev = 6,737, 193,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=73 */
%   | | | else return 0.0685553939062814;  // std dev = 5,161, 157,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.028934481462948563;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */










Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).']

Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).']

Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).']

Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).']

Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).']

Starting fold 1

Starting fold 1

Starting fold 1

Starting fold 1

Starting fold 1

Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> phenotype(A,B)', 'tweets(A,B) -> function(A,B)'] 

Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> phenotype(A,B)', 'tweets(A,B) -> function(A,B)'] 

Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> phenotype(A,B)', 'tweets(A,B) -> function(A,B)'] 

Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> phenotype(A,B)', 'tweets(A,B) -> function(A,B)'] 

Best mapping found: ['follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> phenotype(A,B)', 'tweets(A,B) -> function(A,B)'] 

Transferred target predicate: interaction 

Transferred target predicate: interaction 

Transferred target predicate: interaction 

Transferred target predicate: interaction 

Transferred target predicate: interaction 

******************************************
******************************************
******************************************
******************************************
******************************************
Performing Parameter Learning
Performing Parameter Learning
Performing Parameter Learning
Performing Parameter Learning
Performing Parameter Learning
******************************************
******************************************
******************************************
******************************************
******************************************
Refine
Refine
Refine
Refine
Refine
0;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
0;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
0;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
0;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
0;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
0;true;function(A, D), function(B, D).;false;true
0;true;function(A, D), function(B, D).;false;true
0;true;function(A, D), function(B, D).;false;true
0;true;function(A, D), function(B, D).;false;true
0;true;function(A, D), function(B, D).;false;true
0;true,false;function(A, E).;false;true
0;true,false;function(A, E).;false;true
0;true,false;function(A, E).;false;true
0;true,false;function(A, E).;false;true
0;true,false;function(A, E).;false;true
0;true,false,false;function(B, F).;false;false
0;true,false,false;function(B, F).;false;false
0;true,false,false;function(B, F).;false;false
0;true,false,false;function(B, F).;false;false
0;true,false,false;function(B, F).;false;false
0;false;function(B, G), function(A, G).;false;true
0;false;function(B, G), function(A, G).;false;true
0;false;function(B, G), function(A, G).;false;true
0;false;function(B, G), function(A, G).;false;true
0;false;function(B, G), function(A, G).;false;true
0;false,false;function(A, H).;true;true
0;false,false;function(A, H).;true;true
0;false,false;function(A, H).;true;true
0;false,false;function(A, H).;true;true
0;false,false;function(A, H).;true;true
0;false,false,true;function(B, I).;false;false
0;false,false,true;function(B, I).;false;false
0;false,false,true;function(B, I).;false;false
0;false,false,true;function(B, I).;false;false
0;false,false,true;function(B, I).;false;false
0;false,false,false;function(B, J).;false;false
0;false,false,false;function(B, J).;false;false
0;false,false,false;function(B, J).;false;false
0;false,false,false;function(B, J).;false;false
0;false,false,false;function(B, J).;false;false
1;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
1;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
1;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
1;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
1;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
1;true;function(A, D), function(B, D).;false;true
1;true;function(A, D), function(B, D).;false;true
1;true;function(A, D), function(B, D).;false;true
1;true;function(A, D), function(B, D).;false;true
1;true;function(A, D), function(B, D).;false;true
1;true,false;function(A, E), function(B, F).;false;true
1;true,false;function(A, E), function(B, F).;false;true
1;true,false;function(A, E), function(B, F).;false;true
1;true,false;function(A, E), function(B, F).;false;true
1;true,false;function(A, E), function(B, F).;false;true
1;true,false,false;function(B, G).;false;false
1;true,false,false;function(B, G).;false;false
1;true,false,false;function(B, G).;false;false
1;true,false,false;function(B, G).;false;false
1;true,false,false;function(B, G).;false;false
1;false;function(B, H), function(A, H).;false;true
1;false;function(B, H), function(A, H).;false;true
1;false;function(B, H), function(A, H).;false;true
1;false;function(B, H), function(A, H).;false;true
1;false;function(B, H), function(A, H).;false;true
1;false,false;function(A, I).;true;true
1;false,false;function(A, I).;true;true
1;false,false;function(A, I).;true;true
1;false,false;function(A, I).;true;true
1;false,false;function(A, I).;true;true
1;false,false,true;function(B, J).;false;false
1;false,false,true;function(B, J).;false;false
1;false,false,true;function(B, J).;false;false
1;false,false,true;function(B, J).;false;false
1;false,false,true;function(B, J).;false;false
1;false,false,false;function(B, K).;false;false
1;false,false,false;function(B, K).;false;false
1;false,false,false;function(B, K).;false;false
1;false,false,false;function(B, K).;false;false
1;false,false,false;function(B, K).;false;false
2;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
2;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
2;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
2;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
2;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
2;true;function(A, D), function(B, D).;false;true
2;true;function(A, D), function(B, D).;false;true
2;true;function(A, D), function(B, D).;false;true
2;true;function(A, D), function(B, D).;false;true
2;true;function(A, D), function(B, D).;false;true
2;true,false;function(B, E), function(A, F).;false;true
2;true,false;function(B, E), function(A, F).;false;true
2;true,false;function(B, E), function(A, F).;false;true
2;true,false;function(B, E), function(A, F).;false;true
2;true,false;function(B, E), function(A, F).;false;true
2;true,false,false;function(B, G).;false;false
2;true,false,false;function(B, G).;false;false
2;true,false,false;function(B, G).;false;false
2;true,false,false;function(B, G).;false;false
2;true,false,false;function(B, G).;false;false
2;false;function(A, H), function(B, H).;false;true
2;false;function(A, H), function(B, H).;false;true
2;false;function(A, H), function(B, H).;false;true
2;false;function(A, H), function(B, H).;false;true
2;false;function(A, H), function(B, H).;false;true
2;false,false;function(A, I).;true;true
2;false,false;function(A, I).;true;true
2;false,false;function(A, I).;true;true
2;false,false;function(A, I).;true;true
2;false,false;function(A, I).;true;true
2;false,false,true;function(B, J).;false;false
2;false,false,true;function(B, J).;false;false
2;false,false,true;function(B, J).;false;false
2;false,false,true;function(B, J).;false;false
2;false,false,true;function(B, J).;false;false
2;false,false,false;function(B, K).;false;false
2;false,false,false;function(B, K).;false;false
2;false,false,false;function(B, K).;false;false
2;false,false,false;function(B, K).;false;false
2;false,false,false;function(B, K).;false;false
3;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
3;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
3;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
3;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
3;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
3;true;function(B, D), function(A, D).;false;true
3;true;function(B, D), function(A, D).;false;true
3;true;function(B, D), function(A, D).;false;true
3;true;function(B, D), function(A, D).;false;true
3;true;function(B, D), function(A, D).;false;true
3;true,false;function(A, E), function(B, F).;false;true
3;true,false;function(A, E), function(B, F).;false;true
3;true,false;function(A, E), function(B, F).;false;true
3;true,false;function(A, E), function(B, F).;false;true
3;true,false;function(A, E), function(B, F).;false;true
3;true,false,false;function(B, G).;false;false
3;true,false,false;function(B, G).;false;false
3;true,false,false;function(B, G).;false;false
3;true,false,false;function(B, G).;false;false
3;true,false,false;function(B, G).;false;false
3;false;function(B, H), function(A, H).;false;true
3;false;function(B, H), function(A, H).;false;true
3;false;function(B, H), function(A, H).;false;true
3;false;function(B, H), function(A, H).;false;true
3;false;function(B, H), function(A, H).;false;true
3;false,false;function(A, I).;true;true
3;false,false;function(A, I).;true;true
3;false,false;function(A, I).;true;true
3;false,false;function(A, I).;true;true
3;false,false;function(A, I).;true;true
3;false,false,true;function(B, J).;false;false
3;false,false,true;function(B, J).;false;false
3;false,false,true;function(B, J).;false;false
3;false,false,true;function(B, J).;false;false
3;false,false,true;function(B, J).;false;false
3;false,false,false;function(B, K).;false;false
3;false,false,false;function(B, K).;false;false
3;false,false,false;function(B, K).;false;false
3;false,false,false;function(B, K).;false;false
3;false,false,false;function(B, K).;false;false
4;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
4;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
4;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
4;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
4;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
4;true;function(A, D), function(B, D).;false;true
4;true;function(A, D), function(B, D).;false;true
4;true;function(A, D), function(B, D).;false;true
4;true;function(A, D), function(B, D).;false;true
4;true;function(A, D), function(B, D).;false;true
4;true,false;function(A, E), function(B, F).;false;true
4;true,false;function(A, E), function(B, F).;false;true
4;true,false;function(A, E), function(B, F).;false;true
4;true,false;function(A, E), function(B, F).;false;true
4;true,false;function(A, E), function(B, F).;false;true
4;true,false,false;function(B, G).;false;false
4;true,false,false;function(B, G).;false;false
4;true,false,false;function(B, G).;false;false
4;true,false,false;function(B, G).;false;false
4;true,false,false;function(B, G).;false;false
4;false;function(B, H), function(A, H).;false;true
4;false;function(B, H), function(A, H).;false;true
4;false;function(B, H), function(A, H).;false;true
4;false;function(B, H), function(A, H).;false;true
4;false;function(B, H), function(A, H).;false;true
4;false,false;function(A, I).;true;true
4;false,false;function(A, I).;true;true
4;false,false;function(A, I).;true;true
4;false,false;function(A, I).;true;true
4;false,false;function(A, I).;true;true
4;false,false,true;function(B, J).;false;false
4;false,false,true;function(B, J).;false;false
4;false,false,true;function(B, J).;false;false
4;false,false,true;function(B, J).;false;false
4;false,false,true;function(B, J).;false;false
4;false,false,false;function(B, K).;false;false
4;false,false,false;function(B, K).;false;false
4;false,false,false;function(B, K).;false;false
4;false,false,false;function(B, K).;false;false
4;false,false,false;function(B, K).;false;false
5;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
5;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
5;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
5;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
5;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
5;true;function(A, D), function(B, D).;false;true
5;true;function(A, D), function(B, D).;false;true
5;true;function(A, D), function(B, D).;false;true
5;true;function(A, D), function(B, D).;false;true
5;true;function(A, D), function(B, D).;false;true
5;true,false;function(B, E), function(A, F).;false;true
5;true,false;function(B, E), function(A, F).;false;true
5;true,false;function(B, E), function(A, F).;false;true
5;true,false;function(B, E), function(A, F).;false;true
5;true,false;function(B, E), function(A, F).;false;true
5;true,false,false;function(B, G).;false;false
5;true,false,false;function(B, G).;false;false
5;true,false,false;function(B, G).;false;false
5;true,false,false;function(B, G).;false;false
5;true,false,false;function(B, G).;false;false
5;false;function(B, H).;true;true
5;false;function(B, H).;true;true
5;false;function(B, H).;true;true
5;false;function(B, H).;true;true
5;false;function(B, H).;true;true
5;false,true;function(A, H).;false;true
5;false,true;function(A, H).;false;true
5;false,true;function(A, H).;false;true
5;false,true;function(A, H).;false;true
5;false,true;function(A, H).;false;true
5;false,true,false;function(A, I).;false;false
5;false,true,false;function(A, I).;false;false
5;false,true,false;function(A, I).;false;false
5;false,true,false;function(A, I).;false;false
5;false,true,false;function(A, I).;false;false
5;false,false;function(A, J).;false;false
5;false,false;function(A, J).;false;false
5;false,false;function(A, J).;false;false
5;false,false;function(A, J).;false;false
5;false,false;function(A, J).;false;false
6;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
6;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
6;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
6;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
6;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
6;true;function(B, D), function(A, D).;false;true
6;true;function(B, D), function(A, D).;false;true
6;true;function(B, D), function(A, D).;false;true
6;true;function(B, D), function(A, D).;false;true
6;true;function(B, D), function(A, D).;false;true
6;true,false;function(A, E), function(B, F).;false;true
6;true,false;function(A, E), function(B, F).;false;true
6;true,false;function(A, E), function(B, F).;false;true
6;true,false;function(A, E), function(B, F).;false;true
6;true,false;function(A, E), function(B, F).;false;true
6;true,false,false;function(B, G).;false;false
6;true,false,false;function(B, G).;false;false
6;true,false,false;function(B, G).;false;false
6;true,false,false;function(B, G).;false;false
6;true,false,false;function(B, G).;false;false
6;false;function(B, H).;true;true
6;false;function(B, H).;true;true
6;false;function(B, H).;true;true
6;false;function(B, H).;true;true
6;false;function(B, H).;true;true
6;false,true;function(A, H).;false;true
6;false,true;function(A, H).;false;true
6;false,true;function(A, H).;false;true
6;false,true;function(A, H).;false;true
6;false,true;function(A, H).;false;true
6;false,true,false;function(A, I).;false;false
6;false,true,false;function(A, I).;false;false
6;false,true,false;function(A, I).;false;false
6;false,true,false;function(A, I).;false;false
6;false,true,false;function(A, I).;false;false
6;false,false;function(A, J).;false;false
6;false,false;function(A, J).;false;false
6;false,false;function(A, J).;false;false
6;false,false;function(A, J).;false;false
6;false,false;function(A, J).;false;false
7;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
7;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
7;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
7;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
7;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
7;true;function(A, D), function(B, D).;false;true
7;true;function(A, D), function(B, D).;false;true
7;true;function(A, D), function(B, D).;false;true
7;true;function(A, D), function(B, D).;false;true
7;true;function(A, D), function(B, D).;false;true
7;true,false;function(B, E), function(A, F).;false;true
7;true,false;function(B, E), function(A, F).;false;true
7;true,false;function(B, E), function(A, F).;false;true
7;true,false;function(B, E), function(A, F).;false;true
7;true,false;function(B, E), function(A, F).;false;true
7;true,false,false;function(B, G).;false;false
7;true,false,false;function(B, G).;false;false
7;true,false,false;function(B, G).;false;false
7;true,false,false;function(B, G).;false;false
7;true,false,false;function(B, G).;false;false
7;false;function(B, H).;true;true
7;false;function(B, H).;true;true
7;false;function(B, H).;true;true
7;false;function(B, H).;true;true
7;false;function(B, H).;true;true
7;false,true;function(A, H).;false;true
7;false,true;function(A, H).;false;true
7;false,true;function(A, H).;false;true
7;false,true;function(A, H).;false;true
7;false,true;function(A, H).;false;true
7;false,true,false;function(A, I).;false;false
7;false,true,false;function(A, I).;false;false
7;false,true,false;function(A, I).;false;false
7;false,true,false;function(A, I).;false;false
7;false,true,false;function(A, I).;false;false
7;false,false;function(A, J).;false;false
7;false,false;function(A, J).;false;false
7;false,false;function(A, J).;false;false
7;false,false;function(A, J).;false;false
7;false,false;function(A, J).;false;false
8;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
8;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
8;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
8;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
8;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
8;true;function(A, D), function(B, D).;false;true
8;true;function(A, D), function(B, D).;false;true
8;true;function(A, D), function(B, D).;false;true
8;true;function(A, D), function(B, D).;false;true
8;true;function(A, D), function(B, D).;false;true
8;true,false;function(A, E), function(B, F).;false;true
8;true,false;function(A, E), function(B, F).;false;true
8;true,false;function(A, E), function(B, F).;false;true
8;true,false;function(A, E), function(B, F).;false;true
8;true,false;function(A, E), function(B, F).;false;true
8;true,false,false;function(B, G).;false;false
8;true,false,false;function(B, G).;false;false
8;true,false,false;function(B, G).;false;false
8;true,false,false;function(B, G).;false;false
8;true,false,false;function(B, G).;false;false
8;false;function(B, H).;true;true
8;false;function(B, H).;true;true
8;false;function(B, H).;true;true
8;false;function(B, H).;true;true
8;false;function(B, H).;true;true
8;false,true;function(A, H).;false;true
8;false,true;function(A, H).;false;true
8;false,true;function(A, H).;false;true
8;false,true;function(A, H).;false;true
8;false,true;function(A, H).;false;true
8;false,true,false;function(A, I).;false;false
8;false,true,false;function(A, I).;false;false
8;false,true,false;function(A, I).;false;false
8;false,true,false;function(A, I).;false;false
8;false,true,false;function(A, I).;false;false
8;false,false;function(A, J).;false;false
8;false,false;function(A, J).;false;false
8;false,false;function(A, J).;false;false
8;false,false;function(A, J).;false;false
8;false,false;function(A, J).;false;false
9;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
9;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
9;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
9;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
9;;interaction(A, B) :- phenotype(A, C), phenotype(B, C).;true;true
9;true;function(A, D), function(B, D).;false;true
9;true;function(A, D), function(B, D).;false;true
9;true;function(A, D), function(B, D).;false;true
9;true;function(A, D), function(B, D).;false;true
9;true;function(A, D), function(B, D).;false;true
9;true,false;function(B, E), function(A, F).;false;true
9;true,false;function(B, E), function(A, F).;false;true
9;true,false;function(B, E), function(A, F).;false;true
9;true,false;function(B, E), function(A, F).;false;true
9;true,false;function(B, E), function(A, F).;false;true
9;true,false,false;function(A, G).;false;false
9;true,false,false;function(A, G).;false;false
9;true,false,false;function(A, G).;false;false
9;true,false,false;function(A, G).;false;false
9;true,false,false;function(A, G).;false;false
9;false;function(B, H).;true;true
9;false;function(B, H).;true;true
9;false;function(B, H).;true;true
9;false;function(B, H).;true;true
9;false;function(B, H).;true;true
9;false,true;function(A, H).;false;true
9;false,true;function(A, H).;false;true
9;false,true;function(A, H).;false;true
9;false,true;function(A, H).;false;true
9;false,true;function(A, H).;false;true
9;false,true,false;function(A, I).;false;false
9;false,true,false;function(A, I).;false;false
9;false,true,false;function(A, I).;false;false
9;false,true,false;function(A, I).;false;false
9;false,true,false;function(A, I).;false;false
9;false,false;function(A, J).;false;false
9;false,false;function(A, J).;false;false
9;false,false;function(A, J).;false;false
9;false,false;function(A, J).;false;false
9;false,false;function(A, J).;false;false










WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.7321646831310048;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.3262340414824902;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.46835301673216045;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.23141626183218056;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3709694479200248;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.7321646831310048;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.3262340414824902;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.46835301673216045;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.23141626183218056;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3709694479200248;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.7321646831310048;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.3262340414824902;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.46835301673216045;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.23141626183218056;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3709694479200248;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.7321646831310048;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.3262340414824902;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.46835301673216045;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.23141626183218056;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3709694479200248;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.7321646831310048;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E) )
%   | | then return 0.3262340414824902;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.46835301673216045;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.23141626183218056;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3709694479200248;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.6182007830639386;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.28171422482890246;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.4013170162673985;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.2008489419404786;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3195707324298151;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.6182007830639386;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.28171422482890246;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.4013170162673985;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.2008489419404786;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3195707324298151;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.6182007830639386;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.28171422482890246;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.4013170162673985;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.2008489419404786;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3195707324298151;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.6182007830639386;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.28171422482890246;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.4013170162673985;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.2008489419404786;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3195707324298151;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.6182007830639386;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.28171422482890246;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.4013170162673985;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.2008489419404786;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.3195707324298151;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.484568085605645;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.23519292070564615;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, G), function(B, G) )
%   | then return 0.3273463054812131;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.17028125601190675;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.26484890423013485;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.484568085605645;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.23519292070564615;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, G), function(B, G) )
%   | then return 0.3273463054812131;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.17028125601190675;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.26484890423013485;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.484568085605645;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.23519292070564615;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, G), function(B, G) )
%   | then return 0.3273463054812131;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.17028125601190675;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.26484890423013485;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.484568085605645;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.23519292070564615;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, G), function(B, G) )
%   | then return 0.3273463054812131;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.17028125601190675;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.26484890423013485;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.484568085605645;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.23519292070564615;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, G), function(B, G) )
%   | then return 0.3273463054812131;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.17028125601190675;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.26484890423013485;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.36528324812435614;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.19057755295478856;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.2565427055588793;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1413387994693832;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.2122559513279361;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.36528324812435614;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.19057755295478856;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.2565427055588793;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1413387994693832;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.2122559513279361;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.36528324812435614;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.19057755295478856;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.2565427055588793;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1413387994693832;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.2122559513279361;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.36528324812435614;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.19057755295478856;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.2565427055588793;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1413387994693832;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.2122559513279361;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.36528324812435614;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.19057755295478856;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.2565427055588793;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1413387994693832;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.2122559513279361;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.27527600052204043;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.15080101353659994;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.19595833641095553;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1152146941248648;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.16584376403710083;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.27527600052204043;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.15080101353659994;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.19595833641095553;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1152146941248648;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.16584376403710083;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.27527600052204043;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.15080101353659994;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.19595833641095553;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1152146941248648;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.16584376403710083;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.27527600052204043;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.15080101353659994;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.19595833641095553;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1152146941248648;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.16584376403710083;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.27527600052204043;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.15080101353659994;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.19595833641095553;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.1152146941248648;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0.16584376403710083;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.21128375211260753;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.11727501093763941;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.14775390354734844;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.09254875351524673;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.12737818535099144;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.21128375211260753;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.11727501093763941;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.14775390354734844;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.09254875351524673;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.12737818535099144;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.21128375211260753;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.11727501093763941;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.14775390354734844;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.09254875351524673;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.12737818535099144;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.21128375211260753;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.11727501093763941;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.14775390354734844;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.09254875351524673;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.12737818535099144;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.21128375211260753;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.11727501093763941;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.14775390354734844;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.09254875351524673;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.12737818535099144;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.16579122949997996;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.09012256866998798;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.11088626020987527;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.07348850098470627;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.09680041930186449;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.16579122949997996;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.09012256866998798;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.11088626020987527;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.07348850098470627;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.09680041930186449;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.16579122949997996;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.09012256866998798;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.11088626020987527;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.07348850098470627;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.09680041930186449;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.16579122949997996;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.09012256866998798;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.11088626020987527;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.07348850098470627;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.09680041930186449;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.16579122949997996;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.09012256866998798;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.11088626020987527;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.07348850098470627;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.09680041930186449;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.13274806914910878;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.06871315573496113;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.08319102379957895;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.057839200066892756;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.073108913239958;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.13274806914910878;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.06871315573496113;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.08319102379957895;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.057839200066892756;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.073108913239958;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.13274806914910878;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.06871315573496113;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.08319102379957895;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.057839200066892756;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.073108913239958;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.13274806914910878;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.06871315573496113;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.08319102379957895;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.057839200066892756;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.073108913239958;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.13274806914910878;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.06871315573496113;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.08319102379957895;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.057839200066892756;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.073108913239958;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.10811348660127582;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.05212246791353032;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.06251236736817915;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.04521858206590193;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.05502576330041963;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.10811348660127582;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.05212246791353032;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.06251236736817915;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.04521858206590193;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.05502576330041963;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.10811348660127582;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.05212246791353032;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.06251236736817915;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.04521858206590193;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.05502576330041963;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.10811348660127582;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.05212246791353032;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.06251236736817915;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.04521858206590193;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.05502576330041963;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.10811348660127582;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.05212246791353032;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.06251236736817915;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.04521858206590193;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.05502576330041963;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.08928867348059323;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.039407136735360955;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.04707750221522494;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.03517453997163866;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.04133900640598988;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.08928867348059323;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.039407136735360955;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.04707750221522494;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.03517453997163866;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.04133900640598988;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.08928867348059323;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.039407136735360955;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.04707750221522494;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.03517453997163866;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.04133900640598988;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.08928867348059323;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.039407136735360955;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.04707750221522494;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.03517453997163866;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.04133900640598988;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.08928867348059323;  // std dev = 5,289, 254,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=222 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.039407136735360955;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G) )
%   | then if ( function(A, G) )
%   | | then return 0.04707750221522494;  // std dev = 18,699, 1.470,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=897 */
%   | | else if ( function(A, H) )
%   | | | then return 0.03517453997163866;  // std dev = 21,738, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=754 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, I) )
%   | | then return 0.04133900640598988;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.










Results
Results
Results
Results
Results
   AUC ROC   = 0.64196
   AUC ROC   = 0.64196
   AUC ROC   = 0.64196
   AUC ROC   = 0.64196
   AUC ROC   = 0.64196
   AUC PR    = 0.632509
   AUC PR    = 0.632509
   AUC PR    = 0.632509
   AUC PR    = 0.632509
   AUC PR    = 0.632509
   CLL	      = -0.657242
   CLL	      = -0.657242
   CLL	      = -0.657242
   CLL	      = -0.657242
   CLL	      = -0.657242
   Precision = 0.615908 at threshold = 0.5
   Precision = 0.615908 at threshold = 0.5
   Precision = 0.615908 at threshold = 0.5
   Precision = 0.615908 at threshold = 0.5
   Precision = 0.615908 at threshold = 0.5
   Recall    = 0.671747
   Recall    = 0.671747
   Recall    = 0.671747
   Recall    = 0.671747
   Recall    = 0.671747
   F1        = 0.642617
   F1        = 0.642617
   F1        = 0.642617
   F1        = 0.642617
   F1        = 0.642617










Total learning time: 69.66499999999999 seconds
Total learning time: 69.66499999999999 seconds
Total learning time: 69.66499999999999 seconds
Total learning time: 69.66499999999999 seconds
Total learning time: 69.66499999999999 seconds
Total inference time: 2.281 seconds
Total inference time: 2.281 seconds
Total inference time: 2.281 seconds
Total inference time: 2.281 seconds
Total inference time: 2.281 seconds
AUC ROC: 0.64196
AUC ROC: 0.64196
AUC ROC: 0.64196
AUC ROC: 0.64196
AUC ROC: 0.64196










Structure after Parameter Learning
Structure after Parameter Learning
Structure after Parameter Learning
Structure after Parameter Learning
Structure after Parameter Learning
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(A, G), function(B, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(A, G), function(B, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(A, G), function(B, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(A, G), function(B, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(A, G), function(B, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [18.699, 573, 897], 'false,false,true,true': [21.738, 1266, 754], 'false,false,true,false': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
['interaction(A, B)', {'': 'phenotype(A, C), phenotype(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G)', 'false,true': 'function(A, G)', 'false,true,false': 'function(A, H)', 'false,false': 'function(A, I)'}, {'true,true': [5.289, 32, 222], 'true,false,true': [3.421, 25, 22], 'true,false,false': [0.0, 0, 0], 'false,true,true': [18.699, 573, 897], 'false,true,false,true': [21.738, 1266, 754], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.121, 19, 20], 'false,false,false': [0.0, 0, 0]}]
{'': [0.15350823942341021, 0.24929802781329008], 'false': [0.23785506039152596, 0.2346018297994732], 'false,false': [0.23460182979947367, nan], 'true': [0.1101122202244454, 0.24898143956541524], 'true,false': [0.24898143956541524, nan]}
{'': [0.15350823942341021, 0.24929802781329008], 'false': [0.23785506039152596, 0.2346018297994732], 'false,false': [0.23460182979947367, nan], 'true': [0.1101122202244454, 0.24898143956541524], 'true,false': [0.24898143956541524, nan]}
{'': [0.15350823942341021, 0.24929802781329008], 'false': [0.23785506039152596, 0.2346018297994732], 'false,false': [0.23460182979947367, nan], 'true': [0.1101122202244454, 0.24898143956541524], 'true,false': [0.24898143956541524, nan]}
{'': [0.15350823942341021, 0.24929802781329008], 'false': [0.23785506039152596, 0.2346018297994732], 'false,false': [0.23460182979947367, nan], 'true': [0.1101122202244454, 0.24898143956541524], 'true,false': [0.24898143956541524, nan]}
{'': [0.15350823942341021, 0.24929802781329008], 'false': [0.23785506039152596, 0.2346018297994732], 'false,false': [0.23460182979947367, nan], 'true': [0.1101122202244454, 0.24898143956541524], 'true,false': [0.24898143956541524, nan]}
{'': [0.1467149227757434, 0.24544772536915183], 'false': [0.23785506039149654, 0.23450185190630202], 'false,false': [0.2345018519063027, nan], 'true': [0.11011222022443767, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1467149227757434, 0.24544772536915183], 'false': [0.23785506039149654, 0.23450185190630202], 'false,false': [0.2345018519063027, nan], 'true': [0.11011222022443767, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1467149227757434, 0.24544772536915183], 'false': [0.23785506039149654, 0.23450185190630202], 'false,false': [0.2345018519063027, nan], 'true': [0.11011222022443767, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1467149227757434, 0.24544772536915183], 'false': [0.23785506039149654, 0.23450185190630202], 'false,false': [0.2345018519063027, nan], 'true': [0.11011222022443767, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1467149227757434, 0.24544772536915183], 'false': [0.23785506039149654, 0.23450185190630202], 'false,false': [0.2345018519063027, nan], 'true': [0.11011222022443767, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1399902885252973, 0.24170235517391384], 'false': [0.2378550603915169, 0.23440611833627428], 'false,false': [0.23440611833627428, nan], 'true': [0.11011222022444243, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1399902885252973, 0.24170235517391384], 'false': [0.2378550603915169, 0.23440611833627428], 'false,false': [0.23440611833627428, nan], 'true': [0.11011222022444243, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1399902885252973, 0.24170235517391384], 'false': [0.2378550603915169, 0.23440611833627428], 'false,false': [0.23440611833627428, nan], 'true': [0.11011222022444243, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1399902885252973, 0.24170235517391384], 'false': [0.2378550603915169, 0.23440611833627428], 'false,false': [0.23440611833627428, nan], 'true': [0.11011222022444243, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.1399902885252973, 0.24170235517391384], 'false': [0.2378550603915169, 0.23440611833627428], 'false,false': [0.23440611833627428, nan], 'true': [0.11011222022444243, 0.24898143956541438], 'true,false': [0.24898143956541438, nan]}
{'': [0.13581784638924727, 0.23895111404591982], 'false': [0.23785506039149695, 0.23433339033496178], 'false,false': [0.2343333903349623, nan], 'true': [0.11011222022444034, 0.24898143956541452], 'true,false': [0.24898143956541452, nan]}
{'': [0.13581784638924727, 0.23895111404591982], 'false': [0.23785506039149695, 0.23433339033496178], 'false,false': [0.2343333903349623, nan], 'true': [0.11011222022444034, 0.24898143956541452], 'true,false': [0.24898143956541452, nan]}
{'': [0.13581784638924727, 0.23895111404591982], 'false': [0.23785506039149695, 0.23433339033496178], 'false,false': [0.2343333903349623, nan], 'true': [0.11011222022444034, 0.24898143956541452], 'true,false': [0.24898143956541452, nan]}
{'': [0.13581784638924727, 0.23895111404591982], 'false': [0.23785506039149695, 0.23433339033496178], 'false,false': [0.2343333903349623, nan], 'true': [0.11011222022444034, 0.24898143956541452], 'true,false': [0.24898143956541452, nan]}
{'': [0.13581784638924727, 0.23895111404591982], 'false': [0.23785506039149695, 0.23433339033496178], 'false,false': [0.2343333903349623, nan], 'true': [0.11011222022444034, 0.24898143956541452], 'true,false': [0.24898143956541452, nan]}
{'': [0.13383768114925532, 0.2373206687712768], 'false': [0.2378550603914989, 0.23428756710087567], 'false,false': [0.23428756710087603, nan], 'true': [0.11011222022443964, 0.24898143956541383], 'true,false': [0.24898143956541383, nan]}
{'': [0.13383768114925532, 0.2373206687712768], 'false': [0.2378550603914989, 0.23428756710087567], 'false,false': [0.23428756710087603, nan], 'true': [0.11011222022443964, 0.24898143956541383], 'true,false': [0.24898143956541383, nan]}
{'': [0.13383768114925532, 0.2373206687712768], 'false': [0.2378550603914989, 0.23428756710087567], 'false,false': [0.23428756710087603, nan], 'true': [0.11011222022443964, 0.24898143956541383], 'true,false': [0.24898143956541383, nan]}
{'': [0.13383768114925532, 0.2373206687712768], 'false': [0.2378550603914989, 0.23428756710087567], 'false,false': [0.23428756710087603, nan], 'true': [0.11011222022443964, 0.24898143956541383], 'true,false': [0.24898143956541383, nan]}
{'': [0.13383768114925532, 0.2373206687712768], 'false': [0.2378550603914989, 0.23428756710087567], 'false,false': [0.23428756710087603, nan], 'true': [0.11011222022443964, 0.24898143956541383], 'true,false': [0.24898143956541383, nan]}
{'': [0.13296060636954468, 0.2364820439207477], 'false': [0.23633133928866215, 0.24983563445101917], 'false,false': [0.24983563445101917, nan], 'false,true': [0.2378550603915007, 0.23393882952651093], 'true': [0.11011222022444135, 0.24898143956541466], 'true,false': [0.24898143956541466, nan]}
{'': [0.13296060636954468, 0.2364820439207477], 'false': [0.23633133928866215, 0.24983563445101917], 'false,false': [0.24983563445101917, nan], 'false,true': [0.2378550603915007, 0.23393882952651093], 'true': [0.11011222022444135, 0.24898143956541466], 'true,false': [0.24898143956541466, nan]}
{'': [0.13296060636954468, 0.2364820439207477], 'false': [0.23633133928866215, 0.24983563445101917], 'false,false': [0.24983563445101917, nan], 'false,true': [0.2378550603915007, 0.23393882952651093], 'true': [0.11011222022444135, 0.24898143956541466], 'true,false': [0.24898143956541466, nan]}
{'': [0.13296060636954468, 0.2364820439207477], 'false': [0.23633133928866215, 0.24983563445101917], 'false,false': [0.24983563445101917, nan], 'false,true': [0.2378550603915007, 0.23393882952651093], 'true': [0.11011222022444135, 0.24898143956541466], 'true,false': [0.24898143956541466, nan]}
{'': [0.13296060636954468, 0.2364820439207477], 'false': [0.23633133928866215, 0.24983563445101917], 'false,false': [0.24983563445101917, nan], 'false,true': [0.2378550603915007, 0.23393882952651093], 'true': [0.11011222022444135, 0.24898143956541466], 'true,false': [0.24898143956541466, nan]}
{'': [0.132550568637064, 0.23608363109221323], 'false': [0.2359293238134652, 0.24983563445101892], 'false,false': [0.24983563445101892, nan], 'false,true': [0.2378550603915106, 0.23393882952652967], 'true': [0.1101122202244407, 0.24898143956541408], 'true,false': [0.24898143956541408, nan]}
{'': [0.132550568637064, 0.23608363109221323], 'false': [0.2359293238134652, 0.24983563445101892], 'false,false': [0.24983563445101892, nan], 'false,true': [0.2378550603915106, 0.23393882952652967], 'true': [0.1101122202244407, 0.24898143956541408], 'true,false': [0.24898143956541408, nan]}
{'': [0.132550568637064, 0.23608363109221323], 'false': [0.2359293238134652, 0.24983563445101892], 'false,false': [0.24983563445101892, nan], 'false,true': [0.2378550603915106, 0.23393882952652967], 'true': [0.1101122202244407, 0.24898143956541408], 'true,false': [0.24898143956541408, nan]}
{'': [0.132550568637064, 0.23608363109221323], 'false': [0.2359293238134652, 0.24983563445101892], 'false,false': [0.24983563445101892, nan], 'false,true': [0.2378550603915106, 0.23393882952652967], 'true': [0.1101122202244407, 0.24898143956541408], 'true,false': [0.24898143956541408, nan]}
{'': [0.132550568637064, 0.23608363109221323], 'false': [0.2359293238134652, 0.24983563445101892], 'false,false': [0.24983563445101892, nan], 'false,true': [0.2378550603915106, 0.23393882952652967], 'true': [0.1101122202244407, 0.24898143956541408], 'true,false': [0.24898143956541408, nan]}
{'': [0.1323364148635707, 0.23590099717487653], 'false': [0.23574504762229387, 0.24983563445101922], 'false,false': [0.24983563445101922, nan], 'false,true': [0.2378550603915064, 0.23393882952652786], 'true': [0.11011222022444085, 0.24898143956541424], 'true,false': [0.24898143956541424, nan]}
{'': [0.1323364148635707, 0.23590099717487653], 'false': [0.23574504762229387, 0.24983563445101922], 'false,false': [0.24983563445101922, nan], 'false,true': [0.2378550603915064, 0.23393882952652786], 'true': [0.11011222022444085, 0.24898143956541424], 'true,false': [0.24898143956541424, nan]}
{'': [0.1323364148635707, 0.23590099717487653], 'false': [0.23574504762229387, 0.24983563445101922], 'false,false': [0.24983563445101922, nan], 'false,true': [0.2378550603915064, 0.23393882952652786], 'true': [0.11011222022444085, 0.24898143956541424], 'true,false': [0.24898143956541424, nan]}
{'': [0.1323364148635707, 0.23590099717487653], 'false': [0.23574504762229387, 0.24983563445101922], 'false,false': [0.24983563445101922, nan], 'false,true': [0.2378550603915064, 0.23393882952652786], 'true': [0.11011222022444085, 0.24898143956541424], 'true,false': [0.24898143956541424, nan]}
{'': [0.1323364148635707, 0.23590099717487653], 'false': [0.23574504762229387, 0.24983563445101922], 'false,false': [0.24983563445101922, nan], 'false,true': [0.2378550603915064, 0.23393882952652786], 'true': [0.11011222022444085, 0.24898143956541424], 'true,false': [0.24898143956541424, nan]}
{'': [0.13220919935780845, 0.23581798581592345], 'false': [0.23566127125865519, 0.24983563445101908], 'false,false': [0.24983563445101908, nan], 'false,true': [0.23785506039150842, 0.23393882952652453], 'true': [0.11011222022444023, 0.2489814395654141], 'true,false': [0.2489814395654141, nan]}
{'': [0.13220919935780845, 0.23581798581592345], 'false': [0.23566127125865519, 0.24983563445101908], 'false,false': [0.24983563445101908, nan], 'false,true': [0.23785506039150842, 0.23393882952652453], 'true': [0.11011222022444023, 0.2489814395654141], 'true,false': [0.2489814395654141, nan]}
{'': [0.13220919935780845, 0.23581798581592345], 'false': [0.23566127125865519, 0.24983563445101908], 'false,false': [0.24983563445101908, nan], 'false,true': [0.23785506039150842, 0.23393882952652453], 'true': [0.11011222022444023, 0.2489814395654141], 'true,false': [0.2489814395654141, nan]}
{'': [0.13220919935780845, 0.23581798581592345], 'false': [0.23566127125865519, 0.24983563445101908], 'false,false': [0.24983563445101908, nan], 'false,true': [0.23785506039150842, 0.23393882952652453], 'true': [0.11011222022444023, 0.2489814395654141], 'true,false': [0.2489814395654141, nan]}
{'': [0.13220919935780845, 0.23581798581592345], 'false': [0.23566127125865519, 0.24983563445101908], 'false,false': [0.24983563445101908, nan], 'false,true': [0.23785506039150842, 0.23393882952652453], 'true': [0.11011222022444023, 0.2489814395654141], 'true,false': [0.2489814395654141, nan]}
{'': [0.1321239705595983, 0.2357799833982129], 'false': [0.23562289988006616, 0.24983563445101914], 'false,false': [0.24983563445101914, nan], 'false,true': [0.23785506039150503, 0.2339388295265198], 'true': [0.11011222022444032, 0.24898143956541377], 'true,false': [0.24898143956541377, nan]}
{'': [0.1321239705595983, 0.2357799833982129], 'false': [0.23562289988006616, 0.24983563445101914], 'false,false': [0.24983563445101914, nan], 'false,true': [0.23785506039150503, 0.2339388295265198], 'true': [0.11011222022444032, 0.24898143956541377], 'true,false': [0.24898143956541377, nan]}
{'': [0.1321239705595983, 0.2357799833982129], 'false': [0.23562289988006616, 0.24983563445101914], 'false,false': [0.24983563445101914, nan], 'false,true': [0.23785506039150503, 0.2339388295265198], 'true': [0.11011222022444032, 0.24898143956541377], 'true,false': [0.24898143956541377, nan]}
{'': [0.1321239705595983, 0.2357799833982129], 'false': [0.23562289988006616, 0.24983563445101914], 'false,false': [0.24983563445101914, nan], 'false,true': [0.23785506039150503, 0.2339388295265198], 'true': [0.11011222022444032, 0.24898143956541377], 'true,false': [0.24898143956541377, nan]}
{'': [0.1321239705595983, 0.2357799833982129], 'false': [0.23562289988006616, 0.24983563445101914], 'false,false': [0.24983563445101914, nan], 'false,true': [0.23785506039150503, 0.2339388295265198], 'true': [0.11011222022444032, 0.24898143956541377], 'true,false': [0.24898143956541377, nan]}










******************************************
******************************************
******************************************
******************************************
******************************************
Performing Theory Revision
Performing Theory Revision
Performing Theory Revision
Performing Theory Revision
Performing Theory Revision
******************************************
******************************************
******************************************
******************************************
******************************************
'false,false,true'
'false,false,true'
'false,false,true'
'false,false,true'
'false,false,true'
Error in experiment of twitter->yeast
Error in experiment of twitter->yeast
Error in experiment of twitter->yeast
Error in experiment of twitter->yeast
Error in experiment of twitter->yeast
