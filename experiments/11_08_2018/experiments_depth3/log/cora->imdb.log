Starting experiment #1 for cora->imdb

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8146706742299468;  // std dev = 1,383, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.08037115732173453;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.4675239350995118;  // std dev = 3,903, 64,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | else return 0.4107014876520597;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.16962434493557788;  // std dev = 0,463, 61,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return 0.1368374596896763;  // std dev = 0,448, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else return 0.13673521368578653;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.35327576779902703;  // std dev = 0,496, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else return 0.1197081339082513;  // std dev = 0,448, 609,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=170 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.29086678669940563;  // std dev = 0,496, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4898319631205979;  // std dev = 1,153, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.16866232075781792;  // std dev = 0,033, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.13917693686494903;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.10689451778047049;  // std dev = 3,278, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.01916011237876351;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.11545640867506018;  // std dev = 3,355, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.10256744171896211;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.4925743492971854;  // std dev = 0,363, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.2515129801334235;  // std dev = 3,263, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return 0.12302718196482264;  // std dev = 3,823, 62,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | else return 0.23067484435164543;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | then if ( haswordauthor(H, I), haswordvenue(B, I) )
%   | | then return -0.12279884826772548;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(J, H), venue(J, B) )
%   | | | then return 0.1830927355811684;  // std dev = 1,443, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09084326248217522;  // std dev = 3,278, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return 0.09081960645599227;  // std dev = 0,453, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else return 0.08719406822686795;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.37519044644628763;  // std dev = 0,363, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.1475200604612259;  // std dev = 0,443, 128,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=66 */
%   | else return 0.17840891570157655;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, A) )
%   | | then if ( samebib(H, I), venue(I, B) )
%   | | | then return 0.4560980930909518;  // std dev = 1,160, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.18658354218875964;  // std dev = 0,086, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.06263758333296478;  // std dev = 0,435, 56,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return -0.012912044821813583;  // std dev = 0,803, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0738316767652379;  // std dev = 3,358, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else return 0.07333567356478538;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1359512817896607;  // std dev = 0,495, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.3704766986517534;  // std dev = 1,161, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.16013315337000153;  // std dev = 0,076, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return -0.11636369164785847;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.06883690688623678;  // std dev = 3,232, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.08152114151964192;  // std dev = 1,311, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.05085261405700791;  // std dev = 3,196, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.06111425663043631;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1026152376503835;  // std dev = 0,495, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else return 0.05004953678262735;  // std dev = 0,446, 609,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=170 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.22491457622192726;  // std dev = 0,363, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | else return 0.07641720892748607;  // std dev = 0,496, 5.123,000 (wgt'ed) examples reached here.  /* #neg=2.297 #pos=2.826 */
%   else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, A) )
%   | | then if ( samebib(G, H), venue(H, B) )
%   | | | then return 0.27613954073034713;  // std dev = 1,162, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.14598782742878394;  // std dev = 0,070, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(I, F), venue(I, B) )
%   | | | then return -0.1888186714510199;  // std dev = 0,096, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.045982757980229584;  // std dev = 3,223, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.05649395220003669;  // std dev = 1,304, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.033142302828761815;  // std dev = 3,196, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.04160396075106517;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.17352358657017208;  // std dev = 0,364, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.08742519793546702;  // std dev = 3,145, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return -0.012949330640286276;  // std dev = 3,811, 62,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | else return 0.05782447453218652;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | then if ( haswordauthor(H, I), haswordvenue(B, I) )
%   | | then return -0.10394094720414127;  // std dev = 0,038, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.04770696573656949;  // std dev = 0,446, 63,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return -0.02095047067750506;  // std dev = 0,654, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.030701652790277017;  // std dev = 3,314, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.033998940286455746;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.13633103369252766;  // std dev = 0,364, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.06721918252790221;  // std dev = 3,358, 71,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=41 */
%   | | | else return -0.017103878864345928;  // std dev = 3,617, 57,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else return 0.0433695839809122;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.052309172034926354;  // std dev = 0,389, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.02270783222391077;  // std dev = 0,432, 56,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, A) )
%   | | | then return -0.0482003584552008;  // std dev = 0,788, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.026980963163654836;  // std dev = 3,355, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else return 0.027662735686395087;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */


Predicates from source: ['samevenue(venue,venue).', 'samebib(class,class).', 'author(class,author).', 'haswordauthor(author,word).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Starting fold 1

Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;movie(D, A), movie(D, E).;true;false
0;true,true;genre(E, F), genre(B, F).;true;true
0;true,true,true;genre(A, G).;false;false
0;true,true,false;genre(E, H), genre(A, H).;false;false
0;false;movie(I, B), movie(I, J).;true;true
0;false,true;movie(K, J), movie(K, A).;false;false
0;false,false;movie(L, A), movie(L, M).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false;movie(D, A), movie(D, E).;true;true
2;false,true;genre(E, F), genre(B, F).;true;true
2;false,true,true;genre(A, G).;false;false
2;false,true,false;movie(H, E), movie(H, B).;false;false
2;false,false;movie(I, B), movie(I, J).;true;false
2;false,false,true;genre(J, K), genre(B, K).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;movie(D, A), movie(D, E).;true;false
3;true,true;movie(D, B).;false;true
3;true,true,false;genre(E, F), genre(B, F).;false;false
3;false;movie(G, A), movie(G, H).;true;true
3;false,true;movie(I, H), movie(I, B).;false;true
3;false,true,false;genre(H, J), genre(B, J).;false;false
3;false,false;movie(K, B), movie(K, L).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;movie(D, A), movie(D, E).;true;false
4;true,true;movie(C, E).;false;false
4;false;movie(F, B), movie(F, G).;true;true
4;false,true;genre(G, H), genre(A, H).;true;false
4;false,true,true;genre(B, I).;false;false
4;false,false;movie(J, A), movie(J, K).;true;false
4;false,false,true;genre(K, L), genre(A, L).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false;movie(D, B), movie(D, E).;true;true
5;false,true;genre(E, F), genre(A, F).;true;true
5;false,true,true;genre(B, G).;false;false
5;false,true,false;movie(H, E), movie(H, A).;false;false
5;false,false;movie(I, A), movie(I, J).;true;false
5;false,false,true;genre(J, K), genre(B, K).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;movie(C, D).;false;false
7;false;movie(E, B), movie(E, F).;true;true
7;false,true;genre(F, G), genre(A, G).;true;true
7;false,true,true;genre(B, H).;false;false
7;false,true,false;genre(F, I), genre(B, I).;false;false
7;false,false;movie(J, A), movie(J, K).;true;false
7;false,false,true;genre(K, L), genre(B, L).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;movie(D, A), movie(D, E).;true;false
8;true,true;movie(D, B).;false;true
8;true,true,false;genre(E, F), genre(B, F).;false;false
8;false;movie(G, A), movie(G, H).;true;true
8;false,true;movie(I, H), movie(I, B).;false;false
8;false,false;movie(J, B), movie(J, K).;true;false
8;false,false,true;genre(K, L), genre(B, L).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;true;movie(D, A), movie(D, E).;true;false
9;true,true;movie(C, F).;false;true
9;true,true,false;genre(E, G), genre(A, G).;false;false
9;false;movie(H, B), movie(H, I).;true;true
9;false,true;genre(I, J), genre(A, J).;false;false
9;false,false;movie(K, A), movie(K, L).;true;false
9;false,false,true;genre(L, M), genre(A, M).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, B), movie(I, J) )
%   | then if ( movie(K, J), movie(K, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5054275060236532;  // std dev = 3,182, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else return -0.12544463852839133;  // std dev = 2,11e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.404864911434614;  // std dev = 3,011, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.3126523419865154;  // std dev = 2,903, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then if ( movie(H, G), movie(H, B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(G, I), genre(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.23820471507464944;  // std dev = 2,854, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( genre(G, H), genre(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926104;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18172360132586676;  // std dev = 2,844, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0851847513883968;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13971277666300377;  // std dev = 2,853, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else return -0.07877675473109179;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then return 0.10842930143440095;  // std dev = 2,869, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B), movie(E, F) )
%   | then if ( genre(F, G), genre(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(F, H), genre(B, H) )
%   | | | then return -0.07324622576333702;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.08491179241990189;  // std dev = 2,886, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then if ( movie(H, G), movie(H, B) )
%   | | then return -0.0684269778442027;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.06702209210014788;  // std dev = 2,903, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( genre(H, I), genre(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977794
   AUC PR    = 0.979592
   CLL	      = -0.289734
   Precision = 0.806931 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.893151


Total learning time: 1.912 seconds
Total inference time: 0.98 seconds
AUC ROC: 0.977794


Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'genre(E, F), genre(B, F)', 'true,true,true': 'genre(A, G)', 'true,true,false': 'genre(E, H), genre(A, H)', 'false': 'movie(I, B), movie(I, J)', 'false,true': 'movie(K, J), movie(K, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 56], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 18, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false': [2.58e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'true': [3.182, 19, 56], 'false': [2.11e-08, 37, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)', 'false,true,false': 'movie(H, E), movie(H, B)'}, {'true': [3.011, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 7, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(D, B)', 'false': 'movie(F, A), movie(F, G)', 'false,true': 'movie(H, G), movie(H, B)', 'false,true,false': 'genre(G, I), genre(B, I)'}, {'true,true,true': [2.903, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'genre(G, H), genre(A, H)'}, {'true,true,true': [2.854, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'movie(G, E), movie(G, A)'}, {'true': [2.844, 19, 56], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 8, 0], 'false,true,false,false': [1.97e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'true': [2.853, 19, 56], 'false': [0.0, 37, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(C, D)', 'false': 'movie(E, B), movie(E, F)', 'false,true': 'genre(F, G), genre(A, G)', 'false,true,false': 'genre(F, H), genre(B, H)'}, {'true,true': [2.869, 19, 56], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(D, B)', 'false': 'movie(F, A), movie(F, G)', 'false,true': 'movie(H, G), movie(H, B)'}, {'true,true,true': [2.886, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, F)', 'false': 'movie(G, B), movie(G, H)', 'false,true': 'genre(H, I), genre(A, I)'}, {'true,true,true': [2.903, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
{'': [0.18915555555555524, 3.900783600034334e-17], 'true': [0.18915555555555524, nan], 'true,true': [-1.2688263138573217e-16, 0.0], 'false': [3.900783600034334e-17, nan], 'false,true': [-6.938893903907228e-18, 2.2970131543968756e-17]}
{'': [0.1350355998689688, 1.200241107702872e-17]}
{'': [0.12091018367868796, -9.00180830777154e-18], 'false': [-9.00180830777154e-18, nan], 'false,true': [0.0, -1.0793834961633467e-17]}
{'': [0.11234588963422444, 0.0], 'true': [0.11234588963422444, nan], 'true,true': [0.11234588963422444, nan], 'false': [0.0, nan], 'false,true': [-5.204170427930421e-18, 0.0]}
{'': [0.10863022725775086, -9.00180830777154e-18], 'true': [0.10863022725775086, nan], 'true,true': [0.10863022725775086, nan], 'false': [-9.00180830777154e-18, nan], 'false,true': [nan, -9.00180830777154e-18]}
{'': [0.10785275184674348, 1.350271246165731e-17], 'false': [1.350271246165731e-17, nan], 'false,true': [nan, 1.350271246165731e-17]}
{'': [0.10850798341856892, -7.50150692314295e-19]}
{'': [0.10973050294018849, -1.50030138462859e-18], 'true': [0.10973050294018849, nan], 'false': [-1.50030138462859e-18, nan], 'false,true': [nan, -1.50030138462859e-18]}
{'': [0.11108865460987563, 2.250452076942885e-18], 'true': [0.11108865460987563, nan], 'true,true': [0.11108865460987563, nan], 'false': [2.250452076942885e-18, nan], 'false,true': [0.0, -5.742532885992189e-18]}
{'': [0.11238722769087106, -2.250452076942885e-18], 'true': [0.11238722769087106, nan], 'true,true': [0.11238722769087106, nan], 'false': [-2.250452076942885e-18, nan], 'false,true': [nan, -2.250452076942885e-18]}


******************************************
Performing Theory Revision
******************************************
'true,true,true'
Error in experiment of cora->imdb
Starting experiment #1 for cora->imdb

Starting experiment #1 for cora->imdb

Start learning from source dataset

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6981489350995119;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.4490580260086027;  // std dev = 3,994, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return 0.29363280606725306;  // std dev = 3,904, 62,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | else return 0.4107014876520597;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordvenue(A, J) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(K, I), venue(K, A) )
%   | | | then return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.15226658215833588;  // std dev = 3,254, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.13674672107736763;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6981489350995119;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.4490580260086027;  // std dev = 3,994, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return 0.29363280606725306;  // std dev = 3,904, 62,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | else return 0.4107014876520597;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordvenue(A, J) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(K, I), venue(K, A) )
%   | | | then return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.15226658215833588;  // std dev = 3,254, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.13674672107736763;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.5906067787080471;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.3851926776601655;  // std dev = 3,994, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return 0.2540060719894457;  // std dev = 3,904, 62,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | else return 0.3530327835818433;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordauthor(H, I), haswordvenue(A, I) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.14762532829156969;  // std dev = 0,463, 61,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.17400756713134793;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.10990500302878338;  // std dev = 3,199, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.1192605123842908;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.5906067787080471;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.3851926776601655;  // std dev = 3,994, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return 0.2540060719894457;  // std dev = 3,904, 62,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | else return 0.3530327835818433;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordauthor(H, I), haswordvenue(A, I) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.14762532829156969;  // std dev = 0,463, 61,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.17400756713134793;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.10990500302878338;  // std dev = 3,199, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.1192605123842908;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.4650981188699304;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.32080912430180175;  // std dev = 4,032, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.1805246138375813;  // std dev = 3,881, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.33086549194343334;  // std dev = 3,997, 69,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=41 */
%   | | | else return 0.20505493620243503;  // std dev = 3,810, 57,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | | else return 0.29142519828934804;  // std dev = 0,497, 4.869,000 (wgt'ed) examples reached here.  /* #neg=2.175 #pos=2.694 */
%   else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | then if ( haswordauthor(K, L), haswordvenue(B, L) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.12512977023646246;  // std dev = 0,458, 63,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else return 0.10269682109980327;  // std dev = 0,449, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.4650981188699304;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.32080912430180175;  // std dev = 4,032, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.1805246138375813;  // std dev = 3,881, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.33086549194343334;  // std dev = 3,997, 69,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=41 */
%   | | | else return 0.20505493620243503;  // std dev = 3,810, 57,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | | else return 0.29142519828934804;  // std dev = 0,497, 4.869,000 (wgt'ed) examples reached here.  /* #neg=2.175 #pos=2.694 */
%   else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | then if ( haswordauthor(K, L), haswordvenue(B, L) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.12512977023646246;  // std dev = 0,458, 63,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else return 0.10269682109980327;  // std dev = 0,449, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23089407611747367;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.12289184780705796;  // std dev = 1,143, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.10890384790379082;  // std dev = 3,426, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 5.061336836307495E-4;  // std dev = 0,890, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.09124546995950268;  // std dev = 3,380, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else return 0.08724153438140943;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23089407611747367;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.12289184780705796;  // std dev = 1,143, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.10890384790379082;  // std dev = 3,426, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 5.061336836307495E-4;  // std dev = 0,890, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.09124546995950268;  // std dev = 3,380, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else return 0.08724153438140943;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1786047280038046;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.45022511643609403;  // std dev = 1,159, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.18750645961725634;  // std dev = 0,107, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.15986734102527533;  // std dev = 0,082, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07250250315029669;  // std dev = 3,265, 55,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.0979125033781149;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.06379928623771619;  // std dev = 3,175, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.07337796295080432;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1786047280038046;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.45022511643609403;  // std dev = 1,159, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.18750645961725634;  // std dev = 0,107, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.15986734102527533;  // std dev = 0,082, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07250250315029669;  // std dev = 3,265, 55,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.0979125033781149;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.06379928623771619;  // std dev = 3,175, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.07337796295080432;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13596402949351274;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.09234332861328158;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1463812809541234;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.06535248616575194;  // std dev = 3,238, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return 0.05600819559850984;  // std dev = 0,442, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else return 0.0611511794423233;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13596402949351274;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.09234332861328158;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1463812809541234;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.06535248616575194;  // std dev = 3,238, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return 0.05600819559850984;  // std dev = 0,442, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else return 0.0611511794423233;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1026124092568454;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.35209519562547187;  // std dev = 1,159, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.16644943604734555;  // std dev = 0,107, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.0418042940579474;  // std dev = 0,430, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else return 0.049700755526651166;  // std dev = 0,449, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1026124092568454;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.35209519562547187;  // std dev = 1,159, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.16644943604734555;  // std dev = 0,107, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.0418042940579474;  // std dev = 0,430, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else return 0.049700755526651166;  // std dev = 0,449, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07712614522394028;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.08600627590949979;  // std dev = 0,031, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.05451546929701604;  // std dev = 0,445, 63,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else return 0.04078569491183071;  // std dev = 0,449, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07712614522394028;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.08600627590949979;  // std dev = 0,031, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.05451546929701604;  // std dev = 0,445, 63,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else return 0.04078569491183071;  // std dev = 0,449, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.057879493073304394;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.36569927984489964;  // std dev = 1,153, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.2585749262065068;  // std dev = 0,191, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.2013405766204174;  // std dev = 0,139, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.03798834325853534;  // std dev = 3,204, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.021548304258068474;  // std dev = 0,707, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.028974840139123343;  // std dev = 3,344, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else return 0.03424775137254751;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.057879493073304394;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.36569927984489964;  // std dev = 1,153, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.2585749262065068;  // std dev = 0,191, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.2013405766204174;  // std dev = 0,139, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.03798834325853534;  // std dev = 3,204, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.021548304258068474;  // std dev = 0,707, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.028974840139123343;  // std dev = 3,344, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else return 0.03424775137254751;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.16367480078148047;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.06599513733924225;  // std dev = 4,030, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return -0.039508849236962816;  // std dev = 3,881, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.07380799121256207;  // std dev = 3,971, 69,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=41 */
%   | | | else return -0.010733265843924918;  // std dev = 3,833, 57,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | | else return 0.04373744190904836;  // std dev = 0,497, 4.869,000 (wgt'ed) examples reached here.  /* #neg=2.175 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then return 0.026287268226077985;  // std dev = 0,431, 67,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return 0.020066120958855366;  // std dev = 0,438, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else return 0.027869115258556725;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.16367480078148047;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.06599513733924225;  // std dev = 4,030, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return -0.039508849236962816;  // std dev = 3,881, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.07380799121256207;  // std dev = 3,971, 69,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=41 */
%   | | | else return -0.010733265843924918;  // std dev = 3,833, 57,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | | else return 0.04373744190904836;  // std dev = 0,497, 4.869,000 (wgt'ed) examples reached here.  /* #neg=2.175 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then return 0.026287268226077985;  // std dev = 0,431, 67,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return 0.020066120958855366;  // std dev = 0,438, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else return 0.027869115258556725;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */




Predicates from source: ['samevenue(venue,venue).', 'samebib(class,class).', 'author(class,author).', 'haswordauthor(author,word).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Predicates from source: ['samevenue(venue,venue).', 'samebib(class,class).', 'author(class,author).', 'haswordauthor(author,word).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Starting fold 1

Starting fold 1

Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)'] 

Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)'] 

Transferred target predicate: workedunder 

Transferred target predicate: workedunder 

******************************************
******************************************
Performing Parameter Learning
Performing Parameter Learning
******************************************
******************************************
Refine
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;movie(D, A), movie(D, E).;true;false
0;true;movie(D, A), movie(D, E).;true;false
0;true,true;movie(C, F).;false;true
0;true,true;movie(C, F).;false;true
0;true,true,false;genre(E, G), genre(B, G).;false;false
0;true,true,false;genre(E, G), genre(B, G).;false;false
0;false;movie(H, B), movie(H, I).;true;false
0;false;movie(H, B), movie(H, I).;true;false
0;false,true;movie(J, I), movie(J, A).;false;true
0;false,true;movie(J, I), movie(J, A).;false;true
0;false,true,false;genre(I, K), genre(A, K).;false;false
0;false,true,false;genre(I, K), genre(A, K).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;movie(D, A), movie(D, E).;true;false
1;true;movie(D, A), movie(D, E).;true;false
1;true,true;movie(C, E).;false;true
1;true,true;movie(C, E).;false;true
1;true,true,false;genre(E, F), genre(B, F).;false;false
1;true,true,false;genre(E, F), genre(B, F).;false;false
1;false;movie(G, B), movie(G, H).;true;true
1;false;movie(G, B), movie(G, H).;true;true
1;false,true;movie(I, H), movie(I, A).;false;false
1;false,true;movie(I, H), movie(I, A).;false;false
1;false,false;movie(J, A), movie(J, K).;true;false
1;false,false;movie(J, A), movie(J, K).;true;false
1;false,false,true;genre(K, L), genre(B, L).;false;false
1;false,false,true;genre(K, L), genre(B, L).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;movie(D, B), movie(D, E).;true;true
2;true;movie(D, B), movie(D, E).;true;true
2;true,true;movie(C, E).;false;true
2;true,true;movie(C, E).;false;true
2;true,true,false;genre(E, F), genre(A, F).;false;false
2;true,true,false;genre(E, F), genre(A, F).;false;false
2;true,false;movie(G, A), movie(G, H).;true;false
2;true,false;movie(G, A), movie(G, H).;true;false
2;true,false,true;genre(H, I), genre(A, I).;false;false
2;true,false,true;genre(H, I), genre(A, I).;false;false
2;false;movie(J, A), movie(J, K).;true;false
2;false;movie(J, A), movie(J, K).;true;false
2;false,true;movie(L, K), movie(L, B).;false;false
2;false,true;movie(L, K), movie(L, B).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false;movie(D, B), movie(D, E).;true;true
3;false;movie(D, B), movie(D, E).;true;true
3;false,true;movie(F, E), movie(F, A).;false;true
3;false,true;movie(F, E), movie(F, A).;false;true
3;false,true,false;genre(E, G), genre(B, G).;false;false
3;false,true,false;genre(E, G), genre(B, G).;false;false
3;false,false;movie(H, A), movie(H, I).;true;false
3;false,false;movie(H, A), movie(H, I).;true;false
3;false,false,true;genre(I, J), genre(A, J).;false;false
3;false,false,true;genre(I, J), genre(A, J).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false;movie(D, A), movie(D, E).;true;true
4;false;movie(D, A), movie(D, E).;true;true
4;false,true;genre(E, F), genre(B, F).;true;true
4;false,true;genre(E, F), genre(B, F).;true;true
4;false,true,true;genre(A, G).;false;false
4;false,true,true;genre(A, G).;false;false
4;false,true,false;genre(E, H), genre(A, H).;false;false
4;false,true,false;genre(E, H), genre(A, H).;false;false
4;false,false;movie(I, B), movie(I, J).;true;false
4;false,false;movie(I, B), movie(I, J).;true;false
4;false,false,true;genre(J, K), genre(A, K).;false;false
4;false,false,true;genre(J, K), genre(A, K).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false;movie(D, B), movie(D, E).;true;true
5;false;movie(D, B), movie(D, E).;true;true
5;false,true;movie(F, E), movie(F, A).;false;true
5;false,true;movie(F, E), movie(F, A).;false;true
5;false,true,false;genre(E, G), genre(A, G).;false;false
5;false,true,false;genre(E, G), genre(A, G).;false;false
5;false,false;movie(H, A), movie(H, I).;false;false
5;false,false;movie(H, A), movie(H, I).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false;movie(D, A), movie(D, E).;true;false
6;false;movie(D, A), movie(D, E).;true;false
6;false,true;genre(E, F), genre(B, F).;true;false
6;false,true;genre(E, F), genre(B, F).;true;false
6;false,true,true;genre(A, G).;false;false
6;false,true,true;genre(A, G).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false;movie(D, A), movie(D, E).;true;false
7;false;movie(D, A), movie(D, E).;true;false
7;false,true;movie(F, E), movie(F, B).;false;false
7;false,true;movie(F, E), movie(F, B).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false;movie(D, B), movie(D, E).;true;true
8;false;movie(D, B), movie(D, E).;true;true
8;false,true;genre(E, F), genre(A, F).;true;true
8;false,true;genre(E, F), genre(A, F).;true;true
8;false,true,true;genre(B, G).;false;false
8;false,true,true;genre(B, G).;false;false
8;false,true,false;genre(E, H), genre(B, H).;false;false
8;false,true,false;genre(E, H), genre(B, H).;false;false
8;false,false;movie(I, A), movie(I, J).;true;false
8;false,false;movie(I, A), movie(I, J).;true;false
8;false,false,true;genre(J, K), genre(A, K).;false;false
8;false,false,true;genre(J, K), genre(A, K).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;true;movie(D, B), movie(D, E).;true;true
9;true;movie(D, B), movie(D, E).;true;true
9;true,true;movie(D, A).;false;true
9;true,true;movie(D, A).;false;true
9;true,true,false;genre(E, F), genre(A, F).;false;false
9;true,true,false;genre(E, F), genre(A, F).;false;false
9;true,false;movie(G, A), movie(G, H).;true;false
9;true,false;movie(G, A), movie(G, H).;true;false
9;true,false,true;genre(H, I), genre(A, I).;false;false
9;true,false,true;genre(H, I), genre(A, I).;false;false
9;false;movie(J, B), movie(J, K).;false;true
9;false;movie(J, B), movie(J, K).;false;true
9;false,false;movie(L, A), movie(L, M).;false;false
9;false,false;movie(L, A), movie(L, M).;false;false




WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.6048156017661795;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(H, J), genre(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.6048156017661795;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( movie(I, H), movie(I, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(H, J), genre(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.5143336738429792;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.5143336738429792;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( movie(H, G), movie(H, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.41059521048428527;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then if ( movie(H, G), movie(H, B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.41059521048428527;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then if ( movie(H, G), movie(H, B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3138222988479822;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3138222988479822;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23577669286643868;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.092691276189261;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23577669286643868;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.092691276189261;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1772814052330582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0851847513883968;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1772814052330582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0851847513883968;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13445346684564582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13445346684564582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.103054135704297;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.103054135704297;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0797810792947854;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0797810792947854;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(D, A) )
%   | | then return 0.06229979893106042;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(D, A) )
%   | | then return 0.06229979893106042;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.




Results
Results
   AUC ROC   = 0.880368
   AUC ROC   = 0.880368
   AUC PR    = 0.806931
   AUC PR    = 0.806931
   CLL	      = -0.347916
   CLL	      = -0.347916
   Precision = 0.806931 at threshold = 0.5
   Precision = 0.806931 at threshold = 0.5
   Recall    = 1.0
   Recall    = 1.0
   F1        = 0.893151
   F1        = 0.893151




Total learning time: 2.173 seconds
Total learning time: 2.173 seconds
Total inference time: 0.998 seconds
Total inference time: 0.998 seconds
AUC ROC: 0.880368
AUC ROC: 0.880368




Structure after Parameter Learning
Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, F)', 'false': 'movie(G, B), movie(G, H)', 'false,true': 'movie(I, H), movie(I, A)', 'false,true,false': 'genre(H, J), genre(A, J)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [2.58e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, F)', 'false': 'movie(G, B), movie(G, H)', 'false,true': 'movie(I, H), movie(I, A)', 'false,true,false': 'genre(H, J), genre(A, J)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [2.58e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'movie(H, G), movie(H, A)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'movie(H, G), movie(H, A)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, A), movie(F, G)', 'false,true': 'movie(H, G), movie(H, B)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, A), movie(F, G)', 'false,true': 'movie(H, G), movie(H, B)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)', 'false,true,false': 'genre(E, H), genre(A, H)'}, {'true': [3.767, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)', 'false,true,false': 'genre(E, H), genre(A, H)'}, {'true': [3.767, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.97e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.97e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [0.0, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [0.0, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)'}, {'true': [3.767, 19, 56], 'false,true,true': [2.63e-09, 8, 0], 'false,true,false': [7.45e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)'}, {'true': [3.767, 19, 56], 'false,true,true': [2.63e-09, 8, 0], 'false,true,false': [7.45e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(D, A)', 'false': 'movie(F, B), movie(F, G)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(D, A)', 'false': 'movie(F, B), movie(F, G)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
{'': [0.18915555555555524, 3.900783600034334e-17], 'true': [0.18915555555555524, nan], 'true,true': [0.18915555555555524, nan], 'false': [3.900783600034334e-17, nan], 'false,true': [-6.938893903907228e-18, 2.2970131543968756e-17]}
{'': [0.18915555555555524, 3.900783600034334e-17], 'true': [0.18915555555555524, nan], 'true,true': [0.18915555555555524, nan], 'false': [3.900783600034334e-17, nan], 'false,true': [-6.938893903907228e-18, 2.2970131543968756e-17]}
{'': [0.18915555555555533, 1.200241107702872e-17], 'true': [0.18915555555555533, nan], 'true,true': [0.18915555555555533, nan], 'false': [1.200241107702872e-17, nan], 'false,true': [0.0, -5.742532885992189e-18]}
{'': [0.18915555555555533, 1.200241107702872e-17], 'true': [0.18915555555555533, nan], 'true,true': [0.18915555555555533, nan], 'false': [1.200241107702872e-17, nan], 'false,true': [0.0, -5.742532885992189e-18]}
{'': [0.1891555555555554, -9.00180830777154e-18], 'true': [0.1891555555555554, nan], 'true,true': [0.1891555555555554, nan], 'false': [-9.00180830777154e-18, nan], 'false,true': [-1.734723475976807e-18, -7.656710514656252e-18]}
{'': [0.1891555555555554, -9.00180830777154e-18], 'true': [0.1891555555555554, nan], 'true,true': [0.1891555555555554, nan], 'false': [-9.00180830777154e-18, nan], 'false,true': [-1.734723475976807e-18, -7.656710514656252e-18]}
{'': [0.18915555555555608, -1.50030138462859e-18], 'false': [-1.50030138462859e-18, nan], 'false,true': [1.734723475976807e-18, 0.0]}
{'': [0.18915555555555608, -1.50030138462859e-18], 'false': [-1.50030138462859e-18, nan], 'false,true': [1.734723475976807e-18, 0.0]}
{'': [0.18915555555555552, -1.050210969240013e-17], 'false': [-1.050210969240013e-17, nan], 'false,true': [0.0, -9.25185853854297e-18]}
{'': [0.18915555555555552, -1.050210969240013e-17], 'false': [-1.050210969240013e-17, nan], 'false,true': [0.0, -9.25185853854297e-18]}
{'': [0.189155555555556, 1.350271246165731e-17], 'false': [1.350271246165731e-17, nan], 'false,true': [1.734723475976807e-18, 1.3399243400648442e-17]}
{'': [0.189155555555556, 1.350271246165731e-17], 'false': [1.350271246165731e-17, nan], 'false,true': [1.734723475976807e-18, 1.3399243400648442e-17]}
{'': [0.18915555555555547, -7.50150692314295e-19], 'false': [-7.50150692314295e-19, nan], 'false,true': [0.0, 0.0]}
{'': [0.18915555555555547, -7.50150692314295e-19], 'false': [-7.50150692314295e-19, nan], 'false,true': [0.0, 0.0]}
{'': [0.18915555555555574, 2.250452076942885e-18], 'false': [2.250452076942885e-18, nan], 'false,true': [8.673617379884035e-19, 1.914177628664063e-18]}
{'': [0.18915555555555574, 2.250452076942885e-18], 'false': [2.250452076942885e-18, nan], 'false,true': [8.673617379884035e-19, 1.914177628664063e-18]}
{'': [0.18915555555555538, -7.50150692314295e-19], 'false': [-7.50150692314295e-19, nan], 'false,true': [nan, -7.50150692314295e-19]}
{'': [0.18915555555555538, -7.50150692314295e-19], 'false': [-7.50150692314295e-19, nan], 'false,true': [nan, -7.50150692314295e-19]}
{'': [0.18915555555555538, -2.250452076942885e-18], 'true': [0.18915555555555538, nan], 'true,true': [0.18915555555555538, nan], 'false': [-2.250452076942885e-18, nan]}
{'': [0.18915555555555538, -2.250452076942885e-18], 'true': [0.18915555555555538, nan], 'true,true': [0.18915555555555538, nan], 'false': [-2.250452076942885e-18, nan]}




******************************************
******************************************
Performing Theory Revision
Performing Theory Revision
******************************************
******************************************
'false,true,false'
'false,true,false'
Error in experiment of cora->imdb
Error in experiment of cora->imdb
Starting experiment #1 for cora->imdb

Starting experiment #1 for cora->imdb

Starting experiment #1 for cora->imdb

Start learning from source dataset

Start learning from source dataset

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8146706742299468;  // std dev = 1,383, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.08037115732173453;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.4675239350995118;  // std dev = 3,903, 64,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | else return 0.4107014876520597;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(L, J), venue(L, A) )
%   | | | then return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.15226658215833588;  // std dev = 3,254, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.13674672107736763;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8146706742299468;  // std dev = 1,383, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.08037115732173453;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.4675239350995118;  // std dev = 3,903, 64,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | else return 0.4107014876520597;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(L, J), venue(L, A) )
%   | | | then return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.15226658215833588;  // std dev = 3,254, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.13674672107736763;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8146706742299468;  // std dev = 1,383, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.08037115732173453;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.4675239350995118;  // std dev = 3,903, 64,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | else return 0.4107014876520597;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(L, J), venue(L, A) )
%   | | | then return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.15226658215833588;  // std dev = 3,254, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.13674672107736763;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.35327576779902703;  // std dev = 0,496, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2404652584200655;  // std dev = 1,548, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.12337346815058185;  // std dev = 3,276, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.1570669878174392;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.11858448001852356;  // std dev = 3,175, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.1192605123842908;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.35327576779902703;  // std dev = 0,496, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2404652584200655;  // std dev = 1,548, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.12337346815058185;  // std dev = 3,276, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.1570669878174392;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.11858448001852356;  // std dev = 3,175, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.1192605123842908;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.35327576779902703;  // std dev = 0,496, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2404652584200655;  // std dev = 1,548, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.12337346815058185;  // std dev = 3,276, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.1570669878174392;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.11858448001852356;  // std dev = 3,175, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.1192605123842908;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.5549442296477965;  // std dev = 0,363, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.32104766081050573;  // std dev = 4,029, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.18221848129104148;  // std dev = 3,870, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.31847887132927505;  // std dev = 3,311, 65,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=39 */
%   | | | else return 0.1878913555221373;  // std dev = 3,813, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | | else return 0.2913782280203433;  // std dev = 0,497, 4.869,000 (wgt'ed) examples reached here.  /* #neg=2.175 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then return 0.10785743666984775;  // std dev = 0,446, 67,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return 0.09952841304225776;  // std dev = 0,448, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else return 0.10263068512123286;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.5549442296477965;  // std dev = 0,363, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.32104766081050573;  // std dev = 4,029, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.18221848129104148;  // std dev = 3,870, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.31847887132927505;  // std dev = 3,311, 65,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=39 */
%   | | | else return 0.1878913555221373;  // std dev = 3,813, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | | else return 0.2913782280203433;  // std dev = 0,497, 4.869,000 (wgt'ed) examples reached here.  /* #neg=2.175 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then return 0.10785743666984775;  // std dev = 0,446, 67,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return 0.09952841304225776;  // std dev = 0,448, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else return 0.10263068512123286;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.5549442296477965;  // std dev = 0,363, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.32104766081050573;  // std dev = 4,029, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.18221848129104148;  // std dev = 3,870, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.31847887132927505;  // std dev = 3,311, 65,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=39 */
%   | | | else return 0.1878913555221373;  // std dev = 3,813, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | | else return 0.2913782280203433;  // std dev = 0,497, 4.869,000 (wgt'ed) examples reached here.  /* #neg=2.175 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then return 0.10785743666984775;  // std dev = 0,446, 67,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return 0.09952841304225776;  // std dev = 0,448, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else return 0.10263068512123286;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.5538961567453278;  // std dev = 0,155, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4002395668611717;  // std dev = 1,781, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.25460958060975747;  // std dev = 4,028, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.14565679554670652;  // std dev = 3,869, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else return 0.23060258648886073;  // std dev = 0,496, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then return 0.08669809227018097;  // std dev = 0,442, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return -0.008627977611007049;  // std dev = 0,884, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0992132512028126;  // std dev = 3,354, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.08725176752032937;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.5538961567453278;  // std dev = 0,155, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4002395668611717;  // std dev = 1,781, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.25460958060975747;  // std dev = 4,028, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.14565679554670652;  // std dev = 3,869, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else return 0.23060258648886073;  // std dev = 0,496, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then return 0.08669809227018097;  // std dev = 0,442, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return -0.008627977611007049;  // std dev = 0,884, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0992132512028126;  // std dev = 3,354, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.08725176752032937;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.5538961567453278;  // std dev = 0,155, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4002395668611717;  // std dev = 1,781, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.25460958060975747;  // std dev = 4,028, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.14565679554670652;  // std dev = 3,869, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else return 0.23060258648886073;  // std dev = 0,496, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then return 0.08669809227018097;  // std dev = 0,442, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return -0.008627977611007049;  // std dev = 0,884, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0992132512028126;  // std dev = 3,354, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.08725176752032937;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1785769082432746;  // std dev = 0,495, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.1332249797752769;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1710152955279895;  // std dev = 1,550, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0839581341451733;  // std dev = 3,247, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.017130539637032503;  // std dev = 0,886, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07832325773474738;  // std dev = 3,379, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else return 0.07338708043421995;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1785769082432746;  // std dev = 0,495, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.1332249797752769;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1710152955279895;  // std dev = 1,550, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0839581341451733;  // std dev = 3,247, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.017130539637032503;  // std dev = 0,886, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07832325773474738;  // std dev = 3,379, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else return 0.07338708043421995;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1785769082432746;  // std dev = 0,495, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.1332249797752769;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1710152955279895;  // std dev = 1,550, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0839581341451733;  // std dev = 3,247, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.017130539637032503;  // std dev = 0,886, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07832325773474738;  // std dev = 3,379, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else return 0.07338708043421995;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13596289646039358;  // std dev = 0,495, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.11857804036837026;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.16554986280744807;  // std dev = 1,545, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.06451011619755509;  // std dev = 3,268, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.03082792321202537;  // std dev = 0,877, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06677034669533162;  // std dev = 3,354, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.06115914019653763;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13596289646039358;  // std dev = 0,495, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.11857804036837026;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.16554986280744807;  // std dev = 1,545, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.06451011619755509;  // std dev = 3,268, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.03082792321202537;  // std dev = 0,877, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06677034669533162;  // std dev = 3,354, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.06115914019653763;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13596289646039358;  // std dev = 0,495, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.11857804036837026;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.16554986280744807;  // std dev = 1,545, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.06451011619755509;  // std dev = 3,268, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.03082792321202537;  // std dev = 0,877, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06677034669533162;  // std dev = 3,354, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.06115914019653763;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.2483478183218154;  // std dev = 0,361, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.12301057878559692;  // std dev = 4,085, 72,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=41 */
%   | | | else return 0.030559673054130588;  // std dev = 3,795, 56,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | else return 0.10241336335589672;  // std dev = 0,496, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then if ( author(K, I), venue(K, A) )
%   | | | then return 0.2848410983994349;  // std dev = 0,923, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.18778018383577255;  // std dev = 0,099, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordauthor(I, L), haswordvenue(A, L) )
%   | | | then return -0.1067341388424238;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.06692619705519998;  // std dev = 3,419, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else return 0.04989566249843305;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.2483478183218154;  // std dev = 0,361, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.12301057878559692;  // std dev = 4,085, 72,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=41 */
%   | | | else return 0.030559673054130588;  // std dev = 3,795, 56,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | else return 0.10241336335589672;  // std dev = 0,496, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then if ( author(K, I), venue(K, A) )
%   | | | then return 0.2848410983994349;  // std dev = 0,923, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.18778018383577255;  // std dev = 0,099, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordauthor(I, L), haswordvenue(A, L) )
%   | | | then return -0.1067341388424238;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.06692619705519998;  // std dev = 3,419, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else return 0.04989566249843305;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.2483478183218154;  // std dev = 0,361, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.12301057878559692;  // std dev = 4,085, 72,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=41 */
%   | | | else return 0.030559673054130588;  // std dev = 3,795, 56,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | else return 0.10241336335589672;  // std dev = 0,496, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then if ( author(K, I), venue(K, A) )
%   | | | then return 0.2848410983994349;  // std dev = 0,923, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.18778018383577255;  // std dev = 0,099, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordauthor(I, L), haswordvenue(A, L) )
%   | | | then return -0.1067341388424238;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.06692619705519998;  // std dev = 3,419, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else return 0.04989566249843305;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07716175502490781;  // std dev = 0,495, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.38789156252450746;  // std dev = 1,158, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.23612536006088822;  // std dev = 0,157, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.10362483520458717;  // std dev = 0,038, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04341151916793226;  // std dev = 3,258, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else return 0.041072750443113606;  // std dev = 0,449, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07716175502490781;  // std dev = 0,495, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.38789156252450746;  // std dev = 1,158, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.23612536006088822;  // std dev = 0,157, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.10362483520458717;  // std dev = 0,038, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04341151916793226;  // std dev = 3,258, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else return 0.041072750443113606;  // std dev = 0,449, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07716175502490781;  // std dev = 0,495, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.38789156252450746;  // std dev = 1,158, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.23612536006088822;  // std dev = 0,157, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.10362483520458717;  // std dev = 0,038, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04341151916793226;  // std dev = 3,258, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else return 0.041072750443113606;  // std dev = 0,449, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.42082830291980594;  // std dev = 1,428, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.5006473482469429;  // std dev = 0,091, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.2374509116117417;  // std dev = 1,649, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.12359530664038508;  // std dev = 3,752, 63,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=39 */
%   | else return 0.05772299483520976;  // std dev = 0,496, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else return 0.033417454991922224;  // std dev = 0,446, 609,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=170 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.42082830291980594;  // std dev = 1,428, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.5006473482469429;  // std dev = 0,091, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.2374509116117417;  // std dev = 1,649, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.12359530664038508;  // std dev = 3,752, 63,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=39 */
%   | else return 0.05772299483520976;  // std dev = 0,496, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else return 0.033417454991922224;  // std dev = 0,446, 609,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=170 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.42082830291980594;  // std dev = 1,428, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.5006473482469429;  // std dev = 0,091, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.2374509116117417;  // std dev = 1,649, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.12359530664038508;  // std dev = 3,752, 63,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=39 */
%   | else return 0.05772299483520976;  // std dev = 0,496, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else return 0.033417454991922224;  // std dev = 0,446, 609,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=170 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.043494336225630745;  // std dev = 0,494, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.34955836754761566;  // std dev = 1,143, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.25678094174205324;  // std dev = 0,163, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.15077807228388995;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.03083555429239113;  // std dev = 3,212, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.05385692795074019;  // std dev = 0,786, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.024835083844682204;  // std dev = 3,356, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else return 0.02794183908265744;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.043494336225630745;  // std dev = 0,494, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.34955836754761566;  // std dev = 1,143, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.25678094174205324;  // std dev = 0,163, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.15077807228388995;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.03083555429239113;  // std dev = 3,212, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.05385692795074019;  // std dev = 0,786, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.024835083844682204;  // std dev = 3,356, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else return 0.02794183908265744;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.043494336225630745;  // std dev = 0,494, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.34955836754761566;  // std dev = 1,143, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.25678094174205324;  // std dev = 0,163, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.15077807228388995;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.03083555429239113;  // std dev = 3,212, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.05385692795074019;  // std dev = 0,786, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.024835083844682204;  // std dev = 3,356, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else return 0.02794183908265744;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */






Predicates from source: ['samevenue(venue,venue).', 'samebib(class,class).', 'author(class,author).', 'haswordauthor(author,word).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Predicates from source: ['samevenue(venue,venue).', 'samebib(class,class).', 'author(class,author).', 'haswordauthor(author,word).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Predicates from source: ['samevenue(venue,venue).', 'samebib(class,class).', 'author(class,author).', 'haswordauthor(author,word).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Starting fold 1

Starting fold 1

Starting fold 1

Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)'] 

Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)'] 

Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)'] 

Transferred target predicate: workedunder 

Transferred target predicate: workedunder 

Transferred target predicate: workedunder 

******************************************
******************************************
******************************************
Performing Parameter Learning
Performing Parameter Learning
Performing Parameter Learning
******************************************
******************************************
******************************************
Refine
Refine
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;movie(D, A), movie(D, E).;true;false
0;true;movie(D, A), movie(D, E).;true;false
0;true;movie(D, A), movie(D, E).;true;false
0;true,true;genre(E, F), genre(B, F).;true;true
0;true,true;genre(E, F), genre(B, F).;true;true
0;true,true;genre(E, F), genre(B, F).;true;true
0;true,true,true;genre(A, G).;false;false
0;true,true,true;genre(A, G).;false;false
0;true,true,true;genre(A, G).;false;false
0;true,true,false;genre(E, H), genre(A, H).;false;false
0;true,true,false;genre(E, H), genre(A, H).;false;false
0;true,true,false;genre(E, H), genre(A, H).;false;false
0;false;movie(I, B), movie(I, J).;true;false
0;false;movie(I, B), movie(I, J).;true;false
0;false;movie(I, B), movie(I, J).;true;false
0;false,true;movie(K, J), movie(K, A).;false;true
0;false,true;movie(K, J), movie(K, A).;false;true
0;false,true;movie(K, J), movie(K, A).;false;true
0;false,true,false;genre(J, L), genre(A, L).;false;false
0;false,true,false;genre(J, L), genre(A, L).;false;false
0;false,true,false;genre(J, L), genre(A, L).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false;movie(D, A), movie(D, E).;true;true
1;false;movie(D, A), movie(D, E).;true;true
1;false;movie(D, A), movie(D, E).;true;true
1;false,true;movie(F, E), movie(F, B).;false;true
1;false,true;movie(F, E), movie(F, B).;false;true
1;false,true;movie(F, E), movie(F, B).;false;true
1;false,true,false;genre(E, G), genre(B, G).;false;false
1;false,true,false;genre(E, G), genre(B, G).;false;false
1;false,true,false;genre(E, G), genre(B, G).;false;false
1;false,false;movie(H, B), movie(H, I).;true;false
1;false,false;movie(H, B), movie(H, I).;true;false
1;false,false;movie(H, B), movie(H, I).;true;false
1;false,false,true;genre(I, J), genre(A, J).;false;false
1;false,false,true;genre(I, J), genre(A, J).;false;false
1;false,false,true;genre(I, J), genre(A, J).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;movie(D, B), movie(D, E).;true;true
2;true;movie(D, B), movie(D, E).;true;true
2;true;movie(D, B), movie(D, E).;true;true
2;true,true;movie(D, A).;false;true
2;true,true;movie(D, A).;false;true
2;true,true;movie(D, A).;false;true
2;true,true,false;genre(E, F), genre(A, F).;false;false
2;true,true,false;genre(E, F), genre(A, F).;false;false
2;true,true,false;genre(E, F), genre(A, F).;false;false
2;true,false;movie(G, A), movie(G, H).;true;false
2;true,false;movie(G, A), movie(G, H).;true;false
2;true,false;movie(G, A), movie(G, H).;true;false
2;true,false,true;genre(H, I), genre(B, I).;false;false
2;true,false,true;genre(H, I), genre(B, I).;false;false
2;true,false,true;genre(H, I), genre(B, I).;false;false
2;false;movie(J, B), movie(J, K).;false;true
2;false;movie(J, B), movie(J, K).;false;true
2;false;movie(J, B), movie(J, K).;false;true
2;false,false;movie(L, A), movie(L, M).;false;false
2;false,false;movie(L, A), movie(L, M).;false;false
2;false,false;movie(L, A), movie(L, M).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;movie(D, B), movie(D, E).;true;false
3;true;movie(D, B), movie(D, E).;true;false
3;true;movie(D, B), movie(D, E).;true;false
3;true,true;movie(C, E).;true;true
3;true,true;movie(C, E).;true;true
3;true,true;movie(C, E).;true;true
3;true,true,true;genre(E, F), genre(A, F).;false;false
3;true,true,true;genre(E, F), genre(A, F).;false;false
3;true,true,true;genre(E, F), genre(A, F).;false;false
3;true,true,false;genre(E, G), genre(A, G).;false;false
3;true,true,false;genre(E, G), genre(A, G).;false;false
3;true,true,false;genre(E, G), genre(A, G).;false;false
3;false;movie(H, A), movie(H, I).;false;true
3;false;movie(H, A), movie(H, I).;false;true
3;false;movie(H, A), movie(H, I).;false;true
3;false,false;movie(J, B), movie(J, K).;true;false
3;false,false;movie(J, B), movie(J, K).;true;false
3;false,false;movie(J, B), movie(J, K).;true;false
3;false,false,true;genre(K, L), genre(B, L).;false;false
3;false,false,true;genre(K, L), genre(B, L).;false;false
3;false,false,true;genre(K, L), genre(B, L).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false;movie(D, B), movie(D, E).;true;true
4;false;movie(D, B), movie(D, E).;true;true
4;false;movie(D, B), movie(D, E).;true;true
4;false,true;movie(F, E), movie(F, A).;false;true
4;false,true;movie(F, E), movie(F, A).;false;true
4;false,true;movie(F, E), movie(F, A).;false;true
4;false,true,false;genre(E, G), genre(A, G).;false;false
4;false,true,false;genre(E, G), genre(A, G).;false;false
4;false,true,false;genre(E, G), genre(A, G).;false;false
4;false,false;movie(H, A), movie(H, I).;true;false
4;false,false;movie(H, A), movie(H, I).;true;false
4;false,false;movie(H, A), movie(H, I).;true;false
4;false,false,true;genre(I, J), genre(A, J).;false;false
4;false,false,true;genre(I, J), genre(A, J).;false;false
4;false,false,true;genre(I, J), genre(A, J).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false;movie(D, A), movie(D, E).;true;true
5;false;movie(D, A), movie(D, E).;true;true
5;false;movie(D, A), movie(D, E).;true;true
5;false,true;movie(F, E), movie(F, B).;false;true
5;false,true;movie(F, E), movie(F, B).;false;true
5;false,true;movie(F, E), movie(F, B).;false;true
5;false,true,false;genre(E, G), genre(B, G).;false;false
5;false,true,false;genre(E, G), genre(B, G).;false;false
5;false,true,false;genre(E, G), genre(B, G).;false;false
5;false,false;movie(H, B), movie(H, I).;true;false
5;false,false;movie(H, B), movie(H, I).;true;false
5;false,false;movie(H, B), movie(H, I).;true;false
5;false,false,true;genre(I, J), genre(B, J).;false;false
5;false,false,true;genre(I, J), genre(B, J).;false;false
5;false,false,true;genre(I, J), genre(B, J).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;movie(D, B), movie(D, E).;true;false
6;true;movie(D, B), movie(D, E).;true;false
6;true;movie(D, B), movie(D, E).;true;false
6;true,true;movie(C, F).;false;true
6;true,true;movie(C, F).;false;true
6;true,true;movie(C, F).;false;true
6;true,true,false;genre(E, G), genre(B, G).;false;false
6;true,true,false;genre(E, G), genre(B, G).;false;false
6;true,true,false;genre(E, G), genre(B, G).;false;false
6;false;movie(H, B), movie(H, I).;true;false
6;false;movie(H, B), movie(H, I).;true;false
6;false;movie(H, B), movie(H, I).;true;false
6;false,true;genre(I, J), genre(B, J).;true;true
6;false,true;genre(I, J), genre(B, J).;true;true
6;false,true;genre(I, J), genre(B, J).;true;true
6;false,true,true;genre(I, K), genre(A, K).;false;false
6;false,true,true;genre(I, K), genre(A, K).;false;false
6;false,true,true;genre(I, K), genre(A, K).;false;false
6;false,true,false;movie(L, I), movie(L, A).;false;false
6;false,true,false;movie(L, I), movie(L, A).;false;false
6;false,true,false;movie(L, I), movie(L, A).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false;movie(D, A), movie(D, E).;true;false
7;false;movie(D, A), movie(D, E).;true;false
7;false;movie(D, A), movie(D, E).;true;false
7;false,true;genre(E, F), genre(B, F).;true;true
7;false,true;genre(E, F), genre(B, F).;true;true
7;false,true;genre(E, F), genre(B, F).;true;true
7;false,true,true;genre(A, G).;false;false
7;false,true,true;genre(A, G).;false;false
7;false,true,true;genre(A, G).;false;false
7;false,true,false;movie(H, E), movie(H, B).;false;false
7;false,true,false;movie(H, E), movie(H, B).;false;false
7;false,true,false;movie(H, E), movie(H, B).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;false
8;true;movie(D, B), movie(D, E).;true;false
8;true;movie(D, B), movie(D, E).;true;false
8;true;movie(D, B), movie(D, E).;true;false
8;true,true;genre(E, F), genre(A, F).;true;true
8;true,true;genre(E, F), genre(A, F).;true;true
8;true,true;genre(E, F), genre(A, F).;true;true
8;true,true,true;genre(B, G).;false;false
8;true,true,true;genre(B, G).;false;false
8;true,true,true;genre(B, G).;false;false
8;true,true,false;genre(E, H), genre(B, H).;false;false
8;true,true,false;genre(E, H), genre(B, H).;false;false
8;true,true,false;genre(E, H), genre(B, H).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false;movie(D, B), movie(D, E).;true;true
9;false;movie(D, B), movie(D, E).;true;true
9;false;movie(D, B), movie(D, E).;true;true
9;false,true;genre(E, F), genre(A, F).;true;true
9;false,true;genre(E, F), genre(A, F).;true;true
9;false,true;genre(E, F), genre(A, F).;true;true
9;false,true,true;genre(B, G).;false;false
9;false,true,true;genre(B, G).;false;false
9;false,true,true;genre(B, G).;false;false
9;false,true,false;genre(E, H), genre(B, H).;false;false
9;false,true,false;genre(E, H), genre(B, H).;false;false
9;false,true,false;genre(E, H), genre(B, H).;false;false
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,false;movie(I, A), movie(I, J).;true;false
9;false,false,true;genre(J, K), genre(A, K).;false;false
9;false,false,true;genre(J, K), genre(A, K).;false;false
9;false,false,true;genre(J, K), genre(A, K).;false;false






WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, B), movie(I, J) )
%   | then if ( movie(K, J), movie(K, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(J, L), genre(A, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, B), movie(I, J) )
%   | then if ( movie(K, J), movie(K, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(J, L), genre(A, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( genre(E, H), genre(A, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(I, B), movie(I, J) )
%   | then if ( movie(K, J), movie(K, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(J, L), genre(A, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5054275060236532;  // std dev = 3,182, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5054275060236532;  // std dev = 3,182, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5054275060236532;  // std dev = 3,182, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(D, A) )
%   | | then return 0.404864911434614;  // std dev = 3,011, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(D, A) )
%   | | then return 0.404864911434614;  // std dev = 3,011, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(D, A) )
%   | | then return 0.404864911434614;  // std dev = 3,011, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then if ( genre(E, F), genre(A, F) )
%   | | | then return -0.26278203945325945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3204284822762421;  // std dev = 2,844, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then if ( genre(E, F), genre(A, F) )
%   | | | then return -0.26278203945325945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3204284822762421;  // std dev = 2,844, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then if ( genre(E, F), genre(A, F) )
%   | | | then return -0.26278203945325945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3204284822762421;  // std dev = 2,844, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23787077499117817;  // std dev = 2,833, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23787077499117817;  // std dev = 2,833, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23787077499117817;  // std dev = 2,833, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18165785119226135;  // std dev = 2,822, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0851847513883968;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18165785119226135;  // std dev = 2,822, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0851847513883968;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18165785119226135;  // std dev = 2,822, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0851847513883968;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.13981454534197443;  // std dev = 2,830, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( genre(H, I), genre(B, I) )
%   | | then if ( genre(H, J), genre(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(K, H), movie(K, A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109179;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.13981454534197443;  // std dev = 2,830, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( genre(H, I), genre(B, I) )
%   | | then if ( genre(H, J), genre(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(K, H), movie(K, A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109179;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, F) )
%   | | then return 0.13981454534197443;  // std dev = 2,830, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B), movie(G, H) )
%   | then if ( genre(H, I), genre(B, I) )
%   | | then if ( genre(H, J), genre(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(K, H), movie(K, A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109179;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10862498564555897;  // std dev = 2,846, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10862498564555897;  // std dev = 2,846, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10862498564555897;  // std dev = 2,846, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.34833351000439505;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return 0.2775117279934633;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.4892111728777352;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.34833351000439505;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return 0.2775117279934633;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.4892111728777352;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.34833351000439505;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(E, H), genre(B, H) )
%   | | | then return 0.2775117279934633;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.4892111728777352;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07587053680783054;  // std dev = 2,225, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07587053680783054;  // std dev = 2,225, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07587053680783054;  // std dev = 2,225, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.






Results
Results
Results
   AUC ROC   = 0.979737
   AUC ROC   = 0.979737
   AUC ROC   = 0.979737
   AUC PR    = 0.981142
   AUC PR    = 0.981142
   AUC PR    = 0.981142
   CLL	      = -0.265095
   CLL	      = -0.265095
   CLL	      = -0.265095
   Precision = 1.0 at threshold = 0.5
   Precision = 1.0 at threshold = 0.5
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   Recall    = 0.819018
   Recall    = 0.819018
   F1        = 0.900506
   F1        = 0.900506
   F1        = 0.900506






Total learning time: 2.142 seconds
Total learning time: 2.142 seconds
Total learning time: 2.142 seconds
Total inference time: 1.098 seconds
Total inference time: 1.098 seconds
Total inference time: 1.098 seconds
AUC ROC: 0.979737
AUC ROC: 0.979737
AUC ROC: 0.979737






Structure after Parameter Learning
Structure after Parameter Learning
Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'genre(E, F), genre(B, F)', 'true,true,true': 'genre(A, G)', 'true,true,false': 'genre(E, H), genre(A, H)', 'false': 'movie(I, B), movie(I, J)', 'false,true': 'movie(K, J), movie(K, A)', 'false,true,false': 'genre(J, L), genre(A, L)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 56], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 18, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [2.58e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'genre(E, F), genre(B, F)', 'true,true,true': 'genre(A, G)', 'true,true,false': 'genre(E, H), genre(A, H)', 'false': 'movie(I, B), movie(I, J)', 'false,true': 'movie(K, J), movie(K, A)', 'false,true,false': 'genre(J, L), genre(A, L)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 56], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 18, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [2.58e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'genre(E, F), genre(B, F)', 'true,true,true': 'genre(A, G)', 'true,true,false': 'genre(E, H), genre(A, H)', 'false': 'movie(I, B), movie(I, J)', 'false,true': 'movie(K, J), movie(K, A)', 'false,true,false': 'genre(J, L), genre(A, L)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 56], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 18, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [2.58e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [3.182, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [3.182, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [3.182, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(D, A)', 'false': 'movie(F, B), movie(F, G)'}, {'true,true,true': [3.011, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(D, A)', 'false': 'movie(F, B), movie(F, G)'}, {'true,true,true': [3.011, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(D, A)', 'false': 'movie(F, B), movie(F, G)'}, {'true,true,true': [3.011, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'true,true,true': 'genre(E, F), genre(A, F)', 'false': 'movie(G, A), movie(G, H)'}, {'true,true,true,true': [0.0, 1, 0], 'true,true,true,false': [2.844, 18, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'true,true,true': 'genre(E, F), genre(A, F)', 'false': 'movie(G, A), movie(G, H)'}, {'true,true,true,true': [0.0, 1, 0], 'true,true,true,false': [2.844, 18, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'true,true,true': 'genre(E, F), genre(A, F)', 'false': 'movie(G, A), movie(G, H)'}, {'true,true,true,true': [0.0, 1, 0], 'true,true,true,false': [2.844, 18, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [2.833, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [2.833, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [2.833, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [2.822, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.97e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [2.822, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.97e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [2.822, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.97e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, F)', 'false': 'movie(G, B), movie(G, H)', 'false,true': 'genre(H, I), genre(B, I)', 'false,true,true': 'genre(H, J), genre(A, J)', 'false,true,false': 'movie(K, H), movie(K, A)'}, {'true,true,true': [2.83, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 7, 0], 'false,true,false,false': [5.27e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, F)', 'false': 'movie(G, B), movie(G, H)', 'false,true': 'genre(H, I), genre(B, I)', 'false,true,true': 'genre(H, J), genre(A, J)', 'false,true,false': 'movie(K, H), movie(K, A)'}, {'true,true,true': [2.83, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 7, 0], 'false,true,false,false': [5.27e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, F)', 'false': 'movie(G, B), movie(G, H)', 'false,true': 'genre(H, I), genre(B, I)', 'false,true,true': 'genre(H, J), genre(A, J)', 'false,true,false': 'movie(K, H), movie(K, A)'}, {'true,true,true': [2.83, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 7, 0], 'false,true,false,false': [5.27e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)', 'false,true,false': 'movie(H, E), movie(H, B)'}, {'true': [2.846, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [2.63e-09, 7, 0], 'false,true,false,false': [7.45e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)', 'false,true,false': 'movie(H, E), movie(H, B)'}, {'true': [2.846, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [2.63e-09, 7, 0], 'false,true,false,false': [7.45e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)', 'false,true,false': 'movie(H, E), movie(H, B)'}, {'true': [2.846, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [2.63e-09, 7, 0], 'false,true,false,false': [7.45e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'genre(E, F), genre(A, F)', 'true,true,true': 'genre(B, G)', 'true,true,false': 'genre(E, H), genre(B, H)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 56], 'true,true,false,false': [0.0, 18, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 37, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'genre(E, F), genre(A, F)', 'true,true,true': 'genre(B, G)', 'true,true,false': 'genre(E, H), genre(B, H)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 56], 'true,true,false,false': [0.0, 18, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 37, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'genre(E, F), genre(A, F)', 'true,true,true': 'genre(B, G)', 'true,true,false': 'genre(E, H), genre(B, H)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 56], 'true,true,false,false': [0.0, 18, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 37, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [2.225, 19, 56], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [2.225, 19, 56], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [2.225, 19, 56], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 36, 0], 'false,false': [0.0, 0, 0]}]
{'': [0.18915555555555524, 3.900783600034334e-17], 'true': [0.18915555555555524, nan], 'true,true': [-1.2688263138573217e-16, 0.0], 'false': [3.900783600034334e-17, nan], 'false,true': [-6.938893903907228e-18, 2.2970131543968756e-17]}
{'': [0.18915555555555524, 3.900783600034334e-17], 'true': [0.18915555555555524, nan], 'true,true': [-1.2688263138573217e-16, 0.0], 'false': [3.900783600034334e-17, nan], 'false,true': [-6.938893903907228e-18, 2.2970131543968756e-17]}
{'': [0.18915555555555524, 3.900783600034334e-17], 'true': [0.18915555555555524, nan], 'true,true': [-1.2688263138573217e-16, 0.0], 'false': [3.900783600034334e-17, nan], 'false,true': [-6.938893903907228e-18, 2.2970131543968756e-17]}
{'': [0.1350355998689688, 1.200241107702872e-17], 'false': [1.200241107702872e-17, nan], 'false,true': [0.0, -5.742532885992189e-18]}
{'': [0.1350355998689688, 1.200241107702872e-17], 'false': [1.200241107702872e-17, nan], 'false,true': [0.0, -5.742532885992189e-18]}
{'': [0.1350355998689688, 1.200241107702872e-17], 'false': [1.200241107702872e-17, nan], 'false,true': [0.0, -5.742532885992189e-18]}
{'': [0.12091018367868796, -9.00180830777154e-18], 'true': [0.12091018367868796, nan], 'true,true': [0.12091018367868796, nan], 'false': [-9.00180830777154e-18, nan]}
{'': [0.12091018367868796, -9.00180830777154e-18], 'true': [0.12091018367868796, nan], 'true,true': [0.12091018367868796, nan], 'false': [-9.00180830777154e-18, nan]}
{'': [0.12091018367868796, -9.00180830777154e-18], 'true': [0.12091018367868796, nan], 'true,true': [0.12091018367868796, nan], 'false': [-9.00180830777154e-18, nan]}
{'': [0.11234588963422444, -1.50030138462859e-18], 'true': [0.11234588963422444, nan], 'true,true': [0.11234588963422444, nan], 'false': [-1.50030138462859e-18, nan]}
{'': [0.11234588963422444, -1.50030138462859e-18], 'true': [0.11234588963422444, nan], 'true,true': [0.11234588963422444, nan], 'false': [-1.50030138462859e-18, nan]}
{'': [0.11234588963422444, -1.50030138462859e-18], 'true': [0.11234588963422444, nan], 'true,true': [0.11234588963422444, nan], 'false': [-1.50030138462859e-18, nan]}
{'': [0.1070242919039254, -1.050210969240013e-17], 'false': [-1.050210969240013e-17, nan], 'false,true': [0.0, 0.0]}
{'': [0.1070242919039254, -1.050210969240013e-17], 'false': [-1.050210969240013e-17, nan], 'false,true': [0.0, 0.0]}
{'': [0.1070242919039254, -1.050210969240013e-17], 'false': [-1.050210969240013e-17, nan], 'false,true': [0.0, 0.0]}
{'': [0.10617442667652405, 1.350271246165731e-17], 'false': [1.350271246165731e-17, nan], 'false,true': [-4.336808689942018e-18, 1.3399243400648442e-17]}
{'': [0.10617442667652405, 1.350271246165731e-17], 'false': [1.350271246165731e-17, nan], 'false,true': [-4.336808689942018e-18, 1.3399243400648442e-17]}
{'': [0.10617442667652405, 1.350271246165731e-17], 'false': [1.350271246165731e-17, nan], 'false,true': [-4.336808689942018e-18, 1.3399243400648442e-17]}
{'': [0.10677956597550375, -7.50150692314295e-19], 'true': [0.10677956597550375, nan], 'true,true': [0.10677956597550375, nan], 'false': [-7.50150692314295e-19, nan], 'false,true': [0.0, 0.0]}
{'': [0.10677956597550375, -7.50150692314295e-19], 'true': [0.10677956597550375, nan], 'true,true': [0.10677956597550375, nan], 'false': [-7.50150692314295e-19, nan], 'false,true': [0.0, 0.0]}
{'': [0.10677956597550375, -7.50150692314295e-19], 'true': [0.10677956597550375, nan], 'true,true': [0.10677956597550375, nan], 'false': [-7.50150692314295e-19, nan], 'false,true': [0.0, 0.0]}
{'': [0.10796958670414802, 2.250452076942885e-18], 'false': [2.250452076942885e-18, nan], 'false,true': [0.0, 2.3129646346357427e-18]}
{'': [0.10796958670414802, 2.250452076942885e-18], 'false': [2.250452076942885e-18, nan], 'false,true': [0.0, 2.3129646346357427e-18]}
{'': [0.10796958670414802, 2.250452076942885e-18], 'false': [2.250452076942885e-18, nan], 'false,true': [0.0, 2.3129646346357427e-18]}
{'': [0.10930815337387109, -7.50150692314295e-19], 'true': [0.10930815337387109, nan], 'true,true': [0.0, 0.10821163600695906]}
{'': [0.10930815337387109, -7.50150692314295e-19], 'true': [0.10930815337387109, nan], 'true,true': [0.0, 0.10821163600695906]}
{'': [0.10930815337387109, -7.50150692314295e-19], 'true': [0.10930815337387109, nan], 'true,true': [0.0, 0.10821163600695906]}
{'': [0.06603538753658623, -2.250452076942885e-18], 'false': [-2.250452076942885e-18, nan], 'false,true': [nan, -2.250452076942885e-18]}
{'': [0.06603538753658623, -2.250452076942885e-18], 'false': [-2.250452076942885e-18, nan], 'false,true': [nan, -2.250452076942885e-18]}
{'': [0.06603538753658623, -2.250452076942885e-18], 'false': [-2.250452076942885e-18, nan], 'false,true': [nan, -2.250452076942885e-18]}






******************************************
******************************************
******************************************
Performing Theory Revision
Performing Theory Revision
Performing Theory Revision
******************************************
******************************************
******************************************
'true,true,true'
'true,true,true'
'true,true,true'
Error in experiment of cora->imdb
Error in experiment of cora->imdb
Error in experiment of cora->imdb
Starting experiment #1 for cora->imdb

Starting experiment #1 for cora->imdb

Starting experiment #1 for cora->imdb

Starting experiment #1 for cora->imdb

Start learning from source dataset

Start learning from source dataset

Start learning from source dataset

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.41117923812981017;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.16962434493557788;  // std dev = 0,463, 61,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1273797043302816;  // std dev = 3,199, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.13673521368578653;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.41117923812981017;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.16962434493557788;  // std dev = 0,463, 61,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1273797043302816;  // std dev = 3,199, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.13673521368578653;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.41117923812981017;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.16962434493557788;  // std dev = 0,463, 61,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1273797043302816;  // std dev = 3,199, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.13673521368578653;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.41117923812981017;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.16962434493557788;  // std dev = 0,463, 61,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1273797043302816;  // std dev = 3,199, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.13673521368578653;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.35343422079798437;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.23350705143395972;  // std dev = 1,550, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.12483611163152687;  // std dev = 3,278, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.1243566864760018;  // std dev = 0,453, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else return 0.11926205369055183;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.35343422079798437;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.23350705143395972;  // std dev = 1,550, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.12483611163152687;  // std dev = 3,278, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.1243566864760018;  // std dev = 0,453, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else return 0.11926205369055183;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.35343422079798437;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.23350705143395972;  // std dev = 1,550, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.12483611163152687;  // std dev = 3,278, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.1243566864760018;  // std dev = 0,453, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else return 0.11926205369055183;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.35343422079798437;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.23350705143395972;  // std dev = 1,550, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.12483611163152687;  // std dev = 3,278, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.1243566864760018;  // std dev = 0,453, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else return 0.11926205369055183;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.29098915870218034;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return 0.10157600474651424;  // std dev = 0,443, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else return 0.10306631898568965;  // std dev = 0,449, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.29098915870218034;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return 0.10157600474651424;  // std dev = 0,443, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else return 0.10306631898568965;  // std dev = 0,449, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.29098915870218034;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return 0.10157600474651424;  // std dev = 0,443, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else return 0.10306631898568965;  // std dev = 0,449, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.29098915870218034;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return 0.10157600474651424;  // std dev = 0,443, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else return 0.10306631898568965;  // std dev = 0,449, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23098699633398947;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.1228493769157467;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.20266801920070598;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09642435766868776;  // std dev = 3,250, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.11466347405516134;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.0786449522641535;  // std dev = 3,199, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.08718589715736996;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23098699633398947;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.1228493769157467;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.20266801920070598;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09642435766868776;  // std dev = 3,250, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.11466347405516134;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.0786449522641535;  // std dev = 3,199, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.08718589715736996;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23098699633398947;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.1228493769157467;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.20266801920070598;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09642435766868776;  // std dev = 3,250, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.11466347405516134;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.0786449522641535;  // std dev = 3,199, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.08718589715736996;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23098699633398947;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.1228493769157467;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.20266801920070598;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09642435766868776;  // std dev = 3,250, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.11466347405516134;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.0786449522641535;  // std dev = 3,199, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.08718589715736996;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.17863591068117377;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4352720396684105;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.2071822331805529;  // std dev = 0,108, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return -0.1102128210833466;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08068441313606929;  // std dev = 3,250, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.09444269735800155;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.06621694016273337;  // std dev = 3,199, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.07332839395455827;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.17863591068117377;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4352720396684105;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.2071822331805529;  // std dev = 0,108, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return -0.1102128210833466;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08068441313606929;  // std dev = 3,250, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.09444269735800155;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.06621694016273337;  // std dev = 3,199, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.07332839395455827;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.17863591068117377;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4352720396684105;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.2071822331805529;  // std dev = 0,108, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return -0.1102128210833466;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08068441313606929;  // std dev = 3,250, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.09444269735800155;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.06621694016273337;  // std dev = 3,199, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.07332839395455827;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.17863591068117377;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4352720396684105;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.2071822331805529;  // std dev = 0,108, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return -0.1102128210833466;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08068441313606929;  // std dev = 3,250, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.09444269735800155;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.06621694016273337;  // std dev = 3,199, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.07332839395455827;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13595092776495185;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.411872662233096;  // std dev = 1,158, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.22515849873706903;  // std dev = 0,140, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.05287830237036266;  // std dev = 0,430, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.03292922495874355;  // std dev = 0,800, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06379318633560718;  // std dev = 3,333, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.06110790103512183;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13595092776495185;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.411872662233096;  // std dev = 1,158, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.22515849873706903;  // std dev = 0,140, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.05287830237036266;  // std dev = 0,430, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.03292922495874355;  // std dev = 0,800, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06379318633560718;  // std dev = 3,333, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.06110790103512183;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13595092776495185;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.411872662233096;  // std dev = 1,158, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.22515849873706903;  // std dev = 0,140, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.05287830237036266;  // std dev = 0,430, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.03292922495874355;  // std dev = 0,800, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06379318633560718;  // std dev = 3,333, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.06110790103512183;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13595092776495185;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.411872662233096;  // std dev = 1,158, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.22515849873706903;  // std dev = 0,140, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.05287830237036266;  // std dev = 0,430, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.03292922495874355;  // std dev = 0,800, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06379318633560718;  // std dev = 3,333, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.06110790103512183;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10257309183504217;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.09936496588966022;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.12376809125351196;  // std dev = 1,430, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.05468748575121642;  // std dev = 3,232, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.05006340146080993;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10257309183504217;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.09936496588966022;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.12376809125351196;  // std dev = 1,430, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.05468748575121642;  // std dev = 3,232, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.05006340146080993;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10257309183504217;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.09936496588966022;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.12376809125351196;  // std dev = 1,430, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.05468748575121642;  // std dev = 3,232, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.05006340146080993;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10257309183504217;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.09936496588966022;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.12376809125351196;  // std dev = 1,430, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.05468748575121642;  // std dev = 3,232, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.05006340146080993;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.36404405449306604;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.1061336067318724;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return -0.033332994687261856;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.12404405449306645;  // std dev = 3,950, 65,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=39 */
%   | | | else return -0.033332994687261856;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | | else return 0.0773404192496844;  // std dev = 0,497, 4.869,000 (wgt'ed) examples reached here.  /* #neg=2.175 #pos=2.694 */
%   else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | then return 0.04401501189341631;  // std dev = 0,430, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return 0.03326748563410962;  // std dev = 0,446, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else return 0.04159584981631079;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.36404405449306604;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.1061336067318724;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return -0.033332994687261856;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.12404405449306645;  // std dev = 3,950, 65,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=39 */
%   | | | else return -0.033332994687261856;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | | else return 0.0773404192496844;  // std dev = 0,497, 4.869,000 (wgt'ed) examples reached here.  /* #neg=2.175 #pos=2.694 */
%   else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | then return 0.04401501189341631;  // std dev = 0,430, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return 0.03326748563410962;  // std dev = 0,446, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else return 0.04159584981631079;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.36404405449306604;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.1061336067318724;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return -0.033332994687261856;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.12404405449306645;  // std dev = 3,950, 65,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=39 */
%   | | | else return -0.033332994687261856;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | | else return 0.0773404192496844;  // std dev = 0,497, 4.869,000 (wgt'ed) examples reached here.  /* #neg=2.175 #pos=2.694 */
%   else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | then return 0.04401501189341631;  // std dev = 0,430, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return 0.03326748563410962;  // std dev = 0,446, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else return 0.04159584981631079;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.36404405449306604;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.1061336067318724;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return -0.033332994687261856;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.12404405449306645;  // std dev = 3,950, 65,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=39 */
%   | | | else return -0.033332994687261856;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | | else return 0.0773404192496844;  // std dev = 0,497, 4.869,000 (wgt'ed) examples reached here.  /* #neg=2.175 #pos=2.694 */
%   else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | then return 0.04401501189341631;  // std dev = 0,430, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return 0.03326748563410962;  // std dev = 0,446, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else return 0.04159584981631079;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.4334488433049275;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2334488433049275;  // std dev = 1,789, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.08455657119261817;  // std dev = 3,989, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return -0.032727157754763;  // std dev = 3,908, 62,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | else return 0.05751662097172464;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then return 0.036242529037286364;  // std dev = 0,430, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else return 0.033220799419200565;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.4334488433049275;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2334488433049275;  // std dev = 1,789, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.08455657119261817;  // std dev = 3,989, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return -0.032727157754763;  // std dev = 3,908, 62,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | else return 0.05751662097172464;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then return 0.036242529037286364;  // std dev = 0,430, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else return 0.033220799419200565;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.4334488433049275;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2334488433049275;  // std dev = 1,789, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.08455657119261817;  // std dev = 3,989, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return -0.032727157754763;  // std dev = 3,908, 62,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | else return 0.05751662097172464;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then return 0.036242529037286364;  // std dev = 0,430, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else return 0.033220799419200565;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.4334488433049275;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2334488433049275;  // std dev = 1,789, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.08455657119261817;  // std dev = 3,989, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return -0.032727157754763;  // std dev = 3,908, 62,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | else return 0.05751662097172464;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then return 0.036242529037286364;  // std dev = 0,430, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else return 0.033220799419200565;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.043385100914916666;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else return 0.02731162911153614;  // std dev = 0,446, 609,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=170 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.043385100914916666;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else return 0.02731162911153614;  // std dev = 0,446, 609,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=170 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.043385100914916666;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else return 0.02731162911153614;  // std dev = 0,446, 609,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=170 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.043385100914916666;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else return 0.02731162911153614;  // std dev = 0,446, 609,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=170 */








Predicates from source: ['samevenue(venue,venue).', 'samebib(class,class).', 'author(class,author).', 'haswordauthor(author,word).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Predicates from source: ['samevenue(venue,venue).', 'samebib(class,class).', 'author(class,author).', 'haswordauthor(author,word).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Predicates from source: ['samevenue(venue,venue).', 'samebib(class,class).', 'author(class,author).', 'haswordauthor(author,word).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Predicates from source: ['samevenue(venue,venue).', 'samebib(class,class).', 'author(class,author).', 'haswordauthor(author,word).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Starting fold 1

Starting fold 1

Starting fold 1

Starting fold 1

Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)'] 

Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)'] 

Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)'] 

Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)'] 

Transferred target predicate: workedunder 

Transferred target predicate: workedunder 

Transferred target predicate: workedunder 

Transferred target predicate: workedunder 

******************************************
******************************************
******************************************
******************************************
Performing Parameter Learning
Performing Parameter Learning
Performing Parameter Learning
Performing Parameter Learning
******************************************
******************************************
******************************************
******************************************
Refine
Refine
Refine
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;false;movie(D, B), movie(D, E).;true;true
0;false;movie(D, B), movie(D, E).;true;true
0;false;movie(D, B), movie(D, E).;true;true
0;false;movie(D, B), movie(D, E).;true;true
0;false,true;movie(F, E), movie(F, A).;false;false
0;false,true;movie(F, E), movie(F, A).;false;false
0;false,true;movie(F, E), movie(F, A).;false;false
0;false,true;movie(F, E), movie(F, A).;false;false
0;false,false;movie(G, A), movie(G, H).;true;false
0;false,false;movie(G, A), movie(G, H).;true;false
0;false,false;movie(G, A), movie(G, H).;true;false
0;false,false;movie(G, A), movie(G, H).;true;false
0;false,false,true;genre(H, I), genre(B, I).;false;false
0;false,false,true;genre(H, I), genre(B, I).;false;false
0;false,false,true;genre(H, I), genre(B, I).;false;false
0;false,false,true;genre(H, I), genre(B, I).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
1;false;movie(D, A), movie(D, E).;true;true
1;false;movie(D, A), movie(D, E).;true;true
1;false;movie(D, A), movie(D, E).;true;true
1;false;movie(D, A), movie(D, E).;true;true
1;false,true;movie(F, E), movie(F, B).;false;true
1;false,true;movie(F, E), movie(F, B).;false;true
1;false,true;movie(F, E), movie(F, B).;false;true
1;false,true;movie(F, E), movie(F, B).;false;true
1;false,true,false;genre(E, G), genre(B, G).;false;false
1;false,true,false;genre(E, G), genre(B, G).;false;false
1;false,true,false;genre(E, G), genre(B, G).;false;false
1;false,true,false;genre(E, G), genre(B, G).;false;false
1;false,false;movie(H, B), movie(H, I).;false;false
1;false,false;movie(H, B), movie(H, I).;false;false
1;false,false;movie(H, B), movie(H, I).;false;false
1;false,false;movie(H, B), movie(H, I).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
2;false;movie(D, A), movie(D, E).;false;false
2;false;movie(D, A), movie(D, E).;false;false
2;false;movie(D, A), movie(D, E).;false;false
2;false;movie(D, A), movie(D, E).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false;movie(D, B), movie(D, E).;true;true
3;false;movie(D, B), movie(D, E).;true;true
3;false;movie(D, B), movie(D, E).;true;true
3;false;movie(D, B), movie(D, E).;true;true
3;false,true;movie(F, E), movie(F, A).;false;true
3;false,true;movie(F, E), movie(F, A).;false;true
3;false,true;movie(F, E), movie(F, A).;false;true
3;false,true;movie(F, E), movie(F, A).;false;true
3;false,true,false;genre(E, G), genre(A, G).;false;false
3;false,true,false;genre(E, G), genre(A, G).;false;false
3;false,true,false;genre(E, G), genre(A, G).;false;false
3;false,true,false;genre(E, G), genre(A, G).;false;false
3;false,false;movie(H, A), movie(H, I).;true;false
3;false,false;movie(H, A), movie(H, I).;true;false
3;false,false;movie(H, A), movie(H, I).;true;false
3;false,false;movie(H, A), movie(H, I).;true;false
3;false,false,true;genre(I, J), genre(B, J).;false;false
3;false,false,true;genre(I, J), genre(B, J).;false;false
3;false,false,true;genre(I, J), genre(B, J).;false;false
3;false,false,true;genre(I, J), genre(B, J).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
4;false;movie(D, B), movie(D, E).;true;true
4;false;movie(D, B), movie(D, E).;true;true
4;false;movie(D, B), movie(D, E).;true;true
4;false;movie(D, B), movie(D, E).;true;true
4;false,true;genre(E, F), genre(A, F).;true;true
4;false,true;genre(E, F), genre(A, F).;true;true
4;false,true;genre(E, F), genre(A, F).;true;true
4;false,true;genre(E, F), genre(A, F).;true;true
4;false,true,true;genre(B, G).;false;false
4;false,true,true;genre(B, G).;false;false
4;false,true,true;genre(B, G).;false;false
4;false,true,true;genre(B, G).;false;false
4;false,true,false;movie(H, E), movie(H, A).;false;false
4;false,true,false;movie(H, E), movie(H, A).;false;false
4;false,true,false;movie(H, E), movie(H, A).;false;false
4;false,true,false;movie(H, E), movie(H, A).;false;false
4;false,false;movie(I, A), movie(I, J).;true;false
4;false,false;movie(I, A), movie(I, J).;true;false
4;false,false;movie(I, A), movie(I, J).;true;false
4;false,false;movie(I, A), movie(I, J).;true;false
4;false,false,true;genre(J, K), genre(B, K).;false;false
4;false,false,true;genre(J, K), genre(B, K).;false;false
4;false,false,true;genre(J, K), genre(B, K).;false;false
4;false,false,true;genre(J, K), genre(B, K).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false;movie(D, A), movie(D, E).;true;true
5;false;movie(D, A), movie(D, E).;true;true
5;false;movie(D, A), movie(D, E).;true;true
5;false;movie(D, A), movie(D, E).;true;true
5;false,true;genre(E, F), genre(B, F).;true;false
5;false,true;genre(E, F), genre(B, F).;true;false
5;false,true;genre(E, F), genre(B, F).;true;false
5;false,true;genre(E, F), genre(B, F).;true;false
5;false,true,true;genre(A, G).;false;false
5;false,true,true;genre(A, G).;false;false
5;false,true,true;genre(A, G).;false;false
5;false,true,true;genre(A, G).;false;false
5;false,false;movie(H, B), movie(H, I).;true;false
5;false,false;movie(H, B), movie(H, I).;true;false
5;false,false;movie(H, B), movie(H, I).;true;false
5;false,false;movie(H, B), movie(H, I).;true;false
5;false,false,true;genre(I, J), genre(B, J).;false;false
5;false,false,true;genre(I, J), genre(B, J).;false;false
5;false,false,true;genre(I, J), genre(B, J).;false;false
5;false,false,true;genre(I, J), genre(B, J).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
6;false;movie(D, B), movie(D, E).;true;false
6;false;movie(D, B), movie(D, E).;true;false
6;false;movie(D, B), movie(D, E).;true;false
6;false;movie(D, B), movie(D, E).;true;false
6;false,true;movie(F, E), movie(F, A).;false;true
6;false,true;movie(F, E), movie(F, A).;false;true
6;false,true;movie(F, E), movie(F, A).;false;true
6;false,true;movie(F, E), movie(F, A).;false;true
6;false,true,false;genre(E, G), genre(A, G).;false;false
6;false,true,false;genre(E, G), genre(A, G).;false;false
6;false,true,false;genre(E, G), genre(A, G).;false;false
6;false,true,false;genre(E, G), genre(A, G).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;movie(D, B), movie(D, E).;true;true
7;true;movie(D, B), movie(D, E).;true;true
7;true;movie(D, B), movie(D, E).;true;true
7;true;movie(D, B), movie(D, E).;true;true
7;true,true;movie(C, E).;false;true
7;true,true;movie(C, E).;false;true
7;true,true;movie(C, E).;false;true
7;true,true;movie(C, E).;false;true
7;true,true,false;genre(E, F), genre(A, F).;false;false
7;true,true,false;genre(E, F), genre(A, F).;false;false
7;true,true,false;genre(E, F), genre(A, F).;false;false
7;true,true,false;genre(E, F), genre(A, F).;false;false
7;true,false;movie(G, A), movie(G, H).;true;false
7;true,false;movie(G, A), movie(G, H).;true;false
7;true,false;movie(G, A), movie(G, H).;true;false
7;true,false;movie(G, A), movie(G, H).;true;false
7;true,false,true;genre(H, I), genre(B, I).;false;false
7;true,false,true;genre(H, I), genre(B, I).;false;false
7;true,false,true;genre(H, I), genre(B, I).;false;false
7;true,false,true;genre(H, I), genre(B, I).;false;false
7;false;movie(J, A), movie(J, K).;false;true
7;false;movie(J, A), movie(J, K).;false;true
7;false;movie(J, A), movie(J, K).;false;true
7;false;movie(J, A), movie(J, K).;false;true
7;false,false;movie(L, B), movie(L, M).;false;false
7;false,false;movie(L, B), movie(L, M).;false;false
7;false,false;movie(L, B), movie(L, M).;false;false
7;false,false;movie(L, B), movie(L, M).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;movie(D, A), movie(D, E).;true;false
8;true;movie(D, A), movie(D, E).;true;false
8;true;movie(D, A), movie(D, E).;true;false
8;true;movie(D, A), movie(D, E).;true;false
8;true,true;movie(D, B).;true;true
8;true,true;movie(D, B).;true;true
8;true,true;movie(D, B).;true;true
8;true,true;movie(D, B).;true;true
8;true,true,true;genre(E, F), genre(A, F).;false;false
8;true,true,true;genre(E, F), genre(A, F).;false;false
8;true,true,true;genre(E, F), genre(A, F).;false;false
8;true,true,true;genre(E, F), genre(A, F).;false;false
8;true,true,false;genre(E, G), genre(B, G).;false;false
8;true,true,false;genre(E, G), genre(B, G).;false;false
8;true,true,false;genre(E, G), genre(B, G).;false;false
8;true,true,false;genre(E, G), genre(B, G).;false;false
8;false;movie(H, A), movie(H, I).;false;false
8;false;movie(H, A), movie(H, I).;false;false
8;false;movie(H, A), movie(H, I).;false;false
8;false;movie(H, A), movie(H, I).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false








WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6048156017661795;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6048156017661795;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6048156017661795;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6048156017661795;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5143336738429792;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5143336738429792;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5143336738429792;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5143336738429792;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.41059521048428527;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.41059521048428527;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.41059521048428527;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.41059521048428527;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3138222988479822;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3138222988479822;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3138222988479822;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3138222988479822;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23577669286643868;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23577669286643868;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23577669286643868;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23577669286643868;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( genre(E, F), genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, E), movie(G, A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1772814052330582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.0851847513883968;  // std dev = 2,24e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1772814052330582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.0851847513883968;  // std dev = 2,24e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1772814052330582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.0851847513883968;  // std dev = 2,24e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1772814052330582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.0851847513883968;  // std dev = 2,24e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13445346684564582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109179;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13445346684564582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109179;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13445346684564582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109179;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13445346684564582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109179;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.103054135704297;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.103054135704297;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.103054135704297;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.103054135704297;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then if ( genre(E, F), genre(A, F) )
%   | | | then return -0.6668855873718814;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.0898711693848755;  // std dev = 3,691, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then if ( genre(E, F), genre(A, F) )
%   | | | then return -0.6668855873718814;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.0898711693848755;  // std dev = 3,691, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then if ( genre(E, F), genre(A, F) )
%   | | | then return -0.6668855873718814;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.0898711693848755;  // std dev = 3,691, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(D, B) )
%   | | then if ( genre(E, F), genre(A, F) )
%   | | | then return -0.6668855873718814;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.0898711693848755;  // std dev = 3,691, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A), movie(G, H) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0625207295269576;  // std dev = 3,735, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0625207295269576;  // std dev = 3,735, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0625207295269576;  // std dev = 3,735, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0625207295269576;  // std dev = 3,735, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */








Results
Results
Results
Results
   AUC ROC   = 0.894172
   AUC ROC   = 0.894172
   AUC ROC   = 0.894172
   AUC ROC   = 0.894172
   AUC PR    = 0.825316
   AUC PR    = 0.825316
   AUC PR    = 0.825316
   AUC PR    = 0.825316
   CLL	      = -0.34029
   CLL	      = -0.34029
   CLL	      = -0.34029
   CLL	      = -0.34029
   Precision = 0.806931 at threshold = 0.5
   Precision = 0.806931 at threshold = 0.5
   Precision = 0.806931 at threshold = 0.5
   Precision = 0.806931 at threshold = 0.5
   Recall    = 1.0
   Recall    = 1.0
   Recall    = 1.0
   Recall    = 1.0
   F1        = 0.893151
   F1        = 0.893151
   F1        = 0.893151
   F1        = 0.893151








Total learning time: 2.054 seconds
Total learning time: 2.054 seconds
Total learning time: 2.054 seconds
Total learning time: 2.054 seconds
Total inference time: 1.034 seconds
Total inference time: 1.034 seconds
Total inference time: 1.034 seconds
Total inference time: 1.034 seconds
AUC ROC: 0.894172
AUC ROC: 0.894172
AUC ROC: 0.894172
AUC ROC: 0.894172








Structure after Parameter Learning
Structure after Parameter Learning
Structure after Parameter Learning
Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false': [2.58e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false': [2.58e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false': [2.58e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false': [2.58e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(B, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)'}, {'true': [3.767, 19, 56], 'false,true': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)'}, {'true': [3.767, 19, 56], 'false,true': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)'}, {'true': [3.767, 19, 56], 'false,true': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)'}, {'true': [3.767, 19, 56], 'false,true': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'movie(G, E), movie(G, A)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 8, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'movie(G, E), movie(G, A)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 8, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'movie(G, E), movie(G, A)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 8, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'genre(E, F), genre(A, F)', 'false,true,false': 'movie(G, E), movie(G, A)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 8, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [2.24e-08, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [2.24e-08, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [2.24e-08, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [2.24e-08, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.27e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.27e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.27e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.27e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, A), movie(F, G)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [9.13e-09, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, A), movie(F, G)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [9.13e-09, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, A), movie(F, G)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [9.13e-09, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, A), movie(F, G)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [9.13e-09, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(D, B)', 'true,true,true': 'genre(E, F), genre(A, F)', 'false': 'movie(G, A), movie(G, H)'}, {'true,true,true,true': [0.0, 1, 0], 'true,true,true,false': [3.691, 18, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(D, B)', 'true,true,true': 'genre(E, F), genre(A, F)', 'false': 'movie(G, A), movie(G, H)'}, {'true,true,true,true': [0.0, 1, 0], 'true,true,true,false': [3.691, 18, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(D, B)', 'true,true,true': 'genre(E, F), genre(A, F)', 'false': 'movie(G, A), movie(G, H)'}, {'true,true,true,true': [0.0, 1, 0], 'true,true,true,false': [3.691, 18, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A), movie(D, E)', 'true,true': 'movie(D, B)', 'true,true,true': 'genre(E, F), genre(A, F)', 'false': 'movie(G, A), movie(G, H)'}, {'true,true,true,true': [0.0, 1, 0], 'true,true,true,false': [3.691, 18, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'true': [3.735, 19, 56], 'false': [0.0, 37, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'true': [3.735, 19, 56], 'false': [0.0, 37, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'true': [3.735, 19, 56], 'false': [0.0, 37, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'true': [3.735, 19, 56], 'false': [0.0, 37, 0]}]
{'': [0.18915555555555524, 3.900783600034334e-17], 'false': [3.900783600034334e-17, nan], 'false,true': [-6.938893903907228e-18, 2.2970131543968756e-17]}
{'': [0.18915555555555524, 3.900783600034334e-17], 'false': [3.900783600034334e-17, nan], 'false,true': [-6.938893903907228e-18, 2.2970131543968756e-17]}
{'': [0.18915555555555524, 3.900783600034334e-17], 'false': [3.900783600034334e-17, nan], 'false,true': [-6.938893903907228e-18, 2.2970131543968756e-17]}
{'': [0.18915555555555524, 3.900783600034334e-17], 'false': [3.900783600034334e-17, nan], 'false,true': [-6.938893903907228e-18, 2.2970131543968756e-17]}
{'': [0.18915555555555533, 1.200241107702872e-17], 'false': [1.200241107702872e-17, nan], 'false,true': [0.0, -5.742532885992189e-18]}
{'': [0.18915555555555533, 1.200241107702872e-17], 'false': [1.200241107702872e-17, nan], 'false,true': [0.0, -5.742532885992189e-18]}
{'': [0.18915555555555533, 1.200241107702872e-17], 'false': [1.200241107702872e-17, nan], 'false,true': [0.0, -5.742532885992189e-18]}
{'': [0.18915555555555533, 1.200241107702872e-17], 'false': [1.200241107702872e-17, nan], 'false,true': [0.0, -5.742532885992189e-18]}
{'': [0.1891555555555554, -9.00180830777154e-18], 'false': [-9.00180830777154e-18, nan]}
{'': [0.1891555555555554, -9.00180830777154e-18], 'false': [-9.00180830777154e-18, nan]}
{'': [0.1891555555555554, -9.00180830777154e-18], 'false': [-9.00180830777154e-18, nan]}
{'': [0.1891555555555554, -9.00180830777154e-18], 'false': [-9.00180830777154e-18, nan]}
{'': [0.18915555555555608, -1.50030138462859e-18], 'false': [-1.50030138462859e-18, nan], 'false,true': [1.734723475976807e-18, 0.0]}
{'': [0.18915555555555608, -1.50030138462859e-18], 'false': [-1.50030138462859e-18, nan], 'false,true': [1.734723475976807e-18, 0.0]}
{'': [0.18915555555555608, -1.50030138462859e-18], 'false': [-1.50030138462859e-18, nan], 'false,true': [1.734723475976807e-18, 0.0]}
{'': [0.18915555555555608, -1.50030138462859e-18], 'false': [-1.50030138462859e-18, nan], 'false,true': [1.734723475976807e-18, 0.0]}
{'': [0.18915555555555552, -1.050210969240013e-17], 'false': [-1.050210969240013e-17, nan], 'false,true': [nan, -1.050210969240013e-17]}
{'': [0.18915555555555552, -1.050210969240013e-17], 'false': [-1.050210969240013e-17, nan], 'false,true': [nan, -1.050210969240013e-17]}
{'': [0.18915555555555552, -1.050210969240013e-17], 'false': [-1.050210969240013e-17, nan], 'false,true': [nan, -1.050210969240013e-17]}
{'': [0.18915555555555552, -1.050210969240013e-17], 'false': [-1.050210969240013e-17, nan], 'false,true': [nan, -1.050210969240013e-17]}
{'': [0.189155555555556, 1.350271246165731e-17], 'false': [1.350271246165731e-17, nan], 'false,true': [0.0, 1.3877787807814457e-17]}
{'': [0.189155555555556, 1.350271246165731e-17], 'false': [1.350271246165731e-17, nan], 'false,true': [0.0, 1.3877787807814457e-17]}
{'': [0.189155555555556, 1.350271246165731e-17], 'false': [1.350271246165731e-17, nan], 'false,true': [0.0, 1.3877787807814457e-17]}
{'': [0.189155555555556, 1.350271246165731e-17], 'false': [1.350271246165731e-17, nan], 'false,true': [0.0, 1.3877787807814457e-17]}
{'': [0.18915555555555547, 0.0], 'false': [0.0, nan], 'false,true': [-2.6020852139652106e-18, 9.570888143320315e-19]}
{'': [0.18915555555555547, 0.0], 'false': [0.0, nan], 'false,true': [-2.6020852139652106e-18, 9.570888143320315e-19]}
{'': [0.18915555555555547, 0.0], 'false': [0.0, nan], 'false,true': [-2.6020852139652106e-18, 9.570888143320315e-19]}
{'': [0.18915555555555547, 0.0], 'false': [0.0, nan], 'false,true': [-2.6020852139652106e-18, 9.570888143320315e-19]}
{'': [0.18915555555555574, 2.250452076942885e-18], 'true': [0.18915555555555574, nan], 'true,true': [0.18915555555555574, nan], 'false': [2.250452076942885e-18, nan]}
{'': [0.18915555555555574, 2.250452076942885e-18], 'true': [0.18915555555555574, nan], 'true,true': [0.18915555555555574, nan], 'false': [2.250452076942885e-18, nan]}
{'': [0.18915555555555574, 2.250452076942885e-18], 'true': [0.18915555555555574, nan], 'true,true': [0.18915555555555574, nan], 'false': [2.250452076942885e-18, nan]}
{'': [0.18915555555555574, 2.250452076942885e-18], 'true': [0.18915555555555574, nan], 'true,true': [0.18915555555555574, nan], 'false': [2.250452076942885e-18, nan]}
{'': [0.18915555555555538, -7.50150692314295e-19], 'true': [0.18915555555555538, nan], 'true,true': [0.18915555555555538, nan], 'false': [-7.50150692314295e-19, nan]}
{'': [0.18915555555555538, -7.50150692314295e-19], 'true': [0.18915555555555538, nan], 'true,true': [0.18915555555555538, nan], 'false': [-7.50150692314295e-19, nan]}
{'': [0.18915555555555538, -7.50150692314295e-19], 'true': [0.18915555555555538, nan], 'true,true': [0.18915555555555538, nan], 'false': [-7.50150692314295e-19, nan]}
{'': [0.18915555555555538, -7.50150692314295e-19], 'true': [0.18915555555555538, nan], 'true,true': [0.18915555555555538, nan], 'false': [-7.50150692314295e-19, nan]}
{'': [0.1860018778845411, -1.50030138462859e-18]}
{'': [0.1860018778845411, -1.50030138462859e-18]}
{'': [0.1860018778845411, -1.50030138462859e-18]}
{'': [0.1860018778845411, -1.50030138462859e-18]}








******************************************
******************************************
******************************************
******************************************
Performing Theory Revision
Performing Theory Revision
Performing Theory Revision
Performing Theory Revision
******************************************
******************************************
******************************************
******************************************
'false,true,false'
'false,true,false'
'false,true,false'
'false,true,false'
Error in experiment of cora->imdb
Error in experiment of cora->imdb
Error in experiment of cora->imdb
Error in experiment of cora->imdb
Starting experiment #1 for cora->imdb

Starting experiment #1 for cora->imdb

Starting experiment #1 for cora->imdb

Starting experiment #1 for cora->imdb

Starting experiment #1 for cora->imdb

Start learning from source dataset

Start learning from source dataset

Start learning from source dataset

Start learning from source dataset

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.41117923812981017;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.15639454913460007;  // std dev = 3,454, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.13814893509951237;  // std dev = 3,175, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.13673521368578653;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.41117923812981017;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.15639454913460007;  // std dev = 3,454, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.13814893509951237;  // std dev = 3,175, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.13673521368578653;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.41117923812981017;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.15639454913460007;  // std dev = 3,454, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.13814893509951237;  // std dev = 3,175, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.13673521368578653;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.41117923812981017;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.15639454913460007;  // std dev = 3,454, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.13814893509951237;  // std dev = 3,175, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.13673521368578653;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.41117923812981017;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.15639454913460007;  // std dev = 3,454, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.13814893509951237;  // std dev = 3,175, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.13673521368578653;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.6404039177677621;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.3824934700065688;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.24302686858743475;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else return 0.3529564703202348;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.5006753985056694;  // std dev = 1,156, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15852453472043956;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(H, K), haswordvenue(A, K) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1344612155398616;  // std dev = 3,252, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.11893075947303411;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.6404039177677621;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.3824934700065688;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.24302686858743475;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else return 0.3529564703202348;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.5006753985056694;  // std dev = 1,156, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15852453472043956;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(H, K), haswordvenue(A, K) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1344612155398616;  // std dev = 3,252, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.11893075947303411;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.6404039177677621;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.3824934700065688;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.24302686858743475;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else return 0.3529564703202348;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.5006753985056694;  // std dev = 1,156, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15852453472043956;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(H, K), haswordvenue(A, K) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1344612155398616;  // std dev = 3,252, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.11893075947303411;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.6404039177677621;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.3824934700065688;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.24302686858743475;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else return 0.3529564703202348;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.5006753985056694;  // std dev = 1,156, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15852453472043956;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(H, K), haswordvenue(A, K) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1344612155398616;  // std dev = 3,252, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.11893075947303411;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.6404039177677621;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.3824934700065688;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.24302686858743475;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else return 0.3529564703202348;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.5006753985056694;  // std dev = 1,156, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15852453472043956;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(H, K), haswordvenue(A, K) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1344612155398616;  // std dev = 3,252, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.11893075947303411;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.5188336396207486;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.31439033174334674;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.20136476683586224;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else return 0.29060378299828504;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.41947506300945164;  // std dev = 1,157, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.13854049425091222;  // std dev = 0,033, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(H, K), haswordvenue(A, K) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.11558584359663687;  // std dev = 3,252, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.10232082045465282;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.5188336396207486;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.31439033174334674;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.20136476683586224;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else return 0.29060378299828504;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.41947506300945164;  // std dev = 1,157, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.13854049425091222;  // std dev = 0,033, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(H, K), haswordvenue(A, K) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.11558584359663687;  // std dev = 3,252, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.10232082045465282;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.5188336396207486;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.31439033174334674;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.20136476683586224;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else return 0.29060378299828504;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.41947506300945164;  // std dev = 1,157, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.13854049425091222;  // std dev = 0,033, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(H, K), haswordvenue(A, K) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.11558584359663687;  // std dev = 3,252, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.10232082045465282;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.5188336396207486;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.31439033174334674;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.20136476683586224;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else return 0.29060378299828504;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.41947506300945164;  // std dev = 1,157, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.13854049425091222;  // std dev = 0,033, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(H, K), haswordvenue(A, K) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.11558584359663687;  // std dev = 3,252, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.10232082045465282;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.5188336396207486;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.31439033174334674;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.20136476683586224;  // std dev = 3,879, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else return 0.29060378299828504;  // std dev = 0,497, 4.995,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.41947506300945164;  // std dev = 1,157, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.13854049425091222;  // std dev = 0,033, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(H, K), haswordvenue(A, K) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.11558584359663687;  // std dev = 3,252, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.10232082045465282;  // std dev = 0,448, 542,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=151 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23093078947516635;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.10071524747336404;  // std dev = 0,005, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1483473793180826;  // std dev = 1,361, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09800053664018173;  // std dev = 3,252, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.13718992299210708;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.07472440534356568;  // std dev = 3,200, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.08735249298492637;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23093078947516635;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.10071524747336404;  // std dev = 0,005, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1483473793180826;  // std dev = 1,361, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09800053664018173;  // std dev = 3,252, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.13718992299210708;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.07472440534356568;  // std dev = 3,200, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.08735249298492637;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23093078947516635;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.10071524747336404;  // std dev = 0,005, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1483473793180826;  // std dev = 1,361, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09800053664018173;  // std dev = 3,252, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.13718992299210708;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.07472440534356568;  // std dev = 3,200, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.08735249298492637;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23093078947516635;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.10071524747336404;  // std dev = 0,005, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1483473793180826;  // std dev = 1,361, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09800053664018173;  // std dev = 3,252, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.13718992299210708;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.07472440534356568;  // std dev = 3,200, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.08735249298492637;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23093078947516635;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.10071524747336404;  // std dev = 0,005, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1483473793180826;  // std dev = 1,361, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09800053664018173;  // std dev = 3,252, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.13718992299210708;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.07472440534356568;  // std dev = 3,200, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.08735249298492637;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1786123871194737;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else return 0.07304193401700777;  // std dev = 0,447, 609,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=170 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1786123871194737;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else return 0.07304193401700777;  // std dev = 0,447, 609,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=170 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1786123871194737;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else return 0.07304193401700777;  // std dev = 0,447, 609,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=170 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1786123871194737;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else return 0.07304193401700777;  // std dev = 0,447, 609,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=170 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1786123871194737;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else return 0.07304193401700777;  // std dev = 0,447, 609,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=170 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.135951547573254;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.43556528768534125;  // std dev = 1,152, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.20578429558135572;  // std dev = 0,119, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.047585001885884;  // std dev = 0,429, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.029404131068410937;  // std dev = 0,723, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06257453699889427;  // std dev = 3,320, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.06131148108267513;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.135951547573254;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.43556528768534125;  // std dev = 1,152, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.20578429558135572;  // std dev = 0,119, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.047585001885884;  // std dev = 0,429, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.029404131068410937;  // std dev = 0,723, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06257453699889427;  // std dev = 3,320, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.06131148108267513;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.135951547573254;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.43556528768534125;  // std dev = 1,152, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.20578429558135572;  // std dev = 0,119, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.047585001885884;  // std dev = 0,429, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.029404131068410937;  // std dev = 0,723, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06257453699889427;  // std dev = 3,320, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.06131148108267513;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.135951547573254;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.43556528768534125;  // std dev = 1,152, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.20578429558135572;  // std dev = 0,119, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.047585001885884;  // std dev = 0,429, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.029404131068410937;  // std dev = 0,723, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06257453699889427;  // std dev = 3,320, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.06131148108267513;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.135951547573254;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.43556528768534125;  // std dev = 1,152, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.20578429558135572;  // std dev = 0,119, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.047585001885884;  // std dev = 0,429, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.029404131068410937;  // std dev = 0,723, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06257453699889427;  // std dev = 3,320, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return 0.06131148108267513;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), venue(E, A) )
%   | | then return 0.42167246369597366;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2216724636959735;  // std dev = 0,400, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else return 0.101812239579833;  // std dev = 0,497, 5.123,000 (wgt'ed) examples reached here.  /* #neg=2.297 #pos=2.826 */
%   else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, B) )
%   | | then if ( samebib(H, I), venue(I, A) )
%   | | | then return 0.34944193827057535;  // std dev = 1,151, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1746549847910473;  // std dev = 0,104, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(G, J), haswordvenue(B, J) )
%   | | | then return -0.10235394898163497;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.053029180059952157;  // std dev = 3,249, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else return 0.050068869848777627;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), venue(E, A) )
%   | | then return 0.42167246369597366;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2216724636959735;  // std dev = 0,400, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else return 0.101812239579833;  // std dev = 0,497, 5.123,000 (wgt'ed) examples reached here.  /* #neg=2.297 #pos=2.826 */
%   else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, B) )
%   | | then if ( samebib(H, I), venue(I, A) )
%   | | | then return 0.34944193827057535;  // std dev = 1,151, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1746549847910473;  // std dev = 0,104, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(G, J), haswordvenue(B, J) )
%   | | | then return -0.10235394898163497;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.053029180059952157;  // std dev = 3,249, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else return 0.050068869848777627;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), venue(E, A) )
%   | | then return 0.42167246369597366;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2216724636959735;  // std dev = 0,400, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else return 0.101812239579833;  // std dev = 0,497, 5.123,000 (wgt'ed) examples reached here.  /* #neg=2.297 #pos=2.826 */
%   else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, B) )
%   | | then if ( samebib(H, I), venue(I, A) )
%   | | | then return 0.34944193827057535;  // std dev = 1,151, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1746549847910473;  // std dev = 0,104, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(G, J), haswordvenue(B, J) )
%   | | | then return -0.10235394898163497;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.053029180059952157;  // std dev = 3,249, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else return 0.050068869848777627;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), venue(E, A) )
%   | | then return 0.42167246369597366;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2216724636959735;  // std dev = 0,400, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else return 0.101812239579833;  // std dev = 0,497, 5.123,000 (wgt'ed) examples reached here.  /* #neg=2.297 #pos=2.826 */
%   else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, B) )
%   | | then if ( samebib(H, I), venue(I, A) )
%   | | | then return 0.34944193827057535;  // std dev = 1,151, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1746549847910473;  // std dev = 0,104, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(G, J), haswordvenue(B, J) )
%   | | | then return -0.10235394898163497;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.053029180059952157;  // std dev = 3,249, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else return 0.050068869848777627;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), venue(E, A) )
%   | | then return 0.42167246369597366;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2216724636959735;  // std dev = 0,400, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else return 0.101812239579833;  // std dev = 0,497, 5.123,000 (wgt'ed) examples reached here.  /* #neg=2.297 #pos=2.826 */
%   else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, B) )
%   | | then if ( samebib(H, I), venue(I, A) )
%   | | | then return 0.34944193827057535;  // std dev = 1,151, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1746549847910473;  // std dev = 0,104, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(G, J), haswordvenue(B, J) )
%   | | | then return -0.10235394898163497;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.053029180059952157;  // std dev = 3,249, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else return 0.050068869848777627;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07710954487072418;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.2694629585609707;  // std dev = 1,151, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15119985293724983;  // std dev = 0,091, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.09332568371624125;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.043530370219289016;  // std dev = 3,248, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.03309629860596533;  // std dev = 1,226, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.03615500491448739;  // std dev = 3,172, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.04177438867282152;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07710954487072418;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.2694629585609707;  // std dev = 1,151, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15119985293724983;  // std dev = 0,091, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.09332568371624125;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.043530370219289016;  // std dev = 3,248, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.03309629860596533;  // std dev = 1,226, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.03615500491448739;  // std dev = 3,172, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.04177438867282152;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07710954487072418;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.2694629585609707;  // std dev = 1,151, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15119985293724983;  // std dev = 0,091, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.09332568371624125;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.043530370219289016;  // std dev = 3,248, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.03309629860596533;  // std dev = 1,226, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.03615500491448739;  // std dev = 3,172, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.04177438867282152;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07710954487072418;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.2694629585609707;  // std dev = 1,151, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15119985293724983;  // std dev = 0,091, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.09332568371624125;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.043530370219289016;  // std dev = 3,248, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.03309629860596533;  // std dev = 1,226, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.03615500491448739;  // std dev = 3,172, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.04177438867282152;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07710954487072418;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.2694629585609707;  // std dev = 1,151, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15119985293724983;  // std dev = 0,091, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.09332568371624125;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.043530370219289016;  // std dev = 3,248, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.03309629860596533;  // std dev = 1,226, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.03615500491448739;  // std dev = 3,172, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.04177438867282152;  // std dev = 0,448, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05786324461568442;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.08155522622489712;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.042649876122080155;  // std dev = 0,853, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.039372343265454704;  // std dev = 3,384, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else return 0.033579230765100304;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05786324461568442;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.08155522622489712;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.042649876122080155;  // std dev = 0,853, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.039372343265454704;  // std dev = 3,384, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else return 0.033579230765100304;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05786324461568442;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.08155522622489712;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.042649876122080155;  // std dev = 0,853, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.039372343265454704;  // std dev = 3,384, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else return 0.033579230765100304;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05786324461568442;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.08155522622489712;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.042649876122080155;  // std dev = 0,853, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.039372343265454704;  // std dev = 3,384, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else return 0.033579230765100304;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05786324461568442;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.08155522622489712;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.042649876122080155;  // std dev = 0,853, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.039372343265454704;  // std dev = 3,384, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else return 0.033579230765100304;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.043408073409671497;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.19344523681673328;  // std dev = 1,150, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.13638469146645957;  // std dev = 0,090, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.01884488562493372;  // std dev = 0,428, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else return 0.02730781377203024;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.043408073409671497;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.19344523681673328;  // std dev = 1,150, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.13638469146645957;  // std dev = 0,090, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.01884488562493372;  // std dev = 0,428, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else return 0.02730781377203024;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.043408073409671497;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.19344523681673328;  // std dev = 1,150, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.13638469146645957;  // std dev = 0,090, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.01884488562493372;  // std dev = 0,428, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else return 0.02730781377203024;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.043408073409671497;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.19344523681673328;  // std dev = 1,150, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.13638469146645957;  // std dev = 0,090, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.01884488562493372;  // std dev = 0,428, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else return 0.02730781377203024;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.043408073409671497;  // std dev = 0,497, 5.148,000 (wgt'ed) examples reached here.  /* #neg=2.301 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.19344523681673328;  // std dev = 1,150, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.13638469146645957;  // std dev = 0,090, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.01884488562493372;  // std dev = 0,428, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else return 0.02730781377203024;  // std dev = 0,448, 540,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=151 */










Predicates from source: ['samevenue(venue,venue).', 'samebib(class,class).', 'author(class,author).', 'haswordauthor(author,word).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Predicates from source: ['samevenue(venue,venue).', 'samebib(class,class).', 'author(class,author).', 'haswordauthor(author,word).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Predicates from source: ['samevenue(venue,venue).', 'samebib(class,class).', 'author(class,author).', 'haswordauthor(author,word).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Predicates from source: ['samevenue(venue,venue).', 'samebib(class,class).', 'author(class,author).', 'haswordauthor(author,word).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Predicates from source: ['samevenue(venue,venue).', 'samebib(class,class).', 'author(class,author).', 'haswordauthor(author,word).', 'haswordvenue(venue,word).', 'venue(class,venue).']

Starting fold 1

Starting fold 1

Starting fold 1

Starting fold 1

Starting fold 1

Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)'] 

Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)'] 

Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)'] 

Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)'] 

Best mapping found: ['samevenue(A,B) -> workedunder(A,B)', 'author(A,B) -> genre(B,A)', 'haswordauthor(A,B) -> movie(B,A)', 'haswordvenue(A,B) -> movie(B,A)', 'venue(A,B) -> genre(B,A)'] 

Transferred target predicate: workedunder 

Transferred target predicate: workedunder 

Transferred target predicate: workedunder 

Transferred target predicate: workedunder 

Transferred target predicate: workedunder 

******************************************
******************************************
******************************************
******************************************
******************************************
Performing Parameter Learning
Performing Parameter Learning
Performing Parameter Learning
Performing Parameter Learning
Performing Parameter Learning
******************************************
******************************************
******************************************
******************************************
******************************************
Refine
Refine
Refine
Refine
Refine
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
0;false;movie(D, A), movie(D, E).;true;true
0;false;movie(D, A), movie(D, E).;true;true
0;false;movie(D, A), movie(D, E).;true;true
0;false;movie(D, A), movie(D, E).;true;true
0;false;movie(D, A), movie(D, E).;true;true
0;false,true;movie(F, E), movie(F, B).;false;true
0;false,true;movie(F, E), movie(F, B).;false;true
0;false,true;movie(F, E), movie(F, B).;false;true
0;false,true;movie(F, E), movie(F, B).;false;true
0;false,true;movie(F, E), movie(F, B).;false;true
0;false,true,false;genre(E, G), genre(A, G).;false;false
0;false,true,false;genre(E, G), genre(A, G).;false;false
0;false,true,false;genre(E, G), genre(A, G).;false;false
0;false,true,false;genre(E, G), genre(A, G).;false;false
0;false,true,false;genre(E, G), genre(A, G).;false;false
0;false,false;movie(H, B), movie(H, I).;true;false
0;false,false;movie(H, B), movie(H, I).;true;false
0;false,false;movie(H, B), movie(H, I).;true;false
0;false,false;movie(H, B), movie(H, I).;true;false
0;false,false;movie(H, B), movie(H, I).;true;false
0;false,false,true;genre(I, J), genre(A, J).;false;false
0;false,false,true;genre(I, J), genre(A, J).;false;false
0;false,false,true;genre(I, J), genre(A, J).;false;false
0;false,false,true;genre(I, J), genre(A, J).;false;false
0;false,false,true;genre(I, J), genre(A, J).;false;false
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;movie(D, B), movie(D, E).;true;false
1;true;movie(D, B), movie(D, E).;true;false
1;true;movie(D, B), movie(D, E).;true;false
1;true;movie(D, B), movie(D, E).;true;false
1;true;movie(D, B), movie(D, E).;true;false
1;true,true;movie(C, E).;false;true
1;true,true;movie(C, E).;false;true
1;true,true;movie(C, E).;false;true
1;true,true;movie(C, E).;false;true
1;true,true;movie(C, E).;false;true
1;true,true,false;genre(E, F), genre(A, F).;false;false
1;true,true,false;genre(E, F), genre(A, F).;false;false
1;true,true,false;genre(E, F), genre(A, F).;false;false
1;true,true,false;genre(E, F), genre(A, F).;false;false
1;true,true,false;genre(E, F), genre(A, F).;false;false
1;false;movie(G, B), movie(G, H).;true;false
1;false;movie(G, B), movie(G, H).;true;false
1;false;movie(G, B), movie(G, H).;true;false
1;false;movie(G, B), movie(G, H).;true;false
1;false;movie(G, B), movie(G, H).;true;false
1;false,true;genre(H, I), genre(A, I).;true;true
1;false,true;genre(H, I), genre(A, I).;true;true
1;false,true;genre(H, I), genre(A, I).;true;true
1;false,true;genre(H, I), genre(A, I).;true;true
1;false,true;genre(H, I), genre(A, I).;true;true
1;false,true,true;genre(B, J).;false;false
1;false,true,true;genre(B, J).;false;false
1;false,true,true;genre(B, J).;false;false
1;false,true,true;genre(B, J).;false;false
1;false,true,true;genre(B, J).;false;false
1;false,true,false;movie(K, H), movie(K, A).;false;false
1;false,true,false;movie(K, H), movie(K, A).;false;false
1;false,true,false;movie(K, H), movie(K, A).;false;false
1;false,true,false;movie(K, H), movie(K, A).;false;false
1;false,true,false;movie(K, H), movie(K, A).;false;false
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;movie(D, B), movie(D, E).;true;false
2;true;movie(D, B), movie(D, E).;true;false
2;true;movie(D, B), movie(D, E).;true;false
2;true;movie(D, B), movie(D, E).;true;false
2;true;movie(D, B), movie(D, E).;true;false
2;true,true;movie(C, E).;false;true
2;true,true;movie(C, E).;false;true
2;true,true;movie(C, E).;false;true
2;true,true;movie(C, E).;false;true
2;true,true;movie(C, E).;false;true
2;true,true,false;genre(E, F), genre(A, F).;false;false
2;true,true,false;genre(E, F), genre(A, F).;false;false
2;true,true,false;genre(E, F), genre(A, F).;false;false
2;true,true,false;genre(E, F), genre(A, F).;false;false
2;true,true,false;genre(E, F), genre(A, F).;false;false
2;false;movie(G, B), movie(G, H).;true;false
2;false;movie(G, B), movie(G, H).;true;false
2;false;movie(G, B), movie(G, H).;true;false
2;false;movie(G, B), movie(G, H).;true;false
2;false;movie(G, B), movie(G, H).;true;false
2;false,true;genre(H, I), genre(A, I).;true;true
2;false,true;genre(H, I), genre(A, I).;true;true
2;false,true;genre(H, I), genre(A, I).;true;true
2;false,true;genre(H, I), genre(A, I).;true;true
2;false,true;genre(H, I), genre(A, I).;true;true
2;false,true,true;genre(B, J).;false;false
2;false,true,true;genre(B, J).;false;false
2;false,true,true;genre(B, J).;false;false
2;false,true,true;genre(B, J).;false;false
2;false,true,true;genre(B, J).;false;false
2;false,true,false;movie(K, H), movie(K, A).;false;false
2;false,true,false;movie(K, H), movie(K, A).;false;false
2;false,true,false;movie(K, H), movie(K, A).;false;false
2;false,true,false;movie(K, H), movie(K, A).;false;false
2;false,true,false;movie(K, H), movie(K, A).;false;false
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
3;false;movie(D, B), movie(D, E).;true;true
3;false;movie(D, B), movie(D, E).;true;true
3;false;movie(D, B), movie(D, E).;true;true
3;false;movie(D, B), movie(D, E).;true;true
3;false;movie(D, B), movie(D, E).;true;true
3;false,true;movie(F, E), movie(F, A).;false;true
3;false,true;movie(F, E), movie(F, A).;false;true
3;false,true;movie(F, E), movie(F, A).;false;true
3;false,true;movie(F, E), movie(F, A).;false;true
3;false,true;movie(F, E), movie(F, A).;false;true
3;false,true,false;genre(E, G), genre(A, G).;false;false
3;false,true,false;genre(E, G), genre(A, G).;false;false
3;false,true,false;genre(E, G), genre(A, G).;false;false
3;false,true,false;genre(E, G), genre(A, G).;false;false
3;false,true,false;genre(E, G), genre(A, G).;false;false
3;false,false;movie(H, A), movie(H, I).;true;false
3;false,false;movie(H, A), movie(H, I).;true;false
3;false,false;movie(H, A), movie(H, I).;true;false
3;false,false;movie(H, A), movie(H, I).;true;false
3;false,false;movie(H, A), movie(H, I).;true;false
3;false,false,true;genre(I, J), genre(B, J).;false;false
3;false,false,true;genre(I, J), genre(B, J).;false;false
3;false,false,true;genre(I, J), genre(B, J).;false;false
3;false,false,true;genre(I, J), genre(B, J).;false;false
3;false,false,true;genre(I, J), genre(B, J).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
5;false;movie(D, A), movie(D, E).;true;true
5;false;movie(D, A), movie(D, E).;true;true
5;false;movie(D, A), movie(D, E).;true;true
5;false;movie(D, A), movie(D, E).;true;true
5;false;movie(D, A), movie(D, E).;true;true
5;false,true;genre(E, F), genre(B, F).;true;false
5;false,true;genre(E, F), genre(B, F).;true;false
5;false,true;genre(E, F), genre(B, F).;true;false
5;false,true;genre(E, F), genre(B, F).;true;false
5;false,true;genre(E, F), genre(B, F).;true;false
5;false,true,true;genre(A, G).;false;false
5;false,true,true;genre(A, G).;false;false
5;false,true,true;genre(A, G).;false;false
5;false,true,true;genre(A, G).;false;false
5;false,true,true;genre(A, G).;false;false
5;false,false;movie(H, B), movie(H, I).;true;false
5;false,false;movie(H, B), movie(H, I).;true;false
5;false,false;movie(H, B), movie(H, I).;true;false
5;false,false;movie(H, B), movie(H, I).;true;false
5;false,false;movie(H, B), movie(H, I).;true;false
5;false,false,true;genre(I, J), genre(B, J).;false;false
5;false,false,true;genre(I, J), genre(B, J).;false;false
5;false,false,true;genre(I, J), genre(B, J).;false;false
5;false,false,true;genre(I, J), genre(B, J).;false;false
5;false,false,true;genre(I, J), genre(B, J).;false;false
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;movie(C, D).;true;false
6;true;movie(C, D).;true;false
6;true;movie(C, D).;true;false
6;true;movie(C, D).;true;false
6;true;movie(C, D).;true;false
6;true,true;genre(D, E), genre(A, E).;false;false
6;true,true;genre(D, E), genre(A, E).;false;false
6;true,true;genre(D, E), genre(A, E).;false;false
6;true,true;genre(D, E), genre(A, E).;false;false
6;true,true;genre(D, E), genre(A, E).;false;false
6;false;movie(F, A), movie(F, G).;true;false
6;false;movie(F, A), movie(F, G).;true;false
6;false;movie(F, A), movie(F, G).;true;false
6;false;movie(F, A), movie(F, G).;true;false
6;false;movie(F, A), movie(F, G).;true;false
6;false,true;genre(G, H), genre(B, H).;true;true
6;false,true;genre(G, H), genre(B, H).;true;true
6;false,true;genre(G, H), genre(B, H).;true;true
6;false,true;genre(G, H), genre(B, H).;true;true
6;false,true;genre(G, H), genre(B, H).;true;true
6;false,true,true;genre(A, I).;false;false
6;false,true,true;genre(A, I).;false;false
6;false,true,true;genre(A, I).;false;false
6;false,true,true;genre(A, I).;false;false
6;false,true,true;genre(A, I).;false;false
6;false,true,false;movie(J, G), movie(J, B).;false;false
6;false,true,false;movie(J, G), movie(J, B).;false;false
6;false,true,false;movie(J, G), movie(J, B).;false;false
6;false,true,false;movie(J, G), movie(J, B).;false;false
6;false,true,false;movie(J, G), movie(J, B).;false;false
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
7;false;movie(D, A), movie(D, E).;true;true
7;false;movie(D, A), movie(D, E).;true;true
7;false;movie(D, A), movie(D, E).;true;true
7;false;movie(D, A), movie(D, E).;true;true
7;false;movie(D, A), movie(D, E).;true;true
7;false,true;genre(E, F), genre(B, F).;true;true
7;false,true;genre(E, F), genre(B, F).;true;true
7;false,true;genre(E, F), genre(B, F).;true;true
7;false,true;genre(E, F), genre(B, F).;true;true
7;false,true;genre(E, F), genre(B, F).;true;true
7;false,true,true;genre(A, G).;false;false
7;false,true,true;genre(A, G).;false;false
7;false,true,true;genre(A, G).;false;false
7;false,true,true;genre(A, G).;false;false
7;false,true,true;genre(A, G).;false;false
7;false,true,false;movie(H, E), movie(H, B).;false;false
7;false,true,false;movie(H, E), movie(H, B).;false;false
7;false,true,false;movie(H, E), movie(H, B).;false;false
7;false,true,false;movie(H, E), movie(H, B).;false;false
7;false,true,false;movie(H, E), movie(H, B).;false;false
7;false,false;movie(I, B), movie(I, J).;true;false
7;false,false;movie(I, B), movie(I, J).;true;false
7;false,false;movie(I, B), movie(I, J).;true;false
7;false,false;movie(I, B), movie(I, J).;true;false
7;false,false;movie(I, B), movie(I, J).;true;false
7;false,false,true;genre(J, K), genre(A, K).;false;false
7;false,false,true;genre(J, K), genre(A, K).;false;false
7;false,false,true;genre(J, K), genre(A, K).;false;false
7;false,false,true;genre(J, K), genre(A, K).;false;false
7;false,false,true;genre(J, K), genre(A, K).;false;false
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
8;false;movie(D, A), movie(D, E).;true;false
8;false;movie(D, A), movie(D, E).;true;false
8;false;movie(D, A), movie(D, E).;true;false
8;false;movie(D, A), movie(D, E).;true;false
8;false;movie(D, A), movie(D, E).;true;false
8;false,true;movie(F, E), movie(F, B).;false;true
8;false,true;movie(F, E), movie(F, B).;false;true
8;false,true;movie(F, E), movie(F, B).;false;true
8;false,true;movie(F, E), movie(F, B).;false;true
8;false,true;movie(F, E), movie(F, B).;false;true
8;false,true,false;genre(E, G), genre(A, G).;false;false
8;false,true,false;genre(E, G), genre(A, G).;false;false
8;false,true,false;genre(E, G), genre(A, G).;false;false
8;false,true,false;genre(E, G), genre(A, G).;false;false
8;false,true,false;genre(E, G), genre(A, G).;false;false
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;false;true
9;false;movie(D, A), movie(D, E).;true;false
9;false;movie(D, A), movie(D, E).;true;false
9;false;movie(D, A), movie(D, E).;true;false
9;false;movie(D, A), movie(D, E).;true;false
9;false;movie(D, A), movie(D, E).;true;false
9;false,true;genre(E, F), genre(B, F).;true;false
9;false,true;genre(E, F), genre(B, F).;true;false
9;false,true;genre(E, F), genre(B, F).;true;false
9;false,true;genre(E, F), genre(B, F).;true;false
9;false,true;genre(E, F), genre(B, F).;true;false
9;false,true,true;genre(A, G).;false;false
9;false,true,true;genre(A, G).;false;false
9;false,true,true;genre(A, G).;false;false
9;false,true,true;genre(A, G).;false;false
9;false,true,true;genre(A, G).;false;false










WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6048156017661795;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6048156017661795;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6048156017661795;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6048156017661795;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6048156017661795;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.5143336738429792;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( genre(G, H), genre(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, G), movie(I, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.5143336738429792;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( genre(G, H), genre(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, G), movie(I, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.5143336738429792;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( genre(G, H), genre(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, G), movie(I, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.5143336738429792;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( genre(G, H), genre(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, G), movie(I, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.5143336738429792;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( genre(G, H), genre(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, G), movie(I, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.41059521048428527;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( genre(G, H), genre(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, G), movie(I, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.41059521048428527;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( genre(G, H), genre(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, G), movie(I, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.41059521048428527;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( genre(G, H), genre(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, G), movie(I, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.41059521048428527;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( genre(G, H), genre(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, G), movie(I, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B), movie(D, E) )
%   | then if ( movie(C, E) )
%   | | then return 0.41059521048428527;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), movie(F, G) )
%   | then if ( genre(G, H), genre(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, G), movie(I, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3138222988479822;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3138222988479822;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3138222988479822;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3138222988479822;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3138222988479822;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, B), movie(D, E) )
%   | then if ( movie(F, E), movie(F, A) )
%   | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23577669286643868;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23577669286643868;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23577669286643868;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23577669286643868;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23577669286643868;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1772814052330582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.0851847513883968;  // std dev = 2,24e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1772814052330582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.0851847513883968;  // std dev = 2,24e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1772814052330582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.0851847513883968;  // std dev = 2,24e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1772814052330582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.0851847513883968;  // std dev = 2,24e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1772814052330582;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.0851847513883968;  // std dev = 2,24e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return -0.6122131998210212;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.14454355693573592;  // std dev = 3,691, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then if ( genre(G, H), genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(J, G), movie(J, B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109179;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return -0.6122131998210212;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.14454355693573592;  // std dev = 3,691, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then if ( genre(G, H), genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(J, G), movie(J, B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109179;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return -0.6122131998210212;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.14454355693573592;  // std dev = 3,691, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then if ( genre(G, H), genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(J, G), movie(J, B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109179;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return -0.6122131998210212;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.14454355693573592;  // std dev = 3,691, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then if ( genre(G, H), genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(J, G), movie(J, B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109179;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( genre(D, E), genre(A, E) )
%   | | then return -0.6122131998210212;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.14454355693573592;  // std dev = 3,691, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, G) )
%   | then if ( genre(G, H), genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(J, G), movie(J, B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109179;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1032063170739251;  // std dev = 3,734, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1032063170739251;  // std dev = 3,734, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1032063170739251;  // std dev = 3,734, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1032063170739251;  // std dev = 3,734, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1032063170739251;  // std dev = 3,734, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(H, E), movie(H, B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07993966261013628;  // std dev = 3,735, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07993966261013628;  // std dev = 3,735, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07993966261013628;  // std dev = 3,735, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07993966261013628;  // std dev = 3,735, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07993966261013628;  // std dev = 3,735, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, E), movie(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(E, G), genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06245371219361714;  // std dev = 3,735, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06245371219361714;  // std dev = 3,735, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06245371219361714;  // std dev = 3,735, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06245371219361714;  // std dev = 3,735, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06245371219361714;  // std dev = 3,735, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( movie(D, A), movie(D, E) )
%   | then if ( genre(E, F), genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.










Results
Results
Results
Results
Results
   AUC ROC   = 0.894172
   AUC ROC   = 0.894172
   AUC ROC   = 0.894172
   AUC ROC   = 0.894172
   AUC ROC   = 0.894172
   AUC PR    = 0.825316
   AUC PR    = 0.825316
   AUC PR    = 0.825316
   AUC PR    = 0.825316
   AUC PR    = 0.825316
   CLL	      = -0.341203
   CLL	      = -0.341203
   CLL	      = -0.341203
   CLL	      = -0.341203
   CLL	      = -0.341203
   Precision = 0.806931 at threshold = 0.5
   Precision = 0.806931 at threshold = 0.5
   Precision = 0.806931 at threshold = 0.5
   Precision = 0.806931 at threshold = 0.5
   Precision = 0.806931 at threshold = 0.5
   Recall    = 1.0
   Recall    = 1.0
   Recall    = 1.0
   Recall    = 1.0
   Recall    = 1.0
   F1        = 0.893151
   F1        = 0.893151
   F1        = 0.893151
   F1        = 0.893151
   F1        = 0.893151










Total learning time: 2.242 seconds
Total learning time: 2.242 seconds
Total learning time: 2.242 seconds
Total learning time: 2.242 seconds
Total learning time: 2.242 seconds
Total inference time: 1.068 seconds
Total inference time: 1.068 seconds
Total inference time: 1.068 seconds
Total inference time: 1.068 seconds
Total inference time: 1.068 seconds
AUC ROC: 0.894172
AUC ROC: 0.894172
AUC ROC: 0.894172
AUC ROC: 0.894172
AUC ROC: 0.894172










Structure after Parameter Learning
Structure after Parameter Learning
Structure after Parameter Learning
Structure after Parameter Learning
Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [2.58e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [2.58e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [2.58e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [2.58e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [2.58e-08, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'genre(G, H), genre(A, H)', 'false,true,false': 'movie(I, G), movie(I, A)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 8, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'genre(G, H), genre(A, H)', 'false,true,false': 'movie(I, G), movie(I, A)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 8, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'genre(G, H), genre(A, H)', 'false,true,false': 'movie(I, G), movie(I, A)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 8, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'genre(G, H), genre(A, H)', 'false,true,false': 'movie(I, G), movie(I, A)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 8, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'genre(G, H), genre(A, H)', 'false,true,false': 'movie(I, G), movie(I, A)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 8, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'genre(G, H), genre(A, H)', 'false,true,false': 'movie(I, G), movie(I, A)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 8, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'genre(G, H), genre(A, H)', 'false,true,false': 'movie(I, G), movie(I, A)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 8, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'genre(G, H), genre(A, H)', 'false,true,false': 'movie(I, G), movie(I, A)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 8, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'genre(G, H), genre(A, H)', 'false,true,false': 'movie(I, G), movie(I, A)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 8, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B), movie(D, E)', 'true,true': 'movie(C, E)', 'false': 'movie(F, B), movie(F, G)', 'false,true': 'genre(G, H), genre(A, H)', 'false,true,false': 'movie(I, G), movie(I, A)'}, {'true,true,true': [3.767, 19, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 8, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B), movie(D, E)', 'false,true': 'movie(F, E), movie(F, A)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'true': [3.767, 19, 56], 'false': [0.0, 37, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'true': [3.767, 19, 56], 'false': [0.0, 37, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'true': [3.767, 19, 56], 'false': [0.0, 37, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'true': [3.767, 19, 56], 'false': [0.0, 37, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)'}, {'true': [3.767, 19, 56], 'false': [0.0, 37, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [2.24e-08, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [2.24e-08, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [2.24e-08, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [2.24e-08, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'true': [3.767, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [2.24e-08, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(C, D)', 'true,true': 'genre(D, E), genre(A, E)', 'false': 'movie(F, A), movie(F, G)', 'false,true': 'genre(G, H), genre(B, H)', 'false,true,true': 'genre(A, I)', 'false,true,false': 'movie(J, G), movie(J, B)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [3.691, 18, 56], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 7, 0], 'false,true,false,false': [5.27e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(C, D)', 'true,true': 'genre(D, E), genre(A, E)', 'false': 'movie(F, A), movie(F, G)', 'false,true': 'genre(G, H), genre(B, H)', 'false,true,true': 'genre(A, I)', 'false,true,false': 'movie(J, G), movie(J, B)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [3.691, 18, 56], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 7, 0], 'false,true,false,false': [5.27e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(C, D)', 'true,true': 'genre(D, E), genre(A, E)', 'false': 'movie(F, A), movie(F, G)', 'false,true': 'genre(G, H), genre(B, H)', 'false,true,true': 'genre(A, I)', 'false,true,false': 'movie(J, G), movie(J, B)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [3.691, 18, 56], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 7, 0], 'false,true,false,false': [5.27e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(C, D)', 'true,true': 'genre(D, E), genre(A, E)', 'false': 'movie(F, A), movie(F, G)', 'false,true': 'genre(G, H), genre(B, H)', 'false,true,true': 'genre(A, I)', 'false,true,false': 'movie(J, G), movie(J, B)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [3.691, 18, 56], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 7, 0], 'false,true,false,false': [5.27e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(C, D)', 'true,true': 'genre(D, E), genre(A, E)', 'false': 'movie(F, A), movie(F, G)', 'false,true': 'genre(G, H), genre(B, H)', 'false,true,true': 'genre(A, I)', 'false,true,false': 'movie(J, G), movie(J, B)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [3.691, 18, 56], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 7, 0], 'false,true,false,false': [5.27e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)', 'false,true,false': 'movie(H, E), movie(H, B)'}, {'true': [3.734, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [2.63e-09, 7, 0], 'false,true,false,false': [7.45e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)', 'false,true,false': 'movie(H, E), movie(H, B)'}, {'true': [3.734, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [2.63e-09, 7, 0], 'false,true,false,false': [7.45e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)', 'false,true,false': 'movie(H, E), movie(H, B)'}, {'true': [3.734, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [2.63e-09, 7, 0], 'false,true,false,false': [7.45e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)', 'false,true,false': 'movie(H, E), movie(H, B)'}, {'true': [3.734, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [2.63e-09, 7, 0], 'false,true,false,false': [7.45e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)', 'false,true,false': 'movie(H, E), movie(H, B)'}, {'true': [3.734, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [2.63e-09, 7, 0], 'false,true,false,false': [7.45e-09, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.735, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.735, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.735, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.735, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'movie(F, E), movie(F, B)', 'false,true,false': 'genre(E, G), genre(A, G)'}, {'true': [3.735, 19, 56], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'true': [3.735, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [0.0, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'true': [3.735, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [0.0, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'true': [3.735, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [0.0, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'true': [3.735, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [0.0, 36, 0], 'false,false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, E)', 'false,true': 'genre(E, F), genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'true': [3.735, 19, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [0.0, 36, 0], 'false,false': [0.0, 0, 0]}]
{'': [0.18915555555555524, 3.900783600034334e-17], 'false': [3.900783600034334e-17, nan], 'false,true': [-6.938893903907228e-18, 2.2970131543968756e-17]}
{'': [0.18915555555555524, 3.900783600034334e-17], 'false': [3.900783600034334e-17, nan], 'false,true': [-6.938893903907228e-18, 2.2970131543968756e-17]}
{'': [0.18915555555555524, 3.900783600034334e-17], 'false': [3.900783600034334e-17, nan], 'false,true': [-6.938893903907228e-18, 2.2970131543968756e-17]}
{'': [0.18915555555555524, 3.900783600034334e-17], 'false': [3.900783600034334e-17, nan], 'false,true': [-6.938893903907228e-18, 2.2970131543968756e-17]}
{'': [0.18915555555555524, 3.900783600034334e-17], 'false': [3.900783600034334e-17, nan], 'false,true': [-6.938893903907228e-18, 2.2970131543968756e-17]}
{'': [0.18915555555555533, 1.200241107702872e-17], 'true': [0.18915555555555533, nan], 'true,true': [0.18915555555555533, nan], 'false': [1.200241107702872e-17, nan], 'false,true': [nan, 1.200241107702872e-17]}
{'': [0.18915555555555533, 1.200241107702872e-17], 'true': [0.18915555555555533, nan], 'true,true': [0.18915555555555533, nan], 'false': [1.200241107702872e-17, nan], 'false,true': [nan, 1.200241107702872e-17]}
{'': [0.18915555555555533, 1.200241107702872e-17], 'true': [0.18915555555555533, nan], 'true,true': [0.18915555555555533, nan], 'false': [1.200241107702872e-17, nan], 'false,true': [nan, 1.200241107702872e-17]}
{'': [0.18915555555555533, 1.200241107702872e-17], 'true': [0.18915555555555533, nan], 'true,true': [0.18915555555555533, nan], 'false': [1.200241107702872e-17, nan], 'false,true': [nan, 1.200241107702872e-17]}
{'': [0.18915555555555533, 1.200241107702872e-17], 'true': [0.18915555555555533, nan], 'true,true': [0.18915555555555533, nan], 'false': [1.200241107702872e-17, nan], 'false,true': [nan, 1.200241107702872e-17]}
{'': [0.1891555555555554, -9.00180830777154e-18], 'true': [0.1891555555555554, nan], 'true,true': [0.1891555555555554, nan], 'false': [-9.00180830777154e-18, nan], 'false,true': [nan, -9.00180830777154e-18]}
{'': [0.1891555555555554, -9.00180830777154e-18], 'true': [0.1891555555555554, nan], 'true,true': [0.1891555555555554, nan], 'false': [-9.00180830777154e-18, nan], 'false,true': [nan, -9.00180830777154e-18]}
{'': [0.1891555555555554, -9.00180830777154e-18], 'true': [0.1891555555555554, nan], 'true,true': [0.1891555555555554, nan], 'false': [-9.00180830777154e-18, nan], 'false,true': [nan, -9.00180830777154e-18]}
{'': [0.1891555555555554, -9.00180830777154e-18], 'true': [0.1891555555555554, nan], 'true,true': [0.1891555555555554, nan], 'false': [-9.00180830777154e-18, nan], 'false,true': [nan, -9.00180830777154e-18]}
{'': [0.1891555555555554, -9.00180830777154e-18], 'true': [0.1891555555555554, nan], 'true,true': [0.1891555555555554, nan], 'false': [-9.00180830777154e-18, nan], 'false,true': [nan, -9.00180830777154e-18]}
{'': [0.18915555555555608, -1.50030138462859e-18], 'false': [-1.50030138462859e-18, nan], 'false,true': [1.734723475976807e-18, 0.0]}
{'': [0.18915555555555608, -1.50030138462859e-18], 'false': [-1.50030138462859e-18, nan], 'false,true': [1.734723475976807e-18, 0.0]}
{'': [0.18915555555555608, -1.50030138462859e-18], 'false': [-1.50030138462859e-18, nan], 'false,true': [1.734723475976807e-18, 0.0]}
{'': [0.18915555555555608, -1.50030138462859e-18], 'false': [-1.50030138462859e-18, nan], 'false,true': [1.734723475976807e-18, 0.0]}
{'': [0.18915555555555608, -1.50030138462859e-18], 'false': [-1.50030138462859e-18, nan], 'false,true': [1.734723475976807e-18, 0.0]}
{'': [0.18915555555555552, -1.050210969240013e-17]}
{'': [0.18915555555555552, -1.050210969240013e-17]}
{'': [0.18915555555555552, -1.050210969240013e-17]}
{'': [0.18915555555555552, -1.050210969240013e-17]}
{'': [0.18915555555555552, -1.050210969240013e-17]}
{'': [0.189155555555556, 1.350271246165731e-17], 'false': [1.350271246165731e-17, nan], 'false,true': [0.0, 1.3877787807814457e-17]}
{'': [0.189155555555556, 1.350271246165731e-17], 'false': [1.350271246165731e-17, nan], 'false,true': [0.0, 1.3877787807814457e-17]}
{'': [0.189155555555556, 1.350271246165731e-17], 'false': [1.350271246165731e-17, nan], 'false,true': [0.0, 1.3877787807814457e-17]}
{'': [0.189155555555556, 1.350271246165731e-17], 'false': [1.350271246165731e-17, nan], 'false,true': [0.0, 1.3877787807814457e-17]}
{'': [0.189155555555556, 1.350271246165731e-17], 'false': [1.350271246165731e-17, nan], 'false,true': [0.0, 1.3877787807814457e-17]}
{'': [0.18915555555555547, 0.0], 'true': [0.18915555555555547, nan], 'true,true': [0.0, 0.18407596785975153], 'false': [0.0, nan], 'false,true': [0.0, 7.709882115452476e-19]}
{'': [0.18915555555555547, 0.0], 'true': [0.18915555555555547, nan], 'true,true': [0.0, 0.18407596785975153], 'false': [0.0, nan], 'false,true': [0.0, 7.709882115452476e-19]}
{'': [0.18915555555555547, 0.0], 'true': [0.18915555555555547, nan], 'true,true': [0.0, 0.18407596785975153], 'false': [0.0, nan], 'false,true': [0.0, 7.709882115452476e-19]}
{'': [0.18915555555555547, 0.0], 'true': [0.18915555555555547, nan], 'true,true': [0.0, 0.18407596785975153], 'false': [0.0, nan], 'false,true': [0.0, 7.709882115452476e-19]}
{'': [0.18915555555555547, 0.0], 'true': [0.18915555555555547, nan], 'true,true': [0.0, 0.18407596785975153], 'false': [0.0, nan], 'false,true': [0.0, 7.709882115452476e-19]}
{'': [0.185926125244218, 2.250452076942885e-18], 'false': [2.250452076942885e-18, nan], 'false,true': [0.0, 2.3129646346357427e-18]}
{'': [0.185926125244218, 2.250452076942885e-18], 'false': [2.250452076942885e-18, nan], 'false,true': [0.0, 2.3129646346357427e-18]}
{'': [0.185926125244218, 2.250452076942885e-18], 'false': [2.250452076942885e-18, nan], 'false,true': [0.0, 2.3129646346357427e-18]}
{'': [0.185926125244218, 2.250452076942885e-18], 'false': [2.250452076942885e-18, nan], 'false,true': [0.0, 2.3129646346357427e-18]}
{'': [0.185926125244218, 2.250452076942885e-18], 'false': [2.250452076942885e-18, nan], 'false,true': [0.0, 2.3129646346357427e-18]}
{'': [0.1859637256557405, -7.50150692314295e-19], 'false': [-7.50150692314295e-19, nan], 'false,true': [0.0, -5.742532885992189e-18]}
{'': [0.1859637256557405, -7.50150692314295e-19], 'false': [-7.50150692314295e-19, nan], 'false,true': [0.0, -5.742532885992189e-18]}
{'': [0.1859637256557405, -7.50150692314295e-19], 'false': [-7.50150692314295e-19, nan], 'false,true': [0.0, -5.742532885992189e-18]}
{'': [0.1859637256557405, -7.50150692314295e-19], 'false': [-7.50150692314295e-19, nan], 'false,true': [0.0, -5.742532885992189e-18]}
{'': [0.1859637256557405, -7.50150692314295e-19], 'false': [-7.50150692314295e-19, nan], 'false,true': [0.0, -5.742532885992189e-18]}
{'': [0.1860020419037924, -1.50030138462859e-18], 'false': [-1.50030138462859e-18, nan], 'false,true': [0.0, -7.709882115452476e-19]}
{'': [0.1860020419037924, -1.50030138462859e-18], 'false': [-1.50030138462859e-18, nan], 'false,true': [0.0, -7.709882115452476e-19]}
{'': [0.1860020419037924, -1.50030138462859e-18], 'false': [-1.50030138462859e-18, nan], 'false,true': [0.0, -7.709882115452476e-19]}
{'': [0.1860020419037924, -1.50030138462859e-18], 'false': [-1.50030138462859e-18, nan], 'false,true': [0.0, -7.709882115452476e-19]}
{'': [0.1860020419037924, -1.50030138462859e-18], 'false': [-1.50030138462859e-18, nan], 'false,true': [0.0, -7.709882115452476e-19]}










******************************************
******************************************
******************************************
******************************************
******************************************
Performing Theory Revision
Performing Theory Revision
Performing Theory Revision
Performing Theory Revision
Performing Theory Revision
******************************************
******************************************
******************************************
******************************************
******************************************
'false,true,false'
'false,true,false'
'false,true,false'
'false,true,false'
'false,true,false'
Error in experiment of cora->imdb
Error in experiment of cora->imdb
Error in experiment of cora->imdb
Error in experiment of cora->imdb
Error in experiment of cora->imdb
