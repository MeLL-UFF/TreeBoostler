usePrologVariables: true.

% maxTreeDepthInNodes                 = 6
% maxTreeDepthInLiterals              = 12
% maxNumberOfLiteralsAtAnInteriorNode = 1
% maxFreeBridgersInBody               = 1
% maxNumberOfClauses                  = 8
% maxNodesToConsider                  = 10
% maxNodesToCreate                    = 10.000
% maxAcceptableNodeScoreToStop        = 0,003
% negPosRatio                         = 2,000
% testNegPosRatio                     = -1,000
% # of pos examples                   = 1.035
% # of neg examples                   = 0



%%%%%  WILL-Produced Tree #1 @ 23:53:32 4/24/18.  [Using 46.957.416 memory cells.]  %%%%%

% FOR athleteplaysforteam(A, B):
%   if ( teamalsoknownas(B, C) )
%   then if ( athleteledsportsteam(A, B) )
%   | then return 0.8581489350995115;  // std dev = 2,60e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( teamplaysagainstteam(B, C) )
%   | | then if ( athleteledsportsteam(A, D) )
%   | | | then if ( athleteplayssport(A, E) )
%   | | | | then return 0.41912454485560896;  // std dev = 0,496, 41,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.5488705845840446;  // std dev = 0,462, 291,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=201 */
%   | | else return 0.11621345122854462;  // std dev = 0,438, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   else if ( teamplayssport(B, F) )
%   | then if ( athleteplayssport(A, F) )
%   | | then return 0.6304261628222838;  // std dev = 0,419, 101,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=78 */
%   | | else if ( athleteledsportsteam(A, B) )
%   | | | then return 0.7993254056877476;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.1822868661339908;  // std dev = 0,468, 435,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=141 */
%   | else return 0.032061978577773244;  // std dev = 0,379, 69,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */


% Clauses:

athleteplaysforteam(A, B, 0.8581489350995115) :- 
     teamalsoknownas(B, C), 
     athleteledsportsteam(A, B), 
     !. // Clause #1.

athleteplaysforteam(A, B, 0.41912454485560896) :- 
     teamalsoknownas(B, C), 
     teamplaysagainstteam(B, C), 
     athleteledsportsteam(A, D), 
     athleteplayssport(A, E), 
     !. // Clause #2.

athleteplaysforteam(A, B, -0.1418510649004878) :- 
     teamalsoknownas(B, C), 
     teamplaysagainstteam(B, C), 
     athleteledsportsteam(A, D), 
     !. // Clause #3.

athleteplaysforteam(A, B, 0.5488705845840446) :- 
     teamalsoknownas(B, C), 
     teamplaysagainstteam(B, C), 
     !. // Clause #4.

athleteplaysforteam(A, B, 0.11621345122854462) :- 
     teamalsoknownas(B, C), 
     !. // Clause #5.

athleteplaysforteam(A, B, 0.6304261628222838) :- 
     teamplayssport(B, C), 
     athleteplayssport(A, C), 
     !. // Clause #6.

athleteplaysforteam(A, B, 0.7993254056877476) :- 
     teamplayssport(B, C), 
     athleteledsportsteam(A, B), 
     !. // Clause #7.

athleteplaysforteam(A, B, 0.1822868661339908) :- 
     teamplayssport(B, C), 
     !. // Clause #8.

athleteplaysforteam(A, B, 0.032061978577773244) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_athleteplaysforteam(a, b, 0.8581489350995115) :-  /* #pos=38 */ 
   teamalsoknownas(b, underscore),
   athleteledsportsteam(a, b),
   !. // Flattened version of clause #1.

flattened_athleteplaysforteam(a, b, 0.41912454485560896) :-  /* #neg=18 #pos=23 */ 
   teamalsoknownas(b, uniqueVar1),
   teamplaysagainstteam(b, uniqueVar1),
   athleteledsportsteam(a, underscore),
   athleteplayssport(a, underscore),
   !. // Flattened version of clause #2.

flattened_athleteplaysforteam(a, b, -0.1418510649004878) :-  /* #neg=12 */ 
   teamalsoknownas(b, uniqueVar2),
   teamplaysagainstteam(b, uniqueVar2),
   athleteledsportsteam(a, underscore),
   !. // Flattened version of clause #3.

flattened_athleteplaysforteam(underscore, a, 0.5488705845840446) :-  /* #neg=90 #pos=201 */ 
   teamalsoknownas(a, uniqueVar3),
   teamplaysagainstteam(a, uniqueVar3),
   !. // Flattened version of clause #4.

flattened_athleteplaysforteam(underscore, a, 0.11621345122854462) :-  /* #neg=23 #pos=8 */ 
   teamalsoknownas(a, underscore),
   !. // Flattened version of clause #5.

flattened_athleteplaysforteam(a, b, 0.6304261628222838) :-  /* #neg=23 #pos=78 */ 
   teamplayssport(b, uniqueVar4),
   athleteplayssport(a, uniqueVar4),
   !. // Flattened version of clause #6.

flattened_athleteplaysforteam(a, b, 0.7993254056877476) :-  /* #neg=1 #pos=16 */ 
   teamplayssport(b, underscore),
   athleteledsportsteam(a, b),
   !. // Flattened version of clause #7.

flattened_athleteplaysforteam(underscore, a, 0.1822868661339908) :-  /* #neg=294 #pos=141 */ 
   teamplayssport(a, underscore),
   !. // Flattened version of clause #8.

flattened_athleteplaysforteam(underscore, underscore, 0.032061978577773244) :-  /* #neg=57 #pos=12 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   athleteledsportsteam(a, underscore)
%   teamplaysagainstteam(b, uniqueVar2)
%   teamalsoknownas(b, underscore)
%   teamplayssport(b, uniqueVar4)
%   teamplayssport(b, underscore)
%   teamplaysagainstteam(a, uniqueVar3)
%   teamplaysagainstteam(b, uniqueVar1)
%   teamalsoknownas(a, uniqueVar3)
%   teamalsoknownas(b, uniqueVar1)
%   athleteplayssport(a, uniqueVar4)
%   teamalsoknownas(a, underscore)
%   athleteledsportsteam(a, b)
%   athleteplayssport(a, underscore)
%   teamplayssport(a, underscore)
%   teamalsoknownas(b, uniqueVar2)


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for athleteplaysforteam.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).

logPrior(-1.8).
athleteplaysforteam(D, E, Total) :- // A general accessor. 
   athleteplaysforteam(D, E, 1000000, Total), !.
athleteplaysforteam(D, E, Total) :- waitHere("This should not fail", athleteplaysforteam(D, E, Total)).

athleteplaysforteam(D, E, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_athleteplaysforteam_tree1(D, E, TreesToUse, Total1),
   Total is LogPrior + Total1,
   !.
athleteplaysforteam(D, E, TreesToUse, Total) :- waitHere("This should not fail", athleteplaysforteam(D, E, TreesToUse, Total)).

getScore_athleteplaysforteam_tree1(D, E, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_athleteplaysforteam_tree1(D, E, TreesToUse, Total1) :- athleteplaysforteam_tree1(D, E, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(athleteplaysforteam, 15, [
   athleteledsportsteam(a, underscore),
   teamplaysagainstteam(b, uniqueVar2),
   teamalsoknownas(b, underscore),
   teamplayssport(b, uniqueVar4),
   teamplayssport(b, underscore),
   teamplaysagainstteam(a, uniqueVar3),
   teamplaysagainstteam(b, uniqueVar1),
   teamalsoknownas(a, uniqueVar3),
   teamalsoknownas(b, uniqueVar1),
   athleteplayssport(a, uniqueVar4),
   teamalsoknownas(a, underscore),
   athleteledsportsteam(a, b),
   athleteplayssport(a, underscore),
   teamplayssport(a, underscore),
   teamalsoknownas(b, uniqueVar2)]).

%%%%%  WILL-Produced Tree Combined @ 23:53:33 4/24/18.  [Using 46.996.248 memory cells.]  %%%%%

% FOR athleteplaysforteam(A, B):
%   if ( teamalsoknownas(B, C) )
%   then if ( athleteledsportsteam(A, B) )
%   | then return 0.8581489350995115;  // std dev = 2,60e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( teamplaysagainstteam(B, C) )
%   | | then if ( athleteledsportsteam(A, D) )
%   | | | then if ( athleteplayssport(A, E) )
%   | | | | then return 0.41912454485560896;  // std dev = 0,496, 41,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.5488705845840446;  // std dev = 0,462, 291,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=201 */
%   | | else return 0.11621345122854462;  // std dev = 0,438, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   else if ( athleteledsportsteam(A, B) )
%   | then return 0.8303711573217337;  // std dev = 0,164, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else if ( teamplayssport(B, F) )
%   | | then if ( athleteplayssport(A, F) )
%   | | | then return 0.5776611302214641;  // std dev = 0,449, 82,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=59 */
%   | | | else return 0.1822868661339908;  // std dev = 0,468, 435,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=141 */
%   | | else return 0.032061978577773244;  // std dev = 0,379, 69,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */


% Clauses:

athleteplaysforteam(A, B, 0.8581489350995115) :- 
     teamalsoknownas(B, C), 
     athleteledsportsteam(A, B), 
     !. // Clause #1.

athleteplaysforteam(A, B, 0.41912454485560896) :- 
     teamalsoknownas(B, C), 
     teamplaysagainstteam(B, C), 
     athleteledsportsteam(A, D), 
     athleteplayssport(A, E), 
     !. // Clause #2.

athleteplaysforteam(A, B, -0.1418510649004878) :- 
     teamalsoknownas(B, C), 
     teamplaysagainstteam(B, C), 
     athleteledsportsteam(A, D), 
     !. // Clause #3.

athleteplaysforteam(A, B, 0.5488705845840446) :- 
     teamalsoknownas(B, C), 
     teamplaysagainstteam(B, C), 
     !. // Clause #4.

athleteplaysforteam(A, B, 0.11621345122854462) :- 
     teamalsoknownas(B, C), 
     !. // Clause #5.

athleteplaysforteam(A, B, 0.8303711573217337) :- 
     athleteledsportsteam(A, B), 
     !. // Clause #6.

athleteplaysforteam(A, B, 0.5776611302214641) :- 
     teamplayssport(B, C), 
     athleteplayssport(A, C), 
     !. // Clause #7.

athleteplaysforteam(A, B, 0.1822868661339908) :- 
     teamplayssport(B, C), 
     !. // Clause #8.

athleteplaysforteam(A, B, 0.032061978577773244) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_athleteplaysforteam(a, b, 0.8581489350995115) :-  /* #pos=38 */ 
   teamalsoknownas(b, underscore),
   athleteledsportsteam(a, b),
   !. // Flattened version of clause #1.

flattened_athleteplaysforteam(a, b, 0.41912454485560896) :-  /* #neg=18 #pos=23 */ 
   teamalsoknownas(b, uniqueVar5),
   teamplaysagainstteam(b, uniqueVar5),
   athleteledsportsteam(a, underscore),
   athleteplayssport(a, underscore),
   !. // Flattened version of clause #2.

flattened_athleteplaysforteam(a, b, -0.1418510649004878) :-  /* #neg=12 */ 
   teamalsoknownas(b, uniqueVar6),
   teamplaysagainstteam(b, uniqueVar6),
   athleteledsportsteam(a, underscore),
   !. // Flattened version of clause #3.

flattened_athleteplaysforteam(underscore, a, 0.5488705845840446) :-  /* #neg=90 #pos=201 */ 
   teamalsoknownas(a, uniqueVar7),
   teamplaysagainstteam(a, uniqueVar7),
   !. // Flattened version of clause #4.

flattened_athleteplaysforteam(underscore, a, 0.11621345122854462) :-  /* #neg=23 #pos=8 */ 
   teamalsoknownas(a, underscore),
   !. // Flattened version of clause #5.

flattened_athleteplaysforteam(a, b, 0.8303711573217337) :-  /* #neg=1 #pos=35 */ 
   athleteledsportsteam(a, b),
   !. // Flattened version of clause #6.

flattened_athleteplaysforteam(a, b, 0.5776611302214641) :-  /* #neg=23 #pos=59 */ 
   teamplayssport(b, uniqueVar8),
   athleteplayssport(a, uniqueVar8),
   !. // Flattened version of clause #7.

flattened_athleteplaysforteam(underscore, a, 0.1822868661339908) :-  /* #neg=294 #pos=141 */ 
   teamplayssport(a, underscore),
   !. // Flattened version of clause #8.

flattened_athleteplaysforteam(underscore, underscore, 0.032061978577773244) :-  /* #neg=57 #pos=12 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   athleteledsportsteam(a, underscore)
%   athleteplayssport(a, uniqueVar8)
%   teamplaysagainstteam(b, uniqueVar6)
%   teamalsoknownas(b, uniqueVar6)
%   teamalsoknownas(b, underscore)
%   teamalsoknownas(a, uniqueVar7)
%   teamplaysagainstteam(b, uniqueVar5)
%   teamplaysagainstteam(a, uniqueVar7)
%   teamplayssport(b, uniqueVar8)
%   teamalsoknownas(b, uniqueVar5)
%   teamalsoknownas(a, underscore)
%   athleteledsportsteam(a, b)
%   athleteplayssport(a, underscore)
%   teamplayssport(a, underscore)
