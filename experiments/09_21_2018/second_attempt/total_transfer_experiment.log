WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995096;  // std dev = 1,07e-06, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.8351074604451312;  // std dev = 0,150, 217,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=212 */
%   else return -0.14185106490048757;  // std dev = 2,21e-07, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109565;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.7010588282873556;  // std dev = 0,150, 217,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=212 */
%   else return -0.1254446385283921;  // std dev = 0,000, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,72e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.542536993671716;  // std dev = 0,150, 217,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=212 */
%   else return -0.1123163781936065;  // std dev = 0,000, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830936;  // std dev = 4,13e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else if ( director(A) )
%   | | then return -0.5692282877172788;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.4307717122827202;  // std dev = 2,23e-07, 212,000 (wgt'ed) examples reached here.  /* #pos=212 */
%   else return -0.10159632948783633;  // std dev = 9,19e-08, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601492;  // std dev = 3,82e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.312258862170166;  // std dev = 0,114, 217,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=212 */
%   else return -0.09269127618926049;  // std dev = 2,04e-07, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694907;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.24694503302661427;  // std dev = 0,116, 217,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=212 */
%   else return -0.08518475138839678;  // std dev = 1,17e-07, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253512;  // std dev = 2,76e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.20136708191958003;  // std dev = 0,118, 217,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=212 */
%   else return -0.07877675473109144;  // std dev = 7,30e-08, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18255695668029143;  // std dev = 0,096, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( actor(B) )
%   | then return -0.07324622576333711;  // std dev = 7,45e-08, 347,000 (wgt'ed) examples reached here.  /* #neg=347 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.6153946372427623;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1568773168839753;  // std dev = 0,085, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( director(A), movie(D, B), movie(D, A) )
%   | then if ( director(B) )
%   | | then return -0.4637266710706703;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06842697784420305;  // std dev = 0,000, 349,000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.13289756822017884;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.12934217319016464;  // std dev = 0,074, 217,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=212 */
%   else return -0.0641918400820258;  // std dev = 1,58e-07, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */


Predicates from source: ['workedunder(person,person).', 'director(person).', 'actor(person).', 'female(person).', 'movie(movie,person).'] 

Source structured tree: [['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.21e-07, 377, 0], 'true,false': [0.15, 5, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 377, 0], 'true,false': [0.15, 5, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 377, 0], 'true,false': [0.15, 5, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)', 'true,false': 'director(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [9.19e-08, 377, 0], 'true,false,true': [0.0, 5, 0], 'true,false,false': [2.23e-07, 0, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.04e-07, 377, 0], 'true,false': [0.114, 5, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 377, 0], 'true,false': [0.116, 5, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [7.3e-08, 377, 0], 'true,false': [0.118, 5, 212]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'false': 'actor(B)', 'false,false': 'movie(D, A), movie(D, B)'}, {'false,false,true': [1.49e-08, 5, 0], 'true,true': [0.096, 0, 382], 'true,false': [0.0, 23, 0], 'false,false,false': [2.63e-09, 7, 0], 'false,true': [7.45e-08, 347, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'false': 'director(A), movie(D, B), movie(D, A)', 'false,true': 'director(B)'}, {'false,true,true': [0.0, 5, 0], 'true,true': [0.085, 0, 382], 'false,false': [0.0, 349, 0], 'true,false': [0.0, 23, 0], 'false,true,false': [1.86e-09, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.58e-07, 377, 0], 'true,false': [0.074, 5, 212]}]] 



Best mapping found: ['female(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.21e-07, 377, 0], 'true,false': [0.15, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 377, 0], 'true,false': [0.15, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 377, 0], 'true,false': [0.15, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)', 'true,false': 'professor(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [9.19e-08, 377, 0], 'true,false,true': [0.0, 5, 0], 'true,false,false': [2.23e-07, 0, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.04e-07, 377, 0], 'true,false': [0.114, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 377, 0], 'true,false': [0.116, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [7.3e-08, 377, 0], 'true,false': [0.118, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [2.63e-09, 7, 0], 'true,true': [0.096, 0, 382], 'true,false': [0.0, 23, 0], 'false,false,true': [1.49e-08, 5, 0], 'false,true': [7.45e-08, 347, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)', 'false': 'professor(A), publication(D, B), publication(D, A)', 'false,true': 'professor(B)'}, {'false,true,true': [0.0, 5, 0], 'true,true': [0.085, 0, 382], 'false,false': [0.0, 349, 0], 'true,false': [0.0, 23, 0], 'false,true,false': [1.86e-09, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.58e-07, 377, 0], 'true,false': [0.074, 5, 212]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;true', '3;true,false;professor(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B).;true;false', '7;true;publication(C, A), publication(C, B).;false;false', '8;;advisedby(A, B) :- professor(B).;true;true', '8;true;publication(C, A), publication(C, B).;false;false', '8;false;professor(A), publication(D, B), publication(D, A).;true;false', '8;false,true;professor(B).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '9;true;student(A).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.30259337954395665;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.26163180867521246;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.2192721473492705;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( professor(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.17873524574687283;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.1424392447767628;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.1115955999963299;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.08637026299843605;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.12702795304355446;  // std dev = 0,224, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.16729381000135526;  // std dev = 2,335, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   else return -0.3781607354531902;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1109992430475717;  // std dev = 0,216, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.12723058953007932;  // std dev = 2,335, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   else if ( professor(A), publication(D, B), publication(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.2941063719573981;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.14502434503714257;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.0911367102174662;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.03434034561358861;  // std dev = 2,430, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
Results
   AUC ROC   = 0.666667
   AUC PR    = 0.77381
   CLL	      = -0.589353
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.333333
   F1        = 0.5


Total learning time: 5.205 seconds
Total inference time: 0.412 seconds
AUC ROC: 0.666667


Results in test set
   AUC ROC   = 0.666667
   AUC PR    = 0.77381
   CLL	      = -0.589353
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.333333
   F1        = 0.5


Total inference time: 0.412 seconds
AUC ROC: 0.666667
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 4], 'false': [2.582, 15, 12], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 4], 'false': [2.582, 15, 12], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 4], 'false': [2.582, 15, 12], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)', 'true,false': 'professor(A)'}, {'true,true': [0.0, 0, 4], 'false': [2.582, 15, 12], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 4], 'false': [2.582, 15, 12], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 4], 'false': [2.582, 15, 12], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 4], 'false': [2.582, 15, 12], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.224, 1, 4], 'false': [0.0, 5, 0], 'true,false': [2.335, 10, 12]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)', 'false': 'professor(A), publication(D, B), publication(D, A)'}, {'true,true': [0.216, 1, 4], 'false,false': [0.0, 5, 0], 'true,false': [2.335, 10, 12], 'false,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 4], 'false': [2.43, 15, 12], 'true,false': [0.0, 1, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B).;false;false', '8;;advisedby(A, B) :- professor(B).;true;false', '8;true;publication(C, A), publication(C, B).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '9;true;student(A).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0.5555555555555556)]
Tree #2: [('false', 0.5555555555555556)]
Tree #3: [('false', 0.5555555555555556)]
Tree #4: [('true,false,false', 0), ('false', 0.5555555555555556)]
Tree #5: [('false', 0.5555555555555556)]
Tree #6: [('false', 0.5555555555555556)]
Tree #7: [('false', 0.5555555555555556)]
Tree #8: [('true,false', 0.5454545454545454), ('true,true', 0.8)]
Tree #9: [('false,true', 0), ('true,false', 0.5454545454545454), ('true,true', 0.8)]
Tree #10: [('false', 0.5555555555555556)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A), hasposition(B, D) )
%   | then if ( projectmember(E, B) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.41370449065506787;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( professor(B), student(A) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(D, A) )
%   | then return -0.17661068062858218;  // std dev = 0,103, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( professor(B), student(A) )
%   | | then if ( projectmember(E, B) )
%   | | | then return 0.7580193346218546;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tempadvisedby(F, B) )
%   | | | | then return 0.5142858980016577;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | else return 0.4022595602377965;  // std dev = 1,087, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(D, A) )
%   | then return -0.15263935021366812;  // std dev = 0,092, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( professor(B), student(A) )
%   | | then if ( projectmember(E, B) )
%   | | | then return 0.5947969362557473;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tempadvisedby(F, B) )
%   | | | | then return 0.41944939847775087;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | else return 0.33106684118102125;  // std dev = 1,086, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.15052962210762166;  // std dev = 2,011, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(D, A) )
%   | then return -0.15236964192834376;  // std dev = 0,092, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( professor(B), student(A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then if ( projectmember(F, B) )
%   | | | | then return 0.41059775843852586;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.28922455069044073;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.2274145544216135;  // std dev = 1,085, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.1161831061641716;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(D, A) )
%   | then return -0.13389686516717642;  // std dev = 0,082, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( professor(B), student(A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then if ( projectmember(F, B) )
%   | | | | then return 0.31602661171441326;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.21748718055075117;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.17325704435617773;  // std dev = 1,084, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.10477446759308502;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(D, A) )
%   | then return -0.11924619998597219;  // std dev = 0,075, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( professor(B), student(A) )
%   | | then if ( projectmember(E, B) )
%   | | | then return 0.25197261105276036;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tempadvisedby(F, B) )
%   | | | | then return 0.1632933294683187;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | else return 0.13071707193560805;  // std dev = 1,084, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.0953460117672865;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.08007988195177322;  // std dev = 1,722, 27,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   else return -0.0847565093609644;  // std dev = 0,012, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.11680674691045718;  // std dev = 0,219, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.05426005821718019;  // std dev = 1,698, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   else return -0.07841108973916605;  // std dev = 0,011, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.15020031730188343;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08778584084112187;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(D, A) )
%   | then return -0.11746070422456469;  // std dev = 0,087, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( hasposition(B, E), student(A) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.18626994424271104;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then return 0.09128264246425562;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | else return 0.09849383070004951;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( professor(A) )
%   | | | then return -0.0830947798601879;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.030265848719868066;  // std dev = 0,713, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
Results
   AUC ROC   = 0.666667
   AUC PR    = 0.766667
   CLL	      = -0.550769
   Precision = 0.6 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.75


Total learning time: 8.056 seconds
Total inference time: 0.451 seconds
AUC ROC: 0.666667


Best model AUC ROC so far: 0.666667


******************************************
Best model found
******************************************
Total revision time: 14.123999999999999
Best validation AUC ROC: 0.666667


Results
   AUC ROC   = 0.908571
   AUC PR    = 0.877722
   CLL	      = -0.466807
   Precision = 0.933333 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.56


Total inference time: 0.557 seconds
AUC ROC: 0.908571
Dataset: imdb,uwcse, Run: 1, Fold: 1, Type: transfer, Total folds for small set: 1, Time: 00:00:28
{'CLL': -0.466807, 'Recall': 0.4, 'Learning time': 14.123999999999999, 'Precision': [0.933333, 0.5], 'Mapping Results': {'Possible mappings': 1080, 'Total time': 2.5056519508361816, 'Generating mappings time': 0.06710672378540039, 'Finding best mapping': 0.13381075859069824, 'Generating paths time': 2.2940380573272705, 'Knowledge compiling time': 0.010689258575439453}, 'Parameter Learning Results': {'CLL': -0.466807, 'Recall': 0.4, 'Precision': [0.933333, 0.5], 'AUC ROC': 0.908571, 'F1': 0.56, 'AUC PR': 0.877722}, 'AUC ROC': 0.908571, 'F1': 0.56, 'AUC PR': 0.877722, 'Inference time': 0.557}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then return 0.5724346493852266;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( professor(B), student(A) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, A), publication(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( projectmember(E, B) )
%   | | then return 0.5504898020630853;  // std dev = 0,756, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.3514284344848953;  // std dev = 0,473, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( professor(B), student(A) )
%   | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, A), tempadvisedby(E, B) )
%   | then return 0.18804331568642593;  // std dev = 0,900, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( tempadvisedby(F, B) )
%   | | then if ( projectmember(G, B) )
%   | | | then return 0.5966103526172273;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4203067703780895;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.41061411892853833;  // std dev = 0,833, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( professor(B), student(A) )
%   | then return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11231637819360638;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.494706892472762;  // std dev = 0,048, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return -0.20998689241807125;  // std dev = 0,028, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.44886710872646707;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tempadvisedby(F, B) )
%   | | | | then return 0.32631022014141015;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | else return 0.2758811100837869;  // std dev = 1,080, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10159632948783633;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then return 0.3740742583896455;  // std dev = 0,044, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.17729796519997576;  // std dev = 0,024, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.3420625618005616;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.24662050586953982;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.21532519612816642;  // std dev = 1,081, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then return 0.29149917852486107;  // std dev = 0,039, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1529188363706586;  // std dev = 0,022, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.2696933857104714;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.18504397647601506;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.1654966306714933;  // std dev = 1,081, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.23521076288247283;  // std dev = 0,034, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return -0.1341589340765354;  // std dev = 0,019, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.21996469144154907;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tempadvisedby(F, B) )
%   | | | | then return 0.13931902663802548;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | else return 0.12629742466436364;  // std dev = 1,081, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07877675473109177;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( hasposition(B, C) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.19560632679108683;  // std dev = 0,029, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.12110683127105068;  // std dev = 0,284, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else if ( tempadvisedby(F, B) )
%   | | | | then return 0.05744332635391388;  // std dev = 0,409, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | | else return 0.07599911363002458;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.0436348102833263;  // std dev = 0,736, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07324622576333704;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then return 0.16668006214552203;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1270714616594127;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.04446425010149339;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.05775856198893629;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.23727477946763187;  // std dev = 0,172, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1415829780991789;  // std dev = 0,709, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.14481830913536672;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return -0.11364770644125723;  // std dev = 0,022, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.1423931374469068;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tempadvisedby(F, B) )
%   | | | | then return 0.07546599266362831;  // std dev = 0,448, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | else return 0.05932217393766807;  // std dev = 1,081, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
Results
   AUC ROC   = 0.92898
   AUC PR    = 0.856744
   CLL	      = -0.414026
   Precision = 0.852941 at threshold = 0.5
   Recall    = 0.828571
   F1        = 0.84058


Total learning time: 7.145 seconds
Total inference time: 0.623 seconds
AUC ROC: 0.92898


Dataset: imdb,uwcse, Run: 1, Fold: 1, Type: scratch, Total folds for small set: 1, Time: 00:00:36
{'CLL': -0.414026, 'Recall': 0.828571, 'Learning time': 7.145, 'Precision': [0.852941, 0.5], 'AUC ROC': 0.92898, 'F1': 0.84058, 'AUC PR': 0.856744, 'Inference time': 0.623}


Best mapping found: ['female(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.21e-07, 377, 0], 'true,false': [0.15, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 377, 0], 'true,false': [0.15, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 377, 0], 'true,false': [0.15, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)', 'true,false': 'professor(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [9.19e-08, 377, 0], 'true,false,true': [0.0, 5, 0], 'true,false,false': [2.23e-07, 0, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.04e-07, 377, 0], 'true,false': [0.114, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 377, 0], 'true,false': [0.116, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [7.3e-08, 377, 0], 'true,false': [0.118, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [2.63e-09, 7, 0], 'true,true': [0.096, 0, 382], 'true,false': [0.0, 23, 0], 'false,false,true': [1.49e-08, 5, 0], 'false,true': [7.45e-08, 347, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)', 'false': 'professor(A), publication(D, B), publication(D, A)', 'false,true': 'professor(B)'}, {'false,true,true': [0.0, 5, 0], 'true,true': [0.085, 0, 382], 'false,false': [0.0, 349, 0], 'true,false': [0.0, 23, 0], 'false,true,false': [1.86e-09, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.58e-07, 377, 0], 'true,false': [0.074, 5, 212]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;true', '3;true,false;professor(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B).;true;false', '7;true;publication(C, A), publication(C, B).;false;false', '8;;advisedby(A, B) :- professor(B).;true;true', '8;true;publication(C, A), publication(C, B).;false;false', '8;false;professor(A), publication(D, B), publication(D, A).;true;false', '8;false,true;professor(B).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '9;true;student(A).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8025933795439567;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.2632122262387525;  // std dev = 4,363, 79,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=32 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.6749928282743806;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.2280605678993043;  // std dev = 4,363, 79,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=32 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5243568433454531;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.19236338456070787;  // std dev = 4,363, 79,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=32 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.3941295564832444;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( professor(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.15837691103567184;  // std dev = 4,363, 79,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=32 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.29968717683406026;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.12778186117797005;  // std dev = 4,363, 79,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=32 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.2343670862132291;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.10146157576868241;  // std dev = 4,363, 79,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=32 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.18858213257239667;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.07959276704870791;  // std dev = 4,363, 79,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=32 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1434395098979433;  // std dev = 0,997, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else return 0.41872381266432673;  // std dev = 2,760, 42,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=32 */
%   else return -0.3431809492404353;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.12120535686896995;  // std dev = 0,994, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else return 0.3192579382636456;  // std dev = 2,760, 42,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=32 */
%   else if ( professor(A), publication(D, B), publication(D, A) )
%   | then if ( professor(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.2704517781092467;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.27045177810924675;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.11476546099121594;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.09336559881998048;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.02417174371204916;  // std dev = 3,433, 79,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=32 */
Results
   AUC ROC   = 0.950617
   AUC PR    = 0.949919
   CLL	      = -0.370954
   Precision = 0.818182 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9


Total learning time: 13.195 seconds
Total inference time: 0.461 seconds
AUC ROC: 0.950617


Results in test set
   AUC ROC   = 0.950617
   AUC PR    = 0.949919
   CLL	      = -0.370954
   Precision = 0.818182 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9


Total inference time: 0.461 seconds
AUC ROC: 0.950617
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.972, 1, 17], 'false': [4.363, 47, 32], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.972, 1, 17], 'false': [4.363, 47, 32], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.972, 1, 17], 'false': [4.363, 47, 32], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)', 'true,false': 'professor(A)'}, {'true,true': [0.972, 1, 17], 'false': [4.363, 47, 32], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.972, 1, 17], 'false': [4.363, 47, 32], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.972, 1, 17], 'false': [4.363, 47, 32], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.972, 1, 17], 'false': [4.363, 47, 32], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.997, 2, 17], 'false': [0.0, 37, 0], 'true,false': [2.76, 10, 32]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)', 'false': 'professor(A), publication(D, B), publication(D, A)', 'false,true': 'professor(B)'}, {'false,true,true': [0.0, 0, 0], 'true,true': [0.994, 2, 17], 'false,false': [0.0, 36, 0], 'true,false': [2.76, 10, 32], 'false,true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.972, 1, 17], 'false': [3.433, 47, 32], 'true,false': [0.0, 1, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B).;false;false', '8;;advisedby(A, B) :- professor(B).;true;true', '8;true;publication(C, A), publication(C, B).;false;false', '8;false;professor(A), publication(D, B), publication(D, A).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '9;true;student(A).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0.5949367088607594), ('true,true', 0.9444444444444444)]
Tree #2: [('false', 0.5949367088607594), ('true,true', 0.9444444444444444)]
Tree #3: [('false', 0.5949367088607594), ('true,true', 0.9444444444444444)]
Tree #4: [('true,false,false', 0), ('false', 0.5949367088607594), ('true,true', 0.9444444444444444)]
Tree #5: [('false', 0.5949367088607594), ('true,true', 0.9444444444444444)]
Tree #6: [('false', 0.5949367088607594), ('true,true', 0.9444444444444444)]
Tree #7: [('false', 0.5949367088607594), ('true,true', 0.9444444444444444)]
Tree #8: [('true,false', 0.7619047619047619), ('true,true', 0.8947368421052632)]
Tree #9: [('false,true,true', 0), ('true,false', 0.7619047619047619), ('true,true', 0.8947368421052632)]
Tree #10: [('false', 0.5949367088607594), ('true,true', 0.9444444444444444)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8025933795439567;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), student(E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.7914822684328456;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( inphase(A, I), inphase(E, I) )
%   | | | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | else return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14185106490048768;  // std dev = 3,94e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.6749928282743806;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.36648013093366655;  // std dev = 0,991, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then if ( projectmember(G, B) )
%   | | | | then return 0.7261016894777689;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.65698027405621;  // std dev = 0,280, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( hasposition(B, J), hasposition(K, J), tempadvisedby(L, K) )
%   | | | | | then return 0.49333575498406007;  // std dev = 0,443, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | | | else return 0.5723417176256642;  // std dev = 0,841, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5243568433454531;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(E, A) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.20966419123134197;  // std dev = 0,891, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.44329211025583404;  // std dev = 0,863, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(G, B), inphase(G, H), inphase(A, H) )
%   | | | then return 0.24256993614325198;  // std dev = 0,803, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( tempadvisedby(I, B) )
%   | | | | then return 0.5946250951479554;  // std dev = 0,135, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | | else if ( hasposition(B, J), hasposition(K, J), tempadvisedby(L, K) )
%   | | | | | then return 0.3648791950737821;  // std dev = 0,454, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | | else return 0.45842118699580203;  // std dev = 0,826, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.3941295564832444;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.11949411999671893;  // std dev = 3,013, 79,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=32 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.279035679306517;  // std dev = 0,240, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), student(E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then if ( yearsinprogram(E, G), yearsinprogram(A, G) )
%   | | | | then return 0.46302723557808295;  // std dev = 0,072, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | else return 0.2751638196343606;  // std dev = 0,318, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else if ( inphase(A, H), inphase(E, H) )
%   | | | | then if ( publication(I, A) )
%   | | | | | then return 0.22861222903754774;  // std dev = 0,812, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.1738252241128763;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return 0.3958129134508148;  // std dev = 0,329, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.027092265031555172;  // std dev = 0,995, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.438716256803451;  // std dev = 0,071, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1130340030160921;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.23863693104948044;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.1189749877955078;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), student(E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.286958758651911;  // std dev = 0,235, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | | then return 0.1616210782975922;  // std dev = 0,800, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( publication(D, I), tempadvisedby(J, I), publication(K, J) )
%   | | | | | then return 0.18179088015113448;  // std dev = 0,446, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | | else return 0.29903992769694987;  // std dev = 0,854, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(L, A) )
%   | | | then return -0.08412820633048497;  // std dev = 0,543, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.28316935461791465;  // std dev = 0,805, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.10218749297600291;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1758979749131204;  // std dev = 0,233, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(E, A), publication(D, F), student(F) )
%   | | | then return 0.26689633521721845;  // std dev = 0,877, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else if ( tempadvisedby(G, B), publication(D, H), student(H) )
%   | | | | then return 0.19941835887775403;  // std dev = 0,243, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | | else if ( tempadvisedby(I, B) )
%   | | | | | then return -0.037195933581836;  // std dev = 0,615, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else if ( hasposition(B, J), hasposition(K, J), tempadvisedby(L, K) )
%   | | | | | | then if ( publication(D, K), publication(M, L) )
%   | | | | | | | then return 0.08480505946960008;  // std dev = 1,131, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | | | else return 0.18148031708941165;  // std dev = 0,841, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | else return 0.16944048613486634;  // std dev = 0,767, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.29637347856695473;  // std dev = 0,108, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09318603413781766;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.1350704400547297;  // std dev = 2,416, 61,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=49 */
%   else return -0.085604488070179;  // std dev = 1,67e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.12368474251696253;  // std dev = 1,009, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else return 0.10348304263925405;  // std dev = 2,195, 42,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=32 */
%   else if ( professor(A), publication(D, B), publication(D, A) )
%   | then return -0.07913705584176742;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07913705584176743;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.10523586506856103;  // std dev = 0,231, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), publication(D, F), student(F) )
%   | | | then if ( yearsinprogram(F, G), yearsinprogram(A, G) )
%   | | | | then return 0.20844439104017687;  // std dev = 0,045, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | else return 0.06681694717421059;  // std dev = 0,327, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else if ( publication(H, A) )
%   | | | | then return -0.05427854121759956;  // std dev = 0,978, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | else if ( publication(D, I), inphase(I, J), inphase(A, J) )
%   | | | | | then return -0.02445903182698117;  // std dev = 1,088, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else if ( publication(D, K), student(K) )
%   | | | | | | then return 0.14099385640636178;  // std dev = 0,340, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | | | else return 0.08456834186791924;  // std dev = 0,815, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.19895161738380038;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07523351300856529;  // std dev = 0,007, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
Results
   AUC ROC   = 0.987654
   AUC PR    = 0.988272
   CLL	      = -0.260311
   Precision = 0.818182 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9


Total learning time: 17.468 seconds
Total inference time: 0.539 seconds
AUC ROC: 0.987654


Best model AUC ROC so far: 0.987654


Refining iteration 2
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '0;true;student(A).;false;false', '0;false,true,true,false,false;inphase(A, I), inphase(E, I).;false;false', '0;false,true,true,false;publication(G, A), publication(G, H), professor(H).;false;true', '0;false,true,true;tempadvisedby(F, B).;false;true', '0;false,true,false;publication(J, B).;true;false', '0;false;professor(B), student(A).;true;false', '0;false,true;publication(D, B), publication(D, E), student(E).;true;true', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '1;true;student(A).;false;false', '1;false,true,false,false,false;hasposition(B, J), hasposition(K, J), tempadvisedby(L, K).;false;false', '1;false,true,false,false;publication(H, A), publication(H, I), professor(I).;false;true', '1;false,true,false,true;projectmember(G, B).;false;false', '1;false,true,false;tempadvisedby(F, B).;true;true', '1;false;professor(B), student(A).;true;false', '1;false,true;publication(D, A), tempadvisedby(E, B).;true;true', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '2;true;student(A).;false;false', '2;false,true,false,false,false;hasposition(B, J), hasposition(K, J), tempadvisedby(L, K).;false;false', '2;false,true,false,false;tempadvisedby(I, B).;false;true', '2;false,true,false;tempadvisedby(G, B), inphase(G, H), inphase(A, H).;false;true', '2;false;professor(B), student(A).;true;false', '2;false,true;publication(D, B), publication(E, A).;false;true', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '4;false,true,true;tempadvisedby(F, B).;true;true', '4;false,true,true,false,true;publication(I, A).;false;false', '4;false,true,true,false;inphase(A, H), inphase(E, H).;true;false', '4;false,true,true,true;yearsinprogram(E, G), yearsinprogram(A, G).;false;false', '4;false;professor(B), student(A).;true;false', '4;false,true,false;publication(J, B).;true;false', '4;false,true;publication(D, B), publication(D, E), student(E).;true;true', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '5;true;student(A).;false;false', '5;false,true,true,false,false;publication(D, I), tempadvisedby(J, I), publication(K, J).;false;false', '5;false,true,true,false;publication(G, A), publication(G, H), professor(H).;false;true', '5;false,true,true;tempadvisedby(F, B).;false;true', '5;false;professor(B), student(A).;true;false', '5;false,true;publication(D, B), publication(D, E), student(E).;true;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '6;false,true,true;publication(E, A), publication(D, F), student(F).;false;true', '6;false,true,true,false,false;tempadvisedby(I, B).;true;true', '6;false,true,true,false;tempadvisedby(G, B), publication(D, H), student(H).;false;true', '6;false,true,true,false,false,false,true;publication(D, K), publication(M, L).;false;false', '6;false;professor(B), student(A).;true;false', '6;false,true,true,false,false,false;hasposition(B, J), hasposition(K, J), tempadvisedby(L, K).;true;false', '6;false,true;publication(D, B).;true;false', '7;;advisedby(A, B) :- professor(B).;true;false', '8;;advisedby(A, B) :- professor(B).;false;true', '8;false;professor(A), publication(D, B), publication(D, A).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '9;false,true,true;tempadvisedby(E, B), publication(D, F), student(F).;true;true', '9;false,true,true,false,false;publication(D, I), inphase(I, J), inphase(A, J).;false;true', '9;false,true,true,false;publication(H, A).;true;true', '9;false,true,true,true;yearsinprogram(F, G), yearsinprogram(A, G).;false;false', '9;false;professor(B), student(A).;true;false', '9;false,true,true,false,false,false;publication(D, K), student(K).;false;false', '9;false,true;publication(D, B).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,false,true', 0.6), ('false,true,true,false,false,true', 0.6666666666666666), ('false,true,true,false,true', 0.6666666666666666), ('false,true,true,false,false,false', 0.8571428571428571), ('false,true,true,true', 0.9333333333333333), ('true,true', 0.9444444444444444)]
Tree #2: [('false,true,true', 0.6), ('false,true,false,false,true', 0.6666666666666666), ('false,true,false,false,false,true', 0.7272727272727273), ('false,true,false,false,false,false', 0.8), ('false,true,false,true,false', 0.9166666666666666), ('true,true', 0.9444444444444444)]
Tree #3: [('false,true,true,true', 0.5), ('false,true,false,true', 0.6666666666666666), ('false,true,false,false,false,true', 0.7), ('false,true,true,false', 0.75), ('false,true,false,false,false,false', 0.8), ('true,true', 0.9444444444444444)]
Tree #4: [('false', 0.5949367088607594), ('true,true', 0.9444444444444444)]
Tree #5: [('false,true,false,true', 0.6), ('false,true,true,false,true,false', 0.6), ('false,true,true,false,true,true', 0.6666666666666666), ('false,true,true,true,false', 0.8571428571428571), ('false,true,true,false,false', 0.875), ('true', 0.8947368421052632)]
Tree #6: [('false,true,false,true', 0.6666666666666666), ('false,true,true,false,true', 0.6666666666666666), ('false,true,true,false,false,true', 0.7142857142857143), ('false,true,false,false', 0.8333333333333334), ('false,true,true,false,false,false', 0.8333333333333334), ('false,true,true,true', 0.9333333333333333), ('true,true', 0.9444444444444444)]
Tree #7: [('false,true,true,false,false,true', 0.6666666666666666), ('false,true,true,false,false,false,true,true', 0.6666666666666666), ('false,true,true,false,false,false,false', 0.75), ('false,true,true,false,false,false,true,false', 0.75), ('false,true,true,true', 0.8333333333333334), ('true', 0.8947368421052632), ('false,true,true,false,true', 0.9230769230769231)]
Tree #8: [('true', 0.8032786885245902)]
Tree #9: [('true,false', 0.7619047619047619), ('true,true', 0.8947368421052632)]
Tree #10: [('false,true,true,false,true', 0.5), ('false,true,true,false,false,true', 0.6), ('false,true,true,false,false,false,false', 0.6666666666666666), ('false,true,true,true,false', 0.8571428571428571), ('false,true,true,false,false,false,true', 0.8571428571428571), ('true', 0.8947368421052632)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8025933795439567;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), student(E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.7914822684328456;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( inphase(A, I), inphase(E, I) )
%   | | | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | else return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14185106490048768;  // std dev = 3,94e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.6749928282743806;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.36648013093366655;  // std dev = 0,991, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then if ( projectmember(G, B) )
%   | | | | then return 0.7261016894777689;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.65698027405621;  // std dev = 0,969, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( hasposition(B, J), hasposition(K, J), tempadvisedby(L, K) )
%   | | | | | then return 0.49333575498406007;  // std dev = 1,470, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | | | else return 0.5723417176256642;  // std dev = 0,841, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5243568433454531;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(E, A) )
%   | | then return 0.326478150743588;  // std dev = 1,284, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( tempadvisedby(F, B), inphase(F, G), inphase(A, G) )
%   | | | then return 0.24256993614325198;  // std dev = 0,803, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then return 0.5946250951479554;  // std dev = 0,135, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | | else if ( hasposition(B, I), hasposition(J, I), tempadvisedby(K, J) )
%   | | | | | then return 0.3648791950737821;  // std dev = 1,436, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | | else return 0.45842118699580203;  // std dev = 0,826, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.3941295564832444;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(E, A), tempadvisedby(F, B) )
%   | | then return 0.1392882517138596;  // std dev = 0,878, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(G, B), inphase(G, H), inphase(A, H) )
%   | | | then return 0.1825750583438862;  // std dev = 0,803, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( tempadvisedby(I, B) )
%   | | | | then return 0.4481801826674647;  // std dev = 0,146, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | | else if ( publication(J, A) )
%   | | | | | then return 0.3698957102591469;  // std dev = 0,863, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else if ( hasposition(B, K), hasposition(L, K), tempadvisedby(M, L) )
%   | | | | | | then return 0.27957016368965953;  // std dev = 0,454, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | | | else return 0.35097516881895235;  // std dev = 0,819, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.279035679306517;  // std dev = 1,044, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), student(E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then if ( yearsinprogram(E, G), yearsinprogram(A, G) )
%   | | | | then return 0.40478375188999594;  // std dev = 0,264, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | else return 0.20767633547189135;  // std dev = 0,784, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else if ( inphase(A, H), inphase(E, H) )
%   | | | | then if ( publication(I, A) )
%   | | | | | then return 0.1955068948130532;  // std dev = 0,812, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.13429588333982126;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return 0.35235242098413133;  // std dev = 0,930, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( publication(J, B) )
%   | | | then return -0.023777662142572507;  // std dev = 0,964, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.38227526329207834;  // std dev = 0,102, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.092691276189261;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.23863693104948044;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.1189749877955078;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), student(E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.24393428166811595;  // std dev = 0,878, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | | then return 0.1374274679330205;  // std dev = 0,801, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( publication(D, I), tempadvisedby(J, I), publication(K, J) )
%   | | | | | then return 0.1534436772995382;  // std dev = 1,183, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | | else return 0.26476560645310804;  // std dev = 0,852, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.12224019940285198;  // std dev = 1,077, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1758979749131204;  // std dev = 1,014, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(E, A), publication(D, F), student(F) )
%   | | | then return 0.2521426642129962;  // std dev = 0,881, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else if ( tempadvisedby(G, B), publication(D, H), student(H) )
%   | | | | then return 0.1663030561312094;  // std dev = 0,835, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | | else if ( tempadvisedby(I, B) )
%   | | | | | then return -0.08911595681726385;  // std dev = 0,643, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else if ( hasposition(B, J), hasposition(K, J), tempadvisedby(L, K) )
%   | | | | | | then if ( publication(D, K), publication(M, L) )
%   | | | | | | | then return 0.06336736438206862;  // std dev = 1,132, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | | | else return 0.16082965730747634;  // std dev = 0,842, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | else return 0.15077976711001456;  // std dev = 0,757, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.27303468247340545;  // std dev = 0,085, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( student(A) )
%   | then if ( tempadvisedby(C, B) )
%   | | then if ( publication(D, B), publication(D, E), student(E) )
%   | | | then if ( publication(F, A) )
%   | | | | then return 0.23290858491256694;  // std dev = 0,144, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | | else return 0.13735335184406983;  // std dev = 0,234, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.07619851125987648;  // std dev = 0,740, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | then if ( tempadvisedby(I, H) )
%   | | | | then return 0.11202357191533781;  // std dev = 0,824, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else return 0.01591321024628618;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else if ( hasposition(B, J), hasposition(K, J), tempadvisedby(L, K) )
%   | | | | then return 0.10506427696390369;  // std dev = 0,435, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | | else return 0.13931807973783567;  // std dev = 0,767, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.09052156704821902;  // std dev = 0,042, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.09991174966511203;  // std dev = 2,392, 61,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=49 */
%   else if ( professor(A), publication(C, B), publication(C, A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.10718660779479826;  // std dev = 0,981, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), publication(D, F), student(F) )
%   | | | then if ( yearsinprogram(F, G), yearsinprogram(A, G) )
%   | | | | then return 0.18810494393919694;  // std dev = 0,144, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | else return 0.045315049717951195;  // std dev = 0,823, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else if ( publication(H, A) )
%   | | | | then return -0.07214766988118078;  // std dev = 0,999, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | else if ( publication(D, I), inphase(I, J), inphase(A, J) )
%   | | | | | then return -0.03241634342286019;  // std dev = 1,088, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else if ( publication(D, K), student(K) )
%   | | | | | | then return 0.12939865641045228;  // std dev = 0,897, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | | | else return 0.08408858799036918;  // std dev = 0,815, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.19144869740403508;  // std dev = 0,067, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06468898688057402;  // std dev = 0,013, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
Results
   AUC ROC   = 0.987654
   AUC PR    = 0.988272
   CLL	      = -0.248156
   Precision = 0.818182 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9


Total learning time: 11.0 seconds
Total inference time: 0.552 seconds
AUC ROC: 0.987654


Best model AUC ROC so far: 0.987654


******************************************
Best model found
******************************************
Total revision time: 43.215
Best validation AUC ROC: 0.987654


Results
   AUC ROC   = 0.912653
   AUC PR    = 0.845036
   CLL	      = -0.280077
   Precision = 0.875 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.933333


Total inference time: 0.751 seconds
AUC ROC: 0.912653
Dataset: imdb,uwcse, Run: 1, Fold: 1, Type: transfer, Total folds for small set: 2, Time: 00:01:24
{'CLL': -0.280077, 'Recall': 1.0, 'Learning time': 43.215, 'Precision': [0.875, 0.5], 'Mapping Results': {'Possible mappings': 1080, 'Total time': 2.7403957843780518, 'Generating mappings time': 0.06898951530456543, 'Finding best mapping': 0.13308238983154297, 'Generating paths time': 2.522813081741333, 'Knowledge compiling time': 0.01550436019897461}, 'Parameter Learning Results': {'CLL': -0.432124, 'Recall': 1.0, 'Precision': [0.795455, 0.5], 'AUC ROC': 0.908571, 'F1': 0.886076, 'AUC PR': 0.877722}, 'AUC ROC': 0.912653, 'F1': 0.933333, 'AUC PR': 0.845036, 'Inference time': 0.751}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, E), tempadvisedby(F, E) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(H, A) )
%   | | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( publication(I, A), publication(I, B) )
%   | | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(J, A), publication(J, K), professor(K) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( hasposition(B, L), hasposition(M, L), tempadvisedby(N, M) )
%   | | | | then return 0.5854216623722396;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1418510649004877;  // std dev = 3,65e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, A), publication(E, F), tempadvisedby(G, F) )
%   | | | then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else if ( publication(H, A) )
%   | | | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( publication(I, A), publication(I, B) )
%   | | then return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( hasposition(B, J), hasposition(K, J), tempadvisedby(L, K) )
%   | | | then if ( publication(M, A) )
%   | | | | then return 0.5289987122992944;  // std dev = 0,863, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.4711080304712918;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839133;  // std dev = 2,11e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, C) )
%   | | then return 0.5676015395028731;  // std dev = 0,030, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(F, A), publication(F, G), tempadvisedby(H, G) )
%   | | | | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | | else return 0.4242194231159463;  // std dev = 0,366, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( publication(I, A), publication(I, B) )
%   | | then return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.425005976889617;  // std dev = 0,862, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( hasposition(B, K), hasposition(L, K), tempadvisedby(M, L) )
%   | | | | then return 0.37775425027576726;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1123163781936064;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, E), tempadvisedby(F, E) )
%   | | then return 0.4170562778606458;  // std dev = 0,004, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.06786927772284324;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( projectmember(H, B) )
%   | | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.4007742825295612;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( publication(I, A), publication(I, B) )
%   | | then return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(J, A), publication(J, K), professor(K) )
%   | | | then return 0.24627839601447202;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( hasposition(B, L), hasposition(M, L), tempadvisedby(N, M) )
%   | | | | then return 0.3153646843614845;  // std dev = 0,444, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | | else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.10159632948783634;  // std dev = 7,45e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), student(D) )
%   | then if ( tempadvisedby(E, B), publication(F, A) )
%   | | then return 0.35119313566767335;  // std dev = 0,107, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( inphase(D, G), inphase(A, G), tempadvisedby(H, B) )
%   | | | then return 0.3831966144678283;  // std dev = 0,031, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( inphase(D, I), inphase(A, I) )
%   | | | | then if ( publication(C, A) )
%   | | | | | then return 0.2697478132793615;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | | else if ( publication(J, A) )
%   | | | | | | then return 0.17457960809495235;  // std dev = 0,804, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return 0.11258518434852541;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return 0.30469909730411776;  // std dev = 0,342, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( publication(K, B) )
%   | | then return -0.0531000711799966;  // std dev = 0,893, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.35350088740074936;  // std dev = 0,113, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926105;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), student(D) )
%   | then if ( tempadvisedby(E, B), publication(F, A) )
%   | | then return 0.2796065895458883;  // std dev = 0,106, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( yearsinprogram(D, G), yearsinprogram(A, G), tempadvisedby(H, B) )
%   | | | then return 0.30035846984497633;  // std dev = 0,033, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( yearsinprogram(D, I), yearsinprogram(A, I) )
%   | | | | then if ( publication(C, J), tempadvisedby(K, J), publication(L, A) )
%   | | | | | then return 0.39306753182131393;  // std dev = 0,123, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return -0.10733557843557893;  // std dev = 1,123, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | else if ( tempadvisedby(M, B), inphase(D, N) )
%   | | | | | then return 0.06506071955987311;  // std dev = 0,861, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.2770660229027373;  // std dev = 0,328, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( publication(P, B) )
%   | | then return -0.04106798879957616;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.27840278341455404;  // std dev = 0,102, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0851847513883968;  // std dev = 2,11e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), inphase(C, D), inphase(A, D) )
%   | then return -0.0787664063612723;  // std dev = 0,755, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then if ( publication(F, B) )
%   | | | | then return 0.20051756980193458;  // std dev = 0,003, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | | else return 0.09198734556649911;  // std dev = 0,714, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.26009143267758084;  // std dev = 0,055, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(G, A), publication(G, B) )
%   | | | then return 0.1847025009740799;  // std dev = 0,335, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | | then return 0.0856967519268892;  // std dev = 0,715, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( hasposition(B, J), hasposition(K, J), tempadvisedby(L, K) )
%   | | | | | then return 0.1250322721774606;  // std dev = 0,426, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | | | else return 0.17712857126570847;  // std dev = 0,798, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109179;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), student(D) )
%   | then if ( tempadvisedby(E, B), publication(F, A) )
%   | | then return 0.20124814559427878;  // std dev = 0,103, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( inphase(D, G), inphase(A, G) )
%   | | | then if ( tempadvisedby(H, B) )
%   | | | | then return 0.20147856367499206;  // std dev = 0,045, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else if ( publication(C, A) )
%   | | | | | then return 0.14585750367814102;  // std dev = 0,336, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | | else if ( publication(I, A) )
%   | | | | | | then return 0.05372126348712177;  // std dev = 0,703, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return 0.0047725068976918195;  // std dev = 1,046, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.15168618883620544;  // std dev = 0,327, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( publication(J, B) )
%   | | then return -0.06883152016448583;  // std dev = 0,874, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.2076155013184194;  // std dev = 0,079, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 9,13e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), student(D) )
%   | then if ( publication(E, A), tempadvisedby(F, B) )
%   | | then return 0.1727025730258602;  // std dev = 0,096, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( yearsinprogram(D, G), yearsinprogram(A, G), tempadvisedby(H, B) )
%   | | | then return 0.17775842959176588;  // std dev = 0,075, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( inphase(D, I), tempadvisedby(J, B) )
%   | | | | then return -0.013778440369222461;  // std dev = 0,804, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else if ( yearsinprogram(D, K), yearsinprogram(A, K) )
%   | | | | | then if ( publication(C, L), tempadvisedby(M, L), publication(N, A) )
%   | | | | | | then return 0.25521595217961945;  // std dev = 0,136, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | else return -0.14218597221761362;  // std dev = 1,093, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | | else return 0.15926611812615896;  // std dev = 0,328, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( publication(P, A) )
%   | | then return -0.12427106104258201;  // std dev = 0,344, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.13479905100053755;  // std dev = 0,796, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420274;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), student(D) )
%   | then if ( publication(E, A), publication(C, F), tempadvisedby(G, F) )
%   | | then return 0.151332689008495;  // std dev = 0,172, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then if ( yearsinprogram(D, I), yearsinprogram(A, I) )
%   | | | | then return 0.15338518337165147;  // std dev = 0,067, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else return 0.05450330442440711;  // std dev = 0,313, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else if ( publication(J, A) )
%   | | | | then return -0.016605306541452498;  // std dev = 0,800, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( inphase(A, K), inphase(D, K) )
%   | | | | | then return -0.018822594273743044;  // std dev = 1,011, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return 0.11682628942113786;  // std dev = 0,344, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( publication(L, B) )
%   | | then return -0.06340522525634643;  // std dev = 0,850, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.16579236492323746;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06419184008202623;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
Results
   AUC ROC   = 0.942449
   AUC PR    = 0.93118
   CLL	      = -0.264261
   Precision = 0.871795 at threshold = 0.5
   Recall    = 0.971429
   F1        = 0.918919


Total learning time: 24.09 seconds
Total inference time: 1.023 seconds
AUC ROC: 0.942449


Dataset: imdb,uwcse, Run: 1, Fold: 1, Type: scratch, Total folds for small set: 2, Time: 00:01:50
{'CLL': -0.264261, 'Recall': 0.971429, 'Learning time': 24.09, 'Precision': [0.871795, 0.5], 'AUC ROC': 0.942449, 'F1': 0.918919, 'AUC PR': 0.93118, 'Inference time': 1.023}


Best mapping found: ['female(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.21e-07, 377, 0], 'true,false': [0.15, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 377, 0], 'true,false': [0.15, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 377, 0], 'true,false': [0.15, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)', 'true,false': 'professor(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [9.19e-08, 377, 0], 'true,false,true': [0.0, 5, 0], 'true,false,false': [2.23e-07, 0, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.04e-07, 377, 0], 'true,false': [0.114, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 377, 0], 'true,false': [0.116, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [7.3e-08, 377, 0], 'true,false': [0.118, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [2.63e-09, 7, 0], 'true,true': [0.096, 0, 382], 'true,false': [0.0, 23, 0], 'false,false,true': [1.49e-08, 5, 0], 'false,true': [7.45e-08, 347, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)', 'false': 'professor(A), publication(D, B), publication(D, A)', 'false,true': 'professor(B)'}, {'false,true,true': [0.0, 5, 0], 'true,true': [0.085, 0, 382], 'false,false': [0.0, 349, 0], 'true,false': [0.0, 23, 0], 'false,true,false': [1.86e-09, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.58e-07, 377, 0], 'true,false': [0.074, 5, 212]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;true', '3;true,false;professor(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B).;true;false', '7;true;publication(C, A), publication(C, B).;false;false', '8;;advisedby(A, B) :- professor(B).;true;true', '8;true;publication(C, A), publication(C, B).;false;false', '8;false;professor(A), publication(D, B), publication(D, A).;true;false', '8;false,true;professor(B).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '9;true;student(A).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8055173561521439;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.2705200691201305;  // std dev = 4,848, 97,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.6773408397065112;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.23430134317253695;  // std dev = 4,848, 97,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.525995951478812;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.19739356303989047;  // std dev = 4,848, 97,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.3953438564084147;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1622159899430635;  // std dev = 4,848, 97,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.3007522660526577;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1305748888020377;  // std dev = 4,848, 97,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.23540269973125594;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.10341289657433365;  // std dev = 4,848, 97,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.18962398231281402;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.08090939624038565;  // std dev = 4,848, 97,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15653159872672676;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0.3521257216131194;  // std dev = 3,454, 57,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   else return -0.3496286643517924;  // std dev = 6,66e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1318147743472161;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0.2684903335755915;  // std dev = 3,454, 57,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   else if ( professor(A), publication(D, B), publication(D, A) )
%   | then if ( professor(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.27482060675854325;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.2748206067585432;  // std dev = 2,98e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.11280465504816395;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.026381047402700055;  // std dev = 4,023, 97,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
Results
   AUC ROC   = 0.85124
   AUC PR    = 0.827871
   CLL	      = -0.50387
   Precision = 0.733333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.846154


Total learning time: 12.231 seconds
Total inference time: 0.469 seconds
AUC ROC: 0.85124


Results in test set
   AUC ROC   = 0.85124
   AUC PR    = 0.827871
   CLL	      = -0.50387
   Precision = 0.733333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.846154


Total inference time: 0.469 seconds
AUC ROC: 0.85124
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.973, 1, 18], 'false': [4.848, 57, 40], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.973, 1, 18], 'false': [4.848, 57, 40], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.973, 1, 18], 'false': [4.848, 57, 40], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.973, 1, 18], 'false': [4.848, 57, 40], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.973, 1, 18], 'false': [4.848, 57, 40], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.973, 1, 18], 'false': [4.848, 57, 40], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.973, 1, 18], 'false': [4.848, 57, 40], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.973, 1, 18], 'false': [6.66e-08, 40, 0], 'true,false': [3.454, 17, 40]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)', 'false': 'professor(A), publication(D, B), publication(D, A)', 'false,true': 'professor(B)'}, {'false,true,true': [0.0, 0, 0], 'true,true': [0.973, 1, 18], 'false,false': [2.98e-08, 38, 0], 'true,false': [3.454, 17, 40], 'false,true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.973, 1, 18], 'false': [4.023, 57, 40], 'true,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '7;;advisedby(A, B) :- professor(B).;false;false', '8;;advisedby(A, B) :- professor(B).;true;true', '8;true;publication(C, A), publication(C, B).;false;false', '8;false;professor(A), publication(D, B), publication(D, A).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false', 0), ('false', 0.5876288659793815), ('true,true', 0.9473684210526315)]
Tree #2: [('true,false', 0), ('false', 0.5876288659793815), ('true,true', 0.9473684210526315)]
Tree #3: [('true,false', 0), ('false', 0.5876288659793815), ('true,true', 0.9473684210526315)]
Tree #4: [('true,false', 0), ('false', 0.5876288659793815), ('true,true', 0.9473684210526315)]
Tree #5: [('true,false', 0), ('false', 0.5876288659793815), ('true,true', 0.9473684210526315)]
Tree #6: [('true,false', 0), ('false', 0.5876288659793815), ('true,true', 0.9473684210526315)]
Tree #7: [('true,false', 0), ('false', 0.5876288659793815), ('true,true', 0.9473684210526315)]
Tree #8: [('true,false', 0.7017543859649122), ('true,true', 0.9473684210526315)]
Tree #9: [('false,true,true', 0), ('true,false', 0.7017543859649122), ('true,true', 0.9473684210526315)]
Tree #10: [('true,false', 0), ('false', 0.5876288659793815), ('true,true', 0.9473684210526315)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.8055173561521439;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else return 0.2705200691201305;  // std dev = 4,848, 97,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.6773408397065112;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else return 0.23430134317253695;  // std dev = 4,848, 97,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.525995951478812;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else return 0.19739356303989047;  // std dev = 4,848, 97,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.3953438564084147;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else return 0.1622159899430635;  // std dev = 4,848, 97,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.3007522660526577;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else return 0.1305748888020377;  // std dev = 4,848, 97,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.23540269973125594;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else return 0.10341289657433365;  // std dev = 4,848, 97,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.18962398231281402;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else return 0.08090939624038565;  // std dev = 4,848, 97,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.30322719089152084;  // std dev = 3,664, 76,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=58 */
%   else return -0.3496286643517924;  // std dev = 6,66e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.11076031950520504;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0.2804557567948521;  // std dev = 3,454, 57,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   else if ( professor(A), publication(D, B), publication(D, A) )
%   | then return -0.27482060675854325;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.2748206067585432;  // std dev = 2,98e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.09617849498947283;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else return 0.03180616795718324;  // std dev = 4,046, 97,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
Results
   AUC ROC   = 0.85124
   AUC PR    = 0.827871
   CLL	      = -0.506372
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.181818
   F1        = 0.307692


Total learning time: 7.11 seconds
Total inference time: 0.502 seconds
AUC ROC: 0.85124


Best model AUC ROC so far: 0.85124


******************************************
Best model found
******************************************
Total revision time: 20.311999999999998
Best validation AUC ROC: 0.85124


Results
   AUC ROC   = 0.908571
   AUC PR    = 0.877722
   CLL	      = -0.440611
   Precision = 0.795455 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.886076


Total inference time: 0.637 seconds
AUC ROC: 0.908571
Dataset: imdb,uwcse, Run: 1, Fold: 1, Type: transfer, Total folds for small set: 3, Time: 00:02:15
{'CLL': -0.440611, 'Recall': 1.0, 'Learning time': 20.311999999999998, 'Precision': [0.795455, 0.5], 'Mapping Results': {'Possible mappings': 1080, 'Total time': 3.347965717315674, 'Generating mappings time': 0.09175753593444824, 'Finding best mapping': 0.13991641998291016, 'Generating paths time': 3.093719720840454, 'Knowledge compiling time': 0.02255725860595703}, 'Parameter Learning Results': {'CLL': -0.440611, 'Recall': 1.0, 'Precision': [0.795455, 0.5], 'AUC ROC': 0.908571, 'F1': 0.886076, 'AUC PR': 0.877722}, 'AUC ROC': 0.908571, 'F1': 0.886076, 'AUC PR': 0.877722, 'Inference time': 0.637}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( tempadvisedby(E, B), inphase(E, F), inphase(A, F) )
%   | | then return 0.28672036367094084;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( publication(G, A), publication(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else if ( publication(H, B), publication(I, A) )
%   | | | | then if ( tempadvisedby(J, B), publication(H, K), publication(I, K) )
%   | | | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | else if ( publication(I, L), professor(L) )
%   | | | | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(M, B), publication(M, N), tempadvisedby(P, N) )
%   | | | | | then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.6631505791897266;  // std dev = 0,249, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( publication(E, A) )
%   | | | then if ( publication(D, F), publication(E, F) )
%   | | | | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.11592042942419134;  // std dev = 0,739, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(D, G), inphase(G, H), inphase(C, H) )
%   | | | | then return 0.16379361310901047;  // std dev = 1,030, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else if ( publication(D, I), inphase(I, J) )
%   | | | | | then if ( inphase(A, J) )
%   | | | | | | then return 0.5873302863714523;  // std dev = 0,856, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | else return 0.606419134303506;  // std dev = 0,868, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | else return 0.7266248616643611;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6468172417211;  // std dev = 0,280, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), tempadvisedby(D, E) )
%   | then if ( publication(F, A) )
%   | | then return 0.20043999757797848;  // std dev = 0,738, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.21819588849289728;  // std dev = 0,952, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(G, B) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.5323170007185108;  // std dev = 0,215, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | | then if ( tempadvisedby(J, I) )
%   | | | | | then return 0.49991036105637576;  // std dev = 0,828, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return -0.2471901932832315;  // std dev = 0,130, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.6139832971500468;  // std dev = 0,100, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.4851408004261919;  // std dev = 0,296, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | else return 0.6507392415559428;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360638;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), tempadvisedby(D, B), publication(E, D) )
%   | then return 0.09366492408747189;  // std dev = 1,174, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( publication(F, B), publication(F, A) )
%   | | then return 0.4487696605091557;  // std dev = 0,107, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | then if ( tempadvisedby(I, H) )
%   | | | | then return 0.5924711372509368;  // std dev = 0,199, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return -0.202733923149816;  // std dev = 0,113, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else if ( publication(J, B), publication(J, K), inphase(K, L) )
%   | | | | then if ( tempadvisedby(M, B), inphase(M, N), inphase(A, N) )
%   | | | | | then return 0.05426573282756445;  // std dev = 1,009, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | else if ( tempadvisedby(P, B) )
%   | | | | | | then return 0.4369528876898911;  // std dev = 0,259, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | | | | else return 0.3717459478479949;  // std dev = 0,271, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | | else return 0.4612389824807872;  // std dev = 0,110, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.10159632948783635;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), tempadvisedby(D, B) )
%   | then if ( publication(C, A) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.20477227437233583;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.346710314250036;  // std dev = 0,098, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(F, A), publication(F, G), professor(G) )
%   | | | then return -0.047935700424365284;  // std dev = 0,754, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( publication(C, H), inphase(H, I), inphase(D, I) )
%   | | | | then return 0.011355061817848778;  // std dev = 0,976, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else if ( publication(C, J), projectmember(K, J) )
%   | | | | | then return 0.34524394567154976;  // std dev = 0,030, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( inphase(A, L), inphase(D, L) )
%   | | | | | | then return 0.2575102912364075;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return 0.313982565705418;  // std dev = 0,244, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.2928136174987296;  // std dev = 0,216, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), tempadvisedby(D, E) )
%   | then if ( publication(F, A) )
%   | | then return 0.08328688916250288;  // std dev = 0,489, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.08850605213598896;  // std dev = 0,908, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(G, B) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.245579893861253;  // std dev = 0,203, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | | then if ( tempadvisedby(J, I) )
%   | | | | | then return 0.25843886344795075;  // std dev = 0,699, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return -0.19927952742452837;  // std dev = 0,159, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else if ( tempadvisedby(K, B), inphase(K, L), inphase(A, L) )
%   | | | | | then return 0.06801908912125904;  // std dev = 0,926, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0.24386814265727122;  // std dev = 0,220, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | else return 0.3085181588360951;  // std dev = 0,073, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.09280273586604885;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23145391530356585;  // std dev = 0,121, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( publication(F, A), publication(F, G), professor(G) )
%   | | then if ( tempadvisedby(H, G) )
%   | | | then return 0.20287578342276485;  // std dev = 0,698, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.17128698632431485;  // std dev = 0,140, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( publication(I, B), publication(I, J), tempadvisedby(K, J) )
%   | | | then if ( tempadvisedby(L, B), publication(M, K) )
%   | | | | then if ( publication(M, B) )
%   | | | | | then return 0.06765092417926422;  // std dev = 0,907, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0.07180096222150034;  // std dev = 0,974, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return 0.22735039916218033;  // std dev = 0,145, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return 0.018542080596047728;  // std dev = 0,832, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), tempadvisedby(D, B), publication(E, D) )
%   | then return -0.06420536271320658;  // std dev = 1,162, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( publication(F, B), publication(F, A) )
%   | | then return 0.19302900589286948;  // std dev = 0,107, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( publication(G, B), publication(G, H), tempadvisedby(H, I) )
%   | | | then return -0.015584725506969368;  // std dev = 0,935, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else if ( publication(J, B), publication(J, K), tempadvisedby(L, K) )
%   | | | | then if ( publication(M, A), publication(N, L) )
%   | | | | | then if ( tempadvisedby(P, B), publication(N, Q), publication(J, Q) )
%   | | | | | | then return 0.24768551328020738;  // std dev = 0,430, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return -0.013302988582328428;  // std dev = 0,446, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | else if ( tempadvisedby(R, B), publication(J, S), inphase(S, T) )
%   | | | | | | then return 0.13850896318014858;  // std dev = 0,295, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | | | | else return 0.2057285049942834;  // std dev = 0,083, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | | else return 0.04836091984155342;  // std dev = 0,845, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then if ( tempadvisedby(D, B) )
%   | | | then return 0.14826376856913315;  // std dev = 0,231, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.1612537142278615;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | | then if ( tempadvisedby(G, F) )
%   | | | | then return 0.13466546831170562;  // std dev = 0,649, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return -0.1505215633816974;  // std dev = 0,113, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else if ( tempadvisedby(H, B), publication(C, I), inphase(I, J) )
%   | | | | then if ( inphase(A, J) )
%   | | | | | then return 0.05880150310332738;  // std dev = 0,370, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | | | else return 0.1426907074369891;  // std dev = 0,839, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | else return 0.13045881717955193;  // std dev = 0,189, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2279410293014553;  // std dev = 0,079, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.12996136189424448;  // std dev = 0,192, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | | then if ( tempadvisedby(F, E) )
%   | | | | then return 0.10627217260754664;  // std dev = 0,652, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return -0.13254168228271312;  // std dev = 0,101, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else if ( tempadvisedby(G, B), publication(C, H), inphase(H, I) )
%   | | | | then if ( inphase(G, I) )
%   | | | | | then return -0.04434080424912813;  // std dev = 0,982, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | else if ( inphase(A, I) )
%   | | | | | | then return 0.11179002428744093;  // std dev = 0,296, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | | | else return 0.11506588932352367;  // std dev = 0,841, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | else return 0.11224424836230813;  // std dev = 0,191, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.19061412186661372;  // std dev = 0,069, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
Results
   AUC ROC   = 0.94898
   AUC PR    = 0.926068
   CLL	      = -0.27865
   Precision = 0.916667 at threshold = 0.5
   Recall    = 0.942857
   F1        = 0.929577


Total learning time: 18.03 seconds
Total inference time: 0.727 seconds
AUC ROC: 0.94898


Dataset: imdb,uwcse, Run: 1, Fold: 1, Type: scratch, Total folds for small set: 3, Time: 00:02:34
{'CLL': -0.27865, 'Recall': 0.942857, 'Learning time': 18.03, 'Precision': [0.916667, 0.5], 'AUC ROC': 0.94898, 'F1': 0.929577, 'AUC PR': 0.926068, 'Inference time': 0.727}


Best mapping found: ['female(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.21e-07, 377, 0], 'true,false': [0.15, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 377, 0], 'true,false': [0.15, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 377, 0], 'true,false': [0.15, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)', 'true,false': 'professor(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [9.19e-08, 377, 0], 'true,false,true': [0.0, 5, 0], 'true,false,false': [2.23e-07, 0, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.04e-07, 377, 0], 'true,false': [0.114, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 377, 0], 'true,false': [0.116, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [7.3e-08, 377, 0], 'true,false': [0.118, 5, 212]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [2.63e-09, 7, 0], 'true,true': [0.096, 0, 382], 'true,false': [0.0, 23, 0], 'false,false,true': [1.49e-08, 5, 0], 'false,true': [7.45e-08, 347, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)', 'false': 'professor(A), publication(D, B), publication(D, A)', 'false,true': 'professor(B)'}, {'false,true,true': [0.0, 5, 0], 'true,true': [0.085, 0, 382], 'false,false': [0.0, 349, 0], 'true,false': [0.0, 23, 0], 'false,true,false': [1.86e-09, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.58e-07, 377, 0], 'true,false': [0.074, 5, 212]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;true', '3;true,false;professor(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B).;true;false', '7;true;publication(C, A), publication(C, B).;false;false', '8;;advisedby(A, B) :- professor(B).;true;true', '8;true;publication(C, A), publication(C, B).;false;false', '8;false;professor(A), publication(D, B), publication(D, A).;true;false', '8;false,true;professor(B).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '9;true;student(A).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.2565864350995123;  // std dev = 5,539, 128,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=51 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.22239790930170483;  // std dev = 5,539, 128,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=51 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.187788135516037;  // std dev = 5,539, 128,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=51 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.41751358415831;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( professor(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.15487153455829317;  // std dev = 5,539, 128,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=51 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.12521938616606215;  // std dev = 5,539, 128,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=51 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.09966220156214109;  // std dev = 5,539, 128,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=51 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.2097577156325355;  // std dev = 2,98e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.07837278129926553;  // std dev = 5,539, 128,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=51 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1681556861913984;  // std dev = 0,246, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3709778869164041;  // std dev = 3,857, 72,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=51 */
%   else return -0.3373554464169292;  // std dev = 8,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1453539170246921;  // std dev = 0,235, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.2837836193222288;  // std dev = 3,857, 72,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=51 */
%   else if ( professor(A), publication(D, B), publication(D, A) )
%   | then if ( professor(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.266499274986012;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.2664992749860121;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.1359135527038333;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.09758492247537201;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.024791759877494154;  // std dev = 4,553, 128,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=51 */
Results
   AUC ROC   = 0.955556
   AUC PR    = 0.945747
   CLL	      = -0.406878
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total learning time: 14.014 seconds
Total inference time: 0.739 seconds
AUC ROC: 0.955556


Results in test set
   AUC ROC   = 0.955556
   AUC PR    = 0.945747
   CLL	      = -0.406878
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total inference time: 0.739 seconds
AUC ROC: 0.955556
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.58e-07, 0, 27], 'false': [5.539, 77, 51], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 27], 'false': [5.539, 77, 51], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 27], 'false': [5.539, 77, 51], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)', 'true,false': 'professor(A)'}, {'true,true': [0.0, 0, 27], 'false': [5.539, 77, 51], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 27], 'false': [5.539, 77, 51], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 27], 'false': [5.539, 77, 51], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.98e-08, 0, 27], 'false': [5.539, 77, 51], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.246, 1, 27], 'false': [8.94e-08, 56, 0], 'true,false': [3.857, 21, 51]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)', 'false': 'professor(A), publication(D, B), publication(D, A)', 'false,true': 'professor(B)'}, {'false,true,true': [0.0, 0, 0], 'true,true': [0.235, 1, 27], 'false,false': [0.0, 55, 0], 'true,false': [3.857, 21, 51], 'false,true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 27], 'false': [4.553, 77, 51], 'true,false': [0.0, 1, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B).;false;false', '8;;advisedby(A, B) :- professor(B).;true;true', '8;true;publication(C, A), publication(C, B).;false;false', '8;false;professor(A), publication(D, B), publication(D, A).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '9;true;student(A).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0.6015625)]
Tree #2: [('false', 0.6015625)]
Tree #3: [('false', 0.6015625)]
Tree #4: [('true,false,false', 0), ('false', 0.6015625)]
Tree #5: [('false', 0.6015625)]
Tree #6: [('false', 0.6015625)]
Tree #7: [('false', 0.6015625)]
Tree #8: [('true,false', 0.7083333333333334), ('true,true', 0.9642857142857143)]
Tree #9: [('false,true,true', 0), ('true,false', 0.7083333333333334), ('true,true', 0.9642857142857143)]
Tree #10: [('false', 0.6015625)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(E, A), publication(D, F), student(F) )
%   | | | then if ( tempadvisedby(G, B), publication(E, H), professor(H) )
%   | | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( publication(E, I), professor(I) )
%   | | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.7277141524908157;  // std dev = 0,337, 46,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then if ( publication(K, A) )
%   | | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.6909105759500754;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.29882112346071305;  // std dev = 1,226, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(H, B) )
%   | | | then if ( tempadvisedby(I, B), publication(H, J), projectmember(K, J) )
%   | | | | then return 0.34503137771551706;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( publication(L, A), publication(H, M), student(M) )
%   | | | | | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else if ( tempadvisedby(N, B), publication(H, P), tempadvisedby(P, Q) )
%   | | | | | | then return 0.41169804438218377;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | | else return 0.6878885205726597;  // std dev = 0,232, 35,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else return 0.3143914553503335;  // std dev = 0,489, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5354626841427582;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.7237880666132777;  // std dev = 0,099, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, B) )
%   | | | then if ( publication(F, A), publication(E, G), student(G) )
%   | | | | then if ( tempadvisedby(H, B) )
%   | | | | | then return 0.12807675203628854;  // std dev = 1,130, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | | else return 0.3903224089483887;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else if ( tempadvisedby(I, B), publication(E, J), tempadvisedby(J, K) )
%   | | | | | then return 0.32605908457334726;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | else return 0.495928186231048;  // std dev = 0,296, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | | else if ( tempadvisedby(L, B) )
%   | | | | then return -0.053351589476521154;  // std dev = 0,921, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return 0.39098236322974705;  // std dev = 0,814, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.11231637819360629;  // std dev = 4,08e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.43811693493607845;  // std dev = 5,96e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.5618830650639215;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.11780841258638056;  // std dev = 3,934, 128,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=51 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.30767886955493395;  // std dev = 0,140, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then if ( publication(F, A), publication(D, G), student(G) )
%   | | | | then return 0.08587986935863832;  // std dev = 1,127, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else if ( publication(H, E) )
%   | | | | | then return 0.516951061625693;  // std dev = 0,091, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.27974508418805727;  // std dev = 0,372, 26,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | | else return 0.356517079086996;  // std dev = 0,318, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then if ( publication(J, A) )
%   | | | | then return 0.10890341025602142;  // std dev = 0,818, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.09524131983087387;  // std dev = 0,913, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.27901312060115324;  // std dev = 0,813, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.11286510872525773;  // std dev = 4,59e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.24255176579229926;  // std dev = 0,143, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), publication(F, A) )
%   | | | then if ( publication(D, G), yearsinprogram(G, H), yearsinprogram(A, H) )
%   | | | | then return 0.4031953242794981;  // std dev = 0,769, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return -0.007919526087829021;  // std dev = 0,708, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else if ( tempadvisedby(I, B), inphase(I, J), inphase(A, J) )
%   | | | | then return 0.40045463619004973;  // std dev = 0,050, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.22925977697366523;  // std dev = 0,358, 46,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=38 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then if ( publication(L, A) )
%   | | | | then return 0.08938116605749702;  // std dev = 0,818, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.07536192762937423;  // std dev = 0,907, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.21109337963907535;  // std dev = 0,813, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.10204841658531717;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.19693350204505394;  // std dev = 0,145, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.4513143845465958;  // std dev = 0,205, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, B) )
%   | | | then if ( tempadvisedby(F, B) )
%   | | | | then if ( publication(G, F) )
%   | | | | | then return 0.31236540036080895;  // std dev = 0,047, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | | | | then return -0.007742745096835327;  // std dev = 0,823, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | | else return 0.1405453169731297;  // std dev = 0,391, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | | | else return 0.21822250064446783;  // std dev = 0,318, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else if ( tempadvisedby(J, B) )
%   | | | | then return -0.0989585473070171;  // std dev = 0,919, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return 0.15843895878178513;  // std dev = 0,813, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.0930696773159231;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.1310820671668912;  // std dev = 3,156, 100,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=78 */
%   else return -0.08550580343942081;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.14395752755811322;  // std dev = 0,796, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.09193800676543606;  // std dev = 3,049, 72,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=51 */
%   else if ( professor(A), publication(D, B), publication(D, A) )
%   | then return -0.07905236659277447;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07905236659277443;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1238665862678326;  // std dev = 0,153, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.21034715949026841;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(F, B), publication(F, G), projectmember(H, G) )
%   | | | | then return -0.1228665744298316;  // std dev = 1,023, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( publication(I, B), publication(I, J), inphase(J, K) )
%   | | | | | then return 0.10657090760085448;  // std dev = 0,357, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | | | else if ( publication(L, A) )
%   | | | | | | then return 0.07979614803743713;  // std dev = 0,938, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | | | else if ( publication(M, B) )
%   | | | | | | | then return -6.177218617726687E-4;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | | else return -0.022477993539211528;  // std dev = 0,748, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.12018840747516232;  // std dev = 0,341, 26,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | else return -0.07506908564751232;  // std dev = 0,007, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
Results
   AUC ROC   = 0.993333
   AUC PR    = 0.993856
   CLL	      = -0.209441
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total learning time: 11.173 seconds
Total inference time: 0.634 seconds
AUC ROC: 0.993333


Best model AUC ROC so far: 0.993333


Refining iteration 2
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '0;false,true,true;publication(E, A), publication(D, F), student(F).;true;false', '0;false,true,false;tempadvisedby(J, B).;true;false', '0;false,true,false,true;publication(K, A).;false;false', '0;false,true,true,true;tempadvisedby(G, B), publication(E, H), professor(H).;false;false', '0;false;professor(B), student(A).;true;false', '0;false,true;publication(D, B).;true;true', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '1;false,true,true;tempadvisedby(F, B), publication(G, B).;false;false', '1;false,true,false,true,false,false;tempadvisedby(N, B), publication(H, P), tempadvisedby(P, Q).;false;false', '1;false,true,false,true,false;publication(L, A), publication(H, M), student(M).;false;true', '1;false,true,false,true;tempadvisedby(I, B), publication(H, J), projectmember(K, J).;false;true', '1;false,true,false;publication(H, B).;true;true', '1;false;professor(B), student(A).;true;false', '1;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '2;false,true,false,true;publication(F, A), publication(E, G), student(G).;false;true', '2;false,true,false,false;tempadvisedby(L, B).;false;false', '2;false,true,false,true,false;tempadvisedby(I, B), publication(E, J), tempadvisedby(J, K).;false;false', '2;false,true,false;publication(E, B).;true;true', '2;false;professor(B), student(A).;true;false', '2;false,true;projectmember(D, B).;false;true', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '4;false,true,true;tempadvisedby(E, B).;true;false', '4;false,true,true,true,false;publication(H, E).;false;false', '4;false,true,false;tempadvisedby(I, B).;false;false', '4;false,true,true,true;publication(F, A), publication(D, G), student(G).;false;true', '4;false;professor(B), student(A).;true;false', '4;false,true;publication(D, B).;true;true', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '5;false,true,true;tempadvisedby(E, B), publication(F, A).;false;true', '5;false,true,false;tempadvisedby(K, B).;true;false', '5;false,true,true,false;tempadvisedby(I, B), inphase(I, J), inphase(A, J).;false;false', '5;false,true,false,true;publication(L, A).;false;false', '5;false;professor(B), student(A).;true;false', '5;false,true;publication(D, B).;true;true', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '6;false,true,false,true;tempadvisedby(F, B).;true;false', '6;false,true,false,true,true;publication(G, F).;false;true', '6;false,true,false,true,true,false;publication(H, A), publication(H, I), professor(I).;false;false', '6;false,true,false;publication(E, B).;true;false', '6;false;professor(B), student(A).;true;false', '6;false,true;projectmember(D, B).;false;true', '7;;advisedby(A, B) :- professor(B).;true;false', '8;;advisedby(A, B) :- professor(B).;false;true', '8;false;professor(A), publication(D, B), publication(D, A).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '9;false,true,true;publication(E, D).;false;true', '9;false,true,true,false,false;publication(I, B), publication(I, J), inphase(J, K).;false;true', '9;false,true,true,false;publication(F, B), publication(F, G), projectmember(H, G).;false;true', '9;false;professor(B), student(A).;true;false', '9;false,true,true,false,false,false;publication(L, A).;true;true', '9;false,true,true,false,false,false,false;publication(M, B).;false;false', '9;false,true;tempadvisedby(D, B).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,true,true,false,false', 0.6), ('false,true,false,true,false', 0.6), ('false,true,true,true,false,true', 0.6666666666666666), ('false,true,false,true,true', 0.6666666666666666), ('false,true,false,false', 0.6666666666666666), ('false,true,true,true,true', 0.75), ('false,true,true,false', 0.8695652173913043), ('true', 0.9642857142857143)]
Tree #2: [('false,true,false,false', 0.5), ('false,true,true,false', 0.5), ('false,true,false,true,true', 0.6), ('false,true,false,true,false,true', 0.6), ('false,true,false,true,false,false,true', 0.6666666666666666), ('false,true,true,true', 0.75), ('false,true,false,true,false,false,false', 0.9428571428571428), ('true', 0.9642857142857143)]
Tree #3: [('false,true,false,true,true,false', 0.6666666666666666), ('false,true,false,false,false', 0.6666666666666666), ('false,true,false,true,true,true', 0.6666666666666666), ('false,true,false,true,false,true', 0.6666666666666666), ('false,true,false,false,true', 0.8333333333333334), ('false,true,false,true,false,false', 0.8947368421052632), ('true', 0.9642857142857143)]
Tree #4: [('false', 0.6015625)]
Tree #5: [('false,true,false,true,false', 0.6), ('false,true,false,true,true', 0.6666666666666666), ('false,true,false,false', 0.6666666666666666), ('false,true,true,true,true', 0.6666666666666666), ('false,true,true,true,false,false', 0.8076923076923077), ('false,true,true,false', 0.8695652173913043), ('true', 0.9642857142857143)]
Tree #6: [('false,true,true,true,false', 0.6), ('false,true,false,true,false', 0.6), ('false,true,false,true,true', 0.6666666666666666), ('false,true,false,false', 0.6666666666666666), ('false,true,true,true,true', 0.6666666666666666), ('false,true,true,false,false', 0.8260869565217391), ('true', 0.9642857142857143)]
Tree #7: [('false,true,false,false,false', 0.6666666666666666), ('false,true,false,true,true,false,true', 0.75), ('false,true,false,true,true,false,false', 0.7692307692307693), ('false,true,false,false,true', 0.8333333333333334), ('false,true,false,true,false', 0.8695652173913043), ('true', 0.9642857142857143)]
Tree #8: [('true', 0.78)]
Tree #9: [('true,false', 0.7083333333333334), ('true,true', 0.9642857142857143)]
Tree #10: [('false,true,true,false,false,false,true', 0.5), ('false,true,true,false,true', 0.6), ('false,true,true,false,false,false,false,true', 0.6), ('false,true,true,false,false,true', 0.75), ('false,true,true,false,false,false,false,false', 0.8461538461538461), ('true', 0.9642857142857143)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.822434649385226;  // std dev = 0,982, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(E, A), publication(D, F), student(F) )
%   | | | then if ( tempadvisedby(G, B), publication(E, H), professor(H) )
%   | | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.48314893509951223;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.7277141524908157;  // std dev = 2,284, 46,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then if ( publication(J, A) )
%   | | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.6909105759500754;  // std dev = 0,982, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.30233531802722163;  // std dev = 1,229, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(H, B) )
%   | | | then if ( tempadvisedby(I, B), publication(H, J), projectmember(K, J) )
%   | | | | then return 0.34503137771551706;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( publication(L, A), publication(H, M), student(M) )
%   | | | | | then return 0.3886573287083125;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else if ( tempadvisedby(N, B), publication(H, P), tempadvisedby(P, Q) )
%   | | | | | | then return 0.41169804438218377;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | | else return 0.6878885205726597;  // std dev = 1,373, 35,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else return 0.3143914553503335;  // std dev = 0,489, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5354626841427582;  // std dev = 0,982, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.7237880666132777;  // std dev = 0,099, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, B) )
%   | | | then if ( publication(F, A), publication(E, G), student(G) )
%   | | | | then return 0.25932182470366855;  // std dev = 1,679, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | | else if ( tempadvisedby(H, B), publication(E, I), tempadvisedby(I, J) )
%   | | | | | then return 0.32605908457334726;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | else return 0.495928186231048;  // std dev = 1,825, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | | else if ( tempadvisedby(K, B) )
%   | | | | then return -0.053547839026684085;  // std dev = 0,921, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return 0.39074936344846917;  // std dev = 0,815, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.11231637819360629;  // std dev = 4,08e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.4024026492217927;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.5620941843077438;  // std dev = 0,122, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, B), publication(E, F), projectmember(G, F) )
%   | | | then return -0.10909161272012324;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(H, B) )
%   | | | | then if ( publication(I, A), publication(H, J), student(J) )
%   | | | | | then if ( tempadvisedby(K, B) )
%   | | | | | | then return 0.0818641883386016;  // std dev = 1,126, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | | | else return 0.3374466113322927;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | else return 0.3907873311290303;  // std dev = 0,286, 41,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | | else if ( tempadvisedby(L, B) )
%   | | | | | then return -0.04449258771149156;  // std dev = 0,920, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | | else return 0.3063656231734892;  // std dev = 0,814, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.10159632948783623;  // std dev = 3,94e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.30700250684980995;  // std dev = 0,982, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then if ( publication(F, A), publication(D, G), student(G) )
%   | | | | then return 0.06647333062959453;  // std dev = 1,126, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else if ( publication(H, E) )
%   | | | | | then return 0.4496247169471612;  // std dev = 0,089, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.22435750186359874;  // std dev = 1,818, 26,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | | else return 0.3027862310287562;  // std dev = 1,513, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.0934658894224878;  // std dev = 1,121, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.23319348979725338;  // std dev = 0,814, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.24152182581632603;  // std dev = 0,982, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), publication(F, A) )
%   | | | then return 0.12164521545717122;  // std dev = 1,174, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else if ( tempadvisedby(G, B), inphase(G, H), inphase(A, H) )
%   | | | | then return 0.35104185563019563;  // std dev = 0,050, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.19153305701738038;  // std dev = 2,367, 46,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=38 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then if ( publication(J, A) )
%   | | | | then return 0.12029861268341935;  // std dev = 0,817, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.04934491998061814;  // std dev = 0,754, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.17529153343982573;  // std dev = 0,814, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.08518475138839679;  // std dev = 1,97e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1958080954961511;  // std dev = 0,982, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.36192076992354155;  // std dev = 0,176, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, B) )
%   | | | then if ( tempadvisedby(F, B) )
%   | | | | then if ( publication(G, F) )
%   | | | | | then return 0.2792156889394842;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | | | | then return -0.005768563944785712;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | | else return 0.11512848404853868;  // std dev = 1,948, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | | | else return 0.19147607790842644;  // std dev = 1,516, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return -0.0012018823747736102;  // std dev = 1,256, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return -0.07877675473109175;  // std dev = 1,97e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( student(A) )
%   | then if ( publication(C, B), publication(C, A) )
%   | | then return 0.19852432479029003;  // std dev = 3,33e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( tempadvisedby(D, B) )
%   | | | then if ( projectmember(E, B) )
%   | | | | then return 0.2854571020236605;  // std dev = 0,155, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(F, B) )
%   | | | | | then if ( publication(G, D) )
%   | | | | | | then return 0.2267663917211272;  // std dev = 0,040, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | | | | | then return -0.0046720598632632865;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | | | else return 0.09065465872727968;  // std dev = 0,383, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | | | | else return -0.06735125407601976;  // std dev = 0,914, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.1501442073986975;  // std dev = 0,338, 26,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | else return -0.25530358812493026;  // std dev = 0,631, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.09787009947315538;  // std dev = 3,109, 100,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=78 */
%   else if ( professor(A), publication(C, B), publication(C, A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.12227993605518361;  // std dev = 0,914, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.1750271433729366;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(F, B), publication(F, G), projectmember(H, G) )
%   | | | | then return -0.09543685204751781;  // std dev = 0,933, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( publication(I, B), publication(I, J), inphase(J, K) )
%   | | | | | then return 0.09701263412523835;  // std dev = 1,635, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | | | else if ( publication(L, A) )
%   | | | | | | then return 0.08165305649138278;  // std dev = 0,919, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | | | else if ( publication(M, B) )
%   | | | | | | | then return -0.022391059349234133;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | | else return -0.03208700401603465;  // std dev = 0,569, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.10238766807223892;  // std dev = 1,729, 26,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | else return -0.06414403013101269;  // std dev = 0,002, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
Results
   AUC ROC   = 0.993333
   AUC PR    = 0.993856
   CLL	      = -0.197486
   Precision = 0.933333 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.933333


Total learning time: 8.196 seconds
Total inference time: 0.603 seconds
AUC ROC: 0.993333


Best model AUC ROC so far: 0.993333


******************************************
Best model found
******************************************
Total revision time: 35.359
Best validation AUC ROC: 0.993333


Results
   AUC ROC   = 0.927347
   AUC PR    = 0.891432
   CLL	      = -0.30126
   Precision = 0.868421 at threshold = 0.5
   Recall    = 0.942857
   F1        = 0.90411


Total inference time: 0.659 seconds
AUC ROC: 0.927347
Dataset: imdb,uwcse, Run: 1, Fold: 1, Type: transfer, Total folds for small set: 4, Time: 00:03:16
{'CLL': -0.30126, 'Recall': 0.942857, 'Learning time': 35.359, 'Precision': [0.868421, 0.5], 'Mapping Results': {'Possible mappings': 1080, 'Total time': 2.947293281555176, 'Generating mappings time': 0.07399964332580566, 'Finding best mapping': 0.14614534378051758, 'Generating paths time': 2.708357095718384, 'Knowledge compiling time': 0.018784046173095703}, 'Parameter Learning Results': {'CLL': -0.435913, 'Recall': 1.0, 'Precision': [0.795455, 0.5], 'AUC ROC': 0.908571, 'F1': 0.886076, 'AUC PR': 0.877722}, 'AUC ROC': 0.927347, 'F1': 0.90411, 'AUC PR': 0.891432, 'Inference time': 0.659}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( tempadvisedby(D, B) )
%   | | | then if ( publication(E, A), publication(C, F), student(F) )
%   | | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else if ( publication(C, G), projectmember(H, G) )
%   | | | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return 0.733148935099512;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return 0.7277141524908164;  // std dev = 0,337, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | else if ( tempadvisedby(I, B) )
%   | | then if ( publication(J, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048766;  // std dev = 5,96e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( publication(D, A), publication(C, E), student(E) )
%   | | | then if ( tempadvisedby(F, B), publication(D, G), professor(G) )
%   | | | | then return 0.08320549123154841;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( publication(D, H), professor(H) )
%   | | | | | then return 0.41169804438218377;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.3803010231219296;  // std dev = 1,084, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6192488496374939;  // std dev = 0,333, 46,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | else if ( tempadvisedby(I, B) )
%   | | then if ( publication(J, A) )
%   | | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.22373365448410584;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839158;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( publication(D, A), publication(C, E), student(E) )
%   | | | then if ( tempadvisedby(F, B), publication(D, G), professor(G) )
%   | | | | then return 0.07131940340711884;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( publication(D, H), professor(H) )
%   | | | | | then return 0.32605908457334726;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.3092475108211234;  // std dev = 1,082, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.48697158116556205;  // std dev = 0,332, 46,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | else if ( tempadvisedby(I, B) )
%   | | then if ( publication(J, A) )
%   | | | then return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1888683221574974;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360629;  // std dev = 4,08e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.41751358415831;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( publication(D, A), publication(C, E), student(E) )
%   | | | then if ( tempadvisedby(F, B), publication(D, G), professor(G) )
%   | | | | then return 0.06061217497719251;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( publication(D, H), professor(H) )
%   | | | | | then return 0.24952754076565212;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.24265269422525026;  // std dev = 1,081, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3676693306868288;  // std dev = 0,332, 46,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | else if ( tempadvisedby(I, B) )
%   | | then if ( publication(J, A) )
%   | | | then return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.15570029437174368;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783623;  // std dev = 3,94e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.5964322414176355;  // std dev = 0,259, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.3207118471601494;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else if ( tempadvisedby(E, B), publication(D, F), tempadvisedby(F, G) )
%   | | | | then return 0.06628906492806301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else if ( publication(H, A), publication(D, I), student(I) )
%   | | | | | then if ( tempadvisedby(J, B), publication(H, K), professor(K) )
%   | | | | | | then return 0.05113139817019829;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | | else return 0.18680458553814824;  // std dev = 0,479, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | | | else return 0.30026519757711934;  // std dev = 0,298, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return -0.08788015746113019;  // std dev = 0,935, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926107;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( tempadvisedby(D, B), publication(C, E), tempadvisedby(E, F) )
%   | | | then return 0.05049557679242548;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else if ( publication(G, A), publication(C, H), student(H) )
%   | | | | then if ( tempadvisedby(I, B), publication(G, J), professor(J) )
%   | | | | | then return 0.04285958870430239;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | else if ( publication(G, K), professor(K) )
%   | | | | | | then return 0.14123777288423936;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return 0.14098985789061855;  // std dev = 1,081, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return 0.23522655591448052;  // std dev = 0,291, 40,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=36 */
%   | else if ( publication(L, A), publication(L, M), professor(M) )
%   | | then return 0.01794488761788478;  // std dev = 0,956, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.14767470690872567;  // std dev = 0,397, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.08518475138839679;  // std dev = 2,11e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.41662432345629213;  // std dev = 0,281, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | | then return 0.27559665391111593;  // std dev = 0,178, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then if ( publication(D, A) )
%   | | | | | then return 0.20975771563253562;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | | | else if ( publication(D, H), yearsinprogram(H, I), yearsinprogram(A, I) )
%   | | | | | | then return 0.2534605018641801;  // std dev = 0,332, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | | | | else return -0.04164313505171696;  // std dev = 0,406, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | | else return 0.19914296906841233;  // std dev = 0,262, 34,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return -0.09161689950715364;  // std dev = 0,954, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.13345821513438325;  // std dev = 0,790, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109176;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.32714892776929155;  // std dev = 0,252, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, B) )
%   | | | then if ( publication(E, A) )
%   | | | | then return 0.17533552256160473;  // std dev = 0,015, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | | else if ( publication(F, C) )
%   | | | | | then return 0.2828551390244165;  // std dev = 0,067, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(G, A), publication(E, H), student(H) )
%   | | | | | | then return 0.030895715233103707;  // std dev = 1,064, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | | | else if ( publication(E, I), tempadvisedby(I, J) )
%   | | | | | | | then return -0.16838645963480448;  // std dev = 0,968, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | | else return 0.12761642210423954;  // std dev = 0,337, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.07452949403596239;  // std dev = 0,952, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.15634650932407773;  // std dev = 0,284, 37,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.15362435834899416;  // std dev = 0,019, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.2638353763590632;  // std dev = 0,221, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, B), publication(E, F), projectmember(G, F) )
%   | | | then return -0.36679690649882435;  // std dev = 0,767, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(H, B) )
%   | | | | then if ( publication(I, A), publication(H, J), student(J) )
%   | | | | | then if ( tempadvisedby(K, B), yearsinprogram(J, L), yearsinprogram(A, L) )
%   | | | | | | then return 0.3280146856807538;  // std dev = 0,744, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return -0.07441038542203236;  // std dev = 0,415, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | | | else return 0.1460499052136402;  // std dev = 0,277, 41,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | | else if ( publication(M, A), tempadvisedby(N, B) )
%   | | | | | then return 0.1311106118328243;  // std dev = 0,825, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return -0.09547783137586448;  // std dev = 0,881, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.06842697784420268;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, E), tempadvisedby(F, E) )
%   | | then return 0.1343107288987426;  // std dev = 0,235, 21,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | else if ( publication(G, B), publication(G, H), projectmember(I, H) )
%   | | | then return -0.12212493878729322;  // std dev = 0,882, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else if ( publication(J, B) )
%   | | | | then if ( publication(K, A) )
%   | | | | | then return 0.0625911933178566;  // std dev = 0,689, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else if ( publication(J, L), tempadvisedby(L, M) )
%   | | | | | | then return -0.033465806972076816;  // std dev = 1,067, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | | else return 0.1504859151326273;  // std dev = 0,238, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | | else return -0.05293689070631829;  // std dev = 0,637, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( publication(N, A), publication(N, P), professor(P) )
%   | | then return 0.0712760109313798;  // std dev = 0,273, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return 0.14687786927384747;  // std dev = 0,284, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else return -0.06419184008202625;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
Results
   AUC ROC   = 0.946122
   AUC PR    = 0.934983
   CLL	      = -0.292424
   Precision = 0.868421 at threshold = 0.5
   Recall    = 0.942857
   F1        = 0.90411


Total learning time: 12.413 seconds
Total inference time: 0.686 seconds
AUC ROC: 0.946122


Dataset: imdb,uwcse, Run: 1, Fold: 1, Type: scratch, Total folds for small set: 4, Time: 00:03:29
{'CLL': -0.292424, 'Recall': 0.942857, 'Learning time': 12.413, 'Precision': [0.868421, 0.5], 'AUC ROC': 0.946122, 'F1': 0.90411, 'AUC PR': 0.934983, 'Inference time': 0.686}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995096;  // std dev = 1,07e-06, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.8396304165809906;  // std dev = 0,135, 216,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=212 */
%   else return -0.14185106490048754;  // std dev = 2,29e-07, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109565;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.7046772772613799;  // std dev = 0,135, 216,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=212 */
%   else return -0.12544463852839213;  // std dev = 0,000, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,72e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.5450585534393646;  // std dev = 0,135, 216,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=212 */
%   else return -0.11231637819360647;  // std dev = 0,000, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830936;  // std dev = 4,13e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.40964050878275793;  // std dev = 0,135, 216,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=212 */
%   else return -0.1015963294878363;  // std dev = 1,03e-07, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601492;  // std dev = 3,82e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.3135139610554116;  // std dev = 0,135, 216,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=212 */
%   else return -0.09269127618926051;  // std dev = 2,00e-07, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694907;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.24796831369302438;  // std dev = 0,135, 216,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=212 */
%   else return -0.08518475138839678;  // std dev = 1,17e-07, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2159356865185899;  // std dev = 0,108, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.07877675473109141;  // std dev = 7,60e-08, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.7791102802237255;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1816201039343475;  // std dev = 0,095, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.07324622576333711;  // std dev = 7,30e-08, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.618073393745577;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15136407376657218;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.14843381469143835;  // std dev = 0,084, 216,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=212 */
%   else return -0.06842697784420318;  // std dev = 0,000, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13744382137523023;  // std dev = 0,079, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202612;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.06419184008202575;  // std dev = 1,61e-07, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.5029347591810329;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06419184008202615;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Predicates from source: ['workedunder(person,person).', 'director(person).', 'actor(person).', 'female(person).', 'movie(movie,person).'] 

Source structured tree: [['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.29e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 378, 0], 'true,false': [0.135, 4, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 378, 0], 'true,false': [0.135, 4, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [1.03e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'false': 'actor(B)', 'false,false': 'movie(D, A), movie(D, B)'}, {'false,false,true': [0.0, 4, 0], 'true,true': [0.108, 0, 382], 'true,false': [0.0, 22, 0], 'false,false,false': [0.0, 5, 0], 'false,true': [7.6e-08, 351, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'false': 'actor(B)', 'false,false': 'movie(D, A), movie(D, B)'}, {'false,false,true': [0.0, 4, 0], 'true,true': [0.095, 0, 382], 'true,false': [0.0, 22, 0], 'false,false,false': [0.0, 5, 0], 'false,true': [7.3e-08, 351, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 378, 0], 'true,false': [0.084, 4, 212]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'false': 'actor(B)', 'false,false': 'movie(D, A), movie(D, B)'}, {'false,false,true': [0.0, 4, 0], 'true,true': [0.079, 0, 382], 'true,false': [5.27e-09, 22, 0], 'false,false,false': [0.0, 5, 0], 'false,true': [1.61e-07, 351, 0]}]] 



Best mapping found: ['female(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.29e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [1.03e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [0.0, 5, 0], 'true,true': [0.108, 0, 382], 'true,false': [0.0, 22, 0], 'false,false,true': [0.0, 4, 0], 'false,true': [7.6e-08, 351, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [0.0, 5, 0], 'true,true': [0.095, 0, 382], 'true,false': [0.0, 22, 0], 'false,false,true': [0.0, 4, 0], 'false,true': [7.3e-08, 351, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 378, 0], 'true,false': [0.084, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [0.0, 5, 0], 'true,true': [0.079, 0, 382], 'true,false': [5.27e-09, 22, 0], 'false,false,true': [0.0, 4, 0], 'false,true': [1.61e-07, 351, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B).;true;false', '6;true;publication(C, A), publication(C, B).;false;false', '7;;advisedby(A, B) :- professor(B).;true;false', '7;true;publication(C, A), publication(C, B).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '8;true;student(A).;false;false', '9;;advisedby(A, B) :- professor(B).;true;false', '9;true;publication(C, A), publication(C, B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.3025933795439567;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.2616318086752122;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.2192721473492705;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.17873524574687283;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.1424392447767629;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.11159559999632984;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1520508215598101;  // std dev = 0,258, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.39192581855399156;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.3580741814460083;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13042243747973278;  // std dev = 0,247, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.2978052164728611;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.2805355309340331;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.16674698706831736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10187056302073293;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.039764186658156876;  // std dev = 2,080, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.09729300370035142;  // std dev = 0,213, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.2136237217336711;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.23458896373410856;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
Results
   AUC ROC   = 0.833333
   AUC PR    = 0.75
   CLL	      = -0.485254
   Precision = 0.75 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.857143


Total learning time: 4.705 seconds
Total inference time: 0.405 seconds
AUC ROC: 0.833333


Results in test set
   AUC ROC   = 0.833333
   AUC PR    = 0.75
   CLL	      = -0.485254
   Precision = 0.75 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.857143


Total inference time: 0.405 seconds
AUC ROC: 0.833333
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 4], 'false': [2.582, 15, 12], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 4], 'false': [2.582, 15, 12], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 4], 'false': [2.582, 15, 12], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 4], 'false': [2.582, 15, 12], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 4], 'false': [2.582, 15, 12], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 4], 'false': [2.582, 15, 12], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.258, 1, 4], 'false': [1.49e-08, 11, 0], 'true,false': [1.732, 4, 12]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.247, 1, 4], 'false': [0.0, 11, 0], 'true,false': [1.732, 4, 12]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 4], 'false': [2.08, 15, 12], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.213, 1, 4], 'false': [2.11e-08, 11, 0], 'true,false': [1.732, 4, 12]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B).;false;false', '7;;advisedby(A, B) :- professor(B).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '8;true;student(A).;false;false', '9;;advisedby(A, B) :- professor(B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0.5555555555555556)]
Tree #2: [('false', 0.5555555555555556)]
Tree #3: [('false', 0.5555555555555556)]
Tree #4: [('false', 0.5555555555555556)]
Tree #5: [('false', 0.5555555555555556)]
Tree #6: [('false', 0.5555555555555556)]
Tree #7: [('true,false', 0.75), ('true,true', 0.8)]
Tree #8: [('true,false', 0.75), ('true,true', 0.8)]
Tree #9: [('false', 0.5555555555555556)]
Tree #10: [('true,false', 0.75), ('true,true', 0.8)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.45946085024371547;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5772470026663192;  // std dev = 0,862, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then return 0.5785584715980201;  // std dev = 0,040, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.29733136833090124;  // std dev = 1,100, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then return 0.4351044726512847;  // std dev = 0,040, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.2312335832566906;  // std dev = 1,101, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.10159632948783628;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then return 0.33276535130815743;  // std dev = 0,036, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.17602186040267598;  // std dev = 1,101, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then return 0.2634402119717641;  // std dev = 0,031, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.22866936528026055;  // std dev = 0,818, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0950572877233587;  // std dev = 0,734, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.08518475138839686;  // std dev = 6,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.14317338297876323;  // std dev = 1,196, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.11875225056999963;  // std dev = 1,192, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.16962150637416118;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10000591965346751;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(D, A) )
%   | then if ( publication(E, B) )
%   | | then return -0.2381401557055501;  // std dev = 0,416, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( projectmember(F, B) )
%   | | then return 0.29791033919886856;  // std dev = 0,249, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( professor(B), student(A) )
%   | | | then if ( tempadvisedby(G, B) )
%   | | | | then return 0.09633687019703073;  // std dev = 0,766, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | else return 0.17191846784246098;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.07744953264684981;  // std dev = 0,038, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.0803463881427701;  // std dev = 1,108, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.062224332787506935;  // std dev = 0,012, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.169785
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.467 seconds
Total inference time: 0.47 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


Refining iteration 2
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '0;true;student(A).;false;false', '0;false;professor(B), student(A).;true;false', '0;false,true;publication(D, B), publication(D, E), inphase(E, F).;false;true', '0;false,true,false;publication(G, B).;true;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '1;true;student(A).;false;false', '1;false;professor(B), student(A).;true;false', '1;false,true;tempadvisedby(D, B), publication(E, B).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '2;true;student(A).;false;false', '2;false;professor(B), student(A).;true;false', '2;false,true;publication(D, B), publication(D, E), inphase(E, F).;false;true', '2;false,true,false;publication(G, B).;true;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '3;true;student(A).;false;false', '3;false;professor(B), student(A).;true;false', '3;false,true;publication(D, B), publication(D, E), inphase(E, F).;false;true', '3;false,true,false;publication(G, B).;true;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '4;true;student(A).;false;false', '4;false;professor(B), student(A).;true;false', '4;false,true;publication(D, B), publication(D, E), inphase(E, F).;false;true', '4;false,true,false;publication(G, B).;true;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '5;true;student(A).;false;false', '5;false;professor(B), student(A).;true;false', '5;false,true;publication(D, B), publication(D, E), inphase(E, F).;false;false', '6;;advisedby(A, B) :- professor(B).;true;false', '7;;advisedby(A, B) :- professor(B).;true;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '8;true;student(A).;false;false', '8;false,false,false;professor(B), student(A).;true;false', '8;false;publication(D, A).;true;true', '8;false,false,false,true;tempadvisedby(G, B).;true;false', '8;false,false;projectmember(F, B).;false;true', '8;false,true;publication(E, B).;false;false', '9;;advisedby(A, B) :- professor(B).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,false,true', 0.6)]
Tree #2: [('false,true,true,true', 0.6666666666666666), ('false,true,true,false', 0.8333333333333334)]
Tree #3: [('false,true,false,true', 0.6)]
Tree #4: [('false,true,false,true', 0.6)]
Tree #5: [('false,true,false,true', 0.6)]
Tree #6: [('false,true,false,false', 0.6666666666666666), ('false,true,false,true', 0.8)]
Tree #7: [('true', 0.7619047619047619)]
Tree #8: [('true', 0.7619047619047619)]
Tree #9: [('false,false,false,true,true', 0.8333333333333334)]
Tree #10: [('true', 0.7619047619047619)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.5379849518587845;  // std dev = 1,199, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then return 0.584866265510883;  // std dev = 0,051, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.2908008722122236;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then return 0.4400344889640054;  // std dev = 0,051, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.22552476312135417;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.10159632948783628;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then return 0.3361928039145831;  // std dev = 0,046, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.1713938948141608;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then return 0.265807833263682;  // std dev = 0,040, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.17631712071294922;  // std dev = 1,109, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return -0.08518475138839686;  // std dev = 6,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( student(A) )
%   | then if ( publication(C, A), tempadvisedby(D, B) )
%   | | then return 0.028558762320120695;  // std dev = 0,628, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.35404483563506417;  // std dev = 0,262, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tempadvisedby(F, B) )
%   | | | | then return 0.14658912683452785;  // std dev = 0,761, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | else return 0.20677099291460213;  // std dev = 0,022, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( student(A) )
%   | then if ( publication(C, A), tempadvisedby(D, B) )
%   | | then return 0.023255352724037948;  // std dev = 0,630, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.28283161204760304;  // std dev = 0,230, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tempadvisedby(F, B) )
%   | | | | then return 0.11795150525612795;  // std dev = 0,766, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | else return 0.17492259208380473;  // std dev = 0,019, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.18932684054553595;  // std dev = 0,041, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( publication(D, A) )
%   | then if ( publication(E, B) )
%   | | then return -0.2216069660817225;  // std dev = 0,375, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( projectmember(F, B) )
%   | | then return 0.23217534014641766;  // std dev = 0,201, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( professor(B), student(A) )
%   | | | then if ( tempadvisedby(G, B) )
%   | | | | then return 0.09603324273615053;  // std dev = 0,770, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | else return 0.15033693367547066;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( student(A) )
%   | then if ( publication(C, A), tempadvisedby(D, B) )
%   | | then return 0.011271414843160382;  // std dev = 0,559, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(E, B), publication(E, F), projectmember(G, F) )
%   | | | then return 0.24548332461402766;  // std dev = 0,092, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | | | then return 0.06070642000283246;  // std dev = 0,768, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else return 0.1236340292789735;  // std dev = 0,032, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06262636757594331;  // std dev = 0,011, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.153065
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.593 seconds
Total inference time: 0.5 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 13.14
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 0.97875
   AUC PR    = 0.975179
   CLL	      = -0.205526
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total inference time: 0.54 seconds
AUC ROC: 0.97875
Dataset: imdb,uwcse, Run: 1, Fold: 2, Type: transfer, Total folds for small set: 1, Time: 00:03:56
{'CLL': -0.205526, 'Recall': 1.0, 'Learning time': 13.14, 'Precision': [0.909091, 0.5], 'Mapping Results': {'Possible mappings': 1080, 'Total time': 2.548292398452759, 'Generating mappings time': 0.06876873970031738, 'Finding best mapping': 0.13167524337768555, 'Generating paths time': 2.3366594314575195, 'Knowledge compiling time': 0.01118326187133789}, 'Parameter Learning Results': {'CLL': -0.333941, 'Recall': 1.0, 'Precision': [0.869565, 0.5], 'AUC ROC': 0.95875, 'F1': 0.930233, 'AUC PR': 0.953338}, 'AUC ROC': 0.97875, 'F1': 0.952381, 'AUC PR': 0.975179, 'Inference time': 0.54}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B), projectmember(E, B) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.8581489350995121;  // std dev = 2,98e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then return 0.4850122940520397;  // std dev = 0,812, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( projectmember(E, B) )
%   | | then return 0.7505511758931249;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B), publication(D, B) )
%   | then return 0.3147764470713983;  // std dev = 0,768, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(E, A) )
%   | | then return 0.5980395921773421;  // std dev = 0,049, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.46125983910675533;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5522917241305023;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 9,13e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then return 0.25273375581917945;  // std dev = 0,734, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( projectmember(E, B) )
%   | | then return 0.4814959934270986;  // std dev = 0,142, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.3488463256948422;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.41548955056561077;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783628;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B), publication(D, B) )
%   | then return 0.14014868462168678;  // std dev = 0,716, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | then return 0.40277049125855263;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.26212705508354184;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.31323576457259256;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.09269127618926097;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then return 0.11320223519893378;  // std dev = 0,684, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( projectmember(E, B) )
%   | | then return 0.31896434597333845;  // std dev = 0,159, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.19945264276423433;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2554068561332481;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B), tempadvisedby(D, B) )
%   | then return 0.2870188061716976;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(E, B), publication(F, B), projectmember(G, B) )
%   | | then return 0.0474625647009053;  // std dev = 0,680, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | | then return 0.15451336627983223;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.20202794088765894;  // std dev = 0,028, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then return 0.044134882432107225;  // std dev = 0,651, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( projectmember(E, B) )
%   | | then return 0.23611779625083357;  // std dev = 0,157, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.12179491558002796;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1783765950743778;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B), publication(D, B) )
%   | then return 5.773470276019266E-4;  // std dev = 0,650, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | then return 0.2242513586770093;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.09745354768081688;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.14536460460907902;  // std dev = 0,029, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.06842697784420272;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then return 0.008072776525675701;  // std dev = 0,622, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( projectmember(E, B) )
%   | | then return 0.18962333622008615;  // std dev = 0,153, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.07895233872555124;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.13574263946150328;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06419184008202619;  // std dev = 4,56e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
Results
   AUC ROC   = 0.985
   AUC PR    = 0.983692
   CLL	      = -0.199318
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total learning time: 6.04 seconds
Total inference time: 0.637 seconds
AUC ROC: 0.985


Dataset: imdb,uwcse, Run: 1, Fold: 2, Type: scratch, Total folds for small set: 1, Time: 00:04:03
{'CLL': -0.199318, 'Recall': 1.0, 'Learning time': 6.04, 'Precision': [0.909091, 0.5], 'AUC ROC': 0.985, 'F1': 0.952381, 'AUC PR': 0.983692, 'Inference time': 0.637}


Best mapping found: ['female(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.29e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [1.03e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [0.0, 5, 0], 'true,true': [0.108, 0, 382], 'true,false': [0.0, 22, 0], 'false,false,true': [0.0, 4, 0], 'false,true': [7.6e-08, 351, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [0.0, 5, 0], 'true,true': [0.095, 0, 382], 'true,false': [0.0, 22, 0], 'false,false,true': [0.0, 4, 0], 'false,true': [7.3e-08, 351, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 378, 0], 'true,false': [0.084, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [0.0, 5, 0], 'true,true': [0.079, 0, 382], 'true,false': [5.27e-09, 22, 0], 'false,false,true': [0.0, 4, 0], 'false,true': [1.61e-07, 351, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B).;true;false', '6;true;publication(C, A), publication(C, B).;false;false', '7;;advisedby(A, B) :- professor(B).;true;false', '7;true;publication(C, A), publication(C, B).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '8;true;student(A).;false;false', '9;;advisedby(A, B) :- professor(B).;true;false', '9;true;publication(C, A), publication(C, B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.2532106634945738;  // std dev = 4,400, 81,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.7194734122109542;  // std dev = 7,30e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.21951125682419345;  // std dev = 4,400, 81,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1854517692140536;  // std dev = 4,400, 81,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.4175135841583098;  // std dev = 5,16e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.15307652238066252;  // std dev = 4,400, 81,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.32071184716014967;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.12390263976883832;  // std dev = 4,400, 81,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.09873409512618583;  // std dev = 4,400, 81,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.36353053375698163;  // std dev = 3,196, 47,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
%   else return -0.31732053007280564;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.2801590435463117;  // std dev = 3,196, 47,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
%   else return -0.2528567930195535;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.035315751397797926;  // std dev = 3,699, 81,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.20261423555654423;  // std dev = 3,196, 47,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
%   else return -0.21400103488051408;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
Results
   AUC ROC   = 0.87037
   AUC PR    = 0.852127
   CLL	      = -0.45351
   Precision = 0.75 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.857143


Total learning time: 4.088 seconds
Total inference time: 0.496 seconds
AUC ROC: 0.87037


Results in test set
   AUC ROC   = 0.87037
   AUC PR    = 0.852127
   CLL	      = -0.45351
   Precision = 0.75 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.857143


Total inference time: 0.496 seconds
AUC ROC: 0.87037
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 17], 'false': [4.4, 49, 32], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [7.3e-08, 0, 17], 'false': [4.4, 49, 32], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 17], 'false': [4.4, 49, 32], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.16e-08, 0, 17], 'false': [4.4, 49, 32], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.49e-08, 0, 17], 'false': [4.4, 49, 32], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.11e-08, 0, 17], 'false': [4.4, 49, 32], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 17], 'false': [0.0, 34, 0], 'true,false': [3.196, 15, 32]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 17], 'false': [0.0, 34, 0], 'true,false': [3.196, 15, 32]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 17], 'false': [3.699, 49, 32], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 17], 'false': [0.0, 34, 0], 'true,false': [3.196, 15, 32]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '6;;advisedby(A, B) :- professor(B).;true;false', '6;true;publication(C, A), publication(C, B).;false;true', '7;;advisedby(A, B) :- professor(B).;true;false', '7;true;publication(C, A), publication(C, B).;false;true', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '9;;advisedby(A, B) :- professor(B).;true;false', '9;true;publication(C, A), publication(C, B).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false', 0), ('false', 0.6049382716049383)]
Tree #2: [('true,false', 0), ('false', 0.6049382716049383)]
Tree #3: [('true,false', 0), ('false', 0.6049382716049383)]
Tree #4: [('true,false', 0), ('false', 0.6049382716049383)]
Tree #5: [('true,false', 0), ('false', 0.6049382716049383)]
Tree #6: [('true,false', 0), ('false', 0.6049382716049383)]
Tree #7: [('true,false', 0.6808510638297872)]
Tree #8: [('true,false', 0.6808510638297872)]
Tree #9: [('true,false', 0), ('false', 0.6049382716049383)]
Tree #10: [('true,false', 0.6808510638297872)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return 0.2532106634945738;  // std dev = 4,400, 81,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.7194734122109542;  // std dev = 7,30e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return 0.21951125682419345;  // std dev = 4,400, 81,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return 0.1854517692140536;  // std dev = 4,400, 81,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.4175135841583098;  // std dev = 5,16e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return 0.15307652238066252;  // std dev = 4,400, 81,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.32071184716014967;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return 0.12390263976883832;  // std dev = 4,400, 81,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return 0.09873409512618583;  // std dev = 4,400, 81,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( publication(D, A) )
%   | | then if ( professor(A) )
%   | | | then return -0.3173205300728056;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( tempadvisedby(E, B) )
%   | | | | then return 0.11125089849862295;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | | else return 0.2826794699271944;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.6826794699271944;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tempadvisedby(G, B), inphase(A, H), inphase(G, H) )
%   | | | | then return 0.016012803260527748;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(I, B) )
%   | | | | | then return 0.5160128032605277;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | | | else return 0.599346136593861;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.31732053007280564;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( publication(D, A) )
%   | | then if ( professor(A) )
%   | | | then return -0.2528567930195534;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( tempadvisedby(E, B), publication(F, B) )
%   | | | | then return 0.05810530015578295;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else if ( publication(D, G), tempadvisedby(H, G) )
%   | | | | | then return 0.3883318185746075;  // std dev = 0,844, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return -0.048108329673234494;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(I, B), inphase(A, J), inphase(I, J) )
%   | | | then return 0.1396119831413905;  // std dev = 0,928, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( projectmember(K, B) )
%   | | | | then return 0.5208463043422964;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.4268982740050795;  // std dev = 0,330, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   else return -0.2528567930195535;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return 0.03318091820156163;  // std dev = 3,307, 81,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( yearsinprogram(A, D), yearsinprogram(E, D), publication(F, E) )
%   | | then if ( publication(F, A) )
%   | | | then if ( tempadvisedby(G, B), publication(F, H), professor(H) )
%   | | | | then return 0.005597352233359576;  // std dev = 1,084, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else if ( publication(F, I), professor(I) )
%   | | | | | then return 0.21767487210987424;  // std dev = 0,729, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.1296768100902703;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( tempadvisedby(E, J), hasposition(B, K), hasposition(J, K) )
%   | | | | then return 0.1767756380376304;  // std dev = 1,136, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else if ( tempadvisedby(L, B), publication(M, B) )
%   | | | | | then return 0.29895169678791955;  // std dev = 0,325, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | | | else return 0.42292141978470854;  // std dev = 0,041, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.16327970050841195;  // std dev = 0,714, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.21364216538154612;  // std dev = 4,71e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
Results
   AUC ROC   = 0.932099
   AUC PR    = 0.932514
   CLL	      = -0.408211
   Precision = 0.875 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.823529


Total learning time: 5.294 seconds
Total inference time: 0.518 seconds
AUC ROC: 0.932099


Best model AUC ROC so far: 0.932099


Refining iteration 2
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '6;;advisedby(A, B) :- professor(B).;true;false', '6;true;publication(C, A), publication(C, B).;false;true', '6;true,false,false,false;tempadvisedby(G, B), inphase(A, H), inphase(G, H).;false;true', '6;true,false;publication(D, A).;true;true', '6;true,false,false,false,false;tempadvisedby(I, B).;false;false', '6;true,false,true;professor(A).;false;false', '6;true,false,false;projectmember(F, B).;false;true', '7;;advisedby(A, B) :- professor(B).;true;false', '7;true;publication(C, A), publication(C, B).;false;true', '7;true,false,true,false,false;publication(D, G), tempadvisedby(H, G).;false;false', '7;true,false,false,false;projectmember(K, B).;false;false', '7;true,false;publication(D, A).;true;true', '7;true,false,true,false;tempadvisedby(E, B), publication(F, B).;false;true', '7;true,false,true;professor(A).;false;true', '7;true,false,false;tempadvisedby(I, B), inphase(A, J), inphase(I, J).;true;true', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '9;;advisedby(A, B) :- professor(B).;true;false', '9;true;publication(C, A), publication(C, B).;false;true', '9;true,false,true,false,false;tempadvisedby(L, B), publication(M, B).;false;false', '9;true,false,true,false;tempadvisedby(E, J), hasposition(B, K), hasposition(J, K).;false;true', '9;true,false;yearsinprogram(A, D), yearsinprogram(E, D), publication(F, E).;true;false', '9;true,false,true,true;tempadvisedby(G, B), publication(F, H), professor(H).;false;false', '9;true,false,true;publication(F, A).;true;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0.6049382716049383)]
Tree #2: [('false', 0.6049382716049383)]
Tree #3: [('false', 0.6049382716049383)]
Tree #4: [('false', 0.6049382716049383)]
Tree #5: [('false', 0.6049382716049383)]
Tree #6: [('false', 0.6049382716049383)]
Tree #7: [('true,false,true,false,true', 0.5714285714285714), ('true,false,true,false,false', 0.6), ('true,false,false,false,true', 0.6666666666666666), ('true,false,false,false,false,true', 0.8333333333333334), ('true,false,false,false,false,false', 0.9166666666666666)]
Tree #8: [('true,false,false,true', 0.5), ('true,false,true,false,true', 0.6), ('true,false,true,false,false,false', 0.6666666666666666), ('true,false,true,false,false,true', 0.75), ('true,false,false,false,false', 0.875)]
Tree #9: [('false', 0.6049382716049383)]
Tree #10: [('true,false,true,true,false,false', 0.5), ('true,false,true,true,true', 0.6), ('true,false,true,false,true', 0.6666666666666666), ('true,false,true,true,false,true', 0.6666666666666666), ('true,false,false', 0.8333333333333334), ('true,false,true,false,false,true', 0.8461538461538461)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.28672036367094084;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then if ( inphase(A, H), inphase(G, H) )
%   | | | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.6914822684328455;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | | else if ( hasposition(B, I), hasposition(J, I), tempadvisedby(K, J) )
%   | | | | | then return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1418510649004877;  // std dev = 3,16e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.7194734122109542;  // std dev = 7,30e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, A) )
%   | | | then if ( tempadvisedby(F, B), publication(G, B) )
%   | | | | then return 0.21954674027598445;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else if ( publication(E, H), tempadvisedby(I, H) )
%   | | | | | then return 0.5561704619265166;  // std dev = 0,851, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.12612751691038213;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( tempadvisedby(J, B) )
%   | | | | then if ( inphase(A, K), inphase(J, K) )
%   | | | | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.5851860008555358;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | | else return 0.6524895469668652;  // std dev = 0,274, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return -0.12544463852839136;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(D, F), professor(F) )
%   | | | then return 0.15988406642419;  // std dev = 1,086, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else if ( publication(D, G), professor(G) )
%   | | | | then return 0.3817054463817344;  // std dev = 0,748, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.27804422410129676;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(H, B), inphase(H, I), inphase(A, I) )
%   | | | then return 0.2454122912982447;  // std dev = 0,891, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( projectmember(J, B) )
%   | | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then return 0.46125983910675544;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | | | else return 0.5087020892451607;  // std dev = 0,274, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.4175135841583098;  // std dev = 5,16e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.15952436511625784;  // std dev = 0,492, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else if ( projectmember(F, B) )
%   | | | | then return 0.4366955868588434;  // std dev = 0,066, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( inphase(A, G), inphase(D, G) )
%   | | | | | then return 0.10124677382710785;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.34884632569484214;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.2667499777949107;  // std dev = 1,025, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else if ( hasposition(B, I), hasposition(J, I), tempadvisedby(K, J) )
%   | | | | then return 0.35143233421356;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | | else return 0.4453836491526023;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.32071184716014967;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.3341729963029715;  // std dev = 0,061, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | | then return 0.12716088420964086;  // std dev = 0,492, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else if ( tempadvisedby(G, B), inphase(G, H), inphase(A, H) )
%   | | | | then return 0.0827154915653262;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( publication(I, A) )
%   | | | | | then return 0.20601202827937323;  // std dev = 1,021, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else if ( tempadvisedby(J, B) )
%   | | | | | | then return 0.26212705508354195;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | | | | else if ( hasposition(B, K), hasposition(L, K), tempadvisedby(M, L) )
%   | | | | | | | then return 0.2653662643933359;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | | | | | else return 0.33967918077297665;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), student(E) )
%   | | then if ( yearsinprogram(E, F), yearsinprogram(A, F) )
%   | | | then if ( publication(G, A) )
%   | | | | then return 0.4343040517563067;  // std dev = 0,838, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else return 0.2757493388526321;  // std dev = 0,392, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else if ( publication(H, A) )
%   | | | | then return -0.07595788970719129;  // std dev = 0,689, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( yearsinprogram(E, I), yearsinprogram(J, I), tempadvisedby(J, K) )
%   | | | | | then return 0.0021425300396520353;  // std dev = 1,134, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | else return 0.26835308620035875;  // std dev = 0,167, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( publication(L, A) )
%   | | | then return -0.11534184109497235;  // std dev = 0,856, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1993584888000799;  // std dev = 0,519, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( publication(D, A) )
%   | | then if ( professor(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09415353202923081;  // std dev = 1,547, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.22210462496475336;  // std dev = 0,056, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tempadvisedby(F, B), inphase(A, G), inphase(F, G) )
%   | | | | then return 0.015677762571308262;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(H, B) )
%   | | | | | then return 0.14507280343050477;  // std dev = 1,255, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | | | else return 0.19687775257981324;  // std dev = 0,919, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.07877675473109179;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( publication(D, A) )
%   | | then if ( professor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( tempadvisedby(E, B), publication(F, B) )
%   | | | | then return 0.016668791388451933;  // std dev = 1,004, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else if ( publication(D, G), tempadvisedby(H, G) )
%   | | | | | then return 0.27325365818011627;  // std dev = 0,768, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return -0.10391912774305707;  // std dev = 0,721, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(I, B), inphase(A, J), inphase(I, J) )
%   | | | then return 0.06639132821995217;  // std dev = 0,831, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( projectmember(K, B) )
%   | | | | then return 0.17207823672369385;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.13707241281081634;  // std dev = 1,562, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   else return -0.07324622576333704;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.30937405748700403;  // std dev = 0,721, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(F, B), publication(F, G), student(G) )
%   | | | then if ( publication(H, A), publication(F, I), tempadvisedby(J, I) )
%   | | | | then return 0.32372477319591;  // std dev = 0,739, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then if ( yearsinprogram(G, L), yearsinprogram(A, L) )
%   | | | | | | then return 0.33039257929228266;  // std dev = 0,366, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | else return 0.03176423822680256;  // std dev = 0,333, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | | | else return 0.10745292949486318;  // std dev = 0,315, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else if ( publication(M, A) )
%   | | | | then return -0.13813219559339207;  // std dev = 0,815, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.11064362389910405;  // std dev = 0,485, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( yearsinprogram(A, D), yearsinprogram(E, D), publication(F, E) )
%   | | then if ( publication(F, A) )
%   | | | then if ( tempadvisedby(G, B), publication(F, H), professor(H) )
%   | | | | then return -0.00832885168968508;  // std dev = 1,016, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else return 0.06799467272861605;  // std dev = 0,968, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else if ( tempadvisedby(E, I), hasposition(B, J), hasposition(I, J) )
%   | | | | then return 0.02549570760360456;  // std dev = 1,091, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else if ( tempadvisedby(K, B), publication(L, B) )
%   | | | | | then return 0.09998314884419802;  // std dev = 0,994, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | | | else return 0.18316200938169988;  // std dev = 0,107, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.12013791175483801;  // std dev = 0,695, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
Results
   AUC ROC   = 0.944444
   AUC PR    = 0.942853
   CLL	      = -0.295554
   Precision = 0.888889 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.888889


Total learning time: 8.723 seconds
Total inference time: 0.792 seconds
AUC ROC: 0.944444


Best model AUC ROC so far: 0.944444


Refining iteration 3
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '0;false,true,false,false,true;inphase(A, H), inphase(G, H).;false;false', '0;false,true,false,false,false;hasposition(B, I), hasposition(J, I), tempadvisedby(K, J).;false;false', '0;false,true,false,false;tempadvisedby(G, B).;true;true', '0;false,true,false;projectmember(F, B).;false;true', '0;false;professor(B), student(A).;true;false', '0;false,true;publication(D, A).;false;true', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '1;false,true,false,true;tempadvisedby(F, B), publication(G, B).;true;true', '1;false,true,false,false,true;inphase(A, K), inphase(J, K).;false;false', '1;false,true,false,false;tempadvisedby(J, B).;true;false', '1;false,true,false,true,false;publication(E, H), tempadvisedby(I, H).;false;false', '1;false,true,false;publication(E, A).;true;true', '1;false;professor(B), student(A).;true;false', '1;false,true;projectmember(D, B).;false;true', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '2;false,true,true;tempadvisedby(E, B), publication(D, F), professor(F).;false;false', '2;false,true,false,false;projectmember(J, B).;false;true', '2;false,true,false,false,false;tempadvisedby(K, B).;false;false', '2;false,true,false;tempadvisedby(H, B), inphase(H, I), inphase(A, I).;false;true', '2;false;professor(B), student(A).;true;false', '2;false,true;publication(D, A).;true;true', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '3;false,true,true;publication(E, A).;true;true', '3;false,true,false,false;hasposition(B, I), hasposition(J, I), tempadvisedby(K, J).;false;false', '3;false,true,true,false,false;inphase(A, G), inphase(D, G).;false;false', '3;false,true,true,false;projectmember(F, B).;false;true', '3;false,true,false;publication(H, A).;false;true', '3;false;professor(B), student(A).;true;false', '3;false,true;tempadvisedby(D, B).;true;true', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '4;false,true,false,false;tempadvisedby(G, B), inphase(G, H), inphase(A, H).;false;true', '4;false,true,false,false,false,false,false;hasposition(B, K), hasposition(L, K), tempadvisedby(M, L).;false;false', '4;false,true,false,false,false;publication(I, A).;false;true', '4;false,true,false,false,false,false;tempadvisedby(J, B).;false;true', '4;false,true,false;publication(E, A), tempadvisedby(F, B).;true;true', '4;false;professor(B), student(A).;true;false', '4;false,true;projectmember(D, B).;false;true', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '5;false,true,true;yearsinprogram(E, F), yearsinprogram(A, F).;true;true', '5;false,true,false;publication(L, A).;false;false', '5;false,true,true,false;publication(H, A).;false;false', '5;false,true,true,true;publication(G, A).;false;false', '5;false;professor(B), student(A).;true;false', '5;false,true;publication(D, B), publication(D, E), student(E).;true;true', '6;;advisedby(A, B) :- professor(B).;true;false', '6;true;publication(C, A), publication(C, B).;false;true', '6;true,false,false,false;tempadvisedby(F, B), inphase(A, G), inphase(F, G).;false;true', '6;true,false,false,false,false;tempadvisedby(H, B).;false;false', '6;true,false;publication(D, A).;true;true', '6;true,false,true;professor(A).;false;true', '6;true,false,false;projectmember(E, B).;false;true', '7;;advisedby(A, B) :- professor(B).;true;false', '7;true;publication(C, A), publication(C, B).;false;true', '7;true,false,true,false,false;publication(D, G), tempadvisedby(H, G).;false;false', '7;true,false,false,false;projectmember(K, B).;false;false', '7;true,false;publication(D, A).;true;true', '7;true,false,true,false;tempadvisedby(E, B), publication(F, B).;false;true', '7;true,false,true;professor(A).;false;true', '7;true,false,false;tempadvisedby(I, B), inphase(A, J), inphase(I, J).;true;true', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '8;false,true,false,true;publication(H, A), publication(F, I), tempadvisedby(J, I).;false;true', '8;false,true,false,false;publication(M, A).;false;false', '8;false,true,false,true,false;tempadvisedby(K, B).;true;false', '8;false,true,false;publication(F, B), publication(F, G), student(G).;true;true', '8;false;professor(B), student(A).;true;false', '8;false,true,false,true,false,true;yearsinprogram(G, L), yearsinprogram(A, L).;false;false', '8;false,true;tempadvisedby(D, B), publication(E, D).;true;true', '9;;advisedby(A, B) :- professor(B).;true;false', '9;true;publication(C, A), publication(C, B).;false;true', '9;true,false,true,false,false;tempadvisedby(K, B), publication(L, B).;false;false', '9;true,false,true,false;tempadvisedby(E, I), hasposition(B, J), hasposition(I, J).;false;true', '9;true,false;yearsinprogram(A, D), yearsinprogram(E, D), publication(F, E).;true;false', '9;true,false,true;publication(F, A).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,true,true', 0.5714285714285714), ('false,true,true,false', 0.6), ('false,true,false,false,true,true', 0.6666666666666666), ('false,true,false,false,true,false', 0.8333333333333334), ('false,true,false,false,false,true', 0.875)]
Tree #2: [('false,true,false,true,true', 0.6), ('false,true,false,false,true,true', 0.6666666666666666), ('false,true,false,true,false,false', 0.6666666666666666), ('false,true,false,true,false,true', 0.75), ('false,true,false,false,true,false', 0.8333333333333334), ('false,true,false,false,false', 0.9166666666666666)]
Tree #3: [('false,true,true,false,false', 0.5), ('false,true,false,true', 0.5), ('false,true,true,true', 0.6), ('false,true,true,false,true', 0.6666666666666666), ('false,true,false,false,false,true', 0.8333333333333334), ('false,true,false,false,false,false', 0.9166666666666666)]
Tree #4: [('false,true,true,true', 0.5714285714285714), ('false,true,false,true', 0.6), ('false,true,true,false,false,true', 0.6666666666666666), ('false,true,true,false,false,false', 0.8333333333333334), ('false,true,false,false,true', 0.875)]
Tree #5: [('false,true,false,true', 0.5714285714285714), ('false,true,false,false,false,true', 0.6), ('false,true,false,false,true', 0.6666666666666666), ('false,true,false,false,false,false,true', 0.8333333333333334), ('false,true,false,false,false,false,false,true', 0.875)]
Tree #6: [('false,true,true,false,false,true', 0.6666666666666666), ('false,true,true,false,true', 0.6666666666666666), ('false,true,false,true', 0.75), ('false,true,true,true,true', 0.8), ('false,true,false,false', 0.8333333333333334), ('false,true,true,true,false', 0.8571428571428571), ('false,true,true,false,false,false', 0.9166666666666666)]
Tree #7: [('true,false,true,false', 0.5), ('true,false,false,false,true', 0.6666666666666666), ('true,false,false,false,false,true', 0.8333333333333334), ('true,false,false,false,false,false', 0.9166666666666666)]
Tree #8: [('true,false,false,true', 0.5), ('true,false,true,false,true', 0.6), ('true,false,true,false,false,false', 0.6666666666666666), ('true,false,true,false,false,true', 0.75), ('true,false,false,false,false', 0.875)]
Tree #9: [('false,true,true', 0.6666666666666666), ('false,true,false,true,false,true,false', 0.75), ('false,true,false,false,true', 0.75), ('false,true,false,true,true', 0.8), ('false,true,false,true,false,false', 0.8333333333333334), ('false,true,false,false,false', 0.8333333333333334)]
Tree #10: [('true,false,true,true,false', 0.5714285714285714), ('true,false,true,true,true', 0.6), ('true,false,true,false,true', 0.6666666666666666), ('true,false,false', 0.8333333333333334), ('true,false,true,false,false,true', 0.8461538461538461)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tempadvisedby(F, B) )
%   | | | | then if ( inphase(A, G), inphase(F, G) )
%   | | | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.6914822684328455;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | | else if ( hasposition(B, H), hasposition(I, H), tempadvisedby(J, I) )
%   | | | | | then return 0.7331489350995123;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1418510649004877;  // std dev = 3,16e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.7194734122109542;  // std dev = 7,30e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, A) )
%   | | | then if ( tempadvisedby(F, B), publication(G, B) )
%   | | | | then return 0.20874113578563494;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else if ( publication(E, H), tempadvisedby(I, H) )
%   | | | | | then return 0.558741135785635;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.14207446911896834;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( tempadvisedby(J, B) )
%   | | | | then if ( inphase(A, K), inphase(J, K) )
%   | | | | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.5851860008555358;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | | else return 0.6524895469668652;  // std dev = 0,950, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return -0.12544463852839136;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(D, F), professor(F) )
%   | | | then return 0.14760395664659134;  // std dev = 1,086, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3315785012027416;  // std dev = 1,261, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( tempadvisedby(G, B), inphase(G, H), inphase(A, H) )
%   | | | then return 0.2454122912982447;  // std dev = 0,891, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( projectmember(I, B) )
%   | | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then return 0.46125983910675544;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | | | else return 0.5087020892451607;  // std dev = 0,948, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.4175135841583098;  // std dev = 5,16e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.14530807124345488;  // std dev = 0,491, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else if ( projectmember(F, B) )
%   | | | | then return 0.4366955868588434;  // std dev = 0,066, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( inphase(A, G), inphase(D, G) )
%   | | | | | then return 0.10124677382710785;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.34884632569484214;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.2886524448798498;  // std dev = 1,032, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else if ( hasposition(B, I), hasposition(J, I), tempadvisedby(K, J) )
%   | | | | then return 0.35143233421356;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | | else return 0.4453836491526023;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.32071184716014967;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.3341729963029715;  // std dev = 0,061, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | | then return 0.11504377742725357;  // std dev = 0,491, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else if ( tempadvisedby(G, B), inphase(G, H), inphase(A, H) )
%   | | | | then return 0.0827154915653262;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( publication(I, A) )
%   | | | | | then return 0.22431992112512017;  // std dev = 1,027, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else if ( tempadvisedby(J, B) )
%   | | | | | | then return 0.26212705508354195;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | | | | else if ( hasposition(B, K), hasposition(L, K), tempadvisedby(M, L) )
%   | | | | | | | then return 0.2653662643933359;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | | | | | else return 0.33967918077297665;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), student(E) )
%   | | then if ( yearsinprogram(E, F), yearsinprogram(A, F) )
%   | | | then if ( publication(G, A) )
%   | | | | then return 0.4334396494983442;  // std dev = 0,837, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else return 0.2757493388526321;  // std dev = 1,038, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else if ( publication(H, A) )
%   | | | | then return -0.06105037694273646;  // std dev = 0,701, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.17961623414678973;  // std dev = 1,380, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.12497327109387645;  // std dev = 0,857, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1993584888000799;  // std dev = 0,519, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( publication(D, A) )
%   | | then if ( professor(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( tempadvisedby(E, B), publication(F, B) )
%   | | | | then return 0.027186821393701453;  // std dev = 1,003, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else return 0.14166167556358716;  // std dev = 0,441, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.22945291033602694;  // std dev = 0,047, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tempadvisedby(H, B), inphase(A, I), inphase(H, I) )
%   | | | | then return 0.02203162591946008;  // std dev = 0,801, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then return 0.14812207186796822;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | | | else return 0.1881587918141494;  // std dev = 0,942, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.07877675473109179;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( publication(D, A) )
%   | | then if ( professor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( tempadvisedby(E, B), publication(F, B) )
%   | | | | then return 0.02090263193423072;  // std dev = 1,002, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else if ( publication(D, G), tempadvisedby(H, G) )
%   | | | | | then return 0.2709452684737918;  // std dev = 0,779, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return -0.10981636606515942;  // std dev = 0,710, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(I, B), inphase(A, J), inphase(I, J) )
%   | | | then return 0.06983260876967118;  // std dev = 0,822, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( projectmember(K, B) )
%   | | | | then return 0.17953817575740647;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.13489864994780745;  // std dev = 1,601, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   else return -0.07324622576333704;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.3061062362891754;  // std dev = 0,720, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(F, B), publication(F, G), student(G) )
%   | | | then if ( publication(H, A), publication(F, I), tempadvisedby(J, I) )
%   | | | | then return 0.32577566152878856;  // std dev = 0,733, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then if ( yearsinprogram(G, L), yearsinprogram(A, L) )
%   | | | | | | then return 0.3298203426574177;  // std dev = 0,365, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | else return 0.04019249390416151;  // std dev = 0,981, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | | | else return 0.10301153770620848;  // std dev = 1,106, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else if ( publication(M, A) )
%   | | | | then return -0.15014489706834172;  // std dev = 0,810, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.11016096730986247;  // std dev = 0,487, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( yearsinprogram(A, D), yearsinprogram(E, D), publication(F, E) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.0364061189675298;  // std dev = 1,405, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else if ( tempadvisedby(E, G), hasposition(B, H), hasposition(G, H) )
%   | | | | then return 0.01755663392526328;  // std dev = 1,109, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | | | | then return 0.10574940990937182;  // std dev = 0,995, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | | | else return 0.18547909448629116;  // std dev = 0,085, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.13108789837809343;  // std dev = 0,712, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
Results
   AUC ROC   = 0.944444
   AUC PR    = 0.933818
   CLL	      = -0.298052
   Precision = 0.888889 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.888889


Total learning time: 8.26 seconds
Total inference time: 0.58 seconds
AUC ROC: 0.944444


Best model AUC ROC so far: 0.944444


******************************************
Best model found
******************************************
Total revision time: 28.751
Best validation AUC ROC: 0.944444


Results
   AUC ROC   = 0.9575
   AUC PR    = 0.91467
   CLL	      = -0.321684
   Precision = 0.933333 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.8


Total inference time: 0.582 seconds
AUC ROC: 0.9575
Dataset: imdb,uwcse, Run: 1, Fold: 2, Type: transfer, Total folds for small set: 2, Time: 00:04:37
{'CLL': -0.321684, 'Recall': 0.7, 'Learning time': 28.751, 'Precision': [0.933333, 0.5], 'Mapping Results': {'Possible mappings': 1080, 'Total time': 2.7960736751556396, 'Generating mappings time': 0.06946086883544922, 'Finding best mapping': 0.13756179809570312, 'Generating paths time': 2.5728328227996826, 'Knowledge compiling time': 0.01621103286743164}, 'Parameter Learning Results': {'CLL': -0.34581, 'Recall': 1.0, 'Precision': [0.869565, 0.5], 'AUC ROC': 0.95875, 'F1': 0.930233, 'AUC PR': 0.953338}, 'AUC ROC': 0.9575, 'F1': 0.8, 'AUC PR': 0.91467, 'Inference time': 0.582}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.28672036367094084;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then if ( projectmember(G, B) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( inphase(A, H), inphase(F, H) )
%   | | | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.6914822684328455;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else if ( hasposition(B, I), hasposition(J, I), tempadvisedby(K, J) )
%   | | | | then return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.1418510649004877;  // std dev = 3,16e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.7194734122109542;  // std dev = 7,30e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(F, B) )
%   | | | then return 0.21954674027598445;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else if ( publication(D, G), tempadvisedby(H, G) )
%   | | | | then return 0.5561704619265166;  // std dev = 0,851, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.12612751691038213;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then if ( projectmember(J, B) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( inphase(A, K), inphase(I, K) )
%   | | | | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.5851860008555358;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.6524895469668652;  // std dev = 0,274, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.12544463852839136;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), student(D) )
%   | then if ( yearsinprogram(D, E), yearsinprogram(A, E) )
%   | | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return 0.23027284708035203;  // std dev = 0,965, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6116138917911503;  // std dev = 0,086, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.08099718961835725;  // std dev = 0,742, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( yearsinprogram(D, I), yearsinprogram(J, I), tempadvisedby(J, K) )
%   | | | | then return 0.273098773031162;  // std dev = 1,140, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else if ( tempadvisedby(L, B), inphase(D, M) )
%   | | | | | then return 0.42313510670062454;  // std dev = 0,709, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.5860923360317806;  // std dev = 0,069, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(N, A) )
%   | | then return 2.934323091259017E-4;  // std dev = 0,835, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.44851665304805777;  // std dev = 0,703, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360642;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), student(D) )
%   | then if ( publication(C, A) )
%   | | then return 0.4149747079328986;  // std dev = 0,125, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( tempadvisedby(E, B), inphase(D, F) )
%   | | | then if ( inphase(A, F) )
%   | | | | then if ( publication(G, E) )
%   | | | | | then return -0.03705304154436021;  // std dev = 0,757, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.41593251712878776;  // std dev = 0,332, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | | else return 0.2504037026721031;  // std dev = 0,920, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then return 0.4348120950733995;  // std dev = 0,061, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.3940325060903511;  // std dev = 0,316, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( publication(I, A) )
%   | | then return 2.386854690413498E-4;  // std dev = 0,835, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.3427443628608203;  // std dev = 0,674, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783635;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.14111797490825992;  // std dev = 0,889, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(E, B), publication(E, F), student(F) )
%   | | then if ( tempadvisedby(F, G) )
%   | | | then return 0.3428380969940224;  // std dev = 0,067, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(H, A), publication(H, I), publication(E, I) )
%   | | | | then return 0.33533445864656747;  // std dev = 0,070, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | | else if ( inphase(F, J), tempadvisedby(K, B) )
%   | | | | | then if ( inphase(A, J) )
%   | | | | | | then return 0.23992856247862065;  // std dev = 0,887, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | else return 0.19457353647721906;  // std dev = 0,909, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return 0.296587024994993;  // std dev = 0,292, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else if ( publication(L, A) )
%   | | | then return 1.9414708637990885E-4;  // std dev = 0,835, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2612942592614092;  // std dev = 0,664, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), tempadvisedby(E, D) )
%   | then if ( publication(C, A), publication(F, E) )
%   | | then return 0.3225514415636292;  // std dev = 0,098, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | | then return 0.16848999887152608;  // std dev = 0,245, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else if ( publication(I, E) )
%   | | | | then if ( tempadvisedby(J, B) )
%   | | | | | then return 0.11490873790839197;  // std dev = 1,149, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | else if ( publication(K, A), publication(I, L), publication(C, L) )
%   | | | | | | then return 0.314046620024875;  // std dev = 0,212, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | else return 0.13131478528112606;  // std dev = 0,372, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | else return 0.2847250084689476;  // std dev = 0,175, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( tempadvisedby(M, B) )
%   | | then return 0.12963060187953088;  // std dev = 0,929, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.05653142432710936;  // std dev = 0,550, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, C) )
%   | | then return 0.061740065870868076;  // std dev = 0,866, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.2389757408565888;  // std dev = 0,076, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(F, B), publication(F, G), student(G) )
%   | | | | then if ( tempadvisedby(G, H) )
%   | | | | | then return 0.24402353856787817;  // std dev = 0,065, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else if ( publication(I, A), publication(I, J), publication(F, J) )
%   | | | | | | then return 0.2413223702115726;  // std dev = 0,075, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | | | else if ( inphase(A, K), inphase(G, K) )
%   | | | | | | | then return 0.13305768587638447;  // std dev = 0,866, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | | else return 0.12224130088920122;  // std dev = 0,920, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return 0.0035592497324188786;  // std dev = 0,959, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.17792606328972144;  // std dev = 0,256, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.19853001785530533;  // std dev = 0,066, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), publication(D, E), tempadvisedby(F, E) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.18940545548261992;  // std dev = 0,139, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then if ( publication(H, A), publication(H, I), professor(I) )
%   | | | | | then return -0.10861156130835625;  // std dev = 0,603, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else if ( publication(J, F) )
%   | | | | | | then return 0.11111107982042341;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | | | else if ( publication(D, K), inphase(K, L) )
%   | | | | | | | then return 0.1555564977427076;  // std dev = 0,678, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | | else return 0.09724471993526791;  // std dev = 0,424, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.16471075274012031;  // std dev = 0,252, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else return -0.0038106271085340446;  // std dev = 1,039, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 9,13e-09, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, C) )
%   | | then return 0.026829047380592375;  // std dev = 0,841, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.16899774817669105;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(F, B), publication(F, G), student(G) )
%   | | | | then if ( tempadvisedby(G, H) )
%   | | | | | then return 0.17973961662033672;  // std dev = 0,063, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else if ( publication(I, A), publication(I, J), publication(F, J) )
%   | | | | | | then return 0.1818434268485824;  // std dev = 0,086, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | | | else if ( inphase(A, K), inphase(G, K) )
%   | | | | | | | then return 0.0778058909341808;  // std dev = 0,865, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | | else return 0.07400393467152987;  // std dev = 0,902, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return -0.004437465589007128;  // std dev = 0,958, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.11934024983265144;  // std dev = 0,255, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else return -0.06842697784420274;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A), publication(D, B) )
%   | then return 0.14764009244270124;  // std dev = 0,141, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( projectmember(E, B) )
%   | | then return 0.14669359231812718;  // std dev = 0,052, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B), inphase(F, G), inphase(A, G) )
%   | | | then return -0.15304682727284516;  // std dev = 0,791, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(H, B), publication(I, A), tempadvisedby(J, B) )
%   | | | | then return -0.03891951667456256;  // std dev = 0,761, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else if ( publication(K, B) )
%   | | | | | then if ( publication(K, A) )
%   | | | | | | then return 0.13710401513727546;  // std dev = 0,051, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | | | else if ( tempadvisedby(L, B) )
%   | | | | | | | then return 0.10549328056683947;  // std dev = 0,333, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | | | | | else return 0.07617314644778464;  // std dev = 0,303, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | | | else return 0.21353249560023094;  // std dev = 0,708, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
Results
   AUC ROC   = 0.99125
   AUC PR    = 0.9909
   CLL	      = -0.273217
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.857143


Total learning time: 22.146 seconds
Total inference time: 0.684 seconds
AUC ROC: 0.99125


Dataset: imdb,uwcse, Run: 1, Fold: 2, Type: scratch, Total folds for small set: 2, Time: 00:05:00
{'CLL': -0.273217, 'Recall': 0.75, 'Learning time': 22.146, 'Precision': [1.0, 0.5], 'AUC ROC': 0.99125, 'F1': 0.857143, 'AUC PR': 0.9909, 'Inference time': 0.684}


Best mapping found: ['female(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.29e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [1.03e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [0.0, 5, 0], 'true,true': [0.108, 0, 382], 'true,false': [0.0, 22, 0], 'false,false,true': [0.0, 4, 0], 'false,true': [7.6e-08, 351, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [0.0, 5, 0], 'true,true': [0.095, 0, 382], 'true,false': [0.0, 22, 0], 'false,false,true': [0.0, 4, 0], 'false,true': [7.3e-08, 351, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 378, 0], 'true,false': [0.084, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [0.0, 5, 0], 'true,true': [0.079, 0, 382], 'true,false': [5.27e-09, 22, 0], 'false,false,true': [0.0, 4, 0], 'false,true': [1.61e-07, 351, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B).;true;false', '6;true;publication(C, A), publication(C, B).;false;false', '7;;advisedby(A, B) :- professor(B).;true;false', '7;true;publication(C, A), publication(C, B).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '8;true;student(A).;false;false', '9;;advisedby(A, B) :- professor(B).;true;false', '9;true;publication(C, A), publication(C, B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8268989350995116;  // std dev = 0,984, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.250741527692105;  // std dev = 5,674, 135,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=53 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.6944871741022817;  // std dev = 0,984, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.21739919898777782;  // std dev = 5,674, 135,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=53 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.537956368094408;  // std dev = 0,984, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.18374060668235545;  // std dev = 5,674, 135,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=53 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.40427534870541976;  // std dev = 0,984, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.1517597085683981;  // std dev = 5,674, 135,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=53 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.308677385992496;  // std dev = 0,984, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.12293469695565454;  // std dev = 5,674, 135,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=53 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.24317325423374328;  // std dev = 0,984, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.09805030820767882;  // std dev = 5,674, 135,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=53 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.18911333408214992;  // std dev = 1,021, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | else return 0.35556831546460355;  // std dev = 4,176, 79,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=53 */
%   else return -0.31531776048476357;  // std dev = 8,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15797700333353215;  // std dev = 1,017, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | else return 0.27432281562558825;  // std dev = 4,176, 79,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=53 */
%   else return -0.2514880466313975;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.1420297819162656;  // std dev = 0,984, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else return -0.10793651211969034;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.035316491408856045;  // std dev = 4,803, 135,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=53 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.11593231749679565;  // std dev = 1,008, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | else return 0.1983998371720417;  // std dev = 4,176, 79,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=53 */
%   else return -0.21301220615457342;  // std dev = 4,71e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
Results
   AUC ROC   = 0.960938
   AUC PR    = 0.953206
   CLL	      = -0.363953
   Precision = 0.888889 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.941176


Total learning time: 3.749 seconds
Total inference time: 0.523 seconds
AUC ROC: 0.960938


Results in test set
   AUC ROC   = 0.960938
   AUC PR    = 0.953206
   CLL	      = -0.363953
   Precision = 0.888889 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.941176


Total inference time: 0.523 seconds
AUC ROC: 0.960938
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.984, 1, 31], 'false': [5.674, 82, 53], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.984, 1, 31], 'false': [5.674, 82, 53], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.984, 1, 31], 'false': [5.674, 82, 53], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.984, 1, 31], 'false': [5.674, 82, 53], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.984, 1, 31], 'false': [5.674, 82, 53], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.984, 1, 31], 'false': [5.674, 82, 53], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.021, 2, 31], 'false': [8.94e-08, 56, 0], 'true,false': [4.176, 26, 53]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.017, 2, 31], 'false': [0.0, 56, 0], 'true,false': [4.176, 26, 53]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.984, 1, 31], 'false': [4.803, 82, 53], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.008, 2, 31], 'false': [4.71e-08, 56, 0], 'true,false': [4.176, 26, 53]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B).;false;false', '7;;advisedby(A, B) :- professor(B).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '8;true;student(A).;false;false', '9;;advisedby(A, B) :- professor(B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0.6074074074074074), ('true,true', 0.96875)]
Tree #2: [('false', 0.6074074074074074), ('true,true', 0.96875)]
Tree #3: [('false', 0.6074074074074074), ('true,true', 0.96875)]
Tree #4: [('false', 0.6074074074074074), ('true,true', 0.96875)]
Tree #5: [('false', 0.6074074074074074), ('true,true', 0.96875)]
Tree #6: [('false', 0.6074074074074074), ('true,true', 0.96875)]
Tree #7: [('true,false', 0.6708860759493671), ('true,true', 0.9393939393939394)]
Tree #8: [('true,false', 0.6708860759493671), ('true,true', 0.9393939393939394)]
Tree #9: [('false', 0.6074074074074074), ('true,true', 0.96875)]
Tree #10: [('true,false', 0.6708860759493671), ('true,true', 0.9393939393939394)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.797542874493451;  // std dev = 0,239, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), tempadvisedby(E, B) )
%   | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then if ( projectmember(H, B) )
%   | | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(I, B) )
%   | | | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(J, B), publication(J, K), student(K) )
%   | | | | then return 0.7555848325354089;  // std dev = 0,303, 39,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | | | | else if ( projectmember(L, B) )
%   | | | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.39148226843284567;  // std dev = 0,499, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.6709353438575804;  // std dev = 0,239, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), tempadvisedby(E, B) )
%   | | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(F, B), publication(F, G), student(G) )
%   | | | then return 0.5901592710807942;  // std dev = 0,355, 44,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | | else if ( projectmember(H, B) )
%   | | | | then return 0.7194734122109545;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else if ( tempadvisedby(I, B), inphase(I, J), inphase(A, J) )
%   | | | | | then return -0.1862341062526105;  // std dev = 0,035, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | else if ( tempadvisedby(K, B), publication(L, A) )
%   | | | | | | then return 0.17780077116908896;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else if ( tempadvisedby(M, B) )
%   | | | | | | | then return 0.8035320457179341;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.35908760127348965;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5215235430179138;  // std dev = 0,239, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(G, B), publication(E, H), professor(H) )
%   | | | | then return -0.02854471588205232;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.20956567369087523;  // std dev = 1,027, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.6331531036599736;  // std dev = 0,118, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(J, B), publication(J, K), tempadvisedby(K, B) )
%   | | | | then return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( publication(L, B), publication(L, M), student(M) )
%   | | | | | then return 0.4940035748599013;  // std dev = 0,322, 34,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=30 */
%   | | | | | else return 0.2956271833124839;  // std dev = 0,437, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else return -0.1123163781936063;  // std dev = 4,08e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.39203588485895;  // std dev = 0,239, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(G, B), publication(E, H), professor(H) )
%   | | | | then return -0.022844857485176617;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.17572104924410042;  // std dev = 1,020, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(I, B), publication(I, J), tempadvisedby(J, B) )
%   | | | then return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(K, A) )
%   | | | | then return 0.4799275039218371;  // std dev = 0,134, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else if ( publication(L, B), publication(L, M), student(M) )
%   | | | | | then return 0.3724173296108005;  // std dev = 0,322, 34,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=30 */
%   | | | | | else return 0.23367003018927804;  // std dev = 0,431, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else return -0.10159632948783623;  // std dev = 3,49e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.29785780558460623;  // std dev = 0,239, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(G, B), publication(E, H), professor(H) )
%   | | | | then return -0.018336019321287103;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.14425262572952866;  // std dev = 1,013, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( projectmember(I, B) )
%   | | | then return 0.4136773326426745;  // std dev = 0,028, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( publication(J, B), publication(J, K), student(K) )
%   | | | | then return 0.2607564956002435;  // std dev = 0,329, 41,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | | | else if ( tempadvisedby(L, B), inphase(L, M), inphase(A, M) )
%   | | | | | then return -0.2562684495522379;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0.25485523250500125;  // std dev = 0,446, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.23259338372190075;  // std dev = 0,239, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.2945439002325828;  // std dev = 0,090, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(E, B), publication(E, F), student(F) )
%   | | | then if ( tempadvisedby(G, B), yearsinprogram(F, H), yearsinprogram(A, H) )
%   | | | | then return 0.41157195855261297;  // std dev = 0,141, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | else if ( tempadvisedby(I, B), inphase(F, J) )
%   | | | | | then return -0.001872050539287251;  // std dev = 0,410, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | | | else return 0.2349339438979533;  // std dev = 0,285, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else if ( tempadvisedby(K, B), inphase(K, L), inphase(A, L) )
%   | | | | then return -0.2094258747279022;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else if ( tempadvisedby(M, B) )
%   | | | | | then return 0.2583317246433389;  // std dev = 0,948, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | else return 0.1053895228317213;  // std dev = 0,484, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return -0.0851847513883968;  // std dev = 1,67e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.14088675344627444;  // std dev = 3,303, 112,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=84 */
%   else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.11434896085736335;  // std dev = 3,296, 112,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=84 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.14238166780854472;  // std dev = 0,239, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.1945260113900394;  // std dev = 0,067, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(E, B), publication(E, F), student(F) )
%   | | | then if ( tempadvisedby(G, B), yearsinprogram(F, H), yearsinprogram(A, H) )
%   | | | | then return 0.2755285145117102;  // std dev = 0,132, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | | | | then return -0.3169002754197961;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0.09318480844384973;  // std dev = 0,350, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | | else if ( tempadvisedby(K, B), inphase(K, L), inphase(A, L) )
%   | | | | then return -0.21711124226031997;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else if ( tempadvisedby(M, B) )
%   | | | | | then return 0.14118274697517433;  // std dev = 0,943, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | else return 0.0162116140914867;  // std dev = 0,485, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return -0.0714248900930192;  // std dev = 0,072, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.07731556188480622;  // std dev = 3,217, 112,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=84 */
%   else return -0.06401198686815371;  // std dev = 2,41e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.163076
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.54 seconds
Total inference time: 0.595 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


Refining iteration 2
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '0;false,true,false,true;projectmember(H, B).;false;true', '0;false,true,false,false,false;projectmember(L, B).;false;true', '0;false,true,false,false;publication(J, B), publication(J, K), student(K).;false;true', '0;false,true,false,true,false;publication(I, B).;false;false', '0;false,true,false;publication(F, A), tempadvisedby(G, B).;true;true', '0;false;professor(B), student(A).;true;false', '0;false,true;publication(D, B), publication(D, E), tempadvisedby(E, B).;false;true', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '1;false,true,false,false;projectmember(H, B).;false;true', '1;false,true,false,false,false,false,false;tempadvisedby(M, B).;false;true', '1;false,true,false,false,false;tempadvisedby(I, B), inphase(I, J), inphase(A, J).;false;true', '1;false,true,false,false,false,false;tempadvisedby(K, B), publication(L, A).;false;true', '1;false,true,false;publication(F, B), publication(F, G), student(G).;false;true', '1;false;professor(B), student(A).;true;false', '1;false,true;publication(D, B), publication(D, E), tempadvisedby(E, B).;false;true', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '2;false,true,true;projectmember(F, B).;false;true', '2;false,true,false,false;publication(J, B), publication(J, K), tempadvisedby(K, B).;false;false', '2;false,true,true,false;publication(G, B), publication(E, H), professor(H).;false;false', '2;false,true,false;publication(I, A).;false;true', '2;false;professor(B), student(A).;true;false', '2;false,true;tempadvisedby(D, B), publication(E, A).;true;true', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '3;false,true,true;projectmember(F, B).;false;true', '3;false,true,false,false;publication(K, A).;false;false', '3;false,true,true,false;publication(G, B), publication(E, H), professor(H).;false;false', '3;false,true,false;publication(I, B), publication(I, J), tempadvisedby(J, B).;false;true', '3;false;professor(B), student(A).;true;false', '3;false,true;tempadvisedby(D, B), publication(E, A).;true;true', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '4;false,true,true;projectmember(F, B).;false;false', '4;false,true,false,false;publication(J, B), publication(J, K), student(K).;false;true', '4;false,true,false,false,false;tempadvisedby(L, B), inphase(L, M), inphase(A, M).;false;false', '4;false,true,false;projectmember(I, B).;false;true', '4;false;professor(B), student(A).;true;false', '4;false,true;tempadvisedby(D, B), publication(E, A).;true;true', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '5;false,true,false,true;tempadvisedby(G, B), yearsinprogram(F, H), yearsinprogram(A, H).;false;false', '5;false,true,false,false,false;tempadvisedby(M, B).;false;false', '5;false,true,false,false;tempadvisedby(K, B), inphase(K, L), inphase(A, L).;false;true', '5;false,true,false;publication(E, B), publication(E, F), student(F).;true;true', '5;false;professor(B), student(A).;true;false', '5;false,true;projectmember(D, B).;false;true', '6;;advisedby(A, B) :- professor(B).;true;false', '7;;advisedby(A, B) :- professor(B).;true;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '8;false,true,false,true;tempadvisedby(G, B), yearsinprogram(F, H), yearsinprogram(A, H).;false;true', '8;false,true,false,false;tempadvisedby(K, B), inphase(K, L), inphase(A, L).;false;false', '8;false,true,false,true,false;tempadvisedby(I, B), publication(J, A).;false;false', '8;false,true,false;publication(E, B), publication(E, F), student(F).;true;true', '8;false;professor(B), student(A).;true;false', '8;false,true;projectmember(D, B).;false;true', '9;;advisedby(A, B) :- professor(B).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,false,false,false,false', 0.5333333333333333), ('false,true,false,true,false,true', 0.6), ('false,true,true', 0.75), ('false,true,false,true,false,false', 0.75), ('false,true,false,false,true', 0.8974358974358975), ('true', 0.9393939393939394)]
Tree #2: [('false,true,false,false,false,false,false,false', 0.5555555555555556), ('false,true,false,false,false,false,true', 0.6666666666666666), ('false,true,true', 0.75), ('false,true,false,true', 0.8409090909090909), ('true', 0.9393939393939394)]
Tree #3: [('false,true,false,false,false,false', 0.5882352941176471), ('false,true,true,false,false', 0.6), ('false,true,true,false,true', 0.75), ('false,true,false,false,true', 0.75), ('false,true,false,false,false,true', 0.8823529411764706), ('true', 0.9393939393939394)]
Tree #4: [('false,true,false,false,false,false', 0.5882352941176471), ('false,true,true,false,false', 0.6), ('false,true,false,true', 0.75), ('false,true,true,false,true', 0.75), ('false,true,false,false,false,true', 0.8823529411764706), ('true', 0.9393939393939394)]
Tree #5: [('false,true,true,false,false', 0.6), ('false,true,false,false,false,false', 0.6666666666666666), ('false,true,true,false,true', 0.75), ('false,true,false,false,true', 0.8292682926829268), ('true', 0.9393939393939394)]
Tree #6: [('false,true,false,true,false,true', 0.5333333333333333), ('false,true,false,false,false,false', 0.5555555555555556), ('false,true,false,false,false,true', 0.6666666666666666), ('false,true,false,true,false,false', 0.9090909090909091), ('true', 0.9393939393939394)]
Tree #7: [('true', 0.75)]
Tree #8: [('true', 0.75)]
Tree #9: [('false,true,false,false,false,false', 0.5555555555555556), ('false,true,false,false,false,true', 0.6666666666666666), ('false,true,false,true,false,false', 0.7941176470588235), ('true', 0.9393939393939394)]
Tree #10: [('true', 0.75)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.797542874493451;  // std dev = 1,371, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), tempadvisedby(E, B) )
%   | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then if ( projectmember(H, B) )
%   | | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(I, B) )
%   | | | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(J, B), publication(J, K), student(K) )
%   | | | | then return 0.7555848325354089;  // std dev = 1,895, 39,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | | | | else if ( projectmember(L, B) )
%   | | | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.39148226843284567;  // std dev = 0,499, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.6709353438575804;  // std dev = 1,371, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), tempadvisedby(E, B) )
%   | | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(F, B), publication(F, G), student(G) )
%   | | | then return 0.5901592710807942;  // std dev = 2,355, 44,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | | else if ( projectmember(H, B) )
%   | | | | then return 0.7194734122109545;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else if ( tempadvisedby(I, B), inphase(I, J), inphase(A, J) )
%   | | | | | then return -0.1862341062526105;  // std dev = 0,035, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | else if ( tempadvisedby(K, B), publication(L, A) )
%   | | | | | | then return 0.17780077116908896;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else if ( tempadvisedby(M, B) )
%   | | | | | | | then return 0.8035320457179341;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.35908760127348965;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5215235430179138;  // std dev = 1,371, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(G, B), publication(E, H), professor(H) )
%   | | | | then return -0.02854471588205232;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.20956567369087523;  // std dev = 1,027, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.6331531036599736;  // std dev = 0,118, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(J, B), publication(J, K), tempadvisedby(K, B) )
%   | | | | then return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.42787811101076223;  // std dev = 2,687, 51,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=40 */
%   | else return -0.1123163781936063;  // std dev = 4,08e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.39203588485895;  // std dev = 1,371, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(G, B), publication(E, H), professor(H) )
%   | | | | then return -0.022844857485176617;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.17572104924410042;  // std dev = 1,020, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(I, B), publication(I, J), tempadvisedby(J, B) )
%   | | | then return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(K, A) )
%   | | | | then return 0.4799275039218371;  // std dev = 0,134, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else return 0.32736093107579023;  // std dev = 2,655, 51,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=40 */
%   | else return -0.10159632948783623;  // std dev = 3,49e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.29785780558460623;  // std dev = 1,371, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07199100570694389;  // std dev = 1,355, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.392036722269292;  // std dev = 0,061, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( publication(H, B), publication(H, I), student(I) )
%   | | | | then return 0.28177039299658735;  // std dev = 2,116, 41,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | | | else if ( tempadvisedby(J, B), inphase(J, K), inphase(A, K) )
%   | | | | | then return -0.3016374047678622;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0.2046491018276028;  // std dev = 1,554, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.23259338372190075;  // std dev = 1,371, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.28551534326454253;  // std dev = 0,086, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(E, B), publication(E, F), student(F) )
%   | | | then if ( tempadvisedby(G, B), yearsinprogram(F, H), yearsinprogram(A, H) )
%   | | | | then return 0.42739299116299073;  // std dev = 0,394, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | else return 0.1503120010566226;  // std dev = 2,212, 37,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else if ( tempadvisedby(I, B), inphase(I, J), inphase(A, J) )
%   | | | | then return -0.23021569236731473;  // std dev = 0,041, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then return 0.24380036172883582;  // std dev = 0,915, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | else return 0.068032111951271;  // std dev = 1,466, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return -0.0851847513883968;  // std dev = 1,67e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(D, C), publication(E, D) )
%   | then if ( publication(E, B) )
%   | | then return 0.24628591758229745;  // std dev = 0,163, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.2311957260687476;  // std dev = 0,075, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else if ( tempadvisedby(G, B), publication(E, H), tempadvisedby(I, H) )
%   | | | | then if ( publication(J, A) )
%   | | | | | then return -0.14645709751580657;  // std dev = 0,347, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | | | else if ( yearsinprogram(G, C) )
%   | | | | | | then return -0.1889384394426022;  // std dev = 0,708, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | | else return 0.1379391875659528;  // std dev = 0,379, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | | else if ( tempadvisedby(D, K), hasposition(K, L), hasposition(B, L) )
%   | | | | | then return 0.3245223766401759;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | | else return 0.10169960582321284;  // std dev = 0,442, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return -0.11881470754570554;  // std dev = 0,301, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( professor(A) )
%   | then return -0.16475135374977395;  // std dev = 0,231, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( publication(C, B), publication(C, D), student(D) )
%   | | then if ( tempadvisedby(E, B), yearsinprogram(D, F), yearsinprogram(A, F) )
%   | | | then return 0.1965121023355891;  // std dev = 0,187, 34,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return 0.11583706328971335;  // std dev = 0,317, 46,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=36 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.18048613821948986;  // std dev = 0,026, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(H, A) )
%   | | | | then return 0.08381493630205614;  // std dev = 0,903, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else if ( tempadvisedby(I, B), inphase(A, J), inphase(I, J) )
%   | | | | | then return -0.1909293994213339;  // std dev = 0,042, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else if ( tempadvisedby(K, B) )
%   | | | | | | then return 0.3432521022785006;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return -0.013154148209097154;  // std dev = 0,493, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.12017185722714663;  // std dev = 1,289, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.16896939046847947;  // std dev = 0,071, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(E, B), publication(E, F), student(F) )
%   | | | then if ( tempadvisedby(G, B), yearsinprogram(F, H), yearsinprogram(A, H) )
%   | | | | then return 0.24991196184300513;  // std dev = 0,347, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | | | | then return -0.30759258635535697;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0.10337197204759925;  // std dev = 2,018, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | | else if ( tempadvisedby(K, B), inphase(K, L), inphase(A, L) )
%   | | | | then return -0.16061295451720958;  // std dev = 0,039, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else return 0.08155561081064724;  // std dev = 1,697, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else return -0.06766014774267813;  // std dev = 0,018, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(D, C), publication(E, D) )
%   | then if ( publication(E, B) )
%   | | then return 0.15194356998880665;  // std dev = 0,157, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.14663971173915324;  // std dev = 0,063, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else if ( tempadvisedby(G, B), publication(E, A) )
%   | | | | then return -0.11507663936456689;  // std dev = 0,333, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | | else if ( publication(H, A) )
%   | | | | | then return 0.24848714618913015;  // std dev = 0,129, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( tempadvisedby(D, I), tempadvisedby(J, B), yearsinprogram(J, C) )
%   | | | | | | then return -0.0807212646946837;  // std dev = 0,784, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | | else if ( tempadvisedby(D, K) )
%   | | | | | | | then return 0.12874299806327813;  // std dev = 0,343, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | | | | | else return 0.0056272149294268325;  // std dev = 0,431, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else return -0.11262659776475066;  // std dev = 0,284, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else return -0.06423791992023685;  // std dev = 1,29e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.155078
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.09 seconds
Total inference time: 0.701 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 25.198
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 0.965
   AUC PR    = 0.947744
   CLL	      = -0.259859
   Precision = 0.941176 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.864865


Total inference time: 0.574 seconds
AUC ROC: 0.965
Dataset: imdb,uwcse, Run: 1, Fold: 2, Type: transfer, Total folds for small set: 3, Time: 00:05:31
{'CLL': -0.259859, 'Recall': 0.8, 'Learning time': 25.198, 'Precision': [0.941176, 0.5], 'Mapping Results': {'Possible mappings': 1080, 'Total time': 3.055894613265991, 'Generating mappings time': 0.07010054588317871, 'Finding best mapping': 0.13272476196289062, 'Generating paths time': 2.8330676555633545, 'Knowledge compiling time': 0.019994735717773438}, 'Parameter Learning Results': {'CLL': -0.349893, 'Recall': 1.0, 'Precision': [0.869565, 0.5], 'AUC ROC': 0.95875, 'F1': 0.930233, 'AUC PR': 0.953338}, 'AUC ROC': 0.965, 'F1': 0.864865, 'AUC PR': 0.947744, 'Inference time': 0.574}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), student(D) )
%   | then if ( publication(C, A) )
%   | | then return 0.8268989350995116;  // std dev = 0,174, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | else if ( tempadvisedby(D, B) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.6990580260086022;  // std dev = 0,366, 44,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | else if ( projectmember(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), inphase(F, G), inphase(A, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.41370449065506787;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.14185106490048768;  // std dev = 5,58e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), student(D) )
%   | then if ( tempadvisedby(E, B), yearsinprogram(D, F), yearsinprogram(A, F) )
%   | | then return 0.7028634825411254;  // std dev = 0,170, 34,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.3268878673818787;  // std dev = 0,485, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.6728331432504343;  // std dev = 0,256, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | else if ( projectmember(H, B) )
%   | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(I, B), inphase(I, J), inphase(A, J) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( tempadvisedby(K, B), publication(L, A) )
%   | | | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(M, B) )
%   | | | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.35555573927149886;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.12544463852839158;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), student(D) )
%   | then if ( yearsinprogram(D, E), yearsinprogram(A, E) )
%   | | then return 0.556771303056819;  // std dev = 0,148, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return -0.3156027747937579;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.432302641309581;  // std dev = 0,394, 31,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=24 */
%   | else if ( publication(H, A), publication(H, I), tempadvisedby(J, I) )
%   | | then return 0.5034467366262415;  // std dev = 0,799, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( projectmember(K, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(L, B), inphase(L, M), inphase(A, M) )
%   | | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else if ( tempadvisedby(N, B) )
%   | | | | | then return 0.36871505493027124;  // std dev = 0,647, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.23705929055413252;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.11231637819360629;  // std dev = 4,08e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), student(D) )
%   | then if ( yearsinprogram(D, E), yearsinprogram(A, E) )
%   | | then return 0.4186513734343189;  // std dev = 0,148, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else if ( tempadvisedby(D, B) )
%   | | | then return -0.03238525720885688;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.32196503759290623;  // std dev = 0,387, 30,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | else if ( projectmember(F, B) )
%   | | then return 0.4238526397798649;  // std dev = 0,016, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(G, B), inphase(G, H), inphase(A, H) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | | | then return 0.06094108308435089;  // std dev = 0,806, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then return 0.46348079664340536;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.2375355518410348;  // std dev = 0,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.10159632948783623;  // std dev = 3,33e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), student(D) )
%   | then if ( inphase(D, E), publication(C, F), tempadvisedby(G, F) )
%   | | then if ( tempadvisedby(D, B) )
%   | | | then return 0.12693065443162413;  // std dev = 0,372, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.2666650360532053;  // std dev = 0,287, 64,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=56 */
%   | | else return 0.4386733932668832;  // std dev = 0,053, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( projectmember(H, B) )
%   | | then return 0.32502717140272885;  // std dev = 0,014, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(I, B), inphase(I, J), inphase(A, J) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( tempadvisedby(K, B), publication(L, A) )
%   | | | | then return 0.04870668199463666;  // std dev = 0,806, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(M, B) )
%   | | | | | then return 0.35210067032697995;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.18404637999712084;  // std dev = 0,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.09269127618926105;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.24622532665433003;  // std dev = 0,175, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else if ( tempadvisedby(D, B), publication(E, A), publication(F, B) )
%   | | then return -0.10610321004835073;  // std dev = 0,743, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.29278824652464025;  // std dev = 0,060, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else if ( publication(H, B), publication(H, I), student(I) )
%   | | | | then return 0.21565107540622566;  // std dev = 0,327, 41,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | | | else if ( tempadvisedby(J, B), inphase(J, K), inphase(A, K) )
%   | | | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | else if ( tempadvisedby(L, B), publication(M, A) )
%   | | | | | | then return 0.038694401529166055;  // std dev = 0,805, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else if ( tempadvisedby(N, B) )
%   | | | | | | | then return 0.27649416982595076;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.14023676719185676;  // std dev = 0,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.19966878739257596;  // std dev = 0,175, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.23689411019352535;  // std dev = 0,053, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(E, B), publication(F, A) )
%   | | | then if ( publication(G, B), publication(F, H), professor(H) )
%   | | | | then return -0.18367006519739887;  // std dev = 0,586, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.06729471607685575;  // std dev = 0,860, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else if ( publication(I, A) )
%   | | | | then return 0.30440479682264604;  // std dev = 0,205, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | | | | then return -0.02790211781947034;  // std dev = 0,923, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | else if ( publication(L, B), publication(L, M), student(M) )
%   | | | | | | then return 0.18441568496672994;  // std dev = 0,326, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | | | | | else return 0.06424742484885337;  // std dev = 0,391, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else return -0.07877675473109175;  // std dev = 1,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.16613537337805018;  // std dev = 0,175, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else if ( tempadvisedby(D, B), publication(E, A), publication(F, B) )
%   | | then return -0.052438875102433447;  // std dev = 0,712, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.19732051919663393;  // std dev = 0,134, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else if ( publication(H, B), publication(H, I), student(I) )
%   | | | | then if ( publication(J, A) )
%   | | | | | then return 0.2117833745833811;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else if ( tempadvisedby(I, K), publication(H, K) )
%   | | | | | | then return 0.050955061419952416;  // std dev = 0,367, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | | | else return 0.14059546548360186;  // std dev = 0,336, 29,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | | else if ( tempadvisedby(L, B) )
%   | | | | | then return 0.03553032973672722;  // std dev = 0,283, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | | | else return 0.08339059684954456;  // std dev = 0,486, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.14113891211432472;  // std dev = 0,175, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else if ( tempadvisedby(D, B), publication(E, D), publication(E, B) )
%   | | then return -0.10447842721907041;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(F, B), publication(F, G), projectmember(H, G) )
%   | | | then return -0.0011405054653881308;  // std dev = 0,793, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | | | then if ( projectmember(K, B) )
%   | | | | | then return 0.147172520130341;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(L, B), publication(I, M), professor(M) )
%   | | | | | | then return -0.13136018472116412;  // std dev = 0,587, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | | else return 0.05181849605426945;  // std dev = 0,863, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else if ( publication(N, B), publication(N, P), student(P) )
%   | | | | | then return 0.15348684970440923;  // std dev = 0,275, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | | | | else return 0.07505943513433296;  // std dev = 0,355, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.12192906059100088;  // std dev = 0,174, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.15845501541796397;  // std dev = 0,136, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(E, B), inphase(E, F), inphase(A, F) )
%   | | | then return -0.08998216416595455;  // std dev = 0,294, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else if ( publication(G, A), tempadvisedby(H, B) )
%   | | | | then if ( publication(I, B), publication(G, J), professor(J) )
%   | | | | | then return -0.10336469424865408;  // std dev = 0,591, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | else return 0.07502993235181943;  // std dev = 0,849, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else if ( tempadvisedby(K, B), publication(L, K) )
%   | | | | | then return -0.02279069472455897;  // std dev = 0,904, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | else if ( tempadvisedby(M, B) )
%   | | | | | | then return 0.16390215650422146;  // std dev = 0,232, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | | | | else return 0.08445338565860284;  // std dev = 0,360, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   else return -0.06419184008202625;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
Results
   AUC ROC   = 0.99375
   AUC PR    = 0.993678
   CLL	      = -0.225232
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.918919


Total learning time: 16.586 seconds
Total inference time: 0.68 seconds
AUC ROC: 0.99375


Dataset: imdb,uwcse, Run: 1, Fold: 2, Type: scratch, Total folds for small set: 3, Time: 00:05:48
{'CLL': -0.225232, 'Recall': 0.85, 'Learning time': 16.586, 'Precision': [1.0, 0.5], 'AUC ROC': 0.99375, 'F1': 0.918919, 'AUC PR': 0.993678, 'Inference time': 0.68}


Best mapping found: ['female(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.29e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [1.03e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 378, 0], 'true,false': [0.135, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [0.0, 5, 0], 'true,true': [0.108, 0, 382], 'true,false': [0.0, 22, 0], 'false,false,true': [0.0, 4, 0], 'false,true': [7.6e-08, 351, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [0.0, 5, 0], 'true,true': [0.095, 0, 382], 'true,false': [0.0, 22, 0], 'false,false,true': [0.0, 4, 0], 'false,true': [7.3e-08, 351, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 378, 0], 'true,false': [0.084, 4, 212]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [0.0, 5, 0], 'true,true': [0.079, 0, 382], 'true,false': [5.27e-09, 22, 0], 'false,false,true': [0.0, 4, 0], 'false,true': [1.61e-07, 351, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B).;true;false', '6;true;publication(C, A), publication(C, B).;false;false', '7;;advisedby(A, B) :- professor(B).;true;false', '7;true;publication(C, A), publication(C, B).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '8;true;student(A).;false;false', '9;;advisedby(A, B) :- professor(B).;true;false', '9;true;publication(C, A), publication(C, B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.7993254056877469;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.2621224450332872;  // std dev = 6,030, 151,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=61 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.6723676618346625;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.2271294822530038;  // std dev = 6,030, 151,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=61 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5225238410881432;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.19161181852162323;  // std dev = 6,030, 151,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=61 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.3927742928882812;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.15780197525816977;  // std dev = 6,030, 151,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=61 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.29850198038149106;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.12736238038316144;  // std dev = 6,030, 151,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=61 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.23321722189777613;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.10116762123763211;  // std dev = 6,030, 151,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=61 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17982121665203277;  // std dev = 1,397, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | else return 0.4016108262108568;  // std dev = 4,087, 84,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=61 */
%   else return -0.3245796499796195;  // std dev = 1,12e-07, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.14849032535483947;  // std dev = 1,394, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | else return 0.3082402097035177;  // std dev = 4,087, 84,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=61 */
%   else return -0.25780970691341;  // std dev = 9,88e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.13163678521278016;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return -0.1061416403192386;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.03512264873070854;  // std dev = 4,903, 151,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=61 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1062006736037997;  // std dev = 1,387, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | else return 0.22314816190322107;  // std dev = 4,087, 84,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=61 */
%   else return -0.21753814052076725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
Results
   AUC ROC   = 0.82716
   AUC PR    = 0.814062
   CLL	      = -0.480684
   Precision = 0.692308 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.818182


Total learning time: 5.254 seconds
Total inference time: 0.863 seconds
AUC ROC: 0.82716


Results in test set
   AUC ROC   = 0.82716
   AUC PR    = 0.814062
   CLL	      = -0.480684
   Precision = 0.692308 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.818182


Total inference time: 0.863 seconds
AUC ROC: 0.82716
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.372, 2, 32], 'false': [6.03, 90, 61], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.372, 2, 32], 'false': [6.03, 90, 61], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.372, 2, 32], 'false': [6.03, 90, 61], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.372, 2, 32], 'false': [6.03, 90, 61], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.372, 2, 32], 'false': [6.03, 90, 61], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.372, 2, 32], 'false': [6.03, 90, 61], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.397, 3, 32], 'false': [1.12e-07, 67, 0], 'true,false': [4.087, 23, 61]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.394, 3, 32], 'false': [9.88e-08, 67, 0], 'true,false': [4.087, 23, 61]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.372, 2, 32], 'false': [4.903, 90, 61], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.387, 3, 32], 'false': [0.0, 67, 0], 'true,false': [4.087, 23, 61]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B).;false;false', '7;;advisedby(A, B) :- professor(B).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '8;true;student(A).;false;false', '9;;advisedby(A, B) :- professor(B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0.5960264900662252), ('true,true', 0.9411764705882353)]
Tree #2: [('false', 0.5960264900662252), ('true,true', 0.9411764705882353)]
Tree #3: [('false', 0.5960264900662252), ('true,true', 0.9411764705882353)]
Tree #4: [('false', 0.5960264900662252), ('true,true', 0.9411764705882353)]
Tree #5: [('false', 0.5960264900662252), ('true,true', 0.9411764705882353)]
Tree #6: [('false', 0.5960264900662252), ('true,true', 0.9411764705882353)]
Tree #7: [('true,false', 0.7261904761904762), ('true,true', 0.9142857142857143)]
Tree #8: [('true,false', 0.7261904761904762), ('true,true', 0.9142857142857143)]
Tree #9: [('false', 0.5960264900662252), ('true,true', 0.9411764705882353)]
Tree #10: [('true,false', 0.7261904761904762), ('true,true', 0.9142857142857143)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.7724346493852258;  // std dev = 0,280, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then if ( publication(H, B) )
%   | | | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(I, E) )
%   | | | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(J, B), publication(J, K), tempadvisedby(L, K) )
%   | | | then return 0.7929315437951642;  // std dev = 0,247, 46,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   | | | else return 0.5854216623722396;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else return -0.14185106490048768;  // std dev = 6,50e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.650729330372115;  // std dev = 0,280, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then if ( projectmember(F, B) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(G, B), publication(E, H), professor(H) )
%   | | | | | then return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else return 0.19290171459368494;  // std dev = 1,083, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.6369968042922834;  // std dev = 0,303, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | then if ( tempadvisedby(K, J) )
%   | | | | then return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6629579690281207;  // std dev = 0,258, 26,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.53428623399252;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return -0.4068902365957154;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( hasposition(B, D), student(A) )
%   | then if ( publication(E, A), publication(E, F), professor(F) )
%   | | then if ( projectmember(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then if ( publication(I, B), publication(I, F) )
%   | | | | | then return 0.17767963093800185;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.020528654683750126;  // std dev = 0,878, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else if ( tempadvisedby(J, F) )
%   | | | | | then return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | else return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5095547042955306;  // std dev = 0,279, 55,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=50 */
%   | else return -0.10582090910597114;  // std dev = 0,090, 76,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.3814546806063779;  // std dev = 0,261, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(F, B) )
%   | | | then if ( publication(D, G), publication(F, G) )
%   | | | | then return 0.15287560213329973;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return -0.04140061334526754;  // std dev = 0,745, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( projectmember(H, B) )
%   | | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(I, B), publication(I, J), student(J) )
%   | | | | | then return 0.3552447033290026;  // std dev = 0,426, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | | else if ( tempadvisedby(K, B) )
%   | | | | | | then return 0.1347365030578845;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.11818074441726241;  // std dev = 0,852, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.38426630393599936;  // std dev = 0,280, 53,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | else return -0.10219073640807165;  // std dev = 1,83e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.2893221096326688;  // std dev = 0,260, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( professor(B), student(A), hasposition(B, D) )
%   | then if ( publication(E, A), tempadvisedby(F, B), publication(G, B) )
%   | | then if ( publication(E, H), publication(G, H) )
%   | | | then return 0.1291537765156164;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.033639970269051064;  // std dev = 0,746, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | then if ( projectmember(K, B) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( tempadvisedby(L, J), publication(M, J), publication(M, L) )
%   | | | | | then return 0.2973701427712677;  // std dev = 0,636, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( hasposition(J, D) )
%   | | | | | | then return 0.23969799157640487;  // std dev = 1,047, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | | else return -0.06684525682477346;  // std dev = 0,926, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3035053329442222;  // std dev = 0,260, 53,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=49 */
%   | else return -0.08895030171815936;  // std dev = 0,085, 76,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.22471115684937168;  // std dev = 0,261, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then if ( publication(H, B), publication(H, E) )
%   | | | | | then return 0.10736536879078436;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return -0.02066571998879523;  // std dev = 0,854, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else if ( tempadvisedby(I, E), publication(J, B) )
%   | | | | | then return 0.09171077983953127;  // std dev = 1,016, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return 0.1889778062256544;  // std dev = 0,882, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return 0.20270356365736916;  // std dev = 0,321, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | | else return 0.2519063825227304;  // std dev = 0,236, 26,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | else return -0.08593915050217664;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.14821199582385322;  // std dev = 3,304, 119,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=93 */
%   else return -0.07942415868661003;  // std dev = 2,11e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.12076094742764718;  // std dev = 3,300, 119,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=93 */
%   else return -0.07380755360117836;  // std dev = 2,11e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.15167698186871154;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return -0.5940502753757806;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( hasposition(B, D), student(A) )
%   | then if ( publication(E, A), publication(E, F), professor(F) )
%   | | then if ( projectmember(G, B) )
%   | | | then return 0.16863120224691752;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | | | then return -0.052187248914347006;  // std dev = 0,851, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else if ( tempadvisedby(J, F), publication(K, J) )
%   | | | | | then return 0.16095918298546538;  // std dev = 0,916, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else if ( hasposition(F, D) )
%   | | | | | | then return 0.0653661950930257;  // std dev = 0,770, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return -0.14703466250423758;  // std dev = 0,919, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.13448395227718307;  // std dev = 0,275, 55,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=50 */
%   | else return -0.0711430015228219;  // std dev = 0,082, 76,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.08315430521305099;  // std dev = 3,233, 119,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=93 */
%   else return -0.06449061218971461;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
Results
   AUC ROC   = 0.981481
   AUC PR    = 0.978113
   CLL	      = -0.25398
   Precision = 0.9 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.947368


Total learning time: 13.871 seconds
Total inference time: 0.71 seconds
AUC ROC: 0.981481


Best model AUC ROC so far: 0.981481


Refining iteration 2
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '0;false,true,true;projectmember(F, B).;false;true', '0;false,true,false;publication(J, B), publication(J, K), tempadvisedby(L, K).;false;false', '0;false,true,true,false;tempadvisedby(G, B).;true;false', '0;false,true,true,false,true;publication(H, B).;false;false', '0;false;professor(B), student(A).;true;false', '0;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '1;false,true,true;publication(E, A).;true;false', '1;false,true,false;publication(I, A), publication(I, J), professor(J).;true;false', '1;false,true,false,true;tempadvisedby(K, J).;false;false', '1;false,true,true,true;projectmember(F, B).;false;false', '1;false;professor(B), student(A).;true;false', '1;false,true;tempadvisedby(D, B).;true;true', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '2;true;student(A).;false;false', '2;false,true,true,false;tempadvisedby(H, B).;true;false', '2;false,true,true;projectmember(G, B).;false;true', '2;false,true,true,false,true;publication(I, B), publication(I, F).;false;false', '2;false;hasposition(B, D), student(A).;true;false', '2;false,true;publication(E, A), publication(E, F), professor(F).;true;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '3;false,true,true;tempadvisedby(E, B), publication(F, B).;true;true', '3;false,true,true,false,false;publication(I, B), publication(I, J), student(J).;false;false', '3;false,true,true,false;projectmember(H, B).;false;true', '3;false,true,true,true;publication(D, G), publication(F, G).;false;false', '3;false;professor(B), student(A).;true;false', '3;false,true;publication(D, A).;true;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '4;false,true,true;publication(E, H), publication(G, H).;false;false', '4;false,true,false,true,false;tempadvisedby(L, J), publication(M, J), publication(M, L).;false;false', '4;false,true,false,true;projectmember(K, B).;false;true', '4;false,true,false;publication(I, A), publication(I, J), professor(J).;true;false', '4;false;professor(B), student(A), hasposition(B, D).;true;false', '4;false,true;publication(E, A), tempadvisedby(F, B), publication(G, B).;true;true', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '5;false,true,true;projectmember(F, B).;false;true', '5;false,true,false;tempadvisedby(K, B).;false;false', '5;false,true,true,false;tempadvisedby(G, B).;true;false', '5;false,true,true,false,true;publication(H, B), publication(H, E).;false;false', '5;false;professor(B), student(A).;true;false', '5;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '6;;advisedby(A, B) :- professor(B).;true;false', '7;;advisedby(A, B) :- professor(B).;true;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '8;true;student(A).;false;false', '8;false,true,true,false,false;tempadvisedby(J, F), publication(K, J).;true;true', '8;false,true,true,false;tempadvisedby(H, B), publication(I, B).;false;true', '8;false,true,true;projectmember(G, B).;false;true', '8;false;hasposition(B, D), student(A).;true;false', '8;false,true,true,false,false,false;hasposition(F, D).;false;false', '8;false,true;publication(E, A), publication(E, F), professor(F).;true;false', '9;;advisedby(A, B) :- professor(B).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,true,false,false,false', 0.6666666666666666), ('false,true,true,false,false,true', 0.6666666666666666), ('false,true,true,false,true,false', 0.6666666666666666), ('false,true,false,false', 0.7272727272727273), ('false,true,true,false,true,true', 0.8), ('true', 0.9142857142857143), ('false,true,false,true', 0.9347826086956522)]
Tree #2: [('false,true,true,true,false,false', 0.6), ('false,true,false,true,true', 0.6666666666666666), ('false,true,false,true,false', 0.6666666666666666), ('false,true,true,true,false,true', 0.8), ('false,true,true,false', 0.896551724137931), ('true', 0.9142857142857143), ('false,true,false,false', 0.9230769230769231)]
Tree #3: [('false,true,true,false,false,true', 0.6666666666666666), ('false,true,true,false,true,true', 0.6666666666666666), ('false,true,true,false,false,false', 0.6666666666666666), ('false,true,true,false,true,false', 0.8), ('false,true,false', 0.9090909090909091), ('true,true', 0.9411764705882353), ('false,false', 0.9868421052631579)]
Tree #4: [('false,true,true,false,false,false,false', 0.5), ('false,true,true,true,true', 0.6666666666666666), ('false,true,true,false,false,false,true', 0.6666666666666666), ('false,true,true,false,false,true', 0.7142857142857143), ('false,true,true,true,false', 0.75), ('false,true,false', 0.9056603773584906), ('true', 0.9142857142857143)]
Tree #5: [('false,true,false,true,false,false,true', 0.6), ('false,true,true,true', 0.6666666666666666), ('false,true,false,true,false,true', 0.6666666666666666), ('false,true,true,false', 0.75), ('false,true,false,true,false,false,false', 0.75), ('true', 0.9142857142857143), ('false,true,false,false', 0.9245283018867925), ('false,false', 0.9868421052631579)]
Tree #6: [('false,true,true,false,false,false', 0.5), ('false,true,true,false,false,true', 0.6), ('false,true,true,false,true,true', 0.6666666666666666), ('false,true,true,false,true,false', 0.8), ('false,true,false,true', 0.8709677419354839), ('true', 0.9142857142857143), ('false,true,false,false', 0.9230769230769231)]
Tree #7: [('true', 0.7815126050420168)]
Tree #8: [('true', 0.7815126050420168)]
Tree #9: [('false,true,true,false,false,true', 0.6), ('false,true,true,false,false,false,true', 0.6666666666666666), ('false,true,true,false,false,false,false', 0.75), ('false,true,true,false,true', 0.8), ('false,true,false', 0.9090909090909091), ('true,true', 0.9411764705882353), ('false,false', 0.9868421052631579)]
Tree #10: [('true', 0.7815126050420168)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.7724346493852258;  // std dev = 1,656, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then if ( publication(H, B) )
%   | | | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( publication(I, B), publication(I, J), tempadvisedby(K, J) )
%   | | | then return 0.7929315437951642;  // std dev = 1,675, 46,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   | | | else return 0.5854216623722396;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else return -0.14185106490048768;  // std dev = 6,50e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.650729330372115;  // std dev = 1,656, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then if ( projectmember(F, B) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.12191187355361954;  // std dev = 1,422, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.6369968042922834;  // std dev = 1,633, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | then if ( tempadvisedby(I, H) )
%   | | | | then return 0.46666685038260997;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return 0.13333351704927673;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6629579690281207;  // std dev = 1,314, 26,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.53428623399252;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return -0.4068902365957154;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( hasposition(B, D), student(A) )
%   | then if ( publication(E, A), publication(E, F), professor(F) )
%   | | then if ( projectmember(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then if ( publication(I, B), publication(I, F) )
%   | | | | | then return 0.1681200767155739;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.023255667642164368;  // std dev = 0,886, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else return 0.2914705714815962;  // std dev = 1,465, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.5100962661395871;  // std dev = 2,066, 55,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=50 */
%   | else return -0.10582090910597114;  // std dev = 0,787, 76,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.3814546806063779;  // std dev = 1,543, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(F, B) )
%   | | | then if ( publication(D, G), publication(F, G) )
%   | | | | then return 0.14361157296009405;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return -0.03788224382449285;  // std dev = 0,754, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( projectmember(H, B) )
%   | | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(I, B), publication(I, J), student(J) )
%   | | | | | then return 0.35910371150042003;  // std dev = 1,142, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | | else return 0.1317565575056226;  // std dev = 1,201, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.3841366611264742;  // std dev = 2,042, 53,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | else return -0.10219073640807165;  // std dev = 1,83e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.2893221096326688;  // std dev = 1,540, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( professor(B), student(A), hasposition(B, D) )
%   | then if ( publication(E, A), tempadvisedby(F, B), publication(G, B) )
%   | | then if ( publication(E, H), publication(G, H) )
%   | | | then return 0.12054639149531295;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.03070630858757565;  // std dev = 0,755, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | then if ( projectmember(K, B) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( tempadvisedby(L, J), publication(M, J), publication(M, L) )
%   | | | | | then return 0.3265260548635684;  // std dev = 0,657, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.09923415582180056;  // std dev = 1,480, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.3033276772259198;  // std dev = 1,895, 53,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=49 */
%   | else return -0.08894946452854317;  // std dev = 0,742, 76,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.22471115684937168;  // std dev = 1,543, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then if ( publication(H, B), publication(H, E) )
%   | | | | | then return 0.09965583519445982;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return -0.007518960958969678;  // std dev = 0,879, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else return 0.13048726074407704;  // std dev = 1,404, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.20364606375916453;  // std dev = 1,784, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | | else return 0.25170955411455226;  // std dev = 1,204, 26,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | else return -0.08593921626646843;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( professor(A) )
%   | then return -0.13548511019729215;  // std dev = 0,148, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( tempadvisedby(C, B) )
%   | | then if ( publication(D, A), publication(D, B) )
%   | | | then return 0.18458721847992388;  // std dev = 0,262, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else if ( publication(E, A), publication(F, B) )
%   | | | | then if ( publication(E, G), publication(F, G) )
%   | | | | | then return 0.08133925668318591;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return -0.04916903762901283;  // std dev = 0,740, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( publication(H, B), inphase(A, I), inphase(C, I) )
%   | | | | | then return 0.2628641167538134;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(J, B), publication(J, K), tempadvisedby(K, L) )
%   | | | | | | then return 0.2628641167538134;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.14526010322382507;  // std dev = 0,338, 29,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=24 */
%   | | else return 0.1881458233139027;  // std dev = 0,290, 42,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   else return -0.07942421509013278;  // std dev = 1,29e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( student(A), hasposition(B, C) )
%   | then if ( tempadvisedby(D, B), hasposition(E, C), projectmember(F, E) )
%   | | then if ( publication(G, A), publication(G, D) )
%   | | | then return -0.10846631034356531;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(H, D), publication(H, I), hasposition(I, C) )
%   | | | | then return 0.22509574730509635;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( publication(J, D), publication(K, A), publication(K, B) )
%   | | | | | then return 0.22486702298976802;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else if ( publication(L, A), publication(L, B) )
%   | | | | | | then return 0.1534384515611966;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | | | | else if ( publication(M, A), publication(N, B) )
%   | | | | | | | then return 0.005350081593889916;  // std dev = 0,420, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | | | | | else return 0.12910554360683008;  // std dev = 0,319, 33,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | | else return 0.16236918483649085;  // std dev = 0,268, 42,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   | else return -0.10233102495644508;  // std dev = 0,260, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return -0.07380760248008258;  // std dev = 1,29e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.14128867106623835;  // std dev = 1,343, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return -0.46852805112131507;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( hasposition(B, D), student(A) )
%   | then if ( publication(E, A), publication(E, F), professor(F) )
%   | | then if ( projectmember(G, B) )
%   | | | then return 0.167876524098185;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | | | then return -0.022132991382724027;  // std dev = 0,850, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else if ( tempadvisedby(J, F), publication(K, J) )
%   | | | | | then return 0.18328749345703896;  // std dev = 0,923, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else if ( hasposition(F, D) )
%   | | | | | | then return 0.1082353412969103;  // std dev = 0,771, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return -0.2510113811118371;  // std dev = 0,879, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.12887228409389428;  // std dev = 2,020, 55,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=50 */
%   | else return -0.06645976285267122;  // std dev = 0,715, 76,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( professor(A) )
%   | then return -0.09680327881636222;  // std dev = 0,098, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( tempadvisedby(C, B) )
%   | | then if ( publication(D, B), publication(D, E), tempadvisedby(E, F) )
%   | | | then if ( publication(G, A) )
%   | | | | then if ( publication(G, F) )
%   | | | | | then return -0.1994613151313837;  // std dev = 1,100, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return -0.035337078740901084;  // std dev = 0,522, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.17032857213244698;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11227671727254698;  // std dev = 0,277, 58,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=49 */
%   | | else if ( publication(H, B), publication(H, I), tempadvisedby(J, I) )
%   | | | then return 0.15527405362825072;  // std dev = 0,197, 32,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | | else if ( publication(K, B), publication(K, L), tempadvisedby(L, M) )
%   | | | | then return -0.3012134440386058;  // std dev = 0,812, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.08940201465220579;  // std dev = 0,347, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.06477377664055774;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
Results
   AUC ROC   = 0.986111
   AUC PR    = 0.984797
   CLL	      = -0.237464
   Precision = 0.947368 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972973


Total learning time: 9.411 seconds
Total inference time: 0.832 seconds
AUC ROC: 0.986111


Best model AUC ROC so far: 0.986111


Refining iteration 3
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '0;false,true,true;projectmember(F, B).;false;true', '0;false,true,false;publication(I, B), publication(I, J), tempadvisedby(K, J).;false;false', '0;false,true,true,false;tempadvisedby(G, B).;true;true', '0;false,true,true,false,true;publication(H, B).;false;false', '0;false;professor(B), student(A).;true;false', '0;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '1;false,true,true;publication(E, A).;true;false', '1;false,true,false;publication(G, A), publication(G, H), professor(H).;false;false', '1;false,true,true,true;projectmember(F, B).;false;false', '1;false;professor(B), student(A).;true;false', '1;false,true;tempadvisedby(D, B).;true;true', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '2;true;student(A).;false;false', '2;false,true,true,false;tempadvisedby(H, B).;true;true', '2;false,true,true;projectmember(G, B).;false;true', '2;false,true,true,false,true;publication(I, B), publication(I, F).;false;false', '2;false;hasposition(B, D), student(A).;true;false', '2;false,true;publication(E, A), publication(E, F), professor(F).;true;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '3;false,true,true;tempadvisedby(E, B), publication(F, B).;true;true', '3;false,true,true,false;projectmember(H, B).;false;false', '3;false,true,true,true;publication(D, G), publication(F, G).;false;false', '3;false;professor(B), student(A).;true;false', '3;false,true;publication(D, A).;true;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '4;false,true,true;publication(E, H), publication(G, H).;false;false', '4;false,true,false,true;projectmember(K, B).;false;false', '4;false,true,false;publication(I, A), publication(I, J), professor(J).;true;false', '4;false;professor(B), student(A), hasposition(B, D).;true;false', '4;false,true;publication(E, A), tempadvisedby(F, B), publication(G, B).;true;true', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '5;false,true,true;projectmember(F, B).;false;true', '5;false,true,false;tempadvisedby(I, B).;false;false', '5;false,true,true,false;tempadvisedby(G, B).;true;true', '5;false,true,true,false,true;publication(H, B), publication(H, E).;false;false', '5;false;professor(B), student(A).;true;false', '5;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '6;;advisedby(A, B) :- professor(B).;true;false', '6;true;professor(A).;false;true', '6;true,false,true,false,false;publication(H, B), inphase(A, I), inphase(C, I).;false;true', '6;true,false;tempadvisedby(C, B).;true;false', '6;true,false,true,false;publication(E, A), publication(F, B).;false;true', '6;true,false,true,false,false,false;publication(J, B), publication(J, K), tempadvisedby(K, L).;false;false', '6;true,false,true;publication(D, A), publication(D, B).;false;true', '7;;advisedby(A, B) :- professor(B).;true;false', '7;true;student(A), hasposition(B, C).;true;false', '7;true,true,true,false,false,false,false;publication(M, A), publication(N, B).;false;false', '7;true,true;tempadvisedby(D, B), hasposition(E, C), projectmember(F, E).;true;false', '7;true,true,true,false,false;publication(J, D), publication(K, A), publication(K, B).;false;true', '7;true,true,true,false,false,false;publication(L, A), publication(L, B).;false;true', '7;true,true,true;publication(G, A), publication(G, D).;true;true', '7;true,true,true,false;publication(H, D), publication(H, I), hasposition(I, C).;false;true', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '8;true;student(A).;false;false', '8;false,true,true,false,false;tempadvisedby(J, F), publication(K, J).;true;true', '8;false,true,true,false;tempadvisedby(H, B), publication(I, B).;false;true', '8;false,true,true;projectmember(G, B).;false;true', '8;false;hasposition(B, D), student(A).;true;false', '8;false,true,true,false,false,false;hasposition(F, D).;false;false', '8;false,true;publication(E, A), publication(E, F), professor(F).;true;false', '9;;advisedby(A, B) :- professor(B).;true;false', '9;true;professor(A).;false;true', '9;true,false,false,false;publication(K, B), publication(K, L), tempadvisedby(L, M).;false;false', '9;true,false;tempadvisedby(C, B).;true;true', '9;true,false,true,true;publication(G, A).;false;false', '9;true,false,true;publication(D, B), publication(D, E), tempadvisedby(E, F).;true;false', '9;true,false,false;publication(H, B), publication(H, I), tempadvisedby(J, I).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,true,false,false', 0.5555555555555556), ('false,true,true,false,true,false', 0.6666666666666666), ('false,true,false,false', 0.7272727272727273), ('false,true,true,false,true,true', 0.8), ('true', 0.9142857142857143), ('false,true,false,true', 0.9347826086956522)]
Tree #2: [('false,true,false,true,true', 0.6666666666666666), ('false,true,false,true,false', 0.6666666666666666), ('false,true,true,true,false', 0.7), ('false,true,true,false', 0.896551724137931), ('true', 0.9142857142857143), ('false,true,false,false', 0.9230769230769231)]
Tree #3: [('false,true,true,false,false', 0.5555555555555556), ('false,true,true,false,true,true', 0.6666666666666666), ('false,true,true,false,true,false', 0.8), ('false,true,false', 0.9090909090909091), ('true,true', 0.9411764705882353), ('false,false', 0.9868421052631579)]
Tree #4: [('false,true,true,false,false,false', 0.5714285714285714), ('false,true,true,true,true', 0.6666666666666666), ('false,true,true,false,false,true', 0.7142857142857143), ('false,true,true,true,false', 0.75), ('false,true,false', 0.9056603773584906), ('true', 0.9142857142857143)]
Tree #5: [('false,true,false,true,false,false', 0.5555555555555556), ('false,true,true,true', 0.6666666666666666), ('false,true,false,true,false,true', 0.6666666666666666), ('false,true,true,false', 0.75), ('true', 0.9142857142857143), ('false,true,false,false', 0.9245283018867925), ('false,false', 0.9868421052631579)]
Tree #6: [('false,true,true,false,false', 0.5555555555555556), ('false,true,true,false,true,true', 0.6666666666666666), ('false,true,true,false,true,false', 0.8), ('false,true,false,true', 0.8709677419354839), ('true', 0.9142857142857143), ('false,true,false,false', 0.9230769230769231)]
Tree #7: [('true,false,true,false,true,true', 0.6666666666666666), ('true,false,true,false,true,false', 0.75), ('true,false,true,false,false,false,false', 0.8275862068965517), ('true,false,false', 0.8571428571428571), ('true,false,true,true', 0.9259259259259259)]
Tree #8: [('true,true,true,true', 0.6666666666666666), ('true,true,true,false,false,false,false,true', 0.7142857142857143), ('true,true,true,false,false,false,false,false', 0.8484848484848485), ('true,true,false', 0.8809523809523809), ('true,false', 0.9), ('true,true,true,false,false,false,true', 0.9285714285714286)]
Tree #9: [('false,true,true,false,false,true', 0.6), ('false,true,true,false,false,false,true', 0.6666666666666666), ('false,true,true,false,false,false,false', 0.75), ('false,true,true,false,true', 0.8), ('false,true,false', 0.9090909090909091), ('true,true', 0.9411764705882353), ('false,false', 0.9868421052631579)]
Tree #10: [('true,false,true,true,true,true', 0.6), ('true,false,true,true,true,false', 0.6666666666666666), ('true,false,false,false,true', 0.6666666666666666), ('true,false,false,false,false', 0.7142857142857143), ('true,false,true,false', 0.8448275862068966), ('true,false,false,true', 0.9375)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.7724346493852258;  // std dev = 1,656, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then if ( publication(H, B) )
%   | | | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( hasposition(B, I), hasposition(J, I), tempadvisedby(K, J) )
%   | | | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(L, B), publication(L, M), tempadvisedby(N, M) )
%   | | | then return 0.7929315437951642;  // std dev = 1,675, 46,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   | | | else return 0.5854216623722396;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else return -0.14185106490048768;  // std dev = 6,50e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.650729330372115;  // std dev = 1,656, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then if ( projectmember(F, B) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.12191187355361954;  // std dev = 1,422, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.6369968042922834;  // std dev = 1,633, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | then return 0.35410623570749067;  // std dev = 1,463, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.6629579690281207;  // std dev = 1,314, 26,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.53428623399252;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return -0.4068902365957154;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( hasposition(B, D), student(A) )
%   | then if ( publication(E, A), publication(E, F), professor(F) )
%   | | then if ( projectmember(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then if ( publication(I, B), publication(I, F) )
%   | | | | | then return 0.1681200767155739;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.023255667642164368;  // std dev = 0,886, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else return 0.2915163982863036;  // std dev = 0,486, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.5100962661395871;  // std dev = 2,066, 55,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=50 */
%   | else return -0.10582090910597114;  // std dev = 0,787, 76,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.3814546806063779;  // std dev = 1,543, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(F, B) )
%   | | | then if ( publication(D, G), publication(F, G) )
%   | | | | then return 0.14361157296009405;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return -0.03788224382449285;  // std dev = 0,754, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( projectmember(H, B) )
%   | | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.24551716905072002;  // std dev = 1,704, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else return 0.3841366611264742;  // std dev = 2,042, 53,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | else return -0.10219073640807165;  // std dev = 1,83e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.2893221096326688;  // std dev = 1,540, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( professor(B), student(A), hasposition(B, D) )
%   | then if ( publication(E, A), tempadvisedby(F, B), publication(G, B) )
%   | | then if ( publication(E, H), publication(G, H) )
%   | | | then return 0.12054639149531295;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.03070630858757565;  // std dev = 0,755, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | then if ( projectmember(K, B) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.15828042381361812;  // std dev = 1,669, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.3033150583827768;  // std dev = 1,894, 53,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=49 */
%   | else return -0.08894946452854317;  // std dev = 0,742, 76,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.22471115684937168;  // std dev = 1,543, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then if ( publication(H, B), publication(H, E) )
%   | | | | | then return 0.09965583519445982;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return -0.01805919882082152;  // std dev = 0,856, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else if ( hasposition(B, I), hasposition(J, I), tempadvisedby(K, J) )
%   | | | | | then return 0.2855476349321695;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.020678908244033622;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return 0.203648600818343;  // std dev = 1,784, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | | else return 0.2516730235782546;  // std dev = 1,203, 26,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | else return -0.08593921626646843;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( professor(A) )
%   | then return -0.13548511019729215;  // std dev = 0,420, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( tempadvisedby(C, B) )
%   | | then if ( publication(D, A), publication(D, B) )
%   | | | then return 0.18458721847992388;  // std dev = 1,361, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else if ( publication(E, A), publication(F, B) )
%   | | | | then return 0.007162212418243973;  // std dev = 1,115, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | | else if ( publication(G, B), inphase(A, H), inphase(C, H) )
%   | | | | | then return 0.262866070271211;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(I, B), publication(I, J), tempadvisedby(J, K) )
%   | | | | | | then return 0.262866070271211;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.14365871033997363;  // std dev = 1,814, 29,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=24 */
%   | | else return 0.1892538570452017;  // std dev = 1,898, 42,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   else return -0.07942421509013278;  // std dev = 1,29e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( student(A), hasposition(B, C) )
%   | then if ( tempadvisedby(D, B), hasposition(E, C), projectmember(F, E) )
%   | | then if ( publication(G, A), publication(G, D) )
%   | | | then return -0.10846631034356531;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(H, D), publication(H, I), hasposition(I, C) )
%   | | | | then return 0.22515410671799327;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( publication(J, D), publication(K, A), publication(K, B) )
%   | | | | | then return 0.22486702298976802;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else if ( publication(L, A), publication(L, B) )
%   | | | | | | then return 0.1534384515611966;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | | | | else if ( publication(M, A), publication(N, B) )
%   | | | | | | | then return 0.005807082162942472;  // std dev = 1,114, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | | | | | else return 0.12784046101987;  // std dev = 1,823, 33,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | | else return 0.16338728934825916;  // std dev = 1,755, 42,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   | else return -0.10238451842363876;  // std dev = 0,821, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return -0.07380760248008258;  // std dev = 1,29e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.14120911143211065;  // std dev = 1,343, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return -0.46851473076134537;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( hasposition(B, D), student(A) )
%   | then if ( publication(E, A), publication(E, F), professor(F) )
%   | | then if ( projectmember(G, B) )
%   | | | then return 0.16827733482020335;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | | | then return -0.016018300943808468;  // std dev = 0,857, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else if ( tempadvisedby(J, F), publication(K, J) )
%   | | | | | then return 0.22666532216024451;  // std dev = 0,986, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else if ( hasposition(F, D) )
%   | | | | | | then return 0.04520475118184745;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return -0.2580585737913695;  // std dev = 0,735, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.1284209615548225;  // std dev = 2,020, 55,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=50 */
%   | else return -0.06646616551707095;  // std dev = 0,715, 76,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( professor(A) )
%   | then return -0.09679917997831038;  // std dev = 0,277, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( tempadvisedby(C, B) )
%   | | then if ( publication(D, B), publication(D, E), tempadvisedby(E, F) )
%   | | | then if ( publication(G, A) )
%   | | | | then return -0.13965832976375844;  // std dev = 1,242, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | | else return 0.1705125995774203;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11124411265531721;  // std dev = 2,106, 58,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=49 */
%   | | else if ( publication(H, B), publication(H, I), tempadvisedby(J, I) )
%   | | | then return 0.1500166639890476;  // std dev = 1,056, 32,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | | else if ( publication(K, B), publication(K, L), tempadvisedby(L, M) )
%   | | | | then return -0.24414956155888304;  // std dev = 0,921, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.09848345505323032;  // std dev = 0,967, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.06477338878017323;  // std dev = 2,98e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
Results
   AUC ROC   = 0.986111
   AUC PR    = 0.984797
   CLL	      = -0.245392
   Precision = 0.9 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.947368


Total learning time: 4.922 seconds
Total inference time: 1.191 seconds
AUC ROC: 0.986111


Best model AUC ROC so far: 0.986111


******************************************
Best model found
******************************************
Total revision time: 37.054
Best validation AUC ROC: 0.986111


Results
   AUC ROC   = 0.9525
   AUC PR    = 0.868923
   CLL	      = -0.207402
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total inference time: 0.616 seconds
AUC ROC: 0.9525
Dataset: imdb,uwcse, Run: 1, Fold: 2, Type: transfer, Total folds for small set: 4, Time: 00:06:31
{'CLL': -0.207402, 'Recall': 1.0, 'Learning time': 37.054, 'Precision': [0.952381, 0.5], 'Mapping Results': {'Possible mappings': 1080, 'Total time': 3.169513463973999, 'Generating mappings time': 0.07147526741027832, 'Finding best mapping': 0.15651941299438477, 'Generating paths time': 2.9194087982177734, 'Knowledge compiling time': 0.02210259437561035}, 'Parameter Learning Results': {'CLL': -0.343314, 'Recall': 1.0, 'Precision': [0.869565, 0.5], 'AUC ROC': 0.95875, 'F1': 0.930233, 'AUC PR': 0.953338}, 'AUC ROC': 0.9525, 'F1': 0.97561, 'AUC PR': 0.868923, 'Inference time': 0.616}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7993254056877469;  // std dev = 0,235, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then if ( publication(H, B) )
%   | | | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(I, E) )
%   | | | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(J, B), publication(J, K), tempadvisedby(L, K) )
%   | | | then return 0.7929315437951642;  // std dev = 0,247, 46,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   | | | else return 0.5854216623722396;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.14185106490048768;  // std dev = 6,66e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6723676618346625;  // std dev = 0,235, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then if ( publication(H, B), publication(H, E) )
%   | | | | | then return 0.1842553658468876;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.04029210774435073;  // std dev = 0,887, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else if ( tempadvisedby(I, E) )
%   | | | | | then return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.48244604963688964;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6461306116968606;  // std dev = 0,288, 53,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   else return -0.12544463852839155;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.5225238410881432;  // std dev = 0,235, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else if ( tempadvisedby(E, B), publication(F, B) )
%   | | | then if ( publication(D, G), publication(F, G) )
%   | | | | then return 0.15934141403077748;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return -0.013016881611147918;  // std dev = 0,761, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( projectmember(H, B) )
%   | | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(I, B), hasposition(J, C), tempadvisedby(K, J) )
%   | | | | | then return 0.525384492327761;  // std dev = 0,921, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | else if ( publication(L, B) )
%   | | | | | | then return 0.066718089598048;  // std dev = 0,774, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.19740982369264093;  // std dev = 1,034, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.5195073879135879;  // std dev = 0,265, 51,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   else return -0.1058041367103319;  // std dev = 0,090, 77,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then return 0.3927742928882812;  // std dev = 0,235, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else if ( projectmember(D, B) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(E, B) )
%   | | | | then if ( publication(F, B), publication(C, G), professor(G) )
%   | | | | | then return 0.020115574312711205;  // std dev = 0,875, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else return 0.13101238995392456;  // std dev = 1,080, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else if ( hasposition(B, H), hasposition(I, H), tempadvisedby(J, I) )
%   | | | | | then return 0.40639954763993597;  // std dev = 0,928, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | else return 0.11794800288616321;  // std dev = 1,006, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( publication(K, B), publication(K, L), tempadvisedby(M, L) )
%   | | then return 0.4128214232023429;  // std dev = 0,213, 42,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | else return 0.26681844748576067;  // std dev = 0,435, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.10219227524856853;  // std dev = 4,21e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( publication(C, B) )
%   | | then return 0.28325143571918165;  // std dev = 0,262, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else if ( publication(E, B) )
%   | | | then if ( publication(C, F), publication(E, F) )
%   | | | | then return 0.1320252360030368;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return -0.027455687459153937;  // std dev = 0,752, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.21478748680226323;  // std dev = 0,857, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( publication(G, B), publication(G, A) )
%   | | then return 0.3573255097932555;  // std dev = 1,83e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(H, B), publication(H, I), tempadvisedby(J, I) )
%   | | | then return 0.29916659820616887;  // std dev = 0,255, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else if ( publication(K, B) )
%   | | | | then return -0.04014538673513168;  // std dev = 0,884, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.26227367843733396;  // std dev = 0,392, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else return -0.0931900347467964;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, E), professor(E) )
%   | then if ( publication(D, B) )
%   | | then return 0.23325610406612854;  // std dev = 0,235, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.2758203288188261;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( hasposition(E, C) )
%   | | | | then if ( publication(G, B), publication(G, H), student(H) )
%   | | | | | then if ( publication(G, E) )
%   | | | | | | then return 0.3178631833811222;  // std dev = 0,714, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return -0.03157147323600238;  // std dev = 0,502, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | else return -0.09795442625587153;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.14212176609352348;  // std dev = 1,117, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( tempadvisedby(I, B) )
%   | | then return 0.20307015498301761;  // std dev = 0,320, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else return 0.2703568744281572;  // std dev = 0,172, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else return -0.08244335541085485;  // std dev = 0,083, 77,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, D), tempadvisedby(D, E) )
%   | then if ( publication(C, B) )
%   | | then return -0.0842484234918331;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21182747802404175;  // std dev = 0,621, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.21375677657918524;  // std dev = 0,176, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | then if ( publication(I, B), tempadvisedby(J, H) )
%   | | | | then if ( publication(I, H), publication(I, K), student(K) )
%   | | | | | then return 0.2534698549102983;  // std dev = 0,713, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return -0.18851508225803748;  // std dev = 0,761, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return 0.16443964346747034;  // std dev = 1,085, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else if ( tempadvisedby(L, B), inphase(L, M), inphase(A, M) )
%   | | | | then return 0.28704531397716304;  // std dev = 0,089, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.17007669631642752;  // std dev = 0,291, 52,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=46 */
%   else return -0.07937089509125168;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), hasposition(E, C), projectmember(F, E) )
%   | then if ( publication(G, A), publication(G, B) )
%   | | then return 0.13774304886720762;  // std dev = 0,266, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else if ( publication(H, A), publication(I, B) )
%   | | | then if ( publication(H, J), publication(I, J) )
%   | | | | then return 0.04587487475747882;  // std dev = 0,763, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return -0.05509940173427188;  // std dev = 0,721, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(K, B), publication(K, L), tempadvisedby(L, M) )
%   | | | | then return 0.22379183677480063;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( projectmember(N, B), publication(P, A) )
%   | | | | | then return 0.1895498686750915;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(Q, A) )
%   | | | | | | then return 0.05296301196369899;  // std dev = 0,820, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.12159515056091674;  // std dev = 0,317, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | else return 0.1656232775759143;  // std dev = 0,244, 42,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   else return -0.07147206835814965;  // std dev = 0,082, 77,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=1 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, E), tempadvisedby(E, F) )
%   | | then if ( projectmember(G, B) )
%   | | | then return 0.16212686801994647;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1450194148702949;  // std dev = 0,835, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(H, C), publication(I, B), publication(I, A) )
%   | | | then return 0.1892334735375686;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else if ( publication(J, B), publication(J, K), inphase(K, L) )
%   | | | | then if ( inphase(C, L), publication(M, A) )
%   | | | | | then return -0.1687651578552635;  // std dev = 0,363, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | | | else return 0.13973114425147282;  // std dev = 0,264, 35,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | | | | else if ( projectmember(N, B) )
%   | | | | | then return 0.07618473748278225;  // std dev = 0,881, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | else return 0.22979293185327346;  // std dev = 0,711, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.12884620041296474;  // std dev = 0,269, 42,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   else return -0.06902469137386817;  // std dev = 2,47e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), hasposition(E, C), projectmember(F, E) )
%   | then if ( publication(G, D) )
%   | | then return 0.09576385312335664;  // std dev = 0,244, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( projectmember(H, B), inphase(D, I), inphase(A, I) )
%   | | | then return 0.20523553058150268;  // std dev = 0,078, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(J, B), publication(J, K), tempadvisedby(K, L) )
%   | | | | then return -0.07430940231646817;  // std dev = 0,956, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else if ( publication(M, A), publication(M, B) )
%   | | | | | then return 0.17306236607903067;  // std dev = 0,046, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | | | else if ( publication(N, B), publication(N, P), projectmember(Q, P) )
%   | | | | | | then return 0.18810253702851087;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else if ( projectmember(R, B) )
%   | | | | | | | then return -0.049845833628599734;  // std dev = 0,804, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | | else return 0.06923589258173485;  // std dev = 0,349, 26,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | else return 0.1145238937805566;  // std dev = 0,247, 42,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   else return -0.06303694151473653;  // std dev = 0,081, 77,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=1 */
Results
   AUC ROC   = 0.9625
   AUC PR    = 0.936877
   CLL	      = -0.190067
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total learning time: 20.743 seconds
Total inference time: 0.653 seconds
AUC ROC: 0.9625


Dataset: imdb,uwcse, Run: 1, Fold: 2, Type: scratch, Total folds for small set: 4, Time: 00:06:53
{'CLL': -0.190067, 'Recall': 1.0, 'Learning time': 20.743, 'Precision': [0.952381, 0.5], 'AUC ROC': 0.9625, 'F1': 0.97561, 'AUC PR': 0.936877, 'Inference time': 0.653}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   else return -0.1418510649004876;  // std dev = 2,17e-07, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   else return -0.1254446385283921;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   else return -0.1123163781936065;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   else return -0.10159632948783634;  // std dev = 8,16e-08, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   else return -0.09269127618926049;  // std dev = 2,01e-07, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   else return -0.08518475138839678;  // std dev = 1,15e-07, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   else return -0.07877675473109146;  // std dev = 6,66e-08, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   else return -0.07324622576333709;  // std dev = 7,88e-08, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   else return -0.06842697784420314;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   else return -0.06419184008202582;  // std dev = 1,56e-07, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */


Predicates from source: ['workedunder(person,person).', 'director(person).', 'movie(movie,person).'] 

Source structured tree: [['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)'}, {'true': [1.43e-06, 0, 382], 'false': [2.17e-07, 382, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)'}, {'true': [0.0, 0, 382], 'false': [0.0, 382, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)'}, {'true': [0.0, 0, 382], 'false': [0.0, 382, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)'}, {'true': [0.0, 0, 382], 'false': [8.16e-08, 382, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)'}, {'true': [0.0, 0, 382], 'false': [2.01e-07, 382, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)'}, {'true': [4.42e-07, 0, 382], 'false': [1.15e-07, 382, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)'}, {'true': [2.53e-07, 0, 382], 'false': [6.66e-08, 382, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)'}, {'true': [2.6e-07, 0, 382], 'false': [7.88e-08, 382, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)'}, {'true': [0.0, 0, 382], 'false': [0.0, 382, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)'}, {'true': [0.0, 0, 382], 'false': [1.56e-07, 382, 0]}]] 



Best mapping found: ['workedunder(A,B) -> advisedby(B,A)', 'director(A) -> student(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(B, A)', {'': 'student(B), publication(C, A), publication(C, B)'}, {'true': [1.43e-06, 0, 382], 'false': [2.17e-07, 382, 0]}], ['advisedby(B, A)', {'': 'student(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [0.0, 382, 0]}], ['advisedby(B, A)', {'': 'student(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [0.0, 382, 0]}], ['advisedby(B, A)', {'': 'student(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [8.16e-08, 382, 0]}], ['advisedby(B, A)', {'': 'student(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [2.01e-07, 382, 0]}], ['advisedby(B, A)', {'': 'student(B), publication(C, A), publication(C, B)'}, {'true': [4.42e-07, 0, 382], 'false': [1.15e-07, 382, 0]}], ['advisedby(B, A)', {'': 'student(B), publication(C, A), publication(C, B)'}, {'true': [2.53e-07, 0, 382], 'false': [6.66e-08, 382, 0]}], ['advisedby(B, A)', {'': 'student(B), publication(C, A), publication(C, B)'}, {'true': [2.6e-07, 0, 382], 'false': [7.88e-08, 382, 0]}], ['advisedby(B, A)', {'': 'student(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [0.0, 382, 0]}], ['advisedby(B, A)', {'': 'student(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [1.56e-07, 382, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(B, A) :- student(B), publication(C, A), publication(C, B).;false;false', '1;;advisedby(B, A) :- student(B), publication(C, A), publication(C, B).;false;false', '2;;advisedby(B, A) :- student(B), publication(C, A), publication(C, B).;false;false', '3;;advisedby(B, A) :- student(B), publication(C, A), publication(C, B).;false;false', '4;;advisedby(B, A) :- student(B), publication(C, A), publication(C, B).;false;false', '5;;advisedby(B, A) :- student(B), publication(C, A), publication(C, B).;false;false', '6;;advisedby(B, A) :- student(B), publication(C, A), publication(C, B).;false;false', '7;;advisedby(B, A) :- student(B), publication(C, A), publication(C, B).;false;false', '8;;advisedby(B, A) :- student(B), publication(C, A), publication(C, B).;false;false', '9;;advisedby(B, A) :- student(B), publication(C, A), publication(C, B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), publication(C, B), publication(C, A) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.3025933795439567;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), publication(C, B), publication(C, A) )
%   then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.2616318086752123;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), publication(C, B), publication(C, A) )
%   then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.2192721473492705;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), publication(C, B), publication(C, A) )
%   then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.17873524574687283;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), publication(C, B), publication(C, A) )
%   then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.1424392447767628;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), publication(C, B), publication(C, A) )
%   then return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.11159559999632986;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), publication(C, B), publication(C, A) )
%   then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.08637026299843613;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), publication(C, B), publication(C, A) )
%   then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.06628370899125426;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), publication(C, B), publication(C, A) )
%   then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.050575643621874215;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), publication(C, B), publication(C, A) )
%   then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.03843884907512933;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
Results
   AUC ROC   = 0.666667
   AUC PR    = 0.77381
   CLL	      = -0.610932
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.333333
   F1        = 0.5


Total learning time: 3.041 seconds
Total inference time: 0.449 seconds
AUC ROC: 0.666667


Results in test set
   AUC ROC   = 0.666667
   AUC PR    = 0.77381
   CLL	      = -0.610932
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.333333
   F1        = 0.5


Total inference time: 0.449 seconds
AUC ROC: 0.666667
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'student(A), publication(C, B), publication(C, A)'}, {'true': [0.894, 1, 4], 'false': [2.582, 15, 12]}], ['advisedby(A, B)', {'': 'student(A), publication(C, B), publication(C, A)'}, {'true': [0.894, 1, 4], 'false': [2.582, 15, 12]}], ['advisedby(A, B)', {'': 'student(A), publication(C, B), publication(C, A)'}, {'true': [0.894, 1, 4], 'false': [2.582, 15, 12]}], ['advisedby(A, B)', {'': 'student(A), publication(C, B), publication(C, A)'}, {'true': [0.894, 1, 4], 'false': [2.582, 15, 12]}], ['advisedby(A, B)', {'': 'student(A), publication(C, B), publication(C, A)'}, {'true': [0.894, 1, 4], 'false': [2.582, 15, 12]}], ['advisedby(A, B)', {'': 'student(A), publication(C, B), publication(C, A)'}, {'true': [0.894, 1, 4], 'false': [2.582, 15, 12]}], ['advisedby(A, B)', {'': 'student(A), publication(C, B), publication(C, A)'}, {'true': [0.894, 1, 4], 'false': [2.582, 15, 12]}], ['advisedby(A, B)', {'': 'student(A), publication(C, B), publication(C, A)'}, {'true': [0.894, 1, 4], 'false': [2.582, 15, 12]}], ['advisedby(A, B)', {'': 'student(A), publication(C, B), publication(C, A)'}, {'true': [0.894, 1, 4], 'false': [2.582, 15, 12]}], ['advisedby(A, B)', {'': 'student(A), publication(C, B), publication(C, A)'}, {'true': [0.894, 1, 4], 'false': [2.582, 15, 12]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
[]
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0.5555555555555556), ('true', 0.8)]
Tree #2: [('false', 0.5555555555555556), ('true', 0.8)]
Tree #3: [('false', 0.5555555555555556), ('true', 0.8)]
Tree #4: [('false', 0.5555555555555556), ('true', 0.8)]
Tree #5: [('false', 0.5555555555555556), ('true', 0.8)]
Tree #6: [('false', 0.5555555555555556), ('true', 0.8)]
Tree #7: [('false', 0.5555555555555556), ('true', 0.8)]
Tree #8: [('false', 0.5555555555555556), ('true', 0.8)]
Tree #9: [('false', 0.5555555555555556), ('true', 0.8)]
Tree #10: [('false', 0.5555555555555556), ('true', 0.8)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( projectmember(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5581489350995124;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else if ( professor(B), student(A) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), publication(E, B) )
%   | then if ( publication(E, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, F), inphase(F, G) )
%   | | | then return 0.4425527212135842;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.497679733378936;  // std dev = 0,835, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7420384691453397;  // std dev = 0,062, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( professor(B), student(A) )
%   | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), publication(E, B) )
%   | then if ( publication(E, A) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, F), projectmember(G, F) )
%   | | | then return 0.39953844774786795;  // std dev = 0,822, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.35251869246253603;  // std dev = 1,158, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.5788386825330193;  // std dev = 0,080, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( professor(B), student(A) )
%   | then return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A), hasposition(B, C) )
%   then if ( projectmember(D, B) )
%   | then return 0.45875909175567375;  // std dev = 0,105, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22876425903842737;  // std dev = 0,486, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.4556231073258763;  // std dev = 0,060, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(B), student(A) )
%   | then return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( hasposition(B, C) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.3499623018673711;  // std dev = 0,096, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then if ( publication(F, A) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.17296382877803212;  // std dev = 0,486, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.3471764347310365;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( hasposition(B, C) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.2757106522644768;  // std dev = 0,084, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then if ( publication(F, A) )
%   | | | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.1298777709608725;  // std dev = 0,486, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.27344110513662195;  // std dev = 0,047, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08026654944252243;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( hasposition(B, C) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.22456386507058668;  // std dev = 0,073, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then if ( publication(F, A) )
%   | | | | then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.09744179438450154;  // std dev = 0,486, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.22274971642982808;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.06479591611329232;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.18812993981464443;  // std dev = 0,064, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then if ( inphase(A, F), tempadvisedby(G, B) )
%   | | | then return 0.2857552209771365;  // std dev = 0,298, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then return -0.048348980766854066;  // std dev = 1,006, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.1866712710405861;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.0074988648336356215;  // std dev = 1,087, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.05376054909043469;  // std dev = 0,377, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( projectmember(E, B) )
%   | | | then return 0.16122484397646925;  // std dev = 0,057, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.061482070886515;  // std dev = 0,472, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.19500090929661124;  // std dev = 0,708, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( hasposition(B, C) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.14070359938444094;  // std dev = 0,051, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.13167480895224407;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06656262388466082;  // std dev = 0,424, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return 0.01923023022404437;  // std dev = 0,804, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.213767
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.831 seconds
Total inference time: 0.489 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


Refining iteration 2
********************************
Candidate for revision
['0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true', '0;true;publication(D, A).;false;true', '0;false;professor(B), student(A).;true;false', '0;true,false;projectmember(E, B).;false;false', '1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true', '1;true;tempadvisedby(D, B), publication(E, B).;true;false', '1;false;professor(B), student(A).;false;false', '1;true,true;publication(E, A).;false;false', '2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true', '2;true;tempadvisedby(D, B), publication(E, B).;true;false', '2;false;professor(B), student(A).;false;false', '2;true,true;publication(E, A).;false;false', '3;;advisedby(A, B) :- professor(B), student(A), hasposition(B, C).;true;true', '3;true;projectmember(D, B).;false;true', '3;false;professor(B), student(A).;false;false', '3;true,false;tempadvisedby(E, B).;true;false', '3;true,false,true;publication(F, A).;false;true', '4;;advisedby(A, B) :- professor(B), student(A).;true;false', '4;true;hasposition(B, C).;true;false', '4;true,true,false,true;publication(F, A).;false;true', '4;true,true,false;tempadvisedby(E, B).;true;false', '4;true,true;projectmember(D, B).;false;true', '5;;advisedby(A, B) :- professor(B), student(A).;true;false', '5;true;hasposition(B, C).;true;false', '5;true,true,false,true;publication(F, A).;false;true', '5;true,true,false;tempadvisedby(E, B).;true;false', '5;true,true;projectmember(D, B).;false;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;false', '6;true;hasposition(B, C).;true;false', '6;true,true,false,true;publication(F, A).;false;true', '6;true,true,false;tempadvisedby(E, B).;true;false', '6;true,true;projectmember(D, B).;false;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;false', '7;true;projectmember(C, B).;false;true', '7;true,false,true,false;tempadvisedby(H, B).;true;false', '7;true,false;publication(D, B), publication(D, E), inphase(E, F).;true;false', '7;true,false,true;inphase(A, F), tempadvisedby(G, B).;false;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;false', '8;true;publication(C, A).;false;true', '8;true,false;tempadvisedby(D, B).;true;false', '8;true,false,true;projectmember(E, B).;false;true', '9;;advisedby(A, B) :- professor(B), student(A).;true;false', '9;true;hasposition(B, C).;true;true', '9;true,true,false;publication(E, A).;false;false', '9;true,true;projectmember(D, B).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true', 0.6666666666666666), ('true,false,false', 0.7)]
Tree #2: [('true,true,false,true', 0.6666666666666666), ('false,true', 0.6666666666666666), ('true,true,false,false', 0.75)]
Tree #3: [('true,true,false,false', 0.6666666666666666), ('false,true', 0.6666666666666666), ('true,true,false,true', 0.75)]
Tree #4: [('true,false,true,false', 0.625), ('false,true', 0.6666666666666666)]
Tree #5: [('true,true,false,true,false', 0.625), ('true,false', 0.6666666666666666)]
Tree #6: [('true,true,false,true,false', 0.625), ('true,false', 0.6666666666666666)]
Tree #7: [('true,true,false,true,false', 0.625), ('true,false', 0.6666666666666666)]
Tree #8: [('true,false,true,false,true', 0.5), ('true,false,false', 0.6)]
Tree #9: [('true,false,true,false', 0.625), ('true,false,false', 0.75), ('true,true', 0.8)]
Tree #10: [('true,false', 0.6666666666666666), ('true,true,false,false', 0.7)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( projectmember(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5581489350995124;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else if ( professor(B), student(A) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), publication(E, B) )
%   | then if ( publication(E, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4646035260797247;  // std dev = 1,427, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return 0.7420384691453397;  // std dev = 0,062, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( professor(B), student(A) )
%   | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), publication(E, B) )
%   | then if ( publication(E, A) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3714888162276789;  // std dev = 1,423, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return 0.5788386825330193;  // std dev = 0,080, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( professor(B), student(A) )
%   | then return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A), hasposition(B, C) )
%   then if ( projectmember(D, B) )
%   | then return 0.4663884394753329;  // std dev = 0,120, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2250704654069081;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.4556231073258763;  // std dev = 0,060, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(B), student(A) )
%   | then return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( hasposition(B, C) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.35560139343613273;  // std dev = 0,110, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then if ( publication(F, A) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.17004956516249886;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.3471764347310365;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( hasposition(B, C) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.2797589983733059;  // std dev = 0,097, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then if ( publication(F, A) )
%   | | | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.12765964792066203;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.27344110513662195;  // std dev = 0,047, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08026654944252243;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( hasposition(B, C) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.22752047248095758;  // std dev = 0,084, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then if ( publication(F, A) )
%   | | | | then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.09577810024188611;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.22274971642982808;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.06479591611329232;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.19035209290181326;  // std dev = 0,074, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then if ( inphase(A, F), tempadvisedby(G, B) )
%   | | | then return 0.2850579333300315;  // std dev = 0,296, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then return -0.052999913292837264;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.1866712710405861;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.009927536289289418;  // std dev = 1,086, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.05371208725298773;  // std dev = 0,377, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( projectmember(E, B) )
%   | | | then return 0.16294357758658212;  // std dev = 0,065, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06071545903226101;  // std dev = 0,470, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.19475439152989657;  // std dev = 0,708, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( hasposition(B, C) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.1420673342659473;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.13174062813971946;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06610709907231663;  // std dev = 1,336, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return 0.01874663632623665;  // std dev = 0,804, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.211671
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.339 seconds
Total inference time: 0.477 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 18.626
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 0.962963
   AUC PR    = 0.960273
   CLL	      = -0.250622
   Precision = 0.9 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.947368


Total inference time: 0.518 seconds
AUC ROC: 0.962963
Dataset: imdb,uwcse, Run: 1, Fold: 3, Type: transfer, Total folds for small set: 1, Time: 00:07:19
{'CLL': -0.250622, 'Recall': 1.0, 'Learning time': 18.626, 'Precision': [0.9, 0.5], 'Mapping Results': {'Possible mappings': 120, 'Total time': 2.5730197429656982, 'Generating mappings time': 0.04361605644226074, 'Finding best mapping': 0.008571147918701172, 'Generating paths time': 2.5100924968719482, 'Knowledge compiling time': 0.01072549819946289}, 'Parameter Learning Results': {'CLL': -0.720944, 'Recall': 0.111111, 'Precision': [0.5, 0.5], 'AUC ROC': 0.5, 'F1': 0.181818, 'AUC PR': 0.5}, 'AUC ROC': 0.962963, 'F1': 0.947368, 'AUC PR': 0.960273, 'Inference time': 0.518}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( projectmember(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5581489350995124;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else if ( professor(B), student(A) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), publication(E, B) )
%   | then if ( publication(E, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, F), inphase(F, G) )
%   | | | then return 0.4425527212135842;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.497679733378936;  // std dev = 0,835, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7420384691453397;  // std dev = 0,062, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( professor(B), student(A) )
%   | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), publication(E, B) )
%   | then if ( publication(E, A) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, F), projectmember(G, F) )
%   | | | then return 0.39953844774786795;  // std dev = 0,822, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.35251869246253603;  // std dev = 1,158, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.5788386825330193;  // std dev = 0,080, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( professor(B), student(A) )
%   | then return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A), hasposition(B, C) )
%   then if ( projectmember(D, B) )
%   | then return 0.45875909175567375;  // std dev = 0,105, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22876425903842737;  // std dev = 0,486, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.4556231073258763;  // std dev = 0,060, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(B), student(A) )
%   | then return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( hasposition(B, C) )
%   | then if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(E, F), projectmember(G, F) )
%   | | | | then return 0.22028409880055683;  // std dev = 0,791, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.2164034217688597;  // std dev = 1,159, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.3291064432142931;  // std dev = 0,074, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.291964242795027;  // std dev = 0,109, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then if ( inphase(A, F) )
%   | | | then return 0.33193093915127214;  // std dev = 0,281, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.09699998703003287;  // std dev = 1,064, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.04280970228812275;  // std dev = 1,085, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.2361515992145844;  // std dev = 0,095, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then if ( inphase(A, F) )
%   | | | then return 0.2665030116633522;  // std dev = 0,252, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.07424333612642044;  // std dev = 1,066, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.033628543430521796;  // std dev = 1,085, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.19666350913620112;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.15847109306246354;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.056482352901536456;  // std dev = 0,467, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.14456503233188092;  // std dev = 0,844, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.1677130496085315;  // std dev = 0,073, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A), publication(D, B) )
%   | | then return 0.1361833297534749;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.04281209056192771;  // std dev = 0,467, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.11581394458371412;  // std dev = 0,845, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B) )
%   | then if ( projectmember(E, B) )
%   | | then return 0.14577745768851674;  // std dev = 0,065, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.12300216261350516;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0325314481504093;  // std dev = 0,467, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return 0.18155192325565647;  // std dev = 0,082, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( publication(G, A) )
%   | then if ( publication(H, B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.15006172586753438;  // std dev = 0,210, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( student(A), student(B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.0974017216802908;  // std dev = 0,734, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Results
   AUC ROC   = 0.962963
   AUC PR    = 0.960273
   CLL	      = -0.248558
   Precision = 0.9 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.947368


Total learning time: 9.085 seconds
Total inference time: 0.602 seconds
AUC ROC: 0.962963


Dataset: imdb,uwcse, Run: 1, Fold: 3, Type: scratch, Total folds for small set: 1, Time: 00:07:29
{'CLL': -0.248558, 'Recall': 1.0, 'Learning time': 9.085, 'Precision': [0.9, 0.5], 'AUC ROC': 0.962963, 'F1': 0.947368, 'AUC PR': 0.960273, 'Inference time': 0.602}


Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [1.43e-06, 0, 382], 'false': [2.17e-07, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [0.0, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [0.0, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [8.16e-08, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [2.01e-07, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [4.42e-07, 0, 382], 'false': [1.15e-07, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.53e-07, 0, 382], 'false': [6.66e-08, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.6e-07, 0, 382], 'false': [7.88e-08, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [0.0, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [1.56e-07, 382, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.7081489350995123;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return 0.26840534535592236;  // std dev = 4,344, 78,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=32 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5987301289105089;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return 0.23249592168098532;  // std dev = 4,344, 78,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=32 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.4708413690230275;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return 0.1959396724574205;  // std dev = 4,344, 78,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=32 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.35556966135501755;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return 0.16110796055770385;  // std dev = 4,344, 78,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=32 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.2674403085153742;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return 0.12977019405277077;  // std dev = 4,344, 78,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=32 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.2041766068841464;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return 0.10285174868320177;  // std dev = 4,344, 78,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=32 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1589768415860658;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return 0.08053142240919532;  // std dev = 4,344, 78,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=32 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.12610125737419722;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return 0.062495895170426974;  // std dev = 4,344, 78,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=32 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.10162108252318384;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return 0.048188914827322675;  // std dev = 4,344, 78,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=32 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.08297179282455361;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return 0.03698620375772553;  // std dev = 4,344, 78,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=32 */
Results
   AUC ROC   = 0.555556
   AUC PR    = 0.553672
   CLL	      = -0.718041
   Precision = 0.6 at threshold = 0.5
   Recall    = 0.333333
   F1        = 0.428571


Total learning time: 5.495 seconds
Total inference time: 0.495 seconds
AUC ROC: 0.555556


Results in test set
   AUC ROC   = 0.555556
   AUC PR    = 0.553672
   CLL	      = -0.718041
   Precision = 0.6 at threshold = 0.5
   Recall    = 0.333333
   F1        = 0.428571


Total inference time: 0.495 seconds
AUC ROC: 0.555556
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [1.597, 3, 17], 'false': [4.344, 46, 32]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [1.597, 3, 17], 'false': [4.344, 46, 32]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [1.597, 3, 17], 'false': [4.344, 46, 32]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [1.597, 3, 17], 'false': [4.344, 46, 32]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [1.597, 3, 17], 'false': [4.344, 46, 32]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [1.597, 3, 17], 'false': [4.344, 46, 32]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [1.597, 3, 17], 'false': [4.344, 46, 32]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [1.597, 3, 17], 'false': [4.344, 46, 32]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [1.597, 3, 17], 'false': [4.344, 46, 32]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [1.597, 3, 17], 'false': [4.344, 46, 32]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
[]
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0.5897435897435898), ('true', 0.85)]
Tree #2: [('false', 0.5897435897435898), ('true', 0.85)]
Tree #3: [('false', 0.5897435897435898), ('true', 0.85)]
Tree #4: [('false', 0.5897435897435898), ('true', 0.85)]
Tree #5: [('false', 0.5897435897435898), ('true', 0.85)]
Tree #6: [('false', 0.5897435897435898), ('true', 0.85)]
Tree #7: [('false', 0.5897435897435898), ('true', 0.85)]
Tree #8: [('false', 0.5897435897435898), ('true', 0.85)]
Tree #9: [('false', 0.5897435897435898), ('true', 0.85)]
Tree #10: [('false', 0.5897435897435898), ('true', 0.85)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(D, G), inphase(G, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(C, I), publication(D, I) )
%   | | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(J, B), inphase(J, K), inphase(A, K) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(L, B), publication(M, B) )
%   | | | then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.1418510649004877;  // std dev = 3,65e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(D, G), inphase(G, H) )
%   | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(C, I), publication(D, I) )
%   | | | | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | then if ( publication(K, L), inphase(L, M), inphase(A, M) )
%   | | | then return 0.4905956472835454;  // std dev = 0,423, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.7414330614119484;  // std dev = 0,043, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7239130927369786;  // std dev = 0,060, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.12544463852839133;  // std dev = 2,11e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.508738411682717;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), professor(G) )
%   | | | then return 0.07434858417359146;  // std dev = 0,767, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(C, H), professor(H) )
%   | | | | then return 0.20155638342875162;  // std dev = 1,085, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else return 0.40284047239104304;  // std dev = 0,793, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(I, B), inphase(I, J), inphase(A, J) )
%   | | then return 0.31715212345114113;  // std dev = 0,772, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(K, B), publication(L, B) )
%   | | | then return 0.5243671252006736;  // std dev = 0,260, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.5542698584514067;  // std dev = 2,98e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.1123163781936064;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then return 0.39428368248311996;  // std dev = 0,226, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( tempadvisedby(E, B), publication(D, F), inphase(F, G) )
%   | | | then return 0.32130515382414937;  // std dev = 0,788, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(C, H), publication(D, H) )
%   | | | | then return 0.05638691793051219;  // std dev = 0,861, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.19612738006736685;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(I, B), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), yearsinprogram(K, L), yearsinprogram(A, L) )
%   | | | then return 0.5097838822689147;  // std dev = 0,048, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(I, M), inphase(M, N), inphase(A, N) )
%   | | | | then return -0.12777248543632821;  // std dev = 0,774, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.4385556256901671;  // std dev = 1,49e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.42681243208058056;  // std dev = 0,136, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.10159632948783634;  // std dev = 7,45e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.28707030588941435;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.32579355100121404;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), professor(G) )
%   | | | then return 0.008294827169218302;  // std dev = 0,747, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(C, H), professor(H) )
%   | | | | then return 0.1458366832816635;  // std dev = 1,082, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else return 0.2621868509001832;  // std dev = 0,777, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(I, B), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), yearsinprogram(K, L), yearsinprogram(A, L) )
%   | | | then return 0.38465251117585836;  // std dev = 0,047, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19115074003930818;  // std dev = 0,329, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.3275362191974588;  // std dev = 0,129, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.09269127618926105;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.22294938838632694;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.25863677606815333;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(D, G), inphase(G, H) )
%   | | | then return 0.22286550750773218;  // std dev = 0,765, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(C, I), publication(D, I) )
%   | | | | then return 0.028358886577183183;  // std dev = 0,854, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.10542189763156971;  // std dev = 1,003, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( projectmember(J, B) )
%   | | then return 0.3029998625374667;  // std dev = 0,088, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(K, B), publication(L, B) )
%   | | | then return 0.19515058766478408;  // std dev = 0,284, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.25149015039472894;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.17771917759407327;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.2122020446354751;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), professor(G) )
%   | | | then return -0.031131524002151023;  // std dev = 0,734, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(C, H), hasposition(H, I), hasposition(B, I) )
%   | | | | then return 0.19050795640698423;  // std dev = 1,010, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.06273230854875961;  // std dev = 0,842, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(J, B), tempadvisedby(K, B) )
%   | | then if ( publication(J, L), inphase(L, M), inphase(A, M) )
%   | | | then return 0.08592952670540496;  // std dev = 0,348, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.25500204076228766;  // std dev = 0,049, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.21355280291860299;  // std dev = 0,095, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.07877675473109179;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(D, A) )
%   | then if ( publication(C, A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.14491573006888656;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.17888723166710507;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), inphase(G, H) )
%   | | | then return 0.16854374049219967;  // std dev = 0,758, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(C, I), publication(D, I) )
%   | | | | then return 0.00364016489132081;  // std dev = 0,837, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.04940940654588791;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(J, B), tempadvisedby(K, B) )
%   | | then if ( publication(J, L), yearsinprogram(L, M), yearsinprogram(A, M) )
%   | | | then return 0.23787780321846622;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.06504833791447114;  // std dev = 0,324, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.1799913086329301;  // std dev = 0,085, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.07324622576333704;  // std dev = 9,13e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.12039707961561437;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.15410095641317823;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), professor(G) )
%   | | | then return -0.05251038932085617;  // std dev = 0,727, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(C, H), hasposition(H, I), hasposition(B, I) )
%   | | | | then return 0.1430494043081023;  // std dev = 1,013, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.0321199099077229;  // std dev = 0,826, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(J, B), publication(J, K), inphase(K, L) )
%   | | then if ( tempadvisedby(K, M) )
%   | | | then return -0.030973959039917582;  // std dev = 0,557, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13758814059200264;  // std dev = 0,194, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0.17606741314993954;  // std dev = 0,084, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06842697784420274;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( student(A) )
%   | then if ( publication(C, A), publication(C, D), professor(D) )
%   | | then if ( publication(C, B) )
%   | | | then if ( tempadvisedby(E, B), tempadvisedby(F, D), publication(G, F) )
%   | | | | then return -0.14843960345472382;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.16496248041503297;  // std dev = 0,095, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else if ( tempadvisedby(H, B), tempadvisedby(I, D) )
%   | | | | then return 0.15886761236151192;  // std dev = 0,503, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return -0.047469790319706766;  // std dev = 1,163, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( publication(J, B), publication(J, K), tempadvisedby(L, K) )
%   | | | then if ( tempadvisedby(M, B), publication(J, N), tempadvisedby(N, P) )
%   | | | | then return -0.025107888516610704;  // std dev = 0,554, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.15151721682068534;  // std dev = 0,186, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.010896424361712467;  // std dev = 0,562, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188175
   Precision = 0.9 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.947368


Total learning time: 25.279 seconds
Total inference time: 0.725 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


Refining iteration 2
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), student(A).;true;false', '0;true;publication(C, A), publication(D, B).;true;true', '0;true,true;publication(C, B).;true;true', '0;true,true,true;tempadvisedby(E, B).;false;false', '0;true,false;tempadvisedby(J, B), inphase(J, K), inphase(A, K).;false;true', '0;true,true,false;tempadvisedby(F, B), publication(D, G), inphase(G, H).;false;false', '0;true,false,false;tempadvisedby(L, B), publication(M, B).;false;false', '1;;advisedby(A, B) :- professor(B), student(A).;true;false', '1;true;publication(C, A), publication(D, B).;true;true', '1;true,false,true;publication(K, L), inphase(L, M), inphase(A, M).;false;false', '1;true,true;publication(C, B).;true;true', '1;true,true,true;tempadvisedby(E, B).;false;false', '1;true,false;tempadvisedby(J, B), publication(K, B).;true;false', '1;true,true,false;tempadvisedby(F, B), publication(D, G), inphase(G, H).;false;false', '2;;advisedby(A, B) :- professor(B), student(A).;true;false', '2;true;publication(C, A), publication(D, B).;true;true', '2;true,true;publication(C, B).;true;true', '2;true,true,true;tempadvisedby(E, B).;false;false', '2;true,false;tempadvisedby(I, B), inphase(I, J), inphase(A, J).;false;true', '2;true,true,false;tempadvisedby(F, B), publication(C, G), professor(G).;false;false', '2;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false', '3;;advisedby(A, B) :- professor(B), student(A).;true;false', '3;true;publication(C, A), publication(D, B).;true;true', '3;true,false,true;publication(I, K), yearsinprogram(K, L), yearsinprogram(A, L).;false;true', '3;true,true;publication(C, B).;false;true', '3;true,false,true,false;publication(I, M), inphase(M, N), inphase(A, N).;false;false', '3;true,false;publication(I, B), tempadvisedby(J, B).;true;false', '3;true,true,false;tempadvisedby(E, B), publication(D, F), inphase(F, G).;false;false', '4;;advisedby(A, B) :- professor(B), student(A).;true;false', '4;true;publication(C, A), publication(D, B).;true;true', '4;true,false,true;publication(I, K), yearsinprogram(K, L), yearsinprogram(A, L).;false;false', '4;true,true;publication(C, B).;true;true', '4;true,true,true;tempadvisedby(E, B).;false;false', '4;true,false;publication(I, B), tempadvisedby(J, B).;true;false', '4;true,true,false;tempadvisedby(F, B), publication(C, G), professor(G).;false;false', '5;;advisedby(A, B) :- professor(B), student(A).;true;false', '5;true;publication(C, A), publication(D, B).;true;true', '5;true,true;publication(C, B).;true;true', '5;true,true,true;tempadvisedby(E, B).;false;false', '5;true,false;projectmember(J, B).;false;true', '5;true,true,false;tempadvisedby(F, B), publication(D, G), inphase(G, H).;false;false', '5;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false', '6;;advisedby(A, B) :- professor(B), student(A).;true;false', '6;true;publication(C, A), publication(D, B).;true;true', '6;true,false,true;publication(J, L), inphase(L, M), inphase(A, M).;false;false', '6;true,true;publication(C, B).;true;true', '6;true,true,true;tempadvisedby(E, B).;false;false', '6;true,false;publication(J, B), tempadvisedby(K, B).;true;false', '6;true,true,false;tempadvisedby(F, B), publication(C, G), professor(G).;false;false', '7;;advisedby(A, B) :- professor(B), student(A).;true;false', '7;true;publication(C, B), publication(D, A).;true;true', '7;true,false,true;publication(J, L), yearsinprogram(L, M), yearsinprogram(A, M).;false;false', '7;true,true;publication(C, A).;true;true', '7;true,true,true;tempadvisedby(E, B).;false;false', '7;true,false;publication(J, B), tempadvisedby(K, B).;true;false', '7;true,true,false;tempadvisedby(F, B), publication(C, G), inphase(G, H).;false;false', '8;;advisedby(A, B) :- professor(B), student(A).;true;false', '8;true;publication(C, A), publication(D, B).;true;true', '8;true,false,true;tempadvisedby(K, M).;false;false', '8;true,true;publication(C, B).;true;true', '8;true,true,true;tempadvisedby(E, B).;false;false', '8;true,false;publication(J, B), publication(J, K), inphase(K, L).;true;false', '8;true,true,false;tempadvisedby(F, B), publication(C, G), professor(G).;false;false', '9;;advisedby(A, B) :- student(B).;false;true', '9;false,true,true;publication(C, B).;true;false', '9;false,true,false;publication(J, B), publication(J, K), tempadvisedby(L, K).;true;false', '9;false,true,false,true;tempadvisedby(M, B), publication(J, N), tempadvisedby(N, P).;false;false', '9;false,true,true,true;tempadvisedby(E, B), tempadvisedby(F, D), publication(G, F).;false;false', '9;false;student(A).;true;false', '9;false,true;publication(C, A), publication(C, D), professor(D).;true;true']
Refining candidate
***************************
Revision points found
Tree #1: [('true,true,false,false,false', 0.5), ('true,true,false,true', 0.6666666666666666), ('true,false,true', 0.6666666666666666), ('true,true,false,false,true', 0.75), ('true,true,true,true', 0.9166666666666666), ('true,false,false,true', 0.9230769230769231)]
Tree #2: [('true,true,false,false,false', 0.5), ('true,true,false,true', 0.6666666666666666), ('true,true,false,false,true', 0.75), ('true,false,true,true', 0.75), ('true,true,true,true', 0.9166666666666666)]
Tree #3: [('true,true,false,false,true', 0.6), ('true,true,false,false,false', 0.6666666666666666), ('true,true,false,true', 0.6666666666666666), ('true,false,true', 0.6666666666666666), ('true,true,true,true', 0.9166666666666666), ('true,false,false,true', 0.9230769230769231)]
Tree #4: [('true,true,false,false,false', 0.5), ('true,true,false,true', 0.6666666666666666), ('true,false,true,false,true', 0.6666666666666666), ('true,true,false,false,true', 0.75), ('true,true,true', 0.9444444444444444)]
Tree #5: [('true,true,false,false,true', 0.6), ('true,true,false,true', 0.6666666666666666), ('true,true,false,false,false', 0.6666666666666666), ('true,false,true,false', 0.7777777777777778), ('true,true,true,true', 0.9166666666666666)]
Tree #6: [('true,true,false,false,false', 0.5), ('true,true,false,true', 0.6666666666666666), ('true,true,false,false,true', 0.75), ('true,false,false,true', 0.8461538461538461), ('true,true,true,true', 0.9166666666666666)]
Tree #7: [('true,true,false,false,true', 0.5), ('true,true,false,false,false', 0.5), ('true,true,false,true', 0.6666666666666666), ('true,false,true,true', 0.75), ('true,true,true,true', 0.9166666666666666)]
Tree #8: [('true,true,false,false,false', 0.5), ('true,true,false,true', 0.6666666666666666), ('true,true,false,false,true', 0.75), ('true,false,true,false', 0.7777777777777778), ('true,true,true,true', 0.9166666666666666)]
Tree #9: [('true,true,false,false,true', 0.5), ('true,true,false,false,false', 0.5), ('true,true,false,true', 0.6666666666666666), ('true,false,true,true', 0.6666666666666666), ('true,true,true,true', 0.9166666666666666), ('true,false,true,false', 0.9411764705882353)]
Tree #10: [('false,true,true,false,false', 0.6666666666666666), ('false,true,false,true,true', 0.6666666666666666), ('false,true,true,true,true', 0.6666666666666666), ('false,true,true,false,true', 0.6666666666666666), ('false,true,false,false', 0.75), ('false,true,false,true,false', 0.9583333333333334)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(D, G), inphase(G, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( tempadvisedby(I, B), inphase(I, J), inphase(A, J) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(K, B), publication(L, B) )
%   | | | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.1418510649004877;  // std dev = 3,65e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.6526478931012827;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(D, G), inphase(G, H) )
%   | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.202334239218108;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | then if ( publication(J, K), inphase(K, L), inphase(A, L) )
%   | | | then return 0.4905956472835454;  // std dev = 1,196, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.7414330614119484;  // std dev = 0,043, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7239130927369786;  // std dev = 0,060, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.12544463852839133;  // std dev = 2,11e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.508738411682717;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), professor(G) )
%   | | | then return 0.06262872630906735;  // std dev = 0,779, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2838933021203728;  // std dev = 1,381, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( tempadvisedby(H, B), inphase(H, I), inphase(A, I) )
%   | | then return 0.31715212345114113;  // std dev = 0,772, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then return 0.5243671252006736;  // std dev = 0,938, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.5542698584514067;  // std dev = 2,98e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.1123163781936064;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then return 0.39428368248311996;  // std dev = 0,960, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( tempadvisedby(E, B), publication(D, F), inphase(F, G) )
%   | | | then return 0.33235493965747936;  // std dev = 0,797, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12655453803847094;  // std dev = 1,359, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( publication(H, B), tempadvisedby(I, B) )
%   | | then if ( publication(H, J), yearsinprogram(J, K), yearsinprogram(A, K) )
%   | | | then return 0.5097838822689147;  // std dev = 0,048, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(H, L), inphase(L, M), inphase(A, M) )
%   | | | | then return -0.12777248543632821;  // std dev = 0,774, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.4385556256901671;  // std dev = 1,49e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.42681243208058056;  // std dev = 0,136, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.10159632948783634;  // std dev = 7,45e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.28707030588941435;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.32579355100121404;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), professor(G) )
%   | | | then return -0.007745088442460839;  // std dev = 0,760, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.20074943992691316;  // std dev = 1,362, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( publication(H, B), tempadvisedby(I, B) )
%   | | then if ( publication(H, J), yearsinprogram(J, K), yearsinprogram(A, K) )
%   | | | then return 0.38465251117585836;  // std dev = 0,047, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19115074003930818;  // std dev = 0,986, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.3275362191974588;  // std dev = 0,129, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.09269127618926105;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.22294938838632694;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.25863677606815333;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(D, G), inphase(G, H) )
%   | | | then return 0.2396080396044027;  // std dev = 0,777, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06560149599996033;  // std dev = 1,348, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( projectmember(I, B) )
%   | | then return 0.3029998625374667;  // std dev = 0,088, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then return 0.19515058766478408;  // std dev = 1,024, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.25149015039472894;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.17771917759407327;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.2122020446354751;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), professor(G) )
%   | | | then return -0.048930224295368245;  // std dev = 0,747, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13762946379999919;  // std dev = 1,349, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( publication(H, B), tempadvisedby(I, B) )
%   | | then if ( publication(H, J), inphase(J, K), inphase(A, K) )
%   | | | then return 0.08592952670540496;  // std dev = 0,984, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.25500204076228766;  // std dev = 0,049, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.21355280291860299;  // std dev = 0,095, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.07877675473109179;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(D, A) )
%   | then if ( publication(C, A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.14491573006888656;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.17888723166710507;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), inphase(G, H) )
%   | | | then return 0.17767649871189517;  // std dev = 0,762, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.02519850275869254;  // std dev = 1,339, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( publication(I, B), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), yearsinprogram(K, L), yearsinprogram(A, L) )
%   | | | then return 0.23787780321846622;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.06504833791447114;  // std dev = 0,973, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.1799913086329301;  // std dev = 0,085, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.07324622576333704;  // std dev = 9,13e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.12039707961561437;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.15410095641317823;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), professor(G) )
%   | | | then return -0.06882187382435029;  // std dev = 0,738, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.09563169181521383;  // std dev = 1,341, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( publication(H, B), publication(H, I), inphase(I, J) )
%   | | then if ( tempadvisedby(I, K) )
%   | | | then return -0.030973959039917582;  // std dev = 0,557, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13758814059200264;  // std dev = 0,798, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0.17606741314993954;  // std dev = 0,084, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06842697784420274;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( student(A) )
%   | then if ( publication(C, A), publication(C, D), professor(D) )
%   | | then if ( publication(C, B) )
%   | | | then if ( tempadvisedby(E, B), tempadvisedby(F, D), publication(G, F) )
%   | | | | then return -0.14843960345472382;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.16496248041503297;  // std dev = 0,095, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -2.7639249597790255E-4;  // std dev = 1,331, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( publication(H, B), publication(H, I), tempadvisedby(J, I) )
%   | | | then if ( tempadvisedby(K, B), publication(H, L), tempadvisedby(L, M) )
%   | | | | then return -0.025107888516610704;  // std dev = 0,554, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.15573677645521905;  // std dev = 0,956, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.014135793030371477;  // std dev = 0,475, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.187871
   Precision = 0.9 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.947368


Total learning time: 6.956 seconds
Total inference time: 0.838 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 39.788
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 0.975309
   AUC PR    = 0.975154
   CLL	      = -0.207252
   Precision = 0.9 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.947368


Total inference time: 0.656 seconds
AUC ROC: 0.975309
Dataset: imdb,uwcse, Run: 1, Fold: 3, Type: transfer, Total folds for small set: 2, Time: 00:08:14
{'CLL': -0.207252, 'Recall': 1.0, 'Learning time': 39.788, 'Precision': [0.9, 0.5], 'Mapping Results': {'Possible mappings': 120, 'Total time': 2.8575615882873535, 'Generating mappings time': 0.04543876647949219, 'Finding best mapping': 0.007699489593505859, 'Generating paths time': 2.789365530014038, 'Knowledge compiling time': 0.015052556991577148}, 'Parameter Learning Results': {'CLL': -0.682046, 'Recall': 0.111111, 'Precision': [1.0, 0.5], 'AUC ROC': 0.555556, 'F1': 0.2, 'AUC PR': 0.617697}, 'AUC ROC': 0.975309, 'F1': 0.947368, 'AUC PR': 0.975154, 'Inference time': 0.656}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(D, G), inphase(G, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(C, I), publication(D, I) )
%   | | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(J, B), inphase(J, K), inphase(A, K) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(L, B), publication(M, B) )
%   | | | then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.1418510649004877;  // std dev = 3,65e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(D, G), inphase(G, H) )
%   | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(C, I), publication(D, I) )
%   | | | | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | then if ( publication(K, L), inphase(L, M), inphase(A, M) )
%   | | | then return 0.4905956472835454;  // std dev = 0,423, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.7414330614119484;  // std dev = 0,043, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7239130927369786;  // std dev = 0,060, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.12544463852839133;  // std dev = 2,11e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.508738411682717;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), professor(G) )
%   | | | then return 0.07434858417359146;  // std dev = 0,767, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(C, H), professor(H) )
%   | | | | then return 0.20155638342875162;  // std dev = 1,085, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else return 0.40284047239104304;  // std dev = 0,793, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(I, B), inphase(I, J), inphase(A, J) )
%   | | then return 0.31715212345114113;  // std dev = 0,772, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(K, B), publication(L, B) )
%   | | | then return 0.5243671252006736;  // std dev = 0,260, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.5542698584514067;  // std dev = 2,98e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.1123163781936064;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then return 0.39428368248311996;  // std dev = 0,226, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( tempadvisedby(E, B), publication(D, F), inphase(F, G) )
%   | | | then return 0.32130515382414937;  // std dev = 0,788, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(C, H), publication(D, H) )
%   | | | | then return 0.05638691793051219;  // std dev = 0,861, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.19612738006736685;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(I, B), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), yearsinprogram(K, L), yearsinprogram(A, L) )
%   | | | then return 0.5097838822689147;  // std dev = 0,048, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(I, M), inphase(M, N), inphase(A, N) )
%   | | | | then return -0.12777248543632821;  // std dev = 0,774, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.4385556256901671;  // std dev = 1,49e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.42681243208058056;  // std dev = 0,136, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.10159632948783634;  // std dev = 7,45e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.28707030588941435;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.32579355100121404;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), professor(G) )
%   | | | then return 0.008294827169218302;  // std dev = 0,747, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(C, H), professor(H) )
%   | | | | then return 0.1458366832816635;  // std dev = 1,082, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else return 0.2621868509001832;  // std dev = 0,777, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(I, B), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), yearsinprogram(K, L), yearsinprogram(A, L) )
%   | | | then return 0.38465251117585836;  // std dev = 0,047, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19115074003930818;  // std dev = 0,329, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.3275362191974588;  // std dev = 0,129, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.09269127618926105;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.22294938838632694;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.25863677606815333;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(D, G), inphase(G, H) )
%   | | | then return 0.22286550750773218;  // std dev = 0,765, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(C, I), publication(D, I) )
%   | | | | then return 0.028358886577183183;  // std dev = 0,854, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.10542189763156971;  // std dev = 1,003, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( projectmember(J, B) )
%   | | then return 0.3029998625374667;  // std dev = 0,088, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(K, B), publication(L, B) )
%   | | | then return 0.19515058766478408;  // std dev = 0,284, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.25149015039472894;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.17771917759407327;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.2122020446354751;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), professor(G) )
%   | | | then return -0.031131524002151023;  // std dev = 0,734, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(C, H), hasposition(H, I), hasposition(B, I) )
%   | | | | then return 0.19050795640698423;  // std dev = 1,010, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.06273230854875961;  // std dev = 0,842, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(J, B), tempadvisedby(K, B) )
%   | | then if ( publication(J, L), inphase(L, M), inphase(A, M) )
%   | | | then return 0.08592952670540496;  // std dev = 0,348, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.25500204076228766;  // std dev = 0,049, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.21355280291860299;  // std dev = 0,095, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.07877675473109179;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(D, A) )
%   | then if ( publication(C, A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.14491573006888656;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.17888723166710507;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), inphase(G, H) )
%   | | | then return 0.16854374049219967;  // std dev = 0,758, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(C, I), publication(D, I) )
%   | | | | then return 0.00364016489132081;  // std dev = 0,837, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.04940940654588791;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(J, B), tempadvisedby(K, B) )
%   | | then if ( publication(J, L), yearsinprogram(L, M), yearsinprogram(A, M) )
%   | | | then return 0.23787780321846622;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.06504833791447114;  // std dev = 0,324, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.1799913086329301;  // std dev = 0,085, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.07324622576333704;  // std dev = 9,13e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.12039707961561437;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.15410095641317823;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), professor(G) )
%   | | | then return -0.05251038932085617;  // std dev = 0,727, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(C, H), hasposition(H, I), hasposition(B, I) )
%   | | | | then return 0.1430494043081023;  // std dev = 1,013, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.0321199099077229;  // std dev = 0,826, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(J, B), tempadvisedby(K, B) )
%   | | then if ( publication(J, L), inphase(L, M), inphase(A, M) )
%   | | | then return 0.03698339406526105;  // std dev = 0,342, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.19494304806333762;  // std dev = 0,021, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.1550153387377355;  // std dev = 0,077, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.06842697784420274;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, D), professor(D) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B), tempadvisedby(F, D), publication(G, F) )
%   | | | then return -0.14843960345472382;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16496248041503297;  // std dev = 0,095, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( tempadvisedby(H, B), tempadvisedby(I, D) )
%   | | | then return 0.15966110561504754;  // std dev = 0,503, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.047469790319706766;  // std dev = 1,163, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( publication(J, B), publication(J, K), tempadvisedby(K, L) )
%   | | then return -0.03790080470943463;  // std dev = 0,560, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(M, B) )
%   | | | then if ( projectmember(N, B) )
%   | | | | then return 0.1595109343627612;  // std dev = 0,055, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.14096191748027634;  // std dev = 0,248, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.1118391579066887;  // std dev = 0,201, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06419184008202623;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
Results
   AUC ROC   = 0.975309
   AUC PR    = 0.975154
   CLL	      = -0.21073
   Precision = 0.9 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.947368


Total learning time: 26.538 seconds
Total inference time: 0.637 seconds
AUC ROC: 0.975309


Dataset: imdb,uwcse, Run: 1, Fold: 3, Type: scratch, Total folds for small set: 2, Time: 00:08:42
{'CLL': -0.21073, 'Recall': 1.0, 'Learning time': 26.538, 'Precision': [0.9, 0.5], 'AUC ROC': 0.975309, 'F1': 0.947368, 'AUC PR': 0.975154, 'Inference time': 0.637}


Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [1.43e-06, 0, 382], 'false': [2.17e-07, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [0.0, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [0.0, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [8.16e-08, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [2.01e-07, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [4.42e-07, 0, 382], 'false': [1.15e-07, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.53e-07, 0, 382], 'false': [6.66e-08, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.6e-07, 0, 382], 'false': [7.88e-08, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [0.0, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [1.56e-07, 382, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.6706489350995116;  // std dev = 2,208, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   else return 0.26380931245800254;  // std dev = 5,055, 106,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=43 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.568219120539126;  // std dev = 2,208, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   else return 0.2285706581462958;  // std dev = 5,055, 106,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=43 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.44921440988959904;  // std dev = 2,208, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   else return 0.1927750055205604;  // std dev = 5,055, 106,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=43 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.34045021542416626;  // std dev = 2,208, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   else return 0.15869164719787945;  // std dev = 5,055, 106,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=43 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.25561419664155544;  // std dev = 2,208, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   else return 0.12801136379195582;  // std dev = 5,055, 106,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=43 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.19377337978413436;  // std dev = 2,208, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   else return 0.10162230231216914;  // std dev = 5,055, 106,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=43 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.14922563755522217;  // std dev = 2,208, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   else return 0.0797014602410464;  // std dev = 5,055, 106,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=43 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.11674889366772234;  // std dev = 2,208, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   else return 0.0619534822520616;  // std dev = 5,055, 106,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=43 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.09261428520870393;  // std dev = 2,208, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   else return 0.04784639689882005;  // std dev = 5,055, 106,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=43 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.07432413189596593;  // std dev = 2,208, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   else return 0.03677892005023094;  // std dev = 5,055, 106,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=43 */
Results
   AUC ROC   = 0.615385
   AUC PR    = 0.621656
   CLL	      = -0.662377
   Precision = 0.714286 at threshold = 0.5
   Recall    = 0.384615
   F1        = 0.5


Total learning time: 8.218 seconds
Total inference time: 0.511 seconds
AUC ROC: 0.615385


Results in test set
   AUC ROC   = 0.615385
   AUC PR    = 0.621656
   CLL	      = -0.662377
   Precision = 0.714286 at threshold = 0.5
   Recall    = 0.384615
   F1        = 0.5


Total inference time: 0.511 seconds
AUC ROC: 0.615385
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.208, 6, 26], 'false': [5.055, 63, 43]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.208, 6, 26], 'false': [5.055, 63, 43]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.208, 6, 26], 'false': [5.055, 63, 43]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.208, 6, 26], 'false': [5.055, 63, 43]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.208, 6, 26], 'false': [5.055, 63, 43]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.208, 6, 26], 'false': [5.055, 63, 43]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.208, 6, 26], 'false': [5.055, 63, 43]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.208, 6, 26], 'false': [5.055, 63, 43]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.208, 6, 26], 'false': [5.055, 63, 43]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.208, 6, 26], 'false': [5.055, 63, 43]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
[]
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0.5943396226415094), ('true', 0.8125)]
Tree #2: [('false', 0.5943396226415094), ('true', 0.8125)]
Tree #3: [('false', 0.5943396226415094), ('true', 0.8125)]
Tree #4: [('false', 0.5943396226415094), ('true', 0.8125)]
Tree #5: [('false', 0.5943396226415094), ('true', 0.8125)]
Tree #6: [('false', 0.5943396226415094), ('true', 0.8125)]
Tree #7: [('false', 0.5943396226415094), ('true', 0.8125)]
Tree #8: [('false', 0.5943396226415094), ('true', 0.8125)]
Tree #9: [('false', 0.5943396226415094), ('true', 0.8125)]
Tree #10: [('false', 0.5943396226415094), ('true', 0.8125)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.8164822684328453;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else if ( publication(F, A), publication(F, G), professor(G) )
%   | | | | then if ( publication(C, G), publication(C, H), student(H) )
%   | | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.772434649385226;  // std dev = 0,280, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | else if ( tempadvisedby(I, B) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.6861389866026452;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else if ( publication(F, A) )
%   | | | | then if ( tempadvisedby(G, B), publication(F, H), professor(H) )
%   | | | | | then return 0.15685460508226887;  // std dev = 0,765, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.5482678705837893;  // std dev = 0,395, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | else return 0.6364436160864007;  // std dev = 0,300, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | else if ( projectmember(I, B) )
%   | | then return 0.45946085024371547;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.38609503717599675;  // std dev = 1,093, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839155;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), projectmember(H, G) )
%   | | | then return 0.42230233808379086;  // std dev = 0,905, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else if ( publication(C, A) )
%   | | | | then return 0.52834705908058;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | | | then return 0.18058306890588835;  // std dev = 0,478, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | | | else return 0.5354283929764763;  // std dev = 0,247, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else if ( publication(K, A) )
%   | | then return 0.37989190430009656;  // std dev = 0,822, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.31058507239150607;  // std dev = 1,088, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360633;  // std dev = 2,79e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2061374073445397;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.40303795363627315;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else if ( publication(F, A), publication(F, G), professor(G) )
%   | | | | then if ( publication(C, G), publication(C, H), student(H) )
%   | | | | | then return 0.32840443239332623;  // std dev = 0,853, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.009286152480448256;  // std dev = 0,827, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.3846373656585051;  // std dev = 0,279, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | else if ( projectmember(I, B) )
%   | | then return 0.30584626455091063;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23719928480179492;  // std dev = 1,090, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10159632948783626;  // std dev = 2,36e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(E, A), publication(E, F), tempadvisedby(G, F) )
%   | | | then if ( publication(H, G), publication(H, I), publication(E, I) )
%   | | | | then return -0.22368563092126223;  // std dev = 0,703, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.3015195515127926;  // std dev = 0,272, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else if ( publication(J, A) )
%   | | | | then return 0.3915579190752072;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(K, C), inphase(A, L), inphase(C, L) )
%   | | | | | then return 0.10101742326814867;  // std dev = 0,538, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( publication(D, M), yearsinprogram(M, N), yearsinprogram(A, N) )
%   | | | | | | then return 0.4060543288644457;  // std dev = 0,091, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | | | else return 0.17878961946608057;  // std dev = 0,398, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.17655384533213556;  // std dev = 1,083, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.2911511379150984;  // std dev = 0,295, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   else return -0.09269127618926105;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), tempadvisedby(D, B) )
%   | then return 0.3231626422067817;  // std dev = 0,059, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return 0.1146413718292439;  // std dev = 1,150, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(G, B), publication(G, H), tempadvisedby(H, I) )
%   | | | then if ( publication(J, A), publication(G, I) )
%   | | | | then return 0.29071911421432556;  // std dev = 0,037, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return -0.012518258648705224;  // std dev = 0,721, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.04382760912321665;  // std dev = 0,852, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( publication(L, B), publication(L, A) )
%   | | | | then return 0.285337422266735;  // std dev = 0,028, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | | else if ( publication(M, A), publication(M, N), professor(N) )
%   | | | | | then return 0.04157476572104381;  // std dev = 0,477, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | | | else return 0.23656616758447468;  // std dev = 0,291, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.1890537932639274;  // std dev = 0,236, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | else if ( publication(D, A), publication(C, E), inphase(E, F) )
%   | | | then if ( publication(D, G), tempadvisedby(H, G) )
%   | | | | then return 0.2898198266218647;  // std dev = 0,954, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.11143831116459352;  // std dev = 0,532, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( tempadvisedby(I, B), yearsinprogram(I, J), yearsinprogram(A, J) )
%   | | | | then return -0.07122230161621985;  // std dev = 0,913, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( tempadvisedby(K, B), publication(C, L), projectmember(M, L) )
%   | | | | | then return 0.04194970185320551;  // std dev = 0,854, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.20045982458505868;  // std dev = 0,225, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | else if ( publication(N, A) )
%   | | then return 0.15044556193217362;  // std dev = 0,818, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.06841444639020677;  // std dev = 1,073, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07877675473109179;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.1543329673263014;  // std dev = 0,237, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | | then if ( tempadvisedby(F, B) )
%   | | | | then return -0.04175697595548097;  // std dev = 0,656, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.0017879477447324266;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( tempadvisedby(G, B), publication(C, H), inphase(H, I) )
%   | | | | then if ( inphase(A, I) )
%   | | | | | then return 0.26492220523128956;  // std dev = 0,080, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | | else return -0.04855205406845224;  // std dev = 0,397, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | | else return 0.18937442174274108;  // std dev = 0,210, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( publication(J, A) )
%   | | then return 0.11325244322921708;  // std dev = 0,818, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.05143899807863628;  // std dev = 1,073, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( publication(F, D) )
%   | | | then return 0.05466364172794769;  // std dev = 0,961, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else if ( publication(C, A) )
%   | | | | then return 0.11725226909861385;  // std dev = 0,230, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | | else return 0.0784893198049407;  // std dev = 0,711, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(G, B), publication(C, H), inphase(H, I) )
%   | | | then if ( inphase(A, I) )
%   | | | | then return 0.22148301510344665;  // std dev = 0,077, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | else return -0.039371209290161156;  // std dev = 0,396, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.14234091388825837;  // std dev = 0,244, 34,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | else if ( projectmember(J, B) )
%   | | then return 0.10030682432788456;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.029934661440848533;  // std dev = 1,072, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), tempadvisedby(D, B) )
%   | then return 0.1872823542823715;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(E, B), publication(E, F), tempadvisedby(F, G) )
%   | | then if ( publication(H, A), publication(E, G) )
%   | | | then return 0.15981039098370545;  // std dev = 0,030, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(I, A) )
%   | | | | then return -0.10049565241055843;  // std dev = 0,737, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return -0.07128221680056201;  // std dev = 0,844, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(J, B) )
%   | | | then if ( tempadvisedby(K, B) )
%   | | | | then return 0.09309146414415159;  // std dev = 0,289, 38,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=31 */
%   | | | | else return 0.1281188039275417;  // std dev = 0,232, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else if ( publication(L, A) )
%   | | | | then return 0.07839128773377972;  // std dev = 0,818, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.021128238894559993;  // std dev = 1,070, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
Results
   AUC ROC   = 0.988166
   AUC PR    = 0.989377
   CLL	      = -0.239834
   Precision = 0.8125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.896552


Total learning time: 62.031 seconds
Total inference time: 0.778 seconds
AUC ROC: 0.988166


Best model AUC ROC so far: 0.988166


Refining iteration 2
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), student(A).;true;false', '0;true;publication(C, B).;true;true', '0;true,true,false,false;publication(F, A), publication(F, G), professor(G).;true;false', '0;true,true;tempadvisedby(D, B), publication(E, D).;true;true', '0;true,true,true;publication(E, B).;false;true', '0;true,false;tempadvisedby(I, B).;false;false', '0;true,true,false,false,true;publication(C, G), publication(C, H), student(H).;false;false', '0;true,true,false;publication(C, A).;false;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;false', '1;true;publication(C, B).;true;true', '1;true,true,false,false;publication(F, A).;true;false', '1;true,true;tempadvisedby(D, B), publication(E, D).;true;true', '1;true,true,true;publication(E, B).;false;true', '1;true,false;projectmember(I, B).;false;false', '1;true,true,false,false,true;tempadvisedby(G, B), publication(F, H), professor(H).;false;false', '1;true,true,false;publication(C, A).;false;true', '2;;advisedby(A, B) :- professor(B), student(A).;true;false', '2;true;publication(C, B).;true;true', '2;true,true,false,false;publication(C, A).;false;true', '2;true,true;tempadvisedby(D, B), publication(E, D).;true;true', '2;true,false;publication(K, A).;false;false', '2;true,true,true;publication(E, B).;false;true', '2;true,true,false,false,false;publication(I, A), publication(I, J), professor(J).;false;false', '2;true,true,false;tempadvisedby(F, B), publication(C, G), projectmember(H, G).;false;true', '3;;advisedby(A, B) :- professor(B), student(A).;true;false', '3;true;publication(C, B).;true;true', '3;true,true,false,false;publication(F, A), publication(F, G), professor(G).;true;false', '3;true,true;tempadvisedby(D, B), publication(E, D).;true;true', '3;true,true,true;publication(E, B).;false;true', '3;true,false;projectmember(I, B).;false;false', '3;true,true,false,false,true;publication(C, G), publication(C, H), student(H).;false;false', '3;true,true,false;publication(C, A).;false;true', '4;;advisedby(A, B) :- professor(B), student(A).;true;false', '4;true;tempadvisedby(C, B).;true;false', '4;true,true;publication(D, B).;true;true', '4;true,true,true,true;publication(H, G), publication(H, I), publication(E, I).;false;false', '4;true,true,true,false,false;publication(K, C), inphase(A, L), inphase(C, L).;false;true', '4;true,true,true,false,false,false;publication(D, M), yearsinprogram(M, N), yearsinprogram(A, N).;false;false', '4;true,true,true;publication(E, A), publication(E, F), tempadvisedby(G, F).;true;true', '4;true,true,true,false;publication(J, A).;false;true', '5;;advisedby(A, B) :- professor(B), student(A).;true;false', '5;true;publication(C, B), publication(C, D), tempadvisedby(D, B).;false;true', '5;true,false,false,false;publication(L, B), publication(L, A).;false;true', '5;true,false,false,true,false;publication(K, A).;false;false', '5;true,false,false,true;publication(J, A), publication(G, I).;false;true', '5;true,false,false,false,false;publication(M, A), publication(M, N), professor(N).;false;false', '5;true,false;tempadvisedby(E, B), publication(F, E).;true;true', '5;true,false,false;publication(G, B), publication(G, H), tempadvisedby(H, I).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;false', '6;true;publication(C, B).;true;false', '6;true,true,false,false;tempadvisedby(I, B), yearsinprogram(I, J), yearsinprogram(A, J).;false;true', '6;true,true;publication(C, A).;false;true', '6;true,true,false,false,false;tempadvisedby(K, B), publication(C, L), projectmember(M, L).;false;false', '6;true,true,false,true;publication(D, G), tempadvisedby(H, G).;false;false', '6;true,true,false;publication(D, A), publication(C, E), inphase(E, F).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;false', '7;true;publication(C, B).;true;true', '7;true,true,false,false;tempadvisedby(G, B), publication(C, H), inphase(H, I).;true;false', '7;true,true;publication(C, A).;false;true', '7;true,false;publication(J, A).;false;false', '7;true,true,false,false,true;inphase(A, I).;false;false', '7;true,true,false;publication(D, A), publication(D, E), professor(E).;false;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;false', '8;true;publication(C, B).;true;true', '8;true,false;projectmember(J, B).;false;false', '8;true,true;tempadvisedby(D, B), publication(E, A).;true;true', '8;true,true,false,true;inphase(A, I).;false;false', '8;true,true,true;publication(F, D).;true;true', '8;true,true,true,false;publication(C, A).;false;false', '8;true,true,false;tempadvisedby(G, B), publication(C, H), inphase(H, I).;true;false', '9;;advisedby(A, B) :- professor(B), student(A).;true;false', '9;true;publication(C, B), publication(C, D), tempadvisedby(D, B).;false;true', '9;true,false,false,true;tempadvisedby(K, B).;false;false', '9;true,false;publication(E, B), publication(E, F), tempadvisedby(F, G).;true;true', '9;true,false,true,false;publication(I, A).;false;false', '9;true,false,true;publication(H, A), publication(E, G).;false;true', '9;true,false,false;publication(J, B).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,true,true,false', 0.5), ('true,false,true', 0.6), ('true,true,false,false,true,true', 0.6666666666666666), ('true,false,false', 0.6666666666666666), ('true,true,false,false,true,false', 0.75), ('true,true,false,false,false', 0.9142857142857143), ('true,true,false,true', 0.9583333333333334)]
Tree #2: [('true,true,true,false', 0.5), ('true,false,false', 0.6), ('true,true,false,false,true,true', 0.6666666666666666), ('true,false,true', 0.6666666666666666), ('true,true,false,false,true,false', 0.7777777777777778), ('true,true,false,false,false', 0.9), ('true,true,false,true', 0.9583333333333334)]
Tree #3: [('true,true,true,false', 0.5), ('true,true,false,false,false,true', 0.5714285714285714), ('true,false,false', 0.6), ('true,false,true', 0.6666666666666666), ('true,true,false,true', 0.8333333333333334), ('true,true,false,false,false,false', 0.9354838709677419), ('true,true,false,false,true', 0.9545454545454546)]
Tree #4: [('true,true,true,false', 0.5), ('true,false,false', 0.6), ('true,true,false,false,true,true', 0.6666666666666666), ('true,false,true', 0.6666666666666666), ('true,true,false,false,true,false', 0.75), ('true,true,false,false,false', 0.9142857142857143), ('true,true,false,true', 0.9583333333333334)]
Tree #5: [('true,true,false', 0.6), ('true,true,true,false,false,true', 0.6666666666666666), ('true,true,true,true,true', 0.6666666666666666), ('true,true,true,false,false,false,false', 0.8), ('true,true,true,true,false', 0.8333333333333334), ('true,false', 0.875)]
Tree #6: [('true,false,true', 0.5), ('true,false,false,false,false,true', 0.5555555555555556), ('true,false,false,true,false,true', 0.6666666666666666), ('true,false,false,true,false,false', 0.75), ('true,false,false,false,false,false', 0.8888888888888888)]
Tree #7: [('true,false,false', 0.6), ('true,true,false,false,true', 0.6), ('true,false,true', 0.6666666666666666), ('true,true,false,true,false', 0.75), ('true,true,false,false,false,true', 0.75), ('true,true,false,true,true', 0.75), ('true,true,true', 0.896551724137931), ('true,true,false,false,false,false', 0.896551724137931)]
Tree #8: [('true,true,false,true,false', 0.5), ('true,false,false', 0.6), ('true,true,false,false,true,false', 0.6666666666666666), ('true,true,false,true,true', 0.6666666666666666), ('true,false,true', 0.6666666666666666), ('true,true,true', 0.896551724137931), ('true,true,false,false,false', 0.9523809523809523)]
Tree #9: [('true,true,true,true', 0.6), ('true,false,false', 0.6), ('true,true,true,false,false', 0.6666666666666666), ('true,true,false,true,false', 0.6666666666666666), ('true,false,true', 0.6666666666666666), ('true,true,false,false', 0.9117647058823529), ('true,true,true,false,true', 0.9230769230769231)]
Tree #10: [('true,false,false,false,false', 0.6), ('true,false,true,false,true', 0.6666666666666666), ('true,false,false,false,true', 0.6666666666666666), ('true,false,true,false,false', 0.75), ('true,false,false,true,true', 0.8157894736842105), ('true,false,false,true,false', 0.9047619047619048)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.8164822684328453;  // std dev = 0,979, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else if ( publication(F, A), publication(F, G), professor(G) )
%   | | | | then if ( publication(C, G), publication(C, H), student(H) )
%   | | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.772434649385226;  // std dev = 1,656, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | else if ( tempadvisedby(I, B) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.6861389866026452;  // std dev = 0,979, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else if ( publication(F, A) )
%   | | | | then if ( tempadvisedby(G, B), publication(F, H), professor(H) )
%   | | | | | then return 0.15685460508226887;  // std dev = 0,765, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.5482678705837893;  // std dev = 1,184, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | else return 0.6364436160864007;  // std dev = 1,643, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | else if ( projectmember(I, B) )
%   | | then return 0.45946085024371547;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.38609503717599675;  // std dev = 1,093, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839155;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), projectmember(H, G) )
%   | | | then return 0.42230233808379086;  // std dev = 0,905, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else if ( publication(C, A) )
%   | | | | then return 0.52834705908058;  // std dev = 0,977, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | | | then return 0.18058306890588835;  // std dev = 1,264, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | | | else return 0.5354283929764763;  // std dev = 1,373, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else if ( publication(K, A) )
%   | | then return 0.37989190430009656;  // std dev = 0,822, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.31058507239150607;  // std dev = 1,088, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360633;  // std dev = 2,79e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2061374073445397;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.40303795363627315;  // std dev = 0,982, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else if ( publication(F, A), publication(F, G), professor(G) )
%   | | | | then if ( publication(C, G), publication(C, H), student(H) )
%   | | | | | then return 0.32840443239332623;  // std dev = 0,853, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.009286152480448256;  // std dev = 0,827, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.3846373656585051;  // std dev = 1,652, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | else if ( projectmember(I, B) )
%   | | then return 0.30584626455091063;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23719928480179492;  // std dev = 1,090, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10159632948783626;  // std dev = 2,36e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(E, A), publication(E, F), tempadvisedby(G, F) )
%   | | | then if ( publication(H, G), publication(H, I), publication(E, I) )
%   | | | | then return -0.22368563092126223;  // std dev = 0,703, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.3015195515127926;  // std dev = 1,156, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else if ( publication(J, A) )
%   | | | | then return 0.3915579190752072;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(K, C), inphase(A, L), inphase(C, L) )
%   | | | | | then return 0.10101742326814867;  // std dev = 0,538, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( publication(D, M), yearsinprogram(M, N), yearsinprogram(A, N) )
%   | | | | | | then return 0.4060543288644457;  // std dev = 0,272, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | | | else return 0.17878961946608057;  // std dev = 1,257, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.17655384533213556;  // std dev = 1,083, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.2911511379150984;  // std dev = 1,667, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   else return -0.09269127618926105;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), tempadvisedby(D, B) )
%   | then return 0.3231626422067817;  // std dev = 0,059, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return 0.1146413718292439;  // std dev = 1,150, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(G, B), publication(G, H), tempadvisedby(H, I) )
%   | | | then if ( publication(J, A), publication(G, I) )
%   | | | | then return 0.29071911421432556;  // std dev = 0,037, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return -0.012518258648705224;  // std dev = 0,721, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.04382760912321665;  // std dev = 0,852, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( publication(L, B), publication(L, A) )
%   | | | | then return 0.285337422266735;  // std dev = 0,028, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | | else if ( publication(M, A), publication(M, N), professor(N) )
%   | | | | | then return 0.04157476572104381;  // std dev = 1,432, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | | | else return 0.23656616758447468;  // std dev = 1,744, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.1890537932639274;  // std dev = 1,269, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | else if ( publication(D, A), publication(C, E), inphase(E, F) )
%   | | | then if ( publication(D, G), tempadvisedby(H, G) )
%   | | | | then return 0.2898198266218647;  // std dev = 0,954, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.11143831116459352;  // std dev = 0,532, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( tempadvisedby(I, B), yearsinprogram(I, J), yearsinprogram(A, J) )
%   | | | | then return -0.07122230161621985;  // std dev = 0,913, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( tempadvisedby(K, B), publication(C, L), projectmember(M, L) )
%   | | | | | then return 0.04194970185320551;  // std dev = 0,854, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.20045982458505868;  // std dev = 1,211, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | else return 0.09917611471844436;  // std dev = 1,354, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.07877675473109179;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.1543329673263014;  // std dev = 1,279, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | | then return -0.016874162412501875;  // std dev = 1,197, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else if ( tempadvisedby(F, B), publication(C, G), inphase(G, H) )
%   | | | | then if ( inphase(A, H) )
%   | | | | | then return 0.26492220523128956;  // std dev = 0,239, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | | else return -0.04855205406845224;  // std dev = 1,192, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | | else return 0.18937442174274108;  // std dev = 0,961, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( publication(I, A) )
%   | | then return 0.12588155585334712;  // std dev = 0,818, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.04384048903111206;  // std dev = 1,073, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( publication(F, D) )
%   | | | then return 0.05466364172794769;  // std dev = 0,961, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else if ( publication(C, A) )
%   | | | | then return 0.11725226909861385;  // std dev = 0,829, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | | else return 0.07569940217022608;  // std dev = 0,713, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(G, B), publication(C, H), inphase(H, I) )
%   | | | then if ( inphase(A, I) )
%   | | | | then return 0.22148301510344665;  // std dev = 0,217, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | else return -0.039371209290161156;  // std dev = 1,189, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.14286661594978614;  // std dev = 1,418, 34,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | else if ( projectmember(J, B) )
%   | | then return 0.09462702085387668;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.033280811895989325;  // std dev = 1,074, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), tempadvisedby(D, B) )
%   | then return 0.1872823542823715;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(E, B), publication(E, F), tempadvisedby(F, G) )
%   | | then if ( publication(H, A), publication(E, G) )
%   | | | then return 0.15973989810369096;  // std dev = 0,030, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(I, A) )
%   | | | | then return -0.10049565241055843;  // std dev = 0,737, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return -0.07132401904162944;  // std dev = 0,844, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(J, B) )
%   | | | then if ( tempadvisedby(K, B) )
%   | | | | then return 0.09271429272722174;  // std dev = 1,784, 38,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=31 */
%   | | | | else return 0.12888415217261778;  // std dev = 1,059, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.04259026141931693;  // std dev = 1,351, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
Results
   AUC ROC   = 0.988166
   AUC PR    = 0.989377
   CLL	      = -0.24129
   Precision = 0.8125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.896552


Total learning time: 40.965 seconds
Total inference time: 0.783 seconds
AUC ROC: 0.988166


Best model AUC ROC so far: 0.988166


******************************************
Best model found
******************************************
Total revision time: 113.286
Best validation AUC ROC: 0.988166


Results
   AUC ROC   = 0.987654
   AUC PR    = 0.988272
   CLL	      = -0.205725
   Precision = 0.9 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.947368


Total inference time: 0.628 seconds
AUC ROC: 0.987654
Dataset: imdb,uwcse, Run: 1, Fold: 3, Type: transfer, Total folds for small set: 3, Time: 00:10:40
{'CLL': -0.205725, 'Recall': 1.0, 'Learning time': 113.286, 'Precision': [0.9, 0.5], 'Mapping Results': {'Possible mappings': 120, 'Total time': 2.727325439453125, 'Generating mappings time': 0.04373812675476074, 'Finding best mapping': 0.007530689239501953, 'Generating paths time': 2.658831834793091, 'Knowledge compiling time': 0.01721811294555664}, 'Parameter Learning Results': {'CLL': -0.685796, 'Recall': 0.111111, 'Precision': [1.0, 0.5], 'AUC ROC': 0.555556, 'F1': 0.2, 'AUC PR': 0.617697}, 'AUC ROC': 0.987654, 'F1': 0.947368, 'AUC PR': 0.988272, 'Inference time': 0.628}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.8164822684328455;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else if ( publication(F, A), publication(F, G), professor(G) )
%   | | | then if ( publication(C, G), publication(C, H), student(H) )
%   | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( tempadvisedby(I, B), publication(C, J), inphase(J, K) )
%   | | | | then return 0.6914822684328457;  // std dev = 0,373, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | | else return 0.8105298874804647;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( tempadvisedby(L, B) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.7654998395404847;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2791470115587668;  // std dev = 1,226, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.6861389866026452;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else if ( tempadvisedby(F, B), publication(C, G), projectmember(H, G) )
%   | | | | then return 0.4904179572342042;  // std dev = 0,853, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | | | then return 0.24610808143841542;  // std dev = 0,483, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | | | else return 0.6733197968465916;  // std dev = 0,245, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else if ( projectmember(K, B) )
%   | | then return 0.45946085024371547;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.38609503717599675;  // std dev = 1,093, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839155;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.6033580761126394;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22754525461495248;  // std dev = 1,226, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.5321349378684588;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else if ( publication(F, A), publication(F, G), professor(G) )
%   | | | | then if ( tempadvisedby(H, B) )
%   | | | | | then return 0.1184738673067427;  // std dev = 0,757, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.2730395958285399;  // std dev = 1,003, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.5091070185397408;  // std dev = 0,275, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | else if ( publication(I, A) )
%   | | then return 0.37989190430009656;  // std dev = 0,822, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.31058507239150607;  // std dev = 1,088, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360633;  // std dev = 2,79e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.4546029560543186;  // std dev = 0,047, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18032102724120724;  // std dev = 1,226, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.3999123396959217;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else if ( publication(F, A), publication(F, G), professor(G) )
%   | | | | then if ( tempadvisedby(H, B) )
%   | | | | | then return 0.0979668461070826;  // std dev = 0,753, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.22206298165625007;  // std dev = 1,003, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.3832593599196806;  // std dev = 0,275, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | else if ( projectmember(I, B) )
%   | | then return 0.30584626455091063;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23719928480179492;  // std dev = 1,090, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10159632948783626;  // std dev = 2,36e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), inphase(D, E), inphase(A, E) )
%   | | then return 0.1621289929143445;  // std dev = 0,646, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, A) )
%   | | | then if ( publication(H, F) )
%   | | | | then return 0.20285426406111484;  // std dev = 1,020, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( publication(G, B), publication(C, I), tempadvisedby(I, J) )
%   | | | | | then return 0.013119383866855109;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.30074100824889094;  // std dev = 0,216, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else if ( publication(K, A), publication(K, L), tempadvisedby(M, L) )
%   | | | | then return 0.34072318624522935;  // std dev = 0,271, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | | else return 0.2803702322153684;  // std dev = 0,287, 37,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else if ( tempadvisedby(N, B) )
%   | | then return 0.17655384533213556;  // std dev = 1,083, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.23989142126806273;  // std dev = 0,823, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926105;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.20158102549444862;  // std dev = 0,324, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0.2782299360883568;  // std dev = 0,019, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(E, B) )
%   | | then if ( tempadvisedby(F, B), yearsinprogram(F, G), yearsinprogram(A, G) )
%   | | | then return -0.04017245918533248;  // std dev = 0,957, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | | then if ( publication(E, I), publication(E, J), student(J) )
%   | | | | | then return 0.2405253966138591;  // std dev = 0,850, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return -0.0642369543331164;  // std dev = 0,824, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.26035441854698904;  // std dev = 0,236, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else if ( projectmember(K, B) )
%   | | | then return 0.18900304836876672;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12788410922108462;  // std dev = 1,087, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.1846094544329882;  // std dev = 0,258, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(E, A), publication(E, F), professor(F) )
%   | | | then if ( tempadvisedby(G, B) )
%   | | | | then return 0.008903182088528694;  // std dev = 0,684, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.07864831333217379;  // std dev = 1,010, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( publication(H, A) )
%   | | | | then return 0.2488305459897032;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( tempadvisedby(I, B), publication(D, J), projectmember(K, J) )
%   | | | | | then return 0.0444669720251879;  // std dev = 0,852, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.1820172022414067;  // std dev = 0,273, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | else if ( publication(L, A) )
%   | | | then return 0.15356792702468755;  // std dev = 0,830, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08892125274603406;  // std dev = 1,075, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07877675473109179;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), tempadvisedby(D, B) )
%   | then return 0.261918497963644;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(E, B), yearsinprogram(E, F), yearsinprogram(A, F) )
%   | | then return -0.2946799896638906;  // std dev = 0,739, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(G, B), publication(G, H), tempadvisedby(H, I) )
%   | | | then if ( publication(J, A), publication(G, I) )
%   | | | | then return 0.19373350444850412;  // std dev = 0,010, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return -0.07101979697889312;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return -0.025295612116562005;  // std dev = 0,878, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( publication(L, A), publication(L, M), professor(M) )
%   | | | | then if ( publication(L, B) )
%   | | | | | then return 0.16801651345437132;  // std dev = 0,236, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | | | else return 0.01880737574838682;  // std dev = 0,476, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | | else return 0.1890091574118819;  // std dev = 0,250, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else return -0.07324622576333704;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( publication(F, D) )
%   | | | then return 0.021319901792869043;  // std dev = 1,022, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1162934622607329;  // std dev = 0,263, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.16861340789975252;  // std dev = 0,018, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else if ( tempadvisedby(G, B), publication(C, H), inphase(H, I) )
%   | | | | then if ( inphase(A, I) )
%   | | | | | then return 0.24488180979246565;  // std dev = 0,054, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | | else return -0.04326665029889525;  // std dev = 0,401, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | | else return 0.12509095534655118;  // std dev = 0,291, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | else if ( publication(J, A) )
%   | | then return 0.09700384381643494;  // std dev = 0,814, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.020232486388380398;  // std dev = 1,075, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), tempadvisedby(D, B) )
%   | then return 0.187492335121747;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(E, B) )
%   | | then if ( tempadvisedby(F, B), publication(G, A) )
%   | | | then if ( publication(H, F) )
%   | | | | then return -0.030846622661547363;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.09726255246994102;  // std dev = 0,264, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else if ( publication(E, A) )
%   | | | | then return 0.14628190347711484;  // std dev = 0,016, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | | | then return 0.02554728887831967;  // std dev = 1,010, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0.0956796215031409;  // std dev = 0,277, 34,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=30 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.07348708741842662;  // std dev = 0,815, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.01531879127720881;  // std dev = 1,075, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
Results
   AUC ROC   = 0.975309
   AUC PR    = 0.975154
   CLL	      = -0.213227
   Precision = 0.9 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.947368


Total learning time: 53.777 seconds
Total inference time: 0.542 seconds
AUC ROC: 0.975309


Dataset: imdb,uwcse, Run: 1, Fold: 3, Type: scratch, Total folds for small set: 3, Time: 00:11:35
{'CLL': -0.213227, 'Recall': 1.0, 'Learning time': 53.777, 'Precision': [0.9, 0.5], 'AUC ROC': 0.975309, 'F1': 0.947368, 'AUC PR': 0.975154, 'Inference time': 0.542}


Best mapping found: ['workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [1.43e-06, 0, 382], 'false': [2.17e-07, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [0.0, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [0.0, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [8.16e-08, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [2.01e-07, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [4.42e-07, 0, 382], 'false': [1.15e-07, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.53e-07, 0, 382], 'false': [6.66e-08, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.6e-07, 0, 382], 'false': [7.88e-08, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [0.0, 382, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 382], 'false': [1.56e-07, 382, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.2391013160518933;  // std dev = 6,294, 168,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=64 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.20743465140990425;  // std dev = 6,294, 168,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=64 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5553664367462842;  // std dev = 1,40e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.17564775908399516;  // std dev = 6,294, 168,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=64 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.4175135841583102;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.1455073177253732;  // std dev = 6,294, 168,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=64 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.11831567107861944;  // std dev = 6,294, 168,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=64 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.09476899772258027;  // std dev = 6,294, 168,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=64 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.20975771563253542;  // std dev = 5,96e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.07502403390026831;  // std dev = 6,294, 168,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=64 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.058866033217876014;  // std dev = 6,294, 168,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=64 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1527438580936709;  // std dev = 3,94e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.045880579198031644;  // std dev = 6,294, 168,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=64 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1340070300080111;  // std dev = 1,83e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.03558232583205152;  // std dev = 6,294, 168,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=64 */
Results
   AUC ROC   = 0.75
   AUC PR    = 0.821473
   CLL	      = -0.509788
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.666667


Total learning time: 4.562 seconds
Total inference time: 0.568 seconds
AUC ROC: 0.75


Results in test set
   AUC ROC   = 0.75
   AUC PR    = 0.821473
   CLL	      = -0.509788
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.666667


Total inference time: 0.568 seconds
AUC ROC: 0.75
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.46e-07, 0, 40], 'false': [6.294, 104, 64]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 40], 'false': [6.294, 104, 64]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [1.4e-07, 0, 40], 'false': [6.294, 104, 64]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 40], 'false': [6.294, 104, 64]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [2.98e-08, 0, 40], 'false': [6.294, 104, 64]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 40], 'false': [6.294, 104, 64]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [5.96e-08, 0, 40], 'false': [6.294, 104, 64]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [0.0, 0, 40], 'false': [6.294, 104, 64]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [3.94e-08, 0, 40], 'false': [6.294, 104, 64]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)'}, {'true': [1.83e-08, 0, 40], 'false': [6.294, 104, 64]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0.6190476190476191)]
Tree #2: [('false', 0.6190476190476191)]
Tree #3: [('false', 0.6190476190476191)]
Tree #4: [('false', 0.6190476190476191)]
Tree #5: [('false', 0.6190476190476191)]
Tree #6: [('false', 0.6190476190476191)]
Tree #7: [('false', 0.6190476190476191)]
Tree #8: [('false', 0.6190476190476191)]
Tree #9: [('false', 0.6190476190476191)]
Tree #10: [('false', 0.6190476190476191)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B), publication(D, G), tempadvisedby(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then if ( publication(I, B), publication(I, J), tempadvisedby(J, K) )
%   | | | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else if ( publication(L, B), tempadvisedby(M, E), publication(N, M) )
%   | | | | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else if ( tempadvisedby(P, E) )
%   | | | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7433948367388565;  // std dev = 0,319, 61,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=54 */
%   | else return -0.14185106490048766;  // std dev = 7,74e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(D, F), professor(F) )
%   | | | then if ( projectmember(G, B), tempadvisedby(H, F), publication(D, H) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(I, B), publication(I, J), tempadvisedby(J, K) )
%   | | | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0.0692110035337907;  // std dev = 0,409, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else if ( publication(D, L), professor(L), publication(M, B) )
%   | | | | then if ( tempadvisedby(N, L), publication(M, P), student(P) )
%   | | | | | then return 0.7580193346218546;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.06440895207912495;  // std dev = 0,890, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.619038513435933;  // std dev = 0,332, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.6309301421554034;  // std dev = 0,314, 54,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5553664367462842;  // std dev = 1,40e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return -0.011241364329850083;  // std dev = 0,316, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else if ( tempadvisedby(H, E), publication(I, E), publication(I, H) )
%   | | | | then return 0.5777402891739358;  // std dev = 0,066, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( publication(J, B), publication(J, K), student(K) )
%   | | | | | then return 0.45942908174090125;  // std dev = 0,757, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return -0.02274557764245196;  // std dev = 0,929, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then if ( publication(M, L), publication(M, B) )
%   | | | | then return 0.10531353651668367;  // std dev = 1,224, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | else return 0.5113565532457411;  // std dev = 0,292, 32,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return 0.5617324268168365;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return -0.11231637819360624;  // std dev = 6,32e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.4175135841583102;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B), publication(F, E) )
%   | | then return -0.21336448459147098;  // std dev = 0,250, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | then if ( tempadvisedby(I, H), inphase(I, J), inphase(A, J) )
%   | | | | then return 0.4500094360306397;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( tempadvisedby(K, H) )
%   | | | | | then if ( publication(L, B), publication(M, K) )
%   | | | | | | then return -0.1613839427116964;  // std dev = 0,102, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | | else if ( publication(N, K), publication(N, P), publication(G, P) )
%   | | | | | | | then return 0.550270951144887;  // std dev = 0,338, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.16489998533240005;  // std dev = 0,388, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | | | else return 0.03718486480327454;  // std dev = 0,823, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3824781439548367;  // std dev = 0,292, 60,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=54 */
%   | else return -0.10159632948783616;  // std dev = 5,87e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B), publication(F, E) )
%   | | then return -0.18349118241379392;  // std dev = 0,225, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tempadvisedby(G, B), yearsinprogram(G, H), yearsinprogram(A, H) )
%   | | | then return 0.10143053789911548;  // std dev = 1,161, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | | then if ( tempadvisedby(K, B), publication(L, B) )
%   | | | | | then return 0.02127089492209391;  // std dev = 0,856, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | | else if ( tempadvisedby(M, J), publication(N, J), publication(N, M) )
%   | | | | | | then return 0.321081684640886;  // std dev = 0,077, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | else if ( tempadvisedby(P, J), publication(Q, B) )
%   | | | | | | | then return 0.2198747080376102;  // std dev = 0,540, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | | else return 0.06580443095671432;  // std dev = 0,425, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | | else return 0.30992134290728424;  // std dev = 0,256, 54,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=50 */
%   | else return -0.09269127618926107;  // std dev = 1,05e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( publication(F, E) )
%   | | | then return -0.16019767408958854;  // std dev = 0,202, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( projectmember(G, B), publication(D, H), tempadvisedby(H, I) )
%   | | | | then return 0.23277661164694086;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(J, B), publication(D, K), professor(K) )
%   | | | | | then return 0.018640951339606488;  // std dev = 0,855, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | | else if ( publication(L, B) )
%   | | | | | | then return 0.3173039935359082;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.02845542913306439;  // std dev = 0,799, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(M, B), inphase(M, N), inphase(A, N) )
%   | | | then return -0.032605685956702046;  // std dev = 0,498, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.2572016689509379;  // std dev = 0,225, 55,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=50 */
%   | else return -0.08518475138839683;  // std dev = 4,71e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.20975771563253542;  // std dev = 5,96e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B), publication(F, E) )
%   | | then return -0.14167279756631845;  // std dev = 0,183, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then if ( publication(H, A), publication(H, I), professor(I) )
%   | | | | then if ( publication(J, B), tempadvisedby(K, I), publication(L, K) )
%   | | | | | then return -0.11864198141379667;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else if ( publication(M, B) )
%   | | | | | | then return 0.15125069992417886;  // std dev = 0,788, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.09651872359578058;  // std dev = 0,313, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | else if ( publication(N, G), publication(N, B) )
%   | | | | | then return 0.019459972797536418;  // std dev = 1,125, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return 0.1847801493787582;  // std dev = 0,274, 32,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return 0.18556911745730761;  // std dev = 0,250, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | else return -0.07877675473109165;  // std dev = 4,34e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( tempadvisedby(F, E), inphase(F, G), inphase(A, G) )
%   | | | then return 0.2017229391830342;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(H, E) )
%   | | | | then if ( publication(I, B), publication(J, H) )
%   | | | | | then return -0.16873712970423882;  // std dev = 0,215, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | else if ( projectmember(K, B) )
%   | | | | | | then return 0.03936546115782948;  // std dev = 0,330, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else if ( tempadvisedby(L, B), publication(M, B) )
%   | | | | | | | then return 0.08124167913229752;  // std dev = 0,802, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | | | else return 0.2602289999534367;  // std dev = 0,656, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return -0.05374825638598557;  // std dev = 0,798, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.14156438958257925;  // std dev = 0,284, 61,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=54 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1527438580936709;  // std dev = 3,94e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), inphase(D, E), inphase(A, E) )
%   | | then if ( publication(F, D) )
%   | | | then return -0.0021656558354547217;  // std dev = 0,882, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( projectmember(G, B) )
%   | | | | then return -0.008284946462084886;  // std dev = 0,806, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return -0.2275875098693783;  // std dev = 1,022, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | then if ( publication(J, B), publication(J, K), student(K) )
%   | | | | then if ( publication(J, I) )
%   | | | | | then return 0.2996872966809903;  // std dev = 0,602, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.025337536522730353;  // std dev = 0,273, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | | else return -0.019448629906391228;  // std dev = 0,308, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.16490630888513955;  // std dev = 0,187, 50,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | else return -0.06842697784420267;  // std dev = 3,57e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1340070300080111;  // std dev = 1,83e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.1375092194663248;  // std dev = 0,188, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.03202984773872233;  // std dev = 1,135, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | then if ( tempadvisedby(I, H), inphase(I, J), inphase(A, J) )
%   | | | | then return 0.17140878967226614;  // std dev = 0,023, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( tempadvisedby(K, H), publication(L, H), publication(L, B) )
%   | | | | | then return 0.11203564203196058;  // std dev = 0,760, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else if ( publication(M, B), tempadvisedby(N, B) )
%   | | | | | | then return -0.1492888332915709;  // std dev = 0,124, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | | else return 0.05673475076138672;  // std dev = 0,354, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.11772661077374302;  // std dev = 0,241, 55,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=51 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
Results
   AUC ROC   = 0.9925
   AUC PR    = 0.992781
   CLL	      = -0.184964
   Precision = 0.95 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.95


Total learning time: 13.27 seconds
Total inference time: 0.724 seconds
AUC ROC: 0.9925


Best model AUC ROC so far: 0.9925


Refining iteration 2
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '0;false,true,true;projectmember(F, B), publication(D, G), tempadvisedby(G, E).;false;true', '0;false,true,true,false;tempadvisedby(H, B).;true;false', '0;false,true,true,false,true;publication(I, B), publication(I, J), tempadvisedby(J, K).;false;true', '0;false;professor(B), student(A).;true;false', '0;false,true,true,false,true,false;publication(L, B), tempadvisedby(M, E), publication(N, M).;false;false', '0;false,true;publication(D, A), publication(D, E), professor(E).;true;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '1;false,true,true;tempadvisedby(E, B), publication(D, F), professor(F).;true;true', '1;false,true,true,true,false;publication(I, B), publication(I, J), tempadvisedby(J, K).;false;false', '1;false,true,true,false;publication(D, L), professor(L), publication(M, B).;true;false', '1;false,true,true,true;projectmember(G, B), tempadvisedby(H, F), publication(D, H).;false;true', '1;false;professor(B), student(A).;true;false', '1;false,true,true,false,true;tempadvisedby(N, L), publication(M, P), student(P).;false;true', '1;false,true;publication(D, A).;true;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '2;false,true,true;tempadvisedby(F, B), publication(G, B).;false;true', '2;false,true,true,false,false;publication(J, B), publication(J, K), student(K).;false;false', '2;false,true,true,false;tempadvisedby(H, E), publication(I, E), publication(I, H).;false;true', '2;false,true,false;tempadvisedby(L, B).;false;false', '2;false;professor(B), student(A).;true;false', '2;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '3;false,true,false,true;tempadvisedby(I, H), inphase(I, J), inphase(A, J).;false;true', '3;false,true,false,true,false,true,false;publication(N, K), publication(N, P), publication(G, P).;false;true', '3;false,true,false,true,false;tempadvisedby(K, H).;true;false', '3;false,true,false;publication(G, A), publication(G, H), professor(H).;true;false', '3;false;professor(B), student(A).;true;false', '3;false,true,false,true,false,true;publication(L, B), publication(M, K).;false;true', '3;false,true;publication(D, A), tempadvisedby(E, B), publication(F, E).;false;true', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '4;false,true,false,false;publication(I, A), publication(I, J), professor(J).;true;false', '4;false,true,false,false,true;tempadvisedby(K, B), publication(L, B).;false;true', '4;false,true,false,false,true,false;tempadvisedby(M, J), publication(N, J), publication(N, M).;false;true', '4;false,true,false;tempadvisedby(G, B), yearsinprogram(G, H), yearsinprogram(A, H).;true;true', '4;false;professor(B), student(A).;true;false', '4;false,true,false,false,true,false,false;tempadvisedby(P, J), publication(Q, B).;false;false', '4;false,true;publication(D, A), tempadvisedby(E, B), publication(F, E).;false;true', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '5;false,true,true;publication(F, E).;false;true', '5;false,true,true,false,false;publication(J, B), publication(D, K), professor(K).;false;true', '5;false,true,true,false;projectmember(G, B), publication(D, H), tempadvisedby(H, I).;false;true', '5;false;professor(B), student(A).;true;false', '5;false,true,true,false,false,false;publication(L, B).;false;false', '5;false,true;publication(D, A), tempadvisedby(E, B).;true;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '6;false,true,false,true;publication(H, A), publication(H, I), professor(I).;true;true', '6;false,true,false,true,true;publication(J, B), tempadvisedby(K, I), publication(L, K).;false;false', '6;false,true,false,true,false;publication(N, G), publication(N, B).;false;false', '6;false,true,false;tempadvisedby(G, B).;true;false', '6;false;professor(B), student(A).;true;false', '6;false,true;publication(D, A), tempadvisedby(E, B), publication(F, E).;false;true', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '7;false,true,true;tempadvisedby(F, E), inphase(F, G), inphase(A, G).;false;true', '7;false,true,true,false,true,false,false;tempadvisedby(L, B), publication(M, B).;false;false', '7;false,true,true,false;tempadvisedby(H, E).;true;false', '7;false,true,true,false,true;publication(I, B), publication(J, H).;false;true', '7;false;professor(B), student(A).;true;false', '7;false,true,true,false,true,false;projectmember(K, B).;true;true', '7;false,true;publication(D, A), publication(D, E), professor(E).;true;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '8;false,true,true;publication(F, D).;true;true', '8;false,true,false,true,true;publication(J, I).;false;false', '8;false,true,true,false;projectmember(G, B).;false;false', '8;false,true,false,true;publication(J, B), publication(J, K), student(K).;true;false', '8;false,true,false;publication(H, A), publication(H, I), professor(I).;true;false', '8;false;professor(B), student(A).;true;false', '8;false,true;tempadvisedby(D, B), inphase(D, E), inphase(A, E).;true;true', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '9;false,true,true;publication(F, A).;false;false', '9;false,true,false,true,false,false;publication(M, B), tempadvisedby(N, B).;false;true', '9;false,true,false,true,false;tempadvisedby(K, H), publication(L, H), publication(L, B).;false;true', '9;false,true,false,true;tempadvisedby(I, H), inphase(I, J), inphase(A, J).;false;true', '9;false,true,false;publication(G, A), publication(G, H), professor(H).;true;false', '9;false;professor(B), student(A).;true;false', '9;false,true;tempadvisedby(D, B), publication(E, D), publication(E, B).;true;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,true,false,false,false', 0.6666666666666666), ('false,true,true,false,true,false,false', 0.6666666666666666), ('false,true,true,false,false,true', 0.8), ('false,true,false', 0.8852459016393442)]
Tree #2: [('false,true,true,false,true,false', 0.75), ('false,true,true,true,false,false', 0.7777777777777778), ('false,true,true,false,false', 0.875), ('false,true,false', 0.8888888888888888)]
Tree #3: [('false,true,false,true,true', 0.5), ('false,true,true,false,false,true', 0.75), ('false,true,true,false,false,false', 0.8333333333333334), ('false,true,true,true', 0.875), ('false,true,false,true,false', 0.90625), ('false,true,false,false', 0.9565217391304348)]
Tree #4: [('false,true,false,true,false,true,false,false', 0.5714285714285714), ('false,true,false,true,false,false', 0.75), ('false,true,false,false', 0.9)]
Tree #5: [('false,true,false,true', 0.6666666666666666), ('false,true,false,false,true,false,false,true', 0.6666666666666666), ('false,true,false,false,true,false,false,false', 0.7142857142857143), ('false,true,false,false,true,true', 0.8333333333333334), ('false,true,false,false,false', 0.9259259259259259)]
Tree #6: [('false,true,false,true', 0.6), ('false,true,true,false,false,false,false', 0.75), ('false,true,true,false,false,true', 0.8333333333333334), ('false,true,false,false', 0.9090909090909091)]
Tree #7: [('false,true,false,true,true,false,false', 0.5714285714285714), ('false,true,false,true,false,true', 0.6), ('false,true,false,true,true,false,true', 0.6666666666666666), ('false,true,false,false', 0.8709677419354839), ('false,true,false,true,false,false', 0.90625)]
Tree #8: [('false,true,true,false,true,false,true', 0.6666666666666666), ('false,true,true,false,true,false,false,true', 0.75), ('false,true,true,false,true,false,false,false', 0.75), ('false,true,true,false,false', 0.8), ('false,true,false', 0.8852459016393442)]
Tree #9: [('false,true,true,true', 0.5), ('false,true,false,true,false', 0.5555555555555556), ('false,true,true,false,false', 0.6), ('false,true,false,true,true,false', 0.6666666666666666), ('false,true,false,true,true,true', 0.6666666666666666), ('false,true,true,false,true', 0.75), ('false,true,false,false', 0.96)]
Tree #10: [('false,true,false,true,false,false,false', 0.5), ('false,true,false,true,false,true', 0.5), ('false,true,true,false', 0.6), ('false,true,false,false', 0.9272727272727272)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B), publication(D, G), tempadvisedby(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then if ( publication(I, B), publication(I, J), tempadvisedby(J, K) )
%   | | | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else if ( publication(L, B), tempadvisedby(M, E), publication(N, M) )
%   | | | | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.7433948367388565;  // std dev = 2,489, 61,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=54 */
%   | else return -0.14185106490048766;  // std dev = 7,74e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(D, F), professor(F) )
%   | | | then if ( projectmember(G, B), tempadvisedby(H, F), publication(D, H) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(I, B), publication(I, J), tempadvisedby(J, K) )
%   | | | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0.0692110035337907;  // std dev = 1,226, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else if ( publication(D, L), professor(L), publication(M, B) )
%   | | | | then if ( tempadvisedby(N, L), publication(M, P), student(P) )
%   | | | | | then return 0.7886573287083124;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.03865732870831254;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.6228682626967402;  // std dev = 0,943, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.6309301421554034;  // std dev = 2,309, 54,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5553664367462842;  // std dev = 1,40e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return -0.011241364329850083;  // std dev = 0,894, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else if ( tempadvisedby(H, E), publication(I, E), publication(I, H) )
%   | | | | then return 0.5924026751816113;  // std dev = 0,105, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( publication(J, B), publication(J, K), student(K) )
%   | | | | | then return 0.4556019423376363;  // std dev = 0,788, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return -0.023710001314008838;  // std dev = 0,929, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return 0.4471483497860282;  // std dev = 2,247, 38,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=32 */
%   | | | else return 0.5616132866724426;  // std dev = 0,978, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return -0.11231637819360624;  // std dev = 6,32e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.4175135841583102;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B), publication(F, E) )
%   | | then return -0.2419179195467823;  // std dev = 0,320, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | then if ( tempadvisedby(I, H), inphase(I, J), inphase(A, J) )
%   | | | | then return 0.4726204903018163;  // std dev = 0,084, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( tempadvisedby(K, H) )
%   | | | | | then if ( publication(L, B), publication(M, K) )
%   | | | | | | then return -0.15241895943224704;  // std dev = 0,071, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | | else if ( publication(N, K), publication(N, P), publication(G, P) )
%   | | | | | | | then return 0.5479519194805408;  // std dev = 0,342, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.17551955254511062;  // std dev = 0,397, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | | | else return 6.283675645938486E-4;  // std dev = 0,807, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.38388336490917624;  // std dev = 2,311, 60,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=54 */
%   | else return -0.10159632948783616;  // std dev = 5,87e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B), publication(F, E) )
%   | | then return -0.20733555276612117;  // std dev = 0,289, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tempadvisedby(G, B), yearsinprogram(G, H), yearsinprogram(A, H) )
%   | | | then return 0.06669268643322118;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | | then if ( tempadvisedby(K, B), publication(L, B) )
%   | | | | | then return 0.0200472426766973;  // std dev = 0,856, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | | else if ( tempadvisedby(M, J), publication(N, J), publication(N, M) )
%   | | | | | | then return 0.3297867149867749;  // std dev = 0,112, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | else if ( tempadvisedby(P, J), publication(Q, B) )
%   | | | | | | | then return 0.2530814390176537;  // std dev = 0,542, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | | else return 0.04806374342726126;  // std dev = 1,120, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | | else return 0.3146081125725133;  // std dev = 1,918, 54,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=50 */
%   | else return -0.09269127618926107;  // std dev = 1,05e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( publication(F, E) )
%   | | | then return -0.18019924472290128;  // std dev = 0,260, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( projectmember(G, B), publication(D, H), tempadvisedby(H, I) )
%   | | | | then return 0.22753021007312957;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(J, B), publication(D, K), professor(K) )
%   | | | | | then return 0.017552769637415245;  // std dev = 0,855, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | | else if ( publication(L, B) )
%   | | | | | | then return 0.3291784993786272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.032254020733956855;  // std dev = 0,800, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.2124031113214768;  // std dev = 2,483, 65,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=56 */
%   | else return -0.08518475138839683;  // std dev = 4,71e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.20975771563253542;  // std dev = 5,96e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B), publication(F, E) )
%   | | then return -0.15856313934602434;  // std dev = 0,235, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then if ( publication(H, A), publication(H, I), professor(I) )
%   | | | | then if ( publication(J, B), tempadvisedby(K, I), publication(L, K) )
%   | | | | | then return -0.11933944208376786;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0.11271653947626228;  // std dev = 1,145, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | | else if ( publication(M, G), publication(M, B) )
%   | | | | | then return -0.08586120807775335;  // std dev = 1,107, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return 0.19163086298011872;  // std dev = 1,625, 32,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return 0.19308179987664917;  // std dev = 1,402, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | else return -0.07877675473109165;  // std dev = 4,34e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( tempadvisedby(F, E), inphase(F, G), inphase(A, G) )
%   | | | then return 0.21599966440935636;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(H, E) )
%   | | | | then if ( publication(I, B), publication(J, H) )
%   | | | | | then return -0.15825033075051792;  // std dev = 0,176, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | else if ( projectmember(K, B) )
%   | | | | | | then return 0.03562210036078329;  // std dev = 0,328, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else if ( tempadvisedby(L, B), publication(M, B) )
%   | | | | | | | then return 0.08606115249822215;  // std dev = 0,803, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | | | else return 0.27471235479478306;  // std dev = 0,661, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return -0.07486287606127308;  // std dev = 0,789, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.1385500758710415;  // std dev = 2,301, 61,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=54 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1527438580936709;  // std dev = 3,94e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), inphase(D, E), inphase(A, E) )
%   | | then if ( publication(F, D) )
%   | | | then return -0.09381257737519877;  // std dev = 0,867, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( projectmember(G, B) )
%   | | | | then return -0.03552459991893733;  // std dev = 0,808, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return -0.2526425644427686;  // std dev = 1,026, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | then if ( publication(J, B), publication(J, K), student(K) )
%   | | | | then if ( publication(J, I) )
%   | | | | | then return 0.3087362457132106;  // std dev = 0,604, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.02339484794706393;  // std dev = 0,818, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | | else return -0.017289893416864797;  // std dev = 0,923, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.1736224632162653;  // std dev = 1,357, 50,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | else return -0.06842697784420267;  // std dev = 3,57e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1340070300080111;  // std dev = 1,83e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.14539363488246856;  // std dev = 0,220, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09774038672157499;  // std dev = 1,121, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | then if ( tempadvisedby(I, H), inphase(I, J), inphase(A, J) )
%   | | | | then return 0.18313327834068915;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( tempadvisedby(K, H), publication(L, H), publication(L, B) )
%   | | | | | then return 0.12644031710865578;  // std dev = 0,744, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else if ( publication(M, B), tempadvisedby(N, B) )
%   | | | | | | then return -0.14790742283226377;  // std dev = 0,119, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | | else return 0.048296042453074645;  // std dev = 0,356, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.12118551574577954;  // std dev = 1,830, 55,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=51 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
Results
   AUC ROC   = 0.995
   AUC PR    = 0.994994
   CLL	      = -0.185455
   Precision = 0.95 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.95


Total learning time: 5.596 seconds
Total inference time: 0.793 seconds
AUC ROC: 0.995


Best model AUC ROC so far: 0.995


Refining iteration 3
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '0;false,true,true;projectmember(F, B), publication(D, G), tempadvisedby(G, E).;false;true', '0;false,true,true,false;tempadvisedby(H, B).;true;true', '0;false,true,true,false,true;publication(I, B), publication(I, J), tempadvisedby(J, K).;false;true', '0;false;professor(B), student(A).;true;false', '0;false,true,true,false,true,false;publication(L, B), tempadvisedby(M, E), publication(N, M).;false;false', '0;false,true;publication(D, A), publication(D, E), professor(E).;true;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '1;false,true,true;tempadvisedby(E, B), publication(D, F), professor(F).;true;true', '1;false,true,true,true,false;publication(I, B), publication(I, J), tempadvisedby(J, K).;false;false', '1;false,true,true,false;publication(D, L), professor(L), publication(M, B).;true;false', '1;false,true,true,true;projectmember(G, B), tempadvisedby(H, F), publication(D, H).;false;true', '1;false;professor(B), student(A).;true;false', '1;false,true,true,false,true;tempadvisedby(N, L), publication(M, P), student(P).;false;true', '1;false,true;publication(D, A).;true;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '2;false,true,true;tempadvisedby(F, B), publication(G, B).;false;true', '2;false,true,true,false;tempadvisedby(H, E), publication(I, E), publication(I, H).;false;false', '2;false,true,false;tempadvisedby(L, B).;false;false', '2;false;professor(B), student(A).;true;false', '2;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '3;false,true,false,true;tempadvisedby(I, H), inphase(I, J), inphase(A, J).;false;true', '3;false,true,false,true,false,true,false;publication(N, K), publication(N, P), publication(G, P).;false;true', '3;false,true,false,true,false;tempadvisedby(K, H).;true;false', '3;false,true,false;publication(G, A), publication(G, H), professor(H).;true;false', '3;false;professor(B), student(A).;true;false', '3;false,true,false,true,false,true;publication(L, B), publication(M, K).;false;true', '3;false,true;publication(D, A), tempadvisedby(E, B), publication(F, E).;false;true', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '4;false,true,false,false;publication(I, A), publication(I, J), professor(J).;true;false', '4;false,true,false,false,true;tempadvisedby(K, B), publication(L, B).;false;true', '4;false,true,false,false,true,false;tempadvisedby(M, J), publication(N, J), publication(N, M).;false;true', '4;false,true,false;tempadvisedby(G, B), yearsinprogram(G, H), yearsinprogram(A, H).;true;true', '4;false;professor(B), student(A).;true;false', '4;false,true,false,false,true,false,false;tempadvisedby(P, J), publication(Q, B).;false;false', '4;false,true;publication(D, A), tempadvisedby(E, B), publication(F, E).;false;true', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '5;false,true,true;publication(F, E).;false;true', '5;false,true,true,false,false;publication(J, B), publication(D, K), professor(K).;false;true', '5;false,true,true,false;projectmember(G, B), publication(D, H), tempadvisedby(H, I).;false;true', '5;false;professor(B), student(A).;true;false', '5;false,true,true,false,false,false;publication(L, B).;false;true', '5;false,true;publication(D, A), tempadvisedby(E, B).;true;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '6;false,true,false,true;publication(H, A), publication(H, I), professor(I).;true;true', '6;false,true,false,true,true;publication(J, B), tempadvisedby(K, I), publication(L, K).;false;true', '6;false,true,false,true,false;publication(M, G), publication(M, B).;false;false', '6;false,true,false;tempadvisedby(G, B).;true;false', '6;false;professor(B), student(A).;true;false', '6;false,true;publication(D, A), tempadvisedby(E, B), publication(F, E).;false;true', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '7;false,true,true;tempadvisedby(F, E), inphase(F, G), inphase(A, G).;false;true', '7;false,true,true,false,true,false,false;tempadvisedby(L, B), publication(M, B).;false;false', '7;false,true,true,false;tempadvisedby(H, E).;true;false', '7;false,true,true,false,true;publication(I, B), publication(J, H).;false;true', '7;false;professor(B), student(A).;true;false', '7;false,true,true,false,true,false;projectmember(K, B).;true;true', '7;false,true;publication(D, A), publication(D, E), professor(E).;true;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '8;false,true,true;publication(F, D).;true;true', '8;false,true,false,true,true;publication(J, I).;false;false', '8;false,true,true,false;projectmember(G, B).;false;false', '8;false,true,false,true;publication(J, B), publication(J, K), student(K).;true;false', '8;false,true,false;publication(H, A), publication(H, I), professor(I).;true;false', '8;false;professor(B), student(A).;true;false', '8;false,true;tempadvisedby(D, B), inphase(D, E), inphase(A, E).;true;true', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '9;false,true,true;publication(F, A).;false;false', '9;false,true,false,true,false,false;publication(M, B), tempadvisedby(N, B).;false;true', '9;false,true,false,true,false;tempadvisedby(K, H), publication(L, H), publication(L, B).;false;true', '9;false,true,false,true;tempadvisedby(I, H), inphase(I, J), inphase(A, J).;false;true', '9;false,true,false;publication(G, A), publication(G, H), professor(H).;true;false', '9;false;professor(B), student(A).;true;false', '9;false,true;tempadvisedby(D, B), publication(E, D), publication(E, B).;true;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,true,false,false', 0.625), ('false,true,true,false,true,false,false', 0.6666666666666666), ('false,true,false', 0.8852459016393442)]
Tree #2: [('false,true,true,false,true,false', 0.75), ('false,true,true,true,false,false', 0.7777777777777778), ('false,true,true,false,false', 0.875), ('false,true,false', 0.8888888888888888)]
Tree #3: [('false,true,true,false,false,true', 0.75), ('false,true,true,false,false,false', 0.8333333333333334), ('false,true,false,true', 0.8421052631578947), ('false,true,true,true', 0.875), ('false,true,false,false', 0.9565217391304348)]
Tree #4: [('false,true,false,true,false,true,false,false', 0.5714285714285714), ('false,true,false,true,false,false', 0.9)]
Tree #5: [('false,true,false,true', 0.6666666666666666), ('false,true,false,false,true,false,false,true', 0.6666666666666666), ('false,true,false,false,true,false,false,false', 0.7142857142857143), ('false,true,false,false,true,true', 0.8333333333333334), ('false,true,false,false,false', 0.9259259259259259)]
Tree #6: [('false,true,true,false,false,false,false', 0.75), ('false,true,true,false,false,true', 0.8333333333333334), ('false,true,false', 0.8615384615384616)]
Tree #7: [('false,true,false,true,true,false', 0.5), ('false,true,false,true,false,true', 0.6), ('false,true,false,false', 0.8709677419354839), ('false,true,false,true,false,false', 0.90625)]
Tree #8: [('false,true,true,false,true,false,true', 0.6666666666666666), ('false,true,true,false,true,false,false,true', 0.75), ('false,true,true,false,true,false,false,false', 0.75), ('false,true,true,false,false', 0.8), ('false,true,false', 0.8852459016393442)]
Tree #9: [('false,true,true,true', 0.5), ('false,true,false,true,false', 0.5555555555555556), ('false,true,true,false,false', 0.6), ('false,true,false,true,true,false', 0.6666666666666666), ('false,true,false,true,true,true', 0.6666666666666666), ('false,true,true,false,true', 0.75), ('false,true,false,false', 0.96)]
Tree #10: [('false,true,false,true,false,false,false', 0.5), ('false,true,false,true,false,true', 0.5), ('false,true,true,false', 0.6), ('false,true,false,false', 0.9272727272727272)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B), publication(D, G), tempadvisedby(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then if ( publication(I, B), publication(I, J), tempadvisedby(J, K) )
%   | | | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else if ( publication(L, B), tempadvisedby(M, E), publication(N, M) )
%   | | | | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else if ( hasposition(B, P), hasposition(Q, P), tempadvisedby(R, Q) )
%   | | | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7433948367388565;  // std dev = 2,489, 61,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=54 */
%   | else return -0.14185106490048766;  // std dev = 7,74e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(D, F), professor(F) )
%   | | | then if ( projectmember(G, B), tempadvisedby(H, F), publication(D, H) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(I, B), publication(I, J), tempadvisedby(J, K) )
%   | | | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0.0692110035337907;  // std dev = 1,226, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else if ( publication(D, L), professor(L), publication(M, B) )
%   | | | | then if ( tempadvisedby(N, L), publication(M, P), student(P) )
%   | | | | | then return 0.7809616867530261;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.03790654901117835;  // std dev = 0,843, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.6253787385814055;  // std dev = 0,946, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.6309301421554034;  // std dev = 2,309, 54,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5553664367462842;  // std dev = 1,40e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return -0.011241364329850083;  // std dev = 0,894, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else if ( tempadvisedby(H, E), publication(I, E), publication(I, H) )
%   | | | | then return 0.6038092914146779;  // std dev = 0,135, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.1622137394491162;  // std dev = 1,395, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.4470852800410871;  // std dev = 2,248, 38,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=32 */
%   | | | else return 0.561535135031972;  // std dev = 0,978, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return -0.11231637819360624;  // std dev = 6,32e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.4175135841583102;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B), publication(F, E) )
%   | | then return -0.242121859112449;  // std dev = 0,321, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | then if ( tempadvisedby(I, H), inphase(I, J), inphase(A, J) )
%   | | | | then return 0.49100469598910673;  // std dev = 0,108, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( tempadvisedby(K, H) )
%   | | | | | then if ( publication(L, B), publication(M, K) )
%   | | | | | | then return -0.15499147626561804;  // std dev = 0,080, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | | else if ( publication(N, K), publication(N, P), publication(G, P) )
%   | | | | | | | then return 0.5366956716664059;  // std dev = 0,321, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.17993338912835058;  // std dev = 0,416, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | | | else return 0.00831203699298913;  // std dev = 0,834, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3838379127568588;  // std dev = 2,311, 60,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=54 */
%   | else return -0.10159632948783616;  // std dev = 5,87e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B), publication(F, E) )
%   | | then return -0.20750904035686382;  // std dev = 0,289, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tempadvisedby(G, B), yearsinprogram(G, H), yearsinprogram(A, H) )
%   | | | then return 0.06671873253579076;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | | then if ( tempadvisedby(K, B), publication(L, B) )
%   | | | | | then return 0.019857942906772882;  // std dev = 0,855, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | | else if ( tempadvisedby(M, J), publication(N, J), publication(N, M) )
%   | | | | | | then return 0.3378953590772881;  // std dev = 0,138, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | else if ( tempadvisedby(P, J), publication(Q, B) )
%   | | | | | | | then return 0.27867361348891184;  // std dev = 0,584, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | | else return 0.037394098053326365;  // std dev = 1,132, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | | else return 0.3145691904683813;  // std dev = 1,917, 54,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=50 */
%   | else return -0.09269127618926107;  // std dev = 1,05e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( publication(F, E) )
%   | | | then return -0.18034661543723474;  // std dev = 0,261, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( projectmember(G, B), publication(D, H), tempadvisedby(H, I) )
%   | | | | then return 0.22432034047354935;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(J, B), publication(D, K), professor(K) )
%   | | | | | then return 0.017385163695333605;  // std dev = 0,854, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | | else if ( publication(L, B) )
%   | | | | | | then return 0.32865690543047155;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.0010666703227313612;  // std dev = 0,797, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.21482877399820516;  // std dev = 2,495, 65,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=56 */
%   | else return -0.08518475138839683;  // std dev = 4,71e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.20975771563253542;  // std dev = 5,96e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B), publication(F, E) )
%   | | then return -0.1586886135941755;  // std dev = 0,236, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then if ( publication(H, A), publication(H, I), professor(I) )
%   | | | | then if ( publication(J, B), tempadvisedby(K, I), publication(L, K) )
%   | | | | | then return -0.11903191013526633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else if ( publication(M, B) )
%   | | | | | | then return 0.14941701134955468;  // std dev = 0,788, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.08094295518022247;  // std dev = 0,315, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | else if ( publication(N, G), publication(N, B) )
%   | | | | | then return -0.08635901220109476;  // std dev = 1,107, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return 0.1911736803500679;  // std dev = 1,625, 32,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return 0.1975553819316491;  // std dev = 1,421, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | else return -0.07877675473109165;  // std dev = 4,34e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( tempadvisedby(F, E), inphase(F, G), inphase(A, G) )
%   | | | then return 0.22591990888504385;  // std dev = 0,060, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(H, E) )
%   | | | | then if ( publication(I, B), publication(J, H) )
%   | | | | | then return -0.1629679641094678;  // std dev = 0,194, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | else if ( projectmember(K, B) )
%   | | | | | | then return 0.030997820827087335;  // std dev = 0,349, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else if ( tempadvisedby(L, B), publication(M, B) )
%   | | | | | | | then return 0.0811513914464205;  // std dev = 0,801, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | | | else return 0.27935121406446517;  // std dev = 0,670, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return -0.0658958045675427;  // std dev = 0,814, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.1378728494219125;  // std dev = 2,301, 61,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=54 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1527438580936709;  // std dev = 3,94e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), inphase(D, E), inphase(A, E) )
%   | | then if ( publication(F, D) )
%   | | | then return -0.09406769137793833;  // std dev = 0,867, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( projectmember(G, B) )
%   | | | | then return -0.03609088848470968;  // std dev = 0,808, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return -0.2569502215577868;  // std dev = 1,025, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | then if ( publication(J, B), publication(J, K), student(K) )
%   | | | | then if ( publication(J, I) )
%   | | | | | then return 0.31566840820486924;  // std dev = 0,597, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.035411273213865294;  // std dev = 0,838, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | | else return -0.02731201261880229;  // std dev = 0,934, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.17304783919560393;  // std dev = 1,358, 50,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | else return -0.06842697784420267;  // std dev = 3,57e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1340070300080111;  // std dev = 1,83e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.1459107385056309;  // std dev = 0,220, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09790251634758776;  // std dev = 1,121, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | then if ( tempadvisedby(I, H), inphase(I, J), inphase(A, J) )
%   | | | | then return 0.1903715312837921;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( tempadvisedby(K, H), publication(L, H), publication(L, B) )
%   | | | | | then return 0.12578221951662666;  // std dev = 0,748, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else if ( publication(M, B), tempadvisedby(N, B) )
%   | | | | | | then return -0.1509436339459302;  // std dev = 0,123, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | | else return 0.04923965188737574;  // std dev = 0,361, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.12083847577673545;  // std dev = 1,829, 55,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=51 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
Results
   AUC ROC   = 0.995
   AUC PR    = 0.994994
   CLL	      = -0.185504
   Precision = 0.95 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.95


Total learning time: 5.534 seconds
Total inference time: 0.674 seconds
AUC ROC: 0.995


Best model AUC ROC so far: 0.995


******************************************
Best model found
******************************************
Total revision time: 31.720999999999997
Best validation AUC ROC: 0.995


Results
   AUC ROC   = 0.987654
   AUC PR    = 0.988272
   CLL	      = -0.20238
   Precision = 0.9 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.947368


Total inference time: 0.542 seconds
AUC ROC: 0.987654
Dataset: imdb,uwcse, Run: 1, Fold: 3, Type: transfer, Total folds for small set: 4, Time: 00:12:12
{'CLL': -0.20238, 'Recall': 1.0, 'Learning time': 31.720999999999997, 'Precision': [0.9, 0.5], 'Mapping Results': {'Possible mappings': 120, 'Total time': 3.140820264816284, 'Generating mappings time': 0.04285144805908203, 'Finding best mapping': 0.007570505142211914, 'Generating paths time': 3.068941354751587, 'Knowledge compiling time': 0.021450519561767578}, 'Parameter Learning Results': {'CLL': -0.687328, 'Recall': 0.111111, 'Precision': [1.0, 0.5], 'AUC ROC': 0.555556, 'F1': 0.2, 'AUC PR': 0.617697}, 'AUC ROC': 0.987654, 'F1': 0.947368, 'AUC PR': 0.988272, 'Inference time': 0.542}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), inphase(C, D), inphase(A, D) )
%   | then if ( projectmember(E, B) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(F, C) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | then if ( tempadvisedby(J, B), publication(K, B) )
%   | | | | then return -0.016851064900487787;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | | else if ( tempadvisedby(L, I), publication(M, I), publication(M, L) )
%   | | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.30259337954395665;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.8181489350995119;  // std dev = 0,196, 50,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   else return -0.14185106490048766;  // std dev = 7,74e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), inphase(C, D), inphase(A, D) )
%   | then if ( projectmember(E, B) )
%   | | then return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(F, C) )
%   | | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.22373365448410584;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | | | then return -0.014812149378556561;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | | else if ( tempadvisedby(K, H), publication(L, H), publication(L, K) )
%   | | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.2616318086752123;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.6874753536316645;  // std dev = 0,196, 50,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   else return -0.12544463852839147;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.008924573267044045;  // std dev = 0,637, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.28307423742187315;  // std dev = 1,146, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.5553664367462843;  // std dev = 1,03e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | then if ( tempadvisedby(I, H), publication(G, I) )
%   | | | | then return 0.4381263013806332;  // std dev = 0,651, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then return 0.047016683308915425;  // std dev = 0,414, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | | | else return 0.3149046648821773;  // std dev = 0,473, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.520916519768809;  // std dev = 0,234, 55,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=51 */
%   else return -0.11231637819360624;  // std dev = 6,32e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A), publication(D, B) )
%   | then return 0.4223581553083286;  // std dev = 0,133, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( tempadvisedby(E, B), publication(F, A) )
%   | | then if ( publication(G, E) )
%   | | | then return -0.1744823109441326;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( projectmember(H, B), publication(F, I), tempadvisedby(I, J) )
%   | | | | then return 0.48381026583598424;  // std dev = 0,092, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(K, B), publication(F, L), professor(L) )
%   | | | | | then return 0.013750773985502257;  // std dev = 0,924, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | | else if ( publication(M, B) )
%   | | | | | | then return 0.44360577460391964;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.02012194119514784;  // std dev = 0,862, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( projectmember(N, B) )
%   | | | then return 0.3243311904425384;  // std dev = 0,867, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3763514617473379;  // std dev = 0,274, 71,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=63 */
%   else return -0.10159632948783616;  // std dev = 5,87e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), inphase(C, D), inphase(A, D) )
%   | then if ( publication(E, A) )
%   | | then return 5.343943470359583E-4;  // std dev = 0,536, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(F, C) )
%   | | | then return 0.28292205935711706;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(G, B) )
%   | | | | then return 0.10368649286239838;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.1241524186804172;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(H, A), publication(H, B) )
%   | | then return 0.3258911719718067;  // std dev = 0,127, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | then if ( tempadvisedby(K, J) )
%   | | | | then return 0.14967328296319882;  // std dev = 0,392, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | | else return -0.05522653961767543;  // std dev = 0,820, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.31573017911999307;  // std dev = 0,191, 50,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   else return -0.09269127618926107;  // std dev = 1,05e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.25327178709997467;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, A) )
%   | | | then return -0.023761702829822477;  // std dev = 0,460, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.06296274662692784;  // std dev = 1,157, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.25620490556439723;  // std dev = 0,025, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | then if ( tempadvisedby(I, H), inphase(I, J), inphase(A, J) )
%   | | | | then return 0.3703730230524525;  // std dev = 0,086, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( tempadvisedby(K, H), publication(L, H), publication(L, B) )
%   | | | | | then return 0.2162061199761648;  // std dev = 1,028, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0.028132014498712728;  // std dev = 0,383, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.24142255662501133;  // std dev = 0,227, 55,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=51 */
%   else return -0.08518475138839683;  // std dev = 4,71e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), inphase(C, D), inphase(A, D) )
%   | then if ( publication(E, A) )
%   | | then return -0.029270423760407616;  // std dev = 0,465, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(F, C) )
%   | | | then return 0.1985731079650889;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(G, B) )
%   | | | | then return 0.018926048112828275;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.03577509141699912;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(H, A), publication(H, B) )
%   | | then return 0.21444631242037496;  // std dev = 0,164, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | then if ( publication(K, B), tempadvisedby(L, B) )
%   | | | | then return -0.0471044089951199;  // std dev = 0,323, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | | else return 0.14545795907122225;  // std dev = 0,414, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.20185472562113854;  // std dev = 0,189, 50,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   else return -0.07877675473109165;  // std dev = 4,34e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.1752370748746216;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | | then return 0.030432407500919318;  // std dev = 0,363, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0331993265810075;  // std dev = 1,169, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then return 0.17705896790494055;  // std dev = 0,019, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | then if ( tempadvisedby(J, I) )
%   | | | | then if ( publication(K, J), publication(L, B) )
%   | | | | | then return -0.1690582674162751;  // std dev = 0,510, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else return 0.23140324919794894;  // std dev = 0,369, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | | else return -0.10189016328439165;  // std dev = 0,828, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.16221083184312743;  // std dev = 0,226, 55,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=51 */
%   else return -0.07324622576333704;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.15133183009230966;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | | then return 0.02608957834021004;  // std dev = 0,360, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.025911289200463497;  // std dev = 1,170, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( publication(G, B), publication(G, H), student(H) )
%   | | then return 0.14384057680634968;  // std dev = 0,205, 86,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=78 */
%   | | else if ( publication(I, B), publication(J, A) )
%   | | | then return -0.13572508358554808;  // std dev = 0,586, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else if ( tempadvisedby(K, B), inphase(K, L), inphase(A, L) )
%   | | | | then return 0.014670367997006401;  // std dev = 0,895, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( publication(M, A), tempadvisedby(N, B) )
%   | | | | | then return 0.07809530664545951;  // std dev = 0,858, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return 0.18178543481204174;  // std dev = 0,024, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420267;  // std dev = 3,57e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), inphase(C, D), inphase(A, D) )
%   | then if ( publication(E, C) )
%   | | then return 0.07376556818862914;  // std dev = 0,874, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.06648267484473644;  // std dev = 0,861, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.09113237660722998;  // std dev = 1,008, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then return 0.1393332180362945;  // std dev = 0,177, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | then if ( tempadvisedby(J, B), publication(K, B) )
%   | | | | then return -0.057542165087636245;  // std dev = 0,306, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | | else if ( tempadvisedby(L, I), publication(M, I), publication(M, L) )
%   | | | | | then return 0.20468819443820063;  // std dev = 0,037, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.022557831186957075;  // std dev = 0,454, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.12448545998926458;  // std dev = 0,185, 50,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   else return -0.06419184008202625;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.170799
   Precision = 0.9 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.947368


Total learning time: 12.12 seconds
Total inference time: 0.547 seconds
AUC ROC: 1.0


Dataset: imdb,uwcse, Run: 1, Fold: 3, Type: scratch, Total folds for small set: 4, Time: 00:12:25
{'CLL': -0.170799, 'Recall': 1.0, 'Learning time': 12.12, 'Precision': [0.9, 0.5], 'AUC ROC': 1.0, 'F1': 0.947368, 'AUC PR': 1.0, 'Inference time': 0.547}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995096;  // std dev = 1,07e-06, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.844195446727416;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.14185106490048754;  // std dev = 2,31e-07, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109565;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.708327532599887;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.12544463852839213;  // std dev = 0,000, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,72e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.5476019242105307;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.11231637819360644;  // std dev = 0,000, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830936;  // std dev = 4,13e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.41157346139221007;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.10159632948783627;  // std dev = 1,15e-07, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601492;  // std dev = 3,82e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.3152701839187062;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.09269127618926054;  // std dev = 1,98e-07, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694907;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.24971874777646466;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.08518475138839678;  // std dev = 1,17e-07, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253512;  // std dev = 2,76e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.20416115820758543;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.07877675473109144;  // std dev = 7,60e-08, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.1713458110344821;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.07324622576333713;  // std dev = 6,99e-08, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15722180349015147;  // std dev = 0,078, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( actor(A) )
%   | then return -0.06842697784420305;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
%   | else if ( director(B), movie(D, A), movie(D, B) )
%   | | then return -0.8391873912390865;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 5,27e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.13348821941310735;  // std dev = 7,88e-08, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.1290790590362687;  // std dev = 0,098, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.06419184008202578;  // std dev = 1,64e-07, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */


Predicates from source: ['workedunder(person,person).', 'director(person).', 'actor(person).', 'female(person).', 'movie(movie,person).'] 

Source structured tree: [['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.31e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [1.15e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [1.98e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [7.6e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [6.99e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'false': 'actor(A)', 'false,false': 'director(B), movie(D, A), movie(D, B)'}, {'false,false,true': [0.0, 3, 0], 'true,true': [0.078, 0, 382], 'true,false': [0.0, 23, 0], 'false,false,false': [5.27e-09, 45, 0], 'false,true': [0.0, 311, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [7.88e-08, 0, 170], 'false': [1.64e-07, 379, 0], 'true,false': [0.098, 3, 212]}]] 



Best mapping found: ['female(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'actor(A) -> student(A)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.31e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [1.15e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [1.98e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [7.6e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [6.99e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)', 'false': 'student(A)', 'false,false': 'professor(B), publication(D, A), publication(D, B)'}, {'false,false,false': [5.27e-09, 45, 0], 'true,true': [0.078, 0, 382], 'true,false': [0.0, 23, 0], 'false,false,true': [0.0, 3, 0], 'false,true': [0.0, 311, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [7.88e-08, 0, 170], 'false': [1.64e-07, 379, 0], 'true,false': [0.098, 3, 212]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '7;true;student(A).;false;false', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;false;false', '8;false;student(A).;false;true', '8;false,false;professor(B), publication(D, A), publication(D, B).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '9;true;student(A).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.3287371703936298;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.28383748932610653;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.23686850747708565;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.19181538310274016;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.15166866184718306;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1178610118967021;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.0905089646246742;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.06896419203032818;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.47058466642163044;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( student(A) )
%   | then return -0.41830422246725846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( professor(B), publication(D, A), publication(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.41830422246725846;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.03609623522258854;  // std dev = 1,679, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.503911
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.117 seconds
Total inference time: 0.391 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.503911
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.391 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 1], 'false': [2.058, 9, 8], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 1], 'false': [2.058, 9, 8], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 1], 'false': [2.058, 9, 8], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 1], 'false': [2.058, 9, 8], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 1], 'false': [2.058, 9, 8], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 1], 'false': [2.058, 9, 8], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 1], 'false': [2.058, 9, 8], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 1], 'false': [2.058, 9, 8], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)', 'false': 'student(A)', 'false,false': 'professor(B), publication(D, A), publication(D, B)'}, {'false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'true,false': [0.943, 1, 8], 'false,false,false': [0.0, 2, 0], 'false,true': [0.0, 6, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 1], 'false': [1.679, 9, 8], 'true,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;false;false', '8;false;student(A).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false', 0), ('false', 0.5294117647058824)]
Tree #2: [('true,false', 0), ('false', 0.5294117647058824)]
Tree #3: [('true,false', 0), ('false', 0.5294117647058824)]
Tree #4: [('true,false', 0), ('false', 0.5294117647058824)]
Tree #5: [('true,false', 0), ('false', 0.5294117647058824)]
Tree #6: [('true,false', 0), ('false', 0.5294117647058824)]
Tree #7: [('true,false', 0), ('false', 0.5294117647058824)]
Tree #8: [('true,false', 0), ('false', 0.5294117647058824)]
Tree #9: [('false,false,true', 0), ('true,false', 0.8888888888888888)]
Tree #10: [('true,false', 0), ('false', 0.5294117647058824)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return 0.3287371703936298;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return 0.28383748932610653;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return 0.23686850747708565;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return 0.19181538310274016;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return 0.15166866184718306;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return 0.1178610118967021;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return 0.0905089646246742;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return 0.06896419203032818;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.47058466642163044;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( student(A) )
%   | then return -0.41830422246725846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.41830422246725846;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return 0.03609623522258854;  // std dev = 1,679, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.503911
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.554 seconds
Total inference time: 0.484 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 3.5460000000000003
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 0.972452
   AUC PR    = 0.966485
   CLL	      = -0.426598
   Precision = 0.916667 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.956522


Total inference time: 0.668 seconds
AUC ROC: 0.972452
Dataset: imdb,uwcse, Run: 1, Fold: 4, Type: transfer, Total folds for small set: 1, Time: 00:12:43
{'CLL': -0.426598, 'Recall': 1.0, 'Learning time': 3.5460000000000003, 'Precision': [0.916667, 0.5], 'Mapping Results': {'Possible mappings': 1080, 'Total time': 2.3861806392669678, 'Generating mappings time': 0.07166337966918945, 'Finding best mapping': 0.13138103485107422, 'Generating paths time': 2.173048734664917, 'Knowledge compiling time': 0.010080575942993164}, 'Parameter Learning Results': {'CLL': -0.426598, 'Recall': 1.0, 'Precision': [0.916667, 0.5], 'AUC ROC': 0.972452, 'F1': 0.956522, 'AUC PR': 0.966485}, 'AUC ROC': 0.972452, 'F1': 0.956522, 'AUC PR': 0.966485, 'Inference time': 0.668}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A) )
%   | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A) )
%   | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.46665698487621216;  // std dev = 0,170, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3163714517821796;  // std dev = 0,789, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A) )
%   | then return 0.19113630411788338;  // std dev = 0,802, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3289769681541457;  // std dev = 0,043, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.2962697385748554;  // std dev = 0,180, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.17856658769507713;  // std dev = 0,779, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A) )
%   | then return 0.08989298308006484;  // std dev = 0,791, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.21980122570989297;  // std dev = 0,059, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A) )
%   | then return 0.068196431155096;  // std dev = 0,792, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.18451957755360995;  // std dev = 0,052, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.1896301373820576;  // std dev = 0,178, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08438537547046036;  // std dev = 0,772, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A) )
%   | then return 0.02472541152488772;  // std dev = 0,784, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1426469345631098;  // std dev = 0,058, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
Results
   AUC ROC   = 0.932966
   AUC PR    = 0.885392
   CLL	      = -0.299719
   Precision = 0.825 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.90411


Total learning time: 3.318 seconds
Total inference time: 0.946 seconds
AUC ROC: 0.932966


Dataset: imdb,uwcse, Run: 1, Fold: 4, Type: scratch, Total folds for small set: 1, Time: 00:12:47
{'CLL': -0.299719, 'Recall': 1.0, 'Learning time': 3.318, 'Precision': [0.825, 0.5], 'AUC ROC': 0.932966, 'F1': 0.90411, 'AUC PR': 0.885392, 'Inference time': 0.946}


Best mapping found: ['female(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'actor(A) -> student(A)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.31e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [1.15e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [1.98e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [7.6e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [6.99e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)', 'false': 'student(A)', 'false,false': 'professor(B), publication(D, A), publication(D, B)'}, {'false,false,false': [5.27e-09, 45, 0], 'true,true': [0.078, 0, 382], 'true,false': [0.0, 23, 0], 'false,false,true': [0.0, 3, 0], 'false,true': [0.0, 311, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [7.88e-08, 0, 170], 'false': [1.64e-07, 379, 0], 'true,false': [0.098, 3, 212]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '7;true;student(A).;false;false', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;false;false', '8;false;student(A).;false;true', '8;false,false;professor(B), publication(D, A), publication(D, B).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '9;true;student(A).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.7956489350995123;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.2609267128772899;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.6694131893798132;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.2261077458330186;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5204603507259603;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.19078675290690297;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.3912519545392304;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1571704134160676;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.2971751345678791;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.12690122160779987;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.2319331449240747;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.10084418870238838;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.18613927539734212;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.07917483003269801;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.15301076558102492;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.061608561515437955;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1282672079716729;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.47342190422933794;  // std dev = 2,230, 35,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=29 */
%   else if ( student(A) )
%   | then return -0.35514952434209063;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( professor(B), publication(D, A), publication(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.3551495243420907;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.109246465337187;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.031510794403094296;  // std dev = 3,506, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
Results
   AUC ROC   = 0.921875
   AUC PR    = 0.914806
   CLL	      = -0.470029
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.375
   F1        = 0.545455


Total learning time: 7.806 seconds
Total inference time: 0.834 seconds
AUC ROC: 0.921875


Results in test set
   AUC ROC   = 0.921875
   AUC PR    = 0.914806
   CLL	      = -0.470029
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.375
   F1        = 0.545455


Total inference time: 0.834 seconds
AUC ROC: 0.921875
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.968, 1, 15], 'false': [4.162, 43, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.968, 1, 15], 'false': [4.162, 43, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.968, 1, 15], 'false': [4.162, 43, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.968, 1, 15], 'false': [4.162, 43, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.968, 1, 15], 'false': [4.162, 43, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.968, 1, 15], 'false': [4.162, 43, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.968, 1, 15], 'false': [4.162, 43, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.968, 1, 15], 'false': [4.162, 43, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)', 'false': 'student(A)', 'false,false': 'professor(B), publication(D, A), publication(D, B)'}, {'false,false,true': [0.0, 0, 0], 'true,true': [0.968, 1, 15], 'true,false': [2.23, 6, 29], 'false,false,false': [0.0, 16, 0], 'false,true': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.968, 1, 15], 'false': [3.506, 43, 29], 'true,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;false;false', '8;false;student(A).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false', 0), ('false', 0.5972222222222222), ('true,true', 0.9375)]
Tree #2: [('true,false', 0), ('false', 0.5972222222222222), ('true,true', 0.9375)]
Tree #3: [('true,false', 0), ('false', 0.5972222222222222), ('true,true', 0.9375)]
Tree #4: [('true,false', 0), ('false', 0.5972222222222222), ('true,true', 0.9375)]
Tree #5: [('true,false', 0), ('false', 0.5972222222222222), ('true,true', 0.9375)]
Tree #6: [('true,false', 0), ('false', 0.5972222222222222), ('true,true', 0.9375)]
Tree #7: [('true,false', 0), ('false', 0.5972222222222222), ('true,true', 0.9375)]
Tree #8: [('true,false', 0), ('false', 0.5972222222222222), ('true,true', 0.9375)]
Tree #9: [('false,false,true', 0), ('true,false', 0.8285714285714286), ('true,true', 0.9375)]
Tree #10: [('true,false', 0), ('false', 0.5972222222222222), ('true,true', 0.9375)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.7956489350995123;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return 0.2609267128772899;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.6694131893798132;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return 0.2261077458330186;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5204603507259603;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return 0.19078675290690297;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.3912519545392304;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return 0.1571704134160676;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.2971751345678791;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return 0.12690122160779987;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.2319331449240747;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return 0.10084418870238838;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.18613927539734212;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return 0.07917483003269801;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.15301076558102492;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return 0.061608561515437955;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1282672079716729;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.47342190422933794;  // std dev = 2,230, 35,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=29 */
%   else if ( student(A) )
%   | then return -0.35514952434209063;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.35514952434209063;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.109246465337187;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return 0.031510794403094296;  // std dev = 3,506, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
Results
   AUC ROC   = 0.921875
   AUC PR    = 0.914806
   CLL	      = -0.470029
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.375
   F1        = 0.545455


Total learning time: 10.988 seconds
Total inference time: 0.866 seconds
AUC ROC: 0.921875


Best model AUC ROC so far: 0.921875


******************************************
Best model found
******************************************
Total revision time: 20.494
Best validation AUC ROC: 0.921875


Results
   AUC ROC   = 0.972452
   AUC PR    = 0.966485
   CLL	      = -0.439736
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.393939
   F1        = 0.565217


Total inference time: 1.111 seconds
AUC ROC: 0.972452
Dataset: imdb,uwcse, Run: 1, Fold: 4, Type: transfer, Total folds for small set: 2, Time: 00:13:14
{'CLL': -0.439736, 'Recall': 0.393939, 'Learning time': 20.494, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 1080, 'Total time': 2.8780863285064697, 'Generating mappings time': 0.08953380584716797, 'Finding best mapping': 0.17478442192077637, 'Generating paths time': 2.587188959121704, 'Knowledge compiling time': 0.02657032012939453}, 'Parameter Learning Results': {'CLL': -0.439736, 'Recall': 0.393939, 'Precision': [1.0, 0.5], 'AUC ROC': 0.972452, 'F1': 0.565217, 'AUC PR': 0.966485}, 'AUC ROC': 0.972452, 'F1': 0.565217, 'AUC PR': 0.966485, 'Inference time': 1.111}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B), publication(D, A) )
%   | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(E, B), publication(E, A), tempadvisedby(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(G, B), publication(G, H), student(H) )
%   | | | then if ( publication(I, A), publication(I, J), tempadvisedby(K, J) )
%   | | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(L, B), inphase(L, M), inphase(A, M) )
%   | | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( tempadvisedby(H, N), publication(G, N) )
%   | | | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | | else if ( tempadvisedby(P, B) )
%   | | | | | | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004877;  // std dev = 3,16e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A), tempadvisedby(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(E, A), publication(E, F), tempadvisedby(G, F) )
%   | | then if ( publication(E, G) )
%   | | | then return 0.8028970104906737;  // std dev = 0,035, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.005705447634370237;  // std dev = 0,812, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(H, B), publication(H, I), student(I) )
%   | | | then if ( tempadvisedby(I, J), publication(H, J) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( tempadvisedby(K, B), inphase(K, L), inphase(A, L) )
%   | | | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( tempadvisedby(M, B) )
%   | | | | | | then return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109544;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( projectmember(D, B), publication(E, A) )
%   | | then return 0.2964333866789702;  // std dev = 0,918, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, B), publication(F, A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else if ( publication(G, B) )
%   | | | | then return 0.3858193094879878;  // std dev = 0,412, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(H, B), publication(H, I), student(I) )
%   | | then if ( tempadvisedby(I, J), publication(H, J) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(K, A) )
%   | | | | then return 0.4522674090758505;  // std dev = 0,715, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.3086152766911076;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5760235705972419;  // std dev = 0,055, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A), publication(D, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | then return 0.1560873864857114;  // std dev = 0,991, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(G, B), publication(G, H), student(H) )
%   | | | then if ( tempadvisedby(H, I), inphase(A, J), inphase(H, J) )
%   | | | | then return 0.4741525599253635;  // std dev = 0,139, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then return 0.3490716021290798;  // std dev = 0,391, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | | | else if ( publication(L, A) )
%   | | | | | | then return 0.27579178171620033;  // std dev = 0,630, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return 0.2806582103644637;  // std dev = 0,832, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( publication(M, B) )
%   | | | | then return 0.412498575585566;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.44489454048294125;  // std dev = 0,161, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.10159632948783635;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B), publication(D, A) )
%   | then return 0.19692823801613094;  // std dev = 0,889, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(E, B), publication(E, F), student(F) )
%   | | then if ( publication(G, A), publication(G, B) )
%   | | | then if ( tempadvisedby(F, B) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.2846102882857255;  // std dev = 0,171, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then if ( inphase(A, I), inphase(F, I) )
%   | | | | | then return 0.10744763783051436;  // std dev = 0,881, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else return 0.3058654826350336;  // std dev = 0,944, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | else if ( tempadvisedby(F, J) )
%   | | | | | then return 0.18734082521330225;  // std dev = 0,781, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.48709487890294384;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.33029462005766574;  // std dev = 0,048, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926098;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A), publication(D, B) )
%   | then return 0.260610852982945;  // std dev = 0,011, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(E, B) )
%   | | then if ( publication(F, B), inphase(E, G), inphase(A, G) )
%   | | | then return 0.12986985695169753;  // std dev = 0,776, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(H, A) )
%   | | | | then return 0.079474109864956;  // std dev = 0,964, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | else if ( publication(I, B) )
%   | | | | | then return 0.24077778458505142;  // std dev = 0,355, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | | else return 0.2482107320371023;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(J, B), publication(J, K), tempadvisedby(K, L) )
%   | | | then return 0.14507829262483474;  // std dev = 0,785, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else if ( publication(M, B), publication(N, A) )
%   | | | | then return 0.15950851047506742;  // std dev = 0,602, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.2943788488554471;  // std dev = 0,065, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A), tempadvisedby(D, B) )
%   | then return 0.2135939119203672;  // std dev = 0,009, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(E, B), publication(F, B) )
%   | | then return 0.1183638956558553;  // std dev = 0,391, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( publication(G, B), publication(G, H), tempadvisedby(I, H) )
%   | | | then if ( publication(J, A), publication(K, I) )
%   | | | | then return 0.09258364575069732;  // std dev = 0,593, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( publication(L, I) )
%   | | | | | then return 0.278028300460457;  // std dev = 0,070, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.203756219712256;  // std dev = 0,020, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( publication(M, A), publication(M, N), tempadvisedby(N, P) )
%   | | | | then return 0.43663649532171334;  // std dev = 0,055, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( projectmember(Q, B) )
%   | | | | | then return -0.16511893135227232;  // std dev = 0,453, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.0910915685077523;  // std dev = 0,749, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109179;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A), tempadvisedby(D, B) )
%   | then return 0.17990617077067825;  // std dev = 0,008, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(E, A), publication(E, F), tempadvisedby(F, G) )
%   | | then return 0.33399540562379926;  // std dev = 0,049, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(H, A) )
%   | | | then if ( tempadvisedby(I, B) )
%   | | | | then return -0.314715074035199;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else return 0.14317607065777987;  // std dev = 0,633, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else if ( publication(J, B), publication(J, K), tempadvisedby(L, K) )
%   | | | | then if ( publication(M, L) )
%   | | | | | then return 0.15837067410836003;  // std dev = 0,258, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | | else if ( publication(J, N), student(N) )
%   | | | | | | then return 0.1723506426844554;  // std dev = 0,965, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | else return 0.16874131446075802;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.06146515662514838;  // std dev = 0,732, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A), tempadvisedby(D, B) )
%   | then return 0.1548726616290026;  // std dev = 0,007, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(E, B), publication(E, F), student(F) )
%   | | then if ( publication(G, A), publication(G, H), tempadvisedby(I, H) )
%   | | | then return -0.15817563734326787;  // std dev = 0,492, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( tempadvisedby(F, J), publication(E, J) )
%   | | | | then return 0.1965337341172272;  // std dev = 0,059, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( tempadvisedby(K, B), inphase(A, L), inphase(F, L) )
%   | | | | | then return -0.0017727900481756171;  // std dev = 0,738, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( tempadvisedby(M, B) )
%   | | | | | | then return 0.12268765039867428;  // std dev = 0,950, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | else return 0.08062819644199956;  // std dev = 0,786, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(N, B), publication(P, A) )
%   | | | then return 0.06604386509551302;  // std dev = 0,577, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17843159470824524;  // std dev = 0,039, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A), tempadvisedby(D, B) )
%   | then return 0.13566725536199017;  // std dev = 0,006, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(E, B), publication(E, F), student(F) )
%   | | then if ( tempadvisedby(F, G), publication(E, G) )
%   | | | then return 0.16747494023813728;  // std dev = 0,052, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tempadvisedby(H, B), inphase(H, I), inphase(A, I) )
%   | | | | then return 0.01166153997416386;  // std dev = 0,753, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then if ( inphase(A, K), inphase(F, K) )
%   | | | | | | then return 0.12498352132725753;  // std dev = 0,428, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return -0.01216788785220313;  // std dev = 0,867, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else if ( publication(L, A) )
%   | | | | | | then return 0.09570369728785919;  // std dev = 0,585, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | else return -0.07066666918906912;  // std dev = 0,696, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1224919251738596;  // std dev = 0,154, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
Results
   AUC ROC   = 0.974747
   AUC PR    = 0.971114
   CLL	      = -0.248259
   Precision = 0.909091 at threshold = 0.5
   Recall    = 0.909091
   F1        = 0.909091


Total learning time: 33.082 seconds
Total inference time: 0.835 seconds
AUC ROC: 0.974747


Dataset: imdb,uwcse, Run: 1, Fold: 4, Type: scratch, Total folds for small set: 2, Time: 00:13:48
{'CLL': -0.248259, 'Recall': 0.909091, 'Learning time': 33.082, 'Precision': [0.909091, 0.5], 'AUC ROC': 0.974747, 'F1': 0.909091, 'AUC PR': 0.971114, 'Inference time': 0.835}


Best mapping found: ['female(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.31e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [1.15e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [1.98e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [7.6e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [6.99e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [5.27e-09, 45, 0], 'true,true': [0.078, 0, 382], 'true,false': [0.0, 23, 0], 'false,false,true': [0.0, 3, 0], 'false,true': [0.0, 311, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [7.88e-08, 0, 170], 'false': [1.64e-07, 379, 0], 'true,false': [0.098, 3, 212]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '7;true;student(A).;false;false', '8;;advisedby(A, B) :- professor(B).;true;false', '8;true;publication(C, A), publication(C, B).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '9;true;student(A).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8081489350995122;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.268148935099512;  // std dev = 4,918, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.6794533872440252;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.23227698568631575;  // std dev = 4,918, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.527470398902049;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.19576329254502534;  // std dev = 4,918, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.3964381250956143;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1609734510621025;  // std dev = 4,918, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.30171463052547737;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.12967242953401575;  // std dev = 4,918, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.23634025863486174;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1027835162338003;  // std dev = 4,918, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.19056841217392034;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.08048542754401183;  // std dev = 4,918, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.1574879988890683;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.06246587158481615;  // std dev = 4,918, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13278044005599982;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0.3574682163906848;  // std dev = 3,392, 57,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=41 */
%   else return -0.36183002922335034;  // std dev = 5,96e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.11377521835633106;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.03308795197534305;  // std dev = 4,365, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
Results
   AUC ROC   = 0.944444
   AUC PR    = 0.933875
   CLL	      = -0.482005
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.333333
   F1        = 0.5


Total learning time: 6.294 seconds
Total inference time: 0.478 seconds
AUC ROC: 0.944444


Results in test set
   AUC ROC   = 0.944444
   AUC PR    = 0.933875
   CLL	      = -0.482005
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.333333
   F1        = 0.5


Total inference time: 0.478 seconds
AUC ROC: 0.944444
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.975, 1, 19], 'false': [4.918, 59, 41], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.975, 1, 19], 'false': [4.918, 59, 41], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.975, 1, 19], 'false': [4.918, 59, 41], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.975, 1, 19], 'false': [4.918, 59, 41], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.975, 1, 19], 'false': [4.918, 59, 41], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.975, 1, 19], 'false': [4.918, 59, 41], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.975, 1, 19], 'false': [4.918, 59, 41], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.975, 1, 19], 'false': [4.918, 59, 41], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.975, 1, 19], 'false': [5.96e-08, 43, 0], 'true,false': [3.392, 16, 41]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.975, 1, 19], 'false': [4.365, 59, 41], 'true,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '8;;advisedby(A, B) :- professor(B).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false', 0), ('false', 0.59), ('true,true', 0.95)]
Tree #2: [('true,false', 0), ('false', 0.59), ('true,true', 0.95)]
Tree #3: [('true,false', 0), ('false', 0.59), ('true,true', 0.95)]
Tree #4: [('true,false', 0), ('false', 0.59), ('true,true', 0.95)]
Tree #5: [('true,false', 0), ('false', 0.59), ('true,true', 0.95)]
Tree #6: [('true,false', 0), ('false', 0.59), ('true,true', 0.95)]
Tree #7: [('true,false', 0), ('false', 0.59), ('true,true', 0.95)]
Tree #8: [('true,false', 0), ('false', 0.59), ('true,true', 0.95)]
Tree #9: [('true,false', 0.7192982456140351), ('true,true', 0.95)]
Tree #10: [('true,false', 0), ('false', 0.59), ('true,true', 0.95)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.8081489350995122;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else return 0.268148935099512;  // std dev = 4,918, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.6794533872440252;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else return 0.23227698568631575;  // std dev = 4,918, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.527470398902049;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else return 0.19576329254502534;  // std dev = 4,918, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.3964381250956143;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else return 0.1609734510621025;  // std dev = 4,918, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.30171463052547737;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else return 0.12967242953401575;  // std dev = 4,918, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.23634025863486174;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else return 0.1027835162338003;  // std dev = 4,918, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.19056841217392034;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else return 0.08048542754401183;  // std dev = 4,918, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1574879988890683;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else return 0.06246587158481615;  // std dev = 4,918, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.2991077550050524;  // std dev = 3,634, 77,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=60 */
%   else return -0.36183002922335034;  // std dev = 5,96e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.09224959822511618;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else return 0.041285983876573285;  // std dev = 4,410, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
Results
   AUC ROC   = 0.944444
   AUC PR    = 0.933875
   CLL	      = -0.486943
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.333333
   F1        = 0.5


Total learning time: 6.618 seconds
Total inference time: 0.498 seconds
AUC ROC: 0.944444


Best model AUC ROC so far: 0.944444


******************************************
Best model found
******************************************
Total revision time: 13.888
Best validation AUC ROC: 0.944444


Results
   AUC ROC   = 0.935721
   AUC PR    = 0.927963
   CLL	      = -0.469137
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.393939
   F1        = 0.565217


Total inference time: 0.567 seconds
AUC ROC: 0.935721
Dataset: imdb,uwcse, Run: 1, Fold: 4, Type: transfer, Total folds for small set: 3, Time: 00:14:07
{'CLL': -0.469137, 'Recall': 0.393939, 'Learning time': 13.888, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 1080, 'Total time': 2.7679264545440674, 'Generating mappings time': 0.0690455436706543, 'Finding best mapping': 0.13478875160217285, 'Generating paths time': 2.521320343017578, 'Knowledge compiling time': 0.04276633262634277}, 'Parameter Learning Results': {'CLL': -0.469137, 'Recall': 0.393939, 'Precision': [1.0, 0.5], 'AUC ROC': 0.935721, 'F1': 0.565217, 'AUC PR': 0.927963}, 'AUC ROC': 0.935721, 'F1': 0.565217, 'AUC PR': 0.927963, 'Inference time': 0.567}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, D), professor(D) )
%   | then if ( publication(C, B) )
%   | | then return 0.8081489350995122;  // std dev = 0,218, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(F, B), hasposition(B, G), hasposition(D, G) )
%   | | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else if ( publication(H, B) )
%   | | | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | then if ( projectmember(K, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.724815601766179;  // std dev = 0,340, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048768;  // std dev = 4,59e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, D), professor(D) )
%   | then if ( publication(C, B) )
%   | | then return 0.6794533872440252;  // std dev = 0,218, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(F, B), hasposition(B, G), hasposition(D, G) )
%   | | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else if ( publication(H, B) )
%   | | | | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | then if ( projectmember(K, B) )
%   | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6122482608191132;  // std dev = 0,340, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return 0.7194734122109543;  // std dev = 4,21e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839152;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, D), professor(D) )
%   | then if ( publication(C, B) )
%   | | then return 0.527470398902049;  // std dev = 0,218, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(F, B), hasposition(B, G), hasposition(D, G) )
%   | | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else if ( publication(H, B) )
%   | | | | | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | then if ( publication(J, K), projectmember(L, K) )
%   | | | then return 0.26290219899207656;  // std dev = 1,114, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5367874010731801;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, D), professor(D) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B), publication(F, E), publication(F, B) )
%   | | | then return 0.19643812509561429;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4464381250956143;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(H, B), tempadvisedby(I, D) )
%   | | | | then return -0.031062794404981577;  // std dev = 0,835, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return 0.19715469966762905;  // std dev = 1,036, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | then if ( projectmember(L, B) )
%   | | | then return 0.30404112491746543;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.35731848110784004;  // std dev = 0,331, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return 0.41751358415830986;  // std dev = 4,71e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783631;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(D, B) )
%   | | then return 0.06364894993390445;  // std dev = 1,156, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.26720092396996725;  // std dev = 0,401, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.34040030258389126;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else if ( projectmember(G, B) )
%   | | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(H, B), tempadvisedby(I, F) )
%   | | | | | then return -0.0119934015277672;  // std dev = 0,832, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else return 0.1638831573364714;  // std dev = 1,031, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then return 0.30923159834851954;  // std dev = 0,307, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.092691276189261;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, D), tempadvisedby(D, E) )
%   | then if ( publication(F, B) )
%   | | then return 0.4939277886539393;  // std dev = 0,271, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1314709661686227;  // std dev = 0,429, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(G, A), publication(G, H), tempadvisedby(I, H) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.22755179238710832;  // std dev = 0,213, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else if ( publication(J, I) )
%   | | | | then return 0.03449823603626143;  // std dev = 0,849, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return -0.16933601078474156;  // std dev = 0,143, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tempadvisedby(K, B), publication(L, B) )
%   | | | then if ( projectmember(M, B) )
%   | | | | then return 0.15434762770386382;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.2053653803177472;  // std dev = 0,324, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.250370005304537;  // std dev = 0,129, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.0851847513883968;  // std dev = 2,11e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(D, B) )
%   | | then return -0.020651623776038852;  // std dev = 1,124, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.1814794015721866;  // std dev = 0,317, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.22591453488669258;  // std dev = 0,004, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else if ( projectmember(G, B) )
%   | | | | then return 0.2309978820951597;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(H, B), tempadvisedby(I, F) )
%   | | | | | then return -0.024721082390909345;  // std dev = 0,727, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else return 0.10428458965172749;  // std dev = 1,024, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(J, B), inphase(J, K), inphase(A, K) )
%   | | | then return 0.24514590282505527;  // std dev = 0,069, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1978616063985877;  // std dev = 0,217, 32,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   else return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, D), tempadvisedby(D, E) )
%   | then return 0.2087957531089269;  // std dev = 0,244, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( publication(F, A) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.15491468450136747;  // std dev = 0,201, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else if ( publication(G, B), publication(F, H), tempadvisedby(I, H) )
%   | | | | then return -0.16825481987338048;  // std dev = 0,185, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return 0.17560819690984858;  // std dev = 0,936, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then if ( projectmember(L, B) )
%   | | | | then return 0.06761978227495295;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( yearsinprogram(A, M), yearsinprogram(J, M) )
%   | | | | | then return -0.07664722471300345;  // std dev = 0,769, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.17786444823740621;  // std dev = 0,255, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.17882102284485607;  // std dev = 0,009, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.14145935434771348;  // std dev = 0,196, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.16212805171952727;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(G, B), hasposition(B, H), hasposition(E, H) )
%   | | | | then return -0.08795674393220376;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else if ( publication(I, B) )
%   | | | | | then return 0.14636370521111236;  // std dev = 0,766, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return -0.07032103051814988;  // std dev = 0,888, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then if ( publication(K, L), projectmember(M, L) )
%   | | | | then return -0.05486676479246357;  // std dev = 1,096, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return 0.15278453691823826;  // std dev = 0,248, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.15410453390410156;  // std dev = 0,008, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.12073754599040368;  // std dev = 0,197, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.06456054437308949;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( yearsinprogram(A, G), yearsinprogram(D, G) )
%   | | | | then return -0.07628937605534836;  // std dev = 0,735, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( publication(H, D) )
%   | | | | | then return -0.18899537074196013;  // std dev = 0,715, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.17048729677807792;  // std dev = 0,078, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | then if ( tempadvisedby(K, B) )
%   | | | | then return 0.14129119857999317;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.01766923942936231;  // std dev = 0,398, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.13506883433374356;  // std dev = 0,007, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06419184008202623;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
Results
   AUC ROC   = 0.984848
   AUC PR    = 0.9837
   CLL	      = -0.271395
   Precision = 0.966667 at threshold = 0.5
   Recall    = 0.878788
   F1        = 0.920635


Total learning time: 23.676 seconds
Total inference time: 0.7 seconds
AUC ROC: 0.984848


Dataset: imdb,uwcse, Run: 1, Fold: 4, Type: scratch, Total folds for small set: 3, Time: 00:14:31
{'CLL': -0.271395, 'Recall': 0.878788, 'Learning time': 23.676, 'Precision': [0.966667, 0.5], 'AUC ROC': 0.984848, 'F1': 0.920635, 'AUC PR': 0.9837, 'Inference time': 0.7}


Best mapping found: ['female(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.31e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [1.15e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [1.98e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [7.6e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [6.99e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false,false,false': [5.27e-09, 45, 0], 'true,true': [0.078, 0, 382], 'true,false': [0.0, 23, 0], 'false,false,true': [0.0, 3, 0], 'false,true': [0.0, 311, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [7.88e-08, 0, 170], 'false': [1.64e-07, 379, 0], 'true,false': [0.098, 3, 212]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '7;true;student(A).;false;false', '8;;advisedby(A, B) :- professor(B).;true;false', '8;true;publication(C, A), publication(C, B).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '9;true;student(A).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8581489350995117;  // std dev = 1,69e-07, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.2581489350995123;  // std dev = 5,586, 130,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=52 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.7194734122109546;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.2237336544841058;  // std dev = 5,586, 130,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=52 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.18886832215749755;  // std dev = 5,586, 130,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=52 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.4175135841583101;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.1557002943717434;  // std dev = 5,586, 130,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=52 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.12582628229372075;  // std dev = 5,586, 130,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=52 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.10008916917880588;  // std dev = 5,586, 130,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=52 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.20975771563253548;  // std dev = 2,98e-08, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.0786627978060263;  // std dev = 5,586, 130,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=52 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.1770964977452775;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.06127260860742243;  // std dev = 5,586, 130,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=52 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1379991356978126;  // std dev = 0,302, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | else return 0.3597442586114022;  // std dev = 3,868, 73,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=52 */
%   else return -0.3525845085118856;  // std dev = 4,21e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.13572739517061813;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.07776502365197106;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.03248675424895075;  // std dev = 4,967, 130,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=52 */
Results
   AUC ROC   = 0.902344
   AUC PR    = 0.89646
   CLL	      = -0.48309
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.375
   F1        = 0.545455


Total learning time: 4.566 seconds
Total inference time: 0.704 seconds
AUC ROC: 0.902344


Results in test set
   AUC ROC   = 0.902344
   AUC PR    = 0.89646
   CLL	      = -0.48309
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.375
   F1        = 0.545455


Total inference time: 0.704 seconds
AUC ROC: 0.902344
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.69e-07, 0, 28], 'false': [5.586, 78, 52], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 28], 'false': [5.586, 78, 52], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 28], 'false': [5.586, 78, 52], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 28], 'false': [5.586, 78, 52], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 28], 'false': [5.586, 78, 52], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 28], 'false': [5.586, 78, 52], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.98e-08, 0, 28], 'false': [5.586, 78, 52], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 28], 'false': [5.586, 78, 52], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.302, 2, 28], 'false': [4.21e-08, 57, 0], 'true,false': [3.868, 21, 52]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 28], 'false': [4.967, 78, 52], 'true,false': [0.0, 2, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '7;true;student(A).;false;false', '8;;advisedby(A, B) :- professor(B).;false;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '9;true;student(A).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0.6)]
Tree #2: [('false', 0.6)]
Tree #3: [('false', 0.6)]
Tree #4: [('false', 0.6)]
Tree #5: [('false', 0.6)]
Tree #6: [('false', 0.6)]
Tree #7: [('false', 0.6)]
Tree #8: [('false', 0.6)]
Tree #9: [('true,false', 0.7123287671232876), ('true,true', 0.9333333333333333)]
Tree #10: [('false', 0.6)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.791482268432845;  // std dev = 0,249, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(E, B), publication(E, F), tempadvisedby(G, F) )
%   | | | then if ( publication(E, H), inphase(H, I) )
%   | | | | then return 0.6081489350995115;  // std dev = 0,433, 36,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=27 */
%   | | | | else return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( publication(L, A) )
%   | | | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.14185106490048768;  // std dev = 5,77e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.6660633000779167;  // std dev = 0,249, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(E, A) )
%   | | | then if ( publication(F, B), publication(F, G), student(G) )
%   | | | | then if ( tempadvisedby(G, H), publication(F, H) )
%   | | | | | then return 0.10040529557005513;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.3001387267341351;  // std dev = 1,002, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.5937513093017365;  // std dev = 0,891, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else if ( tempadvisedby(I, B), yearsinprogram(I, J), yearsinprogram(A, J) )
%   | | | | then if ( tempadvisedby(K, B), publication(L, K) )
%   | | | | | then return 0.43373862890338843;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.27071120657136516;  // std dev = 0,993, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.5850256246609654;  // std dev = 0,380, 39,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=32 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5181199435476403;  // std dev = 0,249, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, E), publication(H, G) )
%   | | | | then return 0.37178624138062316;  // std dev = 0,871, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return -0.0015517664570511638;  // std dev = 0,821, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(I, B), yearsinprogram(I, J), yearsinprogram(A, J) )
%   | | | then if ( tempadvisedby(K, B), publication(L, K) )
%   | | | | then return 0.3476104496697879;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.21944001505349847;  // std dev = 0,992, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( tempadvisedby(M, B), publication(N, B) )
%   | | | | then return 0.42635809337178426;  // std dev = 0,398, 24,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | | else return 0.5238273434145859;  // std dev = 0,309, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | else return -0.11231637819360629;  // std dev = 4,08e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.3895295402406854;  // std dev = 0,249, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( projectmember(E, B) )
%   | | | then return 0.42831401234948413;  // std dev = 0,035, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else if ( publication(F, A) )
%   | | | | then return 0.20838466119616136;  // std dev = 0,728, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.3150650721478781;  // std dev = 0,424, 28,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else if ( publication(G, B), publication(G, H), tempadvisedby(H, I) )
%   | | | then if ( publication(G, I) )
%   | | | | then if ( publication(J, A) )
%   | | | | | then return 0.04536832383380222;  // std dev = 0,726, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.3207376209961627;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else return 0.04276433844156383;  // std dev = 0,836, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.41073428056159955;  // std dev = 0,319, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return -0.10159632948783621;  // std dev = 3,65e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.29567961238434487;  // std dev = 0,249, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), tempadvisedby(E, F) )
%   | | then return 0.41619250960121257;  // std dev = 0,339, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, B), publication(G, H), tempadvisedby(I, H) )
%   | | | then if ( tempadvisedby(J, B), publication(G, K), inphase(K, L) )
%   | | | | then if ( inphase(A, L) )
%   | | | | | then return 0.2633256747821509;  // std dev = 0,411, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | else return 0.21530864015375467;  // std dev = 0,441, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | | else return 0.2962730476935642;  // std dev = 0,322, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else if ( tempadvisedby(M, B) )
%   | | | | then return 0.2528143211262693;  // std dev = 0,714, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | else if ( publication(N, A), publication(N, P), professor(P) )
%   | | | | | then return -0.0900811391849891;  // std dev = 0,725, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.12074973486248218;  // std dev = 1,057, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.23048996886792553;  // std dev = 0,249, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.2612601292076088;  // std dev = 0,058, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | | then if ( tempadvisedby(G, F), publication(H, G) )
%   | | | | then return 0.20389546136003747;  // std dev = 0,870, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return -0.07482742666295597;  // std dev = 0,724, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( tempadvisedby(I, B), yearsinprogram(I, J), yearsinprogram(A, J) )
%   | | | | then if ( tempadvisedby(K, B), publication(L, K) )
%   | | | | | then return 0.12479278732379188;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.04556433150176287;  // std dev = 0,994, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else if ( tempadvisedby(M, B), publication(N, B) )
%   | | | | | then return 0.17702988767479366;  // std dev = 0,412, 22,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | | | else return 0.24901945679965615;  // std dev = 0,316, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | else return -0.0851847513883968;  // std dev = 1,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1846947294407535;  // std dev = 0,249, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), tempadvisedby(F, E) )
%   | | then if ( publication(G, F), publication(G, E) )
%   | | | then if ( publication(H, A) )
%   | | | | then return -0.03822187123857205;  // std dev = 0,652, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(I, B) )
%   | | | | | then return 0.16053429687053575;  // std dev = 0,848, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.11366678265473858;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1872912054336603;  // std dev = 0,359, 36,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=30 */
%   | | else if ( projectmember(J, B) )
%   | | | then return 0.20775337839597152;  // std dev = 0,039, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(K, B) )
%   | | | | then return -0.034331864647732274;  // std dev = 0,765, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.08000614330948008;  // std dev = 0,422, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return -0.07877675473109175;  // std dev = 1,97e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.15155508707642035;  // std dev = 0,249, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), tempadvisedby(E, B), publication(D, E) )
%   | | then return 0.36706151909663176;  // std dev = 0,053, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(F, B), yearsinprogram(F, G), yearsinprogram(A, G) )
%   | | | then return -0.1269312442089075;  // std dev = 1,121, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else if ( publication(H, B), publication(H, I), tempadvisedby(I, J) )
%   | | | | then if ( publication(H, J), publication(K, A) )
%   | | | | | then return -0.02968156246999476;  // std dev = 0,653, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else if ( publication(H, J) )
%   | | | | | | then return 0.08972936479946987;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | else return -0.026915401493461028;  // std dev = 0,765, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(L, B), publication(M, B) )
%   | | | | | then return 0.09304371996569691;  // std dev = 0,402, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | | | | else return 0.19369870340526799;  // std dev = 0,256, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.0937077508500646;  // std dev = 3,314, 103,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=80 */
%   else return -0.06842697784420268;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.11260023444611779;  // std dev = 0,249, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), tempadvisedby(F, E) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then if ( projectmember(H, E) )
%   | | | | then return -0.11859117627745408;  // std dev = 0,911, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( publication(D, F) )
%   | | | | | then return 0.26817062495405236;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(I, F) )
%   | | | | | | then return -0.18667397394914215;  // std dev = 0,955, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | else if ( publication(J, A) )
%   | | | | | | | then return -0.03334847157584767;  // std dev = 0,724, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | | else return 0.17176412390835458;  // std dev = 0,363, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.12886645855300083;  // std dev = 0,287, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0.04095936732091161;  // std dev = 0,355, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | else return -0.06518760434844192;  // std dev = 0,024, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
Results
   AUC ROC   = 0.976563
   AUC PR    = 0.976221
   CLL	      = -0.27191
   Precision = 0.888889 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.941176


Total learning time: 18.274 seconds
Total inference time: 0.666 seconds
AUC ROC: 0.976563


Best model AUC ROC so far: 0.976563


Refining iteration 2
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '0;false,true,false,true;publication(E, H), inphase(H, I).;false;false', '0;false,true,false,false,false,false;publication(L, A).;false;false', '0;false,true,false,false,false;tempadvisedby(K, B).;true;true', '0;false,true,false,false;publication(J, B).;false;true', '0;false,true,false;publication(E, B), publication(E, F), tempadvisedby(G, F).;true;true', '0;false;professor(B), student(A).;true;false', '0;false,true;projectmember(D, B).;false;true', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '1;false,true,false,true;publication(F, B), publication(F, G), student(G).;false;false', '1;false,true,false,false,true;tempadvisedby(K, B), publication(L, K).;false;false', '1;false,true,false,false;tempadvisedby(I, B), yearsinprogram(I, J), yearsinprogram(A, J).;true;false', '1;false,true,false;publication(E, A).;true;true', '1;false;professor(B), student(A).;true;false', '1;false,true;projectmember(D, B).;false;true', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '2;false,true,true;tempadvisedby(F, B).;false;true', '2;false,true,false,false;tempadvisedby(M, B), publication(N, B).;false;false', '2;false,true,true,false;tempadvisedby(G, E), publication(H, G).;false;false', '2;false,true,false;tempadvisedby(I, B), yearsinprogram(I, J), yearsinprogram(A, J).;false;true', '2;false;professor(B), student(A).;true;false', '2;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '3;false,true,true;projectmember(E, B).;false;true', '3;false,true,false,true,true;publication(J, A).;false;false', '3;false,true,true,false;publication(F, A).;false;false', '3;false,true,false,true;publication(G, I).;true;true', '3;false,true,false;publication(G, B), publication(G, H), tempadvisedby(H, I).;true;false', '3;false;professor(B), student(A).;true;false', '3;false,true;tempadvisedby(D, B).;true;true', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '4;false,true,false,true;tempadvisedby(J, B), publication(G, K), inphase(K, L).;true;false', '4;false,true,false,true,true;inphase(A, L).;false;false', '4;false,true,false,false;tempadvisedby(M, B).;false;false', '4;false,true,false;publication(G, B), publication(G, H), tempadvisedby(I, H).;true;true', '4;false;professor(B), student(A).;true;false', '4;false,true;publication(D, A), publication(D, E), tempadvisedby(E, F).;false;true', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '5;false,true,false,true;tempadvisedby(G, F), publication(H, G).;false;false', '5;false,true,false,false,false;tempadvisedby(M, B), publication(N, B).;false;false', '5;false,true,false,false;tempadvisedby(I, B), yearsinprogram(I, J), yearsinprogram(A, J).;false;true', '5;false,true,false;publication(E, A), publication(E, F), professor(F).;true;true', '5;false;professor(B), student(A).;true;false', '5;false,true;projectmember(D, B).;false;true', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '6;false,true,true;publication(G, F), publication(G, E).;true;false', '6;false,true,false,false;publication(K, B).;false;false', '6;false,true,true,true,false;tempadvisedby(I, B).;false;false', '6;false,true,false;projectmember(J, B).;false;true', '6;false,true,true,true;publication(H, A).;true;true', '6;false;professor(B), student(A).;true;false', '6;false,true;publication(D, B), publication(D, E), tempadvisedby(F, E).;true;true', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '7;false,true,false,false;publication(H, B), publication(H, I), tempadvisedby(I, J).;true;true', '7;false,true,false,false,true;publication(H, J), publication(K, A).;false;true', '7;false,true,false,false,true,false;publication(H, J).;false;false', '7;false,true,false;tempadvisedby(F, B), yearsinprogram(F, G), yearsinprogram(A, G).;true;true', '7;false;professor(B), student(A).;true;false', '7;false,true,false,false,false;tempadvisedby(L, B), publication(M, B).;false;false', '7;false,true;publication(D, B), tempadvisedby(E, B), publication(D, E).;false;true', '8;;advisedby(A, B) :- professor(B).;true;false', '9;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '9;false,true,true;tempadvisedby(G, B).;true;false', '9;false,true,true,true,false;publication(D, F).;false;true', '9;false,true,true,true,false,false,false;publication(J, A).;false;false', '9;false,true,true,true;projectmember(H, E).;false;true', '9;false;professor(B), student(A).;true;false', '9;false,true;publication(D, B), publication(D, E), tempadvisedby(F, E).;true;false', '9;false,true,true,true,false,false;publication(I, F).;true;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,false,false,false,true', 0.6666666666666666), ('false,true,false,false,true', 0.6666666666666666), ('false,true,false,false,false,false,true', 0.6666666666666666), ('false,true,false,true,true', 0.75), ('false,true,false,false,false,false,false', 0.75), ('false,true,false,true,false', 0.9), ('true', 0.9333333333333333)]
Tree #2: [('false,true,false,true,true,false', 0.5), ('false,true,false,false,true,false', 0.5), ('false,true,false,false,true,true', 0.6666666666666666), ('false,true,false,true,true,true', 0.6666666666666666), ('false,true,false,false,false', 0.8205128205128205), ('false,true,false,true,false', 0.8333333333333334), ('true', 0.9333333333333333)]
Tree #3: [('false,true,false,true,false', 0.5), ('false,true,false,true,true', 0.6666666666666666), ('false,true,true,false,true', 0.6666666666666666), ('false,true,true,false,false', 0.75), ('false,true,false,false,true', 0.7916666666666666), ('false,true,false,false,false', 0.8846153846153846), ('true', 0.9333333333333333)]
Tree #4: [('false,true,false,true,false', 0.6666666666666666), ('false,true,true,false,true', 0.6666666666666666), ('false,true,false,true,true,true', 0.6666666666666666), ('false,true,true,false,false', 0.75), ('false,true,false,true,true,false', 0.8), ('false,true,false,false', 0.8823529411764706), ('true', 0.9333333333333333)]
Tree #5: [('false,true,false,false,false,false', 0.6666666666666666), ('false,true,false,false,false,true', 0.6666666666666666), ('false,true,false,true,true,false', 0.7142857142857143), ('false,true,false,true,true,true', 0.7777777777777778), ('false,true,false,false,true', 0.8333333333333334), ('false,true,false,true,false', 0.84), ('true', 0.9333333333333333)]
Tree #6: [('false,true,false,false,true,false', 0.5), ('false,true,false,false,true,true', 0.6666666666666666), ('false,true,false,true,true', 0.6666666666666666), ('false,true,false,true,false', 0.75), ('false,true,false,false,false,true', 0.7727272727272727), ('false,true,false,false,false,false', 0.8695652173913043), ('true', 0.9333333333333333)]
Tree #7: [('false,true,true,true,true', 0.6666666666666666), ('false,true,false,false,true', 0.6666666666666666), ('false,true,false,false,false', 0.7), ('false,true,true,true,false,true', 0.75), ('false,true,true,true,false,false', 0.8), ('false,true,true,false', 0.8333333333333334), ('true', 0.9333333333333333)]
Tree #8: [('false,true,false,true', 0.6), ('false,true,false,false,true,true', 0.6666666666666666), ('false,true,false,false,true,false,false', 0.6666666666666666), ('false,true,false,false,false,true', 0.782608695652174), ('false,true,false,false,true,false,true', 0.8), ('false,true,false,false,false,false', 0.92), ('true', 0.9333333333333333)]
Tree #9: [('true', 0.7766990291262136)]
Tree #10: [('false,true,true,true,false,false,true', 0.5), ('false,true,true,true,true', 0.6), ('false,true,true,true,false,false,false,true', 0.6666666666666666), ('false,true,false', 0.7368421052631579), ('false,true,true,false', 0.8333333333333334), ('false,true,true,true,false,false,false,false', 0.8666666666666667), ('true', 0.9333333333333333)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.791482268432845;  // std dev = 1,366, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(E, B), publication(E, F), tempadvisedby(G, F) )
%   | | | then if ( publication(E, H), inphase(H, I) )
%   | | | | then return 0.6081489350995115;  // std dev = 2,598, 36,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=27 */
%   | | | | else return 0.7581489350995123;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else if ( publication(J, B) )
%   | | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( publication(L, A) )
%   | | | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.14185106490048768;  // std dev = 5,77e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.6660633000779167;  // std dev = 1,366, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(E, A) )
%   | | | then if ( publication(F, B), publication(F, G), student(G) )
%   | | | | then return 0.21453868480667232;  // std dev = 1,319, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | | else return 0.5937513093017365;  // std dev = 0,891, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else if ( tempadvisedby(H, B), yearsinprogram(H, I), yearsinprogram(A, I) )
%   | | | | then if ( tempadvisedby(J, B), publication(K, J) )
%   | | | | | then return 0.43373862890338843;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.27071120657136516;  // std dev = 0,993, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.5850256246609654;  // std dev = 2,375, 39,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=32 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5181199435476403;  // std dev = 1,366, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, E), publication(H, G) )
%   | | | | then return 0.3764478871394907;  // std dev = 0,878, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return -0.004762364785735329;  // std dev = 0,847, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(I, B), yearsinprogram(I, J), yearsinprogram(A, J) )
%   | | | then return 0.27437020131762246;  // std dev = 1,296, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else if ( tempadvisedby(K, B), publication(L, B) )
%   | | | | then return 0.42708022653038485;  // std dev = 1,944, 24,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | | else return 0.52297814098386;  // std dev = 1,571, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | else return -0.11231637819360629;  // std dev = 4,08e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.3895295402406854;  // std dev = 1,366, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( projectmember(E, B) )
%   | | | then return 0.42834718297942936;  // std dev = 0,035, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else if ( publication(F, A) )
%   | | | | then return 0.21489960944440645;  // std dev = 0,711, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.31508294801875547;  // std dev = 2,245, 28,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else if ( publication(G, B), publication(G, H), tempadvisedby(H, I) )
%   | | | then if ( publication(G, I) )
%   | | | | then if ( publication(J, A) )
%   | | | | | then return 0.022236212225002976;  // std dev = 0,722, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.3209495526603067;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else return 0.05301854050409055;  // std dev = 0,844, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.411831129927634;  // std dev = 1,321, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return -0.10159632948783621;  // std dev = 3,65e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.29567961238434487;  // std dev = 1,366, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), tempadvisedby(E, F) )
%   | | then return 0.41977331179013844;  // std dev = 0,351, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, B), publication(G, H), tempadvisedby(I, H) )
%   | | | then if ( tempadvisedby(J, B), publication(G, K), inphase(K, L) )
%   | | | | then if ( inphase(A, L) )
%   | | | | | then return 0.2692775726389087;  // std dev = 1,231, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | else return 0.2136954728991586;  // std dev = 1,642, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | | else return 0.2946928514335412;  // std dev = 1,620, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else if ( tempadvisedby(M, B) )
%   | | | | then return 0.25079190362207515;  // std dev = 0,726, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | else return 0.051335403577972616;  // std dev = 1,314, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.23048996886792553;  // std dev = 1,366, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.2612693277923959;  // std dev = 0,059, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | | then if ( tempadvisedby(G, F), publication(H, G) )
%   | | | | then return 0.1846626821456788;  // std dev = 0,895, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return -0.08145633078318587;  // std dev = 0,757, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( tempadvisedby(I, B), yearsinprogram(I, J), yearsinprogram(A, J) )
%   | | | | then return 0.07913654213645908;  // std dev = 1,294, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | else if ( tempadvisedby(K, B), publication(L, B) )
%   | | | | | then return 0.17750003551652016;  // std dev = 1,924, 22,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | | | else return 0.25259509678263964;  // std dev = 1,503, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | else return -0.0851847513883968;  // std dev = 1,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1846947294407535;  // std dev = 1,366, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), tempadvisedby(F, E) )
%   | | then if ( publication(G, F), publication(G, E) )
%   | | | then if ( publication(H, A) )
%   | | | | then return -0.05729666396467711;  // std dev = 0,647, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(I, B) )
%   | | | | | then return 0.18099793029054514;  // std dev = 0,842, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.11337446929436697;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1863084189301385;  // std dev = 2,154, 36,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=30 */
%   | | else if ( projectmember(J, B) )
%   | | | then return 0.20771884918311287;  // std dev = 0,041, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(K, B) )
%   | | | | then return -0.02559621285909088;  // std dev = 0,775, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.07893730258611172;  // std dev = 1,355, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return -0.07877675473109175;  // std dev = 1,97e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.15155508707642035;  // std dev = 1,366, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), tempadvisedby(E, B), publication(D, E) )
%   | | then return 0.3798418120397857;  // std dev = 0,076, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(F, B), yearsinprogram(F, G), yearsinprogram(A, G) )
%   | | | then return -0.13961488530122756;  // std dev = 1,102, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else if ( publication(H, B), publication(H, I), tempadvisedby(I, J) )
%   | | | | then if ( publication(H, J), publication(K, A) )
%   | | | | | then return -0.044284539455811234;  // std dev = 0,649, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else if ( publication(H, J) )
%   | | | | | | then return 0.08951007470738288;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | else return -0.020052462157165902;  // std dev = 0,776, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(L, B), publication(M, B) )
%   | | | | | then return 0.09371006662933014;  // std dev = 1,919, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | | | | else return 0.19505041144092305;  // std dev = 1,298, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, A), tempadvisedby(D, B) )
%   | then return -0.3144611009977469;  // std dev = 0,852, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( publication(E, B), publication(E, A) )
%   | | then return 0.19347065269516497;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.15867071601517357;  // std dev = 0,056, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else if ( publication(G, B), publication(G, H), tempadvisedby(H, B) )
%   | | | | then return 0.29584216653666495;  // std dev = 0,066, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(I, B), publication(I, J), tempadvisedby(K, J) )
%   | | | | | then if ( publication(L, K), publication(L, J) )
%   | | | | | | then return -0.033426344806678915;  // std dev = 0,415, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | | | | else return 0.12318985949853335;  // std dev = 0,368, 34,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=28 */
%   | | | | | else if ( publication(M, A), student(A) )
%   | | | | | | then return 0.08200218187227534;  // std dev = 1,000, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | | else return -0.03341889618662118;  // std dev = 0,365, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return -0.06842697784420268;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.10387048886633655;  // std dev = 1,254, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, E), tempadvisedby(F, E) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then if ( projectmember(H, E) )
%   | | | | then return -0.1299210936248738;  // std dev = 0,917, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( publication(D, F) )
%   | | | | | then return 0.23846929862041852;  // std dev = 0,057, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(I, F) )
%   | | | | | | then return -0.17724988957408266;  // std dev = 0,929, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | else if ( publication(J, A) )
%   | | | | | | | then return -0.03390475879255798;  // std dev = 0,709, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | | else return 0.16310190107807584;  // std dev = 1,396, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.1369990263689277;  // std dev = 1,206, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0.050772824117618784;  // std dev = 1,550, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | else return -0.06341595602697674;  // std dev = 0,026, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
Results
   AUC ROC   = 0.96875
   AUC PR    = 0.965729
   CLL	      = -0.272416
   Precision = 0.842105 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914286


Total learning time: 7.476 seconds
Total inference time: 0.806 seconds
AUC ROC: 0.96875


Best model AUC ROC so far: 0.976563


******************************************
Best model found
******************************************
Total revision time: 32.492000000000004
Best validation AUC ROC: 0.976563


Results
   AUC ROC   = 0.975207
   AUC PR    = 0.972928
   CLL	      = -0.223136
   Precision = 0.916667 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.956522


Total inference time: 0.775 seconds
AUC ROC: 0.975207
Dataset: imdb,uwcse, Run: 1, Fold: 4, Type: transfer, Total folds for small set: 4, Time: 00:15:09
{'CLL': -0.223136, 'Recall': 1.0, 'Learning time': 32.492000000000004, 'Precision': [0.916667, 0.5], 'Mapping Results': {'Possible mappings': 1080, 'Total time': 2.807021379470825, 'Generating mappings time': 0.06865668296813965, 'Finding best mapping': 0.1358954906463623, 'Generating paths time': 2.583817720413208, 'Knowledge compiling time': 0.0186460018157959}, 'Parameter Learning Results': {'CLL': -0.463719, 'Recall': 0.393939, 'Precision': [1.0, 0.5], 'AUC ROC': 0.935721, 'F1': 0.565217, 'AUC PR': 0.927963}, 'AUC ROC': 0.975207, 'F1': 0.956522, 'AUC PR': 0.972928, 'Inference time': 0.775}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995117;  // std dev = 1,69e-07, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4295775065280837;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else if ( publication(H, B), publication(H, I), projectmember(J, I) )
%   | | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( publication(K, B), publication(K, L), tempadvisedby(M, L) )
%   | | | | | then return 0.7152917922423687;  // std dev = 0,350, 35,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   | | | | | else if ( tempadvisedby(N, B) )
%   | | | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return 0.4831489350995123;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.14185106490048768;  // std dev = 5,96e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109546;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then if ( publication(G, A) )
%   | | | then if ( tempadvisedby(E, H), publication(D, H) )
%   | | | | then return 0.13078173850246763;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.2934935387706745;  // std dev = 1,008, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else if ( inphase(A, F), tempadvisedby(E, I) )
%   | | | | then return 0.46756584707939697;  // std dev = 0,443, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then if ( inphase(A, F) )
%   | | | | | | then return 0.47392987029700206;  // std dev = 0,460, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | | | else return 0.5298180192833424;  // std dev = 0,398, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | | | else return 0.7473839334745777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6147739012861955;  // std dev = 0,343, 28,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   else return -0.12544463852839158;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then return 0.5585766366833504;  // std dev = 0,042, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.3487162602284659;  // std dev = 0,761, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(G, B), publication(G, H), projectmember(I, H) )
%   | | | | then return 0.2822552650450071;  // std dev = 0,989, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return 0.4551113092041613;  // std dev = 0,380, 28,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   | else if ( publication(J, B), publication(J, K), tempadvisedby(L, K) )
%   | | then return 0.5047135351011335;  // std dev = 0,291, 25,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.06408064417579085;  // std dev = 0,836, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(N, A) )
%   | | | | then return 0.33531481174963135;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.4186481450829647;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.1123163781936063;  // std dev = 4,08e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4200201119718816;  // std dev = 0,030, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.2692537131701422;  // std dev = 0,755, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.24235600009452446;  // std dev = 0,477, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.46920740259233884;  // std dev = 0,075, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else if ( publication(H, B), publication(H, I), tempadvisedby(J, I) )
%   | | | | then return 0.3433531291745798;  // std dev = 0,369, 38,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=31 */
%   | | | | else if ( publication(K, A) )
%   | | | | | then return 0.25734308412371115;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( tempadvisedby(L, B) )
%   | | | | | | then return 0.21781195141459767;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return 0.19366950045707632;  // std dev = 1,035, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10159632948783623;  // std dev = 3,65e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32242329792041946;  // std dev = 0,027, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.35635341395549625;  // std dev = 0,070, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then if ( publication(F, B) )
%   | | | | then if ( publication(F, E) )
%   | | | | | then return 0.4542674235835489;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(G, A) )
%   | | | | | | then return 0.2037193111610547;  // std dev = 0,752, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else if ( publication(F, H), yearsinprogram(H, I), yearsinprogram(A, I) )
%   | | | | | | | then return 0.34100340953883346;  // std dev = 0,341, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | | | | | else return 0.10533031320273052;  // std dev = 0,449, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | | else return 0.16353851656312093;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.24643441131665392;  // std dev = 0,394, 28,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   else return -0.09269127618926105;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2563466373299707;  // std dev = 0,024, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.25787163784989875;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, E), publication(H, G) )
%   | | | | then return 0.18656518361863725;  // std dev = 0,890, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return -0.18215221661429376;  // std dev = 0,814, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.32121504405903356;  // std dev = 0,861, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else if ( projectmember(J, B) )
%   | | | | then return 0.29256171430912514;  // std dev = 0,039, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( tempadvisedby(K, B), yearsinprogram(K, L), yearsinprogram(A, L) )
%   | | | | | then return -0.0015392572046500433;  // std dev = 0,444, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | | else return 0.2194002264241233;  // std dev = 0,362, 39,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=32 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2105911453722787;  // std dev = 0,021, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.22682980176082962;  // std dev = 0,048, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(E, A) )
%   | | | then if ( publication(F, B), publication(F, G), student(G) )
%   | | | | then if ( tempadvisedby(G, H), publication(F, H) )
%   | | | | | then return -0.10261022942828535;  // std dev = 0,715, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.06973375868095945;  // std dev = 1,021, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else return 0.22568367579022486;  // std dev = 0,884, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else if ( tempadvisedby(I, B) )
%   | | | | then if ( publication(J, B), publication(J, K), projectmember(L, K) )
%   | | | | | then return -0.13145303997761465;  // std dev = 0,759, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.15672418523743467;  // std dev = 0,390, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | | else return 0.17002563509177507;  // std dev = 0,338, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   else return -0.07877675473109176;  // std dev = 1,83e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1777101946617516;  // std dev = 0,018, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(D, A), publication(D, E), tempadvisedby(E, F) )
%   | | then return 0.27384515024635425;  // std dev = 0,338, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, B), publication(G, H), tempadvisedby(I, H) )
%   | | | then if ( publication(J, I), publication(J, H), publication(K, A) )
%   | | | | then return -0.07791059585091435;  // std dev = 0,716, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.14328530717233953;  // std dev = 0,353, 45,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=37 */
%   | | | else if ( projectmember(L, B) )
%   | | | | then return 0.18648910833191212;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( tempadvisedby(M, B) )
%   | | | | | then return 0.04955314123283009;  // std dev = 0,774, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( publication(N, A), publication(N, P), professor(P) )
%   | | | | | | then return -0.20465771063454272;  // std dev = 0,728, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.04856449787021148;  // std dev = 1,079, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1532110096768792;  // std dev = 0,016, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( tempadvisedby(D, B), publication(E, B), publication(E, D) )
%   | | then return 0.26754109387651415;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.16017708485584847;  // std dev = 0,056, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else if ( tempadvisedby(G, B) )
%   | | | | then if ( publication(H, B), yearsinprogram(G, I), yearsinprogram(A, I) )
%   | | | | | then return -0.09324202831733501;  // std dev = 0,888, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else if ( publication(J, A) )
%   | | | | | | then return 0.0019236222758435284;  // std dev = 0,728, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else if ( publication(K, B), publication(K, L), student(L) )
%   | | | | | | | then return 0.11580215021179097;  // std dev = 0,370, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | | | | | else return -0.06594233204509399;  // std dev = 1,086, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return 0.10615274666535486;  // std dev = 0,368, 28,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   else return -0.0684269778442027;  // std dev = 1,67e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13437283727719154;  // std dev = 0,014, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(E, F), projectmember(G, F) )
%   | | | then return -0.02069209978281795;  // std dev = 0,816, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else if ( publication(E, D) )
%   | | | | then return 0.21855019293280306;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(H, A) )
%   | | | | | then return 0.0015000781968978287;  // std dev = 0,728, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( publication(E, I), inphase(I, J), inphase(A, J) )
%   | | | | | | then return -0.11591198331233417;  // std dev = 1,057, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | | else if ( publication(E, K), inphase(K, L) )
%   | | | | | | | then return 0.17799842762623316;  // std dev = 0,291, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | | | | | else return -0.05369910068251645;  // std dev = 0,802, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.08930967120163834;  // std dev = 0,346, 37,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=29 */
%   else return -0.06419184008202625;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
Results
   AUC ROC   = 0.975666
   AUC PR    = 0.973934
   CLL	      = -0.213775
   Precision = 0.916667 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.956522


Total learning time: 15.516 seconds
Total inference time: 0.694 seconds
AUC ROC: 0.975666


Dataset: imdb,uwcse, Run: 1, Fold: 4, Type: scratch, Total folds for small set: 4, Time: 00:15:25
{'CLL': -0.213775, 'Recall': 1.0, 'Learning time': 15.516, 'Precision': [0.916667, 0.5], 'AUC ROC': 0.975666, 'F1': 0.956522, 'AUC PR': 0.973934, 'Inference time': 0.694}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995096;  // std dev = 1,07e-06, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.844195446727416;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.14185106490048757;  // std dev = 2,27e-07, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109565;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.708327532599887;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.1254446385283921;  // std dev = 0,000, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,72e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.5476019242105307;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.11231637819360649;  // std dev = 0,000, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830936;  // std dev = 4,13e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.41157346139221007;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.10159632948783631;  // std dev = 1,01e-07, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601492;  // std dev = 3,82e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.3152701839187062;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.0926912761892605;  // std dev = 2,01e-07, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694907;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.24971874777646466;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.08518475138839678;  // std dev = 1,17e-07, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253512;  // std dev = 2,76e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.20416115820758543;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.07877675473109144;  // std dev = 7,30e-08, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.1713458110344821;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.0732462257633371;  // std dev = 7,60e-08, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.14685912038882057;  // std dev = 0,117, 215,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=212 */
%   else return -0.06842697784420317;  // std dev = 0,000, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1255124269669707;  // std dev = 1,003, 408,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=382 */
%   else if ( director(A), movie(C, B), movie(C, A) )
%   | then if ( director(B) )
%   | | then return -0.8580336653618187;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06419184008202591;  // std dev = 1,32e-07, 345,000 (wgt'ed) examples reached here.  /* #neg=345 */


Predicates from source: ['workedunder(person,person).', 'director(person).', 'actor(person).', 'female(person).', 'movie(movie,person).'] 

Source structured tree: [['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.27e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [1.01e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.01e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [7.3e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [7.6e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'false': 'director(A), movie(C, B), movie(C, A)', 'false,true': 'director(B)'}, {'false,true,true': [2.11e-08, 3, 0], 'true': [1.003, 26, 382], 'false,false': [1.32e-07, 345, 0], 'false,true,false': [0.0, 8, 0]}]] 



Best mapping found: ['female(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'actor(A) -> student(A)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.27e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [1.01e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.01e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [7.3e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [7.6e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'false': 'professor(A), publication(C, B), publication(C, A)', 'false,true': 'professor(B)'}, {'false,true,true': [2.11e-08, 3, 0], 'true': [1.003, 26, 382], 'false,false': [1.32e-07, 345, 0], 'false,true,false': [0.0, 8, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '7;true;student(A).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '8;true;student(A).;false;false', '9;;advisedby(A, B) :- professor(B), student(A).;false;true', '9;false;professor(A), publication(C, B), publication(C, A).;true;false', '9;false,true;professor(B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.23314893509951226;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.202334239218108;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.17149281961528942;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.14228146899184044;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.11591746118730596;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.09305316265470494;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.07383827012230788;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.05807372983129969;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.045370205025705025;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.38743514798774403;  // std dev = 2,012, 38,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   else if ( professor(A), publication(C, B), publication(C, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.339731783190745;  // std dev = 4,21e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.417821
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.428571
   F1        = 0.6


Total learning time: 9.06 seconds
Total inference time: 0.435 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.417821
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.428571
   F1        = 0.6


Total inference time: 0.435 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 14], 'false': [3.623, 35, 21], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.16e-08, 0, 14], 'false': [3.623, 35, 21], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 14], 'false': [3.623, 35, 21], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [4.21e-08, 0, 14], 'false': [3.623, 35, 21], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 14], 'false': [3.623, 35, 21], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.11e-08, 0, 14], 'false': [3.623, 35, 21], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 14], 'false': [3.623, 35, 21], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 14], 'false': [3.623, 35, 21], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 14], 'false': [3.623, 35, 21], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'false': 'professor(A), publication(C, B), publication(C, A)'}, {'true': [2.012, 3, 35], 'false,false': [4.21e-08, 32, 0], 'false,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '9;;advisedby(A, B) :- professor(B), student(A).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false', 0), ('false', 0.625)]
Tree #2: [('true,false', 0), ('false', 0.625)]
Tree #3: [('true,false', 0), ('false', 0.625)]
Tree #4: [('true,false', 0), ('false', 0.625)]
Tree #5: [('true,false', 0), ('false', 0.625)]
Tree #6: [('true,false', 0), ('false', 0.625)]
Tree #7: [('true,false', 0), ('false', 0.625)]
Tree #8: [('true,false', 0), ('false', 0.625)]
Tree #9: [('true,false', 0), ('false', 0.625)]
Tree #10: [('false,true', 0), ('true', 0.9210526315789473)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return 0.23314893509951226;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return 0.202334239218108;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return 0.17149281961528942;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return 0.14228146899184044;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return 0.11591746118730596;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return 0.09305316265470494;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return 0.07383827012230788;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return 0.05807372983129969;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return 0.045370205025705025;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.38743514798774403;  // std dev = 2,012, 38,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   else return -0.3397317831907449;  // std dev = 5,16e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.417821
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.428571
   F1        = 0.6


Total learning time: 8.892 seconds
Total inference time: 0.424 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 18.811
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 0.953125
   AUC PR    = 0.939105
   CLL	      = -0.499767
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.25
   F1        = 0.4


Total inference time: 0.483 seconds
AUC ROC: 0.953125
Dataset: imdb,uwcse, Run: 1, Fold: 5, Type: transfer, Total folds for small set: 1, Time: 00:15:58
{'CLL': -0.499767, 'Recall': 0.25, 'Learning time': 18.811, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 1080, 'Total time': 2.7452847957611084, 'Generating mappings time': 0.06951045989990234, 'Finding best mapping': 0.15772271156311035, 'Generating paths time': 2.5043938159942627, 'Knowledge compiling time': 0.01365041732788086}, 'Parameter Learning Results': {'CLL': -0.499767, 'Recall': 0.25, 'Precision': [1.0, 0.5], 'AUC ROC': 0.953125, 'F1': 0.4, 'AUC PR': 0.939105}, 'AUC ROC': 0.953125, 'F1': 0.4, 'AUC PR': 0.939105, 'Inference time': 0.483}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( projectmember(D, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( projectmember(D, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( projectmember(D, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( projectmember(D, B) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2061374073445397;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B), publication(E, D) )
%   | then if ( publication(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2108646352141492;  // std dev = 0,602, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( publication(F, B), publication(F, G), tempadvisedby(G, H) )
%   | | then return 0.38889519282494905;  // std dev = 0,305, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else if ( publication(J, A), publication(J, K), tempadvisedby(L, K) )
%   | | | | then return -0.005038091182520003;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.3775313018808158;  // std dev = 0,311, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.09269127618926098;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B), publication(E, D) )
%   | then if ( publication(E, B) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16599414159511525;  // std dev = 0,606, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( publication(F, B), publication(F, G), tempadvisedby(G, H) )
%   | | then return 0.30793566209886536;  // std dev = 0,293, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else if ( publication(J, A), publication(J, K), tempadvisedby(L, K) )
%   | | | | then return -0.003911102545339144;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.2992263828093726;  // std dev = 0,300, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, D), tempadvisedby(D, E) )
%   | then return 0.25703688006365066;  // std dev = 0,259, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.22294286311255607;  // std dev = 0,065, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return -0.08833938313814926;  // std dev = 0,722, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( tempadvisedby(I, B) )
%   | | | | then return 0.20733954179009884;  // std dev = 0,018, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | else if ( publication(J, B) )
%   | | | | | then return 0.19165777843610102;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.17857756931733382;  // std dev = 0,708, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, D), tempadvisedby(D, E) )
%   | then return 0.21353317769107916;  // std dev = 0,237, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.18677365307100424;  // std dev = 0,057, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.008660208165727112;  // std dev = 1,032, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.17036485636425677;  // std dev = 0,026, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), inphase(C, D), inphase(A, D) )
%   | then return 0.01059024927576023;  // std dev = 0,483, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, B), publication(F, A) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.1575362349925295;  // std dev = 0,056, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.19260768838745745;  // std dev = 0,634, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.1314316800223646;  // std dev = 0,707, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1466541447759791;  // std dev = 0,022, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B), publication(E, D) )
%   | then if ( publication(E, B) )
%   | | then return 0.12631955872176218;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.06092764580866752;  // std dev = 0,516, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( tempadvisedby(F, B) )
%   | | then return 0.13469956921240758;  // std dev = 0,032, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( publication(G, B), publication(G, H), tempadvisedby(H, I) )
%   | | | then return 0.17646357442982868;  // std dev = 0,182, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(J, A), publication(J, K), tempadvisedby(L, K) )
%   | | | | then return -0.06117956292112037;  // std dev = 0,797, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.1828850747481187;  // std dev = 0,315, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.06419184008202623;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
Results
   AUC ROC   = 0.953125
   AUC PR    = 0.944304
   CLL	      = -0.226303
   Precision = 0.888889 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.941176


Total learning time: 7.694 seconds
Total inference time: 0.562 seconds
AUC ROC: 0.953125


Dataset: imdb,uwcse, Run: 1, Fold: 5, Type: scratch, Total folds for small set: 1, Time: 00:16:06
{'CLL': -0.226303, 'Recall': 1.0, 'Learning time': 7.694, 'Precision': [0.888889, 0.5], 'AUC ROC': 0.953125, 'F1': 0.941176, 'AUC PR': 0.944304, 'Inference time': 0.562}


Best mapping found: ['female(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'actor(A) -> student(A)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.27e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [1.01e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.01e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [7.3e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [7.6e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'false': 'professor(A), publication(C, B), publication(C, A)', 'false,true': 'professor(B)'}, {'false,true,true': [2.11e-08, 3, 0], 'true': [1.003, 26, 382], 'false,false': [1.32e-07, 345, 0], 'false,true,false': [0.0, 8, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '7;true;student(A).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '8;true;student(A).;false;false', '9;;advisedby(A, B) :- professor(B), student(A).;false;true', '9;false;professor(A), publication(C, B), publication(C, A).;true;false', '9;false,true;professor(B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.25540920907211484;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.2213913743843542;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1869737875445665;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.15424626010909206;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1247610637645837;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.09933942509518877;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.0781533126145024;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.06093771811547498;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.04720308762011939;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.33957442204117405;  // std dev = 2,676, 52,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=44 */
%   else if ( professor(A), publication(C, B), publication(C, A) )
%   | then if ( professor(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.36087122983727365;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.36087122983727377;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.484956
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.25
   F1        = 0.4


Total learning time: 6.733 seconds
Total inference time: 0.48 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.484956
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.25
   F1        = 0.4


Total inference time: 0.48 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 15], 'false': [4.181, 44, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.16e-08, 0, 15], 'false': [4.181, 44, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 15], 'false': [4.181, 44, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [4.71e-08, 0, 15], 'false': [4.181, 44, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 15], 'false': [4.181, 44, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.36e-08, 0, 15], 'false': [4.181, 44, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 15], 'false': [4.181, 44, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 15], 'false': [4.181, 44, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 15], 'false': [4.181, 44, 29], 'true,false': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'false': 'professor(A), publication(C, B), publication(C, A)', 'false,true': 'professor(B)'}, {'false,true,true': [0.0, 0, 0], 'true': [2.676, 8, 44], 'false,false': [0.0, 33, 0], 'false,true,false': [0.0, 3, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;false', '9;;advisedby(A, B) :- professor(B), student(A).;false;true', '9;false;professor(A), publication(C, B), publication(C, A).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false', 0), ('false', 0.6027397260273972)]
Tree #2: [('true,false', 0), ('false', 0.6027397260273972)]
Tree #3: [('true,false', 0), ('false', 0.6027397260273972)]
Tree #4: [('true,false', 0), ('false', 0.6027397260273972)]
Tree #5: [('true,false', 0), ('false', 0.6027397260273972)]
Tree #6: [('true,false', 0), ('false', 0.6027397260273972)]
Tree #7: [('true,false', 0), ('false', 0.6027397260273972)]
Tree #8: [('true,false', 0), ('false', 0.6027397260273972)]
Tree #9: [('true,false', 0), ('false', 0.6027397260273972)]
Tree #10: [('false,true,true', 0), ('true', 0.8461538461538461)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return 0.25540920907211484;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return 0.2213913743843542;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return 0.1869737875445665;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return 0.15424626010909206;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return 0.1247610637645837;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return 0.09933942509518877;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return 0.0781533126145024;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return 0.06093771811547498;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return 0.04720308762011939;  // std dev = 4,181, 73,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.33957442204117405;  // std dev = 2,676, 52,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=44 */
%   else if ( professor(A), publication(C, B), publication(C, A) )
%   | then return -0.36087122983727365;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.36087122983727377;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.484956
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.25
   F1        = 0.4


Total learning time: 3.314 seconds
Total inference time: 0.458 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 10.985
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 0.953125
   AUC PR    = 0.939105
   CLL	      = -0.500705
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.25
   F1        = 0.4


Total inference time: 0.511 seconds
AUC ROC: 0.953125
Dataset: imdb,uwcse, Run: 1, Fold: 5, Type: transfer, Total folds for small set: 2, Time: 00:16:21
{'CLL': -0.500705, 'Recall': 0.25, 'Learning time': 10.985, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 1080, 'Total time': 2.6893725395202637, 'Generating mappings time': 0.06965970993041992, 'Finding best mapping': 0.135145902633667, 'Generating paths time': 2.4700067043304443, 'Knowledge compiling time': 0.014552831649780273}, 'Parameter Learning Results': {'CLL': -0.500705, 'Recall': 0.25, 'Precision': [1.0, 0.5], 'AUC ROC': 0.953125, 'F1': 0.4, 'AUC PR': 0.939105}, 'AUC ROC': 0.953125, 'F1': 0.4, 'AUC PR': 0.939105, 'Inference time': 0.511}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then return 0.8025933795439567;  // std dev = 0,229, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( publication(E, B), publication(E, F), student(F) )
%   | | then if ( tempadvisedby(G, B), inphase(A, H), inphase(F, H) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(F, I), publication(E, I) )
%   | | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | else if ( publication(K, A) )
%   | | | | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6081489350995123;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.1418510649004877;  // std dev = 2,79e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A), publication(D, B) )
%   | then return 0.7305483838299363;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | then if ( projectmember(G, B) )
%   | | | then return 0.7305483838299364;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( hasposition(B, H), hasposition(F, H) )
%   | | | | then return 0.08823076943445991;  // std dev = 0,832, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then if ( publication(J, B), inphase(I, K), inphase(A, K) )
%   | | | | then return 0.4321665062071514;  // std dev = 0,783, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( publication(L, B) )
%   | | | | | then return 0.5951187009602392;  // std dev = 0,345, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | | else return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6176838956115925;  // std dev = 0,340, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.57862920335595;  // std dev = 0,178, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( publication(D, A), publication(D, E), tempadvisedby(F, E) )
%   | | then if ( publication(D, F) )
%   | | | then return 0.5903841967126324;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.05277144557487223;  // std dev = 0,828, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then if ( publication(H, B), inphase(G, I), inphase(A, I) )
%   | | | | then return 0.3462610983107925;  // std dev = 0,776, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( publication(J, B) )
%   | | | | | then return 0.4656980968462236;  // std dev = 0,343, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | | else return 0.41257245288266;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5009273512840935;  // std dev = 0,330, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.4226825249416938;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.45205846537706745;  // std dev = 0,072, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(F, A), publication(F, G), tempadvisedby(H, G) )
%   | | then if ( publication(F, H) )
%   | | | then return 0.44513406724935933;  // std dev = 0,088, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.04181924282098233;  // std dev = 0,829, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then if ( publication(J, B), inphase(I, K), inphase(A, K) )
%   | | | | then return 0.26693563476097487;  // std dev = 0,771, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( publication(L, B) )
%   | | | | | then return 0.35122466772692945;  // std dev = 0,343, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | | else return 0.3151786576185065;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.37993923064034407;  // std dev = 0,329, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.10159632948783634;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3345908857702568;  // std dev = 0,049, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( publication(D, B), tempadvisedby(E, B), publication(D, E) )
%   | | then return -0.1033488757729057;  // std dev = 0,608, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.31243679115114487;  // std dev = 0,339, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else if ( publication(H, B), publication(H, I), student(I) )
%   | | | | then if ( tempadvisedby(I, J) )
%   | | | | | then return 0.2508802183878513;  // std dev = 0,884, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.11000691734225043;  // std dev = 0,948, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else if ( projectmember(K, B) )
%   | | | | | then return 0.1847654618546713;  // std dev = 0,794, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else if ( publication(L, A) )
%   | | | | | | then return 0.24369353253338244;  // std dev = 0,722, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else return 0.4098259157854711;  // std dev = 0,051, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.09269127618926097;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2653233979833789;  // std dev = 0,045, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( publication(D, B), publication(D, E), tempadvisedby(E, F) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return -0.0801520632398488;  // std dev = 0,609, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18993207439621568;  // std dev = 0,885, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.1432554666413837;  // std dev = 0,798, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else if ( publication(I, A), publication(I, J), tempadvisedby(K, J) )
%   | | | | then return 0.0016638646572178322;  // std dev = 0,772, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( publication(L, B), publication(L, M), student(M) )
%   | | | | | then if ( tempadvisedby(N, B) )
%   | | | | | | then return 0.23828888679166116;  // std dev = 0,339, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | | | | else return 0.16847207789285568;  // std dev = 0,867, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.3156886334669256;  // std dev = 0,043, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.08518475138839682;  // std dev = 2,11e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.21736791341494746;  // std dev = 0,041, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( publication(D, B), publication(D, E), tempadvisedby(E, B) )
%   | | then return -0.062396081797346126;  // std dev = 0,611, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(F, A) )
%   | | | then if ( tempadvisedby(G, B) )
%   | | | | then return 0.2503622997245043;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.15691794597215739;  // std dev = 0,866, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else if ( tempadvisedby(H, B), inphase(H, I), inphase(A, I) )
%   | | | | then return 0.3889397456956812;  // std dev = 0,021, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then if ( publication(K, B) )
%   | | | | | | then return 0.12064447053931482;  // std dev = 0,901, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | else return 0.011726584602173462;  // std dev = 0,742, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.1496137555035687;  // std dev = 0,340, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.07877675473109175;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.18297121050605078;  // std dev = 0,037, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( publication(D, B), publication(D, E), student(E) )
%   | | then if ( publication(F, A), publication(F, G), tempadvisedby(H, G) )
%   | | | then return -0.07619166311940452;  // std dev = 0,435, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( tempadvisedby(E, I) )
%   | | | | then return 0.06038657614689985;  // std dev = 1,040, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else if ( tempadvisedby(J, B) )
%   | | | | | then return 0.14593688117021197;  // std dev = 0,330, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | | | else return 0.09322341679984339;  // std dev = 0,867, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( projectmember(K, B) )
%   | | | then return 0.06772380461157428;  // std dev = 0,749, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else if ( publication(L, A) )
%   | | | | then return 0.13341921077117305;  // std dev = 0,715, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.23311869034572485;  // std dev = 0,049, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15740260061547667;  // std dev = 0,034, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( publication(D, B), publication(D, E), student(E) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return -0.05410645413190123;  // std dev = 0,604, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( tempadvisedby(F, B) )
%   | | | | then return 0.11813550111525813;  // std dev = 0,330, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | | else if ( tempadvisedby(E, G) )
%   | | | | | then return 0.1052779346735476;  // std dev = 0,891, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.004461189812124777;  // std dev = 0,919, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.05507180156840412;  // std dev = 0,753, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else if ( publication(I, A) )
%   | | | | then return 0.1043694615889521;  // std dev = 0,716, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.19450804836453206;  // std dev = 0,043, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06842697784420276;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13778815564924526;  // std dev = 0,031, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( publication(D, B), publication(D, E), student(E) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return -0.04249956247831452;  // std dev = 0,606, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( tempadvisedby(F, B) )
%   | | | | then return 0.09709224968381988;  // std dev = 0,330, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | | else if ( publication(G, A) )
%   | | | | | then return 0.10863516270200635;  // std dev = 0,464, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( tempadvisedby(E, H) )
%   | | | | | | then return 0.036429262175867616;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | else return -0.012325363005311582;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( projectmember(I, B) )
%   | | | then return 0.045069998281269744;  // std dev = 0,756, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.14312854031567712;  // std dev = 0,222, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.06419184008202622;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
Results
   AUC ROC   = 0.933594
   AUC PR    = 0.910716
   CLL	      = -0.25074
   Precision = 0.888889 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.941176


Total learning time: 11.925 seconds
Total inference time: 0.805 seconds
AUC ROC: 0.933594


Dataset: imdb,uwcse, Run: 1, Fold: 5, Type: scratch, Total folds for small set: 2, Time: 00:16:34
{'CLL': -0.25074, 'Recall': 1.0, 'Learning time': 11.925, 'Precision': [0.888889, 0.5], 'AUC ROC': 0.933594, 'F1': 0.941176, 'AUC PR': 0.910716, 'Inference time': 0.805}


Best mapping found: ['female(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'actor(A) -> student(A)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.27e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [1.01e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.01e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [7.3e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [7.6e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'false': 'professor(A), publication(C, B), publication(C, A)', 'false,true': 'professor(B)'}, {'false,true,true': [2.11e-08, 3, 0], 'true': [1.003, 26, 382], 'false,false': [1.32e-07, 345, 0], 'false,true,false': [0.0, 8, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '7;true;student(A).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '8;true;student(A).;false;false', '9;;advisedby(A, B) :- professor(B), student(A).;false;true', '9;false;professor(A), publication(C, B), publication(C, A).;true;false', '9;false,true;professor(B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8236661764788221;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.2565229188393494;  // std dev = 5,430, 123,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=49 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.691897402794752;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.22234360586347873;  // std dev = 5,430, 123,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=49 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5361507757067951;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.1877442092008863;  // std dev = 5,430, 123,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=49 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.4029188243794005;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.15483781740413383;  // std dev = 5,430, 123,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=49 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.3074634631599114;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.1251946813019028;  // std dev = 5,430, 123,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=49 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.24197584993123575;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.09964481035871126;  // std dev = 5,430, 123,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=49 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.19626877650663035;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.07836096125252333;  // std dev = 5,430, 123,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=49 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.16327920417583955;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.06107428298937739;  // std dev = 5,430, 123,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=49 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.13864498775228534;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.0472897434829801;  // std dev = 5,430, 123,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=49 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.36182577191982473;  // std dev = 3,335, 87,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=77 */
%   else if ( professor(A), publication(C, B), publication(C, A) )
%   | then if ( professor(B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.36193235623319553;  // std dev = 9,42e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
Results
   AUC ROC   = 0.94
   AUC PR    = 0.932669
   CLL	      = -0.456928
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.571429


Total learning time: 31.333 seconds
Total inference time: 0.62 seconds
AUC ROC: 0.94


Results in test set
   AUC ROC   = 0.94
   AUC PR    = 0.932669
   CLL	      = -0.456928
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.571429


Total inference time: 0.62 seconds
AUC ROC: 0.94
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.983, 1, 28], 'false': [5.43, 74, 49], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.983, 1, 28], 'false': [5.43, 74, 49], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.983, 1, 28], 'false': [5.43, 74, 49], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.983, 1, 28], 'false': [5.43, 74, 49], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.983, 1, 28], 'false': [5.43, 74, 49], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.983, 1, 28], 'false': [5.43, 74, 49], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.983, 1, 28], 'false': [5.43, 74, 49], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.983, 1, 28], 'false': [5.43, 74, 49], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.983, 1, 28], 'false': [5.43, 74, 49], 'true,false': [0.0, 2, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'false': 'professor(A), publication(C, B), publication(C, A)', 'false,true': 'professor(B)'}, {'false,true,true': [0.0, 2, 0], 'true': [3.335, 10, 77], 'false,false': [9.42e-08, 65, 0], 'false,true,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '7;true;student(A).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '8;true;student(A).;false;false', '9;;advisedby(A, B) :- professor(B), student(A).;false;true', '9;false;professor(A), publication(C, B), publication(C, A).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0.6016260162601627), ('true,true', 0.9655172413793104)]
Tree #2: [('false', 0.6016260162601627), ('true,true', 0.9655172413793104)]
Tree #3: [('false', 0.6016260162601627), ('true,true', 0.9655172413793104)]
Tree #4: [('false', 0.6016260162601627), ('true,true', 0.9655172413793104)]
Tree #5: [('false', 0.6016260162601627), ('true,true', 0.9655172413793104)]
Tree #6: [('false', 0.6016260162601627), ('true,true', 0.9655172413793104)]
Tree #7: [('false', 0.6016260162601627), ('true,true', 0.9655172413793104)]
Tree #8: [('false', 0.6016260162601627), ('true,true', 0.9655172413793104)]
Tree #9: [('false', 0.6016260162601627), ('true,true', 0.9655172413793104)]
Tree #10: [('false,true,false', 0), ('true', 0.8850574712643678)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8236661764788221;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( publication(I, B), tempadvisedby(J, E), publication(K, J) )
%   | | | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.6914822684328454;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(L, B), publication(L, M), student(M) )
%   | | | then return 0.7581489350995116;  // std dev = 0,300, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.14185106490048768;  // std dev = 5,96e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.6391656581932588;  // std dev = 0,267, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(E, B), tempadvisedby(F, B) )
%   | | then return 0.22341535274090657;  // std dev = 1,040, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.40587367902817756;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( tempadvisedby(I, B) )
%   | | | | then return 0.7326022994197634;  // std dev = 0,045, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | | else if ( publication(J, A), publication(J, K), tempadvisedby(L, K) )
%   | | | | | then if ( publication(M, L), publication(N, B) )
%   | | | | | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.5018526675222027;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else if ( publication(P, A) )
%   | | | | | | then return 0.736844364031556;  // std dev = 0,023, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.6373910504065636;  // std dev = 0,292, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5490197142351654;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.21371341432003102;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.552122149119534;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | | then return 0.0628195055429871;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( publication(I, B), publication(I, J), student(J) )
%   | | | | | then return 0.500748889321827;  // std dev = 0,791, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.17400196359843023;  // std dev = 0,900, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(K, B), publication(L, K) )
%   | | | then return 0.32051024466556505;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5332872317245545;  // std dev = 0,218, 39,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | else return -0.11231637819360629;  // std dev = 4,34e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.4127515551001161;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.1799924235715593;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B), publication(F, G), tempadvisedby(H, G) )
%   | | | then if ( publication(I, H), publication(I, J), publication(F, J) )
%   | | | | then return 0.3775338281123985;  // std dev = 0,730, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.016686936039827415;  // std dev = 0,836, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else if ( tempadvisedby(K, B) )
%   | | | | then return 0.44891064213200116;  // std dev = 0,117, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.3107889578301082;  // std dev = 0,866, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(L, B), inphase(L, M), inphase(A, M) )
%   | | | then return 0.26611629797136527;  // std dev = 0,769, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.40683684347851873;  // std dev = 0,228, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | else return -0.10159632948783623;  // std dev = 3,65e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.28398221126080625;  // std dev = 0,211, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B), tempadvisedby(G, B) )
%   | | | then return 0.018482604162585785;  // std dev = 0,831, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then return 0.343479983309682;  // std dev = 0,110, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( tempadvisedby(I, E), publication(J, I), publication(K, B) )
%   | | | | | then return 0.048693145677059145;  // std dev = 0,741, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.2958576106412211;  // std dev = 0,860, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(L, B), inphase(L, M), inphase(A, M) )
%   | | | then return 0.20170117637785748;  // std dev = 0,771, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else if ( tempadvisedby(N, B) )
%   | | | | then return 0.3698190751699106;  // std dev = 0,055, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | | else return 0.2722943716703593;  // std dev = 0,279, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.22386078178659766;  // std dev = 0,208, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.2431909554482864;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | | then return 0.015197063395522223;  // std dev = 0,830, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( publication(I, B), publication(I, J), student(J) )
%   | | | | | then return 0.3098263028921807;  // std dev = 0,709, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.009684712660344284;  // std dev = 0,827, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(K, B), publication(L, K) )
%   | | | then return 0.07846453909533053;  // std dev = 0,755, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( tempadvisedby(M, B) )
%   | | | | then return 0.2869649133653538;  // std dev = 0,150, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | | else return 0.2123261270275868;  // std dev = 0,279, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else return -0.0851847513883968;  // std dev = 1,67e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.18066295553502681;  // std dev = 0,207, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), inphase(D, E), inphase(A, E) )
%   | | then return 0.07312879686064237;  // std dev = 0,303, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.21961229650191694;  // std dev = 0,194, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else if ( publication(G, B), publication(G, H), tempadvisedby(I, H) )
%   | | | | then if ( publication(J, A), publication(J, K), tempadvisedby(L, K) )
%   | | | | | then return 0.018131383440819396;  // std dev = 0,640, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else if ( publication(M, I), publication(G, N), publication(M, N) )
%   | | | | | | then if ( student(N) )
%   | | | | | | | then return 0.26497197551684426;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.09515329770555477;  // std dev = 0,910, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | else return 0.25859510074747;  // std dev = 0,076, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | | else return 0.038812797334249506;  // std dev = 1,216, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.07877675473109175;  // std dev = 2,24e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.14878247425771793;  // std dev = 0,208, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.06330964733246229;  // std dev = 0,786, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.1866944853281031;  // std dev = 0,166, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else if ( publication(G, B), publication(G, H), tempadvisedby(I, H) )
%   | | | | then if ( publication(J, A), publication(J, K), professor(K) )
%   | | | | | then return 0.06481281557516833;  // std dev = 0,679, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else if ( publication(L, I), publication(L, M), publication(G, M) )
%   | | | | | | then if ( student(M) )
%   | | | | | | | then return 0.21665677360709357;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.07718820520008396;  // std dev = 0,910, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | else return 0.2073026596474183;  // std dev = 0,035, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | | else return 0.030395916077610236;  // std dev = 1,215, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.1536954329585656;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.2975268259778837;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B), publication(F, B) )
%   | | then return 0.009098344126483082;  // std dev = 0,836, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.1534046787183942;  // std dev = 0,166, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else if ( publication(H, B), publication(H, I), tempadvisedby(J, I) )
%   | | | | then if ( publication(K, A), publication(H, L), inphase(L, M) )
%   | | | | | then return 0.24893702781864482;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(H, J) )
%   | | | | | | then return 0.18214033400068408;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.09565596954054184;  // std dev = 0,262, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | | else return 0.023858217400142306;  // std dev = 1,215, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.06842697784420268;  // std dev = 1,97e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.10859531059756855;  // std dev = 2,291, 87,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=77 */
%   else if ( professor(A), publication(C, B), publication(C, A) )
%   | then return -0.2392802350259392;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.06419184008202622;  // std dev = 7,45e-09, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
Results
   AUC ROC   = 0.995556
   AUC PR    = 0.995694
   CLL	      = -0.207783
   Precision = 0.933333 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.933333


Total learning time: 22.105 seconds
Total inference time: 0.886 seconds
AUC ROC: 0.995556


Best model AUC ROC so far: 0.995556


Refining iteration 2
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '0;true;student(A).;false;false', '0;false,true,true,false;tempadvisedby(G, B), publication(H, B).;false;false', '0;false,true,true;projectmember(F, B).;false;true', '0;false,true,false;publication(L, B), publication(L, M), student(M).;false;false', '0;false;professor(B), student(A).;true;false', '0;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '1;false,true,false,false;tempadvisedby(I, B).;false;true', '1;false,true,false,false,false;publication(J, A), publication(J, K), tempadvisedby(L, K).;true;true', '1;false,true,false,false,false,false;publication(P, A).;false;false', '1;false,true,false,false,false,true;publication(M, L), publication(N, B).;false;false', '1;false,true,false;tempadvisedby(G, B), publication(H, G).;false;true', '1;false;professor(B), student(A).;true;false', '1;false,true;publication(D, A), publication(E, B), tempadvisedby(F, B).;true;true', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '2;true;student(A).;false;false', '2;false,true,true,false;tempadvisedby(G, B), publication(H, B).;false;false', '2;false,true,true;projectmember(F, B).;false;true', '2;false,true,false;tempadvisedby(K, B), publication(L, K).;false;false', '2;false;professor(B), student(A).;true;false', '2;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '3;true;student(A).;false;false', '3;false,true,false;tempadvisedby(L, B), inphase(L, M), inphase(A, M).;false;false', '3;false,true,true,false;tempadvisedby(K, B).;false;true', '3;false,true,true;publication(F, B), publication(F, G), tempadvisedby(H, G).;true;true', '3;false,true,true,true;publication(I, H), publication(I, J), publication(F, J).;false;false', '3;false;professor(B), student(A).;true;false', '3;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '4;false,true,true;publication(F, B), tempadvisedby(G, B).;false;true', '4;false,true,false,false;tempadvisedby(N, B).;false;false', '4;false,true,true,false;tempadvisedby(H, B).;false;false', '4;false,true,false;tempadvisedby(L, B), inphase(L, M), inphase(A, M).;false;true', '4;false;professor(B), student(A).;true;false', '4;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '5;false,true,true;projectmember(F, B).;false;true', '5;false,true,false,false;tempadvisedby(M, B).;false;false', '5;false,true,true,false;tempadvisedby(G, B), publication(H, B).;false;false', '5;false,true,false;tempadvisedby(K, B), publication(L, K).;false;true', '5;false;professor(B), student(A).;true;false', '5;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '6;false,true,false,false;publication(G, B), publication(G, H), tempadvisedby(I, H).;true;false', '6;false,true,false,false,true;publication(J, A), publication(J, K), tempadvisedby(L, K).;true;true', '6;false,true,false,false,true,false;publication(M, I), publication(G, N), publication(M, N).;true;false', '6;false,true,false;tempadvisedby(F, B).;false;true', '6;false;professor(B), student(A).;true;false', '6;false,true;tempadvisedby(D, B), inphase(D, E), inphase(A, E).;false;true', '6;false,true,false,false,true,false,true;student(N).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '7;false,true,false,false;publication(G, B), publication(G, H), tempadvisedby(I, H).;true;false', '7;false,true,false,false,true;publication(J, A), publication(J, K), professor(K).;false;true', '7;false,true,false,false,true,false;publication(L, I), publication(L, M), publication(G, M).;true;false', '7;false,true,false;tempadvisedby(F, B).;false;true', '7;false;professor(B), student(A).;true;false', '7;false,true;tempadvisedby(D, B), publication(E, D).;true;true', '7;false,true,false,false,true,false,true;student(M).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '8;true;student(A).;false;false', '8;false,true,false,false,true;publication(K, A), publication(H, L), inphase(L, M).;false;true', '8;false,true,false,false,true,false;publication(H, J).;false;false', '8;false,true,false,false;publication(H, B), publication(H, I), tempadvisedby(J, I).;true;false', '8;false,true,false;tempadvisedby(G, B).;false;true', '8;false;professor(B), student(A).;true;false', '8;false,true;publication(D, A), tempadvisedby(E, B), publication(F, B).;true;true', '9;;advisedby(A, B) :- professor(B), student(A).;true;true', '9;false;professor(A), publication(C, B), publication(C, A).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,true,false,false,true', 0.6666666666666666), ('false,true,true,false,true', 0.75), ('false,true,true,false,false,false', 0.8333333333333334), ('false,true,false,true', 0.9), ('true,true', 0.9655172413793104)]
Tree #2: [('false,true,true', 0.6), ('false,true,false,true', 0.6666666666666666), ('false,true,false,false,false,true,true', 0.6666666666666666), ('false,true,false,false,false,true,false', 0.75), ('true', 0.9032258064516129), ('false,true,false,false,false,false,false', 0.9047619047619048)]
Tree #3: [('false,true,true,false,false,false', 0.5), ('false,true,false,true', 0.6666666666666666), ('false,true,true,false,true', 0.75), ('false,true,true,false,false,true', 0.8), ('false,true,false,false', 0.9487179487179487), ('true,true', 0.9655172413793104)]
Tree #4: [('false,true,true,false,false', 0.6666666666666666), ('false,true,true,true,false', 0.6666666666666666), ('false,true,true,true,true', 0.6666666666666666), ('false,true,false,true', 0.8), ('false,true,false,false', 0.9459459459459459), ('true,true', 0.9655172413793104)]
Tree #5: [('false,true,true,false,false,true', 0.6666666666666666), ('false,true,true,true', 0.75), ('false,true,false,true', 0.8), ('false,true,true,false,false,false', 0.8), ('true', 0.9032258064516129), ('false,true,false,false,false', 0.9130434782608695)]
Tree #6: [('false,true,true,false,false,false', 0.5), ('false,true,false,true', 0.6666666666666666), ('false,true,true,false,true', 0.75), ('false,true,true,false,false,true', 0.8), ('true', 0.9032258064516129), ('false,true,false,false,false', 0.9130434782608695)]
Tree #7: [('false,true,false,false,true,true', 0.5), ('false,true,false,false,false', 0.6666666666666666), ('false,true,true', 0.7142857142857143), ('false,true,false,false,true,false,true,false', 0.8333333333333334), ('false,true,false,true', 0.9), ('true', 0.9032258064516129)]
Tree #8: [('false,true,true', 0.5), ('false,true,false,false,true,true', 0.6), ('false,true,false,false,false', 0.6666666666666666), ('false,true,false,false,true,false,true,false', 0.8333333333333334), ('true', 0.9032258064516129), ('false,true,false,true', 0.9130434782608695)]
Tree #9: [('false,true,true', 0.6), ('false,true,false,false,false', 0.6666666666666666), ('false,true,false,false,true,false,false', 0.8421052631578947), ('false,true,false,true', 0.9545454545454546), ('true,true', 0.9655172413793104)]
Tree #10: [('true', 0.8850574712643678)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8236661764788221;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.5248156017661789;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( publication(I, B), publication(I, J), student(J) )
%   | | | then return 0.7581489350995116;  // std dev = 1,643, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.14185106490048768;  // std dev = 5,96e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.6391656581932588;  // std dev = 1,488, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(E, B), tempadvisedby(F, B) )
%   | | then return 0.22341535274090657;  // std dev = 1,040, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.40587367902817756;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( tempadvisedby(I, B) )
%   | | | | then return 0.7341694716330841;  // std dev = 0,064, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | | else if ( publication(J, A), publication(J, K), tempadvisedby(L, K) )
%   | | | | | then if ( publication(M, L), publication(N, B) )
%   | | | | | | then return 0.11496227290862865;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.5316289395752953;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else if ( publication(P, A) )
%   | | | | | | then return 0.7467697880492535;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.6373910504065636;  // std dev = 1,336, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5490197142351654;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.21371341432003102;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.5517345820529829;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | | then return 0.0628195055429871;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.3618191515591329;  // std dev = 1,339, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.32051024466556505;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5330143573516543;  // std dev = 1,363, 39,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | else return -0.11231637819360629;  // std dev = 4,34e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.4127515551001161;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.1799924235715593;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B), publication(F, G), tempadvisedby(H, G) )
%   | | | then if ( publication(I, H), publication(I, J), publication(F, J) )
%   | | | | then return 0.40014632589145577;  // std dev = 0,746, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.020209549689391443;  // std dev = 0,956, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else if ( tempadvisedby(K, B) )
%   | | | | then return 0.44728883329052294;  // std dev = 0,112, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.29273879320382623;  // std dev = 0,858, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(L, B), inphase(L, M), inphase(A, M) )
%   | | | then return 0.2658615442709434;  // std dev = 0,769, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.40665466695285124;  // std dev = 1,384, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | else return -0.10159632948783623;  // std dev = 3,65e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.28398221126080625;  // std dev = 1,174, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B), tempadvisedby(G, B) )
%   | | | then return 0.01599529589252436;  // std dev = 0,829, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then return 0.34225429668275154;  // std dev = 0,105, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.20752237831376202;  // std dev = 1,275, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( tempadvisedby(I, B), inphase(I, J), inphase(A, J) )
%   | | | then return 0.2015193013665646;  // std dev = 0,771, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else if ( tempadvisedby(K, B) )
%   | | | | then return 0.3696373600184826;  // std dev = 0,208, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | | else return 0.27220710794166475;  // std dev = 1,338, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.22386078178659766;  // std dev = 1,159, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.2434980606562659;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | | then return 0.01313458198285411;  // std dev = 0,828, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.1790569762513494;  // std dev = 1,284, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.07855825213912708;  // std dev = 0,755, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( tempadvisedby(K, B) )
%   | | | | then return 0.28680295619575846;  // std dev = 0,150, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | | else return 0.21226717389489713;  // std dev = 1,339, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else return -0.0851847513883968;  // std dev = 1,67e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.18066295553502681;  // std dev = 1,154, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), inphase(D, E), inphase(A, E) )
%   | | then return 0.07311805378660205;  // std dev = 0,802, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.21712890806120483;  // std dev = 0,863, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else if ( publication(G, B), publication(G, H), tempadvisedby(I, H) )
%   | | | | then if ( publication(J, A), publication(J, K), tempadvisedby(L, K) )
%   | | | | | then return 0.021798436616709854;  // std dev = 0,853, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else if ( publication(M, I), publication(G, N), publication(M, N) )
%   | | | | | | then if ( student(N) )
%   | | | | | | | then return 0.26508909607205045;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.09496328699553817;  // std dev = 0,909, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | else return 0.26853166390285016;  // std dev = 0,184, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | | else return 0.023210449265288036;  // std dev = 1,204, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.07877675473109175;  // std dev = 2,24e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.14878247425771793;  // std dev = 1,156, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.06383235629193959;  // std dev = 0,788, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.18510599158626562;  // std dev = 0,791, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else if ( publication(G, B), publication(G, H), tempadvisedby(I, H) )
%   | | | | then if ( publication(J, A), publication(J, K), professor(K) )
%   | | | | | then return 0.08830086201140763;  // std dev = 0,911, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else if ( publication(L, I), publication(L, M), publication(G, M) )
%   | | | | | | then if ( student(M) )
%   | | | | | | | then return 0.21673895270406607;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.07704283917742721;  // std dev = 0,909, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | else return 0.2056386006121217;  // std dev = 0,035, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | | else return 0.018181092262488225;  // std dev = 1,204, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.1536954329585656;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.2975268259778837;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B), publication(F, B) )
%   | | then return 0.008296576363383702;  // std dev = 0,835, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.15222346141172802;  // std dev = 0,774, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else if ( publication(H, B), publication(H, I), tempadvisedby(J, I) )
%   | | | | then if ( publication(K, A), publication(H, L), inphase(L, M) )
%   | | | | | then return 0.3143370279151849;  // std dev = 0,124, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(H, J) )
%   | | | | | | then return 0.18220022092432164;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.08872941664489914;  // std dev = 1,256, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | | else return 0.01426324834666239;  // std dev = 1,203, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.06842697784420268;  // std dev = 1,97e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(D, B), publication(E, A) )
%   | | then return -0.08418561809197267;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(F, A), publication(F, B) )
%   | | | then return 0.16581438190802733;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.07565828775030634;  // std dev = 0,780, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(G, B) )
%   | | then return 0.148142679591492;  // std dev = 0,132, 35,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else if ( publication(H, A), publication(I, B) )
%   | | | then if ( publication(H, B) )
%   | | | | then return 0.16581438190802733;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else return 0.11942114376208275;  // std dev = 0,350, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else if ( publication(J, B), publication(J, K), tempadvisedby(L, K) )
%   | | | | then return 0.12184039864716535;  // std dev = 0,221, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | | else return -0.08972645945334967;  // std dev = 1,069, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06941835933408334;  // std dev = 0,030, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
Results
   AUC ROC   = 0.995556
   AUC PR    = 0.995694
   CLL	      = -0.20143
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total learning time: 5.597 seconds
Total inference time: 0.888 seconds
AUC ROC: 0.995556


Best model AUC ROC so far: 0.995556


******************************************
Best model found
******************************************
Total revision time: 61.429
Best validation AUC ROC: 0.995556


Results
   AUC ROC   = 0.910156
   AUC PR    = 0.855421
   CLL	      = -0.234711
   Precision = 0.888889 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.941176


Total inference time: 0.717 seconds
AUC ROC: 0.910156
Dataset: imdb,uwcse, Run: 1, Fold: 5, Type: transfer, Total folds for small set: 3, Time: 00:17:41
{'CLL': -0.234711, 'Recall': 1.0, 'Learning time': 61.429, 'Precision': [0.888889, 0.5], 'Mapping Results': {'Possible mappings': 1080, 'Total time': 2.8635730743408203, 'Generating mappings time': 0.07053422927856445, 'Finding best mapping': 0.13224315643310547, 'Generating paths time': 2.6409201622009277, 'Knowledge compiling time': 0.01986837387084961}, 'Parameter Learning Results': {'CLL': -0.498179, 'Recall': 0.25, 'Precision': [1.0, 0.5], 'AUC ROC': 0.953125, 'F1': 0.4, 'AUC PR': 0.939105}, 'AUC ROC': 0.910156, 'F1': 0.941176, 'AUC PR': 0.855421, 'Inference time': 0.717}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8236661764788221;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( publication(I, B), tempadvisedby(J, E), publication(K, J) )
%   | | | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.6914822684328454;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(L, B), publication(M, L) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( tempadvisedby(N, B) )
%   | | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | | else return 0.7711924133603816;  // std dev = 0,282, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else return -0.14185106490048768;  // std dev = 5,96e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.691897402794752;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( publication(I, B), tempadvisedby(J, E), publication(K, J) )
%   | | | | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.585186000855536;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(L, B), publication(L, M), student(M) )
%   | | | then if ( tempadvisedby(N, B), publication(P, N) )
%   | | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.6549611404272639;  // std dev = 0,260, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0.7309475749594146;  // std dev = 0,028, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.12544463852839158;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, D), tempadvisedby(D, E) )
%   | then if ( publication(F, B), tempadvisedby(G, B) )
%   | | then return 0.13588824904782926;  // std dev = 0,889, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6187150549302712;  // std dev = 0,219, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(H, B) )
%   | | then return 0.5276182416070966;  // std dev = 0,209, 43,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | else if ( publication(I, B), publication(I, J), tempadvisedby(K, J) )
%   | | | then if ( publication(L, A), publication(I, M), inphase(M, N) )
%   | | | | then return 0.5876760963288439;  // std dev = 0,069, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | else if ( publication(P, A), publication(P, Q), professor(Q) )
%   | | | | | then return 0.08181610824596172;  // std dev = 0,669, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else if ( publication(R, K), publication(R, S), tempadvisedby(T, S) )
%   | | | | | | then return 0.4792248883665735;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | | | else return 0.5831536915869006;  // std dev = 0,029, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2611188707959087;  // std dev = 1,129, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360629;  // std dev = 4,34e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4148590410234428;  // std dev = 0,168, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( publication(D, A), tempadvisedby(E, B), publication(F, B) )
%   | | then return 0.09710500937129073;  // std dev = 0,931, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.40706276657508417;  // std dev = 0,187, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else if ( publication(H, B), publication(H, I), tempadvisedby(J, I) )
%   | | | | then if ( publication(K, A), publication(K, L), tempadvisedby(M, L) )
%   | | | | | then return 0.17102797030021416;  // std dev = 0,756, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else if ( publication(H, J) )
%   | | | | | | then return 0.47367974131879736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else if ( publication(N, J), publication(N, P), publication(H, P) )
%   | | | | | | | then return 0.3025240089454226;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | | else return 0.44365010553544143;  // std dev = 0,054, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | | else return 0.22863494762042016;  // std dev = 1,191, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.10159632948783623;  // std dev = 3,49e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(D, A) )
%   | | then return 0.10047966109449273;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(E, A), publication(E, B) )
%   | | | then return 0.3411798419628502;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.036220868733649464;  // std dev = 0,892, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(F, B) )
%   | | then return 0.31912454024951864;  // std dev = 0,153, 35,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else if ( publication(G, B), publication(G, H), tempadvisedby(I, H) )
%   | | | then if ( publication(G, I) )
%   | | | | then return 0.35914933441574726;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.28202621370202574;  // std dev = 0,238, 27,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | | else if ( publication(J, A) )
%   | | | | then return 0.2661400443023034;  // std dev = 0,892, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.1251339978942174;  // std dev = 0,801, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926105;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, D), tempadvisedby(D, E) )
%   | then if ( publication(F, B), tempadvisedby(G, B) )
%   | | then return -0.008046229653524084;  // std dev = 0,867, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3295053691941686;  // std dev = 0,291, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(H, B) )
%   | | then if ( publication(I, H) )
%   | | | then return 0.18860947596713465;  // std dev = 0,281, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.2689160428473762;  // std dev = 0,131, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else if ( publication(J, A), publication(J, K), tempadvisedby(L, K) )
%   | | | then if ( publication(M, L), publication(N, B) )
%   | | | | then return -0.10208895910513109;  // std dev = 0,454, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.18870408427103325;  // std dev = 0,867, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( hasposition(B, P), hasposition(Q, P), tempadvisedby(R, Q) )
%   | | | | then return 0.25188083708949516;  // std dev = 0,189, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | | else return 0.1426089871811321;  // std dev = 0,819, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2154991406841922;  // std dev = 0,159, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return -0.09747755007330944;  // std dev = 0,806, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then return 0.20953234844574722;  // std dev = 0,069, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( tempadvisedby(I, E), publication(J, B), publication(K, I) )
%   | | | | | then return -0.011509319885607217;  // std dev = 0,626, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.16675547658393913;  // std dev = 0,873, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(L, B), publication(L, M), student(M) )
%   | | | then if ( tempadvisedby(N, B), inphase(N, P), inphase(A, P) )
%   | | | | then return 0.023272446040232875;  // std dev = 0,699, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.18677669250162765;  // std dev = 0,249, 26,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return 0.24871541442479828;  // std dev = 0,063, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.07877675473109175;  // std dev = 2,11e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C), publication(D, A) )
%   | then return 0.026924917229848837;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | then if ( publication(G, A), publication(G, B) )
%   | | | then return 0.19728833002722856;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.035619763949245445;  // std dev = 0,842, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.17492755354188658;  // std dev = 0,141, 35,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else if ( publication(I, B), publication(J, A) )
%   | | | | then return 0.18242446752536104;  // std dev = 0,203, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | | else if ( publication(K, B), publication(K, L), tempadvisedby(M, L) )
%   | | | | | then if ( publication(N, M), publication(N, P), publication(K, P) )
%   | | | | | | then return 0.10333117711202704;  // std dev = 0,325, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | | | | else return 0.1947428425320881;  // std dev = 0,038, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | | | else return -0.052951564558427935;  // std dev = 1,074, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(D, A) )
%   | | then return 0.020743103894947084;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(E, A), publication(E, B) )
%   | | | then return 0.16789530738567837;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.027414218184332498;  // std dev = 0,842, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(F, B) )
%   | | then return 0.14818871518864676;  // std dev = 0,142, 35,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else if ( publication(G, B), publication(G, A) )
%   | | | then return 0.17870460209804487;  // std dev = 0,061, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | | then if ( tempadvisedby(J, I), publication(K, B), publication(L, J) )
%   | | | | | then return -0.048890213172286846;  // std dev = 0,620, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.11242316333410188;  // std dev = 0,843, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else return 0.11968144806134523;  // std dev = 0,259, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else return -0.0684269778442027;  // std dev = 1,97e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1332028362117096;  // std dev = 0,157, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.1208209692554082;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | | then return -0.12803826175140515;  // std dev = 0,783, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( publication(I, B), publication(I, J), student(J) )
%   | | | | | then return 0.18741663871998768;  // std dev = 0,579, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return -0.10672218275572377;  // std dev = 0,787, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(K, B) )
%   | | | then if ( tempadvisedby(L, B) )
%   | | | | then return 0.13920713931136153;  // std dev = 0,200, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | | else return 0.08076219671604516;  // std dev = 0,263, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.20533443835155527;  // std dev = 0,201, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06419184008202625;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
Results
   AUC ROC   = 0.949219
   AUC PR    = 0.93957
   CLL	      = -0.230189
   Precision = 0.888889 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.941176


Total learning time: 15.981 seconds
Total inference time: 0.691 seconds
AUC ROC: 0.949219


Dataset: imdb,uwcse, Run: 1, Fold: 5, Type: scratch, Total folds for small set: 3, Time: 00:17:58
{'CLL': -0.230189, 'Recall': 1.0, 'Learning time': 15.981, 'Precision': [0.888889, 0.5], 'AUC ROC': 0.949219, 'F1': 0.941176, 'AUC PR': 0.93957, 'Inference time': 0.691}


Best mapping found: ['female(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)', 'movie(A,B) -> publication(A,B)'] 

Tranferred structured tree: [['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.27e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [1.01e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.01e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.17e-07, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [7.3e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [7.6e-08, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 379, 0], 'true,false': [0.117, 3, 212]}], ['advisedby(A, B)', {'': 'professor(B)', 'false': 'professor(A), publication(C, B), publication(C, A)', 'false,true': 'professor(B)'}, {'false,true,true': [2.11e-08, 3, 0], 'true': [1.003, 26, 382], 'false,false': [1.32e-07, 345, 0], 'false,true,false': [0.0, 8, 0]}]] 

Transferred target predicate: advisedby 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '7;true;student(A).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;false', '8;true;student(A).;false;false', '9;;advisedby(A, B) :- professor(B).;false;true', '9;false;professor(A), publication(C, B), publication(C, A).;true;false', '9;false,true;professor(B).;false;false']
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.8581489350995115;  // std dev = 2,60e-07, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.24276431971489698;  // std dev = 6,076, 156,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=60 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.7194734122109548;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.21057171779917283;  // std dev = 6,076, 156,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=60 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.5553664367462843;  // std dev = 1,12e-07, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.17819907632636578;  // std dev = 6,076, 156,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=60 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.1474828092189568;  // std dev = 6,076, 156,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=60 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.3207118471601495;  // std dev = 2,98e-08, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.11977923661567548;  // std dev = 6,076, 156,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=60 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.09581200856283965;  // std dev = 6,076, 156,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=60 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.20975771563253542;  // std dev = 5,58e-08, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.07574183438476967;  // std dev = 6,076, 156,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=60 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.1770964977452775;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.05934362736267824;  // std dev = 6,076, 156,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=60 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then return 0.1527438580936709;  // std dev = 3,65e-08, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.046186917900704234;  // std dev = 6,076, 156,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=60 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.2865220582043901;  // std dev = 4,365, 123,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=97 */
%   else if ( professor(A), publication(C, B), publication(C, A) )
%   | then if ( professor(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.3488453542479338;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.3488453542479337;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
Results
   AUC ROC   = 0.900277
   AUC PR    = 0.89398
   CLL	      = -0.491631
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.368421
   F1        = 0.538462


Total learning time: 7.177 seconds
Total inference time: 0.665 seconds
AUC ROC: 0.900277


Results in test set
   AUC ROC   = 0.900277
   AUC PR    = 0.89398
   CLL	      = -0.491631
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.368421
   F1        = 0.538462


Total inference time: 0.665 seconds
AUC ROC: 0.900277
Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.6e-07, 0, 37], 'false': [6.076, 96, 60], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 37], 'false': [6.076, 96, 60], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [1.12e-07, 0, 37], 'false': [6.076, 96, 60], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 37], 'false': [6.076, 96, 60], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [2.98e-08, 0, 37], 'false': [6.076, 96, 60], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 37], 'false': [6.076, 96, 60], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [5.58e-08, 0, 37], 'false': [6.076, 96, 60], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [0.0, 0, 37], 'false': [6.076, 96, 60], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, A), publication(C, B)', 'true': 'student(A)'}, {'true,true': [3.65e-08, 0, 37], 'false': [6.076, 96, 60], 'true,false': [0.0, 1, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'false': 'professor(A), publication(C, B), publication(C, A)', 'false,true': 'professor(B)'}, {'false,true,true': [0.0, 0, 0], 'true': [4.365, 26, 97], 'false,false': [0.0, 69, 0], 'false,true,false': [0.0, 2, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '0;true;student(A).;false;false', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '1;true;student(A).;false;false', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '2;true;student(A).;false;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '3;true;student(A).;false;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '4;true;student(A).;false;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '5;true;student(A).;false;false', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '6;true;student(A).;false;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '7;true;student(A).;false;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;true;true', '8;true;student(A).;false;false', '9;;advisedby(A, B) :- professor(B).;false;true', '9;false;professor(A), publication(C, B), publication(C, A).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false', 0.6153846153846154)]
Tree #2: [('false', 0.6153846153846154)]
Tree #3: [('false', 0.6153846153846154)]
Tree #4: [('false', 0.6153846153846154)]
Tree #5: [('false', 0.6153846153846154)]
Tree #6: [('false', 0.6153846153846154)]
Tree #7: [('false', 0.6153846153846154)]
Tree #8: [('false', 0.6153846153846154)]
Tree #9: [('false', 0.6153846153846154)]
Tree #10: [('false,true,true', 0), ('true', 0.7886178861788617)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.8318331456258272;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B) )
%   | | | then if ( publication(F, E) )
%   | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( tempadvisedby(G, B) )
%   | | | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | else if ( hasposition(B, H), hasposition(E, H) )
%   | | | | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.7561081187729816;  // std dev = 0,303, 49,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=44 */
%   | | | else return 0.4581489350995123;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return -0.14185106490048766;  // std dev = 7,15e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.6984381727630617;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B) )
%   | | | then if ( publication(F, E) )
%   | | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( tempadvisedby(G, B) )
%   | | | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | else if ( hasposition(B, H), hasposition(E, H) )
%   | | | | | | then return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.5136932961448196;  // std dev = 0,419, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.7081112783961749;  // std dev = 0,188, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5407105060107323;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B) )
%   | | | then if ( tempadvisedby(G, B), publication(H, G) )
%   | | | | then return -0.1603131137312157;  // std dev = 0,166, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else if ( publication(F, I), tempadvisedby(J, I) )
%   | | | | | then if ( tempadvisedby(K, E), publication(L, J) )
%   | | | | | | then return 0.18488645042518362;  // std dev = 0,933, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | | else return 0.4961474293898829;  // std dev = 0,748, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.028395850970106946;  // std dev = 0,844, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.5076182358194495;  // std dev = 0,297, 49,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=44 */
%   | | | else return 0.2789139405729108;  // std dev = 0,485, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return -0.11231637819360625;  // std dev = 5,58e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.4063502849983706;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( projectmember(E, B), publication(F, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(G, A), publication(H, D) )
%   | | | | then return -0.14084012191050774;  // std dev = 0,151, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else if ( publication(I, B), yearsinprogram(D, J), yearsinprogram(A, J) )
%   | | | | | then return 0.5056448474718382;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(K, A) )
%   | | | | | | then return 0.4029335535107162;  // std dev = 0,653, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | else if ( projectmember(L, B) )
%   | | | | | | | then return -0.03270653108506246;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | | else return 0.28104268204501043;  // std dev = 0,426, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else return 0.360972863089815;  // std dev = 0,304, 36,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=29 */
%   | else return -0.10159632948783617;  // std dev = 5,37e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.31054121853503325;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( projectmember(E, B), publication(F, A) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( projectmember(G, B) )
%   | | | | then return -0.025150606271296543;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( publication(H, A), publication(I, D) )
%   | | | | | then return -0.12533851508127306;  // std dev = 0,138, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | else if ( publication(J, A) )
%   | | | | | | then return 0.31072131891090077;  // std dev = 0,624, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | else if ( publication(K, B), publication(K, L), student(L) )
%   | | | | | | | then return 0.24653087633327175;  // std dev = 0,383, 22,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | | | | | else return 0.16786315373386265;  // std dev = 1,166, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.27847182977600515;  // std dev = 0,299, 36,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=29 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.24501655032086328;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B), tempadvisedby(G, E) )
%   | | | then if ( publication(F, E) )
%   | | | | then return 0.2535394799440026;  // std dev = 0,583, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( publication(D, G) )
%   | | | | | then return 0.08066863961602731;  // std dev = 0,672, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return -0.14730982097920745;  // std dev = 0,317, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.2192479712285908;  // std dev = 0,214, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then if ( projectmember(I, B) )
%   | | | | then return -0.01938745682277117;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.18994925584340727;  // std dev = 0,388, 31,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else return 0.28709002119547583;  // std dev = 0,179, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return -0.0851847513883968;  // std dev = 1,83e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1993602402456245;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B), yearsinprogram(D, F), yearsinprogram(A, F) )
%   | | | then return 0.28505068808177225;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(G, B), inphase(D, H), inphase(A, H) )
%   | | | | then return -0.02084356850302666;  // std dev = 0,820, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else if ( publication(I, D), publication(J, A) )
%   | | | | | then return -0.1340174564053961;  // std dev = 0,165, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else if ( publication(K, A) )
%   | | | | | | then return 0.21084388633646356;  // std dev = 0,180, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | | | else if ( publication(L, B), publication(L, M), tempadvisedby(M, N) )
%   | | | | | | | then return 0.3329345006881268;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.08036140545670875;  // std dev = 0,445, 22,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else return 0.17266065965168154;  // std dev = 0,282, 36,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=29 */
%   | else return -0.07877675473109168;  // std dev = 3,80e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.16643254232429347;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B), publication(F, A) )
%   | | | then return 0.041128290343019534;  // std dev = 0,231, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.260036571059448;  // std dev = 0,069, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(H, A) )
%   | | | | | then return 0.18315335810001945;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else if ( projectmember(I, B) )
%   | | | | | | then return -0.03343010326138355;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else if ( publication(J, B) )
%   | | | | | | | then return 0.0739075969466374;  // std dev = 0,420, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | | | | | else return 0.12427550954612547;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.13856595534248872;  // std dev = 0,283, 36,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=29 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.14185002224845342;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B) )
%   | | | then if ( publication(F, E) )
%   | | | | then return 0.1571724965273857;  // std dev = 0,500, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( tempadvisedby(G, B) )
%   | | | | | then return -0.1314800939071146;  // std dev = 0,219, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | else if ( hasposition(B, H), hasposition(E, H) )
%   | | | | | | then return -0.165718680106543;  // std dev = 0,854, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | | else return 0.009427277308851484;  // std dev = 0,876, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16225734398904174;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.08861879307549592;  // std dev = 0,393, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.17170092243298882;  // std dev = 0,182, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return -0.06842697784420268;  // std dev = 2,98e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.0842060341374381;  // std dev = 3,091, 123,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=97 */
%   else if ( professor(A), publication(C, B), publication(C, A) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
Results
   AUC ROC   = 0.975069
   AUC PR    = 0.97224
   CLL	      = -0.24312
   Precision = 0.904762 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.95


Total learning time: 18.833 seconds
Total inference time: 0.97 seconds
AUC ROC: 0.975069


Best model AUC ROC so far: 0.975069


Refining iteration 2
********************************
Candidate for revision
['0;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '0;false,true,true;publication(F, B).;true;false', '0;false,true,true,true,false;tempadvisedby(G, B).;false;false', '0;false,true,false;publication(I, B).;false;false', '0;false,true,true,true;publication(F, E).;false;true', '0;false;professor(B), student(A).;true;false', '0;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '1;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '1;false,true,true;publication(F, B).;true;false', '1;false,true,true,true,false;tempadvisedby(G, B).;false;false', '1;false,true,false;tempadvisedby(I, B).;false;false', '1;false,true,true,true;publication(F, E).;false;true', '1;false;professor(B), student(A).;true;false', '1;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '2;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '2;false,true,true;publication(F, B).;true;false', '2;false,true,true,true,false,true;tempadvisedby(K, E), publication(L, J).;false;false', '2;false,true,true,true,false;publication(F, I), tempadvisedby(J, I).;true;false', '2;false,true,true,true;tempadvisedby(G, B), publication(H, G).;false;true', '2;false;professor(B), student(A).;true;false', '2;false,true;publication(D, A), publication(D, E), professor(E).;true;false', '3;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '3;false,true,true;projectmember(E, B), publication(F, A).;false;true', '3;false,true,true,false,false;publication(I, B), yearsinprogram(D, J), yearsinprogram(A, J).;false;true', '3;false,true,true,false;publication(G, A), publication(H, D).;false;true', '3;false;professor(B), student(A).;true;false', '3;false,true,true,false,false,false;publication(K, A).;false;false', '3;false,true;tempadvisedby(D, B).;true;false', '4;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '4;false,true,true;projectmember(E, B), publication(F, A).;false;true', '4;false,true,true,false,false;publication(H, A), publication(I, D).;false;true', '4;false,true,true,false;projectmember(G, B).;true;true', '4;false;professor(B), student(A).;true;false', '4;false,true,true,false,false,false;publication(J, A).;false;true', '4;false,true,true,false,false,false,false;publication(K, B), publication(K, L), student(L).;false;false', '4;false,true;tempadvisedby(D, B).;true;false', '5;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '5;false,true,true;publication(F, B), tempadvisedby(G, E).;true;false', '5;false,true,false;tempadvisedby(H, B).;true;false', '5;false,true,false,true;projectmember(I, B).;false;false', '5;false,true,true,true;publication(F, E).;false;false', '5;false;professor(B), student(A).;true;false', '5;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '6;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '6;false,true,true;publication(E, B), yearsinprogram(D, F), yearsinprogram(A, F).;false;true', '6;false,true,true,false,false;publication(I, D), publication(J, A).;false;true', '6;false,true,true,false;publication(G, B), inphase(D, H), inphase(A, H).;true;true', '6;false;professor(B), student(A).;true;false', '6;false,true,true,false,false,false;publication(K, A).;false;true', '6;false,true,true,false,false,false,false;publication(L, B), publication(L, M), tempadvisedby(M, N).;false;false', '6;false,true;tempadvisedby(D, B).;true;false', '7;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '7;false,true,true;publication(E, B), publication(F, A).;true;true', '7;false,true,true,false,false;publication(H, A).;false;true', '7;false,true,true,false;publication(G, D).;false;true', '7;false;professor(B), student(A).;true;false', '7;false,true,true,false,false,false;projectmember(I, B).;false;true', '7;false,true,true,false,false,false,false;publication(J, B).;false;false', '7;false,true;tempadvisedby(D, B).;true;false', '8;;advisedby(A, B) :- professor(B), publication(C, A), publication(C, B).;false;true', '8;false,true,true;publication(F, B).;true;false', '8;false,true,true,true,false;tempadvisedby(G, B).;false;false', '8;false,true,false;tempadvisedby(I, B).;false;false', '8;false,true,true,true;publication(F, E).;false;true', '8;false;professor(B), student(A).;true;false', '8;false,true;publication(D, A), publication(D, E), professor(E).;true;true', '9;;advisedby(A, B) :- professor(B).;true;true', '9;false;professor(A), publication(C, B), publication(C, A).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,true,true,false,false,false', 0.5), ('false,true,false,false', 0.6), ('false,true,true,true,true', 0.6666666666666666), ('false,true,true,true,false,false,true', 0.8), ('false,true,false,true', 0.8979591836734694), ('true', 0.9736842105263158)]
Tree #2: [('false,true,true,true,false,false,false', 0.5), ('false,true,true,true,true', 0.6666666666666666), ('false,true,false,true', 0.7647058823529411), ('false,true,true,true,false,false,true', 0.8), ('false,true,false,false', 0.96), ('true', 0.9736842105263158)]
Tree #3: [('false,true,false,false', 0.6), ('false,true,true,true,false,true,true', 0.6), ('false,true,true,true,false,true,false', 0.6666666666666666), ('false,true,true,true,false,false', 0.75), ('false,true,false,true', 0.8979591836734694), ('true', 0.9736842105263158)]
Tree #4: [('false,true,true,false,false,false,false,true', 0.6666666666666666), ('false,true,true,false,false,false,false,false', 0.76), ('false,true,false', 0.8055555555555556), ('false,true,true,false,false,false,true', 0.8333333333333334), ('true', 0.9736842105263158)]
Tree #5: [('false,true,true,false,true', 0.6666666666666666), ('false,true,true,false,false,false,false,false', 0.6666666666666666), ('false,true,false', 0.8055555555555556), ('false,true,true,false,false,false,false,true', 0.8181818181818182), ('false,true,true,false,false,false,true', 0.8333333333333334), ('true', 0.9736842105263158)]
Tree #6: [('false,true,true,true,false,true', 0.6666666666666666), ('false,true,false,true,true', 0.6666666666666666), ('false,true,true,true,true', 0.6666666666666666), ('false,true,false,true,false', 0.8064516129032258), ('false,true,true,false', 0.8571428571428571), ('false,true,true,true,false,false', 0.875), ('false,true,false,false', 0.96), ('true', 0.9736842105263158)]
Tree #7: [('false,true,true,false,true', 0.5), ('false,true,true,false,false,false,false,false', 0.6818181818181818), ('false,true,false', 0.8055555555555556), ('false,true,true,false,false,false,true', 0.8888888888888888), ('true', 0.9736842105263158)]
Tree #8: [('false,true,true,true', 0.5555555555555556), ('false,true,true,false,false,false,true', 0.6666666666666666), ('false,true,true,false,false,false,false,false', 0.6666666666666666), ('false,true,true,false,false,false,false,true', 0.7619047619047619), ('false,true,false', 0.8055555555555556), ('true', 0.9736842105263158)]
Tree #9: [('false,true,true,true,false,false,false', 0.5), ('false,true,true,true,true', 0.6666666666666666), ('false,true,false,true', 0.7647058823529411), ('false,true,true,true,false,false,true', 0.8), ('false,true,false,false', 0.96), ('true', 0.9736842105263158)]
Tree #10: [('true', 0.7886178861788617)]


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.8318331456258272;  // std dev = 0,987, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B) )
%   | | | then if ( publication(F, E) )
%   | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( tempadvisedby(G, B) )
%   | | | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | else return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.7561081187729816;  // std dev = 2,119, 49,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=44 */
%   | | | else return 0.4581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return -0.14185106490048766;  // std dev = 7,15e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.6984381727630617;  // std dev = 0,987, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B) )
%   | | | then if ( publication(F, E) )
%   | | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( tempadvisedby(G, B) )
%   | | | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | else return 0.16653882456488167;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.5136932961448196;  // std dev = 2,442, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.7081112783961749;  // std dev = 0,938, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.5407105060107323;  // std dev = 0,987, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B) )
%   | | | then if ( tempadvisedby(G, B), publication(H, G) )
%   | | | | then return -0.1603131137312157;  // std dev = 0,166, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else if ( publication(F, I), tempadvisedby(J, I) )
%   | | | | | then if ( tempadvisedby(K, E), publication(L, J) )
%   | | | | | | then return 0.16353521755172137;  // std dev = 0,972, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | | else return 0.5017351469236188;  // std dev = 0,752, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.058760909482231456;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.46885479594715496;  // std dev = 2,665, 59,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=50 */
%   | else return -0.11231637819360625;  // std dev = 5,58e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.4063502849983706;  // std dev = 0,987, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( projectmember(E, B), publication(F, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(G, A), publication(H, D) )
%   | | | | then return -0.14084012191050774;  // std dev = 0,151, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else if ( publication(I, B), yearsinprogram(D, J), yearsinprogram(A, J) )
%   | | | | | then return 0.51533113991805;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( publication(K, A) )
%   | | | | | | then return 0.4084450221253011;  // std dev = 0,660, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | else return 0.24537554414242996;  // std dev = 2,356, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | else return 0.3618697314536329;  // std dev = 1,870, 36,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=29 */
%   | else return -0.10159632948783617;  // std dev = 5,37e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.31054121853503325;  // std dev = 0,987, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( projectmember(E, B), publication(F, A) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( projectmember(G, B) )
%   | | | | then return -0.13821557615875493;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( publication(H, A), publication(I, D) )
%   | | | | | then return -0.12533851508127306;  // std dev = 0,138, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | else if ( publication(J, A) )
%   | | | | | | then return 0.3148566334042117;  // std dev = 0,631, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | else if ( publication(K, B), publication(K, L), student(L) )
%   | | | | | | | then return 0.26334306499273885;  // std dev = 1,792, 22,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | | | | | else return 0.15795294768146348;  // std dev = 1,158, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.27861353260944866;  // std dev = 1,840, 36,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=29 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.24501655032086328;  // std dev = 0,987, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B), tempadvisedby(G, E) )
%   | | | then if ( publication(F, E) )
%   | | | | then return 0.25620643184160535;  // std dev = 0,586, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return -0.08726384572910184;  // std dev = 1,175, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.22138603674919546;  // std dev = 0,654, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then if ( projectmember(I, B) )
%   | | | | then return -0.10396276972848743;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.19766221753388546;  // std dev = 2,158, 31,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else return 0.28652318076153604;  // std dev = 0,928, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return -0.0851847513883968;  // std dev = 1,83e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.1993602402456245;  // std dev = 0,987, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B), yearsinprogram(D, F), yearsinprogram(A, F) )
%   | | | then return 0.28597927746262686;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(G, B), inphase(D, H), inphase(A, H) )
%   | | | | then return -0.009510382336406276;  // std dev = 0,820, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else if ( publication(I, D), publication(J, A) )
%   | | | | | then return -0.1367444143085436;  // std dev = 0,163, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else if ( publication(K, A) )
%   | | | | | | then return 0.21055920968575442;  // std dev = 0,558, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | | | else if ( publication(L, B), publication(L, M), tempadvisedby(M, N) )
%   | | | | | | | then return 0.34410879944903056;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.07555123933038663;  // std dev = 2,099, 22,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else return 0.17231068560473367;  // std dev = 1,758, 36,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=29 */
%   | else return -0.07877675473109168;  // std dev = 3,80e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.16643254232429347;  // std dev = 0,987, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B), publication(F, A) )
%   | | | then return 0.04141328678258623;  // std dev = 0,235, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else if ( publication(G, D) )
%   | | | | then return 0.26523725139183196;  // std dev = 0,079, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(H, A) )
%   | | | | | then return 0.18251275275389445;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else if ( projectmember(I, B) )
%   | | | | | | then return -0.09698449627597942;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else if ( publication(J, B) )
%   | | | | | | | then return 0.08533446712356656;  // std dev = 1,925, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | | | | | else return 0.08801544423066791;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1380336944382269;  // std dev = 1,764, 36,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=29 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A), publication(C, B) )
%   then return 0.14185002224845342;  // std dev = 0,987, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B) )
%   | | | then if ( publication(F, E) )
%   | | | | then return 0.15928470684690368;  // std dev = 0,503, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( tempadvisedby(G, B) )
%   | | | | | then return -0.1345137211211067;  // std dev = 0,234, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | else return -0.08867156293476772;  // std dev = 1,319, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.16180255940413404;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.08820077461807452;  // std dev = 2,297, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.17093250650181818;  // std dev = 0,939, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return -0.06842697784420268;  // std dev = 2,98e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( student(A) )
%   | then if ( publication(C, B), publication(C, D), tempadvisedby(E, D) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.09945198948230635;  // std dev = 0,270, 60,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=50 */
%   | | | else return 0.14600182750769783;  // std dev = 0,175, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | else if ( publication(G, A), publication(G, H), tempadvisedby(H, I) )
%   | | | then return 0.26401694294901956;  // std dev = 0,443, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(J, B) )
%   | | | | then return -0.24531846250304157;  // std dev = 0,460, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( projectmember(K, B) )
%   | | | | | then return -0.09483254711997702;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else if ( publication(L, A) )
%   | | | | | | then return 0.17353452061582353;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return -0.03187085340851189;  // std dev = 1,170, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.19528565231487516;  // std dev = 0,718, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202625;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
Results
   AUC ROC   = 0.972299
   AUC PR    = 0.969556
   CLL	      = -0.242072
   Precision = 0.904762 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.95


Total learning time: 20.884 seconds
Total inference time: 0.812 seconds
AUC ROC: 0.972299


Best model AUC ROC so far: 0.975069


******************************************
Best model found
******************************************
Total revision time: 49.340999999999994
Best validation AUC ROC: 0.975069


Results
   AUC ROC   = 0.964844
   AUC PR    = 0.961434
   CLL	      = -0.273208
   Precision = 0.875 at threshold = 0.5
   Recall    = 0.875
   F1        = 0.875


Total inference time: 0.672 seconds
AUC ROC: 0.964844
Dataset: imdb,uwcse, Run: 1, Fold: 5, Type: transfer, Total folds for small set: 4, Time: 00:18:53
{'CLL': -0.273208, 'Recall': 0.875, 'Learning time': 49.340999999999994, 'Precision': [0.875, 0.5], 'Mapping Results': {'Possible mappings': 1080, 'Total time': 3.1481997966766357, 'Generating mappings time': 0.07827544212341309, 'Finding best mapping': 0.14134478569030762, 'Generating paths time': 2.907012701034546, 'Knowledge compiling time': 0.021558523178100586}, 'Parameter Learning Results': {'CLL': -0.52983, 'Recall': 0.25, 'Precision': [1.0, 0.5], 'AUC ROC': 0.90625, 'F1': 0.4, 'AUC PR': 0.888354}, 'AUC ROC': 0.964844, 'F1': 0.875, 'AUC PR': 0.961434, 'Inference time': 0.672}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995115;  // std dev = 2,60e-07, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, A), publication(G, H), professor(H) )
%   | | | then if ( publication(I, B) )
%   | | | | then if ( publication(I, J), tempadvisedby(K, J) )
%   | | | | | then if ( tempadvisedby(L, H), publication(M, K) )
%   | | | | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6945125714631485;  // std dev = 0,370, 55,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=46 */
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.7194734122109548;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B) )
%   | | | then if ( publication(F, E) )
%   | | | | then return 0.5073408901466068;  // std dev = 0,775, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( tempadvisedby(G, B) )
%   | | | | | then return -0.1486762440024697;  // std dev = 0,080, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | else if ( hasposition(B, H), hasposition(E, H) )
%   | | | | | | then return 0.0194594681726737;  // std dev = 0,852, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | | else return 0.32875781327064046;  // std dev = 0,970, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.6466490383646629;  // std dev = 0,302, 49,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=44 */
%   | | | else return 0.3512868718005479;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else return -0.12544463852839155;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( publication(E, C) )
%   | | | then return 0.22132713348229405;  // std dev = 0,353, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else if ( publication(F, A) )
%   | | | | then return 0.5114904167760057;  // std dev = 0,255, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | else if ( publication(G, B), publication(G, H), student(H) )
%   | | | | | then if ( inphase(A, I), inphase(H, I) )
%   | | | | | | then return 0.3270242881361646;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | | | else return 0.43092039203226834;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | | | else if ( projectmember(J, B) )
%   | | | | | | then return 0.013426623080914099;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.3130825984656822;  // std dev = 1,158, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.4932363099438435;  // std dev = 0,297, 47,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   else return -0.11231637819360625;  // std dev = 5,67e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.2193597476684467;  // std dev = 0,964, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A), publication(E, B) )
%   | | | then return 0.41751358415831;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else if ( publication(F, A), publication(G, B) )
%   | | | | then return 0.13020193705262123;  // std dev = 0,356, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | | else if ( publication(H, D) )
%   | | | | | then return 0.5184603284236737;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else if ( publication(I, B), inphase(D, J), inphase(A, J) )
%   | | | | | | then return 0.256979046243312;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | else if ( publication(K, B), publication(K, L), student(L) )
%   | | | | | | | then return 0.30565675604794923;  // std dev = 0,408, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | | | | | else return 0.26613156680177885;  // std dev = 0,443, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.37842292794649623;  // std dev = 0,288, 47,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   else return -0.10159632948783617;  // std dev = 5,27e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.3207118471601494;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( publication(E, C), publication(F, A) )
%   | | | then return -0.1753157374406733;  // std dev = 0,090, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( publication(G, A) )
%   | | | | then return 0.348628001960354;  // std dev = 0,244, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | else if ( projectmember(H, B) )
%   | | | | | then return -0.0391882758764199;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else if ( publication(I, C) )
%   | | | | | | then return 0.39064889582973694;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | | else if ( publication(J, B), publication(J, K), student(K) )
%   | | | | | | | then return 0.2214184527264043;  // std dev = 0,414, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | | | | | else return 0.17345549362753424;  // std dev = 1,158, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.28809782194407246;  // std dev = 0,285, 47,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   else return -0.09269127618926107;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | | then return 0.06930980949629671;  // std dev = 0,286, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else if ( publication(G, A) )
%   | | | | then return 0.3701713094567507;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(H, C) )
%   | | | | | then return 0.30253943724772636;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else if ( projectmember(I, B) )
%   | | | | | | then return -0.030074739797703365;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else if ( publication(J, B), publication(J, K), student(K) )
%   | | | | | | | then return 0.16768435469453707;  // std dev = 0,414, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | | | | | else return 0.1303911132843855;  // std dev = 1,158, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.2218480980700207;  // std dev = 0,286, 47,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A), publication(D, B) )
%   | then return 0.2097577156325355;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( publication(E, A), publication(E, F), tempadvisedby(G, F) )
%   | | then if ( publication(H, B), publication(H, F) )
%   | | | then return 0.2341348128003503;  // std dev = 0,188, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else if ( publication(I, B) )
%   | | | | then if ( publication(E, G) )
%   | | | | | then return -0.035316596012916736;  // std dev = 0,690, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return -0.2691580021141747;  // std dev = 0,314, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | | else return 0.27280300317903206;  // std dev = 0,039, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then if ( publication(K, J) )
%   | | | | then return 0.24272933422934595;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.12339980250945985;  // std dev = 0,418, 30,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | | | else return 0.23511870835850546;  // std dev = 0,205, 32,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   else return -0.07877675473109168;  // std dev = 3,65e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), tempadvisedby(E, D) )
%   | then if ( tempadvisedby(F, B) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.17709649774527747;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.08757570726553211;  // std dev = 0,363, 34,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   | | else return 0.18883984204619583;  // std dev = 0,190, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | then return 0.22956036894960627;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(I, B) )
%   | | | then return -0.13169994604848395;  // std dev = 0,909, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else if ( projectmember(J, B) )
%   | | | | then return -0.05192751548347022;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then return 0.10393397672757702;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.07600643990064829;  // std dev = 0,876, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), tempadvisedby(E, D) )
%   | then if ( tempadvisedby(F, B) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.15274385809367083;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.07017941978704531;  // std dev = 0,363, 34,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   | | else return 0.15536022744923628;  // std dev = 0,192, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | then return 0.1914926679675973;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(I, B) )
%   | | | then return -0.10136804867574942;  // std dev = 0,906, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else if ( projectmember(J, B) )
%   | | | | then return -0.039704836690962884;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then return 0.07854787039056914;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.061203917503700286;  // std dev = 0,876, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420268;  // std dev = 2,98e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, D), tempadvisedby(E, D) )
%   | then if ( publication(C, A) )
%   | | then return 0.13652570603299893;  // std dev = 0,032, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else if ( tempadvisedby(F, B), publication(C, G), student(G) )
%   | | | then return 0.05042175677623215;  // std dev = 0,359, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | | else return 0.12226503471799267;  // std dev = 0,241, 37,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else if ( tempadvisedby(H, B), publication(I, A) )
%   | | then return 0.16358097043990188;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(J, B) )
%   | | | then return -0.07809682107530053;  // std dev = 0,904, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else if ( projectmember(K, B) )
%   | | | | then return -0.030466426400065545;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( tempadvisedby(L, B) )
%   | | | | | then return 0.05966125494033684;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.04965995893078805;  // std dev = 0,877, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06419184008202625;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
Results
   AUC ROC   = 0.96875
   AUC PR    = 0.967372
   CLL	      = -0.278427
   Precision = 0.875 at threshold = 0.5
   Recall    = 0.875
   F1        = 0.875


Total learning time: 26.445 seconds
Total inference time: 0.759 seconds
AUC ROC: 0.96875


Dataset: imdb,uwcse, Run: 1, Fold: 5, Type: scratch, Total folds for small set: 4, Time: 00:19:20
{'CLL': -0.278427, 'Recall': 0.875, 'Learning time': 26.445, 'Precision': [0.875, 0.5], 'AUC ROC': 0.96875, 'F1': 0.875, 'AUC PR': 0.967372, 'Inference time': 0.759}
ueee
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.834339411289988;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B) )
%   | | | then if ( tempadvisedby(G, B) )
%   | | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else if ( publication(F, E) )
%   | | | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(H, B), publication(I, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(J, B), publication(K, J), publication(K, B) )
%   | | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return 0.7470378239884006;  // std dev = 0,314, 63,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=56 */
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7004441928528997;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B) )
%   | | | then if ( tempadvisedby(G, B) )
%   | | | | then return 0.02176788419240575;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else if ( publication(F, E) )
%   | | | | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(H, B), inphase(H, I), inphase(A, I) )
%   | | | then if ( yearsinprogram(A, J), yearsinprogram(H, J) )
%   | | | | then return 0.7584957456458014;  // std dev = 0,021, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.4122980874260876;  // std dev = 1,140, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.6423288690051698;  // std dev = 0,298, 61,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=55 */
%   else return -0.12544463852839144;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B), tempadvisedby(D, B) )
%   | then return 0.5659181623336699;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( publication(E, A), publication(F, B) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.48899508541059283;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else if ( tempadvisedby(G, B), publication(E, H), professor(H) )
%   | | | | then return 0.01904987294481035;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else if ( publication(E, I), tempadvisedby(J, I) )
%   | | | | | then if ( publication(K, J) )
%   | | | | | | then return 0.03258663912040894;  // std dev = 0,837, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | | else return 0.2694995039394977;  // std dev = 1,027, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else if ( tempadvisedby(L, B) )
%   | | | | | | then return 0.5743257094744186;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.43227425316130114;  // std dev = 0,939, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.49295404593704223;  // std dev = 0,316, 69,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=61 */
%   else return -0.11231637819360624;  // std dev = 6,66e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B), tempadvisedby(D, B) )
%   | then return 0.4253859395089793;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( publication(E, A), publication(F, B) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.3673645488034495;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else if ( tempadvisedby(G, B), publication(F, H), student(H) )
%   | | | | then if ( publication(E, I), tempadvisedby(J, I) )
%   | | | | | then return 0.18330344305895616;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return -0.004590362293295652;  // std dev = 0,504, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( publication(E, K), tempadvisedby(L, K), publication(M, L) )
%   | | | | | then return 0.027014106083385968;  // std dev = 0,836, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | else if ( publication(E, N), tempadvisedby(P, N) )
%   | | | | | | then return 0.21845903922954304;  // std dev = 1,031, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | else return 0.35859848113359044;  // std dev = 0,360, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.3716780109058245;  // std dev = 0,316, 69,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=61 */
%   else return -0.1015963294878362;  // std dev = 5,48e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.2791842728338176;  // std dev = 0,265, 79,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | else if ( publication(D, A), publication(D, E), tempadvisedby(F, E) )
%   | | then if ( publication(D, B) )
%   | | | then return 0.35637258535483163;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(G, F), publication(H, B), publication(H, E) )
%   | | | | then return -0.17212737137870765;  // std dev = 0,709, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( publication(I, F) )
%   | | | | | then return 0.30200701068806285;  // std dev = 0,721, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.17241850283489912;  // std dev = 1,034, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(J, B) )
%   | | | then if ( publication(K, A), publication(K, L), professor(L) )
%   | | | | then return 0.39443279808568077;  // std dev = 0,208, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else return 0.27574255719297464;  // std dev = 0,318, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return 0.1884104491529081;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926107;  // std dev = 1,05e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), yearsinprogram(C, D), yearsinprogram(A, D) )
%   | then return 0.1385975516104053;  // std dev = 0,815, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( publication(E, A), publication(E, B) )
%   | | then return 0.2523339264442924;  // std dev = 0,135, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | else if ( publication(F, A), publication(F, G), professor(G) )
%   | | | then if ( tempadvisedby(H, G), publication(F, H) )
%   | | | | then return 0.4332148723244351;  // std dev = 0,289, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( tempadvisedby(I, G), publication(J, G), publication(J, B) )
%   | | | | | then return 0.17985614487599347;  // std dev = 1,014, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | else if ( tempadvisedby(K, B) )
%   | | | | | | then return -0.18084992576895442;  // std dev = 0,710, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | | | else return 0.060565046061285634;  // std dev = 1,053, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else if ( tempadvisedby(L, B) )
%   | | | | then return 0.2438533130316948;  // std dev = 0,281, 34,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | | | else return 0.20147144460387667;  // std dev = 0,334, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else return -0.08518475138839679;  // std dev = 3,33e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.17568278310043617;  // std dev = 0,255, 79,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | else if ( publication(D, A), publication(D, E), tempadvisedby(F, E) )
%   | | then if ( publication(D, B) )
%   | | | then return 0.23150194619130895;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(G, F), publication(G, E) )
%   | | | | then return 0.2627634043958381;  // std dev = 0,574, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else if ( publication(H, F) )
%   | | | | | then return -0.39768894778699604;  // std dev = 0,336, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0.11271957779489633;  // std dev = 1,023, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(I, B) )
%   | | | then if ( publication(J, A), publication(I, K), tempadvisedby(L, K) )
%   | | | | then return 0.17361403803084874;  // std dev = 0,318, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | else return 0.19320574950320954;  // std dev = 0,281, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.10071810561244939;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109164;  // std dev = 4,71e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A), publication(D, B) )
%   | then return 0.19258678561731973;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( publication(E, A), publication(F, B) )
%   | | then if ( publication(E, B), publication(E, G), tempadvisedby(H, G) )
%   | | | then return 0.1928881616511271;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(E, B) )
%   | | | | then return 0.09871423421304452;  // std dev = 0,274, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | else if ( tempadvisedby(I, B), publication(E, J), professor(J) )
%   | | | | | then return -0.058766795314417135;  // std dev = 0,851, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | | else if ( tempadvisedby(K, B) )
%   | | | | | | then return 0.2309033871408275;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else if ( publication(F, L), student(L) )
%   | | | | | | | then return 0.1009240942780955;  // std dev = 0,453, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | | | | | else return -0.1026889785234344;  // std dev = 0,490, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1376932381008553;  // std dev = 0,312, 69,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=61 */
%   else return -0.07324622576333704;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.11967599435862289;  // std dev = 0,253, 79,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | else if ( publication(D, A), publication(D, E), tempadvisedby(F, E) )
%   | | then if ( publication(D, B) )
%   | | | then return 0.16462097166628142;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( publication(G, F), publication(H, B), publication(H, E) )
%   | | | | then return -0.18231229565789728;  // std dev = 0,613, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( publication(I, F) )
%   | | | | | then return 0.15838337295341307;  // std dev = 0,549, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.07349103035342941;  // std dev = 0,999, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(J, B), publication(J, K), tempadvisedby(K, L) )
%   | | | then return 0.05780777733168866;  // std dev = 0,917, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else if ( publication(M, B) )
%   | | | | then return 0.147200825465843;  // std dev = 0,267, 26,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | | else return 0.053072524438982874;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420267;  // std dev = 3,94e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), inphase(C, D), inphase(A, D) )
%   | then if ( publication(E, B) )
%   | | then if ( tempadvisedby(F, B), publication(E, F) )
%   | | | then return -0.09463033529231872;  // std dev = 0,764, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.025092379442577667;  // std dev = 0,855, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.21816450087075592;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(G, B), publication(H, B), publication(H, A) )
%   | | then return 0.14860916681588157;  // std dev = 2,36e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | | then if ( projectmember(K, B) )
%   | | | | then return -0.1121616033252784;  // std dev = 0,726, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( publication(I, L), professor(L), publication(M, B) )
%   | | | | | then return -0.06945643103347526;  // std dev = 0,849, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | | else return 0.20476775006991962;  // std dev = 0,113, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0975108143438094;  // std dev = 0,301, 81,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   else return -0.06419184008202625;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */


Predicates from source: ['advisedby(person,person).', 'tempadvisedby(person,person).', 'inphase(person,prequals).', 'student(person).', 'yearsinprogram(person,year).', 'projectmember(project,person).', 'professor(person).', 'publication(title,person).'] 

Source structured tree: [['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)', 'true,false,false,false': 'tempadvisedby(J, B), publication(K, J), publication(K, B)', 'true,false,true,true,false': 'publication(F, E)', 'true,false': 'publication(D, A), publication(D, E), professor(E)', 'true,false,true,true': 'tempadvisedby(G, B)', 'true,false,true': 'publication(F, B)', 'true,false,false': 'tempadvisedby(H, B), publication(I, A)'}, {'true,true': [0.152, 1, 41], 'true,false,false,true': [2.11e-08, 0, 3], 'true,false,true,true,true': [0.913, 5, 1], 'true,false,true,true,false,false': [1.225, 3, 3], 'true,false,false,false,true': [0.866, 1, 3], 'false': [7.88e-08, 93, 0], 'true,false,false,false,false': [0.314, 7, 56], 'true,false,true,false': [0.913, 1, 5], 'true,false,true,true,false,true': [0.816, 2, 1]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)', 'true,false,true,true,false': 'publication(F, E)', 'true,false,false,true': 'yearsinprogram(A, J), yearsinprogram(H, J)', 'true,false': 'publication(D, A), publication(D, E), professor(E)', 'true,false,true,true': 'tempadvisedby(G, B)', 'true,false,true': 'publication(F, B)', 'true,false,false': 'tempadvisedby(H, B), inphase(H, I), inphase(A, I)'}, {'true,true': [0.152, 1, 41], 'true,false,false,false': [0.298, 6, 55], 'true,false,false,true,false': [1.14, 2, 4], 'true,false,true,true,true': [0.913, 5, 1], 'true,false,true,true,false,false': [1.225, 3, 3], 'false': [0.0, 93, 0], 'true,false,true,false': [0.913, 1, 5], 'true,false,true,true,false,true': [0.816, 2, 1], 'true,false,false,true,true': [0.021, 0, 3]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B), tempadvisedby(D, B)', 'true,false,true,false,false,false': 'tempadvisedby(L, B)', 'true,false,true,false,false': 'publication(E, I), tempadvisedby(J, I)', 'true,false': 'publication(E, A), publication(F, B)', 'true,false,true,false,false,true': 'publication(K, J)', 'true,false,true,false': 'tempadvisedby(G, B), publication(E, H), professor(H)', 'true,false,true': 'publication(E, B)'}, {'true,true': [0.0, 0, 29], 'true,false,true,false,true': [0.913, 5, 1], 'true,false,true,false,false,true,false': [1.027, 2, 2], 'true,false,true,false,false,true,true': [0.837, 3, 1], 'true,false,true,false,false,false,true': [1.05e-08, 0, 3], 'false': [6.66e-08, 93, 0], 'true,false,true,true': [0.266, 1, 12], 'true,false,true,false,false,false,false': [0.939, 1, 4], 'true,false,false': [0.316, 8, 61]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B), tempadvisedby(D, B)', 'true,false,true,false,true': 'publication(E, I), tempadvisedby(J, I)', 'true,false,true,false,false': 'publication(E, K), tempadvisedby(L, K), publication(M, L)', 'true,false': 'publication(E, A), publication(F, B)', 'true,false,true,false': 'tempadvisedby(G, B), publication(F, H), student(H)', 'true,false,true,false,false,false': 'publication(E, N), tempadvisedby(P, N)', 'true,false,true': 'publication(E, B)'}, {'true,true': [0.0, 0, 29], 'true,false,true,false,true,false': [0.504, 3, 1], 'true,false,true,false,true,true': [0.816, 2, 1], 'false': [5.48e-08, 93, 0], 'true,false,true,false,false,false,true': [1.031, 2, 2], 'true,false,true,false,false,true': [0.836, 3, 1], 'true,false,true,true': [0.266, 1, 12], 'true,false,true,false,false,false,false': [0.36, 1, 6], 'true,false,false': [0.316, 8, 61]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B)', 'true,false,true,false,false': 'publication(I, F)', 'true,false,false,true': 'publication(K, A), publication(K, L), professor(L)', 'true,false': 'publication(D, A), publication(D, E), tempadvisedby(F, E)', 'true,false,true,false': 'publication(G, F), publication(H, B), publication(H, E)', 'true,false,true': 'publication(D, B)', 'true,false,false': 'publication(J, B)'}, {'true,true': [0.265, 10, 69], 'true,false,true,false,false,false': [1.034, 2, 2], 'true,false,false,false': [0.894, 1, 4], 'true,false,false,true,false': [0.318, 3, 23], 'false': [1.05e-08, 93, 0], 'true,false,true,false,false,true': [0.721, 1, 2], 'true,false,true,true': [1.05e-08, 0, 6], 'true,false,true,false,true': [0.709, 3, 1], 'true,false,false,true,true': [0.208, 0, 6]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B), yearsinprogram(C, D), yearsinprogram(A, D)', 'true,false,false,false': 'tempadvisedby(L, B)', 'true,false,false,true,false': 'tempadvisedby(I, G), publication(J, G), publication(J, B)', 'true,false,false,true': 'tempadvisedby(H, G), publication(F, H)', 'true,false,false,true,false,false': 'tempadvisedby(K, B)', 'true,false': 'publication(E, A), publication(E, B)', 'true,false,false': 'publication(F, A), publication(F, G), professor(G)'}, {'true,true': [0.815, 1, 4], 'true,false,true': [0.135, 1, 41], 'true,false,false,true,false,false,false': [1.053, 3, 3], 'true,false,false,true,false,false,true': [0.71, 5, 1], 'true,false,false,false,true': [0.281, 3, 31], 'false': [3.33e-08, 93, 0], 'true,false,false,false,false': [0.334, 4, 27], 'true,false,false,true,false,true': [1.014, 3, 2], 'true,false,false,true,true': [0.289, 0, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B)', 'true,false,true,false,false': 'publication(H, F)', 'true,false,false,true': 'publication(J, A), publication(I, K), tempadvisedby(L, K)', 'true,false': 'publication(D, A), publication(D, E), tempadvisedby(F, E)', 'true,false,true,false': 'publication(G, F), publication(G, E)', 'true,false,true': 'publication(D, B)', 'true,false,false': 'publication(I, B)'}, {'true,true': [0.255, 10, 69], 'true,false,true,false,false,false': [1.023, 2, 2], 'true,false,false,false': [0.894, 1, 4], 'true,false,false,true,false': [0.281, 2, 21], 'false': [4.71e-08, 93, 0], 'true,false,true,false,false,true': [0.336, 3, 0], 'true,false,true,true': [0.0, 0, 6], 'true,false,true,false,true': [0.574, 1, 3], 'true,false,false,true,true': [0.318, 1, 8]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B), publication(D, A), publication(D, B)', 'true,false,true,false,false,false': 'tempadvisedby(K, B)', 'true,false,true,false,false': 'tempadvisedby(I, B), publication(E, J), professor(J)', 'true,false': 'publication(E, A), publication(F, B)', 'true,false,true,false': 'publication(E, B)', 'true,false,true,false,false,false,false': 'publication(F, L), student(L)', 'true,false,true': 'publication(E, B), publication(E, G), tempadvisedby(H, G)'}, {'true,true': [0.0, 0, 29], 'true,false,true,false,true': [0.274, 1, 6], 'true,false,true,false,false,false,false,false': [0.49, 2, 1], 'false': [0.0, 93, 0], 'true,false,true,false,false,false,true': [0.054, 0, 3], 'true,false,true,false,false,true': [0.851, 5, 1], 'true,false,true,true': [0.0, 0, 6], 'true,false,true,false,false,false,false,true': [0.453, 4, 6], 'true,false,false': [0.312, 8, 61]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B)', 'true,false,true,false,false': 'publication(I, F)', 'true,false,false,false': 'publication(M, B)', 'true,false': 'publication(D, A), publication(D, E), tempadvisedby(F, E)', 'true,false,true,false': 'publication(G, F), publication(H, B), publication(H, E)', 'true,false,true': 'publication(D, B)', 'true,false,false': 'publication(J, B), publication(J, K), tempadvisedby(K, L)'}, {'true,true': [0.253, 10, 69], 'true,false,true,false,false,false': [0.999, 2, 2], 'true,false,false,true': [0.917, 1, 5], 'false': [3.94e-08, 93, 0], 'true,false,false,false,true': [0.267, 2, 24], 'true,false,true,false,false,true': [0.549, 1, 2], 'true,false,false,false,false': [0.894, 1, 4], 'true,false,true,true': [0.0, 0, 6], 'true,false,true,false,true': [0.613, 3, 1]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B), inphase(C, D), inphase(A, D)', 'true,false,false,true': 'projectmember(K, B)', 'true,true': 'publication(E, B)', 'true,false,false,true,false': 'publication(I, L), professor(L), publication(M, B)', 'true,true,true': 'tempadvisedby(F, B), publication(E, F)', 'true,false': 'tempadvisedby(G, B), publication(H, B), publication(H, A)', 'true,false,false': 'publication(I, A), tempadvisedby(J, B)'}, {'true,true,true,true': [0.764, 1, 2], 'true,false,false,false': [0.301, 12, 69], 'true,true,false': [0.041, 0, 3], 'true,false,false,true,false,true': [0.849, 5, 1], 'true,false,false,true,false,false': [0.113, 0, 4], 'false': [0.0, 93, 0], 'true,true,true,false': [0.855, 1, 3], 'true,false,true': [2.36e-08, 0, 29], 'true,false,false,true,true': [0.726, 1, 2]}]] 



Best mapping found: ['professor(A) -> actor(A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> movie(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> movie(A,B)', 'publication(A,B) -> movie(A,B)', 'yearsinprogram(A,B) -> genre(A,B)', 'student(A) -> director(A)'] 

Tranferred structured tree: [['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,false,false': 'workedunder(B, J), movie(K, J), movie(K, B)', 'true,false,true,true,false': 'movie(F, E)', 'true,false': 'movie(D, A), movie(D, E), actor(E)', 'true,false,true,true': 'workedunder(B, G)', 'true,false,true': 'movie(F, B)', 'true,false,false': 'workedunder(B, H), movie(I, A)'}, {'true,false,true,true,false,false': [1.225, 3, 3], 'true,false,false,true': [2.11e-08, 0, 3], 'true,false,true,true,true': [0.913, 5, 1], 'true,true': [0.152, 1, 41], 'true,false,false,false,true': [0.866, 1, 3], 'false': [7.88e-08, 93, 0], 'true,false,false,false,false': [0.314, 7, 56], 'true,false,true,false': [0.913, 1, 5], 'true,false,true,true,false,true': [0.816, 2, 1]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,true,false': 'movie(F, E)', 'true,false,false,true': 'genre(A, J), genre(H, J)', 'true,false': 'movie(D, A), movie(D, E), actor(E)', 'true,false,true,true': 'workedunder(B, G)', 'true,false,true': 'movie(F, B)', 'true,false,false': 'workedunder(B, H), movie(I, H), movie(I, A)'}, {'true,true': [0.152, 1, 41], 'true,false,false,false': [0.298, 6, 55], 'true,false,false,true,false': [1.14, 2, 4], 'true,false,true,true,true': [0.913, 5, 1], 'true,false,true,true,false,false': [1.225, 3, 3], 'false': [0.0, 93, 0], 'true,false,true,false': [0.913, 1, 5], 'true,false,true,true,false,true': [0.816, 2, 1], 'true,false,false,true,true': [0.021, 0, 3]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, A), movie(C, B), workedunder(B, D)', 'true,false,true,false,false,false': 'workedunder(B, L)', 'true,false,true,false,false': 'movie(E, I), workedunder(I, J)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false,false,true': 'movie(K, J)', 'true,false,true,false': 'workedunder(B, G), movie(E, H), actor(H)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 29], 'true,false,true,false,true': [0.913, 5, 1], 'true,false,true,false,false,true,false': [1.027, 2, 2], 'true,false,true,false,false,true,true': [0.837, 3, 1], 'true,false,true,false,false,false,true': [1.05e-08, 0, 3], 'false': [6.66e-08, 93, 0], 'true,false,true,true': [0.266, 1, 12], 'true,false,true,false,false,false,false': [0.939, 1, 4], 'true,false,false': [0.316, 8, 61]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, A), movie(C, B), workedunder(B, D)', 'true,false,true,false,true': 'movie(E, I), workedunder(I, J)', 'true,false,true,false,false': 'movie(E, K), workedunder(K, L), movie(M, L)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(B, G), movie(F, H), director(H)', 'true,false,true,false,false,false': 'movie(E, N), workedunder(N, P)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 29], 'true,false,true,false,true,false': [0.504, 3, 1], 'true,false,true,false,true,true': [0.816, 2, 1], 'true,false,true,false,false,false,true': [1.031, 2, 2], 'false': [5.48e-08, 93, 0], 'true,false,false': [0.316, 8, 61], 'true,false,true,true': [0.266, 1, 12], 'true,false,true,false,false,true': [0.836, 3, 1], 'true,false,true,false,false,false,false': [0.36, 1, 6]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,true,false,false': 'movie(I, F)', 'true,false,false,true': 'movie(K, A), movie(K, L), actor(L)', 'true,false': 'movie(D, A), movie(D, E), workedunder(E, F)', 'true,false,true,false': 'movie(G, F), movie(H, B), movie(H, E)', 'true,false,true': 'movie(D, B)', 'true,false,false': 'movie(J, B)'}, {'true,true': [0.265, 10, 69], 'true,false,true,false,false,false': [1.034, 2, 2], 'true,false,false,false': [0.894, 1, 4], 'true,false,false,true,false': [0.318, 3, 23], 'true,false,true,false,true': [0.709, 3, 1], 'false': [1.05e-08, 93, 0], 'true,false,true,true': [1.05e-08, 0, 6], 'true,false,true,false,false,true': [0.721, 1, 2], 'true,false,false,true,true': [0.208, 0, 6]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), genre(C, D), genre(A, D)', 'true,false,false,false': 'workedunder(B, L)', 'true,false,false,true,false': 'workedunder(G, I), movie(J, G), movie(J, B)', 'true,false,false,true': 'workedunder(G, H), movie(F, H)', 'true,false,false,true,false,false': 'workedunder(B, K)', 'true,false': 'movie(E, A), movie(E, B)', 'true,false,false': 'movie(F, A), movie(F, G), actor(G)'}, {'true,true': [0.815, 1, 4], 'true,false,false,true,false,true': [1.014, 3, 2], 'true,false,false,true,false,false,false': [1.053, 3, 3], 'true,false,false,true,false,false,true': [0.71, 5, 1], 'true,false,false,false,true': [0.281, 3, 31], 'false': [3.33e-08, 93, 0], 'true,false,false,false,false': [0.334, 4, 27], 'true,false,true': [0.135, 1, 41], 'true,false,false,true,true': [0.289, 0, 4]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,true,false,false': 'movie(H, F)', 'true,false,false,true': 'movie(J, A), movie(I, K), workedunder(K, L)', 'true,false': 'movie(D, A), movie(D, E), workedunder(E, F)', 'true,false,true,false': 'movie(G, F), movie(G, E)', 'true,false,true': 'movie(D, B)', 'true,false,false': 'movie(I, B)'}, {'true,true': [0.255, 10, 69], 'true,false,true,false,false,false': [1.023, 2, 2], 'true,false,false,false': [0.894, 1, 4], 'true,false,false,true,false': [0.281, 2, 21], 'true,false,true,false,true': [0.574, 1, 3], 'false': [4.71e-08, 93, 0], 'true,false,true,true': [0.0, 0, 6], 'true,false,true,false,false,true': [0.336, 3, 0], 'true,false,false,true,true': [0.318, 1, 8]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), movie(D, A), movie(D, B)', 'true,false,true,false,false,false': 'workedunder(B, K)', 'true,false,true,false,false': 'workedunder(B, I), movie(E, J), actor(J)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'movie(E, B)', 'true,false,true,false,false,false,false': 'movie(F, L), director(L)', 'true,false,true': 'movie(E, B), movie(E, G), workedunder(G, H)'}, {'true,true': [0.0, 0, 29], 'true,false,true,false,true': [0.274, 1, 6], 'true,false,true,false,false,true': [0.851, 5, 1], 'true,false,true,false,false,false,true': [0.054, 0, 3], 'false': [0.0, 93, 0], 'true,false,false': [0.312, 8, 61], 'true,false,true,true': [0.0, 0, 6], 'true,false,true,false,false,false,false,false': [0.49, 2, 1], 'true,false,true,false,false,false,false,true': [0.453, 4, 6]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,true,false,false': 'movie(I, F)', 'true,false,false,false': 'movie(M, B)', 'true,false': 'movie(D, A), movie(D, E), workedunder(E, F)', 'true,false,true,false': 'movie(G, F), movie(H, B), movie(H, E)', 'true,false,true': 'movie(D, B)', 'true,false,false': 'movie(J, B), movie(J, K), workedunder(L, K)'}, {'true,true': [0.253, 10, 69], 'true,false,true,false,false,false': [0.999, 2, 2], 'true,false,false,true': [0.917, 1, 5], 'true,false,true,false,true': [0.613, 3, 1], 'true,false,false,false,true': [0.267, 2, 24], 'false': [3.94e-08, 93, 0], 'true,false,false,false,false': [0.894, 1, 4], 'true,false,true,true': [0.0, 0, 6], 'true,false,true,false,false,true': [0.549, 1, 2]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), movie(D, C), movie(D, A)', 'true,false,false,true': 'movie(K, B)', 'true,false,false,true,false': 'movie(I, L), actor(L), movie(M, B)', 'true,true': 'movie(E, B)', 'true,true,true': 'workedunder(B, F), movie(E, F)', 'true,false': 'workedunder(B, G), movie(H, B), movie(H, A)', 'true,false,false': 'movie(I, A), workedunder(B, J)'}, {'true,true,true,true': [0.764, 1, 2], 'true,false,false,false': [0.301, 12, 69], 'true,true,false': [0.041, 0, 3], 'true,false,true': [2.36e-08, 0, 29], 'true,false,false,true,false,false': [0.113, 0, 4], 'false': [0.0, 93, 0], 'true,true,true,false': [0.855, 1, 3], 'true,false,false,true,false,true': [0.849, 5, 1], 'true,false,false,true,true': [0.726, 1, 2]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(B, A) :- actor(B), director(A).;true;false', '0;true;movie(C, A), movie(C, B).;false;true', '0;true,false,false,false;workedunder(B, J), movie(K, J), movie(K, B).;false;false', '0;true,false,true,true,false;movie(F, E).;false;false', '0;true,false;movie(D, A), movie(D, E), actor(E).;true;true', '0;true,false,true,true;workedunder(B, G).;false;true', '0;true,false,true;movie(F, B).;true;false', '0;true,false,false;workedunder(B, H), movie(I, A).;false;true', '1;;workedunder(B, A) :- actor(B), director(A).;true;false', '1;true;movie(C, A), movie(C, B).;false;true', '1;true,false,true,true,false;movie(F, E).;false;false', '1;true,false,false,true;genre(A, J), genre(H, J).;false;false', '1;true,false;movie(D, A), movie(D, E), actor(E).;true;true', '1;true,false,true,true;workedunder(B, G).;false;true', '1;true,false,true;movie(F, B).;true;false', '1;true,false,false;workedunder(B, H), movie(I, H), movie(I, A).;true;false', '2;;workedunder(B, A) :- actor(B), director(A).;true;false', '2;true;movie(C, A), movie(C, B), workedunder(B, D).;false;true', '2;true,false,true,false,false,false;workedunder(B, L).;false;false', '2;true,false,true,false,false;movie(E, I), workedunder(I, J).;true;true', '2;true,false;movie(E, A), movie(F, B).;true;false', '2;true,false,true,false,false,true;movie(K, J).;false;false', '2;true,false,true,false;workedunder(B, G), movie(E, H), actor(H).;false;true', '2;true,false,true;movie(E, B).;false;true', '3;;workedunder(B, A) :- actor(B), director(A).;true;false', '3;true;movie(C, A), movie(C, B), workedunder(B, D).;false;true', '3;true,false,true,false,true;movie(E, I), workedunder(I, J).;false;false', '3;true,false,true,false,false;movie(E, K), workedunder(K, L), movie(M, L).;false;true', '3;true,false;movie(E, A), movie(F, B).;true;false', '3;true,false,true,false;workedunder(B, G), movie(F, H), director(H).;true;true', '3;true,false,true,false,false,false;movie(E, N), workedunder(N, P).;false;false', '3;true,false,true;movie(E, B).;false;true', '4;;workedunder(B, A) :- actor(B), director(A).;true;false', '4;true;workedunder(B, C).;false;true', '4;true,false,true,false,false;movie(I, F).;false;false', '4;true,false,false,true;movie(K, A), movie(K, L), actor(L).;false;false', '4;true,false;movie(D, A), movie(D, E), workedunder(E, F).;true;true', '4;true,false,true,false;movie(G, F), movie(H, B), movie(H, E).;false;true', '4;true,false,true;movie(D, B).;false;true', '4;true,false,false;movie(J, B).;true;false', '5;;workedunder(B, A) :- actor(B), director(A).;true;false', '5;true;workedunder(B, C), genre(C, D), genre(A, D).;false;true', '5;true,false,false,false;workedunder(B, L).;false;false', '5;true,false,false,true,false;workedunder(G, I), movie(J, G), movie(J, B).;false;true', '5;true,false,false,true;workedunder(G, H), movie(F, H).;false;true', '5;true,false,false,true,false,false;workedunder(B, K).;false;false', '5;true,false;movie(E, A), movie(E, B).;false;true', '5;true,false,false;movie(F, A), movie(F, G), actor(G).;true;true', '6;;workedunder(B, A) :- actor(B), director(A).;true;false', '6;true;workedunder(B, C).;false;true', '6;true,false,true,false,false;movie(H, F).;false;false', '6;true,false,false,true;movie(J, A), movie(I, K), workedunder(K, L).;false;false', '6;true,false;movie(D, A), movie(D, E), workedunder(E, F).;true;true', '6;true,false,true,false;movie(G, F), movie(G, E).;false;true', '6;true,false,true;movie(D, B).;false;true', '6;true,false,false;movie(I, B).;true;false', '7;;workedunder(B, A) :- actor(B), director(A).;true;false', '7;true;workedunder(B, C), movie(D, A), movie(D, B).;false;true', '7;true,false,true,false,false,false;workedunder(B, K).;false;true', '7;true,false,true,false,false;workedunder(B, I), movie(E, J), actor(J).;false;true', '7;true,false;movie(E, A), movie(F, B).;true;false', '7;true,false,true,false;movie(E, B).;false;true', '7;true,false,true,false,false,false,false;movie(F, L), director(L).;false;false', '7;true,false,true;movie(E, B), movie(E, G), workedunder(G, H).;false;true', '8;;workedunder(B, A) :- actor(B), director(A).;true;false', '8;true;workedunder(B, C).;false;true', '8;true,false,true,false,false;movie(I, F).;false;false', '8;true,false,false,false;movie(M, B).;false;false', '8;true,false;movie(D, A), movie(D, E), workedunder(E, F).;true;true', '8;true,false,true,false;movie(G, F), movie(H, B), movie(H, E).;false;true', '8;true,false,true;movie(D, B).;false;true', '8;true,false,false;movie(J, B), movie(J, K), workedunder(L, K).;false;true', '9;;workedunder(B, A) :- actor(B), director(A).;true;false', '9;true;workedunder(B, C), movie(D, C), movie(D, A).;true;true', '9;true,false,false,true;movie(K, B).;false;true', '9;true,false,false,true,false;movie(I, L), actor(L), movie(M, B).;false;false', '9;true,true;movie(E, B).;true;false', '9;true,true,true;workedunder(B, F), movie(E, F).;false;false', '9;true,false;workedunder(B, G), movie(H, B), movie(H, A).;false;true', '9;true,false,false;movie(I, A), workedunder(B, J).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(D, E), actor(E) )
%   | | then if ( movie(F, A) )
%   | | | then if ( workedunder(A, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, E) )
%   | | | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4,34e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(D, E), actor(E) )
%   | | then if ( movie(F, A) )
%   | | | then if ( workedunder(A, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, E) )
%   | | | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A), workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else if ( workedunder(A, G), movie(E, H), actor(H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(E, I), workedunder(I, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(A, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A), workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else if ( workedunder(A, G), movie(F, H), director(H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(E, I), workedunder(I, J), movie(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(E, L), workedunder(L, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B), movie(D, E), workedunder(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A) )
%   | | | then if ( movie(H, B), movie(H, I), actor(I) )
%   | | | | then return 0.29487415195081135;  // std dev = 0,693, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.092691276189261;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), genre(C, D), genre(B, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(E, A) )
%   | | then return 0.26011392372114756;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(F, B), movie(F, G), actor(G) )
%   | | | then if ( workedunder(G, H), movie(F, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(G, I), movie(J, G), movie(J, A) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(A, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.12064522024263256;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B), movie(D, E), workedunder(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A) )
%   | | | then if ( movie(H, B), movie(G, I), workedunder(I, J) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.1931385134448539;  // std dev = 0,539, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), movie(D, B), movie(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(E, A), movie(E, G), workedunder(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(E, A) )
%   | | | | then return 0.18263009899760535;  // std dev = 2,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | | else if ( workedunder(A, I), movie(E, J), actor(J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(A, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( movie(F, L), director(L) )
%   | | | | | | | then return -0.12854995421526363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B), movie(D, E), workedunder(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(G, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(J, A) )
%   | | | | then return 0.13994430114976594;  // std dev = 0,456, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), movie(D, C), movie(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), movie(F, A), movie(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B), workedunder(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12246945736599009;  // std dev = 0,451, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.06419184008202623;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103273
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.596 seconds
Total inference time: 0.623 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103273
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.623 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,true,false': 'movie(F, E)', 'true,false': 'movie(D, B), movie(D, E), actor(E)', 'true,false,true,true': 'workedunder(A, G)', 'true,false,true': 'movie(F, A)'}, {'true,true': [2.23e-07, 0, 45], 'true,false,true,true,true': [0.0, 0, 0], 'true,false,true,true,false,false': [0.0, 0, 0], 'false': [4.34e-08, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,true,false': 'movie(F, E)', 'true,false': 'movie(D, B), movie(D, E), actor(E)', 'true,false,true,true': 'workedunder(A, G)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true,true': [0.0, 0, 0], 'true,false,true,true,false,false': [0.0, 0, 0], 'false': [0.0, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A), workedunder(A, D)', 'true,false,true,false,false,false': 'workedunder(A, K)', 'true,false,true,false,false': 'movie(E, I), workedunder(I, J)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true,false': 'workedunder(A, G), movie(E, H), actor(H)', 'true,false,true': 'movie(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 42, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 45], 'true,false,true,false,false,false,false': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A), workedunder(A, D)', 'true,false,true,false,false,false': 'movie(E, L), workedunder(L, M)', 'true,false,true,false,false': 'movie(E, I), workedunder(I, J), movie(K, J)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true,false': 'workedunder(A, G), movie(F, H), director(H)', 'true,false,true': 'movie(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 42, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 45], 'true,false,true,false,false,false,false': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true': 'movie(H, B), movie(H, I), actor(I)', 'true,false': 'movie(D, B), movie(D, E), workedunder(E, F)', 'true,false,false': 'movie(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false': [0.0, 0, 0], 'false': [0.0, 42, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.693, 3, 45]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), genre(C, D), genre(B, D)', 'true,false,false,true,false': 'workedunder(G, I), movie(J, G), movie(J, A)', 'true,false,false,true': 'workedunder(G, H), movie(F, H)', 'true,false,false,true,false,false': 'workedunder(A, K)', 'true,false': 'movie(E, B), movie(E, A)', 'true,false,false': 'movie(F, B), movie(F, G), actor(G)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 45], 'true,false,false,true,false,false,false': [0.0, 3, 0], 'true,false,false,true,false,false,true': [0.0, 0, 0], 'false': [1.83e-08, 42, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true': 'movie(H, B), movie(G, I), workedunder(I, J)', 'true,false': 'movie(D, B), movie(D, E), workedunder(E, F)', 'true,false,false': 'movie(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false': [0.539, 3, 45], 'false': [0.0, 42, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), movie(D, B), movie(D, A)', 'true,false,true,false,false,false': 'workedunder(A, K)', 'true,false,true,false,false': 'workedunder(A, I), movie(E, J), actor(J)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true,false': 'movie(E, A)', 'true,false,true,false,false,false,false': 'movie(F, L), director(L)', 'true,false,true': 'movie(E, A), movie(E, G), workedunder(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,false,true': [2.58e-08, 0, 45], 'true,false,true,false,false,false,false,false': [0.0, 0, 0], 'false': [1.05e-08, 42, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,false,false,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,false': 'movie(J, A)', 'true,false': 'movie(D, B), movie(D, E), workedunder(E, F)', 'true,false,false': 'movie(G, A), movie(G, H), workedunder(I, H)'}, {'true,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [0.456, 3, 45], 'false': [0.0, 42, 0], 'true,false,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), movie(D, C), movie(D, B)', 'true,false': 'workedunder(A, E), movie(F, A), movie(F, B)', 'true,false,false': 'movie(G, B), workedunder(A, H)'}, {'true,true': [0.0, 0, 0], 'false': [0.0, 42, 0], 'true,false,false,false': [0.451, 3, 45], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false;movie(D, B), movie(D, E), actor(E).;true;false', '0;true,false,true,true;workedunder(A, G).;false;false', '0;true,false,true;movie(F, A).;true;false', '1;;workedunder(A, B) :- actor(A), director(B).;true;false', '1;true;movie(C, B), movie(C, A).;false;true', '1;true,false;movie(D, B), movie(D, E), actor(E).;true;false', '1;true,false,true,true;workedunder(A, G).;false;false', '1;true,false,true;movie(F, A).;true;false', '2;;workedunder(A, B) :- actor(A), director(B).;false;false', '3;;workedunder(A, B) :- actor(A), director(B).;false;false', '4;;workedunder(A, B) :- actor(A), director(B).;false;false', '5;;workedunder(A, B) :- actor(A), director(B).;false;false', '6;;workedunder(A, B) :- actor(A), director(B).;false;false', '7;;workedunder(A, B) :- actor(A), director(B).;false;false', '8;;workedunder(A, B) :- actor(A), director(B).;false;false', '9;;workedunder(A, B) :- actor(A), director(B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,true,false,false', 0), ('true,false,true,false', 0), ('true,false,true,true,true', 0), ('true,false,false', 0)]
Tree #2: [('true,false,true,true,false,false', 0), ('true,false,true,false', 0), ('true,false,true,true,true', 0), ('true,false,false', 0)]
Tree #3: [('true,true', 0), ('true,false,true,false,true', 0), ('true,false,false', 0), ('true,false,true,false,false,true', 0), ('true,false,true,false,false,false,true', 0)]
Tree #4: [('true,true', 0), ('true,false,true,false,true', 0), ('true,false,false', 0), ('true,false,true,false,false,true', 0), ('true,false,true,false,false,false,true', 0)]
Tree #5: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false', 0), ('true,false,true', 0), ('true,false,false,true,true', 0.9375)]
Tree #6: [('true,true', 0), ('true,false,false,true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,false,false,true', 0)]
Tree #7: [('true,true', 0), ('true,false,false,false', 0), ('true,false,true', 0), ('true,false,false,true,true', 0), ('true,false,false,true,false', 0.9375)]
Tree #8: [('true,true', 0), ('true,false,true,false,false,false,true', 0), ('true,false,true,false,false,false,false,false', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #9: [('true,true', 0), ('true,false,false,false,false', 0), ('true,false,true', 0), ('true,false,false,true', 0), ('true,false,false,false,true', 0.9375)]
Tree #10: [('true,true', 0), ('true,false,true', 0), ('true,false,false,true', 0), ('true,false,false,false', 0.9375)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(D, E), actor(E) )
%   | | then if ( movie(F, A) )
%   | | | then if ( workedunder(A, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4,34e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(D, E), actor(E) )
%   | | then if ( movie(F, A) )
%   | | | then if ( workedunder(A, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5136362608125408;  // std dev = 1,120, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.11231637819360639;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.3900548840356665;  // std dev = 1,010, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.10159632948783634;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.3000943863948828;  // std dev = 0,963, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.092691276189261;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.23703633091304313;  // std dev = 0,955, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.192177802340286;  // std dev = 0,967, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.07877675473109177;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1593086602860255;  // std dev = 0,988, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1344819384403139;  // std dev = 1,013, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.06842697784420272;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.11521350951420462;  // std dev = 1,038, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.06419184008202623;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.140628
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.738 seconds
Total inference time: 0.509 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 7.466
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099748
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.798 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 1, Type: transfer, Total folds for small set: 1, Time: 00:20:18
{'CLL': -0.099748, 'Recall': 1.0, 'Learning time': 7.466, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 60000, 'Total time': 26.688905477523804, 'Generating mappings time': 2.595522403717041, 'Finding best mapping': 21.446513652801514, 'Generating paths time': 2.63057279586792, 'Knowledge compiling time': 0.01628708839416504}, 'Parameter Learning Results': {'CLL': -0.099748, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.798}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.1418510649004877;  // std dev = 4,34e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.1254446385283913;  // std dev = 3,49e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.11231637819360636;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.10159632948783631;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.09269127618926105;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.0851847513883968;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.06419184008202623;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.971 seconds
Total inference time: 0.618 seconds
AUC ROC: 1.0


Dataset: uwcse,imdb, Run: 1, Fold: 1, Type: scratch, Total folds for small set: 1, Time: 00:20:20
{'CLL': -0.094637, 'Recall': 1.0, 'Learning time': 1.971, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.618}


Best mapping found: ['professor(A) -> actor(A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> movie(A,B)', 'publication(A,B) -> movie(A,B)', 'yearsinprogram(A,B) -> genre(A,B)', 'student(A) -> director(A)'] 

Tranferred structured tree: [['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,false,false': 'workedunder(B, J), movie(K, J), movie(K, B)', 'true,false,true,true,false': 'movie(F, E)', 'true,false': 'movie(D, A), movie(D, E), actor(E)', 'true,false,true,true': 'workedunder(B, G)', 'true,false,true': 'movie(F, B)', 'true,false,false': 'workedunder(B, H), movie(I, A)'}, {'true,false,true,true,false,false': [1.225, 3, 3], 'true,false,false,true': [2.11e-08, 0, 3], 'true,false,true,true,true': [0.913, 5, 1], 'true,true': [0.152, 1, 41], 'true,false,false,false,true': [0.866, 1, 3], 'false': [7.88e-08, 93, 0], 'true,false,false,false,false': [0.314, 7, 56], 'true,false,true,false': [0.913, 1, 5], 'true,false,true,true,false,true': [0.816, 2, 1]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,true,false': 'movie(F, E)', 'true,false,false,true': 'genre(A, J), genre(H, J)', 'true,false': 'movie(D, A), movie(D, E), actor(E)', 'true,false,true,true': 'workedunder(B, G)', 'true,false,true': 'movie(F, B)', 'true,false,false': 'workedunder(B, H), genre(H, I), genre(A, I)'}, {'true,true': [0.152, 1, 41], 'true,false,false,false': [0.298, 6, 55], 'true,false,false,true,false': [1.14, 2, 4], 'true,false,true,true,true': [0.913, 5, 1], 'true,false,true,true,false,false': [1.225, 3, 3], 'false': [0.0, 93, 0], 'true,false,true,false': [0.913, 1, 5], 'true,false,true,true,false,true': [0.816, 2, 1], 'true,false,false,true,true': [0.021, 0, 3]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, A), movie(C, B), workedunder(B, D)', 'true,false,true,false,false,false': 'workedunder(B, L)', 'true,false,true,false,false': 'movie(E, I), workedunder(I, J)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false,false,true': 'movie(K, J)', 'true,false,true,false': 'workedunder(B, G), movie(E, H), actor(H)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 29], 'true,false,true,false,true': [0.913, 5, 1], 'true,false,true,false,false,true,false': [1.027, 2, 2], 'true,false,true,false,false,true,true': [0.837, 3, 1], 'true,false,true,false,false,false,true': [1.05e-08, 0, 3], 'false': [6.66e-08, 93, 0], 'true,false,true,true': [0.266, 1, 12], 'true,false,true,false,false,false,false': [0.939, 1, 4], 'true,false,false': [0.316, 8, 61]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, A), movie(C, B), workedunder(B, D)', 'true,false,true,false,true': 'movie(E, I), workedunder(I, J)', 'true,false,true,false,false': 'movie(E, K), workedunder(K, L), movie(M, L)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(B, G), movie(F, H), director(H)', 'true,false,true,false,false,false': 'movie(E, N), workedunder(N, P)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 29], 'true,false,true,false,true,false': [0.504, 3, 1], 'true,false,true,false,true,true': [0.816, 2, 1], 'true,false,true,false,false,false,true': [1.031, 2, 2], 'false': [5.48e-08, 93, 0], 'true,false,false': [0.316, 8, 61], 'true,false,true,true': [0.266, 1, 12], 'true,false,true,false,false,true': [0.836, 3, 1], 'true,false,true,false,false,false,false': [0.36, 1, 6]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,true,false,false': 'movie(I, F)', 'true,false,false,true': 'movie(K, A), movie(K, L), actor(L)', 'true,false': 'movie(D, A), movie(D, E), workedunder(E, F)', 'true,false,true,false': 'movie(G, F), movie(H, B), movie(H, E)', 'true,false,true': 'movie(D, B)', 'true,false,false': 'movie(J, B)'}, {'true,true': [0.265, 10, 69], 'true,false,true,false,false,false': [1.034, 2, 2], 'true,false,false,false': [0.894, 1, 4], 'true,false,false,true,false': [0.318, 3, 23], 'true,false,true,false,true': [0.709, 3, 1], 'false': [1.05e-08, 93, 0], 'true,false,true,true': [1.05e-08, 0, 6], 'true,false,true,false,false,true': [0.721, 1, 2], 'true,false,false,true,true': [0.208, 0, 6]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), genre(C, D), genre(A, D)', 'true,false,false,false': 'workedunder(B, L)', 'true,false,false,true,false': 'workedunder(G, I), movie(J, G), movie(J, B)', 'true,false,false,true': 'workedunder(G, H), movie(F, H)', 'true,false,false,true,false,false': 'workedunder(B, K)', 'true,false': 'movie(E, A), movie(E, B)', 'true,false,false': 'movie(F, A), movie(F, G), actor(G)'}, {'true,true': [0.815, 1, 4], 'true,false,false,true,false,true': [1.014, 3, 2], 'true,false,false,true,false,false,false': [1.053, 3, 3], 'true,false,false,true,false,false,true': [0.71, 5, 1], 'true,false,false,false,true': [0.281, 3, 31], 'false': [3.33e-08, 93, 0], 'true,false,false,false,false': [0.334, 4, 27], 'true,false,true': [0.135, 1, 41], 'true,false,false,true,true': [0.289, 0, 4]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,true,false,false': 'movie(H, F)', 'true,false,false,true': 'movie(J, A), movie(I, K), workedunder(K, L)', 'true,false': 'movie(D, A), movie(D, E), workedunder(E, F)', 'true,false,true,false': 'movie(G, F), movie(G, E)', 'true,false,true': 'movie(D, B)', 'true,false,false': 'movie(I, B)'}, {'true,true': [0.255, 10, 69], 'true,false,true,false,false,false': [1.023, 2, 2], 'true,false,false,false': [0.894, 1, 4], 'true,false,false,true,false': [0.281, 2, 21], 'true,false,true,false,true': [0.574, 1, 3], 'false': [4.71e-08, 93, 0], 'true,false,true,true': [0.0, 0, 6], 'true,false,true,false,false,true': [0.336, 3, 0], 'true,false,false,true,true': [0.318, 1, 8]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), movie(D, A), movie(D, B)', 'true,false,true,false,false,false': 'workedunder(B, K)', 'true,false,true,false,false': 'workedunder(B, I), movie(E, J), actor(J)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'movie(E, B)', 'true,false,true,false,false,false,false': 'movie(F, L), director(L)', 'true,false,true': 'movie(E, B), movie(E, G), workedunder(G, H)'}, {'true,true': [0.0, 0, 29], 'true,false,true,false,true': [0.274, 1, 6], 'true,false,true,false,false,true': [0.851, 5, 1], 'true,false,true,false,false,false,true': [0.054, 0, 3], 'false': [0.0, 93, 0], 'true,false,false': [0.312, 8, 61], 'true,false,true,true': [0.0, 0, 6], 'true,false,true,false,false,false,false,false': [0.49, 2, 1], 'true,false,true,false,false,false,false,true': [0.453, 4, 6]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,true,false,false': 'movie(I, F)', 'true,false,false,false': 'movie(M, B)', 'true,false': 'movie(D, A), movie(D, E), workedunder(E, F)', 'true,false,true,false': 'movie(G, F), movie(H, B), movie(H, E)', 'true,false,true': 'movie(D, B)', 'true,false,false': 'movie(J, B), movie(J, K), workedunder(L, K)'}, {'true,true': [0.253, 10, 69], 'true,false,true,false,false,false': [0.999, 2, 2], 'true,false,false,true': [0.917, 1, 5], 'true,false,true,false,true': [0.613, 3, 1], 'true,false,false,false,true': [0.267, 2, 24], 'false': [3.94e-08, 93, 0], 'true,false,false,false,false': [0.894, 1, 4], 'true,false,true,true': [0.0, 0, 6], 'true,false,true,false,false,true': [0.549, 1, 2]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), genre(C, D), genre(A, D)', 'true,false,false,true': 'movie(K, B)', 'true,false,false,true,false': 'movie(I, L), actor(L), movie(M, B)', 'true,true': 'movie(E, B)', 'true,true,true': 'workedunder(B, F), movie(E, F)', 'true,false': 'workedunder(B, G), movie(H, B), movie(H, A)', 'true,false,false': 'movie(I, A), workedunder(B, J)'}, {'true,true,true,true': [0.764, 1, 2], 'true,false,false,false': [0.301, 12, 69], 'true,true,false': [0.041, 0, 3], 'true,false,true': [2.36e-08, 0, 29], 'true,false,false,true,false,false': [0.113, 0, 4], 'false': [0.0, 93, 0], 'true,true,true,false': [0.855, 1, 3], 'true,false,false,true,false,true': [0.849, 5, 1], 'true,false,false,true,true': [0.726, 1, 2]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(B, A) :- actor(B), director(A).;true;false', '0;true;movie(C, A), movie(C, B).;false;true', '0;true,false,false,false;workedunder(B, J), movie(K, J), movie(K, B).;false;false', '0;true,false,true,true,false;movie(F, E).;false;false', '0;true,false;movie(D, A), movie(D, E), actor(E).;true;true', '0;true,false,true,true;workedunder(B, G).;false;true', '0;true,false,true;movie(F, B).;true;false', '0;true,false,false;workedunder(B, H), movie(I, A).;false;true', '1;;workedunder(B, A) :- actor(B), director(A).;true;false', '1;true;movie(C, A), movie(C, B).;false;true', '1;true,false,true,true,false;movie(F, E).;false;false', '1;true,false,false,true;genre(A, J), genre(H, J).;false;false', '1;true,false;movie(D, A), movie(D, E), actor(E).;true;true', '1;true,false,true,true;workedunder(B, G).;false;true', '1;true,false,true;movie(F, B).;true;false', '1;true,false,false;workedunder(B, H), genre(H, I), genre(A, I).;true;false', '2;;workedunder(B, A) :- actor(B), director(A).;true;false', '2;true;movie(C, A), movie(C, B), workedunder(B, D).;false;true', '2;true,false,true,false,false,false;workedunder(B, L).;false;false', '2;true,false,true,false,false;movie(E, I), workedunder(I, J).;true;true', '2;true,false;movie(E, A), movie(F, B).;true;false', '2;true,false,true,false,false,true;movie(K, J).;false;false', '2;true,false,true,false;workedunder(B, G), movie(E, H), actor(H).;false;true', '2;true,false,true;movie(E, B).;false;true', '3;;workedunder(B, A) :- actor(B), director(A).;true;false', '3;true;movie(C, A), movie(C, B), workedunder(B, D).;false;true', '3;true,false,true,false,true;movie(E, I), workedunder(I, J).;false;false', '3;true,false,true,false,false;movie(E, K), workedunder(K, L), movie(M, L).;false;true', '3;true,false;movie(E, A), movie(F, B).;true;false', '3;true,false,true,false;workedunder(B, G), movie(F, H), director(H).;true;true', '3;true,false,true,false,false,false;movie(E, N), workedunder(N, P).;false;false', '3;true,false,true;movie(E, B).;false;true', '4;;workedunder(B, A) :- actor(B), director(A).;true;false', '4;true;workedunder(B, C).;false;true', '4;true,false,true,false,false;movie(I, F).;false;false', '4;true,false,false,true;movie(K, A), movie(K, L), actor(L).;false;false', '4;true,false;movie(D, A), movie(D, E), workedunder(E, F).;true;true', '4;true,false,true,false;movie(G, F), movie(H, B), movie(H, E).;false;true', '4;true,false,true;movie(D, B).;false;true', '4;true,false,false;movie(J, B).;true;false', '5;;workedunder(B, A) :- actor(B), director(A).;true;false', '5;true;workedunder(B, C), genre(C, D), genre(A, D).;false;true', '5;true,false,false,false;workedunder(B, L).;false;false', '5;true,false,false,true,false;workedunder(G, I), movie(J, G), movie(J, B).;false;true', '5;true,false,false,true;workedunder(G, H), movie(F, H).;false;true', '5;true,false,false,true,false,false;workedunder(B, K).;false;false', '5;true,false;movie(E, A), movie(E, B).;false;true', '5;true,false,false;movie(F, A), movie(F, G), actor(G).;true;true', '6;;workedunder(B, A) :- actor(B), director(A).;true;false', '6;true;workedunder(B, C).;false;true', '6;true,false,true,false,false;movie(H, F).;false;false', '6;true,false,false,true;movie(J, A), movie(I, K), workedunder(K, L).;false;false', '6;true,false;movie(D, A), movie(D, E), workedunder(E, F).;true;true', '6;true,false,true,false;movie(G, F), movie(G, E).;false;true', '6;true,false,true;movie(D, B).;false;true', '6;true,false,false;movie(I, B).;true;false', '7;;workedunder(B, A) :- actor(B), director(A).;true;false', '7;true;workedunder(B, C), movie(D, A), movie(D, B).;false;true', '7;true,false,true,false,false,false;workedunder(B, K).;false;true', '7;true,false,true,false,false;workedunder(B, I), movie(E, J), actor(J).;false;true', '7;true,false;movie(E, A), movie(F, B).;true;false', '7;true,false,true,false;movie(E, B).;false;true', '7;true,false,true,false,false,false,false;movie(F, L), director(L).;false;false', '7;true,false,true;movie(E, B), movie(E, G), workedunder(G, H).;false;true', '8;;workedunder(B, A) :- actor(B), director(A).;true;false', '8;true;workedunder(B, C).;false;true', '8;true,false,true,false,false;movie(I, F).;false;false', '8;true,false,false,false;movie(M, B).;false;false', '8;true,false;movie(D, A), movie(D, E), workedunder(E, F).;true;true', '8;true,false,true,false;movie(G, F), movie(H, B), movie(H, E).;false;true', '8;true,false,true;movie(D, B).;false;true', '8;true,false,false;movie(J, B), movie(J, K), workedunder(L, K).;false;true', '9;;workedunder(B, A) :- actor(B), director(A).;true;false', '9;true;workedunder(B, C), genre(C, D), genre(A, D).;true;true', '9;true,false,false,true;movie(K, B).;false;true', '9;true,false,false,true,false;movie(I, L), actor(L), movie(M, B).;false;false', '9;true,true;movie(E, B).;true;false', '9;true,true,true;workedunder(B, F), movie(E, F).;false;false', '9;true,false;workedunder(B, G), movie(H, B), movie(H, A).;false;true', '9;true,false,false;movie(I, A), workedunder(B, J).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099509;  // std dev = 1,07e-06, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, B), movie(D, E), actor(E) )
%   | | then if ( movie(F, A) )
%   | | | then if ( workedunder(A, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, E) )
%   | | | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048802;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109572;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, B), movie(D, E), actor(E) )
%   | | then if ( movie(F, A) )
%   | | | then if ( workedunder(A, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, E) )
%   | | | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 5,96e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A), workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5553664367462832;  // std dev = 5,84e-07, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | | | else if ( workedunder(A, G), movie(E, H), actor(H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(E, I), workedunder(I, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(A, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360629;  // std dev = 8,94e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A), workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.41751358415831047;  // std dev = 8,43e-08, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | | | else if ( workedunder(A, G), movie(F, H), director(H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(E, I), workedunder(I, J), movie(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(E, L), workedunder(L, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.10159632948783633;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783642;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B), movie(D, E), workedunder(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A) )
%   | | | then if ( movie(H, B), movie(H, I), actor(I) )
%   | | | | then return 0.28513207015056946;  // std dev = 1,811, 244,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=223 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926075;  // std dev = 7,45e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), genre(C, D), genre(B, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(E, A) )
%   | | then return 0.26199320987234537;  // std dev = 7,30e-08, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | | else if ( movie(F, B), movie(F, G), actor(G) )
%   | | | then if ( workedunder(G, H), movie(F, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(G, I), movie(J, G), movie(J, A) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(A, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.11961549695894866;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 7,15e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B), movie(D, E), workedunder(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A) )
%   | | | then if ( movie(H, B), movie(G, I), workedunder(I, J) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.1868389100912415;  // std dev = 1,411, 244,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=223 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109157;  // std dev = 8,43e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), movie(D, B), movie(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(E, A), movie(E, G), workedunder(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(E, A) )
%   | | | | then return 0.18475371975429772;  // std dev = 2,27e-07, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | | | | else if ( workedunder(A, I), movie(E, J), actor(J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(A, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( movie(F, L), director(L) )
%   | | | | | | | then return -0.1268775980251111;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333685;  // std dev = 8,82e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B), movie(D, E), workedunder(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(G, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(J, A) )
%   | | | | then return 0.13511808780731363;  // std dev = 1,192, 244,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=223 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 6,99e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), genre(C, D), genre(B, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), movie(F, A), movie(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B), workedunder(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11816206392760929;  // std dev = 1,179, 244,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=223 */
%   else return -0.06419184008202626;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104547
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.768 seconds
Total inference time: 0.677 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104547
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.677 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,true,false': 'movie(F, E)', 'true,false': 'movie(D, B), movie(D, E), actor(E)', 'true,false,true,true': 'workedunder(A, G)', 'true,false,true': 'movie(F, A)'}, {'true,true': [1.07e-06, 0, 223], 'true,false,true,true,true': [0.0, 0, 0], 'true,false,true,true,false,false': [0.0, 16, 0], 'false': [0.0, 202, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,true,false': 'movie(F, E)', 'true,false': 'movie(D, B), movie(D, E), actor(E)', 'true,false,true,true': 'workedunder(A, G)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 223], 'true,false,true,true,true': [0.0, 0, 0], 'true,false,true,true,false,false': [7.45e-09, 16, 0], 'false': [5.96e-08, 202, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A), workedunder(A, D)', 'true,false,true,false,false,false': 'workedunder(A, K)', 'true,false,true,false,false': 'movie(E, I), workedunder(I, J)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true,false': 'workedunder(A, G), movie(E, H), actor(H)', 'true,false,true': 'movie(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'false': [8.94e-08, 202, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [5.84e-07, 0, 223], 'true,false,true,false,false,false,false': [1.29e-08, 21, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A), workedunder(A, D)', 'true,false,true,false,false,false': 'movie(E, L), workedunder(L, M)', 'true,false,true,false,false': 'movie(E, I), workedunder(I, J), movie(K, J)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true,false': 'workedunder(A, G), movie(F, H), director(H)', 'true,false,true': 'movie(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 202, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [8.43e-08, 0, 223], 'true,false,true,false,false,false,false': [0.0, 21, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true': 'movie(H, B), movie(H, I), actor(I)', 'true,false': 'movie(D, B), movie(D, E), workedunder(E, F)', 'true,false,false': 'movie(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false': [0.0, 0, 0], 'false': [7.45e-08, 202, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [1.811, 21, 223]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), genre(C, D), genre(B, D)', 'true,false,false,true,false': 'workedunder(G, I), movie(J, G), movie(J, A)', 'true,false,false,true': 'workedunder(G, H), movie(F, H)', 'true,false,false,true,false,false': 'workedunder(A, K)', 'true,false': 'movie(E, B), movie(E, A)', 'true,false,false': 'movie(F, B), movie(F, G), actor(G)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [7.3e-08, 0, 223], 'true,false,false,true,false,false,false': [0.0, 21, 0], 'true,false,false,true,false,false,true': [0.0, 0, 0], 'false': [7.15e-08, 202, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true': 'movie(H, B), movie(G, I), workedunder(I, J)', 'true,false': 'movie(D, B), movie(D, E), workedunder(E, F)', 'true,false,false': 'movie(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false': [1.411, 21, 223], 'false': [8.43e-08, 202, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), movie(D, B), movie(D, A)', 'true,false,true,false,false,false': 'workedunder(A, K)', 'true,false,true,false,false': 'workedunder(A, I), movie(E, J), actor(J)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true,false': 'movie(E, A)', 'true,false,true,false,false,false,false': 'movie(F, L), director(L)', 'true,false,true': 'movie(E, A), movie(E, G), workedunder(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,false,true': [2.27e-07, 0, 223], 'true,false,true,false,false,false,false,false': [0.0, 0, 0], 'false': [8.82e-08, 202, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,false,false,false,true': [0.0, 21, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,false': 'movie(J, A)', 'true,false': 'movie(D, B), movie(D, E), workedunder(E, F)', 'true,false,false': 'movie(G, A), movie(G, H), workedunder(I, H)'}, {'true,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [1.192, 21, 223], 'false': [6.99e-08, 202, 0], 'true,false,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), genre(C, D), genre(B, D)', 'true,false': 'workedunder(A, E), movie(F, A), movie(F, B)', 'true,false,false': 'movie(G, B), workedunder(A, H)'}, {'true,true': [0.0, 0, 0], 'false': [0.0, 202, 0], 'true,false,false,false': [1.179, 21, 223], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false;movie(D, B), movie(D, E), actor(E).;false;false', '1;;workedunder(A, B) :- actor(A), director(B).;true;false', '1;true;movie(C, B), movie(C, A).;false;true', '1;true,false;movie(D, B), movie(D, E), actor(E).;false;false', '2;;workedunder(A, B) :- actor(A), director(B).;false;false', '3;;workedunder(A, B) :- actor(A), director(B).;false;false', '4;;workedunder(A, B) :- actor(A), director(B).;false;false', '5;;workedunder(A, B) :- actor(A), director(B).;false;false', '6;;workedunder(A, B) :- actor(A), director(B).;false;false', '7;;workedunder(A, B) :- actor(A), director(B).;false;false', '8;;workedunder(A, B) :- actor(A), director(B).;false;false', '9;;workedunder(A, B) :- actor(A), director(B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,false', 0), ('true,false,true,true,true', 0), ('true,false,false', 0)]
Tree #2: [('true,false,true,false', 0), ('true,false,true,true,true', 0), ('true,false,false', 0)]
Tree #3: [('true,true', 0), ('true,false,true,false,true', 0), ('true,false,false', 0), ('true,false,true,false,false,true', 0), ('true,false,true,false,false,false,true', 0)]
Tree #4: [('true,true', 0), ('true,false,true,false,true', 0), ('true,false,false', 0), ('true,false,true,false,false,true', 0), ('true,false,true,false,false,false,true', 0)]
Tree #5: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false', 0), ('true,false,true', 0), ('true,false,false,true,true', 0.9139344262295082)]
Tree #6: [('true,true', 0), ('true,false,false,true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,false,false,true', 0)]
Tree #7: [('true,true', 0), ('true,false,false,false', 0), ('true,false,true', 0), ('true,false,false,true,true', 0), ('true,false,false,true,false', 0.9139344262295082)]
Tree #8: [('true,true', 0), ('true,false,true,false,false,false,true', 0), ('true,false,true,false,false,false,false,false', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #9: [('true,true', 0), ('true,false,false,false,false', 0), ('true,false,true', 0), ('true,false,false,true', 0), ('true,false,false,false,true', 0.9139344262295082)]
Tree #10: [('true,true', 0), ('true,false,true', 0), ('true,false,false,true', 0), ('true,false,false,false', 0.9139344262295082)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099509;  // std dev = 1,07e-06, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, B), movie(D, E), actor(E) )
%   | | then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048802;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109572;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, B), movie(D, E), actor(E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 5,96e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.4979019321817841;  // std dev = 2,925, 244,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=223 */
%   else return -0.11231637819360629;  // std dev = 8,94e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.37958033761692317;  // std dev = 2,645, 244,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=223 */
%   else return -0.10159632948783642;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.29234104276610146;  // std dev = 2,520, 244,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=223 */
%   else return -0.09269127618926075;  // std dev = 7,45e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.23043016620833628;  // std dev = 2,493, 244,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=223 */
%   else return -0.08518475138839678;  // std dev = 7,15e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.18598159859116103;  // std dev = 2,517, 244,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=223 */
%   else return -0.07877675473109157;  // std dev = 8,43e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.15321272593573995;  // std dev = 2,566, 244,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=223 */
%   else return -0.07324622576333685;  // std dev = 8,82e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.12836954021627014;  // std dev = 2,623, 244,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=223 */
%   else return -0.06842697784420265;  // std dev = 6,99e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.10905227163473592;  // std dev = 2,681, 244,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=223 */
%   else return -0.06419184008202626;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.144283
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.212 seconds
Total inference time: 0.544 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 12.201
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101029
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.681 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 1, Type: transfer, Total folds for small set: 2, Time: 00:21:01
{'CLL': -0.101029, 'Recall': 1.0, 'Learning time': 12.201, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 60000, 'Total time': 26.832558155059814, 'Generating mappings time': 2.686262369155884, 'Finding best mapping': 21.44646167755127, 'Generating paths time': 2.680802822113037, 'Knowledge compiling time': 0.01902318000793457}, 'Parameter Learning Results': {'CLL': -0.101029, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.681}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995108;  // std dev = 5,72e-07, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( actor(A) )
%   | | then return 0.858148935099511;  // std dev = 5,72e-07, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048827;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( actor(A) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839158;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462834;  // std dev = 4,54e-07, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( actor(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,38e-07, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1123163781936065;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830947;  // std dev = 3,04e-07, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( actor(A) )
%   | | then return 0.4175135841583095;  // std dev = 3,04e-07, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1015963294878365;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601501;  // std dev = 1,63e-07, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( actor(A) )
%   | | then return 0.3207118471601501;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926062;  // std dev = 8,69e-08, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694897;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( actor(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839678;  // std dev = 7,45e-08, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253548;  // std dev = 1,69e-07, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( actor(A) )
%   | | then return 0.2097577156325355;  // std dev = 1,69e-07, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0787767547310915;  // std dev = 7,45e-08, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( actor(A) )
%   | | then return 0.1770964977452774;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333673;  // std dev = 1,12e-07, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367133;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( actor(A) )
%   | | then return 0.15274385809367133;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420264;  // std dev = 7,88e-08, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.13400703000801087;  // std dev = 7,30e-08, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( actor(A) )
%   | | then return 0.13400703000801087;  // std dev = 7,15e-08, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202626;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.541 seconds
Total inference time: 0.547 seconds
AUC ROC: 1.0


Dataset: uwcse,imdb, Run: 1, Fold: 1, Type: scratch, Total folds for small set: 2, Time: 00:21:09
{'CLL': -0.094637, 'Recall': 1.0, 'Learning time': 6.541, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.547}


Best mapping found: ['professor(A) -> actor(A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> movie(A,B)', 'publication(A,B) -> movie(A,B)', 'yearsinprogram(A,B) -> genre(A,B)', 'student(A) -> director(A)'] 

Tranferred structured tree: [['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,false,false': 'workedunder(B, J), movie(K, J), movie(K, B)', 'true,false,true,true,false': 'movie(F, E)', 'true,false': 'movie(D, A), movie(D, E), actor(E)', 'true,false,true,true': 'workedunder(B, G)', 'true,false,true': 'movie(F, B)', 'true,false,false': 'workedunder(B, H), movie(I, A)'}, {'true,false,true,true,false,false': [1.225, 3, 3], 'true,false,false,true': [2.11e-08, 0, 3], 'true,false,true,true,true': [0.913, 5, 1], 'true,true': [0.152, 1, 41], 'true,false,false,false,true': [0.866, 1, 3], 'false': [7.88e-08, 93, 0], 'true,false,false,false,false': [0.314, 7, 56], 'true,false,true,false': [0.913, 1, 5], 'true,false,true,true,false,true': [0.816, 2, 1]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,true,false': 'movie(F, E)', 'true,false,false,true': 'genre(A, J), genre(H, J)', 'true,false': 'movie(D, A), movie(D, E), actor(E)', 'true,false,true,true': 'workedunder(B, G)', 'true,false,true': 'movie(F, B)', 'true,false,false': 'workedunder(B, H), genre(H, I), genre(A, I)'}, {'true,true': [0.152, 1, 41], 'true,false,false,false': [0.298, 6, 55], 'true,false,false,true,false': [1.14, 2, 4], 'true,false,true,true,true': [0.913, 5, 1], 'true,false,true,true,false,false': [1.225, 3, 3], 'false': [0.0, 93, 0], 'true,false,true,false': [0.913, 1, 5], 'true,false,true,true,false,true': [0.816, 2, 1], 'true,false,false,true,true': [0.021, 0, 3]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, A), movie(C, B), workedunder(B, D)', 'true,false,true,false,false,false': 'workedunder(B, L)', 'true,false,true,false,false': 'movie(E, I), workedunder(I, J)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false,false,true': 'movie(K, J)', 'true,false,true,false': 'workedunder(B, G), movie(E, H), actor(H)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 29], 'true,false,true,false,true': [0.913, 5, 1], 'true,false,true,false,false,true,false': [1.027, 2, 2], 'true,false,true,false,false,true,true': [0.837, 3, 1], 'true,false,true,false,false,false,true': [1.05e-08, 0, 3], 'false': [6.66e-08, 93, 0], 'true,false,true,true': [0.266, 1, 12], 'true,false,true,false,false,false,false': [0.939, 1, 4], 'true,false,false': [0.316, 8, 61]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, A), movie(C, B), workedunder(B, D)', 'true,false,true,false,true': 'movie(E, I), workedunder(I, J)', 'true,false,true,false,false': 'movie(E, K), workedunder(K, L), movie(M, L)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(B, G), movie(F, H), director(H)', 'true,false,true,false,false,false': 'movie(E, N), workedunder(N, P)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 29], 'true,false,true,false,true,false': [0.504, 3, 1], 'true,false,true,false,true,true': [0.816, 2, 1], 'true,false,true,false,false,false,true': [1.031, 2, 2], 'false': [5.48e-08, 93, 0], 'true,false,false': [0.316, 8, 61], 'true,false,true,true': [0.266, 1, 12], 'true,false,true,false,false,true': [0.836, 3, 1], 'true,false,true,false,false,false,false': [0.36, 1, 6]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,true,false,false': 'movie(I, F)', 'true,false,false,true': 'movie(K, A), movie(K, L), actor(L)', 'true,false': 'movie(D, A), movie(D, E), workedunder(E, F)', 'true,false,true,false': 'movie(G, F), movie(H, B), movie(H, E)', 'true,false,true': 'movie(D, B)', 'true,false,false': 'movie(J, B)'}, {'true,true': [0.265, 10, 69], 'true,false,true,false,false,false': [1.034, 2, 2], 'true,false,false,false': [0.894, 1, 4], 'true,false,false,true,false': [0.318, 3, 23], 'true,false,true,false,true': [0.709, 3, 1], 'false': [1.05e-08, 93, 0], 'true,false,true,true': [1.05e-08, 0, 6], 'true,false,true,false,false,true': [0.721, 1, 2], 'true,false,false,true,true': [0.208, 0, 6]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), genre(C, D), genre(A, D)', 'true,false,false,false': 'workedunder(B, L)', 'true,false,false,true,false': 'workedunder(G, I), movie(J, G), movie(J, B)', 'true,false,false,true': 'workedunder(G, H), movie(F, H)', 'true,false,false,true,false,false': 'workedunder(B, K)', 'true,false': 'movie(E, A), movie(E, B)', 'true,false,false': 'movie(F, A), movie(F, G), actor(G)'}, {'true,true': [0.815, 1, 4], 'true,false,false,true,false,true': [1.014, 3, 2], 'true,false,false,true,false,false,false': [1.053, 3, 3], 'true,false,false,true,false,false,true': [0.71, 5, 1], 'true,false,false,false,true': [0.281, 3, 31], 'false': [3.33e-08, 93, 0], 'true,false,false,false,false': [0.334, 4, 27], 'true,false,true': [0.135, 1, 41], 'true,false,false,true,true': [0.289, 0, 4]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,true,false,false': 'movie(H, F)', 'true,false,false,true': 'movie(J, A), movie(I, K), workedunder(K, L)', 'true,false': 'movie(D, A), movie(D, E), workedunder(E, F)', 'true,false,true,false': 'movie(G, F), movie(G, E)', 'true,false,true': 'movie(D, B)', 'true,false,false': 'movie(I, B)'}, {'true,true': [0.255, 10, 69], 'true,false,true,false,false,false': [1.023, 2, 2], 'true,false,false,false': [0.894, 1, 4], 'true,false,false,true,false': [0.281, 2, 21], 'true,false,true,false,true': [0.574, 1, 3], 'false': [4.71e-08, 93, 0], 'true,false,true,true': [0.0, 0, 6], 'true,false,true,false,false,true': [0.336, 3, 0], 'true,false,false,true,true': [0.318, 1, 8]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), movie(D, A), movie(D, B)', 'true,false,true,false,false,false': 'workedunder(B, K)', 'true,false,true,false,false': 'workedunder(B, I), movie(E, J), actor(J)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'movie(E, B)', 'true,false,true,false,false,false,false': 'movie(F, L), director(L)', 'true,false,true': 'movie(E, B), movie(E, G), workedunder(G, H)'}, {'true,true': [0.0, 0, 29], 'true,false,true,false,true': [0.274, 1, 6], 'true,false,true,false,false,true': [0.851, 5, 1], 'true,false,true,false,false,false,true': [0.054, 0, 3], 'false': [0.0, 93, 0], 'true,false,false': [0.312, 8, 61], 'true,false,true,true': [0.0, 0, 6], 'true,false,true,false,false,false,false,false': [0.49, 2, 1], 'true,false,true,false,false,false,false,true': [0.453, 4, 6]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,true,false,false': 'movie(I, F)', 'true,false,false,false': 'movie(M, B)', 'true,false': 'movie(D, A), movie(D, E), workedunder(E, F)', 'true,false,true,false': 'movie(G, F), movie(H, B), movie(H, E)', 'true,false,true': 'movie(D, B)', 'true,false,false': 'movie(J, B), movie(J, K), workedunder(L, K)'}, {'true,true': [0.253, 10, 69], 'true,false,true,false,false,false': [0.999, 2, 2], 'true,false,false,true': [0.917, 1, 5], 'true,false,true,false,true': [0.613, 3, 1], 'true,false,false,false,true': [0.267, 2, 24], 'false': [3.94e-08, 93, 0], 'true,false,false,false,false': [0.894, 1, 4], 'true,false,true,true': [0.0, 0, 6], 'true,false,true,false,false,true': [0.549, 1, 2]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), genre(C, D), genre(A, D)', 'true,false,false,true': 'movie(K, B)', 'true,false,false,true,false': 'movie(I, L), actor(L), movie(M, B)', 'true,true': 'movie(E, B)', 'true,true,true': 'workedunder(B, F), movie(E, F)', 'true,false': 'workedunder(B, G), movie(H, B), movie(H, A)', 'true,false,false': 'movie(I, A), workedunder(B, J)'}, {'true,true,true,true': [0.764, 1, 2], 'true,false,false,false': [0.301, 12, 69], 'true,true,false': [0.041, 0, 3], 'true,false,true': [2.36e-08, 0, 29], 'true,false,false,true,false,false': [0.113, 0, 4], 'false': [0.0, 93, 0], 'true,true,true,false': [0.855, 1, 3], 'true,false,false,true,false,true': [0.849, 5, 1], 'true,false,false,true,true': [0.726, 1, 2]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(B, A) :- actor(B), director(A).;true;false', '0;true;movie(C, A), movie(C, B).;false;true', '0;true,false,false,false;workedunder(B, J), movie(K, J), movie(K, B).;false;false', '0;true,false,true,true,false;movie(F, E).;false;false', '0;true,false;movie(D, A), movie(D, E), actor(E).;true;true', '0;true,false,true,true;workedunder(B, G).;false;true', '0;true,false,true;movie(F, B).;true;false', '0;true,false,false;workedunder(B, H), movie(I, A).;false;true', '1;;workedunder(B, A) :- actor(B), director(A).;true;false', '1;true;movie(C, A), movie(C, B).;false;true', '1;true,false,true,true,false;movie(F, E).;false;false', '1;true,false,false,true;genre(A, J), genre(H, J).;false;false', '1;true,false;movie(D, A), movie(D, E), actor(E).;true;true', '1;true,false,true,true;workedunder(B, G).;false;true', '1;true,false,true;movie(F, B).;true;false', '1;true,false,false;workedunder(B, H), genre(H, I), genre(A, I).;true;false', '2;;workedunder(B, A) :- actor(B), director(A).;true;false', '2;true;movie(C, A), movie(C, B), workedunder(B, D).;false;true', '2;true,false,true,false,false,false;workedunder(B, L).;false;false', '2;true,false,true,false,false;movie(E, I), workedunder(I, J).;true;true', '2;true,false;movie(E, A), movie(F, B).;true;false', '2;true,false,true,false,false,true;movie(K, J).;false;false', '2;true,false,true,false;workedunder(B, G), movie(E, H), actor(H).;false;true', '2;true,false,true;movie(E, B).;false;true', '3;;workedunder(B, A) :- actor(B), director(A).;true;false', '3;true;movie(C, A), movie(C, B), workedunder(B, D).;false;true', '3;true,false,true,false,true;movie(E, I), workedunder(I, J).;false;false', '3;true,false,true,false,false;movie(E, K), workedunder(K, L), movie(M, L).;false;true', '3;true,false;movie(E, A), movie(F, B).;true;false', '3;true,false,true,false;workedunder(B, G), movie(F, H), director(H).;true;true', '3;true,false,true,false,false,false;movie(E, N), workedunder(N, P).;false;false', '3;true,false,true;movie(E, B).;false;true', '4;;workedunder(B, A) :- actor(B), director(A).;true;false', '4;true;workedunder(B, C).;false;true', '4;true,false,true,false,false;movie(I, F).;false;false', '4;true,false,false,true;movie(K, A), movie(K, L), actor(L).;false;false', '4;true,false;movie(D, A), movie(D, E), workedunder(E, F).;true;true', '4;true,false,true,false;movie(G, F), movie(H, B), movie(H, E).;false;true', '4;true,false,true;movie(D, B).;false;true', '4;true,false,false;movie(J, B).;true;false', '5;;workedunder(B, A) :- actor(B), director(A).;true;false', '5;true;workedunder(B, C), genre(C, D), genre(A, D).;false;true', '5;true,false,false,false;workedunder(B, L).;false;false', '5;true,false,false,true,false;workedunder(G, I), movie(J, G), movie(J, B).;false;true', '5;true,false,false,true;workedunder(G, H), movie(F, H).;false;true', '5;true,false,false,true,false,false;workedunder(B, K).;false;false', '5;true,false;movie(E, A), movie(E, B).;false;true', '5;true,false,false;movie(F, A), movie(F, G), actor(G).;true;true', '6;;workedunder(B, A) :- actor(B), director(A).;true;false', '6;true;workedunder(B, C).;false;true', '6;true,false,true,false,false;movie(H, F).;false;false', '6;true,false,false,true;movie(J, A), movie(I, K), workedunder(K, L).;false;false', '6;true,false;movie(D, A), movie(D, E), workedunder(E, F).;true;true', '6;true,false,true,false;movie(G, F), movie(G, E).;false;true', '6;true,false,true;movie(D, B).;false;true', '6;true,false,false;movie(I, B).;true;false', '7;;workedunder(B, A) :- actor(B), director(A).;true;false', '7;true;workedunder(B, C), movie(D, A), movie(D, B).;false;true', '7;true,false,true,false,false,false;workedunder(B, K).;false;true', '7;true,false,true,false,false;workedunder(B, I), movie(E, J), actor(J).;false;true', '7;true,false;movie(E, A), movie(F, B).;true;false', '7;true,false,true,false;movie(E, B).;false;true', '7;true,false,true,false,false,false,false;movie(F, L), director(L).;false;false', '7;true,false,true;movie(E, B), movie(E, G), workedunder(G, H).;false;true', '8;;workedunder(B, A) :- actor(B), director(A).;true;false', '8;true;workedunder(B, C).;false;true', '8;true,false,true,false,false;movie(I, F).;false;false', '8;true,false,false,false;movie(M, B).;false;false', '8;true,false;movie(D, A), movie(D, E), workedunder(E, F).;true;true', '8;true,false,true,false;movie(G, F), movie(H, B), movie(H, E).;false;true', '8;true,false,true;movie(D, B).;false;true', '8;true,false,false;movie(J, B), movie(J, K), workedunder(L, K).;false;true', '9;;workedunder(B, A) :- actor(B), director(A).;true;false', '9;true;workedunder(B, C), genre(C, D), genre(A, D).;true;true', '9;true,false,false,true;movie(K, B).;false;true', '9;true,false,false,true,false;movie(I, L), actor(L), movie(M, B).;false;false', '9;true,true;movie(E, B).;true;false', '9;true,true,true;workedunder(B, F), movie(E, F).;false;false', '9;true,false;workedunder(B, G), movie(H, B), movie(H, A).;false;true', '9;true,false,false;movie(I, A), workedunder(B, J).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1,08e-06, 268,000 (wgt'ed) examples reached here.  /* #pos=268 */
%   | else if ( movie(D, B), movie(D, E), actor(E) )
%   | | then if ( movie(F, A) )
%   | | | then if ( workedunder(A, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, E) )
%   | | | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048838;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 268,000 (wgt'ed) examples reached here.  /* #pos=268 */
%   | else if ( movie(D, B), movie(D, E), actor(E) )
%   | | then if ( movie(F, A) )
%   | | | then if ( workedunder(A, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, E) )
%   | | | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283917;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A), workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5553664367462832;  // std dev = 3,58e-07, 268,000 (wgt'ed) examples reached here.  /* #pos=268 */
%   | | | else if ( workedunder(A, G), movie(E, H), actor(H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(E, I), workedunder(I, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(A, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360663;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A), workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.41751358415831114;  // std dev = 0,000, 268,000 (wgt'ed) examples reached here.  /* #pos=268 */
%   | | | else if ( workedunder(A, G), movie(F, H), director(H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(E, I), workedunder(I, J), movie(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(E, L), workedunder(L, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878365;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B), movie(D, E), workedunder(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A) )
%   | | | then if ( movie(H, B), movie(H, I), actor(I) )
%   | | | | then return 0.29469346876753033;  // std dev = 1,698, 286,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=268 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0926912761892606;  // std dev = 9,66e-08, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), genre(C, D), genre(B, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(E, A) )
%   | | then return 0.2601486985507986;  // std dev = 0,000, 268,000 (wgt'ed) examples reached here.  /* #pos=268 */
%   | | else if ( movie(F, B), movie(F, G), actor(G) )
%   | | | then if ( workedunder(G, H), movie(F, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(G, I), movie(J, G), movie(J, A) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(A, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.12062605288639897;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8,02e-08, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B), movie(D, E), workedunder(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A) )
%   | | | then if ( movie(H, B), movie(G, I), workedunder(I, J) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.19302184853651025;  // std dev = 1,321, 286,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=268 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109147;  // std dev = 7,30e-08, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), movie(D, B), movie(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(E, A), movie(E, G), workedunder(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(E, A) )
%   | | | | then return 0.1826692982410526;  // std dev = 3,50e-07, 268,000 (wgt'ed) examples reached here.  /* #pos=268 */
%   | | | | else if ( workedunder(A, I), movie(E, J), actor(J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(A, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( movie(F, L), director(L) )
%   | | | | | | | then return -0.128518794276322;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333667;  // std dev = 1,29e-07, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B), movie(D, E), workedunder(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(G, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(J, A) )
%   | | | | then return 0.13985480330961222;  // std dev = 1,116, 286,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=268 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 7,15e-08, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), genre(C, D), genre(B, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), movie(F, A), movie(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B), workedunder(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12238937965641018;  // std dev = 1,105, 286,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=268 */
%   else return -0.06419184008202626;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103392
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.539 seconds
Total inference time: 0.69 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103392
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.69 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,true,false': 'movie(F, E)', 'true,false': 'movie(D, B), movie(D, E), actor(E)', 'true,false,true,true': 'workedunder(A, G)', 'true,false,true': 'movie(F, A)'}, {'true,true': [1.08e-06, 0, 268], 'true,false,true,true,true': [0.0, 0, 0], 'true,false,true,true,false,false': [0.0, 13, 0], 'false': [0.0, 250, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,true,false': 'movie(F, E)', 'true,false': 'movie(D, B), movie(D, E), actor(E)', 'true,false,true,true': 'workedunder(A, G)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 268], 'true,false,true,true,true': [0.0, 0, 0], 'true,false,true,true,false,false': [7.45e-09, 13, 0], 'false': [0.0, 250, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A), workedunder(A, D)', 'true,false,true,false,false,false': 'workedunder(A, K)', 'true,false,true,false,false': 'movie(E, I), workedunder(I, J)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true,false': 'workedunder(A, G), movie(E, H), actor(H)', 'true,false,true': 'movie(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 250, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [3.58e-07, 0, 268], 'true,false,true,false,false,false,false': [1.67e-08, 18, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A), workedunder(A, D)', 'true,false,true,false,false,false': 'movie(E, L), workedunder(L, M)', 'true,false,true,false,false': 'movie(E, I), workedunder(I, J), movie(K, J)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true,false': 'workedunder(A, G), movie(F, H), director(H)', 'true,false,true': 'movie(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 250, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 268], 'true,false,true,false,false,false,false': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true': 'movie(H, B), movie(H, I), actor(I)', 'true,false': 'movie(D, B), movie(D, E), workedunder(E, F)', 'true,false,false': 'movie(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false': [0.0, 0, 0], 'false': [9.66e-08, 250, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [1.698, 18, 268]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), genre(C, D), genre(B, D)', 'true,false,false,true,false': 'workedunder(G, I), movie(J, G), movie(J, A)', 'true,false,false,true': 'workedunder(G, H), movie(F, H)', 'true,false,false,true,false,false': 'workedunder(A, K)', 'true,false': 'movie(E, B), movie(E, A)', 'true,false,false': 'movie(F, B), movie(F, G), actor(G)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 268], 'true,false,false,true,false,false,false': [0.0, 18, 0], 'true,false,false,true,false,false,true': [0.0, 0, 0], 'false': [8.02e-08, 250, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true': 'movie(H, B), movie(G, I), workedunder(I, J)', 'true,false': 'movie(D, B), movie(D, E), workedunder(E, F)', 'true,false,false': 'movie(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false': [1.321, 18, 268], 'false': [7.3e-08, 250, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), movie(D, B), movie(D, A)', 'true,false,true,false,false,false': 'workedunder(A, K)', 'true,false,true,false,false': 'workedunder(A, I), movie(E, J), actor(J)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true,false': 'movie(E, A)', 'true,false,true,false,false,false,false': 'movie(F, L), director(L)', 'true,false,true': 'movie(E, A), movie(E, G), workedunder(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,false,true': [3.5e-07, 0, 268], 'true,false,true,false,false,false,false,false': [0.0, 0, 0], 'false': [1.29e-07, 250, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,false,false,false,true': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,false': 'movie(J, A)', 'true,false': 'movie(D, B), movie(D, E), workedunder(E, F)', 'true,false,false': 'movie(G, A), movie(G, H), workedunder(I, H)'}, {'true,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [1.116, 18, 268], 'false': [7.15e-08, 250, 0], 'true,false,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), genre(C, D), genre(B, D)', 'true,false': 'workedunder(A, E), movie(F, A), movie(F, B)', 'true,false,false': 'movie(G, B), workedunder(A, H)'}, {'true,true': [0.0, 0, 0], 'false': [0.0, 250, 0], 'true,false,false,false': [1.105, 18, 268], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false;movie(D, B), movie(D, E), actor(E).;false;false', '1;;workedunder(A, B) :- actor(A), director(B).;true;false', '1;true;movie(C, B), movie(C, A).;false;true', '1;true,false;movie(D, B), movie(D, E), actor(E).;false;false', '2;;workedunder(A, B) :- actor(A), director(B).;false;false', '3;;workedunder(A, B) :- actor(A), director(B).;false;false', '4;;workedunder(A, B) :- actor(A), director(B).;false;false', '5;;workedunder(A, B) :- actor(A), director(B).;false;false', '6;;workedunder(A, B) :- actor(A), director(B).;false;false', '7;;workedunder(A, B) :- actor(A), director(B).;false;false', '8;;workedunder(A, B) :- actor(A), director(B).;false;false', '9;;workedunder(A, B) :- actor(A), director(B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,false', 0), ('true,false,true,true,true', 0), ('true,false,false', 0)]
Tree #2: [('true,false,true,false', 0), ('true,false,true,true,true', 0), ('true,false,false', 0)]
Tree #3: [('true,true', 0), ('true,false,true,false,true', 0), ('true,false,false', 0), ('true,false,true,false,false,true', 0), ('true,false,true,false,false,false,true', 0)]
Tree #4: [('true,true', 0), ('true,false,true,false,true', 0), ('true,false,false', 0), ('true,false,true,false,false,true', 0), ('true,false,true,false,false,false,true', 0)]
Tree #5: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false', 0), ('true,false,true', 0), ('true,false,false,true,true', 0.9370629370629371)]
Tree #6: [('true,true', 0), ('true,false,false,true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,false,false,true', 0)]
Tree #7: [('true,true', 0), ('true,false,false,false', 0), ('true,false,true', 0), ('true,false,false,true,true', 0), ('true,false,false,true,false', 0.9370629370629371)]
Tree #8: [('true,true', 0), ('true,false,true,false,false,false,true', 0), ('true,false,true,false,false,false,false,false', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #9: [('true,true', 0), ('true,false,false,false,false', 0), ('true,false,true', 0), ('true,false,false,true', 0), ('true,false,false,false,true', 0.9370629370629371)]
Tree #10: [('true,true', 0), ('true,false,true', 0), ('true,false,false,true', 0), ('true,false,false,false', 0.9370629370629371)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1,08e-06, 268,000 (wgt'ed) examples reached here.  /* #pos=268 */
%   | else if ( movie(D, B), movie(D, E), actor(E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048838;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 268,000 (wgt'ed) examples reached here.  /* #pos=268 */
%   | else if ( movie(D, B), movie(D, E), actor(E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283917;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5133444414004157;  // std dev = 2,742, 286,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=268 */
%   else return -0.11231637819360663;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.38986124229387015;  // std dev = 2,474, 286,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=268 */
%   else return -0.1015963294878365;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2999505561268104;  // std dev = 2,357, 286,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=268 */
%   else return -0.0926912761892606;  // std dev = 9,66e-08, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.23691275672463896;  // std dev = 2,338, 286,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=268 */
%   else return -0.08518475138839678;  // std dev = 8,02e-08, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.19206086304815137;  // std dev = 2,368, 286,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=268 */
%   else return -0.07877675473109147;  // std dev = 7,30e-08, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.15919272767733894;  // std dev = 2,420, 286,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=268 */
%   else return -0.07324622576333667;  // std dev = 1,29e-07, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13436494030989143;  // std dev = 2,480, 286,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=268 */
%   else return -0.06842697784420261;  // std dev = 7,15e-08, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.11509490972591441;  // std dev = 2,541, 286,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=268 */
%   else return -0.06419184008202626;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.141327
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.54 seconds
Total inference time: 0.561 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 14.33
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099772
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.628 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 1, Type: transfer, Total folds for small set: 3, Time: 00:21:52
{'CLL': -0.099772, 'Recall': 1.0, 'Learning time': 14.33, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 60000, 'Total time': 26.81684160232544, 'Generating mappings time': 2.616069793701172, 'Finding best mapping': 21.55950403213501, 'Generating paths time': 2.620246410369873, 'Knowledge compiling time': 0.021013736724853516}, 'Parameter Learning Results': {'CLL': -0.099772, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.628}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995105;  // std dev = 6,95e-07, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else return 0.8445434929226392;  // std dev = 0,116, 147,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=145 */
%   else return -0.14185106490048827;  // std dev = 0,000, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109554;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else return 0.7086057584084651;  // std dev = 0,116, 147,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=145 */
%   else return -0.12544463852839177;  // std dev = 0,000, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462834;  // std dev = 4,54e-07, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else return 0.5477957694530526;  // std dev = 0,116, 147,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=145 */
%   else return -0.11231637819360676;  // std dev = 0,000, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.4175135841583093;  // std dev = 3,58e-07, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else return 0.41172103909417723;  // std dev = 0,116, 147,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=145 */
%   else return -0.10159632948783655;  // std dev = 0,000, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601499;  // std dev = 2,23e-07, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else return 0.3154045640955207;  // std dev = 0,116, 147,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=145 */
%   else return -0.0926912761892605;  // std dev = 8,94e-08, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694898;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else return 0.24985288271603548;  // std dev = 0,116, 147,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=145 */
%   else return -0.08518475138839678;  // std dev = 8,94e-08, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2097577156325354;  // std dev = 1,98e-07, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else return 0.2042984538048953;  // std dev = 0,116, 147,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=145 */
%   else return -0.07877675473109146;  // std dev = 6,50e-08, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else return 0.17148659766933375;  // std dev = 0,116, 147,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=145 */
%   else return -0.07324622576333677;  // std dev = 1,21e-07, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else return 0.1470029148893919;  // std dev = 0,116, 147,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=145 */
%   else return -0.06842697784420267;  // std dev = 3,65e-08, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.12546594805475722;  // std dev = 0,834, 286,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=268 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 1,83e-08, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
%   | else return -0.26270276010608584;  // std dev = 0,344, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097461
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.344 seconds
Total inference time: 0.535 seconds
AUC ROC: 1.0


Dataset: uwcse,imdb, Run: 1, Fold: 1, Type: scratch, Total folds for small set: 3, Time: 00:22:00
{'CLL': -0.097461, 'Recall': 1.0, 'Learning time': 7.344, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.535}


Best mapping found: ['professor(A) -> actor(A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> movie(A,B)', 'publication(A,B) -> movie(A,B)', 'yearsinprogram(A,B) -> genre(A,B)', 'student(A) -> director(A)'] 

Tranferred structured tree: [['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,false,false': 'workedunder(B, J), movie(K, J), movie(K, B)', 'true,false,true,true,false': 'movie(F, E)', 'true,false': 'movie(D, A), movie(D, E), actor(E)', 'true,false,true,true': 'workedunder(B, G)', 'true,false,true': 'movie(F, B)', 'true,false,false': 'workedunder(B, H), movie(I, A)'}, {'true,false,true,true,false,false': [1.225, 3, 3], 'true,false,false,true': [2.11e-08, 0, 3], 'true,false,true,true,true': [0.913, 5, 1], 'true,true': [0.152, 1, 41], 'true,false,false,false,true': [0.866, 1, 3], 'false': [7.88e-08, 93, 0], 'true,false,false,false,false': [0.314, 7, 56], 'true,false,true,false': [0.913, 1, 5], 'true,false,true,true,false,true': [0.816, 2, 1]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,true,false': 'movie(F, E)', 'true,false,false,true': 'genre(A, J), genre(H, J)', 'true,false': 'movie(D, A), movie(D, E), actor(E)', 'true,false,true,true': 'workedunder(B, G)', 'true,false,true': 'movie(F, B)', 'true,false,false': 'workedunder(B, H), genre(H, I), genre(A, I)'}, {'true,true': [0.152, 1, 41], 'true,false,false,false': [0.298, 6, 55], 'true,false,false,true,false': [1.14, 2, 4], 'true,false,true,true,true': [0.913, 5, 1], 'true,false,true,true,false,false': [1.225, 3, 3], 'false': [0.0, 93, 0], 'true,false,true,false': [0.913, 1, 5], 'true,false,true,true,false,true': [0.816, 2, 1], 'true,false,false,true,true': [0.021, 0, 3]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, A), movie(C, B), workedunder(B, D)', 'true,false,true,false,false,false': 'workedunder(B, L)', 'true,false,true,false,false': 'movie(E, I), workedunder(I, J)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false,false,true': 'movie(K, J)', 'true,false,true,false': 'workedunder(B, G), movie(E, H), actor(H)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 29], 'true,false,true,false,true': [0.913, 5, 1], 'true,false,true,false,false,true,false': [1.027, 2, 2], 'true,false,true,false,false,true,true': [0.837, 3, 1], 'true,false,true,false,false,false,true': [1.05e-08, 0, 3], 'false': [6.66e-08, 93, 0], 'true,false,true,true': [0.266, 1, 12], 'true,false,true,false,false,false,false': [0.939, 1, 4], 'true,false,false': [0.316, 8, 61]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, A), movie(C, B), workedunder(B, D)', 'true,false,true,false,true': 'movie(E, I), workedunder(I, J)', 'true,false,true,false,false': 'movie(E, K), workedunder(K, L), movie(M, L)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(B, G), movie(F, H), director(H)', 'true,false,true,false,false,false': 'movie(E, N), workedunder(N, P)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 29], 'true,false,true,false,true,false': [0.504, 3, 1], 'true,false,true,false,true,true': [0.816, 2, 1], 'true,false,true,false,false,false,true': [1.031, 2, 2], 'false': [5.48e-08, 93, 0], 'true,false,false': [0.316, 8, 61], 'true,false,true,true': [0.266, 1, 12], 'true,false,true,false,false,true': [0.836, 3, 1], 'true,false,true,false,false,false,false': [0.36, 1, 6]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,true,false,false': 'movie(I, F)', 'true,false,false,true': 'movie(K, A), movie(K, L), actor(L)', 'true,false': 'movie(D, A), movie(D, E), workedunder(E, F)', 'true,false,true,false': 'movie(G, F), movie(H, B), movie(H, E)', 'true,false,true': 'movie(D, B)', 'true,false,false': 'movie(J, B)'}, {'true,true': [0.265, 10, 69], 'true,false,true,false,false,false': [1.034, 2, 2], 'true,false,false,false': [0.894, 1, 4], 'true,false,false,true,false': [0.318, 3, 23], 'true,false,true,false,true': [0.709, 3, 1], 'false': [1.05e-08, 93, 0], 'true,false,true,true': [1.05e-08, 0, 6], 'true,false,true,false,false,true': [0.721, 1, 2], 'true,false,false,true,true': [0.208, 0, 6]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), genre(C, D), genre(A, D)', 'true,false,false,false': 'workedunder(B, L)', 'true,false,false,true,false': 'workedunder(G, I), movie(J, G), movie(J, B)', 'true,false,false,true': 'workedunder(G, H), movie(F, H)', 'true,false,false,true,false,false': 'workedunder(B, K)', 'true,false': 'movie(E, A), movie(E, B)', 'true,false,false': 'movie(F, A), movie(F, G), actor(G)'}, {'true,true': [0.815, 1, 4], 'true,false,false,true,false,true': [1.014, 3, 2], 'true,false,false,true,false,false,false': [1.053, 3, 3], 'true,false,false,true,false,false,true': [0.71, 5, 1], 'true,false,false,false,true': [0.281, 3, 31], 'false': [3.33e-08, 93, 0], 'true,false,false,false,false': [0.334, 4, 27], 'true,false,true': [0.135, 1, 41], 'true,false,false,true,true': [0.289, 0, 4]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,true,false,false': 'movie(H, F)', 'true,false,false,true': 'movie(J, A), movie(I, K), workedunder(K, L)', 'true,false': 'movie(D, A), movie(D, E), workedunder(E, F)', 'true,false,true,false': 'movie(G, F), movie(G, E)', 'true,false,true': 'movie(D, B)', 'true,false,false': 'movie(I, B)'}, {'true,true': [0.255, 10, 69], 'true,false,true,false,false,false': [1.023, 2, 2], 'true,false,false,false': [0.894, 1, 4], 'true,false,false,true,false': [0.281, 2, 21], 'true,false,true,false,true': [0.574, 1, 3], 'false': [4.71e-08, 93, 0], 'true,false,true,true': [0.0, 0, 6], 'true,false,true,false,false,true': [0.336, 3, 0], 'true,false,false,true,true': [0.318, 1, 8]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), movie(D, A), movie(D, B)', 'true,false,true,false,false,false': 'workedunder(B, K)', 'true,false,true,false,false': 'workedunder(B, I), movie(E, J), actor(J)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'movie(E, B)', 'true,false,true,false,false,false,false': 'movie(F, L), director(L)', 'true,false,true': 'movie(E, B), movie(E, G), workedunder(G, H)'}, {'true,true': [0.0, 0, 29], 'true,false,true,false,true': [0.274, 1, 6], 'true,false,true,false,false,true': [0.851, 5, 1], 'true,false,true,false,false,false,true': [0.054, 0, 3], 'false': [0.0, 93, 0], 'true,false,false': [0.312, 8, 61], 'true,false,true,true': [0.0, 0, 6], 'true,false,true,false,false,false,false,false': [0.49, 2, 1], 'true,false,true,false,false,false,false,true': [0.453, 4, 6]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,true,false,false': 'movie(I, F)', 'true,false,false,false': 'movie(M, B)', 'true,false': 'movie(D, A), movie(D, E), workedunder(E, F)', 'true,false,true,false': 'movie(G, F), movie(H, B), movie(H, E)', 'true,false,true': 'movie(D, B)', 'true,false,false': 'movie(J, B), movie(J, K), workedunder(L, K)'}, {'true,true': [0.253, 10, 69], 'true,false,true,false,false,false': [0.999, 2, 2], 'true,false,false,true': [0.917, 1, 5], 'true,false,true,false,true': [0.613, 3, 1], 'true,false,false,false,true': [0.267, 2, 24], 'false': [3.94e-08, 93, 0], 'true,false,false,false,false': [0.894, 1, 4], 'true,false,true,true': [0.0, 0, 6], 'true,false,true,false,false,true': [0.549, 1, 2]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), genre(C, D), genre(A, D)', 'true,false,false,true': 'movie(K, B)', 'true,false,false,true,false': 'movie(I, L), actor(L), movie(M, B)', 'true,true': 'movie(E, B)', 'true,true,true': 'workedunder(B, F), movie(E, F)', 'true,false': 'workedunder(B, G), movie(H, B), movie(H, A)', 'true,false,false': 'movie(I, A), workedunder(B, J)'}, {'true,true,true,true': [0.764, 1, 2], 'true,false,false,false': [0.301, 12, 69], 'true,true,false': [0.041, 0, 3], 'true,false,true': [2.36e-08, 0, 29], 'true,false,false,true,false,false': [0.113, 0, 4], 'false': [0.0, 93, 0], 'true,true,true,false': [0.855, 1, 3], 'true,false,false,true,false,true': [0.849, 5, 1], 'true,false,false,true,true': [0.726, 1, 2]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(B, A) :- actor(B), director(A).;true;false', '0;true;movie(C, A), movie(C, B).;false;true', '0;true,false,false,false;workedunder(B, J), movie(K, J), movie(K, B).;false;false', '0;true,false,true,true,false;movie(F, E).;false;false', '0;true,false;movie(D, A), movie(D, E), actor(E).;true;true', '0;true,false,true,true;workedunder(B, G).;false;true', '0;true,false,true;movie(F, B).;true;false', '0;true,false,false;workedunder(B, H), movie(I, A).;false;true', '1;;workedunder(B, A) :- actor(B), director(A).;true;false', '1;true;movie(C, A), movie(C, B).;false;true', '1;true,false,true,true,false;movie(F, E).;false;false', '1;true,false,false,true;genre(A, J), genre(H, J).;false;false', '1;true,false;movie(D, A), movie(D, E), actor(E).;true;true', '1;true,false,true,true;workedunder(B, G).;false;true', '1;true,false,true;movie(F, B).;true;false', '1;true,false,false;workedunder(B, H), genre(H, I), genre(A, I).;true;false', '2;;workedunder(B, A) :- actor(B), director(A).;true;false', '2;true;movie(C, A), movie(C, B), workedunder(B, D).;false;true', '2;true,false,true,false,false,false;workedunder(B, L).;false;false', '2;true,false,true,false,false;movie(E, I), workedunder(I, J).;true;true', '2;true,false;movie(E, A), movie(F, B).;true;false', '2;true,false,true,false,false,true;movie(K, J).;false;false', '2;true,false,true,false;workedunder(B, G), movie(E, H), actor(H).;false;true', '2;true,false,true;movie(E, B).;false;true', '3;;workedunder(B, A) :- actor(B), director(A).;true;false', '3;true;movie(C, A), movie(C, B), workedunder(B, D).;false;true', '3;true,false,true,false,true;movie(E, I), workedunder(I, J).;false;false', '3;true,false,true,false,false;movie(E, K), workedunder(K, L), movie(M, L).;false;true', '3;true,false;movie(E, A), movie(F, B).;true;false', '3;true,false,true,false;workedunder(B, G), movie(F, H), director(H).;true;true', '3;true,false,true,false,false,false;movie(E, N), workedunder(N, P).;false;false', '3;true,false,true;movie(E, B).;false;true', '4;;workedunder(B, A) :- actor(B), director(A).;true;false', '4;true;workedunder(B, C).;false;true', '4;true,false,true,false,false;movie(I, F).;false;false', '4;true,false,false,true;movie(K, A), movie(K, L), actor(L).;false;false', '4;true,false;movie(D, A), movie(D, E), workedunder(E, F).;true;true', '4;true,false,true,false;movie(G, F), movie(H, B), movie(H, E).;false;true', '4;true,false,true;movie(D, B).;false;true', '4;true,false,false;movie(J, B).;true;false', '5;;workedunder(B, A) :- actor(B), director(A).;true;false', '5;true;workedunder(B, C), genre(C, D), genre(A, D).;false;true', '5;true,false,false,false;workedunder(B, L).;false;false', '5;true,false,false,true,false;workedunder(G, I), movie(J, G), movie(J, B).;false;true', '5;true,false,false,true;workedunder(G, H), movie(F, H).;false;true', '5;true,false,false,true,false,false;workedunder(B, K).;false;false', '5;true,false;movie(E, A), movie(E, B).;false;true', '5;true,false,false;movie(F, A), movie(F, G), actor(G).;true;true', '6;;workedunder(B, A) :- actor(B), director(A).;true;false', '6;true;workedunder(B, C).;false;true', '6;true,false,true,false,false;movie(H, F).;false;false', '6;true,false,false,true;movie(J, A), movie(I, K), workedunder(K, L).;false;false', '6;true,false;movie(D, A), movie(D, E), workedunder(E, F).;true;true', '6;true,false,true,false;movie(G, F), movie(G, E).;false;true', '6;true,false,true;movie(D, B).;false;true', '6;true,false,false;movie(I, B).;true;false', '7;;workedunder(B, A) :- actor(B), director(A).;true;false', '7;true;workedunder(B, C), movie(D, A), movie(D, B).;false;true', '7;true,false,true,false,false,false;workedunder(B, K).;false;true', '7;true,false,true,false,false;workedunder(B, I), movie(E, J), actor(J).;false;true', '7;true,false;movie(E, A), movie(F, B).;true;false', '7;true,false,true,false;movie(E, B).;false;true', '7;true,false,true,false,false,false,false;movie(F, L), director(L).;false;false', '7;true,false,true;movie(E, B), movie(E, G), workedunder(G, H).;false;true', '8;;workedunder(B, A) :- actor(B), director(A).;true;false', '8;true;workedunder(B, C).;false;true', '8;true,false,true,false,false;movie(I, F).;false;false', '8;true,false,false,false;movie(M, B).;false;false', '8;true,false;movie(D, A), movie(D, E), workedunder(E, F).;true;true', '8;true,false,true,false;movie(G, F), movie(H, B), movie(H, E).;false;true', '8;true,false,true;movie(D, B).;false;true', '8;true,false,false;movie(J, B), movie(J, K), workedunder(L, K).;false;true', '9;;workedunder(B, A) :- actor(B), director(A).;true;false', '9;true;workedunder(B, C), genre(C, D), genre(A, D).;true;true', '9;true,false,false,true;movie(K, B).;false;true', '9;true,false,false,true,false;movie(I, L), actor(L), movie(M, B).;false;false', '9;true,true;movie(E, B).;true;false', '9;true,true,true;workedunder(B, F), movie(E, F).;false;false', '9;true,false;workedunder(B, G), movie(H, B), movie(H, A).;false;true', '9;true,false,false;movie(I, A), workedunder(B, J).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, B), movie(D, E), actor(E) )
%   | | then if ( movie(F, A) )
%   | | | then if ( workedunder(A, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, E) )
%   | | | | | then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | | | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048818;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, B), movie(D, E), actor(E) )
%   | | then if ( movie(F, A) )
%   | | | then if ( workedunder(A, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, E) )
%   | | | | | then return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | | | else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A), workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else if ( workedunder(A, G), movie(E, H), actor(H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(E, I), workedunder(I, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(A, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360675;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A), workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else if ( workedunder(A, G), movie(F, H), director(H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(E, I), workedunder(I, J), movie(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(E, L), workedunder(L, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.10159632948783635;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B), movie(D, E), workedunder(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A) )
%   | | | then if ( movie(H, B), movie(H, I), actor(I) )
%   | | | | then return 0.279599934340873;  // std dev = 2,354, 362,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=326 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0926912761892605;  // std dev = 1,03e-07, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), genre(C, D), genre(B, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(E, A) )
%   | | then return 0.2630642711629655;  // std dev = 1,98e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(F, B), movie(F, G), actor(G) )
%   | | | then if ( workedunder(G, H), movie(F, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(G, I), movie(J, G), movie(J, A) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(A, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.1190341456914946;  // std dev = 3,16e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8,94e-08, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B), movie(D, E), workedunder(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A) )
%   | | | then if ( movie(H, B), movie(G, I), workedunder(I, J) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.18325306084238802;  // std dev = 1,836, 362,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=326 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310915;  // std dev = 4,94e-08, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), movie(D, B), movie(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(E, A), movie(E, G), workedunder(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(E, A) )
%   | | | | then return 0.18596882153254954;  // std dev = 4,56e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | | else if ( workedunder(A, I), movie(E, J), actor(J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(A, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( movie(F, L), director(L) )
%   | | | | | | | then return -0.1259349208727399;  // std dev = 1,05e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333681;  // std dev = 1,19e-07, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B), movie(D, E), workedunder(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(G, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(J, A) )
%   | | | | then return 0.132376541246424;  // std dev = 1,550, 362,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=326 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420271;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), genre(C, D), genre(B, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), movie(F, A), movie(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B), workedunder(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11572468654430425;  // std dev = 1,532, 362,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=326 */
%   else return -0.06419184008202626;  // std dev = 1,49e-08, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104952
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.736 seconds
Total inference time: 0.719 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104952
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.719 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,true,false': 'movie(F, E)', 'true,false': 'movie(D, B), movie(D, E), actor(E)', 'true,false,true,true': 'workedunder(A, G)', 'true,false,true': 'movie(F, A)'}, {'true,true': [1.05e-06, 0, 326], 'true,false,true,true,true': [0.0, 0, 0], 'true,false,true,true,false,false': [1.05e-08, 21, 0], 'false': [0.0, 290, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true,false,true': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,true,false': 'movie(F, E)', 'true,false': 'movie(D, B), movie(D, E), actor(E)', 'true,false,true,true': 'workedunder(A, G)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 326], 'true,false,true,true,true': [0.0, 0, 0], 'true,false,true,true,false,false': [0.0, 21, 0], 'false': [0.0, 290, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true,false,true': [7.45e-09, 15, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A), workedunder(A, D)', 'true,false,true,false,false,false': 'workedunder(A, K)', 'true,false,true,false,false': 'movie(E, I), workedunder(I, J)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true,false': 'workedunder(A, G), movie(E, H), actor(H)', 'true,false,true': 'movie(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 290, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 326], 'true,false,true,false,false,false,false': [0.0, 36, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A), workedunder(A, D)', 'true,false,true,false,false,false': 'movie(E, L), workedunder(L, M)', 'true,false,true,false,false': 'movie(E, I), workedunder(I, J), movie(K, J)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true,false': 'workedunder(A, G), movie(F, H), director(H)', 'true,false,true': 'movie(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 290, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 326], 'true,false,true,false,false,false,false': [0.0, 36, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true': 'movie(H, B), movie(H, I), actor(I)', 'true,false': 'movie(D, B), movie(D, E), workedunder(E, F)', 'true,false,false': 'movie(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false': [0.0, 0, 0], 'false': [1.03e-07, 290, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [2.354, 36, 326]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), genre(C, D), genre(B, D)', 'true,false,false,true,false': 'workedunder(G, I), movie(J, G), movie(J, A)', 'true,false,false,true': 'workedunder(G, H), movie(F, H)', 'true,false,false,true,false,false': 'workedunder(A, K)', 'true,false': 'movie(E, B), movie(E, A)', 'true,false,false': 'movie(F, B), movie(F, G), actor(G)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [1.98e-07, 0, 326], 'true,false,false,true,false,false,false': [3.16e-08, 36, 0], 'true,false,false,true,false,false,true': [0.0, 0, 0], 'false': [8.94e-08, 290, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true': 'movie(H, B), movie(G, I), workedunder(I, J)', 'true,false': 'movie(D, B), movie(D, E), workedunder(E, F)', 'true,false,false': 'movie(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false': [1.836, 36, 326], 'false': [4.94e-08, 290, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), movie(D, B), movie(D, A)', 'true,false,true,false,false,false': 'workedunder(A, K)', 'true,false,true,false,false': 'workedunder(A, I), movie(E, J), actor(J)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true,false': 'movie(E, A)', 'true,false,true,false,false,false,false': 'movie(F, L), director(L)', 'true,false,true': 'movie(E, A), movie(E, G), workedunder(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,false,true': [4.56e-07, 0, 326], 'true,false,true,false,false,false,false,false': [0.0, 0, 0], 'false': [1.19e-07, 290, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,false,false,false,true': [1.05e-08, 36, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,false': 'movie(J, A)', 'true,false': 'movie(D, B), movie(D, E), workedunder(E, F)', 'true,false,false': 'movie(G, A), movie(G, H), workedunder(I, H)'}, {'true,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [1.55, 36, 326], 'false': [0.0, 290, 0], 'true,false,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), genre(C, D), genre(B, D)', 'true,false': 'workedunder(A, E), movie(F, A), movie(F, B)', 'true,false,false': 'movie(G, B), workedunder(A, H)'}, {'true,true': [0.0, 0, 0], 'false': [1.49e-08, 290, 0], 'true,false,false,false': [1.532, 36, 326], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false;movie(D, B), movie(D, E), actor(E).;false;false', '1;;workedunder(A, B) :- actor(A), director(B).;true;false', '1;true;movie(C, B), movie(C, A).;false;true', '1;true,false;movie(D, B), movie(D, E), actor(E).;false;false', '2;;workedunder(A, B) :- actor(A), director(B).;false;false', '3;;workedunder(A, B) :- actor(A), director(B).;false;false', '4;;workedunder(A, B) :- actor(A), director(B).;false;false', '5;;workedunder(A, B) :- actor(A), director(B).;false;false', '6;;workedunder(A, B) :- actor(A), director(B).;false;false', '7;;workedunder(A, B) :- actor(A), director(B).;false;false', '8;;workedunder(A, B) :- actor(A), director(B).;false;false', '9;;workedunder(A, B) :- actor(A), director(B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,false', 0), ('true,false,true,true,true', 0), ('true,false,false', 0)]
Tree #2: [('true,false,true,false', 0), ('true,false,true,true,true', 0), ('true,false,false', 0)]
Tree #3: [('true,true', 0), ('true,false,true,false,true', 0), ('true,false,false', 0), ('true,false,true,false,false,true', 0), ('true,false,true,false,false,false,true', 0)]
Tree #4: [('true,true', 0), ('true,false,true,false,true', 0), ('true,false,false', 0), ('true,false,true,false,false,true', 0), ('true,false,true,false,false,false,true', 0)]
Tree #5: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false', 0), ('true,false,true', 0), ('true,false,false,true,true', 0.9005524861878453)]
Tree #6: [('true,true', 0), ('true,false,false,true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,false,false,true', 0)]
Tree #7: [('true,true', 0), ('true,false,false,false', 0), ('true,false,true', 0), ('true,false,false,true,true', 0), ('true,false,false,true,false', 0.9005524861878453)]
Tree #8: [('true,true', 0), ('true,false,true,false,false,false,true', 0), ('true,false,true,false,false,false,false,false', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #9: [('true,true', 0), ('true,false,false,false,false', 0), ('true,false,true', 0), ('true,false,false,true', 0), ('true,false,false,false,true', 0.9005524861878453)]
Tree #10: [('true,true', 0), ('true,false,true', 0), ('true,false,false,true', 0), ('true,false,false,false', 0.9005524861878453)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, B), movie(D, E), actor(E) )
%   | | then return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048818;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, B), movie(D, E), actor(E) )
%   | | then return -0.12544463852839133;  // std dev = 1,83e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.48896704078540965;  // std dev = 3,802, 362,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=326 */
%   else return -0.11231637819360675;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.3736010269468996;  // std dev = 3,444, 362,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=326 */
%   else return -0.10159632948783655;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2879377639088273;  // std dev = 3,279, 362,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=326 */
%   else return -0.0926912761892605;  // std dev = 1,03e-07, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2267272342861428;  // std dev = 3,239, 362,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=326 */
%   else return -0.08518475138839678;  // std dev = 8,94e-08, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.18255801037916727;  // std dev = 3,266, 362,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=326 */
%   else return -0.0787767547310915;  // std dev = 4,94e-08, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.14988679376487243;  // std dev = 3,324, 362,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=326 */
%   else return -0.07324622576333681;  // std dev = 1,19e-07, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.12507013836068812;  // std dev = 3,393, 362,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=326 */
%   else return -0.06842697784420271;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.10575755992351152;  // std dev = 3,464, 362,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=326 */
%   else return -0.06419184008202626;  // std dev = 1,49e-08, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.144337
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.189 seconds
Total inference time: 0.554 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 13.198
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101767
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.646 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 1, Type: transfer, Total folds for small set: 4, Time: 00:22:42
{'CLL': -0.101767, 'Recall': 1.0, 'Learning time': 13.198, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 60000, 'Total time': 26.849310159683228, 'Generating mappings time': 2.562938690185547, 'Finding best mapping': 21.62821364402771, 'Generating paths time': 2.635678291320801, 'Knowledge compiling time': 0.022470474243164062}, 'Parameter Learning Results': {'CLL': -0.101767, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.646}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995101;  // std dev = 8,68e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.8367585607679585;  // std dev = 0,145, 187,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=183 */
%   else return -0.14185106490048793;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.719473412210956;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.7023799513286451;  // std dev = 0,145, 187,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=183 */
%   else return -0.12544463852839188;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462834;  // std dev = 5,13e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.5434576784752342;  // std dev = 0,145, 187,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=183 */
%   else return -0.11231637819360692;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830897;  // std dev = 4,30e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.4084270262805436;  // std dev = 0,145, 187,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=183 */
%   else return -0.10159632948783658;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601499;  // std dev = 2,49e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.3124151179006916;  // std dev = 0,145, 187,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=183 */
%   else return -0.09269127618926047;  // std dev = 1,41e-07, 322,000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694903;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.24687556670088812;  // std dev = 0,145, 187,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=183 */
%   else return -0.08518475138839678;  // std dev = 1,01e-07, 322,000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253523;  // std dev = 2,35e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.20125543137929652;  // std dev = 0,145, 187,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=183 */
%   else return -0.07877675473109148;  // std dev = 3,33e-08, 322,000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.16836978732753985;  // std dev = 0,145, 187,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=183 */
%   else return -0.07324622576333693;  // std dev = 1,03e-07, 322,000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return 0.14382289210403815;  // std dev = 0,145, 187,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=183 */
%   else return -0.06842697784420287;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14091879974383364;  // std dev = 0,110, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06419184008202612;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( actor(B) )
%   | then return -0.06419184008202605;  // std dev = 9,42e-08, 282,000 (wgt'ed) examples reached here.  /* #neg=282 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.8536801998615077;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06419184008202615;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097508
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.274 seconds
Total inference time: 0.56 seconds
AUC ROC: 1.0


Dataset: uwcse,imdb, Run: 1, Fold: 1, Type: scratch, Total folds for small set: 4, Time: 00:22:51
{'CLL': -0.097508, 'Recall': 1.0, 'Learning time': 8.274, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.56}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.834339411289988;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else if ( publication(I, B), publication(I, J), student(J) )
%   | | | | | then if ( hasposition(B, K), hasposition(E, K) )
%   | | | | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return 0.6914822684328448;  // std dev = 0,373, 42,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=35 */
%   | | | else return 0.7291166770349955;  // std dev = 0,335, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else return -0.14185106490048768;  // std dev = 7,15e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.7004441928528997;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | else if ( publication(D, A), publication(C, E), tempadvisedby(F, E) )
%   | | | then if ( publication(D, E) )
%   | | | | then return 0.4894681013616082;  // std dev = 0,834, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.29120868946849476;  // std dev = 0,470, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.6066161812919368;  // std dev = 0,350, 56,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | else if ( projectmember(G, B) )
%   | | then return 0.7356630398665787;  // std dev = 0,040, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.5221908734495392;  // std dev = 0,892, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | | then return 0.08320549123154841;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.5447648631331599;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839147;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.542108638524146;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then if ( tempadvisedby(G, B), inphase(G, H), inphase(A, H) )
%   | | | then if ( tempadvisedby(E, I) )
%   | | | | then return 0.2895727650721522;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else return 0.18530315777063353;  // std dev = 1,083, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | | | then return 0.1570472592196172;  // std dev = 1,062, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else if ( tempadvisedby(L, B) )
%   | | | | | then return 0.5176429405107484;  // std dev = 0,307, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | | | else if ( publication(M, A), publication(M, N), tempadvisedby(P, N) )
%   | | | | | | then return 0.22525393885823353;  // std dev = 1,200, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | | | else return 0.4834087536102975;  // std dev = 0,356, 21,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | else return 0.4471529561701177;  // std dev = 0,368, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   else return -0.11231637819360625;  // std dev = 6,32e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.40740632446069325;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.4400485723420535;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( publication(G, B), tempadvisedby(H, B) )
%   | | | | then return -0.024243399255243003;  // std dev = 0,865, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else if ( publication(I, B), publication(I, J), student(J) )
%   | | | | | then if ( hasposition(B, K), hasposition(E, K) )
%   | | | | | | then return 0.1951568521513759;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | else return 0.3042390611004795;  // std dev = 0,763, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.05732113651143641;  // std dev = 1,116, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( publication(L, A) )
%   | | | then return 0.4688493203881051;  // std dev = 0,308, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3545024571577739;  // std dev = 0,358, 65,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=55 */
%   else return -0.10159632948783617;  // std dev = 5,58e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A), hasposition(B, C) )
%   then if ( publication(D, B), hasposition(E, C), projectmember(F, E) )
%   | then return 0.2851187952324924;  // std dev = 0,304, 106,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=92 */
%   | else if ( publication(G, B), tempadvisedby(H, B) )
%   | | then return -0.03302271644442995;  // std dev = 0,784, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | | then return 0.4123997565336206;  // std dev = 0,265, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( publication(K, A), publication(K, L), professor(L) )
%   | | | | then if ( publication(M, B), publication(M, N), tempadvisedby(P, N) )
%   | | | | | then return -0.12009320772432301;  // std dev = 0,561, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.18503008902332096;  // std dev = 0,911, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else if ( publication(Q, B) )
%   | | | | | then return 0.4105885323207461;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else if ( projectmember(R, B) )
%   | | | | | | then return 0.39441274450199426;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.1482164059840804;  // std dev = 0,449, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.08886446455915556;  // std dev = 0,057, 92,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.2564963923755818;  // std dev = 0,154, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.29797480710352764;  // std dev = 0,118, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | | then if ( publication(G, B), publication(G, F) )
%   | | | | then return 0.2733669765018369;  // std dev = 0,877, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | | | | then return -0.2511040372695946;  // std dev = 0,053, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | else if ( publication(J, B), publication(J, K), student(K) )
%   | | | | | | then return 0.16502035626172784;  // std dev = 0,992, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | | else return 0.017458273009375674;  // std dev = 1,050, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else if ( tempadvisedby(L, B) )
%   | | | | then return 0.18534564799110037;  // std dev = 0,380, 37,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=30 */
%   | | | | else return 0.22520620397470065;  // std dev = 0,336, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else return -0.08548344213267241;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.2078458504734631;  // std dev = 0,154, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.0028919596440006856;  // std dev = 1,143, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(F, A), publication(F, G), professor(G) )
%   | | | then if ( projectmember(H, B) )
%   | | | | then return 0.19918625229762876;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(I, B), publication(I, J), tempadvisedby(K, J) )
%   | | | | | then if ( publication(I, G) )
%   | | | | | | then return 0.20781648511683695;  // std dev = 0,881, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | else if ( tempadvisedby(L, B) )
%   | | | | | | | then return -0.2070206918051195;  // std dev = 0,046, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | | | else return -0.021775423463362566;  // std dev = 0,969, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | else return 0.1359730951145013;  // std dev = 1,054, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1804313980247737;  // std dev = 0,333, 67,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=58 */
%   else return -0.07903317471958896;  // std dev = 1,49e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.17297726147471554;  // std dev = 0,154, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( publication(D, A), publication(D, E), tempadvisedby(F, E) )
%   | | then if ( publication(G, F), publication(G, H), publication(D, H) )
%   | | | then return 0.2017268067256965;  // std dev = 0,308, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else if ( tempadvisedby(I, B) )
%   | | | | then return 0.07184841104509938;  // std dev = 0,631, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( hasposition(B, J), hasposition(E, J) )
%   | | | | | then return 0.008291574012467856;  // std dev = 1,009, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return -0.322155523565533;  // std dev = 0,095, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( publication(K, B), publication(K, L), inphase(L, M) )
%   | | | then if ( tempadvisedby(L, N), tempadvisedby(P, B) )
%   | | | | then return 0.021334982832067535;  // std dev = 0,453, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | else return 0.131314477956123;  // std dev = 0,341, 43,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=36 */
%   | | | else return 0.1613341287701363;  // std dev = 0,319, 25,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   else return -0.07346862311439184;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.14709593371053625;  // std dev = 0,154, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.014901612459267207;  // std dev = 1,151, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(F, A), publication(F, G), tempadvisedby(H, G) )
%   | | | then if ( tempadvisedby(I, B) )
%   | | | | then return 0.11136217699785671;  // std dev = 0,273, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | | else if ( publication(J, H), publication(J, G) )
%   | | | | | then return 0.20065816357938637;  // std dev = 0,736, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else if ( hasposition(B, K), hasposition(G, K) )
%   | | | | | | then return 0.006255912753899501;  // std dev = 1,009, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | else return -0.2567521364155726;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( publication(L, B) )
%   | | | | then return 0.12403627549261775;  // std dev = 0,323, 58,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=50 */
%   | | | | else return 0.07437240021970662;  // std dev = 0,377, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.06862161085058895;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.12727465051356512;  // std dev = 0,154, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( publication(D, A), publication(D, E), tempadvisedby(F, E) )
%   | | then if ( publication(G, F), publication(G, H), publication(D, H) )
%   | | | then return 0.136546815500251;  // std dev = 0,302, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else if ( tempadvisedby(I, B) )
%   | | | | then return 0.037291735165989;  // std dev = 0,619, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else if ( hasposition(B, J), hasposition(E, J) )
%   | | | | | then return 0.004719887617203905;  // std dev = 1,009, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | else return -0.21123798870138014;  // std dev = 0,073, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( tempadvisedby(K, B), publication(L, K) )
%   | | | then return -0.01167172201899828;  // std dev = 1,151, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else if ( projectmember(M, B) )
%   | | | | then return 0.18859109678067196;  // std dev = 0,032, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.08768681820870532;  // std dev = 0,344, 64,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=54 */
%   else return -0.06436353719310917;  // std dev = 1,83e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */


Predicates from source: ['advisedby(person,person).', 'tempadvisedby(person,person).', 'hasposition(person,faculty).', 'inphase(person,prequals).', 'student(person).', 'projectmember(project,person).', 'professor(person).', 'publication(title,person).'] 

Source structured tree: [['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,true,false,false': 'publication(I, B), publication(I, J), student(J)', 'true,false': 'publication(D, A), publication(D, E), professor(E)', 'true,false,true,false,false,true': 'hasposition(B, K), hasposition(E, K)', 'true,false,true,false': 'tempadvisedby(G, B), publication(H, B)', 'true,false,true': 'projectmember(F, B)', 'true,false,false': 'tempadvisedby(L, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [0.894, 4, 1], 'true,false,true,false,false,true,false': [0.816, 1, 2], 'true,false,false,false': [0.335, 4, 27], 'true,false,true,false,false,true,true': [1.0, 2, 2], 'true,false,false,true': [0.373, 7, 35], 'false': [7.15e-08, 90, 0], 'true,false,true,true': [2.11e-08, 0, 3], 'true,false,true,false,false,false': [1.155, 4, 2]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B)', 'true,false,false,false': 'publication(I, A), publication(I, J), professor(J)', 'true,true': 'publication(C, A)', 'true,false': 'projectmember(G, B)', 'true,true,false,true': 'publication(D, E)', 'true,true,false': 'publication(D, A), publication(C, E), tempadvisedby(F, E)', 'true,false,false': 'tempadvisedby(H, B)'}, {'true,false,false,true': [0.892, 1, 3], 'true,true,false,false': [0.35, 8, 48], 'true,false,false,false,false': [0.894, 1, 4], 'true,true,false,true,false': [0.47, 8, 8], 'true,false,false,false,true': [0.866, 3, 1], 'false': [0.0, 90, 0], 'true,true,true': [0.152, 1, 41], 'true,true,false,true,true': [0.834, 1, 2], 'true,false,true': [0.04, 0, 6]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,true,false,false,false': 'publication(M, A), publication(M, N), tempadvisedby(P, N)', 'true,false,true,false,false': 'tempadvisedby(L, B)', 'true,false,true,false': 'publication(J, A), tempadvisedby(K, B)', 'true,false': 'publication(D, B), publication(D, E), inphase(E, F)', 'true,false,true,true': 'tempadvisedby(E, I)', 'true,false,true': 'tempadvisedby(G, B), inphase(G, H), inphase(A, H)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [1.062, 3, 2], 'true,false,true,true,true': [0.816, 1, 2], 'false': [6.32e-08, 90, 0], 'true,false,true,false,false,false,true': [1.2, 3, 3], 'true,false,true,false,false,true': [0.307, 2, 17], 'true,false,false': [0.368, 7, 27], 'true,false,true,false,false,false,false': [0.356, 3, 18], 'true,false,true,true,false': [1.083, 3, 3]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,true,false,false': 'publication(I, B), publication(I, J), student(J)', 'true,false': 'publication(D, A), publication(D, E), professor(E)', 'true,false,true,false,false,true': 'hasposition(B, K), hasposition(E, K)', 'true,false,true,false': 'publication(G, B), tempadvisedby(H, B)', 'true,false,true': 'projectmember(F, B)', 'true,false,false': 'publication(L, A)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [0.865, 4, 1], 'true,false,true,false,false,true,false': [0.763, 1, 2], 'true,false,false,false': [0.358, 10, 55], 'true,false,true,false,false,true,true': [1.001, 2, 2], 'true,false,false,true': [0.308, 1, 7], 'false': [5.58e-08, 90, 0], 'true,false,true,true': [0.0, 0, 3], 'true,false,true,false,false,false': [1.116, 4, 2]}], ['advisedby(A, B)', {'': 'professor(B), student(A), hasposition(B, C)', 'true': 'publication(D, B), hasposition(E, C), projectmember(F, E)', 'true,false,false,false': 'publication(K, A), publication(K, L), professor(L)', 'true,false,false,false,false,false': 'projectmember(R, B)', 'true,false,false,false,true': 'publication(M, B), publication(M, N), tempadvisedby(P, N)', 'true,false,false,false,false': 'publication(Q, B)', 'true,false': 'publication(G, B), tempadvisedby(H, B)', 'true,false,false': 'tempadvisedby(I, B), publication(J, A)'}, {'true,true': [0.304, 14, 92], 'true,false,false,false,true,false': [0.911, 2, 2], 'true,false,false,false,false,false,true': [0.0, 0, 3], 'true,false,false,true': [0.265, 0, 4], 'true,false,false,false,false,false,false': [0.449, 2, 5], 'false': [0.057, 91, 1], 'true,false,false,false,true,true': [0.561, 2, 1], 'true,false,true': [0.784, 2, 2], 'true,false,false,false,false,true': [0.007, 0, 3]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,false,false': 'tempadvisedby(L, B)', 'true,false,false,true,false': 'tempadvisedby(H, B), publication(I, B)', 'true,false,false,true': 'publication(G, B), publication(G, F)', 'true,false,false,true,false,false': 'publication(J, B), publication(J, K), student(K)', 'true,false': 'projectmember(D, B)', 'true,false,false': 'publication(E, A), publication(E, F), professor(F)'}, {'true,true': [0.154, 1, 41], 'true,false,true': [0.118, 0, 8], 'true,false,false,true,false,false,false': [1.05, 4, 2], 'true,false,false,true,false,false,true': [0.992, 2, 3], 'true,false,false,false,true': [0.38, 7, 30], 'false': [0.0, 90, 0], 'true,false,false,false,false': [0.336, 4, 27], 'true,false,false,true,false,true': [0.053, 4, 0], 'true,false,false,true,true': [0.877, 1, 2]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,false,true,false': 'publication(I, B), publication(I, J), tempadvisedby(K, J)', 'true,false,false,true': 'projectmember(H, B)', 'true,false,false,true,false,true,false': 'tempadvisedby(L, B)', 'true,false': 'tempadvisedby(D, B), publication(E, D)', 'true,false,false,true,false,true': 'publication(I, G)', 'true,false,false': 'publication(F, A), publication(F, G), professor(G)'}, {'true,true': [0.154, 1, 41], 'true,false,false,false': [0.333, 9, 58], 'true,false,false,true,false,false': [1.054, 3, 3], 'true,false,false,true,false,true,true': [0.881, 1, 2], 'true,false,false,true,false,true,false,false': [0.969, 3, 2], 'true,false,false,true,false,true,false,true': [0.046, 4, 0], 'false': [1.49e-08, 90, 0], 'true,false,true': [1.143, 2, 4], 'true,false,false,true,true': [0.0, 0, 3]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,true,false,false': 'hasposition(B, J), hasposition(E, J)', 'true,false,false,true': 'tempadvisedby(L, N), tempadvisedby(P, B)', 'true,false': 'publication(D, A), publication(D, E), tempadvisedby(F, E)', 'true,false,true,false': 'tempadvisedby(I, B)', 'true,false,true': 'publication(G, F), publication(G, H), publication(D, H)', 'true,false,false': 'publication(K, B), publication(K, L), inphase(L, M)'}, {'true,true': [0.154, 1, 41], 'true,false,true,false,false,false': [0.095, 4, 0], 'true,false,false,false': [0.319, 3, 22], 'true,false,false,true,false': [0.341, 7, 36], 'false': [0.0, 90, 0], 'true,false,true,false,false,true': [1.009, 2, 2], 'true,false,true,true': [0.308, 2, 6], 'true,false,true,false,true': [0.631, 2, 1], 'true,false,false,true,true': [0.453, 2, 5]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,false,false': 'publication(L, B)', 'true,false,false,true,false': 'publication(J, H), publication(J, G)', 'true,false,false,true': 'tempadvisedby(I, B)', 'true,false,false,true,false,false': 'hasposition(B, K), hasposition(G, K)', 'true,false': 'tempadvisedby(D, B), publication(E, D)', 'true,false,false': 'publication(F, A), publication(F, G), tempadvisedby(H, G)'}, {'true,true': [0.154, 1, 41], 'true,false,true': [1.151, 2, 4], 'true,false,false,true,false,false,false': [0.083, 4, 0], 'true,false,false,true,false,false,true': [1.009, 2, 2], 'true,false,false,false,true': [0.323, 8, 50], 'false': [0.0, 90, 0], 'true,false,false,false,false': [0.377, 2, 9], 'true,false,false,true,false,true': [0.736, 1, 2], 'true,false,false,true,true': [0.273, 3, 5]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,true,false,false': 'hasposition(B, J), hasposition(E, J)', 'true,false,false,false': 'projectmember(M, B)', 'true,false': 'publication(D, A), publication(D, E), tempadvisedby(F, E)', 'true,false,true,false': 'tempadvisedby(I, B)', 'true,false,true': 'publication(G, F), publication(G, H), publication(D, H)', 'true,false,false': 'tempadvisedby(K, B), publication(L, K)'}, {'true,true': [0.154, 1, 41], 'true,false,true,false,false,false': [0.073, 4, 0], 'true,false,false,true': [1.151, 2, 4], 'false': [1.83e-08, 90, 0], 'true,false,false,false,true': [0.032, 0, 5], 'true,false,true,false,false,true': [1.009, 2, 2], 'true,false,false,false,false': [0.344, 10, 54], 'true,false,true,true': [0.302, 2, 6], 'true,false,true,false,true': [0.619, 2, 1]}]] 



Best mapping found: ['professor(A) -> director(A)', 'tempadvisedby(A,B) -> workedunder(A,B)', 'inphase(A,B) -> movie(B,A)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(I, B), movie(I, J), actor(J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false,false,true': 'genre(B, K), genre(E, K)', 'true,false,true,false': 'workedunder(G, B), movie(H, B)', 'true,false,true': 'genre(B, F)', 'true,false,false': 'workedunder(L, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [0.894, 4, 1], 'true,false,true,false,false,true,false': [0.816, 1, 2], 'true,false,false,true': [0.373, 7, 35], 'true,false,true,false,false,true,true': [1.0, 2, 2], 'true,false,false,false': [0.335, 4, 27], 'false': [7.15e-08, 90, 0], 'true,false,true,true': [2.11e-08, 0, 3], 'true,false,true,false,false,false': [1.155, 4, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,false,false,false': 'movie(I, A), movie(I, J), director(J)', 'true,true': 'movie(C, A)', 'true,false': 'genre(B, G)', 'true,true,false,true': 'movie(D, E)', 'true,true,false': 'movie(D, A), movie(C, E), workedunder(F, E)', 'true,false,false': 'workedunder(H, B)'}, {'true,false,false,true': [0.892, 1, 3], 'true,true,false,false': [0.35, 8, 48], 'true,true,true': [0.152, 1, 41], 'true,true,false,true,false': [0.47, 8, 8], 'true,false,false,false,true': [0.866, 3, 1], 'false': [0.0, 90, 0], 'true,false,false,false,false': [0.894, 1, 4], 'true,true,false,true,true': [0.834, 1, 2], 'true,false,true': [0.04, 0, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'movie(M, A), movie(M, N), workedunder(P, N)', 'true,false,true,false,false': 'workedunder(L, B)', 'true,false,true': 'workedunder(G, B), movie(H, G), movie(H, A)', 'true,false': 'movie(D, B), movie(D, E), movie(F, E)', 'true,false,true,true': 'workedunder(E, I)', 'true,false,true,false': 'movie(J, A), workedunder(K, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [1.062, 3, 2], 'true,false,true,true,true': [0.816, 1, 2], 'true,false,true,true,false': [1.083, 3, 3], 'true,false,true,false,false,false,true': [1.2, 3, 3], 'false': [6.32e-08, 90, 0], 'true,false,true,false,false,false,false': [0.356, 3, 18], 'true,false,true,false,false,true': [0.307, 2, 17], 'true,false,false': [0.368, 7, 27]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(I, B), movie(I, J), actor(J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false,false,true': 'genre(B, K), genre(E, K)', 'true,false,true,false': 'movie(G, B), workedunder(H, B)', 'true,false,true': 'genre(B, F)', 'true,false,false': 'movie(L, A)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [0.865, 4, 1], 'true,false,true,false,false,true,false': [0.763, 1, 2], 'true,false,false,true': [0.308, 1, 7], 'true,false,true,false,false,true,true': [1.001, 2, 2], 'true,false,false,false': [0.358, 10, 55], 'false': [5.58e-08, 90, 0], 'true,false,true,true': [0.0, 0, 3], 'true,false,true,false,false,false': [1.116, 4, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A), genre(B, C)', 'true': 'movie(D, B), genre(E, C), genre(E, F)', 'true,false,false,false': 'movie(K, A), movie(K, L), director(L)', 'true,false,false,false,false,false': 'genre(B, R)', 'true,false,false,false,true': 'movie(M, B), movie(M, N), workedunder(P, N)', 'true,false,false,false,false': 'movie(Q, B)', 'true,false': 'movie(G, B), workedunder(H, B)', 'true,false,false': 'workedunder(I, B), movie(J, A)'}, {'true,true': [0.304, 14, 92], 'true,false,false,false,false,false,true': [0.0, 0, 3], 'true,false,false,false,true,false': [0.911, 2, 2], 'true,false,false,false,false,false,false': [0.449, 2, 5], 'true,false,false,true': [0.265, 0, 4], 'false': [0.057, 91, 1], 'true,false,false,false,true,true': [0.561, 2, 1], 'true,false,true': [0.784, 2, 2], 'true,false,false,false,false,true': [0.007, 0, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'workedunder(L, B)', 'true,false,false,true,false': 'workedunder(H, B), movie(I, B)', 'true,false,false,true': 'movie(G, B), movie(G, F)', 'true,false,false,true,false,false': 'movie(J, B), movie(J, K), actor(K)', 'true,false': 'genre(B, D)', 'true,false,false': 'movie(E, A), movie(E, F), director(F)'}, {'true,true': [0.154, 1, 41], 'true,false,false,true,false,true': [0.053, 4, 0], 'true,false,false,true,false,false,false': [1.05, 4, 2], 'true,false,false,true,false,false,true': [0.992, 2, 3], 'true,false,false,false,true': [0.38, 7, 30], 'false': [0.0, 90, 0], 'true,false,false,false,false': [0.336, 4, 27], 'true,false,true': [0.118, 0, 8], 'true,false,false,true,true': [0.877, 1, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true,false': 'movie(I, B), movie(I, J), workedunder(K, J)', 'true,false,false,true': 'genre(B, H)', 'true,false,false,true,false,true,false': 'workedunder(L, B)', 'true,false': 'workedunder(D, B), movie(E, D)', 'true,false,false,true,false,true': 'movie(I, G)', 'true,false,false': 'movie(F, A), movie(F, G), director(G)'}, {'true,true': [0.154, 1, 41], 'true,false,false,false': [0.333, 9, 58], 'true,false,false,true,false,false': [1.054, 3, 3], 'true,false,false,true,false,true,true': [0.881, 1, 2], 'true,false,false,true,false,true,false,false': [0.969, 3, 2], 'true,false,false,true,false,true,false,true': [0.046, 4, 0], 'false': [1.49e-08, 90, 0], 'true,false,true': [1.143, 2, 4], 'true,false,false,true,true': [0.0, 0, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'genre(B, J), genre(E, J)', 'true,false,false,true': 'workedunder(L, N), workedunder(P, B)', 'true,false': 'movie(D, A), movie(D, E), workedunder(F, E)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'movie(G, F), movie(G, H), movie(D, H)', 'true,false,false': 'movie(K, B), movie(K, L), movie(M, L)'}, {'true,true': [0.154, 1, 41], 'true,false,true,false,false,false': [0.095, 4, 0], 'true,false,false,false': [0.319, 3, 22], 'true,false,false,true,false': [0.341, 7, 36], 'true,false,true,false,true': [0.631, 2, 1], 'false': [0.0, 90, 0], 'true,false,true,true': [0.308, 2, 6], 'true,false,true,false,false,true': [1.009, 2, 2], 'true,false,false,true,true': [0.453, 2, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'movie(L, B)', 'true,false,false,true,false': 'movie(J, H), movie(J, G)', 'true,false,false,true': 'workedunder(I, B)', 'true,false,false,true,false,false': 'genre(B, K), genre(G, K)', 'true,false': 'workedunder(D, B), movie(E, D)', 'true,false,false': 'movie(F, A), movie(F, G), workedunder(H, G)'}, {'true,true': [0.154, 1, 41], 'true,false,false,true,false,true': [0.736, 1, 2], 'true,false,false,true,false,false,false': [0.083, 4, 0], 'true,false,false,true,false,false,true': [1.009, 2, 2], 'true,false,false,false,true': [0.323, 8, 50], 'false': [0.0, 90, 0], 'true,false,false,false,false': [0.377, 2, 9], 'true,false,true': [1.151, 2, 4], 'true,false,false,true,true': [0.273, 3, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'genre(B, J), genre(E, J)', 'true,false,false,false': 'genre(B, M)', 'true,false': 'movie(D, A), movie(D, E), workedunder(F, E)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'movie(G, F), movie(G, H), movie(D, H)', 'true,false,false': 'workedunder(K, B), movie(L, K)'}, {'true,true': [0.154, 1, 41], 'true,false,true,false,false,false': [0.073, 4, 0], 'true,false,false,true': [1.151, 2, 4], 'true,false,true,false,true': [0.619, 2, 1], 'true,false,false,false,true': [0.032, 0, 5], 'false': [1.83e-08, 90, 0], 'true,false,false,false,false': [0.344, 10, 54], 'true,false,true,true': [0.302, 2, 6], 'true,false,true,false,false,true': [1.009, 2, 2]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- director(B), actor(A).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false,true,false,false;movie(I, B), movie(I, J), actor(J).;true;false', '0;true,false;movie(D, A), movie(D, E), director(E).;true;true', '0;true,false,true,false,false,true;genre(B, K), genre(E, K).;false;false', '0;true,false,true,false;workedunder(G, B), movie(H, B).;false;true', '0;true,false,true;genre(B, F).;false;true', '0;true,false,false;workedunder(L, B).;false;false', '1;;workedunder(A, B) :- director(B), actor(A).;true;false', '1;true;movie(C, B).;true;true', '1;true,false,false,false;movie(I, A), movie(I, J), director(J).;false;false', '1;true,true;movie(C, A).;false;true', '1;true,false;genre(B, G).;false;true', '1;true,true,false,true;movie(D, E).;false;false', '1;true,true,false;movie(D, A), movie(C, E), workedunder(F, E).;true;false', '1;true,false,false;workedunder(H, B).;false;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, B), movie(C, A).;false;true', '2;true,false,true,false,false,false;movie(M, A), movie(M, N), workedunder(P, N).;false;false', '2;true,false,true,false,false;workedunder(L, B).;false;true', '2;true,false,true;workedunder(G, B), movie(H, G), movie(H, A).;true;true', '2;true,false;movie(D, B), movie(D, E), movie(F, E).;true;false', '2;true,false,true,true;workedunder(E, I).;false;false', '2;true,false,true,false;movie(J, A), workedunder(K, B).;false;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B), movie(C, A).;false;true', '3;true,false,true,false,false;movie(I, B), movie(I, J), actor(J).;true;false', '3;true,false;movie(D, A), movie(D, E), director(E).;true;true', '3;true,false,true,false,false,true;genre(B, K), genre(E, K).;false;false', '3;true,false,true,false;movie(G, B), workedunder(H, B).;false;true', '3;true,false,true;genre(B, F).;false;true', '3;true,false,false;movie(L, A).;false;false', '4;;workedunder(A, B) :- director(B), actor(A), genre(B, C).;true;false', '4;true;movie(D, B), genre(E, C), genre(E, F).;false;true', '4;true,false,false,false;movie(K, A), movie(K, L), director(L).;true;true', '4;true,false,false,false,false,false;genre(B, R).;false;false', '4;true,false,false,false,true;movie(M, B), movie(M, N), workedunder(P, N).;false;false', '4;true,false,false,false,false;movie(Q, B).;false;true', '4;true,false;movie(G, B), workedunder(H, B).;false;true', '4;true,false,false;workedunder(I, B), movie(J, A).;false;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B), movie(C, A).;false;true', '5;true,false,false,false;workedunder(L, B).;false;false', '5;true,false,false,true,false;workedunder(H, B), movie(I, B).;false;true', '5;true,false,false,true;movie(G, B), movie(G, F).;false;true', '5;true,false,false,true,false,false;movie(J, B), movie(J, K), actor(K).;false;false', '5;true,false;genre(B, D).;false;true', '5;true,false,false;movie(E, A), movie(E, F), director(F).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;true', '6;true,false,false,true,false;movie(I, B), movie(I, J), workedunder(K, J).;true;false', '6;true,false,false,true;genre(B, H).;false;true', '6;true,false,false,true,false,true,false;workedunder(L, B).;false;false', '6;true,false;workedunder(D, B), movie(E, D).;false;true', '6;true,false,false,true,false,true;movie(I, G).;false;true', '6;true,false,false;movie(F, A), movie(F, G), director(G).;true;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B), movie(C, A).;false;true', '7;true,false,true,false,false;genre(B, J), genre(E, J).;false;false', '7;true,false,false,true;workedunder(L, N), workedunder(P, B).;false;false', '7;true,false;movie(D, A), movie(D, E), workedunder(F, E).;true;true', '7;true,false,true,false;workedunder(I, B).;false;true', '7;true,false,true;movie(G, F), movie(G, H), movie(D, H).;false;true', '7;true,false,false;movie(K, B), movie(K, L), movie(M, L).;true;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false,false,false;movie(L, B).;false;false', '8;true,false,false,true,false;movie(J, H), movie(J, G).;false;true', '8;true,false,false,true;workedunder(I, B).;false;true', '8;true,false,false,true,false,false;genre(B, K), genre(G, K).;false;false', '8;true,false;workedunder(D, B), movie(E, D).;false;true', '8;true,false,false;movie(F, A), movie(F, G), workedunder(H, G).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;false', '9;true;movie(C, B), movie(C, A).;false;true', '9;true,false,true,false,false;genre(B, J), genre(E, J).;false;false', '9;true,false,false,false;genre(B, M).;false;false', '9;true,false;movie(D, A), movie(D, E), workedunder(F, E).;true;true', '9;true,false,true,false;workedunder(I, B).;false;true', '9;true,false,true;movie(G, F), movie(G, H), movie(D, H).;false;true', '9;true,false,false;workedunder(K, B), movie(L, K).;false;true']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else if ( workedunder(G, B), movie(H, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(I, B), movie(I, J), actor(J) )
%   | | | | | then if ( genre(B, K), genre(E, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048785;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(D, A), movie(C, E), workedunder(F, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283911;  // std dev = 8,43e-08, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B), movie(D, E), movie(F, E) )
%   | | then if ( workedunder(G, B), movie(H, G), movie(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(I, A), workedunder(J, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(L, A), movie(L, M), workedunder(N, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 1,00e-07, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else if ( movie(G, B), workedunder(H, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(I, B), movie(I, J), actor(J) )
%   | | | | | then if ( genre(B, K), genre(E, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878364;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A), genre(B, C) )
%   then if ( movie(D, B), genre(E, C), genre(E, F) )
%   | then return 0.2581574271796464;  // std dev = 1,826, 152,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.006606532850548616;  // std dev = 2,522, 204,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2815656481483845;  // std dev = 0,310, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D) )
%   | | then return -0.11680388097446655;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( movie(E, A), movie(E, F), director(F) )
%   | | | then if ( movie(G, B), movie(G, F) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(H, B), movie(I, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(J, B), movie(J, K), actor(K) )
%   | | | | | | then return -0.09324838006622839;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09324838006622832;  // std dev = 6,14e-08, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22836503200901564;  // std dev = 0,272, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( workedunder(D, B), movie(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A), movie(F, G), director(G) )
%   | | | then if ( genre(B, H) )
%   | | | | then return -0.10528306025299904;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | | else if ( movie(I, B), movie(I, J), workedunder(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.0856573576766284;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08565735767662853;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19070663625656242;  // std dev = 0,239, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B), movie(G, H), movie(I, H) )
%   | | | then if ( workedunder(H, J), workedunder(K, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.09074324058811957;  // std dev = 0,044, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07918242210222462;  // std dev = 1,49e-08, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1630431710366893;  // std dev = 0,212, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( workedunder(D, B), movie(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A), movie(F, G), workedunder(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(I, B) )
%   | | | | then return -0.08353369420348686;  // std dev = 0,041, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07359802564666018;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.14203194278541031;  // std dev = 0,190, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(G, B), movie(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( genre(B, I) )
%   | | | | then return -0.08170414694406182;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | | else return -0.0673715196672714;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.0687348260370572;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101444
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.274 seconds
Total inference time: 0.627 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101444
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.627 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(I, B), movie(I, J), actor(J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false,false,true': 'genre(B, K), genre(E, K)', 'true,false,true,false': 'workedunder(G, B), movie(H, B)', 'true,false,true': 'genre(B, F)'}, {'true,true': [1.09e-06, 0, 178], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,true,false,false,true,false': [0.0, 10, 0], 'true,false,true,false,false,true,true': [0.0, 0, 0], 'false': [0.0, 145, 0], 'true,false,true,true': [1.49e-08, 23, 0], 'true,false,true,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(D, A), movie(C, E), workedunder(F, E)', 'true,true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 33, 0], 'true,true,true': [0.0, 0, 178], 'true,true,false,true': [0.0, 0, 0], 'false': [8.43e-08, 145, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'movie(L, A), movie(L, M), workedunder(N, M)', 'true,false,true,false,false': 'workedunder(K, B)', 'true,false': 'movie(D, B), movie(D, E), movie(F, E)', 'true,false,true,false': 'movie(I, A), workedunder(J, B)', 'true,false,true': 'workedunder(G, B), movie(H, G), movie(H, A)'}, {'true,true': [5.9e-07, 0, 178], 'true,false,true,false,true': [0.0, 0, 0], 'false': [1e-07, 145, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,false,false,false': [0.0, 33, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(I, B), movie(I, J), actor(J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false,false,true': 'genre(B, K), genre(E, K)', 'true,false,true,false': 'movie(G, B), workedunder(H, B)', 'true,false,true': 'genre(B, F)'}, {'true,true': [3.77e-07, 0, 178], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,true,false,false,true,false': [3.73e-09, 10, 0], 'true,false,true,false,false,true,true': [0.0, 0, 0], 'false': [0.0, 145, 0], 'true,false,true,true': [0.0, 23, 0], 'true,false,true,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A), genre(B, C)', 'true': 'movie(D, B), genre(E, C), genre(E, F)'}, {'true,true': [1.826, 23, 129], 'false': [2.522, 155, 49], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true,false': 'workedunder(H, B), movie(I, B)', 'true,false,false,true': 'movie(G, B), movie(G, F)', 'true,false,false,true,false,false': 'movie(J, B), movie(J, K), actor(K)', 'true,false': 'genre(B, D)', 'true,false,false': 'movie(E, A), movie(E, F), director(F)'}, {'true,true': [0.31, 0, 178], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 23, 0], 'true,false,false,true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false,false,true': [5.27e-09, 10, 0], 'false': [6.14e-08, 145, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true,false': 'movie(I, B), movie(I, J), workedunder(K, J)', 'true,false,false,true': 'genre(B, H)', 'true,false': 'workedunder(D, B), movie(E, D)', 'true,false,false': 'movie(F, A), movie(F, G), director(G)'}, {'true,true': [0.272, 0, 178], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,false,false': [0.0, 10, 0], 'false': [0.0, 145, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true': 'workedunder(H, J), workedunder(K, B)', 'true,false': 'movie(D, A), movie(D, E), workedunder(F, E)', 'true,false,false': 'movie(G, B), movie(G, H), movie(I, H)'}, {'true,true': [0.239, 0, 178], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false': [0.044, 33, 0], 'false': [1.49e-08, 145, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'movie(I, B)', 'true,false': 'workedunder(D, B), movie(E, D)', 'true,false,false': 'movie(F, A), movie(F, G), workedunder(H, G)'}, {'true,true': [0.212, 0, 178], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [0.041, 33, 0], 'false': [0.0, 145, 0], 'true,false,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'genre(B, I)', 'true,false': 'movie(D, A), movie(D, E), workedunder(F, E)', 'true,false,false': 'workedunder(G, B), movie(H, G)'}, {'true,true': [0.19, 0, 178], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [0.0, 23, 0], 'false': [0.0, 145, 0], 'true,false,false,false,false': [2.63e-09, 10, 0], 'true,false,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false;movie(D, A), movie(D, E), director(E).;true;false', '0;true,false,true;genre(B, F).;false;false', '1;;workedunder(A, B) :- director(B), actor(A).;true;false', '1;true;movie(C, B).;true;false', '1;true,true;movie(C, A).;false;false', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, B), movie(C, A).;false;true', '2;true,false,true,false,false;workedunder(K, B).;false;false', '2;true,false;movie(D, B), movie(D, E), movie(F, E).;true;false', '2;true,false,true,false;movie(I, A), workedunder(J, B).;false;true', '2;true,false,true;workedunder(G, B), movie(H, G), movie(H, A).;false;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B), movie(C, A).;false;true', '3;true,false;movie(D, A), movie(D, E), director(E).;true;false', '3;true,false,true;genre(B, F).;false;false', '4;;workedunder(A, B) :- director(B), actor(A), genre(B, C).;false;false', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B), movie(C, A).;false;true', '5;true,false;genre(B, D).;false;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;true', '6;true,false;workedunder(D, B), movie(E, D).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B), movie(C, A).;false;true', '7;true,false;movie(D, A), movie(D, E), workedunder(F, E).;false;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false;workedunder(D, B), movie(E, D).;false;false', '9;;workedunder(A, B) :- director(B), actor(A).;true;false', '9;true;movie(C, B), movie(C, A).;false;true', '9;true,false;movie(D, A), movie(D, E), workedunder(F, E).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,false,true', 0), ('true,false,true,false,false,false', 0), ('true,false,true,false,false,true,true', 0), ('true,false,false', 0)]
Tree #2: [('true,true,false,true', 0), ('true,false', 0)]
Tree #3: [('true,false,true,false,false,false,true', 0), ('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #4: [('true,false,true,false,true', 0), ('true,false,true,false,false,false', 0), ('true,false,true,false,false,true,true', 0), ('true,false,false', 0)]
Tree #5: [('true,false', 0), ('false', 0.7598039215686274), ('true,true', 0.8486842105263158)]
Tree #6: [('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,false,false,false', 0), ('true,false,false,true,true', 0)]
Tree #7: [('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,true', 0)]
Tree #8: [('true,false,false,false', 0), ('true,false,true', 0), ('true,false,false,true,true', 0)]
Tree #9: [('true,false,false,true', 0), ('true,false,false,false,false', 0), ('true,false,true', 0)]
Tree #10: [('true,false,false,true', 0), ('true,false,true', 0)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048785;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283911;  // std dev = 8,43e-08, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B), movie(D, E), movie(F, E) )
%   | | then if ( workedunder(G, B), movie(H, G), movie(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(I, A), workedunder(J, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 1,00e-07, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878364;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A), genre(B, C) )
%   then return 0.2581574271796464;  // std dev = 1,826, 152,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=129 */
%   else return 0.006606532850548616;  // std dev = 2,522, 204,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2815656481483845;  // std dev = 0,310, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D) )
%   | | then return -0.11680388097446655;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.09324838006622839;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.09324838006622832;  // std dev = 6,14e-08, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22836503200901564;  // std dev = 0,272, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( workedunder(D, B), movie(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09933587765409883;  // std dev = 0,052, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.08565735767662853;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19070663625656242;  // std dev = 0,239, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09080256446414084;  // std dev = 0,048, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.07918242210222462;  // std dev = 1,49e-08, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1630431710366893;  // std dev = 0,212, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( workedunder(D, B), movie(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08358508986720468;  // std dev = 0,044, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.07359802564666018;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.14203194278541031;  // std dev = 0,190, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07740588819743985;  // std dev = 0,041, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.0687348260370572;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101424
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.103 seconds
Total inference time: 0.593 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 17.597
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096035
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.687 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 2, Type: transfer, Total folds for small set: 1, Time: 00:23:53
{'CLL': -0.096035, 'Recall': 1.0, 'Learning time': 17.597, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 60000, 'Total time': 25.92076015472412, 'Generating mappings time': 2.5420265197753906, 'Finding best mapping': 20.698086738586426, 'Generating paths time': 2.661585807800293, 'Knowledge compiling time': 0.01905202865600586}, 'Parameter Learning Results': {'CLL': -0.096035, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.687}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1418510649004878;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283911;  // std dev = 9,42e-08, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360625;  // std dev = 8,94e-08, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783638;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926086;  // std dev = 7,60e-08, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839682;  // std dev = 7,15e-08, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109161;  // std dev = 7,30e-08, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07324622576333717;  // std dev = 2,58e-08, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06842697784420265;  // std dev = 6,05e-08, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.37 seconds
Total inference time: 0.528 seconds
AUC ROC: 1.0


Dataset: uwcse,imdb, Run: 1, Fold: 2, Type: scratch, Total folds for small set: 1, Time: 00:23:59
{'CLL': -0.094637, 'Recall': 1.0, 'Learning time': 5.37, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.528}


Best mapping found: ['professor(A) -> director(A)', 'tempadvisedby(A,B) -> workedunder(A,B)', 'inphase(A,B) -> movie(B,A)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(I, B), movie(I, J), actor(J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false,false,true': 'genre(B, K), genre(E, K)', 'true,false,true,false': 'workedunder(G, B), movie(H, B)', 'true,false,true': 'genre(B, F)', 'true,false,false': 'workedunder(L, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [0.894, 4, 1], 'true,false,true,false,false,true,false': [0.816, 1, 2], 'true,false,false,true': [0.373, 7, 35], 'true,false,true,false,false,true,true': [1.0, 2, 2], 'true,false,false,false': [0.335, 4, 27], 'false': [7.15e-08, 90, 0], 'true,false,true,true': [2.11e-08, 0, 3], 'true,false,true,false,false,false': [1.155, 4, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,false,false,false': 'movie(I, A), movie(I, J), director(J)', 'true,true': 'movie(C, A)', 'true,false': 'genre(B, G)', 'true,true,false,true': 'movie(D, E)', 'true,true,false': 'movie(D, A), movie(C, E), workedunder(F, E)', 'true,false,false': 'workedunder(H, B)'}, {'true,false,false,true': [0.892, 1, 3], 'true,true,false,false': [0.35, 8, 48], 'true,true,true': [0.152, 1, 41], 'true,true,false,true,false': [0.47, 8, 8], 'true,false,false,false,true': [0.866, 3, 1], 'false': [0.0, 90, 0], 'true,false,false,false,false': [0.894, 1, 4], 'true,true,false,true,true': [0.834, 1, 2], 'true,false,true': [0.04, 0, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'movie(M, A), movie(M, N), workedunder(P, N)', 'true,false,true,false,false': 'workedunder(L, B)', 'true,false,true': 'workedunder(G, B), movie(H, G), movie(H, A)', 'true,false': 'movie(D, B), movie(D, E), movie(F, E)', 'true,false,true,true': 'workedunder(E, I)', 'true,false,true,false': 'movie(J, A), workedunder(K, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [1.062, 3, 2], 'true,false,true,true,true': [0.816, 1, 2], 'true,false,true,true,false': [1.083, 3, 3], 'true,false,true,false,false,false,true': [1.2, 3, 3], 'false': [6.32e-08, 90, 0], 'true,false,true,false,false,false,false': [0.356, 3, 18], 'true,false,true,false,false,true': [0.307, 2, 17], 'true,false,false': [0.368, 7, 27]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(I, B), movie(I, J), actor(J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false,false,true': 'genre(B, K), genre(E, K)', 'true,false,true,false': 'movie(G, B), workedunder(H, B)', 'true,false,true': 'genre(B, F)', 'true,false,false': 'movie(L, A)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [0.865, 4, 1], 'true,false,true,false,false,true,false': [0.763, 1, 2], 'true,false,false,true': [0.308, 1, 7], 'true,false,true,false,false,true,true': [1.001, 2, 2], 'true,false,false,false': [0.358, 10, 55], 'false': [5.58e-08, 90, 0], 'true,false,true,true': [0.0, 0, 3], 'true,false,true,false,false,false': [1.116, 4, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A), genre(B, C)', 'true': 'movie(D, B), genre(E, C), genre(E, F)', 'true,false,false,false': 'movie(K, A), movie(K, L), director(L)', 'true,false,false,false,false,false': 'genre(B, R)', 'true,false,false,false,true': 'movie(M, B), movie(M, N), workedunder(P, N)', 'true,false,false,false,false': 'movie(Q, B)', 'true,false': 'movie(G, B), workedunder(H, B)', 'true,false,false': 'workedunder(I, B), movie(J, A)'}, {'true,true': [0.304, 14, 92], 'true,false,false,false,false,false,true': [0.0, 0, 3], 'true,false,false,false,true,false': [0.911, 2, 2], 'true,false,false,false,false,false,false': [0.449, 2, 5], 'true,false,false,true': [0.265, 0, 4], 'false': [0.057, 91, 1], 'true,false,false,false,true,true': [0.561, 2, 1], 'true,false,true': [0.784, 2, 2], 'true,false,false,false,false,true': [0.007, 0, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'workedunder(L, B)', 'true,false,false,true,false': 'workedunder(H, B), movie(I, B)', 'true,false,false,true': 'movie(G, B), movie(G, F)', 'true,false,false,true,false,false': 'movie(J, B), movie(J, K), actor(K)', 'true,false': 'genre(B, D)', 'true,false,false': 'movie(E, A), movie(E, F), director(F)'}, {'true,true': [0.154, 1, 41], 'true,false,false,true,false,true': [0.053, 4, 0], 'true,false,false,true,false,false,false': [1.05, 4, 2], 'true,false,false,true,false,false,true': [0.992, 2, 3], 'true,false,false,false,true': [0.38, 7, 30], 'false': [0.0, 90, 0], 'true,false,false,false,false': [0.336, 4, 27], 'true,false,true': [0.118, 0, 8], 'true,false,false,true,true': [0.877, 1, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true,false': 'movie(I, B), movie(I, J), workedunder(K, J)', 'true,false,false,true': 'genre(B, H)', 'true,false,false,true,false,true,false': 'workedunder(L, B)', 'true,false': 'workedunder(D, B), movie(E, D)', 'true,false,false,true,false,true': 'movie(I, G)', 'true,false,false': 'movie(F, A), movie(F, G), director(G)'}, {'true,true': [0.154, 1, 41], 'true,false,false,false': [0.333, 9, 58], 'true,false,false,true,false,false': [1.054, 3, 3], 'true,false,false,true,false,true,true': [0.881, 1, 2], 'true,false,false,true,false,true,false,false': [0.969, 3, 2], 'true,false,false,true,false,true,false,true': [0.046, 4, 0], 'false': [1.49e-08, 90, 0], 'true,false,true': [1.143, 2, 4], 'true,false,false,true,true': [0.0, 0, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'genre(B, J), genre(E, J)', 'true,false,false,true': 'workedunder(L, N), workedunder(P, B)', 'true,false': 'movie(D, A), movie(D, E), workedunder(F, E)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'movie(G, F), movie(G, H), movie(D, H)', 'true,false,false': 'movie(K, B), movie(K, L), movie(M, L)'}, {'true,true': [0.154, 1, 41], 'true,false,true,false,false,false': [0.095, 4, 0], 'true,false,false,false': [0.319, 3, 22], 'true,false,false,true,false': [0.341, 7, 36], 'true,false,true,false,true': [0.631, 2, 1], 'false': [0.0, 90, 0], 'true,false,true,true': [0.308, 2, 6], 'true,false,true,false,false,true': [1.009, 2, 2], 'true,false,false,true,true': [0.453, 2, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'movie(L, B)', 'true,false,false,true,false': 'movie(J, H), movie(J, G)', 'true,false,false,true': 'workedunder(I, B)', 'true,false,false,true,false,false': 'genre(B, K), genre(G, K)', 'true,false': 'workedunder(D, B), movie(E, D)', 'true,false,false': 'movie(F, A), movie(F, G), workedunder(H, G)'}, {'true,true': [0.154, 1, 41], 'true,false,false,true,false,true': [0.736, 1, 2], 'true,false,false,true,false,false,false': [0.083, 4, 0], 'true,false,false,true,false,false,true': [1.009, 2, 2], 'true,false,false,false,true': [0.323, 8, 50], 'false': [0.0, 90, 0], 'true,false,false,false,false': [0.377, 2, 9], 'true,false,true': [1.151, 2, 4], 'true,false,false,true,true': [0.273, 3, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'genre(B, J), genre(E, J)', 'true,false,false,false': 'genre(B, M)', 'true,false': 'movie(D, A), movie(D, E), workedunder(F, E)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'movie(G, F), movie(G, H), movie(D, H)', 'true,false,false': 'workedunder(K, B), movie(L, K)'}, {'true,true': [0.154, 1, 41], 'true,false,true,false,false,false': [0.073, 4, 0], 'true,false,false,true': [1.151, 2, 4], 'true,false,true,false,true': [0.619, 2, 1], 'true,false,false,false,true': [0.032, 0, 5], 'false': [1.83e-08, 90, 0], 'true,false,false,false,false': [0.344, 10, 54], 'true,false,true,true': [0.302, 2, 6], 'true,false,true,false,false,true': [1.009, 2, 2]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- director(B), actor(A).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false,true,false,false;movie(I, B), movie(I, J), actor(J).;true;false', '0;true,false;movie(D, A), movie(D, E), director(E).;true;true', '0;true,false,true,false,false,true;genre(B, K), genre(E, K).;false;false', '0;true,false,true,false;workedunder(G, B), movie(H, B).;false;true', '0;true,false,true;genre(B, F).;false;true', '0;true,false,false;workedunder(L, B).;false;false', '1;;workedunder(A, B) :- director(B), actor(A).;true;false', '1;true;movie(C, B).;true;true', '1;true,false,false,false;movie(I, A), movie(I, J), director(J).;false;false', '1;true,true;movie(C, A).;false;true', '1;true,false;genre(B, G).;false;true', '1;true,true,false,true;movie(D, E).;false;false', '1;true,true,false;movie(D, A), movie(C, E), workedunder(F, E).;true;false', '1;true,false,false;workedunder(H, B).;false;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, B), movie(C, A).;false;true', '2;true,false,true,false,false,false;movie(M, A), movie(M, N), workedunder(P, N).;false;false', '2;true,false,true,false,false;workedunder(L, B).;false;true', '2;true,false,true;workedunder(G, B), movie(H, G), movie(H, A).;true;true', '2;true,false;movie(D, B), movie(D, E), movie(F, E).;true;false', '2;true,false,true,true;workedunder(E, I).;false;false', '2;true,false,true,false;movie(J, A), workedunder(K, B).;false;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B), movie(C, A).;false;true', '3;true,false,true,false,false;movie(I, B), movie(I, J), actor(J).;true;false', '3;true,false;movie(D, A), movie(D, E), director(E).;true;true', '3;true,false,true,false,false,true;genre(B, K), genre(E, K).;false;false', '3;true,false,true,false;movie(G, B), workedunder(H, B).;false;true', '3;true,false,true;genre(B, F).;false;true', '3;true,false,false;movie(L, A).;false;false', '4;;workedunder(A, B) :- director(B), actor(A), genre(B, C).;true;false', '4;true;movie(D, B), genre(E, C), genre(E, F).;false;true', '4;true,false,false,false;movie(K, A), movie(K, L), director(L).;true;true', '4;true,false,false,false,false,false;genre(B, R).;false;false', '4;true,false,false,false,true;movie(M, B), movie(M, N), workedunder(P, N).;false;false', '4;true,false,false,false,false;movie(Q, B).;false;true', '4;true,false;movie(G, B), workedunder(H, B).;false;true', '4;true,false,false;workedunder(I, B), movie(J, A).;false;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B), movie(C, A).;false;true', '5;true,false,false,false;workedunder(L, B).;false;false', '5;true,false,false,true,false;workedunder(H, B), movie(I, B).;false;true', '5;true,false,false,true;movie(G, B), movie(G, F).;false;true', '5;true,false,false,true,false,false;movie(J, B), movie(J, K), actor(K).;false;false', '5;true,false;genre(B, D).;false;true', '5;true,false,false;movie(E, A), movie(E, F), director(F).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;true', '6;true,false,false,true,false;movie(I, B), movie(I, J), workedunder(K, J).;true;false', '6;true,false,false,true;genre(B, H).;false;true', '6;true,false,false,true,false,true,false;workedunder(L, B).;false;false', '6;true,false;workedunder(D, B), movie(E, D).;false;true', '6;true,false,false,true,false,true;movie(I, G).;false;true', '6;true,false,false;movie(F, A), movie(F, G), director(G).;true;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B), movie(C, A).;false;true', '7;true,false,true,false,false;genre(B, J), genre(E, J).;false;false', '7;true,false,false,true;workedunder(L, N), workedunder(P, B).;false;false', '7;true,false;movie(D, A), movie(D, E), workedunder(F, E).;true;true', '7;true,false,true,false;workedunder(I, B).;false;true', '7;true,false,true;movie(G, F), movie(G, H), movie(D, H).;false;true', '7;true,false,false;movie(K, B), movie(K, L), movie(M, L).;true;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false,false,false;movie(L, B).;false;false', '8;true,false,false,true,false;movie(J, H), movie(J, G).;false;true', '8;true,false,false,true;workedunder(I, B).;false;true', '8;true,false,false,true,false,false;genre(B, K), genre(G, K).;false;false', '8;true,false;workedunder(D, B), movie(E, D).;false;true', '8;true,false,false;movie(F, A), movie(F, G), workedunder(H, G).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;false', '9;true;movie(C, B), movie(C, A).;false;true', '9;true,false,true,false,false;genre(B, J), genre(E, J).;false;false', '9;true,false,false,false;genre(B, M).;false;false', '9;true,false;movie(D, A), movie(D, E), workedunder(F, E).;true;true', '9;true,false,true,false;workedunder(I, B).;false;true', '9;true,false,true;movie(G, F), movie(G, H), movie(D, H).;false;true', '9;true,false,false;workedunder(K, B), movie(L, K).;false;true']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099509;  // std dev = 1,07e-06, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else if ( workedunder(G, B), movie(H, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(I, B), movie(I, J), actor(J) )
%   | | | | | then if ( genre(B, K), genre(E, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004883;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109572;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | | else if ( movie(D, A), movie(C, E), workedunder(F, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 5,84e-07, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, B), movie(D, E), movie(F, E) )
%   | | then if ( workedunder(G, B), movie(H, G), movie(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(I, A), workedunder(J, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(L, A), movie(L, M), workedunder(N, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360649;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831047;  // std dev = 8,43e-08, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else if ( movie(G, B), workedunder(H, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(I, B), movie(I, J), actor(J) )
%   | | | | | then if ( genre(B, K), genre(E, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878365;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A), genre(B, C) )
%   then if ( movie(D, B), genre(E, C), genre(E, F) )
%   | then return 0.28195530434614163;  // std dev = 1,670, 192,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=174 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.012940279952563392;  // std dev = 2,600, 254,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.27599602176913696;  // std dev = 0,377, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( genre(B, D) )
%   | | then return -0.11928136332707842;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( movie(E, A), movie(E, F), director(F) )
%   | | | then if ( movie(G, B), movie(G, F) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(H, B), movie(I, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(J, B), movie(J, K), actor(K) )
%   | | | | | | then return -0.09160872467437804;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09160872467437801;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2245097525596702;  // std dev = 0,331, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( workedunder(D, B), movie(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A), movie(F, G), director(G) )
%   | | | then if ( genre(B, H) )
%   | | | | then return -0.1073083776456208;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | | else if ( movie(I, B), movie(I, J), workedunder(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.08426523233022488;  // std dev = 4,56e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08426523233022469;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18793444232196652;  // std dev = 0,292, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B), movie(G, H), movie(I, H) )
%   | | | then if ( workedunder(H, J), workedunder(K, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.09200289799823679;  // std dev = 0,044, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07798660661139842;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16097694823757153;  // std dev = 0,259, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( workedunder(D, B), movie(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A), movie(F, G), workedunder(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(I, B) )
%   | | | | then return -0.0846064923174471;  // std dev = 0,040, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07256033929403582;  // std dev = 8,82e-08, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.14044338998549735;  // std dev = 0,233, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(G, B), movie(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( genre(B, I) )
%   | | | | then return -0.08298589212107686;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | | else return -0.06619689566460775;  // std dev = 3,23e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06782627163704193;  // std dev = 7,60e-08, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101351
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.992 seconds
Total inference time: 0.654 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101351
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.654 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(I, B), movie(I, J), actor(J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false,false,true': 'genre(B, K), genre(E, K)', 'true,false,true,false': 'workedunder(G, B), movie(H, B)', 'true,false,true': 'genre(B, F)'}, {'true,true': [1.07e-06, 0, 223], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,true,false,false,true,false': [0.0, 7, 0], 'true,false,true,false,false,true,true': [0.0, 0, 0], 'false': [0.0, 198, 0], 'true,false,true,true': [0.0, 18, 0], 'true,false,true,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(D, A), movie(C, E), workedunder(F, E)', 'true,true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 25, 0], 'true,true,true': [0.0, 0, 223], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 198, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'movie(L, A), movie(L, M), workedunder(N, M)', 'true,false,true,false,false': 'workedunder(K, B)', 'true,false': 'movie(D, B), movie(D, E), movie(F, E)', 'true,false,true,false': 'movie(I, A), workedunder(J, B)', 'true,false,true': 'workedunder(G, B), movie(H, G), movie(H, A)'}, {'true,true': [5.84e-07, 0, 223], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 198, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,false,false,false': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(I, B), movie(I, J), actor(J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false,false,true': 'genre(B, K), genre(E, K)', 'true,false,true,false': 'movie(G, B), workedunder(H, B)', 'true,false,true': 'genre(B, F)'}, {'true,true': [8.43e-08, 0, 223], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,true,false,false,true,false': [0.0, 7, 0], 'true,false,true,false,false,true,true': [0.0, 0, 0], 'false': [0.0, 198, 0], 'true,false,true,true': [0.0, 18, 0], 'true,false,true,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A), genre(B, C)', 'true': 'movie(D, B), genre(E, C), genre(E, F)'}, {'true,true': [1.67, 18, 174], 'false': [2.6, 205, 49], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true,false': 'workedunder(H, B), movie(I, B)', 'true,false,false,true': 'movie(G, B), movie(G, F)', 'true,false,false,true,false,false': 'movie(J, B), movie(J, K), actor(K)', 'true,false': 'genre(B, D)', 'true,false,false': 'movie(E, A), movie(E, F), director(F)'}, {'true,true': [0.377, 0, 223], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 18, 0], 'true,false,false,true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false,false,true': [0.0, 7, 0], 'false': [0.0, 198, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true,false': 'movie(I, B), movie(I, J), workedunder(K, J)', 'true,false,false,true': 'genre(B, H)', 'true,false': 'workedunder(D, B), movie(E, D)', 'true,false,false': 'movie(F, A), movie(F, G), director(G)'}, {'true,true': [0.331, 0, 223], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,false,false': [4.56e-09, 7, 0], 'false': [0.0, 198, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [1.18e-08, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true': 'workedunder(H, J), workedunder(K, B)', 'true,false': 'movie(D, A), movie(D, E), workedunder(F, E)', 'true,false,false': 'movie(G, B), movie(G, H), movie(I, H)'}, {'true,true': [0.292, 0, 223], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false': [0.044, 25, 0], 'false': [0.0, 198, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'movie(I, B)', 'true,false': 'workedunder(D, B), movie(E, D)', 'true,false,false': 'movie(F, A), movie(F, G), workedunder(H, G)'}, {'true,true': [0.259, 0, 223], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [0.04, 25, 0], 'false': [8.82e-08, 198, 0], 'true,false,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'genre(B, I)', 'true,false': 'movie(D, A), movie(D, E), workedunder(F, E)', 'true,false,false': 'workedunder(G, B), movie(H, G)'}, {'true,true': [0.233, 0, 223], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [0.0, 18, 0], 'false': [7.6e-08, 198, 0], 'true,false,false,false,false': [3.23e-09, 7, 0], 'true,false,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false;movie(D, A), movie(D, E), director(E).;true;false', '0;true,false,true;genre(B, F).;false;false', '1;;workedunder(A, B) :- director(B), actor(A).;true;false', '1;true;movie(C, B).;true;false', '1;true,true;movie(C, A).;false;false', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, B), movie(C, A).;false;true', '2;true,false,true,false,false;workedunder(K, B).;false;false', '2;true,false;movie(D, B), movie(D, E), movie(F, E).;true;false', '2;true,false,true,false;movie(I, A), workedunder(J, B).;false;true', '2;true,false,true;workedunder(G, B), movie(H, G), movie(H, A).;false;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B), movie(C, A).;false;true', '3;true,false;movie(D, A), movie(D, E), director(E).;true;false', '3;true,false,true;genre(B, F).;false;false', '4;;workedunder(A, B) :- director(B), actor(A), genre(B, C).;false;false', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B), movie(C, A).;false;true', '5;true,false;genre(B, D).;false;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;true', '6;true,false;workedunder(D, B), movie(E, D).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B), movie(C, A).;false;true', '7;true,false;movie(D, A), movie(D, E), workedunder(F, E).;false;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false;workedunder(D, B), movie(E, D).;false;false', '9;;workedunder(A, B) :- director(B), actor(A).;true;false', '9;true;movie(C, B), movie(C, A).;false;true', '9;true,false;movie(D, A), movie(D, E), workedunder(F, E).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,false,true', 0), ('true,false,true,false,false,false', 0), ('true,false,true,false,false,true,true', 0), ('true,false,false', 0)]
Tree #2: [('true,true,false,true', 0), ('true,false', 0)]
Tree #3: [('true,false,true,false,false,false,true', 0), ('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #4: [('true,false,true,false,true', 0), ('true,false,true,false,false,false', 0), ('true,false,true,false,false,true,true', 0), ('true,false,false', 0)]
Tree #5: [('true,false', 0), ('false', 0.8070866141732284), ('true,true', 0.90625)]
Tree #6: [('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,false,false,false', 0), ('true,false,false,true,true', 0)]
Tree #7: [('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,true', 0)]
Tree #8: [('true,false,false,false', 0), ('true,false,true', 0), ('true,false,false,true,true', 0)]
Tree #9: [('true,false,false,true', 0), ('true,false,false,false,false', 0), ('true,false,true', 0)]
Tree #10: [('true,false,false,true', 0), ('true,false,true', 0)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099509;  // std dev = 1,07e-06, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004883;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109572;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 5,84e-07, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, B), movie(D, E), movie(F, E) )
%   | | then if ( workedunder(G, B), movie(H, G), movie(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(I, A), workedunder(J, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360649;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831047;  // std dev = 8,43e-08, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878365;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A), genre(B, C) )
%   then return 0.28195530434614163;  // std dev = 1,670, 192,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=174 */
%   else return -0.012940279952563392;  // std dev = 2,600, 254,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.27599602176913696;  // std dev = 0,377, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( genre(B, D) )
%   | | then return -0.11928136332707842;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.09160872467437804;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09160872467437801;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2245097525596702;  // std dev = 0,331, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( workedunder(D, B), movie(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10085629695730995;  // std dev = 0,052, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08426523233022469;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18793444232196652;  // std dev = 0,292, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09208085909349358;  // std dev = 0,048, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07798660661139842;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16097694823757153;  // std dev = 0,259, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( workedunder(D, B), movie(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08467390948454272;  // std dev = 0,044, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07256033929403582;  // std dev = 8,82e-08, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.14044338998549735;  // std dev = 0,233, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07834385409584026;  // std dev = 0,041, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06782627163704193;  // std dev = 7,60e-08, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101377
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.953 seconds
Total inference time: 0.675 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 14.274000000000001
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095159
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.693 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 2, Type: transfer, Total folds for small set: 2, Time: 00:24:41
{'CLL': -0.095159, 'Recall': 1.0, 'Learning time': 14.274000000000001, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 60000, 'Total time': 25.72220206260681, 'Generating mappings time': 2.5658886432647705, 'Finding best mapping': 20.564324855804443, 'Generating paths time': 2.5749430656433105, 'Knowledge compiling time': 0.01703810691833496}, 'Parameter Learning Results': {'CLL': -0.095159, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.693}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995113;  // std dev = 4,13e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.8421489350995105;  // std dev = 0,125, 125,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=123 */
%   else return -0.1418510649004882;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.7066913462877514;  // std dev = 0,125, 125,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=123 */
%   else return -0.12544463852839152;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462834;  // std dev = 4,21e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.5464619265495307;  // std dev = 0,125, 125,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=123 */
%   else return -0.11231637819360651;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.4175135841583098;  // std dev = 2,46e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.41070629715000695;  // std dev = 0,125, 125,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=123 */
%   else return -0.10159632948783649;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601504;  // std dev = 4,21e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.31448141377218597;  // std dev = 0,125, 125,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=123 */
%   else return -0.09269127618926065;  // std dev = 8,16e-08, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694897;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.24893198126512875;  // std dev = 0,125, 125,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=123 */
%   else return -0.08518475138839678;  // std dev = 7,74e-08, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253562;  // std dev = 1,37e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.20335622931444944;  // std dev = 0,125, 125,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=123 */
%   else return -0.07877675473109153;  // std dev = 8,02e-08, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17709649774527725;  // std dev = 6,66e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.1705207191802145;  // std dev = 0,125, 125,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=123 */
%   else return -0.07324622576333675;  // std dev = 1,04e-07, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367133;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.1460166873634165;  // std dev = 0,125, 125,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=123 */
%   else return -0.06842697784420264;  // std dev = 7,60e-08, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.13400703000801115;  // std dev = 3,65e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.12715666126985373;  // std dev = 0,125, 125,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=123 */
%   else return -0.06419184008202626;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098021
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.226 seconds
Total inference time: 0.698 seconds
AUC ROC: 1.0


Dataset: uwcse,imdb, Run: 1, Fold: 2, Type: scratch, Total folds for small set: 2, Time: 00:24:52
{'CLL': -0.098021, 'Recall': 1.0, 'Learning time': 9.226, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.698}


Best mapping found: ['professor(A) -> director(A)', 'tempadvisedby(A,B) -> workedunder(A,B)', 'inphase(A,B) -> movie(B,A)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(I, B), movie(I, J), actor(J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false,false,true': 'genre(B, K), genre(E, K)', 'true,false,true,false': 'workedunder(G, B), movie(H, B)', 'true,false,true': 'genre(B, F)', 'true,false,false': 'workedunder(L, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [0.894, 4, 1], 'true,false,true,false,false,true,false': [0.816, 1, 2], 'true,false,false,true': [0.373, 7, 35], 'true,false,true,false,false,true,true': [1.0, 2, 2], 'true,false,false,false': [0.335, 4, 27], 'false': [7.15e-08, 90, 0], 'true,false,true,true': [2.11e-08, 0, 3], 'true,false,true,false,false,false': [1.155, 4, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,false,false,false': 'movie(I, A), movie(I, J), director(J)', 'true,true': 'movie(C, A)', 'true,false': 'genre(B, G)', 'true,true,false,true': 'movie(D, E)', 'true,true,false': 'movie(D, A), movie(C, E), workedunder(F, E)', 'true,false,false': 'workedunder(H, B)'}, {'true,false,false,true': [0.892, 1, 3], 'true,true,false,false': [0.35, 8, 48], 'true,true,true': [0.152, 1, 41], 'true,true,false,true,false': [0.47, 8, 8], 'true,false,false,false,true': [0.866, 3, 1], 'false': [0.0, 90, 0], 'true,false,false,false,false': [0.894, 1, 4], 'true,true,false,true,true': [0.834, 1, 2], 'true,false,true': [0.04, 0, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'movie(M, A), movie(M, N), workedunder(P, N)', 'true,false,true,false,false': 'workedunder(L, B)', 'true,false,true': 'workedunder(G, B), movie(H, G), movie(H, A)', 'true,false': 'movie(D, B), movie(D, E), movie(F, E)', 'true,false,true,true': 'workedunder(E, I)', 'true,false,true,false': 'movie(J, A), workedunder(K, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [1.062, 3, 2], 'true,false,true,true,true': [0.816, 1, 2], 'true,false,true,true,false': [1.083, 3, 3], 'true,false,true,false,false,false,true': [1.2, 3, 3], 'false': [6.32e-08, 90, 0], 'true,false,true,false,false,false,false': [0.356, 3, 18], 'true,false,true,false,false,true': [0.307, 2, 17], 'true,false,false': [0.368, 7, 27]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(I, B), movie(I, J), actor(J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false,false,true': 'genre(B, K), genre(E, K)', 'true,false,true,false': 'movie(G, B), workedunder(H, B)', 'true,false,true': 'genre(B, F)', 'true,false,false': 'movie(L, A)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [0.865, 4, 1], 'true,false,true,false,false,true,false': [0.763, 1, 2], 'true,false,false,true': [0.308, 1, 7], 'true,false,true,false,false,true,true': [1.001, 2, 2], 'true,false,false,false': [0.358, 10, 55], 'false': [5.58e-08, 90, 0], 'true,false,true,true': [0.0, 0, 3], 'true,false,true,false,false,false': [1.116, 4, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A), genre(B, C)', 'true': 'movie(D, B), genre(E, C), genre(E, F)', 'true,false,false,false': 'movie(K, A), movie(K, L), director(L)', 'true,false,false,false,false,false': 'genre(B, R)', 'true,false,false,false,true': 'movie(M, B), movie(M, N), workedunder(P, N)', 'true,false,false,false,false': 'movie(Q, B)', 'true,false': 'movie(G, B), workedunder(H, B)', 'true,false,false': 'workedunder(I, B), movie(J, A)'}, {'true,true': [0.304, 14, 92], 'true,false,false,false,false,false,true': [0.0, 0, 3], 'true,false,false,false,true,false': [0.911, 2, 2], 'true,false,false,false,false,false,false': [0.449, 2, 5], 'true,false,false,true': [0.265, 0, 4], 'false': [0.057, 91, 1], 'true,false,false,false,true,true': [0.561, 2, 1], 'true,false,true': [0.784, 2, 2], 'true,false,false,false,false,true': [0.007, 0, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'workedunder(L, B)', 'true,false,false,true,false': 'workedunder(H, B), movie(I, B)', 'true,false,false,true': 'movie(G, B), movie(G, F)', 'true,false,false,true,false,false': 'movie(J, B), movie(J, K), actor(K)', 'true,false': 'genre(B, D)', 'true,false,false': 'movie(E, A), movie(E, F), director(F)'}, {'true,true': [0.154, 1, 41], 'true,false,false,true,false,true': [0.053, 4, 0], 'true,false,false,true,false,false,false': [1.05, 4, 2], 'true,false,false,true,false,false,true': [0.992, 2, 3], 'true,false,false,false,true': [0.38, 7, 30], 'false': [0.0, 90, 0], 'true,false,false,false,false': [0.336, 4, 27], 'true,false,true': [0.118, 0, 8], 'true,false,false,true,true': [0.877, 1, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true,false': 'movie(I, B), movie(I, J), workedunder(K, J)', 'true,false,false,true': 'genre(B, H)', 'true,false,false,true,false,true,false': 'workedunder(L, B)', 'true,false': 'workedunder(D, B), movie(E, D)', 'true,false,false,true,false,true': 'movie(I, G)', 'true,false,false': 'movie(F, A), movie(F, G), director(G)'}, {'true,true': [0.154, 1, 41], 'true,false,false,false': [0.333, 9, 58], 'true,false,false,true,false,false': [1.054, 3, 3], 'true,false,false,true,false,true,true': [0.881, 1, 2], 'true,false,false,true,false,true,false,false': [0.969, 3, 2], 'true,false,false,true,false,true,false,true': [0.046, 4, 0], 'false': [1.49e-08, 90, 0], 'true,false,true': [1.143, 2, 4], 'true,false,false,true,true': [0.0, 0, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'genre(B, J), genre(E, J)', 'true,false,false,true': 'workedunder(L, N), workedunder(P, B)', 'true,false': 'movie(D, A), movie(D, E), workedunder(F, E)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'movie(G, F), movie(G, H), movie(D, H)', 'true,false,false': 'movie(K, B), movie(K, L), movie(M, L)'}, {'true,true': [0.154, 1, 41], 'true,false,true,false,false,false': [0.095, 4, 0], 'true,false,false,false': [0.319, 3, 22], 'true,false,false,true,false': [0.341, 7, 36], 'true,false,true,false,true': [0.631, 2, 1], 'false': [0.0, 90, 0], 'true,false,true,true': [0.308, 2, 6], 'true,false,true,false,false,true': [1.009, 2, 2], 'true,false,false,true,true': [0.453, 2, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'movie(L, B)', 'true,false,false,true,false': 'movie(J, H), movie(J, G)', 'true,false,false,true': 'workedunder(I, B)', 'true,false,false,true,false,false': 'genre(B, K), genre(G, K)', 'true,false': 'workedunder(D, B), movie(E, D)', 'true,false,false': 'movie(F, A), movie(F, G), workedunder(H, G)'}, {'true,true': [0.154, 1, 41], 'true,false,false,true,false,true': [0.736, 1, 2], 'true,false,false,true,false,false,false': [0.083, 4, 0], 'true,false,false,true,false,false,true': [1.009, 2, 2], 'true,false,false,false,true': [0.323, 8, 50], 'false': [0.0, 90, 0], 'true,false,false,false,false': [0.377, 2, 9], 'true,false,true': [1.151, 2, 4], 'true,false,false,true,true': [0.273, 3, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'genre(B, J), genre(E, J)', 'true,false,false,false': 'genre(B, M)', 'true,false': 'movie(D, A), movie(D, E), workedunder(F, E)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'movie(G, F), movie(G, H), movie(D, H)', 'true,false,false': 'workedunder(K, B), movie(L, K)'}, {'true,true': [0.154, 1, 41], 'true,false,true,false,false,false': [0.073, 4, 0], 'true,false,false,true': [1.151, 2, 4], 'true,false,true,false,true': [0.619, 2, 1], 'true,false,false,false,true': [0.032, 0, 5], 'false': [1.83e-08, 90, 0], 'true,false,false,false,false': [0.344, 10, 54], 'true,false,true,true': [0.302, 2, 6], 'true,false,true,false,false,true': [1.009, 2, 2]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- director(B), actor(A).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false,true,false,false;movie(I, B), movie(I, J), actor(J).;true;false', '0;true,false;movie(D, A), movie(D, E), director(E).;true;true', '0;true,false,true,false,false,true;genre(B, K), genre(E, K).;false;false', '0;true,false,true,false;workedunder(G, B), movie(H, B).;false;true', '0;true,false,true;genre(B, F).;false;true', '0;true,false,false;workedunder(L, B).;false;false', '1;;workedunder(A, B) :- director(B), actor(A).;true;false', '1;true;movie(C, B).;true;true', '1;true,false,false,false;movie(I, A), movie(I, J), director(J).;false;false', '1;true,true;movie(C, A).;false;true', '1;true,false;genre(B, G).;false;true', '1;true,true,false,true;movie(D, E).;false;false', '1;true,true,false;movie(D, A), movie(C, E), workedunder(F, E).;true;false', '1;true,false,false;workedunder(H, B).;false;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, B), movie(C, A).;false;true', '2;true,false,true,false,false,false;movie(M, A), movie(M, N), workedunder(P, N).;false;false', '2;true,false,true,false,false;workedunder(L, B).;false;true', '2;true,false,true;workedunder(G, B), movie(H, G), movie(H, A).;true;true', '2;true,false;movie(D, B), movie(D, E), movie(F, E).;true;false', '2;true,false,true,true;workedunder(E, I).;false;false', '2;true,false,true,false;movie(J, A), workedunder(K, B).;false;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B), movie(C, A).;false;true', '3;true,false,true,false,false;movie(I, B), movie(I, J), actor(J).;true;false', '3;true,false;movie(D, A), movie(D, E), director(E).;true;true', '3;true,false,true,false,false,true;genre(B, K), genre(E, K).;false;false', '3;true,false,true,false;movie(G, B), workedunder(H, B).;false;true', '3;true,false,true;genre(B, F).;false;true', '3;true,false,false;movie(L, A).;false;false', '4;;workedunder(A, B) :- director(B), actor(A), genre(B, C).;true;false', '4;true;movie(D, B), genre(E, C), genre(E, F).;false;true', '4;true,false,false,false;movie(K, A), movie(K, L), director(L).;true;true', '4;true,false,false,false,false,false;genre(B, R).;false;false', '4;true,false,false,false,true;movie(M, B), movie(M, N), workedunder(P, N).;false;false', '4;true,false,false,false,false;movie(Q, B).;false;true', '4;true,false;movie(G, B), workedunder(H, B).;false;true', '4;true,false,false;workedunder(I, B), movie(J, A).;false;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B), movie(C, A).;false;true', '5;true,false,false,false;workedunder(L, B).;false;false', '5;true,false,false,true,false;workedunder(H, B), movie(I, B).;false;true', '5;true,false,false,true;movie(G, B), movie(G, F).;false;true', '5;true,false,false,true,false,false;movie(J, B), movie(J, K), actor(K).;false;false', '5;true,false;genre(B, D).;false;true', '5;true,false,false;movie(E, A), movie(E, F), director(F).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;true', '6;true,false,false,true,false;movie(I, B), movie(I, J), workedunder(K, J).;true;false', '6;true,false,false,true;genre(B, H).;false;true', '6;true,false,false,true,false,true,false;workedunder(L, B).;false;false', '6;true,false;workedunder(D, B), movie(E, D).;false;true', '6;true,false,false,true,false,true;movie(I, G).;false;true', '6;true,false,false;movie(F, A), movie(F, G), director(G).;true;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B), movie(C, A).;false;true', '7;true,false,true,false,false;genre(B, J), genre(E, J).;false;false', '7;true,false,false,true;workedunder(L, N), workedunder(P, B).;false;false', '7;true,false;movie(D, A), movie(D, E), workedunder(F, E).;true;true', '7;true,false,true,false;workedunder(I, B).;false;true', '7;true,false,true;movie(G, F), movie(G, H), movie(D, H).;false;true', '7;true,false,false;movie(K, B), movie(K, L), movie(M, L).;true;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false,false,false;movie(L, B).;false;false', '8;true,false,false,true,false;movie(J, H), movie(J, G).;false;true', '8;true,false,false,true;workedunder(I, B).;false;true', '8;true,false,false,true,false,false;genre(B, K), genre(G, K).;false;false', '8;true,false;workedunder(D, B), movie(E, D).;false;true', '8;true,false,false;movie(F, A), movie(F, G), workedunder(H, G).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;false', '9;true;movie(C, B), movie(C, A).;false;true', '9;true,false,true,false,false;genre(B, J), genre(E, J).;false;false', '9;true,false,false,false;genre(B, M).;false;false', '9;true,false;movie(D, A), movie(D, E), workedunder(F, E).;true;true', '9;true,false,true,false;workedunder(I, B).;false;true', '9;true,false,true;movie(G, F), movie(G, H), movie(D, H).;false;true', '9;true,false,false;workedunder(K, B), movie(L, K).;false;true']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1,08e-06, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else if ( workedunder(G, B), movie(H, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(I, B), movie(I, J), actor(J) )
%   | | | | | then if ( genre(B, K), genre(E, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004884;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109576;  // std dev = 0,000, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | | else if ( movie(D, A), movie(C, E), workedunder(F, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 2,67e-07, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else if ( movie(D, B), movie(D, E), movie(F, E) )
%   | | then if ( workedunder(G, B), movie(H, G), movie(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(I, A), workedunder(J, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(L, A), movie(L, M), workedunder(N, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360674;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831125;  // std dev = 0,000, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else if ( movie(G, B), workedunder(H, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(I, B), movie(I, J), actor(J) )
%   | | | | | then if ( genre(B, K), genre(E, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A), genre(B, C) )
%   then if ( movie(D, B), genre(E, C), genre(E, F) )
%   | then return 0.28612433484804795;  // std dev = 1,813, 251,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=230 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.026708367250755326;  // std dev = 2,653, 307,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.27317443290073684;  // std dev = 0,412, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else if ( genre(B, D) )
%   | | then return -0.11972002944880732;  // std dev = 7,45e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( movie(E, A), movie(E, F), director(F) )
%   | | | then if ( movie(G, B), movie(G, F) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(H, B), movie(I, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(J, B), movie(J, K), actor(K) )
%   | | | | | | then return -0.09046941579109082;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09046941579109094;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22253399458414927;  // std dev = 0,362, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else if ( workedunder(D, B), movie(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A), movie(F, G), director(G) )
%   | | | then if ( genre(B, H) )
%   | | | | then return -0.10766624534074969;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | | else if ( movie(I, B), movie(I, J), workedunder(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.08329584006660677;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08329584006660674;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1864989349655373;  // std dev = 0,320, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else if ( movie(D, A), movie(D, E), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B), movie(G, H), movie(I, H) )
%   | | | then if ( workedunder(H, J), workedunder(K, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.09157120656430709;  // std dev = 0,052, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07715235630717586;  // std dev = 4,47e-08, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15989725129329999;  // std dev = 0,285, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else if ( workedunder(D, B), movie(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A), movie(F, G), workedunder(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(I, B) )
%   | | | | then return -0.08424061985552532;  // std dev = 0,048, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07183522040809939;  // std dev = 8,43e-08, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13960668190300932;  // std dev = 0,256, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else if ( movie(D, A), movie(D, E), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(G, B), movie(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( genre(B, I) )
%   | | | | then return -0.08330378287944022;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | | else return -0.06552862894099444;  // std dev = 4,56e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06719046994773781;  // std dev = 8,82e-08, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099491
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.415 seconds
Total inference time: 0.754 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099491
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.754 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(I, B), movie(I, J), actor(J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false,false,true': 'genre(B, K), genre(E, K)', 'true,false,true,false': 'workedunder(G, B), movie(H, B)', 'true,false,true': 'genre(B, F)'}, {'true,true': [1.08e-06, 0, 279], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,true,false,false,true,false': [0.0, 9, 0], 'true,false,true,false,false,true,true': [0.0, 0, 0], 'false': [0.0, 249, 0], 'true,false,true,true': [1.05e-08, 21, 0], 'true,false,true,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(D, A), movie(C, E), workedunder(F, E)', 'true,true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 30, 0], 'true,true,true': [0.0, 0, 279], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 249, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'movie(L, A), movie(L, M), workedunder(N, M)', 'true,false,true,false,false': 'workedunder(K, B)', 'true,false': 'movie(D, B), movie(D, E), movie(F, E)', 'true,false,true,false': 'movie(I, A), workedunder(J, B)', 'true,false,true': 'workedunder(G, B), movie(H, G), movie(H, A)'}, {'true,true': [2.67e-07, 0, 279], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 249, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,false,false,false': [0.0, 30, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(I, B), movie(I, J), actor(J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false,false,true': 'genre(B, K), genre(E, K)', 'true,false,true,false': 'movie(G, B), workedunder(H, B)', 'true,false,true': 'genre(B, F)'}, {'true,true': [0.0, 0, 279], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,true,false,false,true,false': [5.27e-09, 9, 0], 'true,false,true,false,false,true,true': [0.0, 0, 0], 'false': [0.0, 249, 0], 'true,false,true,true': [0.0, 21, 0], 'true,false,true,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A), genre(B, C)', 'true': 'movie(D, B), genre(E, C), genre(E, F)'}, {'true,true': [1.813, 21, 230], 'false': [2.653, 258, 49], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true,false': 'workedunder(H, B), movie(I, B)', 'true,false,false,true': 'movie(G, B), movie(G, F)', 'true,false,false,true,false,false': 'movie(J, B), movie(J, K), actor(K)', 'true,false': 'genre(B, D)', 'true,false,false': 'movie(E, A), movie(E, F), director(F)'}, {'true,true': [0.412, 0, 279], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [7.45e-09, 21, 0], 'true,false,false,true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false,false,true': [3.73e-09, 9, 0], 'false': [0.0, 249, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true,false': 'movie(I, B), movie(I, J), workedunder(K, J)', 'true,false,false,true': 'genre(B, H)', 'true,false': 'workedunder(D, B), movie(E, D)', 'true,false,false': 'movie(F, A), movie(F, G), director(G)'}, {'true,true': [0.362, 0, 279], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,false,false': [3.73e-09, 9, 0], 'false': [0.0, 249, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 21, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true': 'workedunder(H, J), workedunder(K, B)', 'true,false': 'movie(D, A), movie(D, E), workedunder(F, E)', 'true,false,false': 'movie(G, B), movie(G, H), movie(I, H)'}, {'true,true': [0.32, 0, 279], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false': [0.052, 30, 0], 'false': [4.47e-08, 249, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'movie(I, B)', 'true,false': 'workedunder(D, B), movie(E, D)', 'true,false,false': 'movie(F, A), movie(F, G), workedunder(H, G)'}, {'true,true': [0.285, 0, 279], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [0.048, 30, 0], 'false': [8.43e-08, 249, 0], 'true,false,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'genre(B, I)', 'true,false': 'movie(D, A), movie(D, E), workedunder(F, E)', 'true,false,false': 'workedunder(G, B), movie(H, G)'}, {'true,true': [0.256, 0, 279], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [0.0, 21, 0], 'false': [8.82e-08, 249, 0], 'true,false,false,false,false': [4.56e-09, 9, 0], 'true,false,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false;movie(D, A), movie(D, E), director(E).;true;false', '0;true,false,true;genre(B, F).;false;false', '1;;workedunder(A, B) :- director(B), actor(A).;true;false', '1;true;movie(C, B).;true;false', '1;true,true;movie(C, A).;false;false', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, B), movie(C, A).;false;true', '2;true,false,true,false,false;workedunder(K, B).;false;false', '2;true,false;movie(D, B), movie(D, E), movie(F, E).;true;false', '2;true,false,true,false;movie(I, A), workedunder(J, B).;false;true', '2;true,false,true;workedunder(G, B), movie(H, G), movie(H, A).;false;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B), movie(C, A).;false;true', '3;true,false;movie(D, A), movie(D, E), director(E).;true;false', '3;true,false,true;genre(B, F).;false;false', '4;;workedunder(A, B) :- director(B), actor(A), genre(B, C).;false;false', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B), movie(C, A).;false;true', '5;true,false;genre(B, D).;false;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;true', '6;true,false;workedunder(D, B), movie(E, D).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B), movie(C, A).;false;true', '7;true,false;movie(D, A), movie(D, E), workedunder(F, E).;false;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false;workedunder(D, B), movie(E, D).;false;false', '9;;workedunder(A, B) :- director(B), actor(A).;true;false', '9;true;movie(C, B), movie(C, A).;false;true', '9;true,false;movie(D, A), movie(D, E), workedunder(F, E).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,false,true', 0), ('true,false,true,false,false,false', 0), ('true,false,true,false,false,true,true', 0), ('true,false,false', 0)]
Tree #2: [('true,true,false,true', 0), ('true,false', 0)]
Tree #3: [('true,false,true,false,false,false,true', 0), ('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #4: [('true,false,true,false,true', 0), ('true,false,true,false,false,false', 0), ('true,false,true,false,false,true,true', 0), ('true,false,false', 0)]
Tree #5: [('true,false', 0), ('false', 0.8403908794788274), ('true,true', 0.9163346613545816)]
Tree #6: [('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,false,false,false', 0), ('true,false,false,true,true', 0)]
Tree #7: [('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,true', 0)]
Tree #8: [('true,false,false,false', 0), ('true,false,true', 0), ('true,false,false,true,true', 0)]
Tree #9: [('true,false,false,true', 0), ('true,false,false,false,false', 0), ('true,false,true', 0)]
Tree #10: [('true,false,false,true', 0), ('true,false,true', 0)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1,08e-06, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004884;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109576;  // std dev = 0,000, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 2,67e-07, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else if ( movie(D, B), movie(D, E), movie(F, E) )
%   | | then if ( workedunder(G, B), movie(H, G), movie(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(I, A), workedunder(J, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360674;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831125;  // std dev = 0,000, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A), genre(B, C) )
%   then return 0.28612433484804795;  // std dev = 1,813, 251,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=230 */
%   else return -0.026708367250755326;  // std dev = 2,653, 307,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.27317443290073684;  // std dev = 0,412, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else if ( genre(B, D) )
%   | | then return -0.11972002944880732;  // std dev = 7,45e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.09046941579109082;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09046941579109094;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22253399458414927;  // std dev = 0,362, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else if ( workedunder(D, B), movie(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10035512375850678;  // std dev = 0,061, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.08329584006660674;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1864989349655373;  // std dev = 0,320, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else if ( movie(D, A), movie(D, E), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.0916621342902774;  // std dev = 0,056, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07715235630717586;  // std dev = 4,47e-08, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15989725129329999;  // std dev = 0,285, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else if ( workedunder(D, B), movie(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.0843192936815356;  // std dev = 0,052, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07183522040809939;  // std dev = 8,43e-08, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13960668190300932;  // std dev = 0,256, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else if ( movie(D, A), movie(D, E), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07803998227773597;  // std dev = 0,049, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.06719046994773781;  // std dev = 8,82e-08, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099534
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.409 seconds
Total inference time: 0.762 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 20.34
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095099
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.764 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 2, Type: transfer, Total folds for small set: 3, Time: 00:25:40
{'CLL': -0.095099, 'Recall': 1.0, 'Learning time': 20.34, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 60000, 'Total time': 26.1807382106781, 'Generating mappings time': 2.7017414569854736, 'Finding best mapping': 20.680063247680664, 'Generating paths time': 2.7642199993133545, 'Knowledge compiling time': 0.034700870513916016}, 'Parameter Learning Results': {'CLL': -0.095099, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.764}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.8581489350995086;  // std dev = 1,08e-06, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048832;  // std dev = 0,000, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839172;  // std dev = 0,000, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( director(A) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.5553664367462832;  // std dev = 2,67e-07, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else return -0.11231637819360668;  // std dev = 0,000, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.41751358415831125;  // std dev = 0,000, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10159632948783652;  // std dev = 0,000, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.32071184716015055;  // std dev = 0,000, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09269127618926053;  // std dev = 7,60e-08, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.2551722425694878;  // std dev = 3,58e-07, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839678;  // std dev = 8,56e-08, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109146;  // std dev = 6,32e-08, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
%   else if ( actor(A), movie(C, B), movie(C, A) )
%   | then return 0.20975771563253479;  // std dev = 2,86e-07, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.17709649774527705;  // std dev = 1,26e-07, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07324622576333674;  // std dev = 1,24e-07, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( director(A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.15274385809367158;  // std dev = 0,000, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else return -0.06842697784420261;  // std dev = 6,32e-08, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.1340070300080114;  // std dev = 0,000, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   | else return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06419184008202626;  // std dev = 1,49e-08, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.681 seconds
Total inference time: 0.565 seconds
AUC ROC: 1.0


Dataset: uwcse,imdb, Run: 1, Fold: 2, Type: scratch, Total folds for small set: 3, Time: 00:25:47
{'CLL': -0.094637, 'Recall': 1.0, 'Learning time': 5.681, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.565}


Best mapping found: ['professor(A) -> director(A)', 'tempadvisedby(A,B) -> workedunder(A,B)', 'inphase(A,B) -> movie(B,A)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(I, B), movie(I, J), actor(J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false,false,true': 'genre(B, K), genre(E, K)', 'true,false,true,false': 'workedunder(G, B), movie(H, B)', 'true,false,true': 'genre(B, F)', 'true,false,false': 'workedunder(L, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [0.894, 4, 1], 'true,false,true,false,false,true,false': [0.816, 1, 2], 'true,false,false,true': [0.373, 7, 35], 'true,false,true,false,false,true,true': [1.0, 2, 2], 'true,false,false,false': [0.335, 4, 27], 'false': [7.15e-08, 90, 0], 'true,false,true,true': [2.11e-08, 0, 3], 'true,false,true,false,false,false': [1.155, 4, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,false,false,false': 'movie(I, A), movie(I, J), director(J)', 'true,true': 'movie(C, A)', 'true,false': 'genre(B, G)', 'true,true,false,true': 'movie(D, E)', 'true,true,false': 'movie(D, A), movie(C, E), workedunder(F, E)', 'true,false,false': 'workedunder(H, B)'}, {'true,false,false,true': [0.892, 1, 3], 'true,true,false,false': [0.35, 8, 48], 'true,true,true': [0.152, 1, 41], 'true,true,false,true,false': [0.47, 8, 8], 'true,false,false,false,true': [0.866, 3, 1], 'false': [0.0, 90, 0], 'true,false,false,false,false': [0.894, 1, 4], 'true,true,false,true,true': [0.834, 1, 2], 'true,false,true': [0.04, 0, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'movie(M, A), movie(M, N), workedunder(P, N)', 'true,false,true,false,false': 'workedunder(L, B)', 'true,false,true': 'workedunder(G, B), movie(H, G), movie(H, A)', 'true,false': 'movie(D, B), movie(D, E), movie(F, E)', 'true,false,true,true': 'workedunder(E, I)', 'true,false,true,false': 'movie(J, A), workedunder(K, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [1.062, 3, 2], 'true,false,true,true,true': [0.816, 1, 2], 'true,false,true,true,false': [1.083, 3, 3], 'true,false,true,false,false,false,true': [1.2, 3, 3], 'false': [6.32e-08, 90, 0], 'true,false,true,false,false,false,false': [0.356, 3, 18], 'true,false,true,false,false,true': [0.307, 2, 17], 'true,false,false': [0.368, 7, 27]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(I, B), movie(I, J), actor(J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false,false,true': 'genre(B, K), genre(E, K)', 'true,false,true,false': 'movie(G, B), workedunder(H, B)', 'true,false,true': 'genre(B, F)', 'true,false,false': 'movie(L, A)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [0.865, 4, 1], 'true,false,true,false,false,true,false': [0.763, 1, 2], 'true,false,false,true': [0.308, 1, 7], 'true,false,true,false,false,true,true': [1.001, 2, 2], 'true,false,false,false': [0.358, 10, 55], 'false': [5.58e-08, 90, 0], 'true,false,true,true': [0.0, 0, 3], 'true,false,true,false,false,false': [1.116, 4, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A), genre(B, C)', 'true': 'movie(D, B), genre(E, C), genre(E, F)', 'true,false,false,false': 'movie(K, A), movie(K, L), director(L)', 'true,false,false,false,false,false': 'genre(B, R)', 'true,false,false,false,true': 'movie(M, B), movie(M, N), workedunder(P, N)', 'true,false,false,false,false': 'movie(Q, B)', 'true,false': 'movie(G, B), workedunder(H, B)', 'true,false,false': 'workedunder(I, B), movie(J, A)'}, {'true,true': [0.304, 14, 92], 'true,false,false,false,false,false,true': [0.0, 0, 3], 'true,false,false,false,true,false': [0.911, 2, 2], 'true,false,false,false,false,false,false': [0.449, 2, 5], 'true,false,false,true': [0.265, 0, 4], 'false': [0.057, 91, 1], 'true,false,false,false,true,true': [0.561, 2, 1], 'true,false,true': [0.784, 2, 2], 'true,false,false,false,false,true': [0.007, 0, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'workedunder(L, B)', 'true,false,false,true,false': 'workedunder(H, B), movie(I, B)', 'true,false,false,true': 'movie(G, B), movie(G, F)', 'true,false,false,true,false,false': 'movie(J, B), movie(J, K), actor(K)', 'true,false': 'genre(B, D)', 'true,false,false': 'movie(E, A), movie(E, F), director(F)'}, {'true,true': [0.154, 1, 41], 'true,false,false,true,false,true': [0.053, 4, 0], 'true,false,false,true,false,false,false': [1.05, 4, 2], 'true,false,false,true,false,false,true': [0.992, 2, 3], 'true,false,false,false,true': [0.38, 7, 30], 'false': [0.0, 90, 0], 'true,false,false,false,false': [0.336, 4, 27], 'true,false,true': [0.118, 0, 8], 'true,false,false,true,true': [0.877, 1, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true,false': 'movie(I, B), movie(I, J), workedunder(K, J)', 'true,false,false,true': 'genre(B, H)', 'true,false,false,true,false,true,false': 'workedunder(L, B)', 'true,false': 'workedunder(D, B), movie(E, D)', 'true,false,false,true,false,true': 'movie(I, G)', 'true,false,false': 'movie(F, A), movie(F, G), director(G)'}, {'true,true': [0.154, 1, 41], 'true,false,false,false': [0.333, 9, 58], 'true,false,false,true,false,false': [1.054, 3, 3], 'true,false,false,true,false,true,true': [0.881, 1, 2], 'true,false,false,true,false,true,false,false': [0.969, 3, 2], 'true,false,false,true,false,true,false,true': [0.046, 4, 0], 'false': [1.49e-08, 90, 0], 'true,false,true': [1.143, 2, 4], 'true,false,false,true,true': [0.0, 0, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'genre(B, J), genre(E, J)', 'true,false,false,true': 'workedunder(L, N), workedunder(P, B)', 'true,false': 'movie(D, A), movie(D, E), workedunder(F, E)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'movie(G, F), movie(G, H), movie(D, H)', 'true,false,false': 'movie(K, B), movie(K, L), movie(M, L)'}, {'true,true': [0.154, 1, 41], 'true,false,true,false,false,false': [0.095, 4, 0], 'true,false,false,false': [0.319, 3, 22], 'true,false,false,true,false': [0.341, 7, 36], 'true,false,true,false,true': [0.631, 2, 1], 'false': [0.0, 90, 0], 'true,false,true,true': [0.308, 2, 6], 'true,false,true,false,false,true': [1.009, 2, 2], 'true,false,false,true,true': [0.453, 2, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'movie(L, B)', 'true,false,false,true,false': 'movie(J, H), movie(J, G)', 'true,false,false,true': 'workedunder(I, B)', 'true,false,false,true,false,false': 'genre(B, K), genre(G, K)', 'true,false': 'workedunder(D, B), movie(E, D)', 'true,false,false': 'movie(F, A), movie(F, G), workedunder(H, G)'}, {'true,true': [0.154, 1, 41], 'true,false,false,true,false,true': [0.736, 1, 2], 'true,false,false,true,false,false,false': [0.083, 4, 0], 'true,false,false,true,false,false,true': [1.009, 2, 2], 'true,false,false,false,true': [0.323, 8, 50], 'false': [0.0, 90, 0], 'true,false,false,false,false': [0.377, 2, 9], 'true,false,true': [1.151, 2, 4], 'true,false,false,true,true': [0.273, 3, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'genre(B, J), genre(E, J)', 'true,false,false,false': 'genre(B, M)', 'true,false': 'movie(D, A), movie(D, E), workedunder(F, E)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'movie(G, F), movie(G, H), movie(D, H)', 'true,false,false': 'workedunder(K, B), movie(L, K)'}, {'true,true': [0.154, 1, 41], 'true,false,true,false,false,false': [0.073, 4, 0], 'true,false,false,true': [1.151, 2, 4], 'true,false,true,false,true': [0.619, 2, 1], 'true,false,false,false,true': [0.032, 0, 5], 'false': [1.83e-08, 90, 0], 'true,false,false,false,false': [0.344, 10, 54], 'true,false,true,true': [0.302, 2, 6], 'true,false,true,false,false,true': [1.009, 2, 2]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- director(B), actor(A).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false,true,false,false;movie(I, B), movie(I, J), actor(J).;true;false', '0;true,false;movie(D, A), movie(D, E), director(E).;true;true', '0;true,false,true,false,false,true;genre(B, K), genre(E, K).;false;false', '0;true,false,true,false;workedunder(G, B), movie(H, B).;false;true', '0;true,false,true;genre(B, F).;false;true', '0;true,false,false;workedunder(L, B).;false;false', '1;;workedunder(A, B) :- director(B), actor(A).;true;false', '1;true;movie(C, B).;true;true', '1;true,false,false,false;movie(I, A), movie(I, J), director(J).;false;false', '1;true,true;movie(C, A).;false;true', '1;true,false;genre(B, G).;false;true', '1;true,true,false,true;movie(D, E).;false;false', '1;true,true,false;movie(D, A), movie(C, E), workedunder(F, E).;true;false', '1;true,false,false;workedunder(H, B).;false;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, B), movie(C, A).;false;true', '2;true,false,true,false,false,false;movie(M, A), movie(M, N), workedunder(P, N).;false;false', '2;true,false,true,false,false;workedunder(L, B).;false;true', '2;true,false,true;workedunder(G, B), movie(H, G), movie(H, A).;true;true', '2;true,false;movie(D, B), movie(D, E), movie(F, E).;true;false', '2;true,false,true,true;workedunder(E, I).;false;false', '2;true,false,true,false;movie(J, A), workedunder(K, B).;false;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B), movie(C, A).;false;true', '3;true,false,true,false,false;movie(I, B), movie(I, J), actor(J).;true;false', '3;true,false;movie(D, A), movie(D, E), director(E).;true;true', '3;true,false,true,false,false,true;genre(B, K), genre(E, K).;false;false', '3;true,false,true,false;movie(G, B), workedunder(H, B).;false;true', '3;true,false,true;genre(B, F).;false;true', '3;true,false,false;movie(L, A).;false;false', '4;;workedunder(A, B) :- director(B), actor(A), genre(B, C).;true;false', '4;true;movie(D, B), genre(E, C), genre(E, F).;false;true', '4;true,false,false,false;movie(K, A), movie(K, L), director(L).;true;true', '4;true,false,false,false,false,false;genre(B, R).;false;false', '4;true,false,false,false,true;movie(M, B), movie(M, N), workedunder(P, N).;false;false', '4;true,false,false,false,false;movie(Q, B).;false;true', '4;true,false;movie(G, B), workedunder(H, B).;false;true', '4;true,false,false;workedunder(I, B), movie(J, A).;false;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B), movie(C, A).;false;true', '5;true,false,false,false;workedunder(L, B).;false;false', '5;true,false,false,true,false;workedunder(H, B), movie(I, B).;false;true', '5;true,false,false,true;movie(G, B), movie(G, F).;false;true', '5;true,false,false,true,false,false;movie(J, B), movie(J, K), actor(K).;false;false', '5;true,false;genre(B, D).;false;true', '5;true,false,false;movie(E, A), movie(E, F), director(F).;true;true', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;true', '6;true,false,false,true,false;movie(I, B), movie(I, J), workedunder(K, J).;true;false', '6;true,false,false,true;genre(B, H).;false;true', '6;true,false,false,true,false,true,false;workedunder(L, B).;false;false', '6;true,false;workedunder(D, B), movie(E, D).;false;true', '6;true,false,false,true,false,true;movie(I, G).;false;true', '6;true,false,false;movie(F, A), movie(F, G), director(G).;true;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B), movie(C, A).;false;true', '7;true,false,true,false,false;genre(B, J), genre(E, J).;false;false', '7;true,false,false,true;workedunder(L, N), workedunder(P, B).;false;false', '7;true,false;movie(D, A), movie(D, E), workedunder(F, E).;true;true', '7;true,false,true,false;workedunder(I, B).;false;true', '7;true,false,true;movie(G, F), movie(G, H), movie(D, H).;false;true', '7;true,false,false;movie(K, B), movie(K, L), movie(M, L).;true;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false,false,false;movie(L, B).;false;false', '8;true,false,false,true,false;movie(J, H), movie(J, G).;false;true', '8;true,false,false,true;workedunder(I, B).;false;true', '8;true,false,false,true,false,false;genre(B, K), genre(G, K).;false;false', '8;true,false;workedunder(D, B), movie(E, D).;false;true', '8;true,false,false;movie(F, A), movie(F, G), workedunder(H, G).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;false', '9;true;movie(C, B), movie(C, A).;false;true', '9;true,false,true,false,false;genre(B, J), genre(E, J).;false;false', '9;true,false,false,false;genre(B, M).;false;false', '9;true,false;movie(D, A), movie(D, E), workedunder(F, E).;true;true', '9;true,false,true,false;workedunder(I, B).;false;true', '9;true,false,true;movie(G, F), movie(G, H), movie(D, H).;false;true', '9;true,false,false;workedunder(K, B), movie(L, K).;false;true']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else if ( workedunder(G, B), movie(H, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(I, B), movie(I, J), actor(J) )
%   | | | | | then if ( genre(B, K), genre(E, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048788;  // std dev = 7,30e-08, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(D, A), movie(C, E), workedunder(F, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839197;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, B), movie(D, E), movie(F, E) )
%   | | then if ( workedunder(G, B), movie(H, G), movie(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(I, A), workedunder(J, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(L, A), movie(L, M), workedunder(N, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360686;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else if ( movie(G, B), workedunder(H, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(I, B), movie(I, J), actor(J) )
%   | | | | | then if ( genre(B, K), genre(E, K) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878366;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A), genre(B, C) )
%   then if ( movie(D, B), genre(E, C), genre(E, F) )
%   | then return 0.3013800464279838;  // std dev = 1,455, 278,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=265 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.02677023760111125;  // std dev = 2,911, 370,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=59 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2711933113012839;  // std dev = 0,470, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( genre(B, D) )
%   | | then return -0.12133713550492248;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( movie(E, A), movie(E, F), director(F) )
%   | | | then if ( movie(G, B), movie(G, F) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(H, B), movie(I, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(J, B), movie(J, K), actor(K) )
%   | | | | | | then return -0.0904643249368286;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09046432493682845;  // std dev = 9,42e-08, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22116617485147066;  // std dev = 0,414, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( workedunder(D, B), movie(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A), movie(F, G), director(G) )
%   | | | then if ( genre(B, H) )
%   | | | | then return -0.10898359234859;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | | else if ( movie(I, B), movie(I, J), workedunder(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.08329150462068789;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08329150462068814;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18551708169463732;  // std dev = 0,366, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A), movie(D, E), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B), movie(G, H), movie(I, H) )
%   | | | then if ( workedunder(H, J), workedunder(K, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.09199200178547853;  // std dev = 0,044, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07714862238041321;  // std dev = 9,66e-08, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15916659120731028;  // std dev = 0,326, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( workedunder(D, B), movie(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A), movie(F, G), workedunder(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(I, B) )
%   | | | | then return -0.08459931031568924;  // std dev = 0,041, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07183197273217803;  // std dev = 7,60e-08, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13904583746442986;  // std dev = 0,293, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A), movie(D, E), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(G, B), movie(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( genre(B, I) )
%   | | | | then return -0.0841894113733698;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | | else return -0.0654777044431669;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0671876206035051;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098991
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.25 seconds
Total inference time: 0.76 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098991
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.76 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(I, B), movie(I, J), actor(J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false,false,true': 'genre(B, K), genre(E, K)', 'true,false,true,false': 'workedunder(G, B), movie(H, B)', 'true,false,true': 'genre(B, F)'}, {'true,true': [1.04e-06, 0, 324], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,true,false,false,true,false': [0.0, 6, 0], 'true,false,true,false,false,true,true': [0.0, 0, 0], 'false': [7.3e-08, 305, 0], 'true,false,true,true': [0.0, 13, 0], 'true,false,true,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(D, A), movie(C, E), workedunder(F, E)', 'true,true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 19, 0], 'true,true,true': [0.0, 0, 324], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 305, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'movie(L, A), movie(L, M), workedunder(N, M)', 'true,false,true,false,false': 'workedunder(K, B)', 'true,false': 'movie(D, B), movie(D, E), movie(F, E)', 'true,false,true,false': 'movie(I, A), workedunder(J, B)', 'true,false,true': 'workedunder(G, B), movie(H, G), movie(H, A)'}, {'true,true': [0.0, 0, 324], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 305, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,false,false,false': [1.67e-08, 19, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(I, B), movie(I, J), actor(J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false,false,true': 'genre(B, K), genre(E, K)', 'true,false,true,false': 'movie(G, B), workedunder(H, B)', 'true,false,true': 'genre(B, F)'}, {'true,true': [0.0, 0, 324], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,true,false,false,true,false': [0.0, 6, 0], 'true,false,true,false,false,true,true': [0.0, 0, 0], 'false': [0.0, 305, 0], 'true,false,true,true': [0.0, 13, 0], 'true,false,true,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A), genre(B, C)', 'true': 'movie(D, B), genre(E, C), genre(E, F)'}, {'true,true': [1.455, 13, 265], 'false': [2.911, 311, 59], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true,false': 'workedunder(H, B), movie(I, B)', 'true,false,false,true': 'movie(G, B), movie(G, F)', 'true,false,false,true,false,false': 'movie(J, B), movie(J, K), actor(K)', 'true,false': 'genre(B, D)', 'true,false,false': 'movie(E, A), movie(E, F), director(F)'}, {'true,true': [0.47, 0, 324], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [1.05e-08, 13, 0], 'true,false,false,true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false,false,true': [0.0, 6, 0], 'false': [9.42e-08, 305, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true,false': 'movie(I, B), movie(I, J), workedunder(K, J)', 'true,false,false,true': 'genre(B, H)', 'true,false': 'workedunder(D, B), movie(E, D)', 'true,false,false': 'movie(F, A), movie(F, G), director(G)'}, {'true,true': [0.414, 0, 324], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,false,false': [0.0, 6, 0], 'false': [0.0, 305, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true': 'workedunder(H, J), workedunder(K, B)', 'true,false': 'movie(D, A), movie(D, E), workedunder(F, E)', 'true,false,false': 'movie(G, B), movie(G, H), movie(I, H)'}, {'true,true': [0.366, 0, 324], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false': [0.044, 19, 0], 'false': [9.66e-08, 305, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'movie(I, B)', 'true,false': 'workedunder(D, B), movie(E, D)', 'true,false,false': 'movie(F, A), movie(F, G), workedunder(H, G)'}, {'true,true': [0.326, 0, 324], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [0.041, 19, 0], 'false': [7.6e-08, 305, 0], 'true,false,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'genre(B, I)', 'true,false': 'movie(D, A), movie(D, E), workedunder(F, E)', 'true,false,false': 'workedunder(G, B), movie(H, G)'}, {'true,true': [0.293, 0, 324], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [5.27e-09, 13, 0], 'false': [0.0, 305, 0], 'true,false,false,false,false': [0.0, 6, 0], 'true,false,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false;movie(D, A), movie(D, E), director(E).;true;false', '0;true,false,true;genre(B, F).;false;false', '1;;workedunder(A, B) :- director(B), actor(A).;true;false', '1;true;movie(C, B).;true;false', '1;true,true;movie(C, A).;false;false', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, B), movie(C, A).;false;true', '2;true,false,true,false,false;workedunder(K, B).;false;false', '2;true,false;movie(D, B), movie(D, E), movie(F, E).;true;false', '2;true,false,true,false;movie(I, A), workedunder(J, B).;false;true', '2;true,false,true;workedunder(G, B), movie(H, G), movie(H, A).;false;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B), movie(C, A).;false;true', '3;true,false;movie(D, A), movie(D, E), director(E).;true;false', '3;true,false,true;genre(B, F).;false;false', '4;;workedunder(A, B) :- director(B), actor(A), genre(B, C).;false;false', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B), movie(C, A).;false;true', '5;true,false;genre(B, D).;false;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;true', '6;true,false;workedunder(D, B), movie(E, D).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B), movie(C, A).;false;true', '7;true,false;movie(D, A), movie(D, E), workedunder(F, E).;false;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false;workedunder(D, B), movie(E, D).;false;false', '9;;workedunder(A, B) :- director(B), actor(A).;true;false', '9;true;movie(C, B), movie(C, A).;false;true', '9;true,false;movie(D, A), movie(D, E), workedunder(F, E).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,false,true', 0), ('true,false,true,false,false,false', 0), ('true,false,true,false,false,true,true', 0), ('true,false,false', 0)]
Tree #2: [('true,true,false,true', 0), ('true,false', 0)]
Tree #3: [('true,false,true,false,false,false,true', 0), ('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #4: [('true,false,true,false,true', 0), ('true,false,true,false,false,false', 0), ('true,false,true,false,false,true,true', 0), ('true,false,false', 0)]
Tree #5: [('true,false', 0), ('false', 0.8405405405405405), ('true,true', 0.9532374100719424)]
Tree #6: [('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,false,false,false', 0), ('true,false,false,true,true', 0)]
Tree #7: [('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,true', 0)]
Tree #8: [('true,false,false,false', 0), ('true,false,true', 0), ('true,false,false,true,true', 0)]
Tree #9: [('true,false,false,true', 0), ('true,false,false,false,false', 0), ('true,false,true', 0)]
Tree #10: [('true,false,false,true', 0), ('true,false,true', 0)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048788;  // std dev = 7,30e-08, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839197;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, B), movie(D, E), movie(F, E) )
%   | | then if ( workedunder(G, B), movie(H, G), movie(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(I, A), workedunder(J, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360686;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878366;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A), genre(B, C) )
%   then return 0.3013800464279838;  // std dev = 1,455, 278,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=265 */
%   else return -0.02677023760111125;  // std dev = 2,911, 370,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=59 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2711933113012839;  // std dev = 0,470, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( genre(B, D) )
%   | | then return -0.12133713550492248;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.0904643249368286;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09046432493682845;  // std dev = 9,42e-08, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22116617485147066;  // std dev = 0,414, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( workedunder(D, B), movie(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10087030148714722;  // std dev = 0,052, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08329150462068814;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18551708169463732;  // std dev = 0,366, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A), movie(D, E), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09209577404242628;  // std dev = 0,048, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07714862238041321;  // std dev = 9,66e-08, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15916659120731028;  // std dev = 0,326, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( workedunder(D, B), movie(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08468906089131352;  // std dev = 0,044, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07183197273217803;  // std dev = 7,60e-08, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13904583746442986;  // std dev = 0,293, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A), movie(D, E), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07835884770401472;  // std dev = 0,041, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.0671876206035051;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098971
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.681 seconds
Total inference time: 0.631 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 17.322
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094543
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.592 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 2, Type: transfer, Total folds for small set: 4, Time: 00:26:33
{'CLL': -0.094543, 'Recall': 1.0, 'Learning time': 17.322, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 60000, 'Total time': 26.767600297927856, 'Generating mappings time': 2.8644297122955322, 'Finding best mapping': 21.263293981552124, 'Generating paths time': 2.6195006370544434, 'Knowledge compiling time': 0.020367860794067383}, 'Parameter Learning Results': {'CLL': -0.094543, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.592}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.85814893509951;  // std dev = 9,23e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else if ( actor(A) )
%   | | then return 0.8581489350995095;  // std dev = 1,09e-06, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048788;  // std dev = 6,66e-08, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109562;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else if ( actor(A) )
%   | | then return 0.7194734122109566;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839194;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,26e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else if ( actor(A) )
%   | | then return 0.5553664367462833;  // std dev = 5,78e-07, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360686;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830886;  // std dev = 4,54e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else if ( actor(A) )
%   | | then return 0.41751358415830947;  // std dev = 3,95e-07, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783658;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601498;  // std dev = 2,80e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else if ( actor(A) )
%   | | then return 0.32071184716014917;  // std dev = 3,91e-07, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926046;  // std dev = 1,52e-07, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( director(A) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.25517224256949034;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return -0.08518475138839678;  // std dev = 1,01e-07, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2097577156325352;  // std dev = 2,46e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else if ( actor(A) )
%   | | then return 0.2097577156325351;  // std dev = 2,83e-07, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109146;  // std dev = 2,98e-08, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1770964977452782;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else if ( actor(A) )
%   | | then return 0.17709649774527822;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07324622576333696;  // std dev = 1,00e-07, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else if ( actor(A) )
%   | | then return 0.1527438580936715;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420294;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.134007030008011;  // std dev = 6,66e-08, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else if ( actor(A) )
%   | | then return 0.13400703000801098;  // std dev = 7,88e-08, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.064191840082026;  // std dev = 1,10e-07, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.536 seconds
Total inference time: 0.581 seconds
AUC ROC: 1.0


Dataset: uwcse,imdb, Run: 1, Fold: 2, Type: scratch, Total folds for small set: 4, Time: 00:26:42
{'CLL': -0.094637, 'Recall': 1.0, 'Learning time': 8.536, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.581}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.6581489350995117;  // std dev = 0,400, 50,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=40 */
%   | else if ( publication(E, B), publication(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( publication(F, A), publication(F, G), professor(G) )
%   | | | then if ( publication(H, B), publication(H, I), student(I) )
%   | | | | then if ( tempadvisedby(I, J) )
%   | | | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else if ( publication(K, B), publication(K, L), tempadvisedby(M, L) )
%   | | | | then return 0.7427643197148964;  // std dev = 0,319, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | | else return 0.4295775065280837;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.14185106490048766;  // std dev = 7,45e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.6172872871545628;  // std dev = 0,328, 79,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | else if ( publication(D, B), publication(D, A) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | | then if ( tempadvisedby(G, F), publication(H, B), publication(I, G) )
%   | | | | then return 0.03413278698401424;  // std dev = 0,907, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else if ( tempadvisedby(J, F) )
%   | | | | | then return 0.3315460828680525;  // std dev = 1,178, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | | else return 0.14550346655588392;  // std dev = 0,794, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else if ( publication(K, A) )
%   | | | | then return 0.7559835457271726;  // std dev = 0,048, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( publication(L, B), publication(L, M), tempadvisedby(N, M) )
%   | | | | | then return 0.6117271433044899;  // std dev = 0,337, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | | | else return 0.29744840516913423;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.1254446385283915;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.4840931855314021;  // std dev = 0,327, 79,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | else if ( publication(D, B), publication(D, E), tempadvisedby(F, E) )
%   | | then if ( publication(G, F), publication(G, H), tempadvisedby(I, H) )
%   | | | then if ( publication(G, B) )
%   | | | | then return 0.4558105821660899;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | | else if ( publication(D, H), publication(J, A), publication(J, B) )
%   | | | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.16764489629791557;  // std dev = 0,460, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.6182321689345133;  // std dev = 0,054, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( publication(K, B), publication(L, A) )
%   | | | then return 0.41174312636858584;  // std dev = 0,729, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else if ( publication(M, A), publication(M, N), professor(N) )
%   | | | | then return 0.14637845937137853;  // std dev = 0,805, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.3028464688077514;  // std dev = 0,484, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.11231637819360625;  // std dev = 6,32e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then return 0.32840970716947626;  // std dev = 0,356, 63,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=53 */
%   | | else return 0.510116267331406;  // std dev = 4,21e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then return 0.4280831727801236;  // std dev = 0,058, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | then if ( tempadvisedby(J, I), publication(K, I), publication(K, J) )
%   | | | | then return 0.27350790387778856;  // std dev = 1,009, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else if ( tempadvisedby(L, I), publication(M, B) )
%   | | | | | then return 0.06369260488296612;  // std dev = 1,015, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | | else return -0.008251764415375333;  // std dev = 0,751, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(N, B), publication(N, P), tempadvisedby(Q, P) )
%   | | | | then return 0.38401022270802354;  // std dev = 0,298, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | | else return 0.2397949882862139;  // std dev = 0,483, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.10159632948783616;  // std dev = 5,87e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C), publication(D, B) )
%   | then return 0.40100602282525033;  // std dev = 0,063, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(E, B), publication(E, A) )
%   | | then return 0.36338778993277276;  // std dev = 0,158, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then if ( tempadvisedby(H, B), publication(F, I), professor(I) )
%   | | | | then return -0.371491519456938;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else if ( publication(F, J), tempadvisedby(K, J) )
%   | | | | | then if ( publication(F, K) )
%   | | | | | | then return 0.05303734992405155;  // std dev = 0,824, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.051252230401463726;  // std dev = 1,011, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | | else if ( tempadvisedby(L, B) )
%   | | | | | | then return 0.15660429576383936;  // std dev = 0,841, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | else return 0.3037261505434011;  // std dev = 0,676, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2632791623951446;  // std dev = 0,352, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   else return -0.09269127618926105;  // std dev = 1,05e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.3245532204033894;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), publication(E, D), publication(F, A) )
%   | | then return 0.29630839354508237;  // std dev = 0,012, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( publication(G, A), publication(G, B) )
%   | | | then return 0.28086966395794233;  // std dev = 0,131, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else if ( publication(H, A), publication(H, I), professor(I) )
%   | | | | then if ( tempadvisedby(J, B), publication(K, B) )
%   | | | | | then return -0.2791240420577239;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else if ( tempadvisedby(L, I), publication(M, I), publication(M, L) )
%   | | | | | | then return 0.20020593249361474;  // std dev = 0,989, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | else if ( publication(N, B), publication(N, P), student(P) )
%   | | | | | | | then return 0.1634753214376871;  // std dev = 1,085, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | | | | else return -0.13283687656625312;  // std dev = 0,512, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else return 0.19797058434355327;  // std dev = 0,359, 69,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=57 */
%   else return -0.0851847513883968;  // std dev = 2,36e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.2307187355857667;  // std dev = 0,118, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), publication(E, B), tempadvisedby(F, B) )
%   | | then if ( publication(D, G), professor(G) )
%   | | | then return -0.21031182845232896;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07477347851072241;  // std dev = 0,844, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.2577916960071587;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else if ( publication(I, A), publication(I, J), professor(J) )
%   | | | | then if ( publication(K, B), tempadvisedby(L, J), publication(M, L) )
%   | | | | | then return -0.11492248236766489;  // std dev = 0,882, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else if ( tempadvisedby(N, J) )
%   | | | | | | then return 0.2093067608501249;  // std dev = 0,388, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | | | else return -0.013688213751506298;  // std dev = 0,674, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.1587722771001559;  // std dev = 0,355, 65,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=54 */
%   else return -0.07877675473109168;  // std dev = 4,08e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.14211521016349507;  // std dev = 0,283, 79,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | else if ( publication(D, B), publication(D, A) )
%   | | then return 0.16916794074488442;  // std dev = 0,033, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( publication(E, A), publication(E, F), professor(F) )
%   | | | then if ( tempadvisedby(G, F), inphase(G, H), inphase(A, H) )
%   | | | | then return 0.17256331310759046;  // std dev = 0,935, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else if ( tempadvisedby(I, F), publication(J, B) )
%   | | | | | then return -0.0032071985843101967;  // std dev = 0,932, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | | else return -0.0786693787838324;  // std dev = 0,714, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(K, B), publication(K, L), tempadvisedby(M, L) )
%   | | | | then if ( publication(N, M), publication(N, P), publication(K, P) )
%   | | | | | then return 0.06655771118600937;  // std dev = 0,407, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | | | else return 0.24015656071336208;  // std dev = 0,094, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | | else return 0.033118921746514554;  // std dev = 0,482, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.17029732531776176;  // std dev = 0,102, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, B), publication(D, E), inphase(E, F) )
%   | | then if ( tempadvisedby(E, G) )
%   | | | then return 0.1202796245723837;  // std dev = 0,290, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else if ( inphase(A, F), publication(D, H), tempadvisedby(I, H) )
%   | | | | then if ( publication(J, I), publication(J, K), publication(D, K) )
%   | | | | | then return -0.15825667892136136;  // std dev = 0,502, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | | | else if ( inphase(I, F) )
%   | | | | | | then return 0.3143255614275743;  // std dev = 0,292, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else return 0.023049252703633654;  // std dev = 0,385, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | else if ( tempadvisedby(L, B) )
%   | | | | | then return 0.015668552590730047;  // std dev = 0,411, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | | | else return 0.18567222592872454;  // std dev = 0,254, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.1493350502418263;  // std dev = 0,256, 33,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   else return -0.06842697784420268;  // std dev = 3,33e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), yearsinprogram(C, D), yearsinprogram(A, D) )
%   | then return 0.23451048015282722;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(E, B), publication(E, A) )
%   | | then return 0.14760275858209418;  // std dev = 0,091, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( publication(F, B), publication(F, G), inphase(G, H) )
%   | | | then if ( tempadvisedby(I, B), publication(J, A) )
%   | | | | then if ( publication(J, K), tempadvisedby(L, K) )
%   | | | | | then return -0.04554633541257611;  // std dev = 0,845, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return -0.28349562373831655;  // std dev = 0,744, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else if ( publication(M, A), inphase(A, H) )
%   | | | | | then if ( publication(M, N), tempadvisedby(P, N), publication(Q, P) )
%   | | | | | | then return 0.005955842952361179;  // std dev = 0,768, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.2601895135735345;  // std dev = 0,711, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.02980739302325061;  // std dev = 0,383, 45,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=34 */
%   | | | else return 0.12230267463602161;  // std dev = 0,256, 33,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   else return -0.06419184008202625;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */


Predicates from source: ['advisedby(person,person).', 'tempadvisedby(person,person).', 'inphase(person,prequals).', 'student(person).', 'yearsinprogram(person,year).', 'projectmember(project,person).', 'professor(person).', 'publication(title,person).'] 

Source structured tree: [['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B)', 'true,false,false,false': 'publication(K, B), publication(K, L), tempadvisedby(M, L)', 'true,false,false,true': 'publication(H, B), publication(H, I), student(I)', 'true,true': 'publication(D, B), publication(D, A)', 'true,false,false,true,true': 'tempadvisedby(I, J)', 'true,false': 'publication(E, B), publication(E, A)', 'true,false,false': 'publication(F, A), publication(F, G), professor(G)'}, {'true,false,false,true,true,false': [1.095, 2, 3], 'true,false,false,true,false': [0.894, 4, 1], 'true,true,false': [0.4, 10, 40], 'true,false,false,true,true,true': [0.866, 3, 1], 'true,false,false,false,true': [0.319, 3, 23], 'false': [7.45e-08, 88, 0], 'true,true,true': [1.79e-07, 0, 29], 'true,false,true': [0.0, 0, 12], 'true,false,false,false,false': [0.495, 3, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B)', 'true,false,false,false': 'publication(K, A)', 'true,false,false,true,false': 'tempadvisedby(J, F)', 'true,false,false,true': 'tempadvisedby(G, F), publication(H, B), publication(I, G)', 'true,false,false,false,false': 'publication(L, B), publication(L, M), tempadvisedby(N, M)', 'true,false': 'publication(D, B), publication(D, A)', 'true,false,false': 'publication(E, A), publication(E, F), professor(F)'}, {'true,true': [0.328, 10, 69], 'true,false,true': [4.21e-08, 0, 12], 'true,false,false,false,true': [0.048, 0, 4], 'true,false,false,true,false,false': [0.794, 2, 1], 'false': [0.0, 88, 0], 'true,false,false,false,false,true': [0.337, 3, 20], 'true,false,false,false,false,false': [1.225, 3, 3], 'true,false,false,true,false,true': [1.178, 3, 3], 'true,false,false,true,true': [0.907, 4, 1]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B)', 'true,false,false,false': 'publication(M, A), publication(M, N), professor(N)', 'true,false,true,true,false': 'publication(D, H), publication(J, A), publication(J, B)', 'true,false': 'publication(D, B), publication(D, E), tempadvisedby(F, E)', 'true,false,true,true': 'publication(G, B)', 'true,false,true': 'publication(G, F), publication(G, H), tempadvisedby(I, H)', 'true,false,false': 'publication(K, B), publication(L, A)'}, {'true,true': [0.327, 10, 69], 'true,false,false,true': [0.729, 1, 2], 'true,false,true,true,true': [0.276, 2, 10], 'true,false,true,true,false,false': [0.46, 7, 7], 'true,false,false,false,true': [0.805, 2, 1], 'false': [6.32e-08, 88, 0], 'true,false,false,false,false': [0.484, 3, 4], 'true,false,true,false': [0.054, 0, 16], 'true,false,true,true,false,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B)', 'true,false,false,false': 'publication(N, B), publication(N, P), tempadvisedby(Q, P)', 'true,false,false,true': 'tempadvisedby(J, I), publication(K, I), publication(K, J)', 'true,true': 'publication(D, B), publication(D, E), inphase(E, F)', 'true,false,false,true,false': 'tempadvisedby(L, I), publication(M, B)', 'true,false': 'publication(G, A), publication(G, B)', 'true,false,false': 'publication(H, A), publication(H, I), professor(I)'}, {'true,false,false,false,false': [0.483, 3, 4], 'true,false,true': [0.058, 0, 12], 'true,false,false,true,false,false': [0.751, 3, 1], 'true,true,false': [4.21e-08, 0, 16], 'false': [5.87e-08, 88, 0], 'true,true,true': [0.356, 10, 53], 'true,false,false,false,true': [0.298, 3, 23], 'true,false,false,true,false,true': [1.015, 4, 2], 'true,false,false,true,true': [1.009, 2, 2]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B), publication(D, C), publication(D, B)', 'true,false,false,true,false': 'publication(F, J), tempadvisedby(K, J)', 'true,false,false,true': 'tempadvisedby(H, B), publication(F, I), professor(I)', 'true,false,false,true,false,false': 'tempadvisedby(L, B)', 'true,false': 'publication(E, B), publication(E, A)', 'true,false,false,true,false,true': 'publication(F, K)', 'true,false,false': 'publication(F, A), publication(G, B)'}, {'true,true': [0.063, 0, 7], 'true,false,false,false': [0.352, 13, 58], 'true,false,false,true,false,false,false': [0.676, 1, 4], 'true,false,false,true,false,false,true': [0.841, 1, 3], 'true,false,false,true,false,true,false': [1.011, 4, 2], 'true,false,false,true,false,true,true': [0.824, 2, 1], 'false': [1.05e-08, 88, 0], 'true,false,true': [0.158, 0, 37], 'true,false,false,true,true': [0.894, 4, 1]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'projectmember(C, B)', 'true,false,false,false': 'publication(H, A), publication(H, I), professor(I)', 'true,false,false,false,true,false': 'tempadvisedby(L, I), publication(M, I), publication(M, L)', 'true,false,false,false,true,false,false': 'publication(N, B), publication(N, P), student(P)', 'true,false,false,false,true': 'tempadvisedby(J, B), publication(K, B)', 'true,false': 'tempadvisedby(D, B), publication(E, D), publication(F, A)', 'true,false,false': 'publication(G, A), publication(G, B)'}, {'true,false,false,false,true,false,false,true': [1.085, 3, 3], 'true,true': [1.05e-08, 0, 8], 'true,false,false,true': [0.131, 0, 30], 'true,false,false,false,true,true': [0.894, 4, 1], 'false': [2.36e-08, 88, 0], 'true,false,false,false,false': [0.359, 12, 57], 'true,false,false,false,true,false,true': [0.989, 2, 2], 'true,false,false,false,true,false,false,false': [0.512, 4, 1], 'true,false,true': [0.012, 0, 11]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,false,false': 'publication(I, A), publication(I, J), professor(J)', 'true,false,false,false,true,false': 'tempadvisedby(N, J)', 'true,false,false,false,true': 'publication(K, B), tempadvisedby(L, J), publication(M, L)', 'true,false': 'publication(D, A), publication(E, B), tempadvisedby(F, B)', 'true,false,true': 'publication(D, G), professor(G)', 'true,false,false': 'projectmember(H, B)'}, {'true,true': [0.118, 0, 41], 'true,false,false,false,true,false,true': [0.388, 3, 4], 'true,false,false,true': [1.05e-08, 0, 8], 'true,false,false,false,true,false,false': [0.674, 2, 1], 'true,false,false,false,true,true': [0.882, 4, 1], 'false': [4.08e-08, 88, 0], 'true,false,false,false,false': [0.355, 11, 54], 'true,false,true,true': [0.894, 4, 1], 'true,false,true,false': [0.844, 1, 3]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B)', 'true,false,false,false': 'publication(K, B), publication(K, L), tempadvisedby(M, L)', 'true,false,false,true,false': 'tempadvisedby(I, F), publication(J, B)', 'true,false,false,true': 'tempadvisedby(G, F), inphase(G, H), inphase(A, H)', 'true,false,false,false,true': 'publication(N, M), publication(N, P), publication(K, P)', 'true,false': 'publication(D, B), publication(D, A)', 'true,false,false': 'publication(E, A), publication(E, F), professor(F)'}, {'true,true': [0.283, 10, 69], 'true,false,false,false,true,false': [0.094, 0, 13], 'true,false,true': [0.033, 0, 12], 'true,false,false,true,false,false': [0.714, 3, 1], 'false': [0.0, 88, 0], 'true,false,false,false,false': [0.482, 3, 4], 'true,false,false,false,true,true': [0.407, 3, 10], 'true,false,false,true,false,true': [0.932, 4, 2], 'true,false,false,true,true': [0.935, 2, 2]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,true,false,true': 'publication(J, I), publication(J, K), publication(D, K)', 'true,false,true,false,false': 'tempadvisedby(L, B)', 'true,false,true,false,true,false': 'inphase(I, F)', 'true,false': 'publication(D, B), publication(D, E), inphase(E, F)', 'true,false,true,false': 'inphase(A, F), publication(D, H), tempadvisedby(I, H)', 'true,false,true': 'tempadvisedby(E, G)'}, {'true,true': [0.102, 0, 41], 'true,false,true,false,false,false': [0.254, 1, 9], 'true,false,true,false,true,false,true': [0.292, 0, 3], 'true,false,true,false,true,true': [0.502, 8, 6], 'false': [3.33e-08, 88, 0], 'true,false,true,false,false,true': [0.411, 4, 11], 'true,false,true,true': [0.29, 4, 11], 'true,false,true,false,true,false,false': [0.385, 2, 5], 'true,false,false': [0.256, 6, 27]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B), yearsinprogram(C, D), yearsinprogram(A, D)', 'true,false,false,true,false': 'publication(M, A), inphase(A, H)', 'true,false,false,true': 'tempadvisedby(I, B), publication(J, A)', 'true,false,false,true,true': 'publication(J, K), tempadvisedby(L, K)', 'true,false': 'publication(E, B), publication(E, A)', 'true,false,false,true,false,true': 'publication(M, N), tempadvisedby(P, N), publication(Q, P)', 'true,false,false': 'publication(F, B), publication(F, G), inphase(G, H)'}, {'true,true': [0.043, 0, 4], 'true,false,false,true,true,false': [0.744, 3, 1], 'true,false,false,false': [0.256, 6, 27], 'true,false,false,true,true,true': [0.845, 2, 1], 'true,false,false,true,false,true,false': [0.711, 1, 4], 'true,false,false,true,false,true,true': [0.768, 2, 1], 'false': [0.0, 88, 0], 'true,false,false,true,false,false': [0.383, 11, 34], 'true,false,true': [0.091, 0, 41]}]] 



Best mapping found: ['professor(A) -> actor(A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> movie(A,B)', 'publication(A,B) -> movie(A,B)', 'yearsinprogram(A,B) -> genre(A,B)', 'student(A) -> director(A)'] 

Tranferred structured tree: [['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(K, B), movie(K, L), workedunder(L, M)', 'true,false,false,true': 'movie(H, B), movie(H, I), director(I)', 'true,true': 'movie(D, B), movie(D, A)', 'true,false,false,true,true': 'workedunder(J, I)', 'true,false': 'movie(E, B), movie(E, A)', 'true,false,false': 'movie(F, A), movie(F, G), actor(G)'}, {'true,false,false,true,true,false': [1.095, 2, 3], 'true,false,false,true,false': [0.894, 4, 1], 'true,false,true': [0.0, 0, 12], 'true,false,false,true,true,true': [0.866, 3, 1], 'true,false,false,false,true': [0.319, 3, 23], 'false': [7.45e-08, 88, 0], 'true,true,true': [1.79e-07, 0, 29], 'true,true,false': [0.4, 10, 40], 'true,false,false,false,false': [0.495, 3, 4]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(K, A)', 'true,false,false,true,false': 'workedunder(F, J)', 'true,false,false,true': 'workedunder(F, G), movie(H, B), movie(I, G)', 'true,false,false,false,false': 'movie(L, B), movie(L, M), workedunder(M, N)', 'true,false': 'movie(D, B), movie(D, A)', 'true,false,false': 'movie(E, A), movie(E, F), actor(F)'}, {'true,true': [0.328, 10, 69], 'true,false,false,true,false,true': [1.178, 3, 3], 'true,false,false,false,true': [0.048, 0, 4], 'true,false,false,true,false,false': [0.794, 2, 1], 'false': [0.0, 88, 0], 'true,false,false,true,true': [0.907, 4, 1], 'true,false,false,false,false,false': [1.225, 3, 3], 'true,false,true': [4.21e-08, 0, 12], 'true,false,false,false,false,true': [0.337, 3, 20]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(M, A), movie(M, N), actor(N)', 'true,false,true,true,false': 'movie(D, H), movie(J, A), movie(J, B)', 'true,false': 'movie(D, B), movie(D, E), workedunder(E, F)', 'true,false,true,true': 'movie(G, B)', 'true,false,true': 'movie(G, F), movie(G, H), workedunder(H, I)', 'true,false,false': 'movie(K, B), movie(L, A)'}, {'true,false,true,true,false,false': [0.46, 7, 7], 'true,false,false,true': [0.729, 1, 2], 'true,false,true,true,true': [0.276, 2, 10], 'true,true': [0.327, 10, 69], 'true,false,false,false,true': [0.805, 2, 1], 'false': [6.32e-08, 88, 0], 'true,false,false,false,false': [0.484, 3, 4], 'true,false,true,false': [0.054, 0, 16], 'true,false,true,true,false,true': [0.0, 0, 4]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(N, B), movie(N, P), workedunder(P, Q)', 'true,false,false,true': 'workedunder(I, J), movie(K, I), movie(K, J)', 'true,true': 'movie(D, B), movie(D, E), genre(E, F)', 'true,false,false,true,false': 'workedunder(I, L), movie(M, B)', 'true,false': 'movie(G, A), movie(G, B)', 'true,false,false': 'movie(H, A), movie(H, I), actor(I)'}, {'true,true,true': [0.356, 10, 53], 'true,false,true': [0.058, 0, 12], 'true,false,false,false,true': [0.298, 3, 23], 'true,false,false,true,false,true': [1.015, 4, 2], 'true,false,false,true,false,false': [0.751, 3, 1], 'false': [5.87e-08, 88, 0], 'true,false,false,false,false': [0.483, 3, 4], 'true,true,false': [4.21e-08, 0, 16], 'true,false,false,true,true': [1.009, 2, 2]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), movie(D, C), movie(D, B)', 'true,false,false,true,false': 'movie(F, J), workedunder(J, K)', 'true,false,false,true': 'workedunder(B, H), movie(F, I), actor(I)', 'true,false,false,true,false,false': 'workedunder(B, L)', 'true,false': 'movie(E, B), movie(E, A)', 'true,false,false,true,false,true': 'movie(F, K)', 'true,false,false': 'movie(F, A), movie(G, B)'}, {'true,true': [0.063, 0, 7], 'true,false,false,false': [0.352, 13, 58], 'true,false,false,true,false,false,false': [0.676, 1, 4], 'true,false,false,true,false,false,true': [0.841, 1, 3], 'true,false,false,true,false,true,false': [1.011, 4, 2], 'true,false,false,true,false,true,true': [0.824, 2, 1], 'false': [1.05e-08, 88, 0], 'true,false,true': [0.158, 0, 37], 'true,false,false,true,true': [0.894, 4, 1]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, B)', 'true,false,false,false': 'movie(H, A), movie(H, I), actor(I)', 'true,false,false,false,true,false': 'workedunder(I, L), movie(M, I), movie(M, L)', 'true,false,false,false,true,false,false': 'movie(N, B), movie(N, P), director(P)', 'true,false,false,false,true': 'workedunder(B, J), movie(K, B)', 'true,false': 'workedunder(B, D), movie(E, D), movie(F, A)', 'true,false,false': 'movie(G, A), movie(G, B)'}, {'true,false,false,false,true,false,false,true': [1.085, 3, 3], 'true,true': [1.05e-08, 0, 8], 'true,false,false,true': [0.131, 0, 30], 'true,false,false,false,true,false,true': [0.989, 2, 2], 'false': [2.36e-08, 88, 0], 'true,false,false,false,false': [0.359, 12, 57], 'true,false,false,false,true,true': [0.894, 4, 1], 'true,false,false,false,true,false,false,false': [0.512, 4, 1], 'true,false,true': [0.012, 0, 11]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'movie(I, A), movie(I, J), actor(J)', 'true,false,false,false,true,false': 'workedunder(J, N)', 'true,false,false,false,true': 'movie(K, B), workedunder(J, L), movie(M, L)', 'true,false': 'movie(D, A), movie(E, B), workedunder(B, F)', 'true,false,true': 'movie(D, G), actor(G)', 'true,false,false': 'movie(H, B)'}, {'true,false,false,false,true,false,false': [0.674, 2, 1], 'true,false,true,true': [0.894, 4, 1], 'true,false,false,true': [1.05e-08, 0, 8], 'true,true': [0.118, 0, 41], 'true,false,false,false,true,true': [0.882, 4, 1], 'false': [4.08e-08, 88, 0], 'true,false,false,false,false': [0.355, 11, 54], 'true,false,false,false,true,false,true': [0.388, 3, 4], 'true,false,true,false': [0.844, 1, 3]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(K, B), movie(K, L), workedunder(L, M)', 'true,false,false,true,false': 'workedunder(F, I), movie(J, B)', 'true,false,false,true': 'workedunder(F, G), genre(G, H), genre(A, H)', 'true,false,false,false,true': 'movie(N, M), movie(N, P), movie(K, P)', 'true,false': 'movie(D, B), movie(D, A)', 'true,false,false': 'movie(E, A), movie(E, F), actor(F)'}, {'true,true': [0.283, 10, 69], 'true,false,false,false,true,false': [0.094, 0, 13], 'true,false,false,true,false,true': [0.932, 4, 2], 'true,false,false,true,false,false': [0.714, 3, 1], 'false': [0.0, 88, 0], 'true,false,false,false,false': [0.482, 3, 4], 'true,false,false,false,true,true': [0.407, 3, 10], 'true,false,true': [0.033, 0, 12], 'true,false,false,true,true': [0.935, 2, 2]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,true': 'movie(J, I), movie(J, K), movie(D, K)', 'true,false,true,false,false': 'workedunder(B, L)', 'true,false,true,false,true,false': 'genre(I, F)', 'true,false': 'movie(D, B), movie(D, E), genre(E, F)', 'true,false,true,false': 'genre(A, F), movie(D, H), workedunder(H, I)', 'true,false,true': 'workedunder(G, E)'}, {'true,true': [0.102, 0, 41], 'true,false,true,false,false,false': [0.254, 1, 9], 'true,false,true,false,true,false,true': [0.292, 0, 3], 'true,false,true,false,true,true': [0.502, 8, 6], 'false': [3.33e-08, 88, 0], 'true,false,false': [0.256, 6, 27], 'true,false,true,true': [0.29, 4, 11], 'true,false,true,false,false,true': [0.411, 4, 11], 'true,false,true,false,true,false,false': [0.385, 2, 5]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), genre(C, D), genre(A, D)', 'true,false,false,true,false': 'movie(M, A), genre(A, H)', 'true,false,false,true': 'workedunder(B, I), movie(J, A)', 'true,false,false,true,true': 'movie(J, K), workedunder(K, L)', 'true,false': 'movie(E, B), movie(E, A)', 'true,false,false,true,false,true': 'movie(M, N), workedunder(N, P), movie(Q, P)', 'true,false,false': 'movie(F, B), movie(F, G), genre(G, H)'}, {'true,true': [0.043, 0, 4], 'true,false,false,true,true,false': [0.744, 3, 1], 'true,false,false,false': [0.256, 6, 27], 'true,false,false,true,true,true': [0.845, 2, 1], 'true,false,false,true,false,true,false': [0.711, 1, 4], 'true,false,false,true,false,true,true': [0.768, 2, 1], 'false': [0.0, 88, 0], 'true,false,false,true,false,false': [0.383, 11, 34], 'true,false,true': [0.091, 0, 41]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(B, A) :- actor(B), director(A).;true;false', '0;true;workedunder(B, C).;true;true', '0;true,false,false,false;movie(K, B), movie(K, L), workedunder(L, M).;false;false', '0;true,false,false,true;movie(H, B), movie(H, I), director(I).;true;false', '0;true,true;movie(D, B), movie(D, A).;false;false', '0;true,false,false,true,true;workedunder(J, I).;false;false', '0;true,false;movie(E, B), movie(E, A).;false;true', '0;true,false,false;movie(F, A), movie(F, G), actor(G).;true;true', '1;;workedunder(B, A) :- actor(B), director(A).;true;false', '1;true;workedunder(B, C).;false;true', '1;true,false,false,false;movie(K, A).;false;true', '1;true,false,false,true,false;workedunder(F, J).;false;false', '1;true,false,false,true;workedunder(F, G), movie(H, B), movie(I, G).;false;true', '1;true,false,false,false,false;movie(L, B), movie(L, M), workedunder(M, N).;false;false', '1;true,false;movie(D, B), movie(D, A).;false;true', '1;true,false,false;movie(E, A), movie(E, F), actor(F).;true;true', '2;;workedunder(B, A) :- actor(B), director(A).;true;false', '2;true;workedunder(B, C).;false;true', '2;true,false,false,false;movie(M, A), movie(M, N), actor(N).;false;false', '2;true,false,true,true,false;movie(D, H), movie(J, A), movie(J, B).;false;false', '2;true,false;movie(D, B), movie(D, E), workedunder(E, F).;true;true', '2;true,false,true,true;movie(G, B).;false;true', '2;true,false,true;movie(G, F), movie(G, H), workedunder(H, I).;true;false', '2;true,false,false;movie(K, B), movie(L, A).;false;true', '3;;workedunder(B, A) :- actor(B), director(A).;true;false', '3;true;workedunder(B, C).;true;true', '3;true,false,false,false;movie(N, B), movie(N, P), workedunder(P, Q).;false;false', '3;true,false,false,true;workedunder(I, J), movie(K, I), movie(K, J).;false;true', '3;true,true;movie(D, B), movie(D, E), genre(E, F).;false;false', '3;true,false,false,true,false;workedunder(I, L), movie(M, B).;false;false', '3;true,false;movie(G, A), movie(G, B).;false;true', '3;true,false,false;movie(H, A), movie(H, I), actor(I).;true;true', '4;;workedunder(B, A) :- actor(B), director(A).;true;false', '4;true;workedunder(B, C), movie(D, C), movie(D, B).;false;true', '4;true,false,false,true,false;movie(F, J), workedunder(J, K).;true;true', '4;true,false,false,true;workedunder(B, H), movie(F, I), actor(I).;false;true', '4;true,false,false,true,false,false;workedunder(B, L).;false;false', '4;true,false;movie(E, B), movie(E, A).;false;true', '4;true,false,false,true,false,true;movie(F, K).;false;false', '4;true,false,false;movie(F, A), movie(G, B).;true;false', '5;;workedunder(B, A) :- actor(B), director(A).;true;false', '5;true;movie(C, B).;false;true', '5;true,false,false,false;movie(H, A), movie(H, I), actor(I).;true;false', '5;true,false,false,false,true,false;workedunder(I, L), movie(M, I), movie(M, L).;false;true', '5;true,false,false,false,true,false,false;movie(N, B), movie(N, P), director(P).;false;false', '5;true,false,false,false,true;workedunder(B, J), movie(K, B).;false;true', '5;true,false;workedunder(B, D), movie(E, D), movie(F, A).;false;true', '5;true,false,false;movie(G, A), movie(G, B).;false;true', '6;;workedunder(B, A) :- actor(B), director(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;true', '6;true,false,false,false;movie(I, A), movie(I, J), actor(J).;true;false', '6;true,false,false,false,true,false;workedunder(J, N).;false;false', '6;true,false,false,false,true;movie(K, B), workedunder(J, L), movie(M, L).;false;true', '6;true,false;movie(D, A), movie(E, B), workedunder(B, F).;true;true', '6;true,false,true;movie(D, G), actor(G).;false;false', '6;true,false,false;movie(H, B).;false;true', '7;;workedunder(B, A) :- actor(B), director(A).;true;false', '7;true;workedunder(B, C).;false;true', '7;true,false,false,false;movie(K, B), movie(K, L), workedunder(L, M).;true;false', '7;true,false,false,true,false;workedunder(F, I), movie(J, B).;false;false', '7;true,false,false,true;workedunder(F, G), genre(G, H), genre(A, H).;false;true', '7;true,false,false,false,true;movie(N, M), movie(N, P), movie(K, P).;false;false', '7;true,false;movie(D, B), movie(D, A).;false;true', '7;true,false,false;movie(E, A), movie(E, F), actor(F).;true;true', '8;;workedunder(B, A) :- actor(B), director(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false,true,false,true;movie(J, I), movie(J, K), movie(D, K).;false;true', '8;true,false,true,false,false;workedunder(B, L).;false;false', '8;true,false,true,false,true,false;genre(I, F).;false;false', '8;true,false;movie(D, B), movie(D, E), genre(E, F).;true;false', '8;true,false,true,false;genre(A, F), movie(D, H), workedunder(H, I).;true;true', '8;true,false,true;workedunder(G, E).;false;true', '9;;workedunder(B, A) :- actor(B), director(A).;true;false', '9;true;workedunder(B, C), genre(C, D), genre(A, D).;false;true', '9;true,false,false,true,false;movie(M, A), genre(A, H).;true;false', '9;true,false,false,true;workedunder(B, I), movie(J, A).;true;true', '9;true,false,false,true,true;movie(J, K), workedunder(K, L).;false;false', '9;true,false;movie(E, B), movie(E, A).;false;true', '9;true,false,false,true,false,true;movie(M, N), workedunder(N, P), movie(Q, P).;false;false', '9;true,false,false;movie(F, B), movie(F, G), genre(G, H).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(E, B), movie(E, F), actor(F) )
%   | | | then if ( movie(G, A), movie(G, H), director(H) )
%   | | | | then if ( workedunder(I, H) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(E, B), movie(E, F), actor(F) )
%   | | | then if ( workedunder(F, G), movie(H, A), movie(I, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(F, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, E), workedunder(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return 0.5214164631052723;  // std dev = 1,127, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B), movie(D, A) )
%   | | then return 0.4257924707673863;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(E, B), movie(E, F), actor(F) )
%   | | | then if ( workedunder(F, G), movie(H, F), movie(H, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(F, I), movie(J, A) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.17568223096654698;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783624;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), movie(D, C), movie(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32632999038865756;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(F, B), movie(G, A) )
%   | | | then if ( workedunder(A, H), movie(F, I), actor(I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, J), workedunder(J, K) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(A, L) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.15167014560932465;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.23906129899127093;  // std dev = 0,662, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.215815140828086;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, B), movie(E, A), workedunder(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A) )
%   | | | then return -0.16325987009955317;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.18152674664011317;  // std dev = 5,37e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(E, B), movie(E, F), actor(F) )
%   | | | then if ( workedunder(F, G), genre(G, H), genre(B, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(F, I), movie(J, A) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.1421641744249648;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15609640618026674;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A), movie(D, E), genre(E, F) )
%   | | then if ( workedunder(G, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( genre(B, F), movie(D, H), workedunder(H, I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(A, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.1256924268176654;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442027;  // std dev = 1,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), genre(C, D), genre(B, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13661890362440585;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(F, A), movie(F, G), genre(G, H) )
%   | | | then if ( workedunder(A, I), movie(J, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(K, B), genre(B, H) )
%   | | | | | then if ( movie(K, L), workedunder(L, M), movie(N, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.11251682581436086;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097867
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.083 seconds
Total inference time: 0.625 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097867
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.625 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true': 'movie(G, A), movie(G, H), director(H)', 'true,false,false,true,true': 'workedunder(I, H)', 'true,false': 'movie(D, A), movie(D, B)', 'true,false,false': 'movie(E, B), movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 0], 'true,false,false,true,true,false': [0.0, 3, 0], 'true,false,false,true,false': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,true,true': [0.0, 0, 0], 'false': [5.58e-08, 53, 0], 'true,false,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true,false': 'workedunder(F, J)', 'true,false,false,true': 'workedunder(F, G), movie(H, A), movie(I, G)', 'true,false': 'movie(D, A), movie(D, B)', 'true,false,false': 'movie(E, B), movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 56], 'true,false,false,true,false,false': [0.0, 3, 0], 'false': [0.0, 53, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false': 'movie(D, A), movie(D, E), workedunder(E, F)', 'true,false,false': 'movie(G, A), movie(H, B)'}, {'true,true': [0.0, 0, 0], 'false': [3.49e-08, 53, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.127, 3, 56]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true,false': 'workedunder(F, I), movie(J, A)', 'true,false,false,true': 'workedunder(F, G), movie(H, F), movie(H, G)', 'true,false': 'movie(D, B), movie(D, A)', 'true,false,false': 'movie(E, B), movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 56], 'true,false,false,true,false,false': [0.0, 3, 0], 'false': [3.49e-08, 53, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), movie(D, C), movie(D, A)', 'true,false,false,true,false': 'movie(F, J), workedunder(J, K)', 'true,false,false,true': 'workedunder(A, H), movie(F, I), actor(I)', 'true,false,false,true,false,false': 'workedunder(A, L)', 'true,false': 'movie(E, A), movie(E, B)', 'true,false,false': 'movie(F, B), movie(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 56], 'true,false,false,true,false,false,false': [3.73e-09, 3, 0], 'true,false,false,true,false,false,true': [0.0, 0, 0], 'false': [0.0, 53, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.662, 3, 56], 'false': [1.83e-08, 53, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A), workedunder(A, F)', 'true,false,false': 'movie(G, A)'}, {'true,true': [0.0, 0, 56], 'false': [1.05e-08, 53, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true,false': 'workedunder(F, I), movie(J, A)', 'true,false,false,true': 'workedunder(F, G), genre(G, H), genre(B, H)', 'true,false': 'movie(D, A), movie(D, B)', 'true,false,false': 'movie(E, B), movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [5.37e-08, 0, 56], 'true,false,false,true,false,false': [0.0, 3, 0], 'false': [7.45e-09, 53, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,false': 'workedunder(A, J)', 'true,false': 'movie(D, A), movie(D, E), genre(E, F)', 'true,false,true,false': 'genre(B, F), movie(D, H), workedunder(H, I)', 'true,false,true': 'workedunder(G, E)'}, {'true,true': [0.0, 0, 56], 'true,false,true,false,false,false': [0.0, 3, 0], 'false': [1.58e-08, 53, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), genre(C, D), genre(B, D)', 'true,false,false,true,false': 'movie(K, B), genre(B, H)', 'true,false,false,true': 'workedunder(A, I), movie(J, B)', 'true,false': 'movie(E, A), movie(E, B)', 'true,false,false,true,false,true': 'movie(K, L), workedunder(L, M), movie(N, M)', 'true,false,false': 'movie(F, A), movie(F, G), genre(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false,false': [0.0, 0, 0], 'true,false,false,true,false,true,false': [0.0, 3, 0], 'true,false,false,true,false,true,true': [0.0, 0, 0], 'false': [0.0, 53, 0], 'true,false,true': [0.0, 0, 56], 'true,false,false,true,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;false;false', '1;;workedunder(A, B) :- actor(A), director(B).;false;false', '2;;workedunder(A, B) :- actor(A), director(B).;false;false', '3;;workedunder(A, B) :- actor(A), director(B).;false;false', '4;;workedunder(A, B) :- actor(A), director(B).;false;false', '5;;workedunder(A, B) :- actor(A), director(B).;false;false', '6;;workedunder(A, B) :- actor(A), director(B).;true;false', '6;true;movie(C, A), movie(C, B).;false;true', '6;true,false;movie(D, B), movie(E, A), workedunder(A, F).;false;false', '7;;workedunder(A, B) :- actor(A), director(B).;false;false', '8;;workedunder(A, B) :- actor(A), director(B).;true;false', '8;true;movie(C, A), movie(C, B).;false;true', '8;true,false;movie(D, A), movie(D, E), genre(E, F).;true;false', '8;true,false,true,false;genre(B, F), movie(D, H), workedunder(H, I).;false;false', '8;true,false,true;workedunder(G, E).;false;true', '9;;workedunder(A, B) :- actor(A), director(B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false', 0), ('true,false,false,true,true,true', 0)]
Tree #2: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,true', 0)]
Tree #3: [('true,true', 0), ('true,false,false,false', 0), ('true,false,true', 0), ('true,false,false,true', 0.9491525423728814)]
Tree #4: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,true', 0)]
Tree #5: [('true,true', 0), ('true,false,false,true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,false,false,true', 0)]
Tree #6: [('true,false', 0), ('true,true', 0.9491525423728814)]
Tree #7: [('true,false,false,false', 0), ('true,false,true', 0)]
Tree #8: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,true', 0)]
Tree #9: [('true,false,true,false,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,true', 0), ('true,false,false', 0)]
Tree #10: [('true,true', 0), ('true,false,false,true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true,true', 0), ('true,false,false,true,false,false', 0)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.8073014774723939;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.6787731438231837;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5269956536069226;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.39608558720426035;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.10159632948783624;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.30140432359648295;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.09269127618926107;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.23603776197793214;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.24111103029937553;  // std dev = 4,21e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, B), movie(E, A), workedunder(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.7588889697006245;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.15932435981342602;  // std dev = 1,342, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17551515944921706;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A), movie(D, E), genre(E, F) )
%   | | then if ( workedunder(G, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( genre(B, F), movie(D, H), workedunder(H, I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.6334470292063128;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442027;  // std dev = 1,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.11951167349588018;  // std dev = 1,063, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.06419184008202625;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.134163
   Precision = 0.916667 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.956522


Total learning time: 2.281 seconds
Total inference time: 0.502 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 5.4910000000000005
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101469
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.968 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 3, Type: transfer, Total folds for small set: 1, Time: 00:27:44
{'CLL': -0.101469, 'Recall': 1.0, 'Learning time': 5.4910000000000005, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 60000, 'Total time': 27.606062412261963, 'Generating mappings time': 2.5951223373413086, 'Finding best mapping': 22.342228651046753, 'Generating paths time': 2.6518430709838867, 'Knowledge compiling time': 0.016860008239746094}, 'Parameter Learning Results': {'CLL': -0.101469, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.968}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.14185106490048768;  // std dev = 5,37e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.1123163781936063;  // std dev = 3,65e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.10159632948783624;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.08518475138839679;  // std dev = 1,97e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07877675473109177;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
Results
   AUC ROC   = 0.985955
   AUC PR    = 0.972678
   CLL	      = -0.123634
   Precision = 0.972678 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.98615


Total learning time: 1.915 seconds
Total inference time: 0.733 seconds
AUC ROC: 0.985955


Dataset: uwcse,imdb, Run: 1, Fold: 3, Type: scratch, Total folds for small set: 1, Time: 00:27:47
{'CLL': -0.123634, 'Recall': 1.0, 'Learning time': 1.915, 'Precision': [0.972678, 0.5], 'AUC ROC': 0.985955, 'F1': 0.98615, 'AUC PR': 0.972678, 'Inference time': 0.733}


Best mapping found: ['professor(A) -> actor(A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> movie(A,B)', 'publication(A,B) -> movie(A,B)', 'yearsinprogram(A,B) -> genre(A,B)', 'student(A) -> director(A)'] 

Tranferred structured tree: [['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(K, B), movie(K, L), workedunder(L, M)', 'true,false,false,true': 'movie(H, B), movie(H, I), director(I)', 'true,true': 'movie(D, B), movie(D, A)', 'true,false,false,true,true': 'workedunder(J, I)', 'true,false': 'movie(E, B), movie(E, A)', 'true,false,false': 'movie(F, A), movie(F, G), actor(G)'}, {'true,false,false,true,true,false': [1.095, 2, 3], 'true,false,false,true,false': [0.894, 4, 1], 'true,false,true': [0.0, 0, 12], 'true,false,false,true,true,true': [0.866, 3, 1], 'true,false,false,false,true': [0.319, 3, 23], 'false': [7.45e-08, 88, 0], 'true,true,true': [1.79e-07, 0, 29], 'true,true,false': [0.4, 10, 40], 'true,false,false,false,false': [0.495, 3, 4]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(K, A)', 'true,false,false,true,false': 'workedunder(F, J)', 'true,false,false,true': 'workedunder(F, G), movie(H, B), movie(I, G)', 'true,false,false,false,false': 'movie(L, B), movie(L, M), workedunder(M, N)', 'true,false': 'movie(D, B), movie(D, A)', 'true,false,false': 'movie(E, A), movie(E, F), actor(F)'}, {'true,true': [0.328, 10, 69], 'true,false,false,true,false,true': [1.178, 3, 3], 'true,false,false,false,true': [0.048, 0, 4], 'true,false,false,true,false,false': [0.794, 2, 1], 'false': [0.0, 88, 0], 'true,false,false,true,true': [0.907, 4, 1], 'true,false,false,false,false,false': [1.225, 3, 3], 'true,false,true': [4.21e-08, 0, 12], 'true,false,false,false,false,true': [0.337, 3, 20]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(M, A), movie(M, N), actor(N)', 'true,false,true,true,false': 'movie(D, H), movie(J, A), movie(J, B)', 'true,false': 'movie(D, B), movie(D, E), workedunder(E, F)', 'true,false,true,true': 'movie(G, B)', 'true,false,true': 'movie(G, F), movie(G, H), workedunder(H, I)', 'true,false,false': 'movie(K, B), movie(L, A)'}, {'true,false,true,true,false,false': [0.46, 7, 7], 'true,false,false,true': [0.729, 1, 2], 'true,false,true,true,true': [0.276, 2, 10], 'true,true': [0.327, 10, 69], 'true,false,false,false,true': [0.805, 2, 1], 'false': [6.32e-08, 88, 0], 'true,false,false,false,false': [0.484, 3, 4], 'true,false,true,false': [0.054, 0, 16], 'true,false,true,true,false,true': [0.0, 0, 4]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(N, B), movie(N, P), workedunder(P, Q)', 'true,false,false,true': 'workedunder(I, J), movie(K, I), movie(K, J)', 'true,true': 'movie(D, B), movie(D, E), genre(E, F)', 'true,false,false,true,false': 'workedunder(I, L), movie(M, B)', 'true,false': 'movie(G, A), movie(G, B)', 'true,false,false': 'movie(H, A), movie(H, I), actor(I)'}, {'true,true,true': [0.356, 10, 53], 'true,false,true': [0.058, 0, 12], 'true,false,false,false,true': [0.298, 3, 23], 'true,false,false,true,false,true': [1.015, 4, 2], 'true,false,false,true,false,false': [0.751, 3, 1], 'false': [5.87e-08, 88, 0], 'true,false,false,false,false': [0.483, 3, 4], 'true,true,false': [4.21e-08, 0, 16], 'true,false,false,true,true': [1.009, 2, 2]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), movie(D, C), movie(D, B)', 'true,false,false,true,false': 'movie(F, J), workedunder(J, K)', 'true,false,false,true': 'workedunder(B, H), movie(F, I), actor(I)', 'true,false,false,true,false,false': 'workedunder(B, L)', 'true,false': 'movie(E, B), movie(E, A)', 'true,false,false,true,false,true': 'movie(F, K)', 'true,false,false': 'movie(F, A), movie(G, B)'}, {'true,true': [0.063, 0, 7], 'true,false,false,false': [0.352, 13, 58], 'true,false,false,true,false,false,false': [0.676, 1, 4], 'true,false,false,true,false,false,true': [0.841, 1, 3], 'true,false,false,true,false,true,false': [1.011, 4, 2], 'true,false,false,true,false,true,true': [0.824, 2, 1], 'false': [1.05e-08, 88, 0], 'true,false,true': [0.158, 0, 37], 'true,false,false,true,true': [0.894, 4, 1]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, B)', 'true,false,false,false': 'movie(H, A), movie(H, I), actor(I)', 'true,false,false,false,true,false': 'workedunder(I, L), movie(M, I), movie(M, L)', 'true,false,false,false,true,false,false': 'movie(N, B), movie(N, P), director(P)', 'true,false,false,false,true': 'workedunder(B, J), movie(K, B)', 'true,false': 'workedunder(B, D), movie(E, D), movie(F, A)', 'true,false,false': 'movie(G, A), movie(G, B)'}, {'true,false,false,false,true,false,false,true': [1.085, 3, 3], 'true,true': [1.05e-08, 0, 8], 'true,false,false,true': [0.131, 0, 30], 'true,false,false,false,true,false,true': [0.989, 2, 2], 'false': [2.36e-08, 88, 0], 'true,false,false,false,false': [0.359, 12, 57], 'true,false,false,false,true,true': [0.894, 4, 1], 'true,false,false,false,true,false,false,false': [0.512, 4, 1], 'true,false,true': [0.012, 0, 11]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'movie(I, A), movie(I, J), actor(J)', 'true,false,false,false,true,false': 'workedunder(J, N)', 'true,false,false,false,true': 'movie(K, B), workedunder(J, L), movie(M, L)', 'true,false': 'movie(D, A), movie(E, B), workedunder(B, F)', 'true,false,true': 'movie(D, G), actor(G)', 'true,false,false': 'movie(H, B)'}, {'true,false,false,false,true,false,false': [0.674, 2, 1], 'true,false,true,true': [0.894, 4, 1], 'true,false,false,true': [1.05e-08, 0, 8], 'true,true': [0.118, 0, 41], 'true,false,false,false,true,true': [0.882, 4, 1], 'false': [4.08e-08, 88, 0], 'true,false,false,false,false': [0.355, 11, 54], 'true,false,false,false,true,false,true': [0.388, 3, 4], 'true,false,true,false': [0.844, 1, 3]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(K, B), movie(K, L), workedunder(L, M)', 'true,false,false,true,false': 'workedunder(F, I), movie(J, B)', 'true,false,false,true': 'workedunder(F, G), genre(G, H), genre(A, H)', 'true,false,false,false,true': 'movie(N, M), movie(N, P), movie(K, P)', 'true,false': 'movie(D, B), movie(D, A)', 'true,false,false': 'movie(E, A), movie(E, F), actor(F)'}, {'true,true': [0.283, 10, 69], 'true,false,false,false,true,false': [0.094, 0, 13], 'true,false,false,true,false,true': [0.932, 4, 2], 'true,false,false,true,false,false': [0.714, 3, 1], 'false': [0.0, 88, 0], 'true,false,false,false,false': [0.482, 3, 4], 'true,false,false,false,true,true': [0.407, 3, 10], 'true,false,true': [0.033, 0, 12], 'true,false,false,true,true': [0.935, 2, 2]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,true': 'movie(J, I), movie(J, K), movie(D, K)', 'true,false,true,false,false': 'workedunder(B, L)', 'true,false,true,false,true,false': 'genre(I, F)', 'true,false': 'movie(D, B), movie(D, E), genre(E, F)', 'true,false,true,false': 'genre(A, F), movie(D, H), workedunder(H, I)', 'true,false,true': 'workedunder(G, E)'}, {'true,true': [0.102, 0, 41], 'true,false,true,false,false,false': [0.254, 1, 9], 'true,false,true,false,true,false,true': [0.292, 0, 3], 'true,false,true,false,true,true': [0.502, 8, 6], 'false': [3.33e-08, 88, 0], 'true,false,false': [0.256, 6, 27], 'true,false,true,true': [0.29, 4, 11], 'true,false,true,false,false,true': [0.411, 4, 11], 'true,false,true,false,true,false,false': [0.385, 2, 5]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), genre(C, D), genre(A, D)', 'true,false,false,true,false': 'movie(M, A), genre(A, H)', 'true,false,false,true': 'workedunder(B, I), movie(J, A)', 'true,false,false,true,true': 'movie(J, K), workedunder(K, L)', 'true,false': 'movie(E, B), movie(E, A)', 'true,false,false,true,false,true': 'movie(M, N), workedunder(N, P), movie(Q, P)', 'true,false,false': 'movie(F, B), movie(F, G), genre(G, H)'}, {'true,true': [0.043, 0, 4], 'true,false,false,true,true,false': [0.744, 3, 1], 'true,false,false,false': [0.256, 6, 27], 'true,false,false,true,true,true': [0.845, 2, 1], 'true,false,false,true,false,true,false': [0.711, 1, 4], 'true,false,false,true,false,true,true': [0.768, 2, 1], 'false': [0.0, 88, 0], 'true,false,false,true,false,false': [0.383, 11, 34], 'true,false,true': [0.091, 0, 41]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(B, A) :- actor(B), director(A).;true;false', '0;true;workedunder(B, C).;true;true', '0;true,false,false,false;movie(K, B), movie(K, L), workedunder(L, M).;false;false', '0;true,false,false,true;movie(H, B), movie(H, I), director(I).;true;false', '0;true,true;movie(D, B), movie(D, A).;false;false', '0;true,false,false,true,true;workedunder(J, I).;false;false', '0;true,false;movie(E, B), movie(E, A).;false;true', '0;true,false,false;movie(F, A), movie(F, G), actor(G).;true;true', '1;;workedunder(B, A) :- actor(B), director(A).;true;false', '1;true;workedunder(B, C).;false;true', '1;true,false,false,false;movie(K, A).;false;true', '1;true,false,false,true,false;workedunder(F, J).;false;false', '1;true,false,false,true;workedunder(F, G), movie(H, B), movie(I, G).;false;true', '1;true,false,false,false,false;movie(L, B), movie(L, M), workedunder(M, N).;false;false', '1;true,false;movie(D, B), movie(D, A).;false;true', '1;true,false,false;movie(E, A), movie(E, F), actor(F).;true;true', '2;;workedunder(B, A) :- actor(B), director(A).;true;false', '2;true;workedunder(B, C).;false;true', '2;true,false,false,false;movie(M, A), movie(M, N), actor(N).;false;false', '2;true,false,true,true,false;movie(D, H), movie(J, A), movie(J, B).;false;false', '2;true,false;movie(D, B), movie(D, E), workedunder(E, F).;true;true', '2;true,false,true,true;movie(G, B).;false;true', '2;true,false,true;movie(G, F), movie(G, H), workedunder(H, I).;true;false', '2;true,false,false;movie(K, B), movie(L, A).;false;true', '3;;workedunder(B, A) :- actor(B), director(A).;true;false', '3;true;workedunder(B, C).;true;true', '3;true,false,false,false;movie(N, B), movie(N, P), workedunder(P, Q).;false;false', '3;true,false,false,true;workedunder(I, J), movie(K, I), movie(K, J).;false;true', '3;true,true;movie(D, B), movie(D, E), genre(E, F).;false;false', '3;true,false,false,true,false;workedunder(I, L), movie(M, B).;false;false', '3;true,false;movie(G, A), movie(G, B).;false;true', '3;true,false,false;movie(H, A), movie(H, I), actor(I).;true;true', '4;;workedunder(B, A) :- actor(B), director(A).;true;false', '4;true;workedunder(B, C), movie(D, C), movie(D, B).;false;true', '4;true,false,false,true,false;movie(F, J), workedunder(J, K).;true;true', '4;true,false,false,true;workedunder(B, H), movie(F, I), actor(I).;false;true', '4;true,false,false,true,false,false;workedunder(B, L).;false;false', '4;true,false;movie(E, B), movie(E, A).;false;true', '4;true,false,false,true,false,true;movie(F, K).;false;false', '4;true,false,false;movie(F, A), movie(G, B).;true;false', '5;;workedunder(B, A) :- actor(B), director(A).;true;false', '5;true;movie(C, B).;false;true', '5;true,false,false,false;movie(H, A), movie(H, I), actor(I).;true;false', '5;true,false,false,false,true,false;workedunder(I, L), movie(M, I), movie(M, L).;false;true', '5;true,false,false,false,true,false,false;movie(N, B), movie(N, P), director(P).;false;false', '5;true,false,false,false,true;workedunder(B, J), movie(K, B).;false;true', '5;true,false;workedunder(B, D), movie(E, D), movie(F, A).;false;true', '5;true,false,false;movie(G, A), movie(G, B).;false;true', '6;;workedunder(B, A) :- actor(B), director(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;true', '6;true,false,false,false;movie(I, A), movie(I, J), actor(J).;true;false', '6;true,false,false,false,true,false;workedunder(J, N).;false;false', '6;true,false,false,false,true;movie(K, B), workedunder(J, L), movie(M, L).;false;true', '6;true,false;movie(D, A), movie(E, B), workedunder(B, F).;true;true', '6;true,false,true;movie(D, G), actor(G).;false;false', '6;true,false,false;movie(H, B).;false;true', '7;;workedunder(B, A) :- actor(B), director(A).;true;false', '7;true;workedunder(B, C).;false;true', '7;true,false,false,false;movie(K, B), movie(K, L), workedunder(L, M).;true;false', '7;true,false,false,true,false;workedunder(F, I), movie(J, B).;false;false', '7;true,false,false,true;workedunder(F, G), genre(G, H), genre(A, H).;false;true', '7;true,false,false,false,true;movie(N, M), movie(N, P), movie(K, P).;false;false', '7;true,false;movie(D, B), movie(D, A).;false;true', '7;true,false,false;movie(E, A), movie(E, F), actor(F).;true;true', '8;;workedunder(B, A) :- actor(B), director(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false,true,false,true;movie(J, I), movie(J, K), movie(D, K).;false;true', '8;true,false,true,false,false;workedunder(B, L).;false;false', '8;true,false,true,false,true,false;genre(I, F).;false;false', '8;true,false;movie(D, B), movie(D, E), genre(E, F).;true;false', '8;true,false,true,false;genre(A, F), movie(D, H), workedunder(H, I).;true;true', '8;true,false,true;workedunder(G, E).;false;true', '9;;workedunder(B, A) :- actor(B), director(A).;true;false', '9;true;workedunder(B, C), genre(C, D), genre(A, D).;false;true', '9;true,false,false,true,false;movie(M, A), genre(A, H).;true;false', '9;true,false,false,true;workedunder(B, I), movie(J, A).;true;true', '9;true,false,false,true,true;movie(J, K), workedunder(K, L).;false;false', '9;true,false;movie(E, B), movie(E, A).;false;true', '9;true,false,false,true,false,true;movie(M, N), workedunder(N, P), movie(Q, P).;false;false', '9;true,false,false;movie(F, B), movie(F, G), genre(G, H).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995113;  // std dev = 4,30e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | | else if ( movie(E, B), movie(E, F), actor(F) )
%   | | | then if ( movie(G, A), movie(G, H), director(H) )
%   | | | | then if ( workedunder(I, H) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 8,16e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | | else if ( movie(E, B), movie(E, F), actor(F) )
%   | | | then if ( workedunder(F, G), movie(H, A), movie(I, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(F, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, E), workedunder(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return 0.5361063555460943;  // std dev = 1,140, 104,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=101 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 6,99e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B), movie(D, A) )
%   | | then return 0.4222048666951794;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | | else if ( movie(E, B), movie(E, F), actor(F) )
%   | | | then if ( workedunder(F, G), movie(H, F), movie(H, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(F, I), movie(J, A) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.17781973663690565;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 5,16e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), movie(D, C), movie(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.323893999378634;  // std dev = 1,93e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | | else if ( movie(F, B), movie(G, A) )
%   | | | then if ( workedunder(A, H), movie(F, I), actor(I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, J), workedunder(J, K) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(A, L) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.1532922862303818;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926104;  // std dev = 2,58e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.24604113551883497;  // std dev = 0,669, 104,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=101 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,37e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21317898049635178;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( movie(D, B), movie(E, A), workedunder(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A) )
%   | | | then return -0.16572127542200615;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109164;  // std dev = 5,16e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17960179544836338;  // std dev = 1,01e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | | else if ( movie(E, B), movie(E, F), actor(F) )
%   | | | then if ( workedunder(F, G), genre(G, H), genre(B, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(F, I), movie(J, A) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.14405863008169187;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15464173302767611;  // std dev = 8,69e-08, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( movie(D, A), movie(D, E), genre(E, F) )
%   | | then if ( workedunder(G, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( genre(B, F), movie(D, H), workedunder(H, I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(A, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12718952482569376;  // std dev = 4,56e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 4,21e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), genre(C, D), genre(B, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13548693375405382;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | | else if ( movie(F, A), movie(F, G), genre(G, H) )
%   | | | then if ( workedunder(A, I), movie(J, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(K, B), genre(B, H) )
%   | | | | | then if ( movie(K, L), workedunder(L, M), movie(N, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.11372644809909276;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096461
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.992 seconds
Total inference time: 0.571 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096461
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.571 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true': 'movie(G, A), movie(G, H), director(H)', 'true,false,false,true,true': 'workedunder(I, H)', 'true,false': 'movie(D, A), movie(D, B)', 'true,false,false': 'movie(E, B), movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 0], 'true,false,false,true,true,false': [0.0, 3, 0], 'true,false,false,true,false': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,true,true': [0.0, 0, 0], 'false': [8.16e-08, 98, 0], 'true,false,true': [4.3e-07, 0, 101]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true,false': 'workedunder(F, J)', 'true,false,false,true': 'workedunder(F, G), movie(H, A), movie(I, G)', 'true,false': 'movie(D, A), movie(D, B)', 'true,false,false': 'movie(E, B), movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 101], 'true,false,false,true,false,false': [0.0, 3, 0], 'false': [0.0, 98, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false': 'movie(D, A), movie(D, E), workedunder(E, F)', 'true,false,false': 'movie(G, A), movie(H, B)'}, {'true,true': [0.0, 0, 0], 'false': [6.99e-08, 98, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.14, 3, 101]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true,false': 'workedunder(F, I), movie(J, A)', 'true,false,false,true': 'workedunder(F, G), movie(H, F), movie(H, G)', 'true,false': 'movie(D, B), movie(D, A)', 'true,false,false': 'movie(E, B), movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 101], 'true,false,false,true,false,false': [0.0, 3, 0], 'false': [5.16e-08, 98, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), movie(D, C), movie(D, A)', 'true,false,false,true,false': 'movie(F, J), workedunder(J, K)', 'true,false,false,true': 'workedunder(A, H), movie(F, I), actor(I)', 'true,false,false,true,false,false': 'workedunder(A, L)', 'true,false': 'movie(E, A), movie(E, B)', 'true,false,false': 'movie(F, B), movie(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [1.93e-07, 0, 101], 'true,false,false,true,false,false,false': [0.0, 3, 0], 'true,false,false,true,false,false,true': [0.0, 0, 0], 'false': [2.58e-08, 98, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.669, 3, 101], 'false': [5.37e-08, 98, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A), workedunder(A, F)', 'true,false,false': 'movie(G, A)'}, {'true,true': [0.0, 0, 101], 'false': [5.16e-08, 98, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true,false': 'workedunder(F, I), movie(J, A)', 'true,false,false,true': 'workedunder(F, G), genre(G, H), genre(B, H)', 'true,false': 'movie(D, A), movie(D, B)', 'true,false,false': 'movie(E, B), movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [1.01e-07, 0, 101], 'true,false,false,true,false,false': [0.0, 3, 0], 'false': [0.0, 98, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,false': 'workedunder(A, J)', 'true,false': 'movie(D, A), movie(D, E), genre(E, F)', 'true,false,true,false': 'genre(B, F), movie(D, H), workedunder(H, I)', 'true,false,true': 'workedunder(G, E)'}, {'true,true': [8.69e-08, 0, 101], 'true,false,true,false,false,false': [4.56e-09, 3, 0], 'false': [4.21e-08, 98, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), genre(C, D), genre(B, D)', 'true,false,false,true,false': 'movie(K, B), genre(B, H)', 'true,false,false,true': 'workedunder(A, I), movie(J, B)', 'true,false': 'movie(E, A), movie(E, B)', 'true,false,false,true,false,true': 'movie(K, L), workedunder(L, M), movie(N, M)', 'true,false,false': 'movie(F, A), movie(F, G), genre(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false,false': [0.0, 0, 0], 'true,false,false,true,false,true,false': [0.0, 3, 0], 'true,false,false,true,false,true,true': [0.0, 0, 0], 'false': [0.0, 98, 0], 'true,false,true': [0.0, 0, 101], 'true,false,false,true,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;false;false', '1;;workedunder(A, B) :- actor(A), director(B).;false;false', '2;;workedunder(A, B) :- actor(A), director(B).;false;false', '3;;workedunder(A, B) :- actor(A), director(B).;false;false', '4;;workedunder(A, B) :- actor(A), director(B).;false;false', '5;;workedunder(A, B) :- actor(A), director(B).;false;false', '6;;workedunder(A, B) :- actor(A), director(B).;true;false', '6;true;movie(C, A), movie(C, B).;false;true', '6;true,false;movie(D, B), movie(E, A), workedunder(A, F).;false;false', '7;;workedunder(A, B) :- actor(A), director(B).;false;false', '8;;workedunder(A, B) :- actor(A), director(B).;true;false', '8;true;movie(C, A), movie(C, B).;false;true', '8;true,false;movie(D, A), movie(D, E), genre(E, F).;true;false', '8;true,false,true,false;genre(B, F), movie(D, H), workedunder(H, I).;false;false', '8;true,false,true;workedunder(G, E).;false;true', '9;;workedunder(A, B) :- actor(A), director(B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false', 0), ('true,false,false,true,true,true', 0)]
Tree #2: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,true', 0)]
Tree #3: [('true,true', 0), ('true,false,false,false', 0), ('true,false,true', 0), ('true,false,false,true', 0.9711538461538461)]
Tree #4: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,true', 0)]
Tree #5: [('true,true', 0), ('true,false,false,true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,false,false,true', 0)]
Tree #6: [('true,false', 0), ('true,true', 0.9711538461538461)]
Tree #7: [('true,false,false,false', 0), ('true,false,true', 0)]
Tree #8: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,true', 0)]
Tree #9: [('true,false,true,false,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,true', 0), ('true,false,false', 0)]
Tree #10: [('true,true', 0), ('true,false,false,true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true,true', 0), ('true,false,false,true,false,false', 0)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.8293027812533573;  // std dev = 1,707, 104,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=101 */
%   else return -0.14185106490048766;  // std dev = 8,16e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.696412292614412;  // std dev = 1,707, 104,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=101 */
%   else return -0.1254446385283914;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.539298390294931;  // std dev = 1,707, 104,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=101 */
%   else return -0.11231637819360624;  // std dev = 6,99e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.40528553563083547;  // std dev = 1,707, 104,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=101 */
%   else return -0.10159632948783623;  // std dev = 5,16e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.3095837391283535;  // std dev = 1,707, 104,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=101 */
%   else return -0.09269127618926104;  // std dev = 2,58e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.24406889759333186;  // std dev = 1,707, 104,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=101 */
%   else return -0.08518475138839682;  // std dev = 5,37e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22724178368562653;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( movie(D, B), movie(E, A), workedunder(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.7727582163143737;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109164;  // std dev = 5,16e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1667196700042005;  // std dev = 1,367, 104,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=101 */
%   else return -0.07324622576333707;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16549288168100287;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( movie(D, A), movie(D, E), genre(E, F) )
%   | | then if ( workedunder(G, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( genre(B, F), movie(D, H), workedunder(H, I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.6497437648536519;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 4,21e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.12553905339244312;  // std dev = 1,085, 104,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=101 */
%   else return -0.06419184008202626;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.117255
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total learning time: 3.901 seconds
Total inference time: 0.444 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 7.9079999999999995
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101091
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.788 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 3, Type: transfer, Total folds for small set: 2, Time: 00:28:25
{'CLL': -0.101091, 'Recall': 1.0, 'Learning time': 7.9079999999999995, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 60000, 'Total time': 28.345076084136963, 'Generating mappings time': 2.7043232917785645, 'Finding best mapping': 22.71327805519104, 'Generating paths time': 2.909381151199341, 'Knowledge compiling time': 0.018085002899169922}, 'Parameter Learning Results': {'CLL': -0.101091, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.788}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,30e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.14185106490048763;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.12544463852839138;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,26e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.11231637819360621;  // std dev = 7,74e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.41751358415830975;  // std dev = 2,53e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.10159632948783627;  // std dev = 4,21e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.3207118471601504;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.09269127618926098;  // std dev = 4,34e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.08518475138839682;  // std dev = 5,48e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.20975771563253562;  // std dev = 1,43e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.07877675473109161;  // std dev = 5,67e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.17709649774527728;  // std dev = 6,32e-08, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.07324622576333707;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.06842697784420265;  // std dev = 4,77e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,66e-08, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.06419184008202626;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
Results
   AUC ROC   = 0.985955
   AUC PR    = 0.972678
   CLL	      = -0.123634
   Precision = 0.972678 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.98615


Total learning time: 2.175 seconds
Total inference time: 0.701 seconds
AUC ROC: 0.985955


Dataset: uwcse,imdb, Run: 1, Fold: 3, Type: scratch, Total folds for small set: 2, Time: 00:28:28
{'CLL': -0.123634, 'Recall': 1.0, 'Learning time': 2.175, 'Precision': [0.972678, 0.5], 'AUC ROC': 0.985955, 'F1': 0.98615, 'AUC PR': 0.972678, 'Inference time': 0.701}


Best mapping found: ['professor(A) -> actor(A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> movie(A,B)', 'publication(A,B) -> movie(A,B)', 'yearsinprogram(A,B) -> genre(A,B)', 'student(A) -> director(A)'] 

Tranferred structured tree: [['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(K, B), movie(K, L), workedunder(L, M)', 'true,false,false,true': 'movie(H, B), movie(H, I), director(I)', 'true,true': 'movie(D, B), movie(D, A)', 'true,false,false,true,true': 'workedunder(J, I)', 'true,false': 'movie(E, B), movie(E, A)', 'true,false,false': 'movie(F, A), movie(F, G), actor(G)'}, {'true,false,false,true,true,false': [1.095, 2, 3], 'true,false,false,true,false': [0.894, 4, 1], 'true,false,true': [0.0, 0, 12], 'true,false,false,true,true,true': [0.866, 3, 1], 'true,false,false,false,true': [0.319, 3, 23], 'false': [7.45e-08, 88, 0], 'true,true,true': [1.79e-07, 0, 29], 'true,true,false': [0.4, 10, 40], 'true,false,false,false,false': [0.495, 3, 4]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(K, A)', 'true,false,false,true,false': 'workedunder(F, J)', 'true,false,false,true': 'workedunder(F, G), movie(H, B), movie(I, G)', 'true,false,false,false,false': 'movie(L, B), movie(L, M), workedunder(M, N)', 'true,false': 'movie(D, B), movie(D, A)', 'true,false,false': 'movie(E, A), movie(E, F), actor(F)'}, {'true,true': [0.328, 10, 69], 'true,false,false,true,false,true': [1.178, 3, 3], 'true,false,false,false,true': [0.048, 0, 4], 'true,false,false,true,false,false': [0.794, 2, 1], 'false': [0.0, 88, 0], 'true,false,false,true,true': [0.907, 4, 1], 'true,false,false,false,false,false': [1.225, 3, 3], 'true,false,true': [4.21e-08, 0, 12], 'true,false,false,false,false,true': [0.337, 3, 20]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(M, A), movie(M, N), actor(N)', 'true,false,true,true,false': 'movie(D, H), movie(J, A), movie(J, B)', 'true,false': 'movie(D, B), movie(D, E), workedunder(E, F)', 'true,false,true,true': 'movie(G, B)', 'true,false,true': 'movie(G, F), movie(G, H), workedunder(H, I)', 'true,false,false': 'movie(K, B), movie(L, A)'}, {'true,false,true,true,false,false': [0.46, 7, 7], 'true,false,false,true': [0.729, 1, 2], 'true,false,true,true,true': [0.276, 2, 10], 'true,true': [0.327, 10, 69], 'true,false,false,false,true': [0.805, 2, 1], 'false': [6.32e-08, 88, 0], 'true,false,false,false,false': [0.484, 3, 4], 'true,false,true,false': [0.054, 0, 16], 'true,false,true,true,false,true': [0.0, 0, 4]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(N, B), movie(N, P), workedunder(P, Q)', 'true,false,false,true': 'workedunder(I, J), movie(K, I), movie(K, J)', 'true,true': 'movie(D, B), movie(D, E), genre(E, F)', 'true,false,false,true,false': 'workedunder(I, L), movie(M, B)', 'true,false': 'movie(G, A), movie(G, B)', 'true,false,false': 'movie(H, A), movie(H, I), actor(I)'}, {'true,true,true': [0.356, 10, 53], 'true,false,true': [0.058, 0, 12], 'true,false,false,false,true': [0.298, 3, 23], 'true,false,false,true,false,true': [1.015, 4, 2], 'true,false,false,true,false,false': [0.751, 3, 1], 'false': [5.87e-08, 88, 0], 'true,false,false,false,false': [0.483, 3, 4], 'true,true,false': [4.21e-08, 0, 16], 'true,false,false,true,true': [1.009, 2, 2]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), movie(D, C), movie(D, B)', 'true,false,false,true,false': 'movie(F, J), workedunder(J, K)', 'true,false,false,true': 'workedunder(B, H), movie(F, I), actor(I)', 'true,false,false,true,false,false': 'workedunder(B, L)', 'true,false': 'movie(E, B), movie(E, A)', 'true,false,false,true,false,true': 'movie(F, K)', 'true,false,false': 'movie(F, A), movie(G, B)'}, {'true,true': [0.063, 0, 7], 'true,false,false,false': [0.352, 13, 58], 'true,false,false,true,false,false,false': [0.676, 1, 4], 'true,false,false,true,false,false,true': [0.841, 1, 3], 'true,false,false,true,false,true,false': [1.011, 4, 2], 'true,false,false,true,false,true,true': [0.824, 2, 1], 'false': [1.05e-08, 88, 0], 'true,false,true': [0.158, 0, 37], 'true,false,false,true,true': [0.894, 4, 1]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, B)', 'true,false,false,false': 'movie(H, A), movie(H, I), actor(I)', 'true,false,false,false,true,false': 'workedunder(I, L), movie(M, I), movie(M, L)', 'true,false,false,false,true,false,false': 'movie(N, B), movie(N, P), director(P)', 'true,false,false,false,true': 'workedunder(B, J), movie(K, B)', 'true,false': 'workedunder(B, D), movie(E, D), movie(F, A)', 'true,false,false': 'movie(G, A), movie(G, B)'}, {'true,false,false,false,true,false,false,true': [1.085, 3, 3], 'true,true': [1.05e-08, 0, 8], 'true,false,false,true': [0.131, 0, 30], 'true,false,false,false,true,false,true': [0.989, 2, 2], 'false': [2.36e-08, 88, 0], 'true,false,false,false,false': [0.359, 12, 57], 'true,false,false,false,true,true': [0.894, 4, 1], 'true,false,false,false,true,false,false,false': [0.512, 4, 1], 'true,false,true': [0.012, 0, 11]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'movie(I, A), movie(I, J), actor(J)', 'true,false,false,false,true,false': 'workedunder(J, N)', 'true,false,false,false,true': 'movie(K, B), workedunder(J, L), movie(M, L)', 'true,false': 'movie(D, A), movie(E, B), workedunder(B, F)', 'true,false,true': 'movie(D, G), actor(G)', 'true,false,false': 'movie(H, B)'}, {'true,false,false,false,true,false,false': [0.674, 2, 1], 'true,false,true,true': [0.894, 4, 1], 'true,false,false,true': [1.05e-08, 0, 8], 'true,true': [0.118, 0, 41], 'true,false,false,false,true,true': [0.882, 4, 1], 'false': [4.08e-08, 88, 0], 'true,false,false,false,false': [0.355, 11, 54], 'true,false,false,false,true,false,true': [0.388, 3, 4], 'true,false,true,false': [0.844, 1, 3]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(K, B), movie(K, L), workedunder(L, M)', 'true,false,false,true,false': 'workedunder(F, I), movie(J, B)', 'true,false,false,true': 'workedunder(F, G), genre(G, H), genre(A, H)', 'true,false,false,false,true': 'movie(N, M), movie(N, P), movie(K, P)', 'true,false': 'movie(D, B), movie(D, A)', 'true,false,false': 'movie(E, A), movie(E, F), actor(F)'}, {'true,true': [0.283, 10, 69], 'true,false,false,false,true,false': [0.094, 0, 13], 'true,false,false,true,false,true': [0.932, 4, 2], 'true,false,false,true,false,false': [0.714, 3, 1], 'false': [0.0, 88, 0], 'true,false,false,false,false': [0.482, 3, 4], 'true,false,false,false,true,true': [0.407, 3, 10], 'true,false,true': [0.033, 0, 12], 'true,false,false,true,true': [0.935, 2, 2]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,true': 'movie(J, I), movie(J, K), movie(D, K)', 'true,false,true,false,false': 'workedunder(B, L)', 'true,false,true,false,true,false': 'genre(I, F)', 'true,false': 'movie(D, B), movie(D, E), genre(E, F)', 'true,false,true,false': 'genre(A, F), movie(D, H), workedunder(H, I)', 'true,false,true': 'workedunder(G, E)'}, {'true,true': [0.102, 0, 41], 'true,false,true,false,false,false': [0.254, 1, 9], 'true,false,true,false,true,false,true': [0.292, 0, 3], 'true,false,true,false,true,true': [0.502, 8, 6], 'false': [3.33e-08, 88, 0], 'true,false,false': [0.256, 6, 27], 'true,false,true,true': [0.29, 4, 11], 'true,false,true,false,false,true': [0.411, 4, 11], 'true,false,true,false,true,false,false': [0.385, 2, 5]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), genre(C, D), genre(A, D)', 'true,false,false,true,false': 'movie(M, A), genre(A, H)', 'true,false,false,true': 'workedunder(B, I), movie(J, A)', 'true,false,false,true,true': 'movie(J, K), workedunder(K, L)', 'true,false': 'movie(E, B), movie(E, A)', 'true,false,false,true,false,true': 'movie(M, N), workedunder(N, P), movie(Q, P)', 'true,false,false': 'movie(F, B), movie(F, G), genre(G, H)'}, {'true,true': [0.043, 0, 4], 'true,false,false,true,true,false': [0.744, 3, 1], 'true,false,false,false': [0.256, 6, 27], 'true,false,false,true,true,true': [0.845, 2, 1], 'true,false,false,true,false,true,false': [0.711, 1, 4], 'true,false,false,true,false,true,true': [0.768, 2, 1], 'false': [0.0, 88, 0], 'true,false,false,true,false,false': [0.383, 11, 34], 'true,false,true': [0.091, 0, 41]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(B, A) :- actor(B), director(A).;true;false', '0;true;workedunder(B, C).;true;true', '0;true,false,false,false;movie(K, B), movie(K, L), workedunder(L, M).;false;false', '0;true,false,false,true;movie(H, B), movie(H, I), director(I).;true;false', '0;true,true;movie(D, B), movie(D, A).;false;false', '0;true,false,false,true,true;workedunder(J, I).;false;false', '0;true,false;movie(E, B), movie(E, A).;false;true', '0;true,false,false;movie(F, A), movie(F, G), actor(G).;true;true', '1;;workedunder(B, A) :- actor(B), director(A).;true;false', '1;true;workedunder(B, C).;false;true', '1;true,false,false,false;movie(K, A).;false;true', '1;true,false,false,true,false;workedunder(F, J).;false;false', '1;true,false,false,true;workedunder(F, G), movie(H, B), movie(I, G).;false;true', '1;true,false,false,false,false;movie(L, B), movie(L, M), workedunder(M, N).;false;false', '1;true,false;movie(D, B), movie(D, A).;false;true', '1;true,false,false;movie(E, A), movie(E, F), actor(F).;true;true', '2;;workedunder(B, A) :- actor(B), director(A).;true;false', '2;true;workedunder(B, C).;false;true', '2;true,false,false,false;movie(M, A), movie(M, N), actor(N).;false;false', '2;true,false,true,true,false;movie(D, H), movie(J, A), movie(J, B).;false;false', '2;true,false;movie(D, B), movie(D, E), workedunder(E, F).;true;true', '2;true,false,true,true;movie(G, B).;false;true', '2;true,false,true;movie(G, F), movie(G, H), workedunder(H, I).;true;false', '2;true,false,false;movie(K, B), movie(L, A).;false;true', '3;;workedunder(B, A) :- actor(B), director(A).;true;false', '3;true;workedunder(B, C).;true;true', '3;true,false,false,false;movie(N, B), movie(N, P), workedunder(P, Q).;false;false', '3;true,false,false,true;workedunder(I, J), movie(K, I), movie(K, J).;false;true', '3;true,true;movie(D, B), movie(D, E), genre(E, F).;false;false', '3;true,false,false,true,false;workedunder(I, L), movie(M, B).;false;false', '3;true,false;movie(G, A), movie(G, B).;false;true', '3;true,false,false;movie(H, A), movie(H, I), actor(I).;true;true', '4;;workedunder(B, A) :- actor(B), director(A).;true;false', '4;true;workedunder(B, C), movie(D, C), movie(D, B).;false;true', '4;true,false,false,true,false;movie(F, J), workedunder(J, K).;true;true', '4;true,false,false,true;workedunder(B, H), movie(F, I), actor(I).;false;true', '4;true,false,false,true,false,false;workedunder(B, L).;false;false', '4;true,false;movie(E, B), movie(E, A).;false;true', '4;true,false,false,true,false,true;movie(F, K).;false;false', '4;true,false,false;movie(F, A), movie(G, B).;true;false', '5;;workedunder(B, A) :- actor(B), director(A).;true;false', '5;true;movie(C, B).;false;true', '5;true,false,false,false;movie(H, A), movie(H, I), actor(I).;true;false', '5;true,false,false,false,true,false;workedunder(I, L), movie(M, I), movie(M, L).;false;true', '5;true,false,false,false,true,false,false;movie(N, B), movie(N, P), director(P).;false;false', '5;true,false,false,false,true;workedunder(B, J), movie(K, B).;false;true', '5;true,false;workedunder(B, D), movie(E, D), movie(F, A).;false;true', '5;true,false,false;movie(G, A), movie(G, B).;false;true', '6;;workedunder(B, A) :- actor(B), director(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;true', '6;true,false,false,false;movie(I, A), movie(I, J), actor(J).;true;false', '6;true,false,false,false,true,false;workedunder(J, N).;false;false', '6;true,false,false,false,true;movie(K, B), workedunder(J, L), movie(M, L).;false;true', '6;true,false;movie(D, A), movie(E, B), workedunder(B, F).;true;true', '6;true,false,true;movie(D, G), actor(G).;false;false', '6;true,false,false;movie(H, B).;false;true', '7;;workedunder(B, A) :- actor(B), director(A).;true;false', '7;true;workedunder(B, C).;false;true', '7;true,false,false,false;movie(K, B), movie(K, L), workedunder(L, M).;true;false', '7;true,false,false,true,false;workedunder(F, I), movie(J, B).;false;false', '7;true,false,false,true;workedunder(F, G), genre(G, H), genre(A, H).;false;true', '7;true,false,false,false,true;movie(N, M), movie(N, P), movie(K, P).;false;false', '7;true,false;movie(D, B), movie(D, A).;false;true', '7;true,false,false;movie(E, A), movie(E, F), actor(F).;true;true', '8;;workedunder(B, A) :- actor(B), director(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false,true,false,true;movie(J, I), movie(J, K), movie(D, K).;false;true', '8;true,false,true,false,false;workedunder(B, L).;false;false', '8;true,false,true,false,true,false;genre(I, F).;false;false', '8;true,false;movie(D, B), movie(D, E), genre(E, F).;true;false', '8;true,false,true,false;genre(A, F), movie(D, H), workedunder(H, I).;true;true', '8;true,false,true;workedunder(G, E).;false;true', '9;;workedunder(B, A) :- actor(B), director(A).;true;false', '9;true;workedunder(B, C), genre(C, D), genre(A, D).;false;true', '9;true,false,false,true,false;movie(M, A), genre(A, H).;true;false', '9;true,false,false,true;workedunder(B, I), movie(J, A).;true;true', '9;true,false,false,true,true;movie(J, K), workedunder(K, L).;false;false', '9;true,false;movie(E, B), movie(E, A).;false;true', '9;true,false,false,true,false,true;movie(M, N), workedunder(N, P), movie(Q, P).;false;false', '9;true,false,false;movie(F, B), movie(F, G), genre(G, H).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995097;  // std dev = 9,90e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else if ( movie(E, B), movie(E, F), actor(F) )
%   | | | then if ( movie(G, A), movie(G, H), director(H) )
%   | | | | then if ( workedunder(I, H) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048802;  // std dev = 0,000, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109564;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else if ( movie(E, B), movie(E, F), actor(F) )
%   | | | then if ( workedunder(F, G), movie(H, A), movie(I, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(F, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 5,58e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, E), workedunder(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return 0.5389815823919301;  // std dev = 1,319, 163,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=159 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 1,03e-07, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B), movie(D, A) )
%   | | then return 0.4215036184319275;  // std dev = 1,46e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else if ( movie(E, B), movie(E, F), actor(F) )
%   | | | then if ( workedunder(F, G), movie(H, F), movie(H, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(F, I), movie(J, A) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.17824048391644204;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783645;  // std dev = 0,000, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), movie(D, C), movie(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32341810941617466;  // std dev = 3,63e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else if ( movie(F, B), movie(G, A) )
%   | | | then if ( workedunder(A, H), movie(F, I), actor(I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, J), workedunder(J, K) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(A, L) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.15361113353995265;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926072;  // std dev = 7,45e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.24740569482696653;  // std dev = 0,774, 163,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=159 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 6,32e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21266572248241267;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else if ( movie(D, B), movie(E, A), workedunder(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A) )
%   | | | then return -0.16620577036096887;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109153;  // std dev = 8,02e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17922646239841714;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else if ( movie(E, B), movie(E, F), actor(F) )
%   | | | then if ( workedunder(F, G), genre(G, H), genre(B, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(F, I), movie(J, A) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.14443088208667307;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333684;  // std dev = 7,81e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15435773698911134;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else if ( movie(D, A), movie(D, E), genre(E, F) )
%   | | then if ( workedunder(G, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( genre(B, F), movie(D, H), workedunder(H, I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(A, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12748326913919827;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12748326913919827;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420264;  // std dev = 6,58e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), genre(C, D), genre(B, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1352657029883488;  // std dev = 4,71e-08, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else if ( movie(F, A), movie(F, G), genre(G, H) )
%   | | | then if ( workedunder(A, I), movie(J, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(K, B), genre(B, H) )
%   | | | | | then if ( movie(K, L), workedunder(L, M), movie(N, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.11396349588046704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | | | else return -0.11396349588046704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11396349588046704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202626;  // std dev = 0,000, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095209
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.02 seconds
Total inference time: 0.593 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095209
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.593 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true': 'movie(G, A), movie(G, H), director(H)', 'true,false,false,true,true': 'workedunder(I, H)', 'true,false': 'movie(D, A), movie(D, B)', 'true,false,false': 'movie(E, B), movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 0], 'true,false,false,true,true,false': [0.0, 4, 0], 'true,false,false,true,false': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,true,true': [0.0, 0, 0], 'false': [0.0, 155, 0], 'true,false,true': [9.9e-07, 0, 159]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true,false': 'workedunder(F, J)', 'true,false,false,true': 'workedunder(F, G), movie(H, A), movie(I, G)', 'true,false': 'movie(D, A), movie(D, B)', 'true,false,false': 'movie(E, B), movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 159], 'true,false,false,true,false,false': [0.0, 4, 0], 'false': [5.58e-08, 155, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false': 'movie(D, A), movie(D, E), workedunder(E, F)', 'true,false,false': 'movie(G, A), movie(H, B)'}, {'true,true': [0.0, 0, 0], 'false': [1.03e-07, 155, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.319, 4, 159]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true,false': 'workedunder(F, I), movie(J, A)', 'true,false,false,true': 'workedunder(F, G), movie(H, F), movie(H, G)', 'true,false': 'movie(D, B), movie(D, A)', 'true,false,false': 'movie(E, B), movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [1.46e-07, 0, 159], 'true,false,false,true,false,false': [0.0, 4, 0], 'false': [0.0, 155, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), movie(D, C), movie(D, A)', 'true,false,false,true,false': 'movie(F, J), workedunder(J, K)', 'true,false,false,true': 'workedunder(A, H), movie(F, I), actor(I)', 'true,false,false,true,false,false': 'workedunder(A, L)', 'true,false': 'movie(E, A), movie(E, B)', 'true,false,false': 'movie(F, B), movie(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [3.63e-07, 0, 159], 'true,false,false,true,false,false,false': [0.0, 4, 0], 'true,false,false,true,false,false,true': [0.0, 0, 0], 'false': [7.45e-08, 155, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.774, 4, 159], 'false': [6.32e-08, 155, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A), workedunder(A, F)', 'true,false,false': 'movie(G, A)'}, {'true,true': [0.0, 0, 159], 'false': [8.02e-08, 155, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true,false': 'workedunder(F, I), movie(J, A)', 'true,false,false,true': 'workedunder(F, G), genre(G, H), genre(B, H)', 'true,false': 'movie(D, A), movie(D, B)', 'true,false,false': 'movie(E, B), movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 159], 'true,false,false,true,false,false': [0.0, 4, 0], 'false': [7.81e-08, 155, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,false': 'workedunder(A, J)', 'true,false': 'movie(D, A), movie(D, E), genre(E, F)', 'true,false,true,false': 'genre(B, F), movie(D, H), workedunder(H, I)', 'true,false,true': 'workedunder(G, E)'}, {'true,true': [0.0, 0, 159], 'true,false,true,false,false,false': [0.0, 3, 0], 'false': [6.58e-08, 155, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), genre(C, D), genre(B, D)', 'true,false,false,true,false': 'movie(K, B), genre(B, H)', 'true,false,false,true': 'workedunder(A, I), movie(J, B)', 'true,false': 'movie(E, A), movie(E, B)', 'true,false,false,true,false,true': 'movie(K, L), workedunder(L, M), movie(N, M)', 'true,false,false': 'movie(F, A), movie(F, G), genre(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'true,false,false,true,false,false': [0.0, 1, 0], 'true,false,false,true,false,true,false': [0.0, 2, 0], 'true,false,false,true,false,true,true': [0.0, 0, 0], 'false': [0.0, 155, 0], 'true,false,true': [4.71e-08, 0, 159], 'true,false,false,true,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;false;false', '1;;workedunder(A, B) :- actor(A), director(B).;false;false', '2;;workedunder(A, B) :- actor(A), director(B).;false;false', '3;;workedunder(A, B) :- actor(A), director(B).;false;false', '4;;workedunder(A, B) :- actor(A), director(B).;false;false', '5;;workedunder(A, B) :- actor(A), director(B).;false;false', '6;;workedunder(A, B) :- actor(A), director(B).;true;false', '6;true;movie(C, A), movie(C, B).;false;true', '6;true,false;movie(D, B), movie(E, A), workedunder(A, F).;false;false', '7;;workedunder(A, B) :- actor(A), director(B).;false;false', '8;;workedunder(A, B) :- actor(A), director(B).;true;false', '8;true;movie(C, A), movie(C, B).;false;true', '8;true,false;movie(D, A), movie(D, E), genre(E, F).;true;false', '8;true,false,true,false;genre(B, F), movie(D, H), workedunder(H, I).;false;false', '8;true,false,true;workedunder(G, E).;false;true', '9;;workedunder(A, B) :- actor(A), director(B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false', 0), ('true,false,false,true,true,true', 0)]
Tree #2: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,true', 0)]
Tree #3: [('true,true', 0), ('true,false,false,false', 0), ('true,false,true', 0), ('true,false,false,true', 0.9754601226993865)]
Tree #4: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,true', 0)]
Tree #5: [('true,true', 0), ('true,false,false,true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,false,false,true', 0)]
Tree #6: [('true,false', 0), ('true,true', 0.9754601226993865)]
Tree #7: [('true,false,false,false', 0), ('true,false,true', 0)]
Tree #8: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,true', 0)]
Tree #9: [('true,false,true,false,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,true', 0)]
Tree #10: [('true,true', 0), ('true,false,false,true,true', 0), ('true,false,false,true,false,true,true', 0)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.8336090577988962;  // std dev = 1,975, 163,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=159 */
%   else return -0.14185106490048802;  // std dev = 0,000, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.6998596745630978;  // std dev = 1,975, 163,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=159 */
%   else return -0.12544463852839127;  // std dev = 5,58e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5417012615518161;  // std dev = 1,975, 163,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=159 */
%   else return -0.1123163781936062;  // std dev = 1,03e-07, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.40709843469415935;  // std dev = 1,975, 163,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=159 */
%   else return -0.10159632948783645;  // std dev = 0,000, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.31121532373108324;  // std dev = 1,975, 163,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=159 */
%   else return -0.09269127618926072;  // std dev = 7,45e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2456846434585418;  // std dev = 1,975, 163,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=159 */
%   else return -0.08518475138839679;  // std dev = 6,32e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22458077164985227;  // std dev = 1,98e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else if ( movie(D, B), movie(E, A), workedunder(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.7754192283501473;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109153;  // std dev = 8,02e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.16821855046252635;  // std dev = 1,584, 163,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=159 */
%   else return -0.07324622576333684;  // std dev = 7,81e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16356098187596052;  // std dev = 1,07e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else if ( movie(D, A), movie(D, E), genre(E, F) )
%   | | then if ( workedunder(G, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( genre(B, F), movie(D, H), workedunder(H, I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.652935502273651;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.652935502273651;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420264;  // std dev = 6,58e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.12676053288359224;  // std dev = 1,259, 163,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=159 */
%   else return -0.06419184008202626;  // std dev = 0,000, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09943
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.015 seconds
Total inference time: 0.534 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 7.162000000000001
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100021
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.796 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 3, Type: transfer, Total folds for small set: 3, Time: 00:29:05
{'CLL': -0.100021, 'Recall': 1.0, 'Learning time': 7.162000000000001, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 60000, 'Total time': 26.945809841156006, 'Generating mappings time': 2.800816774368286, 'Finding best mapping': 21.426384210586548, 'Generating paths time': 2.697361946105957, 'Knowledge compiling time': 0.021239042282104492}, 'Parameter Learning Results': {'CLL': -0.100021, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.796}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.8581489350995097;  // std dev = 9,90e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.1418510649004881;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.7194734122109564;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.12544463852839133;  // std dev = 4,71e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,46e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.11231637819360628;  // std dev = 8,94e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.417513584158309;  // std dev = 4,54e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.10159632948783645;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.32071184716014967;  // std dev = 3,10e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.0926912761892607;  // std dev = 7,74e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.25517224256949056;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.08518475138839678;  // std dev = 6,66e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,60e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.07877675473109151;  // std dev = 8,30e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.0732462257633368;  // std dev = 8,69e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.06842697784420262;  // std dev = 6,99e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,19e-08, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.06419184008202626;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
Results
   AUC ROC   = 0.985955
   AUC PR    = 0.972678
   CLL	      = -0.123634
   Precision = 0.972678 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.98615


Total learning time: 2.754 seconds
Total inference time: 0.68 seconds
AUC ROC: 0.985955


Dataset: uwcse,imdb, Run: 1, Fold: 3, Type: scratch, Total folds for small set: 3, Time: 00:29:09
{'CLL': -0.123634, 'Recall': 1.0, 'Learning time': 2.754, 'Precision': [0.972678, 0.5], 'AUC ROC': 0.985955, 'F1': 0.98615, 'AUC PR': 0.972678, 'Inference time': 0.68}


Best mapping found: ['professor(A) -> actor(A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> movie(A,B)', 'publication(A,B) -> movie(A,B)', 'yearsinprogram(A,B) -> genre(A,B)', 'student(A) -> director(A)'] 

Tranferred structured tree: [['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(K, B), movie(K, L), workedunder(L, M)', 'true,false,false,true': 'movie(H, B), movie(H, I), director(I)', 'true,true': 'movie(D, B), movie(D, A)', 'true,false,false,true,true': 'workedunder(J, I)', 'true,false': 'movie(E, B), movie(E, A)', 'true,false,false': 'movie(F, A), movie(F, G), actor(G)'}, {'true,false,false,true,true,false': [1.095, 2, 3], 'true,false,false,true,false': [0.894, 4, 1], 'true,false,true': [0.0, 0, 12], 'true,false,false,true,true,true': [0.866, 3, 1], 'true,false,false,false,true': [0.319, 3, 23], 'false': [7.45e-08, 88, 0], 'true,true,true': [1.79e-07, 0, 29], 'true,true,false': [0.4, 10, 40], 'true,false,false,false,false': [0.495, 3, 4]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(K, A)', 'true,false,false,true,false': 'workedunder(F, J)', 'true,false,false,true': 'workedunder(F, G), movie(H, B), movie(I, G)', 'true,false,false,false,false': 'movie(L, B), movie(L, M), workedunder(M, N)', 'true,false': 'movie(D, B), movie(D, A)', 'true,false,false': 'movie(E, A), movie(E, F), actor(F)'}, {'true,true': [0.328, 10, 69], 'true,false,false,true,false,true': [1.178, 3, 3], 'true,false,false,false,true': [0.048, 0, 4], 'true,false,false,true,false,false': [0.794, 2, 1], 'false': [0.0, 88, 0], 'true,false,false,true,true': [0.907, 4, 1], 'true,false,false,false,false,false': [1.225, 3, 3], 'true,false,true': [4.21e-08, 0, 12], 'true,false,false,false,false,true': [0.337, 3, 20]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(M, A), movie(M, N), actor(N)', 'true,false,true,true,false': 'movie(D, H), movie(J, A), movie(J, B)', 'true,false': 'movie(D, B), movie(D, E), workedunder(E, F)', 'true,false,true,true': 'movie(G, B)', 'true,false,true': 'movie(G, F), movie(G, H), workedunder(H, I)', 'true,false,false': 'movie(K, B), movie(L, A)'}, {'true,false,true,true,false,false': [0.46, 7, 7], 'true,false,false,true': [0.729, 1, 2], 'true,false,true,true,true': [0.276, 2, 10], 'true,true': [0.327, 10, 69], 'true,false,false,false,true': [0.805, 2, 1], 'false': [6.32e-08, 88, 0], 'true,false,false,false,false': [0.484, 3, 4], 'true,false,true,false': [0.054, 0, 16], 'true,false,true,true,false,true': [0.0, 0, 4]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(N, B), movie(N, P), workedunder(P, Q)', 'true,false,false,true': 'workedunder(I, J), movie(K, I), movie(K, J)', 'true,true': 'movie(D, B), movie(D, E), genre(E, F)', 'true,false,false,true,false': 'workedunder(I, L), movie(M, B)', 'true,false': 'movie(G, A), movie(G, B)', 'true,false,false': 'movie(H, A), movie(H, I), actor(I)'}, {'true,true,true': [0.356, 10, 53], 'true,false,true': [0.058, 0, 12], 'true,false,false,false,true': [0.298, 3, 23], 'true,false,false,true,false,true': [1.015, 4, 2], 'true,false,false,true,false,false': [0.751, 3, 1], 'false': [5.87e-08, 88, 0], 'true,false,false,false,false': [0.483, 3, 4], 'true,true,false': [4.21e-08, 0, 16], 'true,false,false,true,true': [1.009, 2, 2]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), movie(D, C), movie(D, B)', 'true,false,false,true,false': 'movie(F, J), workedunder(J, K)', 'true,false,false,true': 'workedunder(B, H), movie(F, I), actor(I)', 'true,false,false,true,false,false': 'workedunder(B, L)', 'true,false': 'movie(E, B), movie(E, A)', 'true,false,false,true,false,true': 'movie(F, K)', 'true,false,false': 'movie(F, A), movie(G, B)'}, {'true,true': [0.063, 0, 7], 'true,false,false,false': [0.352, 13, 58], 'true,false,false,true,false,false,false': [0.676, 1, 4], 'true,false,false,true,false,false,true': [0.841, 1, 3], 'true,false,false,true,false,true,false': [1.011, 4, 2], 'true,false,false,true,false,true,true': [0.824, 2, 1], 'false': [1.05e-08, 88, 0], 'true,false,true': [0.158, 0, 37], 'true,false,false,true,true': [0.894, 4, 1]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, B)', 'true,false,false,false': 'movie(H, A), movie(H, I), actor(I)', 'true,false,false,false,true,false': 'workedunder(I, L), movie(M, I), movie(M, L)', 'true,false,false,false,true,false,false': 'movie(N, B), movie(N, P), director(P)', 'true,false,false,false,true': 'workedunder(B, J), movie(K, B)', 'true,false': 'workedunder(B, D), movie(E, D), movie(F, A)', 'true,false,false': 'movie(G, A), movie(G, B)'}, {'true,false,false,false,true,false,false,true': [1.085, 3, 3], 'true,true': [1.05e-08, 0, 8], 'true,false,false,true': [0.131, 0, 30], 'true,false,false,false,true,false,true': [0.989, 2, 2], 'false': [2.36e-08, 88, 0], 'true,false,false,false,false': [0.359, 12, 57], 'true,false,false,false,true,true': [0.894, 4, 1], 'true,false,false,false,true,false,false,false': [0.512, 4, 1], 'true,false,true': [0.012, 0, 11]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'movie(I, A), movie(I, J), actor(J)', 'true,false,false,false,true,false': 'workedunder(J, N)', 'true,false,false,false,true': 'movie(K, B), workedunder(J, L), movie(M, L)', 'true,false': 'movie(D, A), movie(E, B), workedunder(B, F)', 'true,false,true': 'movie(D, G), actor(G)', 'true,false,false': 'movie(H, B)'}, {'true,false,false,false,true,false,false': [0.674, 2, 1], 'true,false,true,true': [0.894, 4, 1], 'true,false,false,true': [1.05e-08, 0, 8], 'true,true': [0.118, 0, 41], 'true,false,false,false,true,true': [0.882, 4, 1], 'false': [4.08e-08, 88, 0], 'true,false,false,false,false': [0.355, 11, 54], 'true,false,false,false,true,false,true': [0.388, 3, 4], 'true,false,true,false': [0.844, 1, 3]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C)', 'true,false,false,false': 'movie(K, B), movie(K, L), workedunder(L, M)', 'true,false,false,true,false': 'workedunder(F, I), movie(J, B)', 'true,false,false,true': 'workedunder(F, G), genre(G, H), genre(A, H)', 'true,false,false,false,true': 'movie(N, M), movie(N, P), movie(K, P)', 'true,false': 'movie(D, B), movie(D, A)', 'true,false,false': 'movie(E, A), movie(E, F), actor(F)'}, {'true,true': [0.283, 10, 69], 'true,false,false,false,true,false': [0.094, 0, 13], 'true,false,false,true,false,true': [0.932, 4, 2], 'true,false,false,true,false,false': [0.714, 3, 1], 'false': [0.0, 88, 0], 'true,false,false,false,false': [0.482, 3, 4], 'true,false,false,false,true,true': [0.407, 3, 10], 'true,false,true': [0.033, 0, 12], 'true,false,false,true,true': [0.935, 2, 2]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,true': 'movie(J, I), movie(J, K), movie(D, K)', 'true,false,true,false,false': 'workedunder(B, L)', 'true,false,true,false,true,false': 'genre(I, F)', 'true,false': 'movie(D, B), movie(D, E), genre(E, F)', 'true,false,true,false': 'genre(A, F), movie(D, H), workedunder(H, I)', 'true,false,true': 'workedunder(G, E)'}, {'true,true': [0.102, 0, 41], 'true,false,true,false,false,false': [0.254, 1, 9], 'true,false,true,false,true,false,true': [0.292, 0, 3], 'true,false,true,false,true,true': [0.502, 8, 6], 'false': [3.33e-08, 88, 0], 'true,false,false': [0.256, 6, 27], 'true,false,true,true': [0.29, 4, 11], 'true,false,true,false,false,true': [0.411, 4, 11], 'true,false,true,false,true,false,false': [0.385, 2, 5]}], ['workedunder(B, A)', {'': 'actor(B), director(A)', 'true': 'workedunder(B, C), genre(C, D), genre(A, D)', 'true,false,false,true,false': 'movie(M, A), genre(A, H)', 'true,false,false,true': 'workedunder(B, I), movie(J, A)', 'true,false,false,true,true': 'movie(J, K), workedunder(K, L)', 'true,false': 'movie(E, B), movie(E, A)', 'true,false,false,true,false,true': 'movie(M, N), workedunder(N, P), movie(Q, P)', 'true,false,false': 'movie(F, B), movie(F, G), genre(G, H)'}, {'true,true': [0.043, 0, 4], 'true,false,false,true,true,false': [0.744, 3, 1], 'true,false,false,false': [0.256, 6, 27], 'true,false,false,true,true,true': [0.845, 2, 1], 'true,false,false,true,false,true,false': [0.711, 1, 4], 'true,false,false,true,false,true,true': [0.768, 2, 1], 'false': [0.0, 88, 0], 'true,false,false,true,false,false': [0.383, 11, 34], 'true,false,true': [0.091, 0, 41]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(B, A) :- actor(B), director(A).;true;false', '0;true;workedunder(B, C).;true;true', '0;true,false,false,false;movie(K, B), movie(K, L), workedunder(L, M).;false;false', '0;true,false,false,true;movie(H, B), movie(H, I), director(I).;true;false', '0;true,true;movie(D, B), movie(D, A).;false;false', '0;true,false,false,true,true;workedunder(J, I).;false;false', '0;true,false;movie(E, B), movie(E, A).;false;true', '0;true,false,false;movie(F, A), movie(F, G), actor(G).;true;true', '1;;workedunder(B, A) :- actor(B), director(A).;true;false', '1;true;workedunder(B, C).;false;true', '1;true,false,false,false;movie(K, A).;false;true', '1;true,false,false,true,false;workedunder(F, J).;false;false', '1;true,false,false,true;workedunder(F, G), movie(H, B), movie(I, G).;false;true', '1;true,false,false,false,false;movie(L, B), movie(L, M), workedunder(M, N).;false;false', '1;true,false;movie(D, B), movie(D, A).;false;true', '1;true,false,false;movie(E, A), movie(E, F), actor(F).;true;true', '2;;workedunder(B, A) :- actor(B), director(A).;true;false', '2;true;workedunder(B, C).;false;true', '2;true,false,false,false;movie(M, A), movie(M, N), actor(N).;false;false', '2;true,false,true,true,false;movie(D, H), movie(J, A), movie(J, B).;false;false', '2;true,false;movie(D, B), movie(D, E), workedunder(E, F).;true;true', '2;true,false,true,true;movie(G, B).;false;true', '2;true,false,true;movie(G, F), movie(G, H), workedunder(H, I).;true;false', '2;true,false,false;movie(K, B), movie(L, A).;false;true', '3;;workedunder(B, A) :- actor(B), director(A).;true;false', '3;true;workedunder(B, C).;true;true', '3;true,false,false,false;movie(N, B), movie(N, P), workedunder(P, Q).;false;false', '3;true,false,false,true;workedunder(I, J), movie(K, I), movie(K, J).;false;true', '3;true,true;movie(D, B), movie(D, E), genre(E, F).;false;false', '3;true,false,false,true,false;workedunder(I, L), movie(M, B).;false;false', '3;true,false;movie(G, A), movie(G, B).;false;true', '3;true,false,false;movie(H, A), movie(H, I), actor(I).;true;true', '4;;workedunder(B, A) :- actor(B), director(A).;true;false', '4;true;workedunder(B, C), movie(D, C), movie(D, B).;false;true', '4;true,false,false,true,false;movie(F, J), workedunder(J, K).;true;true', '4;true,false,false,true;workedunder(B, H), movie(F, I), actor(I).;false;true', '4;true,false,false,true,false,false;workedunder(B, L).;false;false', '4;true,false;movie(E, B), movie(E, A).;false;true', '4;true,false,false,true,false,true;movie(F, K).;false;false', '4;true,false,false;movie(F, A), movie(G, B).;true;false', '5;;workedunder(B, A) :- actor(B), director(A).;true;false', '5;true;movie(C, B).;false;true', '5;true,false,false,false;movie(H, A), movie(H, I), actor(I).;true;false', '5;true,false,false,false,true,false;workedunder(I, L), movie(M, I), movie(M, L).;false;true', '5;true,false,false,false,true,false,false;movie(N, B), movie(N, P), director(P).;false;false', '5;true,false,false,false,true;workedunder(B, J), movie(K, B).;false;true', '5;true,false;workedunder(B, D), movie(E, D), movie(F, A).;false;true', '5;true,false,false;movie(G, A), movie(G, B).;false;true', '6;;workedunder(B, A) :- actor(B), director(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;true', '6;true,false,false,false;movie(I, A), movie(I, J), actor(J).;true;false', '6;true,false,false,false,true,false;workedunder(J, N).;false;false', '6;true,false,false,false,true;movie(K, B), workedunder(J, L), movie(M, L).;false;true', '6;true,false;movie(D, A), movie(E, B), workedunder(B, F).;true;true', '6;true,false,true;movie(D, G), actor(G).;false;false', '6;true,false,false;movie(H, B).;false;true', '7;;workedunder(B, A) :- actor(B), director(A).;true;false', '7;true;workedunder(B, C).;false;true', '7;true,false,false,false;movie(K, B), movie(K, L), workedunder(L, M).;true;false', '7;true,false,false,true,false;workedunder(F, I), movie(J, B).;false;false', '7;true,false,false,true;workedunder(F, G), genre(G, H), genre(A, H).;false;true', '7;true,false,false,false,true;movie(N, M), movie(N, P), movie(K, P).;false;false', '7;true,false;movie(D, B), movie(D, A).;false;true', '7;true,false,false;movie(E, A), movie(E, F), actor(F).;true;true', '8;;workedunder(B, A) :- actor(B), director(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false,true,false,true;movie(J, I), movie(J, K), movie(D, K).;false;true', '8;true,false,true,false,false;workedunder(B, L).;false;false', '8;true,false,true,false,true,false;genre(I, F).;false;false', '8;true,false;movie(D, B), movie(D, E), genre(E, F).;true;false', '8;true,false,true,false;genre(A, F), movie(D, H), workedunder(H, I).;true;true', '8;true,false,true;workedunder(G, E).;false;true', '9;;workedunder(B, A) :- actor(B), director(A).;true;false', '9;true;workedunder(B, C), genre(C, D), genre(A, D).;false;true', '9;true,false,false,true,false;movie(M, A), genre(A, H).;true;false', '9;true,false,false,true;workedunder(B, I), movie(J, A).;true;true', '9;true,false,false,true,true;movie(J, K), workedunder(K, L).;false;false', '9;true,false;movie(E, B), movie(E, A).;false;true', '9;true,false,false,true,false,true;movie(M, N), workedunder(N, P), movie(Q, P).;false;false', '9;true,false,false;movie(F, B), movie(F, G), genre(G, H).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(E, B), movie(E, F), actor(F) )
%   | | | then if ( movie(G, A), movie(G, H), director(H) )
%   | | | | then if ( workedunder(I, H) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048824;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(E, B), movie(E, F), actor(F) )
%   | | | then if ( workedunder(F, G), movie(H, A), movie(I, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(F, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, E), workedunder(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return 0.5332158220326374;  // std dev = 1,737, 211,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=204 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936065;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B), movie(D, A) )
%   | | then return 0.4229101644343135;  // std dev = 5,20e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(E, B), movie(E, F), actor(F) )
%   | | | then if ( workedunder(F, G), movie(H, F), movie(H, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(F, I), movie(J, A) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.17739753446955422;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878365;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), movie(D, C), movie(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32437272093573516;  // std dev = 1,98e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(F, B), movie(G, A) )
%   | | | then if ( workedunder(A, H), movie(F, I), actor(I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, J), workedunder(J, K) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(A, L) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.1529721863217198;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926062;  // std dev = 8,69e-08, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.24466879339866313;  // std dev = 1,019, 211,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 7,30e-08, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21369586451211778;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, B), movie(E, A), workedunder(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A) )
%   | | | then return -0.16523510155576185;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310915;  // std dev = 8,02e-08, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17997959914982853;  // std dev = 1,60e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(E, B), movie(E, F), actor(F) )
%   | | | then if ( workedunder(F, G), genre(G, H), genre(B, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(F, I), movie(J, A) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.1436848751463791;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333673;  // std dev = 1,04e-07, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15492747972772142;  // std dev = 1,07e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A), movie(D, E), genre(E, F) )
%   | | then if ( workedunder(G, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( genre(B, F), movie(D, H), workedunder(H, I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(A, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12689445326021687;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12689445326021687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420264;  // std dev = 7,67e-08, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( workedunder(A, C), genre(C, D), genre(B, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13570945025432024;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(F, A), movie(F, G), genre(G, H) )
%   | | | then if ( workedunder(A, I), movie(J, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(K, B), genre(B, H) )
%   | | | | | then if ( movie(K, L), workedunder(L, M), movie(N, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.11348823327008326;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | else return -0.11348823327008326;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11348823327008326;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202626;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095983
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.644 seconds
Total inference time: 0.653 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095983
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.653 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true': 'movie(G, A), movie(G, H), director(H)', 'true,false,false,true,true': 'workedunder(I, H)', 'true,false': 'movie(D, A), movie(D, B)', 'true,false,false': 'movie(E, B), movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 0], 'true,false,false,true,true,false': [0.0, 7, 0], 'true,false,false,true,false': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,true,true': [0.0, 0, 0], 'false': [0.0, 197, 0], 'true,false,true': [1.08e-06, 0, 204]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true,false': 'workedunder(F, J)', 'true,false,false,true': 'workedunder(F, G), movie(H, A), movie(I, G)', 'true,false': 'movie(D, A), movie(D, B)', 'true,false,false': 'movie(E, B), movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 204], 'true,false,false,true,false,false': [0.0, 7, 0], 'false': [0.0, 197, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false': 'movie(D, A), movie(D, E), workedunder(E, F)', 'true,false,false': 'movie(G, A), movie(H, B)'}, {'true,true': [0.0, 0, 0], 'false': [0.0, 197, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.737, 7, 204]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true,false': 'workedunder(F, I), movie(J, A)', 'true,false,false,true': 'workedunder(F, G), movie(H, F), movie(H, G)', 'true,false': 'movie(D, B), movie(D, A)', 'true,false,false': 'movie(E, B), movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [5.2e-07, 0, 204], 'true,false,false,true,false,false': [5.27e-09, 7, 0], 'false': [0.0, 197, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), movie(D, C), movie(D, A)', 'true,false,false,true,false': 'movie(F, J), workedunder(J, K)', 'true,false,false,true': 'workedunder(A, H), movie(F, I), actor(I)', 'true,false,false,true,false,false': 'workedunder(A, L)', 'true,false': 'movie(E, A), movie(E, B)', 'true,false,false': 'movie(F, B), movie(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [1.98e-07, 0, 204], 'true,false,false,true,false,false,false': [0.0, 7, 0], 'true,false,false,true,false,false,true': [0.0, 0, 0], 'false': [8.69e-08, 197, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [1.019, 7, 204], 'false': [7.3e-08, 197, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A), workedunder(A, F)', 'true,false,false': 'movie(G, A)'}, {'true,true': [0.0, 0, 204], 'false': [8.02e-08, 197, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [7.45e-09, 7, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C)', 'true,false,false,true,false': 'workedunder(F, I), movie(J, A)', 'true,false,false,true': 'workedunder(F, G), genre(G, H), genre(B, H)', 'true,false': 'movie(D, A), movie(D, B)', 'true,false,false': 'movie(E, B), movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [1.6e-07, 0, 204], 'true,false,false,true,false,false': [0.0, 7, 0], 'false': [1.04e-07, 197, 0], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,false': 'workedunder(A, J)', 'true,false': 'movie(D, A), movie(D, E), genre(E, F)', 'true,false,true,false': 'genre(B, F), movie(D, H), workedunder(H, I)', 'true,false,true': 'workedunder(G, E)'}, {'true,true': [1.07e-07, 0, 204], 'true,false,true,false,false,false': [3.73e-09, 6, 0], 'false': [7.67e-08, 197, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'workedunder(A, C), genre(C, D), genre(B, D)', 'true,false,false,true,false': 'movie(K, B), genre(B, H)', 'true,false,false,true': 'workedunder(A, I), movie(J, B)', 'true,false': 'movie(E, A), movie(E, B)', 'true,false,false,true,false,true': 'movie(K, L), workedunder(L, M), movie(N, M)', 'true,false,false': 'movie(F, A), movie(F, G), genre(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'true,false,false,true,false,false': [0.0, 1, 0], 'true,false,false,true,false,true,false': [0.0, 5, 0], 'true,false,false,true,false,true,true': [0.0, 0, 0], 'false': [0.0, 197, 0], 'true,false,true': [0.0, 0, 204], 'true,false,false,true,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;false;false', '1;;workedunder(A, B) :- actor(A), director(B).;false;false', '2;;workedunder(A, B) :- actor(A), director(B).;false;false', '3;;workedunder(A, B) :- actor(A), director(B).;false;false', '4;;workedunder(A, B) :- actor(A), director(B).;false;false', '5;;workedunder(A, B) :- actor(A), director(B).;false;false', '6;;workedunder(A, B) :- actor(A), director(B).;true;false', '6;true;movie(C, A), movie(C, B).;false;true', '6;true,false;movie(D, B), movie(E, A), workedunder(A, F).;false;false', '7;;workedunder(A, B) :- actor(A), director(B).;false;false', '8;;workedunder(A, B) :- actor(A), director(B).;true;false', '8;true;movie(C, A), movie(C, B).;false;true', '8;true,false;movie(D, A), movie(D, E), genre(E, F).;true;false', '8;true,false,true,false;genre(B, F), movie(D, H), workedunder(H, I).;false;false', '8;true,false,true;workedunder(G, E).;false;true', '9;;workedunder(A, B) :- actor(A), director(B).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false', 0), ('true,false,false,true,true,true', 0)]
Tree #2: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,true', 0)]
Tree #3: [('true,true', 0), ('true,false,false,false', 0), ('true,false,true', 0), ('true,false,false,true', 0.966824644549763)]
Tree #4: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,true', 0)]
Tree #5: [('true,true', 0), ('true,false,false,true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,false,false,true', 0)]
Tree #6: [('true,false', 0), ('true,true', 0.966824644549763)]
Tree #7: [('true,false,false,false', 0), ('true,false,true', 0)]
Tree #8: [('true,true', 0), ('true,false,false,false', 0), ('true,false,false,true,false,true', 0), ('true,false,false,true,true', 0)]
Tree #9: [('true,false,true,false,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,true', 0)]
Tree #10: [('true,true', 0), ('true,false,false,true,true', 0), ('true,false,false,true,false,true,true', 0)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.8249735796492721;  // std dev = 2,601, 211,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=204 */
%   else return -0.14185106490048824;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.6929448800475463;  // std dev = 2,601, 211,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=204 */
%   else return -0.12544463852839152;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5368811117774083;  // std dev = 2,601, 211,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=204 */
%   else return -0.1123163781936065;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.40346716023843887;  // std dev = 2,601, 211,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=204 */
%   else return -0.1015963294878365;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.30795371818638567;  // std dev = 2,601, 211,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=204 */
%   else return -0.09269127618926062;  // std dev = 8,69e-08, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2424591318968117;  // std dev = 2,601, 211,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=204 */
%   else return -0.08518475138839678;  // std dev = 7,30e-08, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22993476712208377;  // std dev = 2,73e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, B), movie(E, A), workedunder(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.7700652328779157;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0787767547310915;  // std dev = 8,02e-08, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.16523005527865167;  // std dev = 2,080, 211,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=204 */
%   else return -0.07324622576333673;  // std dev = 1,04e-07, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16744499197112278;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A), movie(D, E), genre(E, F) )
%   | | then if ( workedunder(G, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( genre(B, F), movie(D, H), workedunder(H, I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.6465353520052902;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.6465353520052902;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420264;  // std dev = 7,67e-08, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.12432529227386292;  // std dev = 1,651, 211,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=204 */
%   else return -0.06419184008202626;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109558
   Precision = 0.97561 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.987654


Total learning time: 3.535 seconds
Total inference time: 0.539 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 8.371
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100177
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.953 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 3, Type: transfer, Total folds for small set: 4, Time: 00:29:47
{'CLL': -0.100177, 'Recall': 1.0, 'Learning time': 8.371, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 60000, 'Total time': 27.81438899040222, 'Generating mappings time': 2.580726146697998, 'Finding best mapping': 22.596383333206177, 'Generating paths time': 2.617222309112549, 'Knowledge compiling time': 0.020048141479492188}, 'Parameter Learning Results': {'CLL': -0.100177, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.953}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.14185106490048838;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.1254446385283916;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,36e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.11231637819360657;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.41751358415831014;  // std dev = 2,53e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.10159632948783652;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.3207118471601491;  // std dev = 4,00e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.09269127618926057;  // std dev = 9,19e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.25517224256948845;  // std dev = 4,46e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.08518475138839678;  // std dev = 7,60e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.20975771563253498;  // std dev = 3,04e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.07877675473109148;  // std dev = 7,30e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.17709649774527791;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.07324622576333667;  // std dev = 1,18e-07, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.15274385809367166;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.06842697784420262;  // std dev = 8,16e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.13400703000801098;  // std dev = 1,38e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.06419184008202626;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
Results
   AUC ROC   = 0.985955
   AUC PR    = 0.972678
   CLL	      = -0.123634
   Precision = 0.972678 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.98615


Total learning time: 3.028 seconds
Total inference time: 0.639 seconds
AUC ROC: 0.985955


Dataset: uwcse,imdb, Run: 1, Fold: 3, Type: scratch, Total folds for small set: 4, Time: 00:29:51
{'CLL': -0.123634, 'Recall': 1.0, 'Learning time': 3.028, 'Precision': [0.972678, 0.5], 'AUC ROC': 0.985955, 'F1': 0.98615, 'AUC PR': 0.972678, 'Inference time': 0.639}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then return 0.834339411289988;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( publication(E, A), publication(F, B) )
%   | | then if ( tempadvisedby(G, B), hasposition(H, C), publication(E, H) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else if ( tempadvisedby(I, B) )
%   | | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(F, J), tempadvisedby(K, J) )
%   | | | | | then return 0.6081489350995123;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then if ( projectmember(M, B) )
%   | | | | then return 0.5854216623722396;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | | else return 0.8236661764788221;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return 0.858148935099512;  // std dev = 1,03e-07, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.13195007480147777;  // std dev = 0,099, 101,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=1 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then return 0.7004441928528997;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( publication(E, A), publication(F, B) )
%   | | then if ( tempadvisedby(G, B), hasposition(H, C), publication(E, H) )
%   | | | then return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else if ( tempadvisedby(I, B) )
%   | | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(F, J), tempadvisedby(K, J) )
%   | | | | | then return 0.5170719622367218;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | | | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then if ( projectmember(M, B) )
%   | | | | then return 0.498380757744019;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | | else return 0.691897402794752;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return 0.7194734122109544;  // std dev = 4,21e-08, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.11663390330515598;  // std dev = 0,099, 101,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=1 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.542108638524146;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(E, B), publication(E, F), tempadvisedby(F, G) )
%   | | | then return 0.15740260446689028;  // std dev = 1,070, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else if ( publication(H, B), publication(D, I), professor(I) )
%   | | | | then if ( tempadvisedby(J, B) )
%   | | | | | then return 0.0943462976046685;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | else return 0.44911956703255285;  // std dev = 0,739, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else if ( tempadvisedby(K, B) )
%   | | | | | then if ( projectmember(L, B) )
%   | | | | | | then return 0.4217691493310408;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | else return 0.5591832111415846;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.33070911525226765;  // std dev = 0,983, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.5198270090449358;  // std dev = 0,229, 59,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=55 */
%   else return -0.11419554062694283;  // std dev = 4,71e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then if ( publication(D, B) )
%   | | then return 0.21560215858684253;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.3230799387307728;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2989354919201759;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( hasposition(B, F) )
%   | | then if ( publication(G, A), publication(H, B) )
%   | | | then if ( publication(G, B) )
%   | | | | then return 0.40740632446069325;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | | else if ( tempadvisedby(I, B), hasposition(J, F), publication(G, J) )
%   | | | | | then return 0.02973652390547532;  // std dev = 0,896, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else return 0.3016428279075583;  // std dev = 0,405, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.4172348361604282;  // std dev = 0,136, 53,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | else return 0.16383454833570585;  // std dev = 0,806, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.10314304953141736;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then if ( publication(D, B) )
%   | | then return 0.16185891790915666;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.24283761292106565;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.22438122398723545;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( hasposition(B, F) )
%   | | then if ( publication(G, A), publication(H, B) )
%   | | | then if ( publication(G, B) )
%   | | | | then return 0.3114930594037888;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | | else if ( tempadvisedby(I, B), hasposition(J, F), publication(G, J) )
%   | | | | | then return 0.025494645997127013;  // std dev = 0,897, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else return 0.23147966667219752;  // std dev = 0,404, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.3187219923048478;  // std dev = 0,136, 53,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | else return 0.13953787459337252;  // std dev = 0,805, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.09398483811491487;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then if ( publication(D, B) )
%   | | then return 0.12151735754374852;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.18254155456419152;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16898385809969416;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(F, A), publication(F, G), tempadvisedby(G, H) )
%   | | then return 0.351714792369236;  // std dev = 0,366, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(I, A) )
%   | | | then if ( publication(I, B) )
%   | | | | then return 0.24345385246317922;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | | else if ( publication(J, B), publication(J, K), tempadvisedby(K, L) )
%   | | | | | then return -0.12851562250549328;  // std dev = 0,756, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | | else return 0.17198999451838823;  // std dev = 0,349, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.25016326925461335;  // std dev = 0,168, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   else return -0.08628149401930778;  // std dev = 3,65e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then if ( publication(D, B) )
%   | | then return 0.0915867601212526;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.1384028652708751;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12849760878886807;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( hasposition(B, F) )
%   | | then if ( publication(G, A), publication(H, B) )
%   | | | then if ( publication(G, B) )
%   | | | | then return 0.1990160142881733;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | | else if ( tempadvisedby(I, B), hasposition(J, F), publication(G, J) )
%   | | | | | then return 0.004415218501191131;  // std dev = 0,887, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | else return 0.1496297325123895;  // std dev = 0,391, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.20591707880351548;  // std dev = 0,136, 53,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | else return 0.07610633621105993;  // std dev = 0,797, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07971769460430055;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then if ( publication(D, B) )
%   | | then return 0.069374606330233;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.1060766820271899;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09877513116895362;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(F, A) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.1664598910281062;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else if ( tempadvisedby(G, B), publication(F, H), professor(H) )
%   | | | | then return 0.03637205404353807;  // std dev = 0,905, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | else if ( tempadvisedby(I, B) )
%   | | | | | then return 0.232982230832957;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.08135633942479432;  // std dev = 0,400, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else return 0.17091351800293902;  // std dev = 0,168, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   else return -0.0740618698759772;  // std dev = 1,49e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.14212796310174858;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(D, F), professor(F) )
%   | | | then if ( publication(G, B), publication(G, F) )
%   | | | | then return 0.1361418071210536;  // std dev = 0,802, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return 0.014808786558910865;  // std dev = 0,359, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else if ( tempadvisedby(H, B) )
%   | | | | then return 0.19395240294012006;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( publication(I, B), publication(D, J), tempadvisedby(K, J) )
%   | | | | | then return 0.17881961649121297;  // std dev = 0,787, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else if ( publication(L, B), publication(L, M), tempadvisedby(M, N) )
%   | | | | | | then return -0.13408605120175462;  // std dev = 0,752, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.08179923319743128;  // std dev = 0,356, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.13622973445822562;  // std dev = 0,223, 59,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=55 */
%   else return -0.06914044991764301;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( projectmember(D, B) )
%   | then if ( publication(E, A) )
%   | | then return 0.07886587562495617;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.021056355630802808;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0474579309884714;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(G, B), publication(G, H), tempadvisedby(H, B) )
%   | | then if ( publication(I, A) )
%   | | | then return 0.13856676190397224;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09999617010389439;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(J, A), publication(K, B) )
%   | | | then if ( publication(J, B) )
%   | | | | then return 0.12178263290931558;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | | else return 0.051693665525096806;  // std dev = 0,388, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.14942309074414087;  // std dev = 0,090, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return -0.06270418320239642;  // std dev = 0,079, 101,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=1 */


Predicates from source: ['advisedby(person,person).', 'tempadvisedby(person,person).', 'hasposition(person,faculty).', 'student(person).', 'projectmember(project,person).', 'professor(person).', 'publication(title,person).'] 

Source structured tree: [['advisedby(A, B)', {'': 'hasposition(B, C), student(A)', 'true': 'publication(D, A), publication(D, B)', 'true,false,true,false,false': 'publication(F, J), tempadvisedby(K, J)', 'true,false,false,true': 'projectmember(M, B)', 'true,false': 'publication(E, A), publication(F, B)', 'true,false,true,false': 'tempadvisedby(I, B)', 'true,false,true': 'tempadvisedby(G, B), hasposition(H, C), publication(E, H)', 'true,false,false': 'tempadvisedby(L, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,false,false': [0.816, 2, 1], 'true,false,false,false': [1.03e-07, 0, 24], 'true,false,false,true,false': [0.182, 1, 28], 'false': [0.099, 100, 1], 'true,false,true,false,false,true': [0.433, 2, 6], 'true,false,true,true': [0.894, 4, 1], 'true,false,true,false,true': [2.11e-08, 0, 3], 'true,false,false,true,true': [0.445, 3, 8]}], ['advisedby(A, B)', {'': 'hasposition(B, C), student(A)', 'true': 'publication(D, A), publication(D, B)', 'true,false,true,false,false': 'publication(F, J), tempadvisedby(K, J)', 'true,false,false,true': 'projectmember(M, B)', 'true,false': 'publication(E, A), publication(F, B)', 'true,false,true,false': 'tempadvisedby(I, B)', 'true,false,true': 'tempadvisedby(G, B), hasposition(H, C), publication(E, H)', 'true,false,false': 'tempadvisedby(L, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,false,false': [0.816, 2, 1], 'true,false,false,false': [4.21e-08, 0, 24], 'true,false,false,true,false': [0.182, 1, 28], 'false': [0.099, 100, 1], 'true,false,true,false,false,true': [0.433, 2, 6], 'true,false,true,true': [0.894, 4, 1], 'true,false,true,false,true': [0.0, 0, 3], 'true,false,false,true,true': [0.445, 3, 8]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)', 'true,false,true,false,true': 'tempadvisedby(J, B)', 'true,false,true,false,false': 'tempadvisedby(K, B)', 'true,false': 'publication(D, A)', 'true,false,true,false,false,true': 'projectmember(L, B)', 'true,false,true,false': 'publication(H, B), publication(D, I), professor(I)', 'true,false,true': 'publication(E, B), publication(E, F), tempadvisedby(F, G)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,false,false': [0.983, 2, 4], 'true,false,true,false,false,true,false': [0.013, 0, 4], 'true,false,true,false,true,false': [0.739, 1, 3], 'true,false,true,false,false,true,true': [0.866, 1, 3], 'true,false,true,false,true,true': [0.866, 3, 1], 'false': [4.71e-08, 98, 0], 'true,false,true,true': [1.07, 3, 2], 'true,false,false': [0.229, 4, 55]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'projectmember(C, B)', 'true,false,true': 'publication(G, A), publication(H, B)', 'true,true': 'publication(D, B)', 'true,false,true,true': 'publication(G, B)', 'true,false': 'hasposition(B, F)', 'true,true,false': 'publication(E, A)', 'true,false,true,true,false': 'tempadvisedby(I, B), hasposition(J, F), publication(G, J)'}, {'true,false,true,true,false,false': [0.405, 4, 10], 'true,true,false,false': [0.866, 1, 3], 'true,false,true,true,true': [0.152, 1, 41], 'true,false,true,false': [0.136, 1, 52], 'false': [0.0, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,true,false,true': [0.866, 1, 3], 'true,false,true,true,false,true': [0.896, 4, 1], 'true,false,false': [0.806, 2, 1]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'projectmember(C, B)', 'true,false,true': 'publication(G, A), publication(H, B)', 'true,true': 'publication(D, B)', 'true,false,true,true': 'publication(G, B)', 'true,false': 'hasposition(B, F)', 'true,true,false': 'publication(E, A)', 'true,false,true,true,false': 'tempadvisedby(I, B), hasposition(J, F), publication(G, J)'}, {'true,false,true,true,false,false': [0.404, 4, 10], 'true,true,false,false': [0.866, 1, 3], 'true,false,true,true,true': [0.152, 1, 41], 'true,false,true,false': [0.136, 1, 52], 'false': [0.0, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,true,false,true': [0.866, 1, 3], 'true,false,true,true,false,true': [0.897, 4, 1], 'true,false,false': [0.805, 2, 1]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'projectmember(C, B)', 'true,false,false,true': 'publication(I, B)', 'true,true': 'publication(D, B)', 'true,false,false,true,false': 'publication(J, B), publication(J, K), tempadvisedby(K, L)', 'true,false': 'publication(F, A), publication(F, G), tempadvisedby(G, H)', 'true,true,false': 'publication(E, A)', 'true,false,false': 'publication(I, A)'}, {'true,true,false,false': [0.866, 1, 3], 'true,false,false,false': [0.168, 2, 50], 'true,false,false,true,false,true': [0.756, 3, 1], 'true,false,false,true,false,false': [0.349, 6, 12], 'false': [3.65e-08, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,true,false,true': [0.866, 1, 3], 'true,false,true': [0.366, 0, 5], 'true,false,false,true,true': [0.16, 1, 37]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'projectmember(C, B)', 'true,false,true': 'publication(G, A), publication(H, B)', 'true,true': 'publication(D, B)', 'true,false,true,true': 'publication(G, B)', 'true,false': 'hasposition(B, F)', 'true,true,false': 'publication(E, A)', 'true,false,true,true,false': 'tempadvisedby(I, B), hasposition(J, F), publication(G, J)'}, {'true,false,true,true,false,false': [0.391, 4, 10], 'true,true,false,false': [0.866, 1, 3], 'true,false,true,true,true': [0.152, 1, 41], 'true,false,true,false': [0.136, 1, 52], 'false': [0.0, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,true,false,true': [0.866, 1, 3], 'true,false,true,true,false,true': [0.887, 4, 1], 'true,false,false': [0.797, 2, 1]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'projectmember(C, B)', 'true,false,true,false,false': 'tempadvisedby(I, B)', 'true,false,true': 'publication(F, B)', 'true,true': 'publication(D, B)', 'true,false,true,false': 'tempadvisedby(G, B), publication(F, H), professor(H)', 'true,false': 'publication(F, A)', 'true,true,false': 'publication(E, A)'}, {'true,true,false,false': [0.866, 1, 3], 'false': [1.49e-08, 98, 0], 'true,false,true,false,false,false': [0.4, 5, 9], 'true,true,false,true': [0.866, 1, 3], 'true,false,true,false,false,true': [0.0, 0, 3], 'true,true,true': [0.816, 1, 2], 'true,false,true,true': [0.152, 1, 41], 'true,false,true,false,true': [0.905, 4, 2], 'true,false,false': [0.168, 2, 50]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)', 'true,false,true,false,false,false': 'publication(L, B), publication(L, M), tempadvisedby(M, N)', 'true,false,true,false,false': 'publication(I, B), publication(D, J), tempadvisedby(K, J)', 'true,false,true,false': 'tempadvisedby(H, B)', 'true,false': 'publication(D, A)', 'true,false,true,true': 'publication(G, B), publication(G, F)', 'true,false,true': 'tempadvisedby(E, B), publication(D, F), professor(F)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [0.0, 0, 3], 'true,false,true,true,true': [0.802, 2, 1], 'false': [0.0, 98, 0], 'true,false,true,false,false,false,true': [0.752, 2, 1], 'true,false,true,false,false,true': [0.787, 1, 3], 'true,false,false': [0.223, 4, 55], 'true,false,true,false,false,false,false': [0.356, 2, 5], 'true,false,true,true,false': [0.359, 3, 4]}], ['advisedby(A, B)', {'': 'hasposition(B, C), student(A)', 'true': 'projectmember(D, B)', 'true,false,false,true': 'publication(J, B)', 'true,false,true': 'publication(I, A)', 'true,true': 'publication(E, A)', 'true,false': 'publication(G, B), publication(G, H), tempadvisedby(H, B)', 'true,true,false': 'publication(F, B)', 'true,false,false': 'publication(J, A), publication(K, B)'}, {'true,true,false,false': [0.866, 1, 3], 'true,false,false,false': [0.09, 0, 49], 'true,false,false,true,false': [0.388, 8, 11], 'true,true,false,true': [0.816, 1, 2], 'false': [0.079, 100, 1], 'true,true,true': [0.866, 1, 3], 'true,false,true,true': [0.011, 0, 4], 'true,false,true,false': [0.866, 1, 3], 'true,false,false,true,true': [0.16, 1, 37]}]] 



Best mapping found: ['professor(A) -> director(A)', 'tempadvisedby(A,B) -> workedunder(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false,true,false,false': 'movie(F, J), workedunder(K, J)', 'true,false,false,true': 'movie(M, B)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'workedunder(G, B), genre(H, C), movie(E, H)', 'true,false,false': 'workedunder(L, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,false,false': [0.816, 2, 1], 'true,false,false,false': [1.03e-07, 0, 24], 'true,false,false,true,false': [0.182, 1, 28], 'true,false,true,false,true': [2.11e-08, 0, 3], 'false': [0.099, 100, 1], 'true,false,true,true': [0.894, 4, 1], 'true,false,true,false,false,true': [0.433, 2, 6], 'true,false,false,true,true': [0.445, 3, 8]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false,true,false,false': 'movie(F, J), workedunder(K, J)', 'true,false,false,true': 'movie(M, B)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'workedunder(G, B), genre(H, C), movie(E, H)', 'true,false,false': 'workedunder(L, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,false,false': [0.816, 2, 1], 'true,false,false,false': [4.21e-08, 0, 24], 'true,false,false,true,false': [0.182, 1, 28], 'true,false,true,false,true': [0.0, 0, 3], 'false': [0.099, 100, 1], 'true,false,true,true': [0.894, 4, 1], 'true,false,true,false,false,true': [0.433, 2, 6], 'true,false,false,true,true': [0.445, 3, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,true': 'workedunder(J, B)', 'true,false,true,false,false': 'workedunder(K, B)', 'true,false': 'movie(D, A)', 'true,false,true,false,false,true': 'movie(L, B)', 'true,false,true,false': 'movie(H, B), movie(D, I), director(I)', 'true,false,true': 'movie(E, B), movie(E, F), workedunder(F, G)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,false,false': [0.983, 2, 4], 'true,false,true,false,false,true,false': [0.013, 0, 4], 'true,false,true,false,true,false': [0.739, 1, 3], 'true,false,true,false,false,true,true': [0.866, 1, 3], 'true,false,true,false,true,true': [0.866, 3, 1], 'false': [4.71e-08, 98, 0], 'true,false,true,true': [1.07, 3, 2], 'true,false,false': [0.229, 4, 55]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,false,true': 'movie(G, A), movie(H, B)', 'true,true': 'movie(D, B)', 'true,false,true,true': 'movie(G, B)', 'true,false': 'genre(B, F)', 'true,true,false': 'movie(E, A)', 'true,false,true,true,false': 'workedunder(I, B), genre(J, F), movie(G, J)'}, {'true,false,true,true,false,false': [0.405, 4, 10], 'true,true,false,false': [0.866, 1, 3], 'true,false,true,true,true': [0.152, 1, 41], 'true,true,false,true': [0.866, 1, 3], 'false': [0.0, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,false,true,false': [0.136, 1, 52], 'true,false,true,true,false,true': [0.896, 4, 1], 'true,false,false': [0.806, 2, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,false,true': 'movie(G, A), movie(H, B)', 'true,true': 'movie(D, B)', 'true,false,true,true': 'movie(G, B)', 'true,false': 'genre(B, F)', 'true,true,false': 'movie(E, A)', 'true,false,true,true,false': 'workedunder(I, B), genre(J, F), movie(G, J)'}, {'true,false,true,true,false,false': [0.404, 4, 10], 'true,true,false,false': [0.866, 1, 3], 'true,false,true,true,true': [0.152, 1, 41], 'true,true,false,true': [0.866, 1, 3], 'false': [0.0, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,false,true,false': [0.136, 1, 52], 'true,false,true,true,false,true': [0.897, 4, 1], 'true,false,false': [0.805, 2, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,false,false,true': 'movie(I, B)', 'true,false,false,true,false': 'movie(J, B), movie(J, K), workedunder(K, L)', 'true,true': 'movie(D, B)', 'true,false': 'movie(F, A), movie(F, G), workedunder(G, H)', 'true,true,false': 'movie(E, A)', 'true,false,false': 'movie(I, A)'}, {'true,true,false,false': [0.866, 1, 3], 'true,false,false,false': [0.168, 2, 50], 'true,false,true': [0.366, 0, 5], 'true,false,false,true,false,false': [0.349, 6, 12], 'false': [3.65e-08, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,true,false,true': [0.866, 1, 3], 'true,false,false,true,false,true': [0.756, 3, 1], 'true,false,false,true,true': [0.16, 1, 37]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,false,true': 'movie(G, A), movie(H, B)', 'true,true': 'movie(D, B)', 'true,false,true,true': 'movie(G, B)', 'true,false': 'genre(B, F)', 'true,true,false': 'movie(E, A)', 'true,false,true,true,false': 'workedunder(I, B), genre(J, F), movie(G, J)'}, {'true,false,true,true,false,false': [0.391, 4, 10], 'true,true,false,false': [0.866, 1, 3], 'true,false,true,true,true': [0.152, 1, 41], 'true,true,false,true': [0.866, 1, 3], 'false': [0.0, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,false,true,false': [0.136, 1, 52], 'true,false,true,true,false,true': [0.887, 4, 1], 'true,false,false': [0.797, 2, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,false,true,false,false': 'workedunder(I, B)', 'true,false,true': 'movie(F, B)', 'true,true': 'movie(D, B)', 'true,false,true,false': 'workedunder(G, B), movie(F, H), director(H)', 'true,false': 'movie(F, A)', 'true,true,false': 'movie(E, A)'}, {'true,false,true,false,true': [0.905, 4, 2], 'true,false,true,false,false,false': [0.4, 5, 9], 'false': [1.49e-08, 98, 0], 'true,false,true,true': [0.152, 1, 41], 'true,false,true,false,false,true': [0.0, 0, 3], 'true,true,true': [0.816, 1, 2], 'true,true,false,true': [0.866, 1, 3], 'true,true,false,false': [0.866, 1, 3], 'true,false,false': [0.168, 2, 50]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,false,false': 'movie(L, B), movie(L, M), workedunder(M, N)', 'true,false,true,false,false': 'movie(I, B), movie(D, J), workedunder(K, J)', 'true,false,true': 'workedunder(E, B), movie(D, F), director(F)', 'true,false': 'movie(D, A)', 'true,false,true,true': 'movie(G, B), movie(G, F)', 'true,false,true,false': 'workedunder(H, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [0.0, 0, 3], 'true,false,true,true,true': [0.802, 2, 1], 'true,false,true,true,false': [0.359, 3, 4], 'true,false,true,false,false,false,true': [0.752, 2, 1], 'false': [0.0, 98, 0], 'true,false,true,false,false,false,false': [0.356, 2, 5], 'true,false,true,false,false,true': [0.787, 1, 3], 'true,false,false': [0.223, 4, 55]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,false,false,true': 'movie(J, B)', 'true,false,true': 'movie(I, A)', 'true,true': 'movie(E, A)', 'true,false': 'movie(G, B), movie(G, H), workedunder(H, B)', 'true,true,false': 'movie(F, B)', 'true,false,false': 'movie(J, A), movie(K, B)'}, {'true,true,false,false': [0.866, 1, 3], 'true,false,false,false': [0.09, 0, 49], 'true,false,false,true,false': [0.388, 8, 11], 'true,false,true,true': [0.011, 0, 4], 'false': [0.079, 100, 1], 'true,true,true': [0.866, 1, 3], 'true,true,false,true': [0.816, 1, 2], 'true,false,true,false': [0.866, 1, 3], 'true,false,false,true,true': [0.16, 1, 37]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '0;true;movie(D, A), movie(D, B).;false;true', '0;true,false,true,false,false;movie(F, J), workedunder(K, J).;false;false', '0;true,false,false,true;movie(M, B).;false;false', '0;true,false;movie(E, A), movie(F, B).;true;true', '0;true,false,true,false;workedunder(I, B).;false;true', '0;true,false,true;workedunder(G, B), genre(H, C), movie(E, H).;false;true', '0;true,false,false;workedunder(L, B).;true;false', '1;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '1;true;movie(D, A), movie(D, B).;false;true', '1;true,false,true,false,false;movie(F, J), workedunder(K, J).;false;false', '1;true,false,false,true;movie(M, B).;false;false', '1;true,false;movie(E, A), movie(F, B).;true;true', '1;true,false,true,false;workedunder(I, B).;false;true', '1;true,false,true;workedunder(G, B), genre(H, C), movie(E, H).;false;true', '1;true,false,false;workedunder(L, B).;true;false', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, A), movie(C, B).;false;true', '2;true,false,true,false,true;workedunder(J, B).;false;false', '2;true,false,true,false,false;workedunder(K, B).;true;false', '2;true,false;movie(D, A).;true;false', '2;true,false,true,false,false,true;movie(L, B).;false;false', '2;true,false,true,false;movie(H, B), movie(D, I), director(I).;true;true', '2;true,false,true;movie(E, B), movie(E, F), workedunder(F, G).;false;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B).;true;true', '3;true,false,true;movie(G, A), movie(H, B).;true;false', '3;true,true;movie(D, B).;false;true', '3;true,false,true,true;movie(G, B).;false;true', '3;true,false;genre(B, F).;true;false', '3;true,true,false;movie(E, A).;false;false', '3;true,false,true,true,false;workedunder(I, B), genre(J, F), movie(G, J).;false;false', '4;;workedunder(A, B) :- director(B), actor(A).;true;false', '4;true;movie(C, B).;true;true', '4;true,false,true;movie(G, A), movie(H, B).;true;false', '4;true,true;movie(D, B).;false;true', '4;true,false,true,true;movie(G, B).;false;true', '4;true,false;genre(B, F).;true;false', '4;true,true,false;movie(E, A).;false;false', '4;true,false,true,true,false;workedunder(I, B), genre(J, F), movie(G, J).;false;false', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B).;true;true', '5;true,false,false,true;movie(I, B).;false;true', '5;true,false,false,true,false;movie(J, B), movie(J, K), workedunder(K, L).;false;false', '5;true,true;movie(D, B).;false;true', '5;true,false;movie(F, A), movie(F, G), workedunder(G, H).;false;true', '5;true,true,false;movie(E, A).;false;false', '5;true,false,false;movie(I, A).;true;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B).;true;true', '6;true,false,true;movie(G, A), movie(H, B).;true;false', '6;true,true;movie(D, B).;false;true', '6;true,false,true,true;movie(G, B).;false;true', '6;true,false;genre(B, F).;true;false', '6;true,true,false;movie(E, A).;false;false', '6;true,false,true,true,false;workedunder(I, B), genre(J, F), movie(G, J).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B).;true;true', '7;true,false,true,false,false;workedunder(I, B).;false;false', '7;true,false,true;movie(F, B).;false;true', '7;true,true;movie(D, B).;false;true', '7;true,false,true,false;workedunder(G, B), movie(F, H), director(H).;false;true', '7;true,false;movie(F, A).;true;false', '7;true,true,false;movie(E, A).;false;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, A), movie(C, B).;false;true', '8;true,false,true,false,false,false;movie(L, B), movie(L, M), workedunder(M, N).;false;false', '8;true,false,true,false,false;movie(I, B), movie(D, J), workedunder(K, J).;false;true', '8;true,false,true;workedunder(E, B), movie(D, F), director(F).;true;true', '8;true,false;movie(D, A).;true;false', '8;true,false,true,true;movie(G, B), movie(G, F).;false;false', '8;true,false,true,false;workedunder(H, B).;false;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '9;true;movie(D, B).;true;true', '9;true,false,false,true;movie(J, B).;false;false', '9;true,false,true;movie(I, A).;false;false', '9;true,true;movie(E, A).;false;true', '9;true,false;movie(G, B), movie(G, H), workedunder(H, B).;true;true', '9;true,true,false;movie(F, B).;false;false', '9;true,false,false;movie(J, A), movie(K, B).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( workedunder(G, B), genre(H, C), movie(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(I, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, J), workedunder(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.05045662740720468;  // std dev = 2,842, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( workedunder(G, B), genre(H, C), movie(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(I, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, J), workedunder(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.04420289095842993;  // std dev = 2,842, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.6200029943851075;  // std dev = 0,811, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B), movie(E, F), workedunder(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(H, B), movie(D, I), director(I) )
%   | | | | then if ( workedunder(J, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12889744846776793;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.15376905387901021;  // std dev = 3,49e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, B) )
%   | | then return 0.41930371256711246;  // std dev = 1,587, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.13480687660173243;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, B) )
%   | | then return 0.33011450717029506;  // std dev = 1,530, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11984314089075454;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, B) )
%   | | then return 0.26382673217447045;  // std dev = 1,480, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10776664106670206;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, B) )
%   | | then return 0.21457737580419245;  // std dev = 1,442, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0978340158561358;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, B) )
%   | | then return 0.17737883202861413;  // std dev = 1,417, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0895321988845791;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2035521510007061;  // std dev = 0,779, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( workedunder(E, B), movie(D, F), director(F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(G, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(H, B), movie(D, I), workedunder(J, I) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(K, B), movie(K, L), workedunder(L, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.3449159716399296;  // std dev = 0,090, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08249711443174415;  // std dev = 1,49e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.0899868859049446;  // std dev = 0,601, 38,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 5.909331726427983E-4;  // std dev = 1,348, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114412
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.878 seconds
Total inference time: 0.606 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114412
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.606 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false,true,false,false': 'movie(F, J), workedunder(K, J)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'workedunder(G, B), genre(H, C), movie(E, H)'}, {'true,true': [2.38e-07, 0, 35], 'true,false,true,false,false,false': [0.0, 3, 0], 'false': [2.842, 42, 10], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false,true,false,false': 'movie(F, J), workedunder(K, J)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'workedunder(G, B), genre(H, C), movie(E, H)'}, {'true,true': [0.0, 0, 35], 'true,false,true,false,false,false': [0.0, 3, 0], 'false': [2.842, 42, 10], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,true': 'workedunder(J, B)', 'true,false': 'movie(D, A)', 'true,false,true,false': 'movie(H, B), movie(D, I), director(I)', 'true,false,true': 'movie(E, B), movie(E, F), workedunder(F, G)'}, {'true,false,true,false,false': [0.0, 0, 0], 'true,true': [0.811, 0, 45], 'true,false,true,false,true,false': [0.045, 5, 0], 'true,false,true,false,true,true': [0.0, 0, 0], 'false': [3.49e-08, 40, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, B)'}, {'false': [0.0, 40, 0], 'true,true,true': [1.587, 5, 45], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, B)'}, {'false': [1.05e-08, 40, 0], 'true,true,true': [1.53, 5, 45], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, B)'}, {'false': [0.0, 40, 0], 'true,true,true': [1.48, 5, 45], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, B)'}, {'false': [0.0, 40, 0], 'true,true,true': [1.442, 5, 45], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, B)'}, {'false': [0.0, 40, 0], 'true,true,true': [1.417, 5, 45], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,false,false': 'movie(K, B), movie(K, L), workedunder(L, M)', 'true,false,true,false,false': 'movie(H, B), movie(D, I), workedunder(J, I)', 'true,false': 'movie(D, A)', 'true,false,true,false': 'workedunder(G, B)', 'true,false,true': 'workedunder(E, B), movie(D, F), director(F)'}, {'true,true': [0.779, 0, 45], 'true,false,true,false,true': [0.0, 0, 0], 'false': [1.49e-08, 40, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,false,false,false': [0.09, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)'}, {'true,true,true': [0.601, 3, 35], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '0;true;movie(D, A), movie(D, B).;false;true', '0;true,false;movie(E, A), movie(F, B).;true;false', '0;true,false,true;workedunder(G, B), genre(H, C), movie(E, H).;false;false', '1;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '1;true;movie(D, A), movie(D, B).;false;true', '1;true,false;movie(E, A), movie(F, B).;true;false', '1;true,false,true;workedunder(G, B), genre(H, C), movie(E, H).;false;false', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, A), movie(C, B).;false;true', '2;true,false;movie(D, A).;true;false', '2;true,false,true;movie(E, B), movie(E, F), workedunder(F, G).;false;false', '3;;workedunder(A, B) :- director(B), actor(A).;false;false', '4;;workedunder(A, B) :- director(B), actor(A).;false;false', '5;;workedunder(A, B) :- director(B), actor(A).;false;false', '6;;workedunder(A, B) :- director(B), actor(A).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;false;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, A), movie(C, B).;false;true', '8;true,false,true,false,false;movie(H, B), movie(D, I), workedunder(J, I).;false;false', '8;true,false;movie(D, A).;true;false', '8;true,false,true,false;workedunder(G, B).;false;true', '8;true,false,true;workedunder(E, B), movie(D, F), director(F).;false;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0), ('false', 0.8076923076923077)]
Tree #2: [('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0), ('false', 0.8076923076923077)]
Tree #3: [('true,false,true,false,false', 0), ('true,false,true,false,true,true', 0), ('true,false,true,true', 0), ('true,false,false', 0)]
Tree #4: [('true,false', 0), ('true,true,false', 0), ('true,true,true', 0.9)]
Tree #5: [('true,false', 0), ('true,true,false', 0), ('true,true,true', 0.9)]
Tree #6: [('true,false', 0), ('true,true,false', 0), ('true,true,true', 0.9)]
Tree #7: [('true,false', 0), ('true,true,false', 0), ('true,true,true', 0.9)]
Tree #8: [('true,false', 0), ('true,true,false', 0), ('true,true,true', 0.9)]
Tree #9: [('true,false,true,false,false,false,true', 0), ('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #10: [('true,false', 0), ('true,true,false', 0), ('true,true,true', 0.9210526315789473)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( workedunder(G, B), genre(H, C), movie(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.05045662740720468;  // std dev = 2,842, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( workedunder(G, B), genre(H, C), movie(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.04420289095842993;  // std dev = 2,842, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.6200029943851075;  // std dev = 0,811, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B), movie(E, F), workedunder(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12889744846776793;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.15376905387901021;  // std dev = 3,49e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41930371256711246;  // std dev = 1,587, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.13480687660173243;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.33011450717029506;  // std dev = 1,530, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.11984314089075454;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.26382673217447045;  // std dev = 1,480, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.10776664106670206;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.21457737580419245;  // std dev = 1,442, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.0978340158561358;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17737883202861413;  // std dev = 1,417, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.0895321988845791;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2035521510007061;  // std dev = 0,779, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( workedunder(E, B), movie(D, F), director(F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(G, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(H, B), movie(D, I), workedunder(J, I) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.3449159716399296;  // std dev = 0,090, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08249711443174415;  // std dev = 1,49e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.0899868859049446;  // std dev = 0,601, 38,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   else return 5.909331726427983E-4;  // std dev = 1,348, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114412
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.91 seconds
Total inference time: 0.417 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 6.811
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097754
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.528 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 4, Type: transfer, Total folds for small set: 1, Time: 00:30:23
{'CLL': -0.097754, 'Recall': 1.0, 'Learning time': 6.811, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 12000, 'Total time': 6.636791229248047, 'Generating mappings time': 0.5107326507568359, 'Finding best mapping': 3.323880910873413, 'Generating paths time': 2.7882535457611084, 'Knowledge compiling time': 0.013916015625}, 'Parameter Learning Results': {'CLL': -0.097754, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.528}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.1418510649004877;  // std dev = 4,34e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.1254446385283913;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.11231637819360639;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.10159632948783634;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.09269127618926105;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.06419184008202623;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.789 seconds
Total inference time: 0.481 seconds
AUC ROC: 1.0


Dataset: uwcse,imdb, Run: 1, Fold: 4, Type: scratch, Total folds for small set: 1, Time: 00:30:26
{'CLL': -0.094637, 'Recall': 1.0, 'Learning time': 1.789, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.481}


Best mapping found: ['professor(A) -> director(A)', 'tempadvisedby(A,B) -> workedunder(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false,true,false,false': 'movie(F, J), workedunder(K, J)', 'true,false,false,true': 'genre(B, M)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'workedunder(G, B), genre(H, C), movie(E, H)', 'true,false,false': 'workedunder(L, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,false,false': [0.816, 2, 1], 'true,false,false,false': [1.03e-07, 0, 24], 'true,false,false,true,false': [0.182, 1, 28], 'true,false,true,false,true': [2.11e-08, 0, 3], 'false': [0.099, 100, 1], 'true,false,true,true': [0.894, 4, 1], 'true,false,true,false,false,true': [0.433, 2, 6], 'true,false,false,true,true': [0.445, 3, 8]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false,true,false,false': 'movie(F, J), workedunder(K, J)', 'true,false,false,true': 'genre(B, M)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'workedunder(G, B), genre(H, C), movie(E, H)', 'true,false,false': 'workedunder(L, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,false,false': [0.816, 2, 1], 'true,false,false,false': [4.21e-08, 0, 24], 'true,false,false,true,false': [0.182, 1, 28], 'true,false,true,false,true': [0.0, 0, 3], 'false': [0.099, 100, 1], 'true,false,true,true': [0.894, 4, 1], 'true,false,true,false,false,true': [0.433, 2, 6], 'true,false,false,true,true': [0.445, 3, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,true': 'workedunder(J, B)', 'true,false,true,false,false': 'workedunder(K, B)', 'true,false': 'movie(D, A)', 'true,false,true,false,false,true': 'genre(B, L)', 'true,false,true,false': 'movie(H, B), movie(D, I), director(I)', 'true,false,true': 'movie(E, B), movie(E, F), workedunder(F, G)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,false,false': [0.983, 2, 4], 'true,false,true,false,false,true,false': [0.013, 0, 4], 'true,false,true,false,true,false': [0.739, 1, 3], 'true,false,true,false,false,true,true': [0.866, 1, 3], 'true,false,true,false,true,true': [0.866, 3, 1], 'false': [4.71e-08, 98, 0], 'true,false,true,true': [1.07, 3, 2], 'true,false,false': [0.229, 4, 55]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,true': 'movie(G, A), movie(H, B)', 'true,true': 'movie(D, B)', 'true,false,true,true': 'movie(G, B)', 'true,false': 'genre(B, F)', 'true,true,false': 'movie(E, A)', 'true,false,true,true,false': 'workedunder(I, B), genre(J, F), movie(G, J)'}, {'true,false,true,true,false,false': [0.405, 4, 10], 'true,true,false,false': [0.866, 1, 3], 'true,false,true,true,true': [0.152, 1, 41], 'true,true,false,true': [0.866, 1, 3], 'false': [0.0, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,false,true,false': [0.136, 1, 52], 'true,false,true,true,false,true': [0.896, 4, 1], 'true,false,false': [0.806, 2, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,true': 'movie(G, A), movie(H, B)', 'true,true': 'movie(D, B)', 'true,false,true,true': 'movie(G, B)', 'true,false': 'genre(B, F)', 'true,true,false': 'movie(E, A)', 'true,false,true,true,false': 'workedunder(I, B), genre(J, F), movie(G, J)'}, {'true,false,true,true,false,false': [0.404, 4, 10], 'true,true,false,false': [0.866, 1, 3], 'true,false,true,true,true': [0.152, 1, 41], 'true,true,false,true': [0.866, 1, 3], 'false': [0.0, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,false,true,false': [0.136, 1, 52], 'true,false,true,true,false,true': [0.897, 4, 1], 'true,false,false': [0.805, 2, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,false,true': 'movie(I, B)', 'true,false,false,true,false': 'movie(J, B), movie(J, K), workedunder(K, L)', 'true,true': 'movie(D, B)', 'true,false': 'movie(F, A), movie(F, G), workedunder(G, H)', 'true,true,false': 'movie(E, A)', 'true,false,false': 'movie(I, A)'}, {'true,true,false,false': [0.866, 1, 3], 'true,false,false,false': [0.168, 2, 50], 'true,false,true': [0.366, 0, 5], 'true,false,false,true,false,false': [0.349, 6, 12], 'false': [3.65e-08, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,true,false,true': [0.866, 1, 3], 'true,false,false,true,false,true': [0.756, 3, 1], 'true,false,false,true,true': [0.16, 1, 37]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,true': 'movie(G, A), movie(H, B)', 'true,true': 'movie(D, B)', 'true,false,true,true': 'movie(G, B)', 'true,false': 'genre(B, F)', 'true,true,false': 'movie(E, A)', 'true,false,true,true,false': 'workedunder(I, B), genre(J, F), movie(G, J)'}, {'true,false,true,true,false,false': [0.391, 4, 10], 'true,true,false,false': [0.866, 1, 3], 'true,false,true,true,true': [0.152, 1, 41], 'true,true,false,true': [0.866, 1, 3], 'false': [0.0, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,false,true,false': [0.136, 1, 52], 'true,false,true,true,false,true': [0.887, 4, 1], 'true,false,false': [0.797, 2, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,true,false,false': 'workedunder(I, B)', 'true,false,true': 'movie(F, B)', 'true,true': 'movie(D, B)', 'true,false,true,false': 'workedunder(G, B), movie(F, H), director(H)', 'true,false': 'movie(F, A)', 'true,true,false': 'movie(E, A)'}, {'true,false,true,false,true': [0.905, 4, 2], 'true,false,true,false,false,false': [0.4, 5, 9], 'false': [1.49e-08, 98, 0], 'true,false,true,true': [0.152, 1, 41], 'true,false,true,false,false,true': [0.0, 0, 3], 'true,true,true': [0.816, 1, 2], 'true,true,false,true': [0.866, 1, 3], 'true,true,false,false': [0.866, 1, 3], 'true,false,false': [0.168, 2, 50]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,false,false': 'movie(L, B), movie(L, M), workedunder(M, N)', 'true,false,true,false,false': 'movie(I, B), movie(D, J), workedunder(K, J)', 'true,false,true': 'workedunder(E, B), movie(D, F), director(F)', 'true,false': 'movie(D, A)', 'true,false,true,true': 'movie(G, B), movie(G, F)', 'true,false,true,false': 'workedunder(H, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [0.0, 0, 3], 'true,false,true,true,true': [0.802, 2, 1], 'true,false,true,true,false': [0.359, 3, 4], 'true,false,true,false,false,false,true': [0.752, 2, 1], 'false': [0.0, 98, 0], 'true,false,true,false,false,false,false': [0.356, 2, 5], 'true,false,true,false,false,true': [0.787, 1, 3], 'true,false,false': [0.223, 4, 55]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(B, D)', 'true,false,false,true': 'movie(J, B)', 'true,false,true': 'movie(I, A)', 'true,true': 'movie(E, A)', 'true,false': 'movie(G, B), movie(G, H), workedunder(H, B)', 'true,true,false': 'movie(F, B)', 'true,false,false': 'movie(J, A), movie(K, B)'}, {'true,true,false,false': [0.866, 1, 3], 'true,false,false,false': [0.09, 0, 49], 'true,false,false,true,false': [0.388, 8, 11], 'true,false,true,true': [0.011, 0, 4], 'false': [0.079, 100, 1], 'true,true,true': [0.866, 1, 3], 'true,true,false,true': [0.816, 1, 2], 'true,false,true,false': [0.866, 1, 3], 'true,false,false,true,true': [0.16, 1, 37]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '0;true;movie(D, A), movie(D, B).;false;true', '0;true,false,true,false,false;movie(F, J), workedunder(K, J).;false;false', '0;true,false,false,true;genre(B, M).;false;false', '0;true,false;movie(E, A), movie(F, B).;true;true', '0;true,false,true,false;workedunder(I, B).;false;true', '0;true,false,true;workedunder(G, B), genre(H, C), movie(E, H).;false;true', '0;true,false,false;workedunder(L, B).;true;false', '1;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '1;true;movie(D, A), movie(D, B).;false;true', '1;true,false,true,false,false;movie(F, J), workedunder(K, J).;false;false', '1;true,false,false,true;genre(B, M).;false;false', '1;true,false;movie(E, A), movie(F, B).;true;true', '1;true,false,true,false;workedunder(I, B).;false;true', '1;true,false,true;workedunder(G, B), genre(H, C), movie(E, H).;false;true', '1;true,false,false;workedunder(L, B).;true;false', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, A), movie(C, B).;false;true', '2;true,false,true,false,true;workedunder(J, B).;false;false', '2;true,false,true,false,false;workedunder(K, B).;true;false', '2;true,false;movie(D, A).;true;false', '2;true,false,true,false,false,true;genre(B, L).;false;false', '2;true,false,true,false;movie(H, B), movie(D, I), director(I).;true;true', '2;true,false,true;movie(E, B), movie(E, F), workedunder(F, G).;false;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;genre(B, C).;true;true', '3;true,false,true;movie(G, A), movie(H, B).;true;false', '3;true,true;movie(D, B).;false;true', '3;true,false,true,true;movie(G, B).;false;true', '3;true,false;genre(B, F).;true;false', '3;true,true,false;movie(E, A).;false;false', '3;true,false,true,true,false;workedunder(I, B), genre(J, F), movie(G, J).;false;false', '4;;workedunder(A, B) :- director(B), actor(A).;true;false', '4;true;genre(B, C).;true;true', '4;true,false,true;movie(G, A), movie(H, B).;true;false', '4;true,true;movie(D, B).;false;true', '4;true,false,true,true;movie(G, B).;false;true', '4;true,false;genre(B, F).;true;false', '4;true,true,false;movie(E, A).;false;false', '4;true,false,true,true,false;workedunder(I, B), genre(J, F), movie(G, J).;false;false', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;genre(B, C).;true;true', '5;true,false,false,true;movie(I, B).;false;true', '5;true,false,false,true,false;movie(J, B), movie(J, K), workedunder(K, L).;false;false', '5;true,true;movie(D, B).;false;true', '5;true,false;movie(F, A), movie(F, G), workedunder(G, H).;false;true', '5;true,true,false;movie(E, A).;false;false', '5;true,false,false;movie(I, A).;true;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;genre(B, C).;true;true', '6;true,false,true;movie(G, A), movie(H, B).;true;false', '6;true,true;movie(D, B).;false;true', '6;true,false,true,true;movie(G, B).;false;true', '6;true,false;genre(B, F).;true;false', '6;true,true,false;movie(E, A).;false;false', '6;true,false,true,true,false;workedunder(I, B), genre(J, F), movie(G, J).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;genre(B, C).;true;true', '7;true,false,true,false,false;workedunder(I, B).;false;false', '7;true,false,true;movie(F, B).;false;true', '7;true,true;movie(D, B).;false;true', '7;true,false,true,false;workedunder(G, B), movie(F, H), director(H).;false;true', '7;true,false;movie(F, A).;true;false', '7;true,true,false;movie(E, A).;false;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, A), movie(C, B).;false;true', '8;true,false,true,false,false,false;movie(L, B), movie(L, M), workedunder(M, N).;false;false', '8;true,false,true,false,false;movie(I, B), movie(D, J), workedunder(K, J).;false;true', '8;true,false,true;workedunder(E, B), movie(D, F), director(F).;true;true', '8;true,false;movie(D, A).;true;false', '8;true,false,true,true;movie(G, B), movie(G, F).;false;false', '8;true,false,true,false;workedunder(H, B).;false;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '9;true;genre(B, D).;true;true', '9;true,false,false,true;movie(J, B).;false;false', '9;true,false,true;movie(I, A).;false;false', '9;true,true;movie(E, A).;false;true', '9;true,false;movie(G, B), movie(G, H), workedunder(H, B).;true;true', '9;true,true,false;movie(F, B).;false;false', '9;true,false,false;movie(J, A), movie(K, B).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.8581489350995117;  // std dev = 1,69e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( workedunder(G, B), genre(H, C), movie(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(I, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, J), workedunder(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.050941973991396765;  // std dev = 3,015, 110,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.7194734122109537;  // std dev = 2,80e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( workedunder(G, B), genre(H, C), movie(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(I, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, J), workedunder(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04485324549538029;  // std dev = 3,015, 110,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5864603426989594;  // std dev = 0,943, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B), movie(E, F), workedunder(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(H, B), movie(D, I), director(I) )
%   | | | | then if ( workedunder(J, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1305851131316893;  // std dev = 5,58e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.40441110111596396;  // std dev = 0,509, 92,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=91 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7874018354125532;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1164608608585662;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.31178652226343223;  // std dev = 0,459, 92,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=91 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.6275996648291213;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10500208388007497;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.2486551625150449;  // std dev = 0,439, 92,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=91 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, F), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then if ( movie(H, B) )
%   | | | | then return 0.47360789617866017;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09553566178640002;  // std dev = 7,74e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.20457250953659942;  // std dev = 0,436, 92,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=91 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.359099543766839;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08759349049210625;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.17265030635082457;  // std dev = 0,442, 92,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=91 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.2812288911707514;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08084118051317703;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16102342594097466;  // std dev = 0,223, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( movie(D, A) )
%   | | then if ( workedunder(E, B), movie(D, F), director(F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(G, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(H, B), movie(D, I), workedunder(J, I) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(K, B), movie(K, L), workedunder(L, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.3020538833535983;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07503414059758136;  // std dev = 4,47e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(B, D) )
%   | then if ( movie(E, A) )
%   | | then return 0.12977833496386348;  // std dev = 0,374, 92,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=91 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.045362587741796724;  // std dev = 0,817, 110,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=10 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108998
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.165 seconds
Total inference time: 0.59 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108998
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.59 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false,true,false,false': 'movie(F, J), workedunder(K, J)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'workedunder(G, B), genre(H, C), movie(E, H)'}, {'true,true': [1.69e-07, 0, 91], 'true,false,true,false,false,false': [0.0, 1, 0], 'false': [3.015, 100, 10], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false,true,false,false': 'movie(F, J), workedunder(K, J)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'workedunder(G, B), genre(H, C), movie(E, H)'}, {'true,true': [2.8e-07, 0, 91], 'true,false,true,false,false,false': [0.0, 1, 0], 'false': [3.015, 100, 10], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,true': 'workedunder(J, B)', 'true,false': 'movie(D, A)', 'true,false,true,false': 'movie(H, B), movie(D, I), director(I)', 'true,false,true': 'movie(E, B), movie(E, F), workedunder(F, G)'}, {'true,false,true,false,false': [0.0, 0, 0], 'true,true': [0.943, 0, 101], 'true,false,true,false,true,false': [0.0, 1, 0], 'true,false,true,false,true,true': [0.0, 0, 0], 'false': [5.58e-08, 100, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false': 'genre(B, E)', 'true,true': 'movie(D, B)'}, {'false': [0.0, 100, 0], 'true,true,true': [0.509, 1, 91], 'true,false,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false': 'genre(B, E)', 'true,true': 'movie(D, B)'}, {'false': [0.0, 100, 0], 'true,true,true': [0.459, 1, 91], 'true,false,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,false,true': 'movie(H, B)', 'true,true': 'movie(D, B)', 'true,false': 'movie(E, A), movie(E, F), workedunder(F, G)', 'true,false,false': 'movie(H, A)'}, {'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [7.74e-08, 100, 0], 'true,true,true': [0.439, 1, 91], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false': 'genre(B, E)', 'true,true': 'movie(D, B)'}, {'false': [0.0, 100, 0], 'true,true,true': [0.436, 1, 91], 'true,false,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, B)', 'true,true': 'movie(D, B)'}, {'true,false,true,true': [0.0, 0, 10], 'false': [0.0, 100, 0], 'true,true,true': [0.442, 1, 91], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,false,false': 'movie(K, B), movie(K, L), workedunder(L, M)', 'true,false,true,false,false': 'movie(H, B), movie(D, I), workedunder(J, I)', 'true,false': 'movie(D, A)', 'true,false,true,false': 'workedunder(G, B)', 'true,false,true': 'workedunder(E, B), movie(D, F), director(F)'}, {'true,true': [0.223, 0, 101], 'true,false,true,false,true': [0.0, 0, 0], 'false': [4.47e-08, 100, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,false,false,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(B, D)', 'true,true': 'movie(E, A)'}, {'false': [0.817, 100, 10], 'true,true,true': [0.374, 1, 91], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '0;true;movie(D, A), movie(D, B).;false;true', '0;true,false;movie(E, A), movie(F, B).;true;false', '0;true,false,true;workedunder(G, B), genre(H, C), movie(E, H).;false;false', '1;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '1;true;movie(D, A), movie(D, B).;false;true', '1;true,false;movie(E, A), movie(F, B).;true;false', '1;true,false,true;workedunder(G, B), genre(H, C), movie(E, H).;false;false', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, A), movie(C, B).;false;true', '2;true,false;movie(D, A).;true;false', '2;true,false,true;movie(E, B), movie(E, F), workedunder(F, G).;false;false', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;genre(B, C).;false;true', '3;true,false;genre(B, E).;false;false', '4;;workedunder(A, B) :- director(B), actor(A).;true;false', '4;true;genre(B, C).;false;true', '4;true,false;genre(B, E).;false;false', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;genre(B, C).;true;true', '5;true,true;movie(D, B).;false;false', '5;true,false;movie(E, A), movie(E, F), workedunder(F, G).;false;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;genre(B, C).;false;true', '6;true,false;genre(B, E).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;genre(B, C).;true;true', '7;true,false;movie(E, A).;false;false', '7;true,true;movie(D, B).;false;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, A), movie(C, B).;false;true', '8;true,false,true,false,false;movie(H, B), movie(D, I), workedunder(J, I).;false;false', '8;true,false;movie(D, A).;true;false', '8;true,false,true,false;workedunder(G, B).;false;true', '8;true,false,true;workedunder(E, B), movie(D, F), director(F).;false;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0), ('false', 0.9090909090909091)]
Tree #2: [('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0), ('false', 0.9090909090909091)]
Tree #3: [('true,false,true,false,false', 0), ('true,false,true,false,true,true', 0), ('true,false,true,true', 0), ('true,false,false', 0)]
Tree #4: [('true,true,false', 0), ('true,false,true', 0), ('true,true,true', 0.9891304347826086)]
Tree #5: [('true,true,false', 0), ('true,false,true', 0), ('true,true,true', 0.9891304347826086)]
Tree #6: [('true,false,false,false', 0), ('true,false,false,true,false', 0), ('true,false,true', 0), ('true,true,false', 0), ('true,true,true', 0.9891304347826086)]
Tree #7: [('true,true,false', 0), ('true,false,true', 0), ('true,true,true', 0.9891304347826086)]
Tree #8: [('true,false,true,false', 0), ('true,true,false', 0), ('true,false,false', 0), ('true,true,true', 0.9891304347826086)]
Tree #9: [('true,false,true,false,false,false,true', 0), ('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #10: [('true,false', 0), ('true,true,false', 0), ('false', 0.9090909090909091), ('true,true,true', 0.9891304347826086)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.8581489350995117;  // std dev = 1,69e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( workedunder(G, B), genre(H, C), movie(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.050941973991396765;  // std dev = 3,015, 110,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.7194734122109537;  // std dev = 2,80e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( workedunder(G, B), genre(H, C), movie(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04485324549538029;  // std dev = 3,015, 110,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5864603426989594;  // std dev = 0,943, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B), movie(E, F), workedunder(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1305851131316893;  // std dev = 5,58e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then return 0.40441110111596396;  // std dev = 0,509, 92,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=91 */
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7874018354125532;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1164608608585662;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then return 0.31178652226343223;  // std dev = 0,459, 92,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=91 */
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.6275996648291213;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10500208388007497;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.2486551625150449;  // std dev = 0,439, 92,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=91 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, F), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.47360789617866017;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09553566178640002;  // std dev = 7,74e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then return 0.20457250953659942;  // std dev = 0,436, 92,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=91 */
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.359099543766839;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08759349049210625;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.17265030635082457;  // std dev = 0,442, 92,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=91 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return 0.2812288911707514;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08084118051317703;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16102342594097466;  // std dev = 0,223, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( movie(D, A) )
%   | | then if ( workedunder(E, B), movie(D, F), director(F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(G, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(H, B), movie(D, I), workedunder(J, I) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.3020538833535983;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07503414059758136;  // std dev = 4,47e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.12977833496386348;  // std dev = 0,374, 92,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=91 */
%   else return -0.045362587741796724;  // std dev = 0,817, 110,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=10 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108998
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.141 seconds
Total inference time: 0.48 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 5.3759999999999994
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098371
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.563 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 4, Type: transfer, Total folds for small set: 2, Time: 00:30:39
{'CLL': -0.098371, 'Recall': 1.0, 'Learning time': 5.3759999999999994, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 12000, 'Total time': 6.420180559158325, 'Generating mappings time': 0.4969046115875244, 'Finding best mapping': 3.1755058765411377, 'Generating paths time': 2.7325000762939453, 'Knowledge compiling time': 0.015262365341186523}, 'Parameter Learning Results': {'CLL': -0.098371, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.563}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,30e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.14185106490048763;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.12544463852839136;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,26e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.1123163781936062;  // std dev = 8,16e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.41751358415830975;  // std dev = 2,53e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.10159632948783628;  // std dev = 3,33e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.3207118471601504;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.09269127618926096;  // std dev = 4,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.08518475138839682;  // std dev = 5,58e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.20975771563253562;  // std dev = 1,43e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.07877675473109158;  // std dev = 5,87e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.17709649774527728;  // std dev = 6,32e-08, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.07324622576333707;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.06842697784420265;  // std dev = 4,83e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,66e-08, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return -0.06419184008202626;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.161 seconds
Total inference time: 0.586 seconds
AUC ROC: 1.0


Dataset: uwcse,imdb, Run: 1, Fold: 4, Type: scratch, Total folds for small set: 2, Time: 00:30:42
{'CLL': -0.094637, 'Recall': 1.0, 'Learning time': 2.161, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.586}


Best mapping found: ['professor(A) -> director(A)', 'tempadvisedby(A,B) -> workedunder(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false,true,false,false': 'movie(F, J), workedunder(K, J)', 'true,false,false,true': 'genre(B, M)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'workedunder(G, B), genre(H, C), movie(E, H)', 'true,false,false': 'workedunder(L, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,false,false': [0.816, 2, 1], 'true,false,false,false': [1.03e-07, 0, 24], 'true,false,false,true,false': [0.182, 1, 28], 'true,false,true,false,true': [2.11e-08, 0, 3], 'false': [0.099, 100, 1], 'true,false,true,true': [0.894, 4, 1], 'true,false,true,false,false,true': [0.433, 2, 6], 'true,false,false,true,true': [0.445, 3, 8]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false,true,false,false': 'movie(F, J), workedunder(K, J)', 'true,false,false,true': 'genre(B, M)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'workedunder(G, B), genre(H, C), movie(E, H)', 'true,false,false': 'workedunder(L, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,false,false': [0.816, 2, 1], 'true,false,false,false': [4.21e-08, 0, 24], 'true,false,false,true,false': [0.182, 1, 28], 'true,false,true,false,true': [0.0, 0, 3], 'false': [0.099, 100, 1], 'true,false,true,true': [0.894, 4, 1], 'true,false,true,false,false,true': [0.433, 2, 6], 'true,false,false,true,true': [0.445, 3, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,true': 'workedunder(J, B)', 'true,false,true,false,false': 'workedunder(K, B)', 'true,false': 'movie(D, A)', 'true,false,true,false,false,true': 'genre(B, L)', 'true,false,true,false': 'movie(H, B), movie(D, I), director(I)', 'true,false,true': 'movie(E, B), movie(E, F), workedunder(F, G)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,false,false': [0.983, 2, 4], 'true,false,true,false,false,true,false': [0.013, 0, 4], 'true,false,true,false,true,false': [0.739, 1, 3], 'true,false,true,false,false,true,true': [0.866, 1, 3], 'true,false,true,false,true,true': [0.866, 3, 1], 'false': [4.71e-08, 98, 0], 'true,false,true,true': [1.07, 3, 2], 'true,false,false': [0.229, 4, 55]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,true': 'movie(G, A), movie(H, B)', 'true,true': 'movie(D, B)', 'true,false,true,true': 'movie(G, B)', 'true,false': 'genre(B, F)', 'true,true,false': 'movie(E, A)', 'true,false,true,true,false': 'workedunder(I, B), genre(J, F), movie(G, J)'}, {'true,false,true,true,false,false': [0.405, 4, 10], 'true,true,false,false': [0.866, 1, 3], 'true,false,true,true,true': [0.152, 1, 41], 'true,true,false,true': [0.866, 1, 3], 'false': [0.0, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,false,true,false': [0.136, 1, 52], 'true,false,true,true,false,true': [0.896, 4, 1], 'true,false,false': [0.806, 2, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,true': 'movie(G, A), movie(H, B)', 'true,true': 'movie(D, B)', 'true,false,true,true': 'movie(G, B)', 'true,false': 'genre(B, F)', 'true,true,false': 'movie(E, A)', 'true,false,true,true,false': 'workedunder(I, B), genre(J, F), movie(G, J)'}, {'true,false,true,true,false,false': [0.404, 4, 10], 'true,true,false,false': [0.866, 1, 3], 'true,false,true,true,true': [0.152, 1, 41], 'true,true,false,true': [0.866, 1, 3], 'false': [0.0, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,false,true,false': [0.136, 1, 52], 'true,false,true,true,false,true': [0.897, 4, 1], 'true,false,false': [0.805, 2, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,false,true': 'movie(I, B)', 'true,false,false,true,false': 'movie(J, B), movie(J, K), workedunder(K, L)', 'true,true': 'movie(D, B)', 'true,false': 'movie(F, A), movie(F, G), workedunder(G, H)', 'true,true,false': 'movie(E, A)', 'true,false,false': 'movie(I, A)'}, {'true,true,false,false': [0.866, 1, 3], 'true,false,false,false': [0.168, 2, 50], 'true,false,true': [0.366, 0, 5], 'true,false,false,true,false,false': [0.349, 6, 12], 'false': [3.65e-08, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,true,false,true': [0.866, 1, 3], 'true,false,false,true,false,true': [0.756, 3, 1], 'true,false,false,true,true': [0.16, 1, 37]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,true': 'movie(G, A), movie(H, B)', 'true,true': 'movie(D, B)', 'true,false,true,true': 'movie(G, B)', 'true,false': 'genre(B, F)', 'true,true,false': 'movie(E, A)', 'true,false,true,true,false': 'workedunder(I, B), genre(J, F), movie(G, J)'}, {'true,false,true,true,false,false': [0.391, 4, 10], 'true,true,false,false': [0.866, 1, 3], 'true,false,true,true,true': [0.152, 1, 41], 'true,true,false,true': [0.866, 1, 3], 'false': [0.0, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,false,true,false': [0.136, 1, 52], 'true,false,true,true,false,true': [0.887, 4, 1], 'true,false,false': [0.797, 2, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,true,false,false': 'workedunder(I, B)', 'true,false,true': 'movie(F, B)', 'true,true': 'movie(D, B)', 'true,false,true,false': 'workedunder(G, B), movie(F, H), director(H)', 'true,false': 'movie(F, A)', 'true,true,false': 'movie(E, A)'}, {'true,false,true,false,true': [0.905, 4, 2], 'true,false,true,false,false,false': [0.4, 5, 9], 'false': [1.49e-08, 98, 0], 'true,false,true,true': [0.152, 1, 41], 'true,false,true,false,false,true': [0.0, 0, 3], 'true,true,true': [0.816, 1, 2], 'true,true,false,true': [0.866, 1, 3], 'true,true,false,false': [0.866, 1, 3], 'true,false,false': [0.168, 2, 50]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,false,false': 'movie(L, B), movie(L, M), workedunder(M, N)', 'true,false,true,false,false': 'movie(I, B), movie(D, J), workedunder(K, J)', 'true,false,true': 'workedunder(E, B), movie(D, F), director(F)', 'true,false': 'movie(D, A)', 'true,false,true,true': 'movie(G, B), movie(G, F)', 'true,false,true,false': 'workedunder(H, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [0.0, 0, 3], 'true,false,true,true,true': [0.802, 2, 1], 'true,false,true,true,false': [0.359, 3, 4], 'true,false,true,false,false,false,true': [0.752, 2, 1], 'false': [0.0, 98, 0], 'true,false,true,false,false,false,false': [0.356, 2, 5], 'true,false,true,false,false,true': [0.787, 1, 3], 'true,false,false': [0.223, 4, 55]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(B, D)', 'true,false,false,true': 'movie(J, B)', 'true,false,true': 'movie(I, A)', 'true,true': 'movie(E, A)', 'true,false': 'movie(G, B), movie(G, H), workedunder(H, B)', 'true,true,false': 'movie(F, B)', 'true,false,false': 'movie(J, A), movie(K, B)'}, {'true,true,false,false': [0.866, 1, 3], 'true,false,false,false': [0.09, 0, 49], 'true,false,false,true,false': [0.388, 8, 11], 'true,false,true,true': [0.011, 0, 4], 'false': [0.079, 100, 1], 'true,true,true': [0.866, 1, 3], 'true,true,false,true': [0.816, 1, 2], 'true,false,true,false': [0.866, 1, 3], 'true,false,false,true,true': [0.16, 1, 37]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '0;true;movie(D, A), movie(D, B).;false;true', '0;true,false,true,false,false;movie(F, J), workedunder(K, J).;false;false', '0;true,false,false,true;genre(B, M).;false;false', '0;true,false;movie(E, A), movie(F, B).;true;true', '0;true,false,true,false;workedunder(I, B).;false;true', '0;true,false,true;workedunder(G, B), genre(H, C), movie(E, H).;false;true', '0;true,false,false;workedunder(L, B).;true;false', '1;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '1;true;movie(D, A), movie(D, B).;false;true', '1;true,false,true,false,false;movie(F, J), workedunder(K, J).;false;false', '1;true,false,false,true;genre(B, M).;false;false', '1;true,false;movie(E, A), movie(F, B).;true;true', '1;true,false,true,false;workedunder(I, B).;false;true', '1;true,false,true;workedunder(G, B), genre(H, C), movie(E, H).;false;true', '1;true,false,false;workedunder(L, B).;true;false', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, A), movie(C, B).;false;true', '2;true,false,true,false,true;workedunder(J, B).;false;false', '2;true,false,true,false,false;workedunder(K, B).;true;false', '2;true,false;movie(D, A).;true;false', '2;true,false,true,false,false,true;genre(B, L).;false;false', '2;true,false,true,false;movie(H, B), movie(D, I), director(I).;true;true', '2;true,false,true;movie(E, B), movie(E, F), workedunder(F, G).;false;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;genre(B, C).;true;true', '3;true,false,true;movie(G, A), movie(H, B).;true;false', '3;true,true;movie(D, B).;false;true', '3;true,false,true,true;movie(G, B).;false;true', '3;true,false;genre(B, F).;true;false', '3;true,true,false;movie(E, A).;false;false', '3;true,false,true,true,false;workedunder(I, B), genre(J, F), movie(G, J).;false;false', '4;;workedunder(A, B) :- director(B), actor(A).;true;false', '4;true;genre(B, C).;true;true', '4;true,false,true;movie(G, A), movie(H, B).;true;false', '4;true,true;movie(D, B).;false;true', '4;true,false,true,true;movie(G, B).;false;true', '4;true,false;genre(B, F).;true;false', '4;true,true,false;movie(E, A).;false;false', '4;true,false,true,true,false;workedunder(I, B), genre(J, F), movie(G, J).;false;false', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;genre(B, C).;true;true', '5;true,false,false,true;movie(I, B).;false;true', '5;true,false,false,true,false;movie(J, B), movie(J, K), workedunder(K, L).;false;false', '5;true,true;movie(D, B).;false;true', '5;true,false;movie(F, A), movie(F, G), workedunder(G, H).;false;true', '5;true,true,false;movie(E, A).;false;false', '5;true,false,false;movie(I, A).;true;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;genre(B, C).;true;true', '6;true,false,true;movie(G, A), movie(H, B).;true;false', '6;true,true;movie(D, B).;false;true', '6;true,false,true,true;movie(G, B).;false;true', '6;true,false;genre(B, F).;true;false', '6;true,true,false;movie(E, A).;false;false', '6;true,false,true,true,false;workedunder(I, B), genre(J, F), movie(G, J).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;genre(B, C).;true;true', '7;true,false,true,false,false;workedunder(I, B).;false;false', '7;true,false,true;movie(F, B).;false;true', '7;true,true;movie(D, B).;false;true', '7;true,false,true,false;workedunder(G, B), movie(F, H), director(H).;false;true', '7;true,false;movie(F, A).;true;false', '7;true,true,false;movie(E, A).;false;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, A), movie(C, B).;false;true', '8;true,false,true,false,false,false;movie(L, B), movie(L, M), workedunder(M, N).;false;false', '8;true,false,true,false,false;movie(I, B), movie(D, J), workedunder(K, J).;false;true', '8;true,false,true;workedunder(E, B), movie(D, F), director(F).;true;true', '8;true,false;movie(D, A).;true;false', '8;true,false,true,true;movie(G, B), movie(G, F).;false;false', '8;true,false,true,false;workedunder(H, B).;false;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '9;true;genre(B, D).;true;true', '9;true,false,false,true;movie(J, B).;false;false', '9;true,false,true;movie(I, A).;false;false', '9;true,true;movie(E, A).;false;true', '9;true,false;movie(G, B), movie(G, H), workedunder(H, B).;true;true', '9;true,true,false;movie(F, B).;false;false', '9;true,false,false;movie(J, A), movie(K, B).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.85814893509951;  // std dev = 9,23e-07, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( workedunder(G, B), genre(H, C), movie(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(I, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, J), workedunder(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07935106490048766;  // std dev = 3,062, 160,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.7194734122109562;  // std dev = 0,000, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( workedunder(G, B), genre(H, C), movie(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(I, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, J), workedunder(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06996342934731044;  // std dev = 3,062, 160,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5754925649477437;  // std dev = 0,980, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B), movie(E, F), workedunder(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(H, B), movie(D, I), director(I) )
%   | | | | then if ( workedunder(J, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12462812485049443;  // std dev = 6,99e-08, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.3833360497897876;  // std dev = 1,498, 158,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=149 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7979969419739291;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11165537710092202;  // std dev = 8,56e-08, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.29723152256126445;  // std dev = 1,358, 158,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=149 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.6401061712423299;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10105126952822152;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.2370261813190713;  // std dev = 1,296, 158,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=149 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, F), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then if ( movie(H, B) )
%   | | | | then return 0.4839352353685049;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09223471538735235;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.19408619547662884;  // std dev = 1,281, 158,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=149 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.36627831226063273;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08479713601814963;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.1624706010565121;  // std dev = 1,292, 158,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=149 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.28608095741132095;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07844381451676033;  // std dev = 1,49e-08, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1684296816286069;  // std dev = 0,206, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else if ( movie(D, A) )
%   | | then if ( workedunder(E, B), movie(D, F), director(F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(G, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(H, B), movie(D, I), workedunder(J, I) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(K, B), movie(K, L), workedunder(L, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.2879294453486414;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07295732414014532;  // std dev = 5,16e-08, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(B, D) )
%   | then if ( movie(E, A) )
%   | | then return 0.12101349419170161;  // std dev = 1,093, 158,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=149 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05123937292488838;  // std dev = 0,830, 160,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=10 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111152
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.317 seconds
Total inference time: 0.679 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111152
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.679 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false,true,false,false': 'movie(F, J), workedunder(K, J)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'workedunder(G, B), genre(H, C), movie(E, H)'}, {'true,true': [9.23e-07, 0, 149], 'true,false,true,false,false,false': [0.0, 9, 0], 'false': [3.062, 150, 10], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false,true,false,false': 'movie(F, J), workedunder(K, J)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'workedunder(G, B), genre(H, C), movie(E, H)'}, {'true,true': [0.0, 0, 149], 'true,false,true,false,false,false': [0.0, 9, 0], 'false': [3.062, 150, 10], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,true': 'workedunder(J, B)', 'true,false': 'movie(D, A)', 'true,false,true,false': 'movie(H, B), movie(D, I), director(I)', 'true,false,true': 'movie(E, B), movie(E, F), workedunder(F, G)'}, {'true,false,true,false,false': [0.0, 0, 0], 'true,true': [0.98, 0, 159], 'true,false,true,false,true,false': [0.0, 9, 0], 'true,false,true,false,true,true': [0.0, 0, 0], 'false': [6.99e-08, 150, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false': 'genre(B, E)', 'true,true': 'movie(D, B)'}, {'false': [8.56e-08, 150, 0], 'true,true,true': [1.498, 9, 149], 'true,false,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false': 'genre(B, E)', 'true,true': 'movie(D, B)'}, {'false': [0.0, 150, 0], 'true,true,true': [1.358, 9, 149], 'true,false,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,false,true': 'movie(H, B)', 'true,true': 'movie(D, B)', 'true,false': 'movie(E, A), movie(E, F), workedunder(F, G)', 'true,false,false': 'movie(H, A)'}, {'true,false,false,false': [0.0, 0, 0], 'true,false,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 150, 0], 'true,true,true': [1.296, 9, 149], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [0.0, 0, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false': 'genre(B, E)', 'true,true': 'movie(D, B)'}, {'false': [0.0, 150, 0], 'true,true,true': [1.281, 9, 149], 'true,false,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, B)', 'true,true': 'movie(D, B)'}, {'true,false,true,true': [0.0, 0, 10], 'false': [1.49e-08, 150, 0], 'true,true,true': [1.292, 9, 149], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,false,false': 'movie(K, B), movie(K, L), workedunder(L, M)', 'true,false,true,false,false': 'movie(H, B), movie(D, I), workedunder(J, I)', 'true,false': 'movie(D, A)', 'true,false,true,false': 'workedunder(G, B)', 'true,false,true': 'workedunder(E, B), movie(D, F), director(F)'}, {'true,true': [0.206, 0, 159], 'true,false,true,false,true': [0.0, 0, 0], 'false': [5.16e-08, 150, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,false,false,false': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(B, D)', 'true,true': 'movie(E, A)'}, {'false': [0.83, 150, 10], 'true,true,true': [1.093, 9, 149], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '0;true;movie(D, A), movie(D, B).;false;true', '0;true,false;movie(E, A), movie(F, B).;true;false', '0;true,false,true;workedunder(G, B), genre(H, C), movie(E, H).;false;false', '1;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '1;true;movie(D, A), movie(D, B).;false;true', '1;true,false;movie(E, A), movie(F, B).;true;false', '1;true,false,true;workedunder(G, B), genre(H, C), movie(E, H).;false;false', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, A), movie(C, B).;false;true', '2;true,false;movie(D, A).;true;false', '2;true,false,true;movie(E, B), movie(E, F), workedunder(F, G).;false;false', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;genre(B, C).;false;true', '3;true,false;genre(B, E).;false;false', '4;;workedunder(A, B) :- director(B), actor(A).;true;false', '4;true;genre(B, C).;false;true', '4;true,false;genre(B, E).;false;false', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;genre(B, C).;true;true', '5;true,true;movie(D, B).;false;false', '5;true,false;movie(E, A), movie(E, F), workedunder(F, G).;false;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;genre(B, C).;false;true', '6;true,false;genre(B, E).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;genre(B, C).;true;true', '7;true,false;movie(E, A).;false;false', '7;true,true;movie(D, B).;false;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, A), movie(C, B).;false;true', '8;true,false,true,false,false;movie(H, B), movie(D, I), workedunder(J, I).;false;false', '8;true,false;movie(D, A).;true;false', '8;true,false,true,false;workedunder(G, B).;false;true', '8;true,false,true;workedunder(E, B), movie(D, F), director(F).;false;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0), ('false', 0.9375)]
Tree #2: [('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0), ('false', 0.9375)]
Tree #3: [('true,false,true,false,false', 0), ('true,false,true,false,true,true', 0), ('true,false,true,true', 0), ('true,false,false', 0)]
Tree #4: [('true,true,false', 0), ('true,false,true', 0), ('true,true,true', 0.9430379746835443)]
Tree #5: [('true,true,false', 0), ('true,false,true', 0), ('true,true,true', 0.9430379746835443)]
Tree #6: [('true,false,false,false', 0), ('true,false,false,true,false', 0), ('true,false,true', 0), ('true,true,false', 0), ('true,true,true', 0.9430379746835443)]
Tree #7: [('true,true,false', 0), ('true,false,true', 0), ('true,true,true', 0.9430379746835443)]
Tree #8: [('true,false,true,false', 0), ('true,true,false', 0), ('true,false,false', 0), ('true,true,true', 0.9430379746835443)]
Tree #9: [('true,false,true,false,false,false,true', 0), ('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #10: [('true,false', 0), ('true,true,false', 0), ('false', 0.9375), ('true,true,true', 0.9430379746835443)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.85814893509951;  // std dev = 9,23e-07, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( workedunder(G, B), genre(H, C), movie(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07935106490048766;  // std dev = 3,062, 160,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.7194734122109562;  // std dev = 0,000, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( workedunder(G, B), genre(H, C), movie(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06996342934731044;  // std dev = 3,062, 160,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5754925649477437;  // std dev = 0,980, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B), movie(E, F), workedunder(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12462812485049443;  // std dev = 6,99e-08, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then return 0.3833360497897876;  // std dev = 1,498, 158,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=149 */
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7979969419739291;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11165537710092202;  // std dev = 8,56e-08, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then return 0.29723152256126445;  // std dev = 1,358, 158,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=149 */
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.6401061712423299;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10105126952822152;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.2370261813190713;  // std dev = 1,296, 158,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=149 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, F), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4839352353685049;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09223471538735235;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then return 0.19408619547662884;  // std dev = 1,281, 158,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=149 */
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.36627831226063273;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08479713601814963;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.1624706010565121;  // std dev = 1,292, 158,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=149 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return 0.28608095741132095;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07844381451676033;  // std dev = 1,49e-08, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1684296816286069;  // std dev = 0,206, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else if ( movie(D, A) )
%   | | then if ( workedunder(E, B), movie(D, F), director(F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(G, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(H, B), movie(D, I), workedunder(J, I) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.2879294453486414;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07295732414014532;  // std dev = 5,16e-08, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.12101349419170161;  // std dev = 1,093, 158,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=149 */
%   else return -0.05123937292488838;  // std dev = 0,830, 160,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=10 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111152
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.783 seconds
Total inference time: 0.523 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 14.302
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102213
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.629 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 4, Type: transfer, Total folds for small set: 3, Time: 00:31:06
{'CLL': -0.102213, 'Recall': 1.0, 'Learning time': 14.302, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 12000, 'Total time': 7.113274812698364, 'Generating mappings time': 0.674476146697998, 'Finding best mapping': 3.4072506427764893, 'Generating paths time': 2.9827892780303955, 'Knowledge compiling time': 0.04874897003173828}, 'Parameter Learning Results': {'CLL': -0.102213, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.629}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.8581489350995097;  // std dev = 9,90e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.14185106490048804;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.7194734122109564;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.12544463852839127;  // std dev = 5,16e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,46e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.11231637819360621;  // std dev = 1,01e-07, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.417513584158309;  // std dev = 4,54e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.10159632948783645;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.32071184716014967;  // std dev = 3,10e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.09269127618926072;  // std dev = 7,45e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.25517224256949056;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.08518475138839679;  // std dev = 6,50e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,60e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.07877675473109154;  // std dev = 7,96e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.07324622576333682;  // std dev = 8,02e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.06842697784420264;  // std dev = 6,75e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,19e-08, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return -0.06419184008202626;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.186 seconds
Total inference time: 0.506 seconds
AUC ROC: 1.0


Dataset: uwcse,imdb, Run: 1, Fold: 4, Type: scratch, Total folds for small set: 3, Time: 00:31:09
{'CLL': -0.094637, 'Recall': 1.0, 'Learning time': 2.186, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.506}


Best mapping found: ['professor(A) -> director(A)', 'tempadvisedby(A,B) -> workedunder(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false,true,false,false': 'movie(F, J), workedunder(K, J)', 'true,false,false,true': 'genre(B, M)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'workedunder(G, B), genre(H, C), movie(E, H)', 'true,false,false': 'workedunder(L, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,false,false': [0.816, 2, 1], 'true,false,false,false': [1.03e-07, 0, 24], 'true,false,false,true,false': [0.182, 1, 28], 'true,false,true,false,true': [2.11e-08, 0, 3], 'false': [0.099, 100, 1], 'true,false,true,true': [0.894, 4, 1], 'true,false,true,false,false,true': [0.433, 2, 6], 'true,false,false,true,true': [0.445, 3, 8]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false,true,false,false': 'movie(F, J), workedunder(K, J)', 'true,false,false,true': 'genre(B, M)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'workedunder(G, B), genre(H, C), movie(E, H)', 'true,false,false': 'workedunder(L, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,false,false': [0.816, 2, 1], 'true,false,false,false': [4.21e-08, 0, 24], 'true,false,false,true,false': [0.182, 1, 28], 'true,false,true,false,true': [0.0, 0, 3], 'false': [0.099, 100, 1], 'true,false,true,true': [0.894, 4, 1], 'true,false,true,false,false,true': [0.433, 2, 6], 'true,false,false,true,true': [0.445, 3, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,true': 'workedunder(J, B)', 'true,false,true,false,false': 'workedunder(K, B)', 'true,false': 'movie(D, A)', 'true,false,true,false,false,true': 'genre(B, L)', 'true,false,true,false': 'movie(H, B), movie(D, I), director(I)', 'true,false,true': 'movie(E, B), movie(E, F), workedunder(F, G)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,false,false': [0.983, 2, 4], 'true,false,true,false,false,true,false': [0.013, 0, 4], 'true,false,true,false,true,false': [0.739, 1, 3], 'true,false,true,false,false,true,true': [0.866, 1, 3], 'true,false,true,false,true,true': [0.866, 3, 1], 'false': [4.71e-08, 98, 0], 'true,false,true,true': [1.07, 3, 2], 'true,false,false': [0.229, 4, 55]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,true': 'movie(G, A), movie(H, B)', 'true,true': 'movie(D, B)', 'true,false,true,true': 'movie(G, B)', 'true,false': 'genre(B, F)', 'true,true,false': 'movie(E, A)', 'true,false,true,true,false': 'workedunder(I, B), genre(J, F), movie(G, J)'}, {'true,false,true,true,false,false': [0.405, 4, 10], 'true,true,false,false': [0.866, 1, 3], 'true,false,true,true,true': [0.152, 1, 41], 'true,true,false,true': [0.866, 1, 3], 'false': [0.0, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,false,true,false': [0.136, 1, 52], 'true,false,true,true,false,true': [0.896, 4, 1], 'true,false,false': [0.806, 2, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,true': 'movie(G, A), movie(H, B)', 'true,true': 'movie(D, B)', 'true,false,true,true': 'movie(G, B)', 'true,false': 'genre(B, F)', 'true,true,false': 'movie(E, A)', 'true,false,true,true,false': 'workedunder(I, B), genre(J, F), movie(G, J)'}, {'true,false,true,true,false,false': [0.404, 4, 10], 'true,true,false,false': [0.866, 1, 3], 'true,false,true,true,true': [0.152, 1, 41], 'true,true,false,true': [0.866, 1, 3], 'false': [0.0, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,false,true,false': [0.136, 1, 52], 'true,false,true,true,false,true': [0.897, 4, 1], 'true,false,false': [0.805, 2, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,false,true': 'movie(I, B)', 'true,false,false,true,false': 'movie(J, B), movie(J, K), workedunder(K, L)', 'true,true': 'movie(D, B)', 'true,false': 'movie(F, A), movie(F, G), workedunder(G, H)', 'true,true,false': 'movie(E, A)', 'true,false,false': 'movie(I, A)'}, {'true,true,false,false': [0.866, 1, 3], 'true,false,false,false': [0.168, 2, 50], 'true,false,true': [0.366, 0, 5], 'true,false,false,true,false,false': [0.349, 6, 12], 'false': [3.65e-08, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,true,false,true': [0.866, 1, 3], 'true,false,false,true,false,true': [0.756, 3, 1], 'true,false,false,true,true': [0.16, 1, 37]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,true': 'movie(G, A), movie(H, B)', 'true,true': 'movie(D, B)', 'true,false,true,true': 'movie(G, B)', 'true,false': 'genre(B, F)', 'true,true,false': 'movie(E, A)', 'true,false,true,true,false': 'workedunder(I, B), genre(J, F), movie(G, J)'}, {'true,false,true,true,false,false': [0.391, 4, 10], 'true,true,false,false': [0.866, 1, 3], 'true,false,true,true,true': [0.152, 1, 41], 'true,true,false,true': [0.866, 1, 3], 'false': [0.0, 98, 0], 'true,true,true': [0.816, 1, 2], 'true,false,true,false': [0.136, 1, 52], 'true,false,true,true,false,true': [0.887, 4, 1], 'true,false,false': [0.797, 2, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,true,false,false': 'workedunder(I, B)', 'true,false,true': 'movie(F, B)', 'true,true': 'movie(D, B)', 'true,false,true,false': 'workedunder(G, B), movie(F, H), director(H)', 'true,false': 'movie(F, A)', 'true,true,false': 'movie(E, A)'}, {'true,false,true,false,true': [0.905, 4, 2], 'true,false,true,false,false,false': [0.4, 5, 9], 'false': [1.49e-08, 98, 0], 'true,false,true,true': [0.152, 1, 41], 'true,false,true,false,false,true': [0.0, 0, 3], 'true,true,true': [0.816, 1, 2], 'true,true,false,true': [0.866, 1, 3], 'true,true,false,false': [0.866, 1, 3], 'true,false,false': [0.168, 2, 50]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,false,false': 'movie(L, B), movie(L, M), workedunder(M, N)', 'true,false,true,false,false': 'movie(I, B), movie(D, J), workedunder(K, J)', 'true,false,true': 'workedunder(E, B), movie(D, F), director(F)', 'true,false': 'movie(D, A)', 'true,false,true,true': 'movie(G, B), movie(G, F)', 'true,false,true,false': 'workedunder(H, B)'}, {'true,true': [0.152, 1, 41], 'true,false,true,false,true': [0.0, 0, 3], 'true,false,true,true,true': [0.802, 2, 1], 'true,false,true,true,false': [0.359, 3, 4], 'true,false,true,false,false,false,true': [0.752, 2, 1], 'false': [0.0, 98, 0], 'true,false,true,false,false,false,false': [0.356, 2, 5], 'true,false,true,false,false,true': [0.787, 1, 3], 'true,false,false': [0.223, 4, 55]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(B, D)', 'true,false,false,true': 'movie(J, B)', 'true,false,true': 'movie(I, A)', 'true,true': 'movie(E, A)', 'true,false': 'movie(G, B), movie(G, H), workedunder(H, B)', 'true,true,false': 'movie(F, B)', 'true,false,false': 'movie(J, A), movie(K, B)'}, {'true,true,false,false': [0.866, 1, 3], 'true,false,false,false': [0.09, 0, 49], 'true,false,false,true,false': [0.388, 8, 11], 'true,false,true,true': [0.011, 0, 4], 'false': [0.079, 100, 1], 'true,true,true': [0.866, 1, 3], 'true,true,false,true': [0.816, 1, 2], 'true,false,true,false': [0.866, 1, 3], 'true,false,false,true,true': [0.16, 1, 37]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '0;true;movie(D, A), movie(D, B).;false;true', '0;true,false,true,false,false;movie(F, J), workedunder(K, J).;false;false', '0;true,false,false,true;genre(B, M).;false;false', '0;true,false;movie(E, A), movie(F, B).;true;true', '0;true,false,true,false;workedunder(I, B).;false;true', '0;true,false,true;workedunder(G, B), genre(H, C), movie(E, H).;false;true', '0;true,false,false;workedunder(L, B).;true;false', '1;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '1;true;movie(D, A), movie(D, B).;false;true', '1;true,false,true,false,false;movie(F, J), workedunder(K, J).;false;false', '1;true,false,false,true;genre(B, M).;false;false', '1;true,false;movie(E, A), movie(F, B).;true;true', '1;true,false,true,false;workedunder(I, B).;false;true', '1;true,false,true;workedunder(G, B), genre(H, C), movie(E, H).;false;true', '1;true,false,false;workedunder(L, B).;true;false', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, A), movie(C, B).;false;true', '2;true,false,true,false,true;workedunder(J, B).;false;false', '2;true,false,true,false,false;workedunder(K, B).;true;false', '2;true,false;movie(D, A).;true;false', '2;true,false,true,false,false,true;genre(B, L).;false;false', '2;true,false,true,false;movie(H, B), movie(D, I), director(I).;true;true', '2;true,false,true;movie(E, B), movie(E, F), workedunder(F, G).;false;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;genre(B, C).;true;true', '3;true,false,true;movie(G, A), movie(H, B).;true;false', '3;true,true;movie(D, B).;false;true', '3;true,false,true,true;movie(G, B).;false;true', '3;true,false;genre(B, F).;true;false', '3;true,true,false;movie(E, A).;false;false', '3;true,false,true,true,false;workedunder(I, B), genre(J, F), movie(G, J).;false;false', '4;;workedunder(A, B) :- director(B), actor(A).;true;false', '4;true;genre(B, C).;true;true', '4;true,false,true;movie(G, A), movie(H, B).;true;false', '4;true,true;movie(D, B).;false;true', '4;true,false,true,true;movie(G, B).;false;true', '4;true,false;genre(B, F).;true;false', '4;true,true,false;movie(E, A).;false;false', '4;true,false,true,true,false;workedunder(I, B), genre(J, F), movie(G, J).;false;false', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;genre(B, C).;true;true', '5;true,false,false,true;movie(I, B).;false;true', '5;true,false,false,true,false;movie(J, B), movie(J, K), workedunder(K, L).;false;false', '5;true,true;movie(D, B).;false;true', '5;true,false;movie(F, A), movie(F, G), workedunder(G, H).;false;true', '5;true,true,false;movie(E, A).;false;false', '5;true,false,false;movie(I, A).;true;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;genre(B, C).;true;true', '6;true,false,true;movie(G, A), movie(H, B).;true;false', '6;true,true;movie(D, B).;false;true', '6;true,false,true,true;movie(G, B).;false;true', '6;true,false;genre(B, F).;true;false', '6;true,true,false;movie(E, A).;false;false', '6;true,false,true,true,false;workedunder(I, B), genre(J, F), movie(G, J).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;genre(B, C).;true;true', '7;true,false,true,false,false;workedunder(I, B).;false;false', '7;true,false,true;movie(F, B).;false;true', '7;true,true;movie(D, B).;false;true', '7;true,false,true,false;workedunder(G, B), movie(F, H), director(H).;false;true', '7;true,false;movie(F, A).;true;false', '7;true,true,false;movie(E, A).;false;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, A), movie(C, B).;false;true', '8;true,false,true,false,false,false;movie(L, B), movie(L, M), workedunder(M, N).;false;false', '8;true,false,true,false,false;movie(I, B), movie(D, J), workedunder(K, J).;false;true', '8;true,false,true;workedunder(E, B), movie(D, F), director(F).;true;true', '8;true,false;movie(D, A).;true;false', '8;true,false,true,true;movie(G, B), movie(G, F).;false;false', '8;true,false,true,false;workedunder(H, B).;false;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '9;true;genre(B, D).;true;true', '9;true,false,false,true;movie(J, B).;false;false', '9;true,false,true;movie(I, A).;false;false', '9;true,true;movie(E, A).;false;true', '9;true,false;movie(G, B), movie(G, H), workedunder(H, B).;true;true', '9;true,true,false;movie(F, B).;false;false', '9;true,false,false;movie(J, A), movie(K, B).;true;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( workedunder(G, B), genre(H, C), movie(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(I, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, J), workedunder(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.015902945794699662;  // std dev = 7,049, 374,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=59 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( workedunder(G, B), genre(H, C), movie(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(I, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(F, J), workedunder(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.01395604290079525;  // std dev = 7,049, 374,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=59 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.6077326604992745;  // std dev = 2,087, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B), movie(E, F), workedunder(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(H, B), movie(D, I), director(I) )
%   | | | | then if ( workedunder(J, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12033220262172992;  // std dev = 0,077, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1455247936815459;  // std dev = 1,88e-07, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.36775109903644165;  // std dev = 2,283, 300,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=278 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.667062109759512;  // std dev = 2,234, 66,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=59 */
%   else return -0.12834566540329445;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.28644134727802545;  // std dev = 2,075, 300,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=278 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5313512342315784;  // std dev = 2,123, 66,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=59 */
%   else return -0.11465888885776886;  // std dev = 2,13e-07, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.22906386859377723;  // std dev = 1,981, 300,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=278 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, F), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then if ( movie(H, B) )
%   | | | | then return 0.49099972398199676;  // std dev = 1,12e-07, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | | else if ( movie(I, B), movie(I, J), workedunder(J, K) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.3335750016875747;  // std dev = 1,05e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10352378587472426;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.18774721041986112;  // std dev = 1,955, 300,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=278 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3038516838208711;  // std dev = 1,589, 66,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=59 */
%   else return -0.09430280060243217;  // std dev = 1,49e-07, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.15707629931901376;  // std dev = 1,967, 300,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=278 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.3034640191468002;  // std dev = 9,42e-08, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else if ( workedunder(F, B), movie(E, G), director(G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(H, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.32700043374812277;  // std dev = 1,49e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08655074414159804;  // std dev = 1,53e-07, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17963717667827747;  // std dev = 0,539, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( workedunder(E, B), movie(D, F), director(F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(G, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(H, B), movie(D, I), workedunder(J, I) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(K, B), movie(K, L), workedunder(L, M) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.2727421487842459;  // std dev = 0,040, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07994844700190738;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(B, D) )
%   | then if ( movie(E, A) )
%   | | then return 0.11567482797780014;  // std dev = 1,664, 300,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=278 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.031681449535702906;  // std dev = 2,069, 374,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=59 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.130882
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.22 seconds
Total inference time: 0.73 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.130882
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.73 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false,true,false,false': 'movie(F, J), workedunder(K, J)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'workedunder(G, B), genre(H, C), movie(E, H)'}, {'true,true': [1.07e-06, 0, 278], 'true,false,true,false,false,false': [1.05e-08, 22, 0], 'false': [7.049, 315, 59], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false,true,false,false': 'movie(F, J), workedunder(K, J)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true,false': 'workedunder(I, B)', 'true,false,true': 'workedunder(G, B), genre(H, C), movie(E, H)'}, {'true,true': [0.0, 0, 278], 'true,false,true,false,false,false': [0.0, 22, 0], 'false': [7.049, 315, 59], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,true': 'workedunder(J, B)', 'true,false': 'movie(D, A)', 'true,false,true,false': 'movie(H, B), movie(D, I), director(I)', 'true,false,true': 'movie(E, B), movie(E, F), workedunder(F, G)'}, {'true,false,true,false,false': [0.0, 0, 0], 'true,true': [2.087, 0, 337], 'true,false,true,false,true,false': [0.077, 29, 0], 'true,false,true,false,true,true': [0.0, 0, 0], 'false': [1.88e-07, 308, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false': 'genre(B, E)', 'true,true': 'movie(D, B)'}, {'false': [0.0, 308, 0], 'true,true,true': [2.283, 22, 278], 'true,false,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [2.234, 7, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false': 'genre(B, E)', 'true,true': 'movie(D, B)'}, {'false': [2.13e-07, 308, 0], 'true,true,true': [2.075, 22, 278], 'true,false,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [2.123, 7, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,false,true': 'movie(H, B)', 'true,true': 'movie(D, B)', 'true,false,false,true,false': 'movie(I, B), movie(I, J), workedunder(J, K)', 'true,false': 'movie(E, A), movie(E, F), workedunder(F, G)', 'true,false,false': 'movie(H, A)'}, {'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true,false,false': [1.05e-08, 7, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 308, 0], 'true,true,true': [1.981, 22, 278], 'true,false,false,true,false,true': [0.0, 0, 0], 'true,false,false,true,true': [1.12e-07, 0, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false': 'genre(B, E)', 'true,true': 'movie(D, B)'}, {'false': [1.49e-07, 308, 0], 'true,true,true': [1.955, 22, 278], 'true,false,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [1.589, 7, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false,true,false,false': 'workedunder(H, B)', 'true,true': 'movie(D, B)', 'true,false,true,false': 'workedunder(F, B), movie(E, G), director(G)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, B)'}, {'true,false,true,false,true': [0.0, 0, 0], 'false': [1.53e-07, 308, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,true,true': [1.967, 22, 278], 'true,false,true,true': [9.42e-08, 0, 59], 'true,false,true,false,false,false': [1.49e-08, 7, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true,false,false,false': 'movie(K, B), movie(K, L), workedunder(L, M)', 'true,false,true,false,false': 'movie(H, B), movie(D, I), workedunder(J, I)', 'true,false': 'movie(D, A)', 'true,false,true,false': 'workedunder(G, B)', 'true,false,true': 'workedunder(E, B), movie(D, F), director(F)'}, {'true,true': [0.539, 0, 337], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 308, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,false,false,false': [0.04, 29, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(B, D)', 'true,true': 'movie(E, A)'}, {'false': [2.069, 315, 59], 'true,true,true': [1.664, 22, 278], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '0;true;movie(D, A), movie(D, B).;false;true', '0;true,false;movie(E, A), movie(F, B).;true;false', '0;true,false,true;workedunder(G, B), genre(H, C), movie(E, H).;false;false', '1;;workedunder(A, B) :- genre(B, C), actor(A).;true;false', '1;true;movie(D, A), movie(D, B).;false;true', '1;true,false;movie(E, A), movie(F, B).;true;false', '1;true,false,true;workedunder(G, B), genre(H, C), movie(E, H).;false;false', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, A), movie(C, B).;false;true', '2;true,false;movie(D, A).;true;false', '2;true,false,true;movie(E, B), movie(E, F), workedunder(F, G).;false;false', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;genre(B, C).;false;true', '3;true,false;genre(B, E).;false;false', '4;;workedunder(A, B) :- director(B), actor(A).;true;false', '4;true;genre(B, C).;false;true', '4;true,false;genre(B, E).;false;false', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;genre(B, C).;true;true', '5;true,false,false,true;movie(H, B).;false;false', '5;true,true;movie(D, B).;false;false', '5;true,false;movie(E, A), movie(E, F), workedunder(F, G).;false;true', '5;true,false,false;movie(H, A).;true;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;genre(B, C).;false;true', '6;true,false;genre(B, E).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;genre(B, C).;true;true', '7;true,true;movie(D, B).;false;false', '7;true,false;movie(E, A).;true;false', '7;true,false,true;movie(E, B).;false;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, A), movie(C, B).;false;true', '8;true,false,true,false,false;movie(H, B), movie(D, I), workedunder(J, I).;false;false', '8;true,false;movie(D, A).;true;false', '8;true,false,true,false;workedunder(G, B).;false;true', '8;true,false,true;workedunder(E, B), movie(D, F), director(F).;false;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0), ('false', 0.8422459893048129)]
Tree #2: [('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0), ('false', 0.8422459893048129)]
Tree #3: [('true,false,true,false,false', 0), ('true,false,true,false,true,true', 0), ('true,false,true,true', 0), ('true,false,false', 0)]
Tree #4: [('true,true,false', 0), ('true,false,true', 0), ('true,false,false', 0.8939393939393939), ('true,true,true', 0.9266666666666666)]
Tree #5: [('true,true,false', 0), ('true,false,true', 0), ('true,false,false', 0.8939393939393939), ('true,true,true', 0.9266666666666666)]
Tree #6: [('true,false,false,true,false,true', 0), ('true,false,false,false', 0), ('true,true,false', 0), ('true,false,true', 0), ('true,true,true', 0.9266666666666666)]
Tree #7: [('true,true,false', 0), ('true,false,true', 0), ('true,false,false', 0.8939393939393939), ('true,true,true', 0.9266666666666666)]
Tree #8: [('true,false,true,false,true', 0), ('true,false,true,false,false,true', 0), ('true,true,false', 0), ('true,false,false', 0), ('true,true,true', 0.9266666666666666)]
Tree #9: [('true,false,true,false,false,false,true', 0), ('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #10: [('true,false', 0), ('true,true,false', 0), ('false', 0.8422459893048129), ('true,true,true', 0.9266666666666666)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( workedunder(G, B), genre(H, C), movie(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.015902945794699662;  // std dev = 7,049, 374,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=59 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( workedunder(G, B), genre(H, C), movie(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.01395604290079525;  // std dev = 7,049, 374,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=59 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.6077326604992745;  // std dev = 2,087, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B), movie(E, F), workedunder(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12033220262172992;  // std dev = 0,077, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1455247936815459;  // std dev = 1,88e-07, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then return 0.36775109903644165;  // std dev = 2,283, 300,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=278 */
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.667062109759512;  // std dev = 2,234, 66,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=59 */
%   else return -0.12834566540329445;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then return 0.28644134727802545;  // std dev = 2,075, 300,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=278 */
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5313512342315784;  // std dev = 2,123, 66,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=59 */
%   else return -0.11465888885776886;  // std dev = 2,13e-07, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.22906386859377723;  // std dev = 1,981, 300,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=278 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, F), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then if ( movie(H, B) )
%   | | | | then return 0.49099972398199676;  // std dev = 1,12e-07, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | | else return -0.3335750016875747;  // std dev = 1,05e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10352378587472426;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then return 0.18774721041986112;  // std dev = 1,955, 300,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=278 */
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3038516838208711;  // std dev = 1,589, 66,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=59 */
%   else return -0.09430280060243217;  // std dev = 1,49e-07, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, B) )
%   | | then return 0.15707629931901376;  // std dev = 1,967, 300,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=278 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.3034640191468002;  // std dev = 9,42e-08, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.32700043374812277;  // std dev = 1,49e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08655074414159804;  // std dev = 1,53e-07, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17963717667827747;  // std dev = 0,539, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( workedunder(E, B), movie(D, F), director(F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(G, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(H, B), movie(D, I), workedunder(J, I) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.2727421487842459;  // std dev = 0,040, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07994844700190738;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.11567482797780014;  // std dev = 1,664, 300,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=278 */
%   else return -0.031681449535702906;  // std dev = 2,069, 374,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=59 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.130882
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.608 seconds
Total inference time: 0.728 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 20.286
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106549
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.668 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 4, Type: transfer, Total folds for small set: 4, Time: 00:31:38
{'CLL': -0.106549, 'Recall': 1.0, 'Learning time': 20.286, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 12000, 'Total time': 6.308906316757202, 'Generating mappings time': 0.4798548221588135, 'Finding best mapping': 3.1134519577026367, 'Generating paths time': 2.6669201850891113, 'Knowledge compiling time': 0.04867267608642578}, 'Parameter Learning Results': {'CLL': -0.106549, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.668}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995097;  // std dev = 9,90e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.8525623429207385;  // std dev = 0,075, 179,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=178 */
%   else return -0.14185106490048782;  // std dev = 1,12e-07, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.7150129861412778;  // std dev = 0,075, 179,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=178 */
%   else return -0.12544463852839194;  // std dev = 0,000, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,46e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.5522594004204403;  // std dev = 0,075, 179,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=178 */
%   else return -0.1123163781936068;  // std dev = 0,000, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.417513584158309;  // std dev = 4,54e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.4151294338920306;  // std dev = 0,075, 179,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=178 */
%   else return -0.10159632948783658;  // std dev = 0,000, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.32071184716014967;  // std dev = 3,10e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.3185197304676709;  // std dev = 0,075, 179,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=178 */
%   else return -0.0926912761892605;  // std dev = 1,69e-07, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.25517224256949056;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.2529700667837118;  // std dev = 0,075, 179,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=178 */
%   else return -0.08518475138839678;  // std dev = 1,05e-07, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253517;  // std dev = 2,60e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.2074942376107484;  // std dev = 0,075, 179,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=178 */
%   else return -0.07877675473109147;  // std dev = 2,11e-08, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1770964977452782;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.17476781512663678;  // std dev = 0,075, 179,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=178 */
%   else return -0.07324622576333699;  // std dev = 9,42e-08, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.15035817931896675;  // std dev = 0,075, 179,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=178 */
%   else return -0.06842697784420296;  // std dev = 0,000, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1340070300080108;  // std dev = 9,19e-08, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return 0.13157423079147607;  // std dev = 0,075, 179,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=178 */
%   else return -0.06419184008202598;  // std dev = 1,15e-07, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095976
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.724 seconds
Total inference time: 0.658 seconds
AUC ROC: 1.0


Dataset: uwcse,imdb, Run: 1, Fold: 4, Type: scratch, Total folds for small set: 4, Time: 00:31:51
{'CLL': -0.095976, 'Recall': 1.0, 'Learning time': 10.724, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.658}
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, E), publication(H, E), publication(H, G) )
%   | | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( tempadvisedby(I, E), publication(J, I), publication(K, B) )
%   | | | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | else if ( tempadvisedby(L, E) )
%   | | | | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.727001394115906;  // std dev = 0,338, 61,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=53 */
%   | | | else return 0.5504566274072047;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( tempadvisedby(G, E), inphase(G, H), inphase(A, H) )
%   | | | | then return 0.4792710802073998;  // std dev = 0,741, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | else if ( tempadvisedby(I, E), publication(J, I), publication(K, B) )
%   | | | | | then return -0.14402992290765404;  // std dev = 0,083, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | else if ( tempadvisedby(L, E) )
%   | | | | | | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | else return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(M, A), tempadvisedby(N, B) )
%   | | | then return 0.3451667493802274;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6062783833823147;  // std dev = 0,349, 69,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=59 */
%   else return -0.12544463852839144;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5553664367462842;  // std dev = 1,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( publication(F, B), tempadvisedby(G, E), publication(H, G) )
%   | | | then return -0.019380718605259;  // std dev = 0,291, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else if ( tempadvisedby(I, E) )
%   | | | | then return 0.5072157758439371;  // std dev = 0,309, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | else return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.48835489896947454;  // std dev = 0,334, 61,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=53 */
%   | | | else if ( projectmember(K, B) )
%   | | | | then return 0.6554911424960792;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( tempadvisedby(L, B) )
%   | | | | | then return 0.3221578091627459;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return 0.22691971392465066;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.11231637819360622;  // std dev = 6,99e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then if ( publication(D, G), tempadvisedby(H, G), publication(I, H) )
%   | | | | then return -0.13631197772318865;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else return 0.21951139547654272;  // std dev = 1,144, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else if ( publication(D, J), hasposition(J, K), hasposition(B, K) )
%   | | | | then return 0.03844228945514909;  // std dev = 0,911, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else if ( publication(D, L), tempadvisedby(M, L) )
%   | | | | | then return 0.15868785281162762;  // std dev = 0,655, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | else return 0.5759209120655946;  // std dev = 0,282, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(N, B), tempadvisedby(P, B), publication(N, P) )
%   | | | then return 0.09459154183799226;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3706869024043098;  // std dev = 0,325, 68,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=58 */
%   else return -0.10159632948783619;  // std dev = 5,58e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), tempadvisedby(E, B), publication(F, B) )
%   | | then if ( publication(D, G), tempadvisedby(H, G), publication(I, H) )
%   | | | then return -0.12122518347529272;  // std dev = 0,062, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.16488215448104485;  // std dev = 1,144, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(J, B), publication(J, K), tempadvisedby(L, K) )
%   | | | then return 0.2856149021735244;  // std dev = 0,323, 62,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=53 */
%   | | | else if ( projectmember(M, B) )
%   | | | | then return 0.3735850318817775;  // std dev = 0,078, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else if ( publication(N, A), publication(N, P), tempadvisedby(Q, P) )
%   | | | | | then return 0.2498181488263594;  // std dev = 0,765, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else if ( publication(R, A) )
%   | | | | | | then return 0.009540590288716724;  // std dev = 0,615, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else return 0.05903316526463916;  // std dev = 0,495, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.09269127618926107;  // std dev = 1,05e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B), publication(E, G), student(G) )
%   | | | then if ( publication(D, H), publication(E, H) )
%   | | | | then return 0.0608774617978623;  // std dev = 0,447, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return -0.17363786122599995;  // std dev = 0,823, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(D, I), hasposition(I, J), hasposition(B, J) )
%   | | | | then return -0.030039454962630684;  // std dev = 0,896, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | else return 0.3054424240948687;  // std dev = 0,277, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( publication(K, B), publication(K, L), tempadvisedby(L, B) )
%   | | | then return 8.700713915034353E-4;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else if ( publication(M, B) )
%   | | | | then return 0.2533886808135491;  // std dev = 0,276, 48,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=44 */
%   | | | | else return 0.1477184319547733;  // std dev = 0,387, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   else return -0.08518475138839679;  // std dev = 3,16e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.20975771563253545;  // std dev = 5,96e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then return 0.07758958989449782;  // std dev = 0,329, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( publication(F, B), publication(F, G), inphase(G, H) )
%   | | | then if ( inphase(A, H), publication(F, I), tempadvisedby(J, I) )
%   | | | | then if ( publication(K, J) )
%   | | | | | then if ( publication(K, B) )
%   | | | | | | then return 0.07772903215494871;  // std dev = 0,418, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | | | | else if ( tempadvisedby(L, B) )
%   | | | | | | | then return -0.22753450339198592;  // std dev = 1,162, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | | | | | else return 0.07282617752609329;  // std dev = 0,884, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.28265594524822835;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 0.24572851088629802;  // std dev = 0,165, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.2016530433029414;  // std dev = 0,327, 26,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   else return -0.07877675473109164;  // std dev = 4,71e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, B), publication(E, A), tempadvisedby(F, B) )
%   | | then if ( publication(E, G), professor(G) )
%   | | | then return 0.009972856322295998;  // std dev = 0,445, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.05169278830727377;  // std dev = 1,018, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(H, B), publication(H, I), tempadvisedby(J, I) )
%   | | | then if ( publication(K, J), publication(K, L), tempadvisedby(M, L) )
%   | | | | then return 0.03230921870336137;  // std dev = 0,404, 27,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | | else return 0.22936543141369675;  // std dev = 0,152, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | | else if ( tempadvisedby(N, B) )
%   | | | | then return 0.14580176052049942;  // std dev = 0,295, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | | else if ( publication(P, A) )
%   | | | | | then return 0.09207623926868282;  // std dev = 0,838, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | | else return -0.08970506507360554;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), publication(D, E), professor(E) )
%   | | then if ( tempadvisedby(F, E), publication(G, E), publication(G, F) )
%   | | | then return 0.20733702365850862;  // std dev = 0,491, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else if ( tempadvisedby(H, B), tempadvisedby(I, E) )
%   | | | | then return 0.1239680430551622;  // std dev = 0,432, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | else if ( tempadvisedby(J, E), publication(K, J) )
%   | | | | | then return -0.23651662791399083;  // std dev = 0,027, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else return -0.028339307783788046;  // std dev = 0,417, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.1197555270925887;  // std dev = 0,302, 61,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=53 */
%   | | | else if ( tempadvisedby(M, B) )
%   | | | | then return 0.12127779618823052;  // std dev = 0,853, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | else return -0.0010005335059651368;  // std dev = 0,491, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.06842697784420267;  // std dev = 3,80e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.13400703000801106;  // std dev = 1,83e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then if ( tempadvisedby(F, B), publication(D, G), student(G) )
%   | | | then if ( publication(D, H), publication(E, H) )
%   | | | | then return 0.01380132414760469;  // std dev = 0,428, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | else return -0.1606534137650957;  // std dev = 0,872, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( publication(D, I), tempadvisedby(J, I) )
%   | | | | then if ( publication(K, J), publication(D, L), student(L) )
%   | | | | | then return 0.21832799127129113;  // std dev = 0,588, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else return 0.055216474793437866;  // std dev = 0,868, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | else return 0.009005873258866945;  // std dev = 0,518, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(M, B), publication(M, N), tempadvisedby(N, B) )
%   | | | then return -0.05305723931725477;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09877556170357485;  // std dev = 0,300, 68,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=58 */
%   else return -0.06419184008202626;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */


Predicates from source: ['advisedby(person,person).', 'tempadvisedby(person,person).', 'hasposition(person,faculty).', 'inphase(person,prequals).', 'student(person).', 'projectmember(project,person).', 'professor(person).', 'publication(title,person).'] 

Source structured tree: [['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,true,false,false,false': 'tempadvisedby(L, E)', 'true,false,true,false,false': 'tempadvisedby(I, E), publication(J, I), publication(K, B)', 'true,false': 'publication(D, A), publication(D, E), professor(E)', 'true,false,true,false': 'tempadvisedby(G, E), publication(H, E), publication(H, G)', 'true,false,true': 'projectmember(F, B)', 'true,false,false': 'publication(M, B)'}, {'true,true': [2.46e-07, 0, 41], 'true,false,true,false,true': [0.816, 1, 2], 'true,false,false,false': [0.462, 4, 9], 'true,false,false,true': [0.338, 8, 53], 'false': [7.6e-08, 91, 0], 'true,false,true,false,false,false,true': [0.894, 1, 4], 'true,false,true,false,false,true': [0.0, 5, 0], 'true,false,true,true': [2.11e-08, 0, 3], 'true,false,true,false,false,false,false': [0.866, 3, 1]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,true,false,false,false': 'tempadvisedby(L, E)', 'true,false,true,false,false': 'tempadvisedby(I, E), publication(J, I), publication(K, B)', 'true,false': 'publication(D, A), publication(D, E), professor(E)', 'true,false,true,false': 'tempadvisedby(G, E), inphase(G, H), inphase(A, H)', 'true,false,true': 'projectmember(F, B)', 'true,false,false': 'publication(M, A), tempadvisedby(N, B)'}, {'true,true': [0.0, 0, 41], 'true,false,true,false,true': [0.741, 1, 2], 'true,false,false,false': [0.349, 10, 59], 'true,false,false,true': [1.095, 2, 3], 'false': [0.0, 91, 0], 'true,false,true,false,false,false,true': [0.894, 1, 4], 'true,false,true,false,false,true': [0.083, 5, 0], 'true,false,true,true': [0.0, 0, 3], 'true,false,true,false,false,false,false': [0.866, 3, 1]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,false,false': 'projectmember(K, B)', 'true,false': 'publication(D, A), publication(D, E), professor(E)', 'true,false,false,false,false': 'tempadvisedby(L, B)', 'true,false,true,false': 'tempadvisedby(I, E)', 'true,false,true': 'publication(F, B), tempadvisedby(G, E), publication(H, G)', 'true,false,false': 'publication(J, B)'}, {'true,false,true,false,false': [0.866, 3, 1], 'true,true': [1.46e-07, 0, 41], 'true,false,true,false,true': [0.309, 1, 8], 'true,false,false,true': [0.334, 8, 53], 'true,false,false,false,true': [0.0, 0, 3], 'true,false,false,false,false,false': [0.495, 3, 4], 'true,false,true,true': [0.291, 6, 1], 'false': [6.99e-08, 91, 0], 'true,false,false,false,false,true': [0.816, 1, 2]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,true,false,false': 'publication(D, L), tempadvisedby(M, L)', 'true,false,true,false': 'publication(D, J), hasposition(J, K), hasposition(B, K)', 'true,false': 'publication(D, A), publication(E, B)', 'true,false,true,true': 'publication(D, G), tempadvisedby(H, G), publication(I, H)', 'true,false,true': 'tempadvisedby(F, B)', 'true,false,false': 'publication(N, B), tempadvisedby(P, B), publication(N, P)'}, {'true,true': [0.0, 0, 41], 'true,false,true,false,true': [0.911, 3, 2], 'true,false,false,false': [0.325, 10, 58], 'true,false,true,true,true': [0.068, 3, 0], 'true,false,false,true': [1.095, 2, 3], 'false': [5.58e-08, 91, 0], 'true,false,true,false,false,true': [0.655, 2, 1], 'true,false,true,false,false,false': [0.282, 0, 4], 'true,false,true,true,false': [1.144, 2, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,false,false': 'projectmember(M, B)', 'true,false,false,false,false,false': 'publication(R, A)', 'true,false,false,false,false': 'publication(N, A), publication(N, P), tempadvisedby(Q, P)', 'true,false': 'publication(D, A), tempadvisedby(E, B), publication(F, B)', 'true,false,true': 'publication(D, G), tempadvisedby(H, G), publication(I, H)', 'true,false,false': 'publication(J, B), publication(J, K), tempadvisedby(L, K)'}, {'true,true': [2.98e-08, 0, 41], 'true,false,false,false,false,false,false': [0.495, 4, 5], 'true,false,false,false,false,false,true': [0.615, 2, 1], 'true,false,false,true': [0.323, 9, 53], 'true,false,false,false,true': [0.078, 0, 6], 'false': [1.05e-08, 91, 0], 'true,false,true,true': [0.062, 3, 0], 'true,false,true,false': [1.144, 2, 4], 'true,false,false,false,false,true': [0.765, 2, 3]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,true,false': 'publication(D, I), hasposition(I, J), hasposition(B, J)', 'true,false,false,true': 'publication(M, B)', 'true,false': 'publication(D, A), publication(E, B)', 'true,false,true,true': 'publication(D, H), publication(E, H)', 'true,false,true': 'tempadvisedby(F, B), publication(E, G), student(G)', 'true,false,false': 'publication(K, B), publication(K, L), tempadvisedby(L, B)'}, {'true,false,true,false,false': [0.277, 2, 7], 'true,true': [0.0, 0, 41], 'true,false,true,false,true': [0.896, 3, 2], 'true,false,false,false': [3.16e-08, 91, 0], 'true,false,false,true,false': [0.387, 6, 14], 'true,false,true,true,true': [0.447, 2, 1], 'true,false,false,true,true': [0.276, 4, 44], 'true,false,true,true,false': [0.823, 3, 1]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,false,true,true,true,false': 'tempadvisedby(L, B)', 'true,false,false,true,true,true': 'publication(K, B)', 'true,false,false,true': 'inphase(A, H), publication(F, I), tempadvisedby(J, I)', 'true,false,false,true,true': 'publication(K, J)', 'true,false': 'publication(D, A), publication(D, E), professor(E)', 'true,false,false': 'publication(F, B), publication(F, G), inphase(G, H)'}, {'true,false,false,true,true,true,false,true': [1.162, 3, 2], 'true,true': [5.96e-08, 0, 41], 'true,false,false,true,true,true,false,false': [0.884, 1, 4], 'true,false,false,true,false': [0.165, 1, 20], 'true,false,false,true,true,false': [0.0, 0, 5], 'true,false,false,true,true,true,true': [0.418, 3, 9], 'false': [4.71e-08, 91, 0], 'true,false,false,false': [0.327, 4, 22], 'true,false,true': [0.329, 10, 10]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,false,false': 'tempadvisedby(N, B)', 'true,false,false,true': 'publication(K, J), publication(K, L), tempadvisedby(M, L)', 'true,false,false,false,false': 'publication(P, A)', 'true,false': 'publication(D, B), publication(E, A), tempadvisedby(F, B)', 'true,false,true': 'publication(E, G), professor(G)', 'true,false,false': 'publication(H, B), publication(H, I), tempadvisedby(J, I)'}, {'true,true': [0.0, 0, 41], 'true,false,false,true,false': [0.152, 1, 34], 'true,false,false,false,true': [0.295, 2, 9], 'true,false,true,false': [1.018, 2, 3], 'true,false,false,false,false,false': [1.225, 3, 3], 'true,false,false,false,false,true': [0.838, 3, 3], 'true,false,true,true': [0.445, 3, 1], 'false': [0.0, 91, 0], 'true,false,false,true,true': [0.404, 8, 19]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,true,false,false': 'tempadvisedby(J, E), publication(K, J)', 'true,false,false,false': 'tempadvisedby(M, B)', 'true,false': 'publication(D, A), publication(D, E), professor(E)', 'true,false,true,false': 'tempadvisedby(H, B), tempadvisedby(I, E)', 'true,false,true': 'tempadvisedby(F, E), publication(G, E), publication(G, F)', 'true,false,false': 'publication(L, B)'}, {'true,true': [0.0, 0, 41], 'true,false,true,false,false,false': [0.417, 4, 3], 'true,false,false,true': [0.302, 8, 53], 'false': [3.8e-08, 91, 0], 'true,false,false,false,true': [0.853, 1, 5], 'true,false,true,false,false,true': [0.027, 3, 0], 'true,false,false,false,false': [0.491, 3, 4], 'true,false,true,true': [0.491, 1, 5], 'true,false,true,false,true': [0.432, 2, 2]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false,true,false,true': 'publication(K, J), publication(D, L), student(L)', 'true,false,true,false': 'publication(D, I), tempadvisedby(J, I)', 'true,false': 'publication(D, B), publication(E, A)', 'true,false,true,true': 'publication(D, H), publication(E, H)', 'true,false,true': 'tempadvisedby(F, B), publication(D, G), student(G)', 'true,false,false': 'publication(M, B), publication(M, N), tempadvisedby(N, B)'}, {'true,false,true,false,false': [0.518, 2, 1], 'true,true': [1.83e-08, 0, 41], 'true,false,false,false': [0.3, 10, 58], 'true,false,false,true': [1.095, 2, 3], 'true,false,true,false,true,false': [0.868, 2, 4], 'true,false,true,true,false': [0.872, 3, 1], 'true,false,true,false,true,true': [0.588, 1, 4], 'false': [0.0, 91, 0], 'true,false,true,true,true': [0.428, 2, 1]}]] 



Best mapping found: ['professor(A) -> director(A)', 'tempadvisedby(A,B) -> workedunder(A,B)', 'inphase(A,B) -> movie(B,A)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'workedunder(L, E)', 'true,false,true,false,false': 'workedunder(I, E), movie(J, I), movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(G, E), movie(H, E), movie(H, G)', 'true,false,true': 'genre(B, F)', 'true,false,false': 'movie(M, B)'}, {'true,true': [2.46e-07, 0, 41], 'true,false,true,false,true': [0.816, 1, 2], 'true,false,false,false': [0.462, 4, 9], 'true,false,false,true': [0.338, 8, 53], 'true,false,true,false,false,false,true': [0.894, 1, 4], 'false': [7.6e-08, 91, 0], 'true,false,true,true': [2.11e-08, 0, 3], 'true,false,true,false,false,true': [0.0, 5, 0], 'true,false,true,false,false,false,false': [0.866, 3, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'workedunder(L, E)', 'true,false,true,false,false': 'workedunder(I, E), movie(J, I), movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(G, E), movie(H, G), movie(H, A)', 'true,false,true': 'genre(B, F)', 'true,false,false': 'movie(M, A), workedunder(N, B)'}, {'true,true': [0.0, 0, 41], 'true,false,true,false,true': [0.741, 1, 2], 'true,false,false,false': [0.349, 10, 59], 'true,false,false,true': [1.095, 2, 3], 'true,false,true,false,false,false,true': [0.894, 1, 4], 'false': [0.0, 91, 0], 'true,false,true,true': [0.0, 0, 3], 'true,false,true,false,false,true': [0.083, 5, 0], 'true,false,true,false,false,false,false': [0.866, 3, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'genre(B, K)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,false,false,false': 'workedunder(L, B)', 'true,false,true,false': 'workedunder(I, E)', 'true,false,true': 'movie(F, B), workedunder(G, E), movie(H, G)', 'true,false,false': 'movie(J, B)'}, {'true,false,true,false,false': [0.866, 3, 1], 'true,true': [1.46e-07, 0, 41], 'true,false,true,false,true': [0.309, 1, 8], 'true,false,true,true': [0.291, 6, 1], 'true,false,false,true': [0.334, 8, 53], 'true,false,false,false,true': [0.0, 0, 3], 'false': [6.99e-08, 91, 0], 'true,false,false,false,false,false': [0.495, 3, 4], 'true,false,false,false,false,true': [0.816, 1, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true,false,false': 'movie(D, L), workedunder(M, L)', 'true,false,true,false': 'movie(D, J), genre(J, K), genre(B, K)', 'true,false,true,true': 'movie(D, G), workedunder(H, G), movie(I, H)', 'true,false,true': 'workedunder(F, B)', 'true,false,false': 'movie(N, B), workedunder(P, B), movie(N, P)'}, {'true,true': [0.0, 0, 41], 'true,false,true,false,true': [0.911, 3, 2], 'true,false,false,false': [0.325, 10, 58], 'true,false,true,true,true': [0.068, 3, 0], 'true,false,false,true': [1.095, 2, 3], 'true,false,true,false,false,false': [0.282, 0, 4], 'false': [5.58e-08, 91, 0], 'true,false,true,false,false,true': [0.655, 2, 1], 'true,false,true,true,false': [1.144, 2, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'genre(B, M)', 'true,false,false,false,false,false': 'movie(R, A)', 'true,false,false,false,false': 'movie(N, A), movie(N, P), workedunder(Q, P)', 'true,false': 'movie(D, A), workedunder(E, B), movie(F, B)', 'true,false,true': 'movie(D, G), workedunder(H, G), movie(I, H)', 'true,false,false': 'movie(J, B), movie(J, K), workedunder(L, K)'}, {'true,true': [2.98e-08, 0, 41], 'true,false,false,false,false,false,false': [0.495, 4, 5], 'true,false,false,false,false,false,true': [0.615, 2, 1], 'true,false,false,true': [0.323, 9, 53], 'true,false,false,false,true': [0.078, 0, 6], 'false': [1.05e-08, 91, 0], 'true,false,true,true': [0.062, 3, 0], 'true,false,true,false': [1.144, 2, 4], 'true,false,false,false,false,true': [0.765, 2, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,false,true': 'movie(M, B)', 'true,false,true,false': 'movie(D, I), genre(I, J), genre(B, J)', 'true,false,true,true': 'movie(D, H), movie(E, H)', 'true,false,true': 'workedunder(F, B), movie(E, G), actor(G)', 'true,false,false': 'movie(K, B), movie(K, L), workedunder(L, B)'}, {'true,false,true,false,false': [0.277, 2, 7], 'true,true': [0.0, 0, 41], 'true,false,true,false,true': [0.896, 3, 2], 'true,false,false,false': [3.16e-08, 91, 0], 'true,false,false,true,false': [0.387, 6, 14], 'true,false,true,true,true': [0.447, 2, 1], 'true,false,true,true,false': [0.823, 3, 1], 'true,false,false,true,true': [0.276, 4, 44]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true,true,true,false': 'workedunder(L, B)', 'true,false,false,true': 'movie(H, A), movie(F, I), workedunder(J, I)', 'true,false,false,true,true': 'movie(K, J)', 'true,false,false,true,true,true': 'movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,false': 'movie(F, B), movie(F, G), movie(H, G)'}, {'true,false,false,true,true,true,false,true': [1.162, 3, 2], 'true,true': [5.96e-08, 0, 41], 'true,false,false,true,true,true,false,false': [0.884, 1, 4], 'true,false,false,true,false': [0.165, 1, 20], 'true,false,false,true,true,false': [0.0, 0, 5], 'true,false,false,true,true,true,true': [0.418, 3, 9], 'false': [4.71e-08, 91, 0], 'true,false,false,false': [0.327, 4, 22], 'true,false,true': [0.329, 10, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'workedunder(N, B)', 'true,false,false,true': 'movie(K, J), movie(K, L), workedunder(M, L)', 'true,false,false,false,false': 'movie(P, A)', 'true,false': 'movie(D, B), movie(E, A), workedunder(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'true,false,false': 'movie(H, B), movie(H, I), workedunder(J, I)'}, {'true,true': [0.0, 0, 41], 'true,false,true,true': [0.445, 3, 1], 'true,false,false,true,false': [0.152, 1, 34], 'true,false,false,false,true': [0.295, 2, 9], 'true,false,false,false,false,false': [1.225, 3, 3], 'false': [0.0, 91, 0], 'true,false,false,true,true': [0.404, 8, 19], 'true,false,true,false': [1.018, 2, 3], 'true,false,false,false,false,true': [0.838, 3, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'workedunder(J, E), movie(K, J)', 'true,false,false,false': 'workedunder(M, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(H, B), workedunder(I, E)', 'true,false,true': 'workedunder(F, E), movie(G, E), movie(G, F)', 'true,false,false': 'movie(L, B)'}, {'true,true': [0.0, 0, 41], 'true,false,true,false,false,false': [0.417, 4, 3], 'true,false,false,true': [0.302, 8, 53], 'true,false,true,false,true': [0.432, 2, 2], 'true,false,false,false,true': [0.853, 1, 5], 'false': [3.8e-08, 91, 0], 'true,false,false,false,false': [0.491, 3, 4], 'true,false,true,true': [0.491, 1, 5], 'true,false,true,false,false,true': [0.027, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,true': 'movie(K, J), movie(D, L), actor(L)', 'true,false,true': 'workedunder(F, B), movie(D, G), actor(G)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true,true': 'movie(D, H), movie(E, H)', 'true,false,true,false': 'movie(D, I), workedunder(J, I)', 'true,false,false': 'movie(M, B), movie(M, N), workedunder(N, B)'}, {'true,false,true,false,false': [0.518, 2, 1], 'true,true': [1.83e-08, 0, 41], 'true,false,false,false': [0.3, 10, 58], 'true,false,true,false,true,false': [0.868, 2, 4], 'true,false,false,true': [1.095, 2, 3], 'false': [0.0, 91, 0], 'true,false,true,true,true': [0.428, 2, 1], 'true,false,true,false,true,true': [0.588, 1, 4], 'true,false,true,true,false': [0.872, 3, 1]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- director(B), actor(A).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false,true,false,false,false;workedunder(L, E).;false;false', '0;true,false,true,false,false;workedunder(I, E), movie(J, I), movie(K, B).;false;true', '0;true,false;movie(D, A), movie(D, E), director(E).;true;true', '0;true,false,true,false;workedunder(G, E), movie(H, E), movie(H, G).;false;true', '0;true,false,true;genre(B, F).;false;true', '0;true,false,false;movie(M, B).;false;false', '1;;workedunder(A, B) :- director(B), actor(A).;true;false', '1;true;movie(C, B), movie(C, A).;false;true', '1;true,false,true,false,false,false;workedunder(L, E).;false;false', '1;true,false,true,false,false;workedunder(I, E), movie(J, I), movie(K, B).;false;true', '1;true,false;movie(D, A), movie(D, E), director(E).;true;true', '1;true,false,true,false;workedunder(G, E), movie(H, G), movie(H, A).;false;true', '1;true,false,true;genre(B, F).;false;true', '1;true,false,false;movie(M, A), workedunder(N, B).;false;false', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, B), movie(C, A).;false;true', '2;true,false,false,false;genre(B, K).;false;true', '2;true,false;movie(D, A), movie(D, E), director(E).;true;true', '2;true,false,false,false,false;workedunder(L, B).;false;false', '2;true,false,true,false;workedunder(I, E).;false;false', '2;true,false,true;movie(F, B), workedunder(G, E), movie(H, G).;false;true', '2;true,false,false;movie(J, B).;false;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B), movie(C, A).;false;true', '3;true,false;movie(D, A), movie(E, B).;true;true', '3;true,false,true,false,false;movie(D, L), workedunder(M, L).;false;false', '3;true,false,true,false;movie(D, J), genre(J, K), genre(B, K).;false;true', '3;true,false,true,true;movie(D, G), workedunder(H, G), movie(I, H).;false;false', '3;true,false,true;workedunder(F, B).;true;true', '3;true,false,false;movie(N, B), workedunder(P, B), movie(N, P).;false;false', '4;;workedunder(A, B) :- director(B), actor(A).;true;false', '4;true;movie(C, B), movie(C, A).;false;true', '4;true,false,false,false;genre(B, M).;false;true', '4;true,false,false,false,false,false;movie(R, A).;false;false', '4;true,false,false,false,false;movie(N, A), movie(N, P), workedunder(Q, P).;false;true', '4;true,false;movie(D, A), workedunder(E, B), movie(F, B).;true;true', '4;true,false,true;movie(D, G), workedunder(H, G), movie(I, H).;false;false', '4;true,false,false;movie(J, B), movie(J, K), workedunder(L, K).;false;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B), movie(C, A).;false;true', '5;true,false;movie(D, A), movie(E, B).;true;true', '5;true,false,false,true;movie(M, B).;false;false', '5;true,false,true,false;movie(D, I), genre(I, J), genre(B, J).;false;false', '5;true,false,true,true;movie(D, H), movie(E, H).;false;false', '5;true,false,true;workedunder(F, B), movie(E, G), actor(G).;true;true', '5;true,false,false;movie(K, B), movie(K, L), workedunder(L, B).;true;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;true', '6;true,false,false,true,true,true,false;workedunder(L, B).;false;false', '6;true,false,false,true;movie(H, A), movie(F, I), workedunder(J, I).;true;false', '6;true,false,false,true,true;movie(K, J).;true;false', '6;true,false,false,true,true,true;movie(K, B).;false;true', '6;true,false;movie(D, A), movie(D, E), director(E).;false;true', '6;true,false,false;movie(F, B), movie(F, G), movie(H, G).;true;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B), movie(C, A).;false;true', '7;true,false,false,false;workedunder(N, B).;false;true', '7;true,false,false,true;movie(K, J), movie(K, L), workedunder(M, L).;false;false', '7;true,false,false,false,false;movie(P, A).;false;false', '7;true,false;movie(D, B), movie(E, A), workedunder(F, B).;true;true', '7;true,false,true;movie(E, G), director(G).;false;false', '7;true,false,false;movie(H, B), movie(H, I), workedunder(J, I).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false,true,false,false;workedunder(J, E), movie(K, J).;false;false', '8;true,false,false,false;workedunder(M, B).;false;false', '8;true,false;movie(D, A), movie(D, E), director(E).;true;true', '8;true,false,true,false;workedunder(H, B), workedunder(I, E).;false;true', '8;true,false,true;workedunder(F, E), movie(G, E), movie(G, F).;false;true', '8;true,false,false;movie(L, B).;false;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;false', '9;true;movie(C, B), movie(C, A).;false;true', '9;true,false,true,false,true;movie(K, J), movie(D, L), actor(L).;false;false', '9;true,false,true;workedunder(F, B), movie(D, G), actor(G).;true;true', '9;true,false;movie(D, B), movie(E, A).;true;true', '9;true,false,true,true;movie(D, H), movie(E, H).;false;false', '9;true,false,true,false;movie(D, I), workedunder(J, I).;true;false', '9;true,false,false;movie(M, B), movie(M, N), workedunder(N, B).;false;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else if ( workedunder(G, E), movie(H, E), movie(H, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(I, E), movie(J, I), movie(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(L, E) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048793;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else if ( workedunder(G, E), movie(H, G), movie(H, A) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(I, E), movie(J, I), movie(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(L, E) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283912;  // std dev = 7,30e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( movie(F, B), workedunder(G, E), movie(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(I, E) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 1,03e-07, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( workedunder(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, G), genre(G, H), genre(B, H) )
%   | | | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else if ( movie(D, I), workedunder(J, I) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783641;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), workedunder(E, B), movie(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B), movie(G, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( genre(B, J) )
%   | | | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | | else if ( movie(K, A), movie(K, L), workedunder(M, L) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(N, A) )
%   | | | | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926079;  // std dev = 8,02e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( workedunder(F, B), movie(E, G), actor(G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, H), genre(H, I), genre(B, I) )
%   | | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 6,83e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109155;  // std dev = 7,74e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B), movie(E, A), workedunder(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B), movie(G, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(J, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(K, A) )
%   | | | | | then return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333722;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( workedunder(F, E), movie(G, E), movie(G, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(H, B), workedunder(I, E) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(J, E), movie(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 6,14e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( workedunder(F, B), movie(D, G), actor(G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, H), workedunder(I, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.06419184008202619;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.155 seconds
Total inference time: 0.736 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.736 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'workedunder(L, E)', 'true,false,true,false,false': 'workedunder(I, E), movie(J, I), movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(G, E), movie(H, E), movie(H, G)', 'true,false,true': 'genre(B, F)'}, {'true,true': [1.09e-06, 0, 178], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 159, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 11, 0], 'true,false,true,false,false,false,false': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'workedunder(L, E)', 'true,false,true,false,false': 'workedunder(I, E), movie(J, I), movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(G, E), movie(H, G), movie(H, A)', 'true,false,true': 'genre(B, F)'}, {'true,true': [0.0, 0, 178], 'true,false,true,false,true': [0.0, 0, 0], 'false': [7.3e-08, 159, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [5.27e-09, 11, 0], 'true,false,true,false,false,false,false': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false': 'workedunder(I, E)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true': 'movie(F, B), workedunder(G, E), movie(H, G)'}, {'true,false,true,false,false': [1.67e-08, 19, 0], 'true,true': [5.9e-07, 0, 178], 'true,false,true,false,true': [0.0, 0, 0], 'false': [1.03e-07, 159, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(D, I), workedunder(J, I)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true,false': 'movie(D, G), genre(G, H), genre(B, H)', 'true,false,true': 'workedunder(F, B)'}, {'true,true': [3.77e-07, 0, 178], 'true,false,true,false,false,false': [0.0, 14, 0], 'false': [0.0, 159, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'genre(B, J)', 'true,false,false,false,false,false': 'movie(N, A)', 'true,false,false,false,false': 'movie(K, A), movie(K, L), workedunder(M, L)', 'true,false': 'movie(D, A), workedunder(E, B), movie(F, B)', 'true,false,false': 'movie(G, B), movie(G, H), workedunder(I, H)'}, {'true,true': [3.58e-07, 0, 178], 'true,false,false,false,false,false,false': [0.0, 0, 0], 'true,false,false,false,false,false,true': [0.0, 8, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [0.0, 11, 0], 'false': [8.02e-08, 159, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,false,false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false': 'movie(D, H), genre(H, I), genre(B, I)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'workedunder(F, B), movie(E, G), actor(G)'}, {'true,false,true,false,false': [3.73e-09, 14, 0], 'true,true': [3.63e-07, 0, 178], 'true,false,true,false,true': [0.0, 5, 0], 'false': [6.83e-08, 159, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(D, E), director(E)'}, {'true,true': [3e-07, 0, 178], 'false': [7.74e-08, 159, 0], 'true,false,true': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'workedunder(J, B)', 'true,false,false,false,false': 'movie(K, A)', 'true,false': 'movie(D, B), movie(E, A), workedunder(F, B)', 'true,false,false': 'movie(G, B), movie(G, H), workedunder(I, H)'}, {'true,true': [0.0, 0, 178], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [0.0, 0, 0], 'false': [0.0, 159, 0], 'true,false,false,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,false,false,true': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'workedunder(J, E), movie(K, J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(H, B), workedunder(I, E)', 'true,false,true': 'workedunder(F, E), movie(G, E), movie(G, F)'}, {'true,true': [0.0, 0, 178], 'true,false,true,false,false,false': [0.0, 19, 0], 'false': [6.14e-08, 159, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false': 'movie(D, H), workedunder(I, H)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'workedunder(F, B), movie(D, G), actor(G)'}, {'true,false,true,false,false': [0.0, 19, 0], 'true,true': [7.6e-08, 0, 178], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 159, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false,true,false,false;workedunder(I, E), movie(J, I), movie(K, B).;false;false', '0;true,false;movie(D, A), movie(D, E), director(E).;true;false', '0;true,false,true,false;workedunder(G, E), movie(H, E), movie(H, G).;false;true', '0;true,false,true;genre(B, F).;false;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;false', '1;true;movie(C, B), movie(C, A).;false;true', '1;true,false,true,false,false;workedunder(I, E), movie(J, I), movie(K, B).;false;false', '1;true,false;movie(D, A), movie(D, E), director(E).;true;false', '1;true,false,true,false;workedunder(G, E), movie(H, G), movie(H, A).;false;true', '1;true,false,true;genre(B, F).;false;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, B), movie(C, A).;false;true', '2;true,false;movie(D, A), movie(D, E), director(E).;true;false', '2;true,false,true;movie(F, B), workedunder(G, E), movie(H, G).;false;false', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B), movie(C, A).;false;true', '3;true,false;movie(D, A), movie(E, B).;true;false', '3;true,false,true,false;movie(D, G), genre(G, H), genre(B, H).;false;false', '3;true,false,true;workedunder(F, B).;false;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;false', '4;true;movie(C, B), movie(C, A).;false;true', '4;true,false;movie(D, A), workedunder(E, B), movie(F, B).;false;false', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B), movie(C, A).;false;true', '5;true,false;movie(D, A), movie(E, B).;false;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B), movie(C, A).;false;true', '7;true,false;movie(D, B), movie(E, A), workedunder(F, B).;false;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false;movie(D, A), movie(D, E), director(E).;true;false', '8;true,false,true,false;workedunder(H, B), workedunder(I, E).;false;false', '8;true,false,true;workedunder(F, E), movie(G, E), movie(G, F).;false;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;false', '9;true;movie(C, B), movie(C, A).;false;true', '9;true,false;movie(D, B), movie(E, A).;true;false', '9;true,false,true;workedunder(F, B), movie(D, G), actor(G).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,false,false,false,true', 0), ('true,false,true,false,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #2: [('true,false,true,false,false,false,true', 0), ('true,false,true,false,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #3: [('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,false', 0)]
Tree #4: [('true,false,true,false,false,true', 0), ('true,false,true,true', 0), ('true,false,false', 0)]
Tree #5: [('true,false,false,true', 0), ('true,false,true', 0), ('true,false,false,false,false,false,false', 0), ('true,false,false,false,false,true', 0)]
Tree #6: [('true,false,true,true', 0), ('true,false,false', 0)]
Tree #7: [('true,false,false', 0)]
Tree #8: [('true,false,false,true', 0), ('true,false,false,false,false,false', 0), ('true,false,true', 0), ('true,false,false,false,true', 0)]
Tree #9: [('true,false,true,false,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,true', 0), ('true,false,false', 0)]
Tree #10: [('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,false', 0)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else if ( workedunder(G, E), movie(H, E), movie(H, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(I, E), movie(J, I), movie(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048793;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else if ( workedunder(G, E), movie(H, G), movie(H, A) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(I, E), movie(J, I), movie(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283912;  // std dev = 7,30e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( movie(F, B), workedunder(G, E), movie(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 1,03e-07, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( workedunder(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, G), genre(G, H), genre(B, H) )
%   | | | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return -0.10159632948783628;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783641;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), workedunder(E, B), movie(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.09269127618926079;  // std dev = 8,02e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 6,83e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07877675473109155;  // std dev = 7,74e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B), movie(E, A), workedunder(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07324622576333722;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( workedunder(F, E), movie(G, E), movie(G, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(H, B), workedunder(I, E) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 6,14e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( workedunder(F, B), movie(D, G), actor(G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 6,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.384 seconds
Total inference time: 0.605 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 8.879999999999999
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.623 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 5, Type: transfer, Total folds for small set: 1, Time: 00:33:01
{'CLL': -0.094637, 'Recall': 1.0, 'Learning time': 8.879999999999999, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 60000, 'Total time': 25.062662839889526, 'Generating mappings time': 2.5348901748657227, 'Finding best mapping': 19.965020656585693, 'Generating paths time': 2.5465869903564453, 'Knowledge compiling time': 0.016156673431396484}, 'Parameter Learning Results': {'CLL': -0.094637, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.623}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1418510649004879;  // std dev = 0,000, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1254446385283912;  // std dev = 7,60e-08, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360622;  // std dev = 9,88e-08, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783642;  // std dev = 0,000, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0926912761892608;  // std dev = 8,16e-08, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839682;  // std dev = 7,15e-08, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109158;  // std dev = 7,74e-08, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( director(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.07324622576333721;  // std dev = 0,000, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420265;  // std dev = 6,32e-08, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( actor(A) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06419184008202626;  // std dev = 0,000, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.547 seconds
Total inference time: 0.549 seconds
AUC ROC: 1.0


Dataset: uwcse,imdb, Run: 1, Fold: 5, Type: scratch, Total folds for small set: 1, Time: 00:33:07
{'CLL': -0.094637, 'Recall': 1.0, 'Learning time': 4.547, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.549}


Best mapping found: ['professor(A) -> director(A)', 'tempadvisedby(A,B) -> workedunder(A,B)', 'inphase(A,B) -> movie(B,A)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'workedunder(L, E)', 'true,false,true,false,false': 'workedunder(I, E), movie(J, I), movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(G, E), movie(H, E), movie(H, G)', 'true,false,true': 'genre(B, F)', 'true,false,false': 'movie(M, B)'}, {'true,true': [2.46e-07, 0, 41], 'true,false,true,false,true': [0.816, 1, 2], 'true,false,false,false': [0.462, 4, 9], 'true,false,false,true': [0.338, 8, 53], 'true,false,true,false,false,false,true': [0.894, 1, 4], 'false': [7.6e-08, 91, 0], 'true,false,true,true': [2.11e-08, 0, 3], 'true,false,true,false,false,true': [0.0, 5, 0], 'true,false,true,false,false,false,false': [0.866, 3, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'workedunder(L, E)', 'true,false,true,false,false': 'workedunder(I, E), movie(J, I), movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(G, E), movie(H, G), movie(H, A)', 'true,false,true': 'genre(B, F)', 'true,false,false': 'movie(M, A), workedunder(N, B)'}, {'true,true': [0.0, 0, 41], 'true,false,true,false,true': [0.741, 1, 2], 'true,false,false,false': [0.349, 10, 59], 'true,false,false,true': [1.095, 2, 3], 'true,false,true,false,false,false,true': [0.894, 1, 4], 'false': [0.0, 91, 0], 'true,false,true,true': [0.0, 0, 3], 'true,false,true,false,false,true': [0.083, 5, 0], 'true,false,true,false,false,false,false': [0.866, 3, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'genre(B, K)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,false,false,false': 'workedunder(L, B)', 'true,false,true,false': 'workedunder(I, E)', 'true,false,true': 'movie(F, B), workedunder(G, E), movie(H, G)', 'true,false,false': 'movie(J, B)'}, {'true,false,true,false,false': [0.866, 3, 1], 'true,true': [1.46e-07, 0, 41], 'true,false,true,false,true': [0.309, 1, 8], 'true,false,true,true': [0.291, 6, 1], 'true,false,false,true': [0.334, 8, 53], 'true,false,false,false,true': [0.0, 0, 3], 'false': [6.99e-08, 91, 0], 'true,false,false,false,false,false': [0.495, 3, 4], 'true,false,false,false,false,true': [0.816, 1, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true,false,false': 'movie(D, L), workedunder(M, L)', 'true,false,true,false': 'movie(D, J), genre(J, K), genre(B, K)', 'true,false,true,true': 'movie(D, G), workedunder(H, G), movie(I, H)', 'true,false,true': 'workedunder(F, B)', 'true,false,false': 'movie(N, B), workedunder(P, B), movie(N, P)'}, {'true,true': [0.0, 0, 41], 'true,false,true,false,true': [0.911, 3, 2], 'true,false,false,false': [0.325, 10, 58], 'true,false,true,true,true': [0.068, 3, 0], 'true,false,false,true': [1.095, 2, 3], 'true,false,true,false,false,false': [0.282, 0, 4], 'false': [5.58e-08, 91, 0], 'true,false,true,false,false,true': [0.655, 2, 1], 'true,false,true,true,false': [1.144, 2, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'genre(B, M)', 'true,false,false,false,false,false': 'movie(R, A)', 'true,false,false,false,false': 'movie(N, A), movie(N, P), workedunder(Q, P)', 'true,false': 'movie(D, A), workedunder(E, B), movie(F, B)', 'true,false,true': 'movie(D, G), workedunder(H, G), movie(I, H)', 'true,false,false': 'movie(J, B), movie(J, K), workedunder(L, K)'}, {'true,true': [2.98e-08, 0, 41], 'true,false,false,false,false,false,false': [0.495, 4, 5], 'true,false,false,false,false,false,true': [0.615, 2, 1], 'true,false,false,true': [0.323, 9, 53], 'true,false,false,false,true': [0.078, 0, 6], 'false': [1.05e-08, 91, 0], 'true,false,true,true': [0.062, 3, 0], 'true,false,true,false': [1.144, 2, 4], 'true,false,false,false,false,true': [0.765, 2, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,false,true': 'movie(M, B)', 'true,false,true,false': 'movie(D, I), genre(I, J), genre(B, J)', 'true,false,true,true': 'movie(D, H), movie(E, H)', 'true,false,true': 'workedunder(F, B), movie(E, G), actor(G)', 'true,false,false': 'movie(K, B), movie(K, L), workedunder(L, B)'}, {'true,false,true,false,false': [0.277, 2, 7], 'true,true': [0.0, 0, 41], 'true,false,true,false,true': [0.896, 3, 2], 'true,false,false,false': [3.16e-08, 91, 0], 'true,false,false,true,false': [0.387, 6, 14], 'true,false,true,true,true': [0.447, 2, 1], 'true,false,true,true,false': [0.823, 3, 1], 'true,false,false,true,true': [0.276, 4, 44]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true,true,true,false': 'workedunder(L, B)', 'true,false,false,true': 'movie(H, A), movie(F, I), workedunder(J, I)', 'true,false,false,true,true': 'movie(K, J)', 'true,false,false,true,true,true': 'movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,false': 'movie(F, B), movie(F, G), movie(H, G)'}, {'true,false,false,true,true,true,false,true': [1.162, 3, 2], 'true,true': [5.96e-08, 0, 41], 'true,false,false,true,true,true,false,false': [0.884, 1, 4], 'true,false,false,true,false': [0.165, 1, 20], 'true,false,false,true,true,false': [0.0, 0, 5], 'true,false,false,true,true,true,true': [0.418, 3, 9], 'false': [4.71e-08, 91, 0], 'true,false,false,false': [0.327, 4, 22], 'true,false,true': [0.329, 10, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'workedunder(N, B)', 'true,false,false,true': 'movie(K, J), movie(K, L), workedunder(M, L)', 'true,false,false,false,false': 'movie(P, A)', 'true,false': 'movie(D, B), movie(E, A), workedunder(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'true,false,false': 'movie(H, B), movie(H, I), workedunder(J, I)'}, {'true,true': [0.0, 0, 41], 'true,false,true,true': [0.445, 3, 1], 'true,false,false,true,false': [0.152, 1, 34], 'true,false,false,false,true': [0.295, 2, 9], 'true,false,false,false,false,false': [1.225, 3, 3], 'false': [0.0, 91, 0], 'true,false,false,true,true': [0.404, 8, 19], 'true,false,true,false': [1.018, 2, 3], 'true,false,false,false,false,true': [0.838, 3, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'workedunder(J, E), movie(K, J)', 'true,false,false,false': 'workedunder(M, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(H, B), workedunder(I, E)', 'true,false,true': 'workedunder(F, E), movie(G, E), movie(G, F)', 'true,false,false': 'movie(L, B)'}, {'true,true': [0.0, 0, 41], 'true,false,true,false,false,false': [0.417, 4, 3], 'true,false,false,true': [0.302, 8, 53], 'true,false,true,false,true': [0.432, 2, 2], 'true,false,false,false,true': [0.853, 1, 5], 'false': [3.8e-08, 91, 0], 'true,false,false,false,false': [0.491, 3, 4], 'true,false,true,true': [0.491, 1, 5], 'true,false,true,false,false,true': [0.027, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,true': 'movie(K, J), movie(D, L), actor(L)', 'true,false,true': 'workedunder(F, B), movie(D, G), actor(G)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true,true': 'movie(D, H), movie(E, H)', 'true,false,true,false': 'movie(D, I), workedunder(J, I)', 'true,false,false': 'movie(M, B), movie(M, N), workedunder(N, B)'}, {'true,false,true,false,false': [0.518, 2, 1], 'true,true': [1.83e-08, 0, 41], 'true,false,false,false': [0.3, 10, 58], 'true,false,true,false,true,false': [0.868, 2, 4], 'true,false,false,true': [1.095, 2, 3], 'false': [0.0, 91, 0], 'true,false,true,true,true': [0.428, 2, 1], 'true,false,true,false,true,true': [0.588, 1, 4], 'true,false,true,true,false': [0.872, 3, 1]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- director(B), actor(A).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false,true,false,false,false;workedunder(L, E).;false;false', '0;true,false,true,false,false;workedunder(I, E), movie(J, I), movie(K, B).;false;true', '0;true,false;movie(D, A), movie(D, E), director(E).;true;true', '0;true,false,true,false;workedunder(G, E), movie(H, E), movie(H, G).;false;true', '0;true,false,true;genre(B, F).;false;true', '0;true,false,false;movie(M, B).;false;false', '1;;workedunder(A, B) :- director(B), actor(A).;true;false', '1;true;movie(C, B), movie(C, A).;false;true', '1;true,false,true,false,false,false;workedunder(L, E).;false;false', '1;true,false,true,false,false;workedunder(I, E), movie(J, I), movie(K, B).;false;true', '1;true,false;movie(D, A), movie(D, E), director(E).;true;true', '1;true,false,true,false;workedunder(G, E), movie(H, G), movie(H, A).;false;true', '1;true,false,true;genre(B, F).;false;true', '1;true,false,false;movie(M, A), workedunder(N, B).;false;false', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, B), movie(C, A).;false;true', '2;true,false,false,false;genre(B, K).;false;true', '2;true,false;movie(D, A), movie(D, E), director(E).;true;true', '2;true,false,false,false,false;workedunder(L, B).;false;false', '2;true,false,true,false;workedunder(I, E).;false;false', '2;true,false,true;movie(F, B), workedunder(G, E), movie(H, G).;false;true', '2;true,false,false;movie(J, B).;false;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B), movie(C, A).;false;true', '3;true,false;movie(D, A), movie(E, B).;true;true', '3;true,false,true,false,false;movie(D, L), workedunder(M, L).;false;false', '3;true,false,true,false;movie(D, J), genre(J, K), genre(B, K).;false;true', '3;true,false,true,true;movie(D, G), workedunder(H, G), movie(I, H).;false;false', '3;true,false,true;workedunder(F, B).;true;true', '3;true,false,false;movie(N, B), workedunder(P, B), movie(N, P).;false;false', '4;;workedunder(A, B) :- director(B), actor(A).;true;false', '4;true;movie(C, B), movie(C, A).;false;true', '4;true,false,false,false;genre(B, M).;false;true', '4;true,false,false,false,false,false;movie(R, A).;false;false', '4;true,false,false,false,false;movie(N, A), movie(N, P), workedunder(Q, P).;false;true', '4;true,false;movie(D, A), workedunder(E, B), movie(F, B).;true;true', '4;true,false,true;movie(D, G), workedunder(H, G), movie(I, H).;false;false', '4;true,false,false;movie(J, B), movie(J, K), workedunder(L, K).;false;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B), movie(C, A).;false;true', '5;true,false;movie(D, A), movie(E, B).;true;true', '5;true,false,false,true;movie(M, B).;false;false', '5;true,false,true,false;movie(D, I), genre(I, J), genre(B, J).;false;false', '5;true,false,true,true;movie(D, H), movie(E, H).;false;false', '5;true,false,true;workedunder(F, B), movie(E, G), actor(G).;true;true', '5;true,false,false;movie(K, B), movie(K, L), workedunder(L, B).;true;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;true', '6;true,false,false,true,true,true,false;workedunder(L, B).;false;false', '6;true,false,false,true;movie(H, A), movie(F, I), workedunder(J, I).;true;false', '6;true,false,false,true,true;movie(K, J).;true;false', '6;true,false,false,true,true,true;movie(K, B).;false;true', '6;true,false;movie(D, A), movie(D, E), director(E).;false;true', '6;true,false,false;movie(F, B), movie(F, G), movie(H, G).;true;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B), movie(C, A).;false;true', '7;true,false,false,false;workedunder(N, B).;false;true', '7;true,false,false,true;movie(K, J), movie(K, L), workedunder(M, L).;false;false', '7;true,false,false,false,false;movie(P, A).;false;false', '7;true,false;movie(D, B), movie(E, A), workedunder(F, B).;true;true', '7;true,false,true;movie(E, G), director(G).;false;false', '7;true,false,false;movie(H, B), movie(H, I), workedunder(J, I).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false,true,false,false;workedunder(J, E), movie(K, J).;false;false', '8;true,false,false,false;workedunder(M, B).;false;false', '8;true,false;movie(D, A), movie(D, E), director(E).;true;true', '8;true,false,true,false;workedunder(H, B), workedunder(I, E).;false;true', '8;true,false,true;workedunder(F, E), movie(G, E), movie(G, F).;false;true', '8;true,false,false;movie(L, B).;false;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;false', '9;true;movie(C, B), movie(C, A).;false;true', '9;true,false,true,false,true;movie(K, J), movie(D, L), actor(L).;false;false', '9;true,false,true;workedunder(F, B), movie(D, G), actor(G).;true;true', '9;true,false;movie(D, B), movie(E, A).;true;true', '9;true,false,true,true;movie(D, H), movie(E, H).;false;false', '9;true,false,true,false;movie(D, I), workedunder(J, I).;true;false', '9;true,false,false;movie(M, B), movie(M, N), workedunder(N, B).;false;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099509;  // std dev = 1,07e-06, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else if ( workedunder(G, E), movie(H, E), movie(H, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(I, E), movie(J, I), movie(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(L, E) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048827;  // std dev = 0,000, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109572;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else if ( workedunder(G, E), movie(H, G), movie(H, A) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(I, E), movie(J, I), movie(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(L, E) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0,000, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 5,84e-07, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( movie(F, B), workedunder(G, E), movie(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(I, E) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360649;  // std dev = 2,11e-08, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831047;  // std dev = 8,43e-08, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( workedunder(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, G), genre(G, H), genre(B, H) )
%   | | | | then return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | | else if ( movie(D, I), workedunder(J, I) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.10159632948783633;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783649;  // std dev = 0,000, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601495;  // std dev = 3,42e-07, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), workedunder(E, B), movie(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B), movie(G, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( genre(B, J) )
%   | | | | then return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | | else if ( movie(K, A), movie(K, L), workedunder(M, L) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(N, A) )
%   | | | | | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926064;  // std dev = 8,43e-08, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25517224256948823;  // std dev = 2,80e-07, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( workedunder(F, B), movie(E, G), actor(G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, H), genre(H, I), genre(B, I) )
%   | | | | then return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 7,30e-08, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253492;  // std dev = 3,01e-07, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310915;  // std dev = 8,16e-08, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527764;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, B), movie(E, A), workedunder(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B), movie(G, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(J, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(K, A) )
%   | | | | | then return -0.07324622576333704;  // std dev = 7,45e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333673;  // std dev = 1,03e-07, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936717;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( workedunder(F, E), movie(G, E), movie(G, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(H, B), workedunder(I, E) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(J, E), movie(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 7,60e-08, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801098;  // std dev = 1,46e-07, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( workedunder(F, B), movie(D, G), actor(G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, H), workedunder(I, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.06419184008202622;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.192 seconds
Total inference time: 0.598 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.598 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'workedunder(L, E)', 'true,false,true,false,false': 'workedunder(I, E), movie(J, I), movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(G, E), movie(H, E), movie(H, G)', 'true,false,true': 'genre(B, F)'}, {'true,true': [1.07e-06, 0, 223], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 193, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 23, 0], 'true,false,true,false,false,false,false': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'workedunder(L, E)', 'true,false,true,false,false': 'workedunder(I, E), movie(J, I), movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(G, E), movie(H, G), movie(H, A)', 'true,false,true': 'genre(B, F)'}, {'true,true': [0.0, 0, 223], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 193, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 23, 0], 'true,false,true,false,false,false,false': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false': 'workedunder(I, E)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true': 'movie(F, B), workedunder(G, E), movie(H, G)'}, {'true,false,true,false,false': [0.0, 30, 0], 'true,true': [5.84e-07, 0, 223], 'true,false,true,false,true': [0.0, 0, 0], 'false': [2.11e-08, 193, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(D, I), workedunder(J, I)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true,false': 'movie(D, G), genre(G, H), genre(B, H)', 'true,false,true': 'workedunder(F, B)'}, {'true,true': [8.43e-08, 0, 223], 'true,false,true,false,false,false': [0.0, 14, 0], 'false': [0.0, 193, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 16, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'genre(B, J)', 'true,false,false,false,false,false': 'movie(N, A)', 'true,false,false,false,false': 'movie(K, A), movie(K, L), workedunder(M, L)', 'true,false': 'movie(D, A), workedunder(E, B), movie(F, B)', 'true,false,false': 'movie(G, B), movie(G, H), workedunder(I, H)'}, {'true,true': [3.42e-07, 0, 223], 'true,false,false,false,false,false,false': [0.0, 0, 0], 'true,false,false,false,false,false,true': [0.0, 7, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [1.18e-08, 23, 0], 'false': [8.43e-08, 193, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,false,false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false': 'movie(D, H), genre(H, I), genre(B, I)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'workedunder(F, B), movie(E, G), actor(G)'}, {'true,false,true,false,false': [3.73e-09, 14, 0], 'true,true': [2.8e-07, 0, 223], 'true,false,true,false,true': [1.05e-08, 16, 0], 'false': [7.3e-08, 193, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(D, E), director(E)'}, {'true,true': [3.01e-07, 0, 223], 'false': [8.16e-08, 193, 0], 'true,false,true': [0.0, 30, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'workedunder(J, B)', 'true,false,false,false,false': 'movie(K, A)', 'true,false': 'movie(D, B), movie(E, A), workedunder(F, B)', 'true,false,false': 'movie(G, B), movie(G, H), workedunder(I, H)'}, {'true,true': [0.0, 0, 223], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [0.0, 0, 0], 'false': [1.03e-07, 193, 0], 'true,false,false,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,false,false,true': [7.45e-09, 30, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'workedunder(J, E), movie(K, J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(H, B), workedunder(I, E)', 'true,false,true': 'workedunder(F, E), movie(G, E), movie(G, F)'}, {'true,true': [0.0, 0, 223], 'true,false,true,false,false,false': [0.0, 30, 0], 'false': [7.6e-08, 193, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false': 'movie(D, H), workedunder(I, H)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'workedunder(F, B), movie(D, G), actor(G)'}, {'true,false,true,false,false': [0.0, 30, 0], 'true,true': [1.46e-07, 0, 223], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 193, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false,true,false,false;workedunder(I, E), movie(J, I), movie(K, B).;false;false', '0;true,false;movie(D, A), movie(D, E), director(E).;true;false', '0;true,false,true,false;workedunder(G, E), movie(H, E), movie(H, G).;false;true', '0;true,false,true;genre(B, F).;false;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;false', '1;true;movie(C, B), movie(C, A).;false;true', '1;true,false,true,false,false;workedunder(I, E), movie(J, I), movie(K, B).;false;false', '1;true,false;movie(D, A), movie(D, E), director(E).;true;false', '1;true,false,true,false;workedunder(G, E), movie(H, G), movie(H, A).;false;true', '1;true,false,true;genre(B, F).;false;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, B), movie(C, A).;false;true', '2;true,false;movie(D, A), movie(D, E), director(E).;true;false', '2;true,false,true;movie(F, B), workedunder(G, E), movie(H, G).;false;false', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B), movie(C, A).;false;true', '3;true,false;movie(D, A), movie(E, B).;true;false', '3;true,false,true,false;movie(D, G), genre(G, H), genre(B, H).;false;false', '3;true,false,true;workedunder(F, B).;false;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;false', '4;true;movie(C, B), movie(C, A).;false;true', '4;true,false;movie(D, A), workedunder(E, B), movie(F, B).;false;false', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B), movie(C, A).;false;true', '5;true,false;movie(D, A), movie(E, B).;false;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B), movie(C, A).;false;true', '7;true,false;movie(D, B), movie(E, A), workedunder(F, B).;false;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false;movie(D, A), movie(D, E), director(E).;true;false', '8;true,false,true,false;workedunder(H, B), workedunder(I, E).;false;false', '8;true,false,true;workedunder(F, E), movie(G, E), movie(G, F).;false;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;false', '9;true;movie(C, B), movie(C, A).;false;true', '9;true,false;movie(D, B), movie(E, A).;true;false', '9;true,false,true;workedunder(F, B), movie(D, G), actor(G).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,false,false,false,true', 0), ('true,false,true,false,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #2: [('true,false,true,false,false,false,true', 0), ('true,false,true,false,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #3: [('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,false', 0)]
Tree #4: [('true,false,true,false,false,true', 0), ('true,false,true,true', 0), ('true,false,false', 0)]
Tree #5: [('true,false,false,true', 0), ('true,false,true', 0), ('true,false,false,false,false,false,false', 0), ('true,false,false,false,false,true', 0)]
Tree #6: [('true,false,true,true', 0), ('true,false,false', 0)]
Tree #7: [('true,false,false', 0)]
Tree #8: [('true,false,false,true', 0), ('true,false,false,false,false,false', 0), ('true,false,true', 0), ('true,false,false,false,true', 0)]
Tree #9: [('true,false,true,false,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,true', 0), ('true,false,false', 0)]
Tree #10: [('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,false', 0)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099509;  // std dev = 1,07e-06, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else if ( workedunder(G, E), movie(H, E), movie(H, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(I, E), movie(J, I), movie(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048827;  // std dev = 0,000, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109572;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else if ( workedunder(G, E), movie(H, G), movie(H, A) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(I, E), movie(J, I), movie(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0,000, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 5,84e-07, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( movie(F, B), workedunder(G, E), movie(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360649;  // std dev = 2,11e-08, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831047;  // std dev = 8,43e-08, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( workedunder(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, G), genre(G, H), genre(B, H) )
%   | | | | then return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | | else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783649;  // std dev = 0,000, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601495;  // std dev = 3,42e-07, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), workedunder(E, B), movie(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926097;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.09269127618926064;  // std dev = 8,43e-08, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25517224256948823;  // std dev = 2,80e-07, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.0851847513883968;  // std dev = 2,04e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 7,30e-08, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253492;  // std dev = 3,01e-07, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.0787767547310915;  // std dev = 8,16e-08, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527764;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, B), movie(E, A), workedunder(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 7,45e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07324622576333673;  // std dev = 1,03e-07, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936717;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( workedunder(F, E), movie(G, E), movie(G, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(H, B), workedunder(I, E) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 7,60e-08, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801098;  // std dev = 1,46e-07, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( workedunder(F, B), movie(D, G), actor(G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.0 seconds
Total inference time: 0.589 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 12.379000000000001
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.605 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 5, Type: transfer, Total folds for small set: 2, Time: 00:33:47
{'CLL': -0.094637, 'Recall': 1.0, 'Learning time': 12.379000000000001, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 60000, 'Total time': 26.1761372089386, 'Generating mappings time': 2.5152053833007812, 'Finding best mapping': 21.03082776069641, 'Generating paths time': 2.584041118621826, 'Knowledge compiling time': 0.046054840087890625}, 'Parameter Learning Results': {'CLL': -0.094637, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.605}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995113;  // std dev = 4,13e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.8343394112899867;  // std dev = 0,152, 126,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=123 */
%   else return -0.14185106490048818;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.7004441928528983;  // std dev = 0,152, 126,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=123 */
%   else return -0.12544463852839147;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462834;  // std dev = 4,21e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.5421086385241481;  // std dev = 0,152, 126,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=123 */
%   else return -0.11231637819360647;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.4175135841583098;  // std dev = 2,46e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.4074063244606947;  // std dev = 0,152, 126,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=123 */
%   else return -0.10159632948783648;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601504;  // std dev = 4,21e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else if ( director(A) )
%   | | then return -0.6646974167866879;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3353025832133126;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.0926912761892607;  // std dev = 8,02e-08, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694897;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.24677164104534696;  // std dev = 0,117, 126,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=123 */
%   else return -0.08518475138839678;  // std dev = 7,60e-08, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253562;  // std dev = 1,37e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.20116258793935085;  // std dev = 0,120, 126,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=123 */
%   else return -0.07877675473109154;  // std dev = 8,02e-08, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17709649774527725;  // std dev = 6,66e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.16821947130149;  // std dev = 0,122, 126,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=123 */
%   else return -0.07324622576333677;  // std dev = 1,01e-07, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367133;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.1435950350023899;  // std dev = 0,125, 126,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=123 */
%   else return -0.06842697784420264;  // std dev = 7,60e-08, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.13400703000801115;  // std dev = 3,65e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.1246233473916665;  // std dev = 0,127, 126,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=123 */
%   else return -0.06419184008202626;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097556
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.919 seconds
Total inference time: 0.538 seconds
AUC ROC: 1.0


Dataset: uwcse,imdb, Run: 1, Fold: 5, Type: scratch, Total folds for small set: 2, Time: 00:33:56
{'CLL': -0.097556, 'Recall': 1.0, 'Learning time': 7.919, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.538}


Best mapping found: ['professor(A) -> director(A)', 'tempadvisedby(A,B) -> workedunder(A,B)', 'inphase(A,B) -> movie(B,A)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'workedunder(L, E)', 'true,false,true,false,false': 'workedunder(I, E), movie(J, I), movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(G, E), movie(H, E), movie(H, G)', 'true,false,true': 'genre(B, F)', 'true,false,false': 'movie(M, B)'}, {'true,true': [2.46e-07, 0, 41], 'true,false,true,false,true': [0.816, 1, 2], 'true,false,false,false': [0.462, 4, 9], 'true,false,false,true': [0.338, 8, 53], 'true,false,true,false,false,false,true': [0.894, 1, 4], 'false': [7.6e-08, 91, 0], 'true,false,true,true': [2.11e-08, 0, 3], 'true,false,true,false,false,true': [0.0, 5, 0], 'true,false,true,false,false,false,false': [0.866, 3, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'workedunder(L, E)', 'true,false,true,false,false': 'workedunder(I, E), movie(J, I), movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(G, E), movie(H, G), movie(H, A)', 'true,false,true': 'genre(B, F)', 'true,false,false': 'movie(M, A), workedunder(N, B)'}, {'true,true': [0.0, 0, 41], 'true,false,true,false,true': [0.741, 1, 2], 'true,false,false,false': [0.349, 10, 59], 'true,false,false,true': [1.095, 2, 3], 'true,false,true,false,false,false,true': [0.894, 1, 4], 'false': [0.0, 91, 0], 'true,false,true,true': [0.0, 0, 3], 'true,false,true,false,false,true': [0.083, 5, 0], 'true,false,true,false,false,false,false': [0.866, 3, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'genre(B, K)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,false,false,false': 'workedunder(L, B)', 'true,false,true,false': 'workedunder(I, E)', 'true,false,true': 'movie(F, B), workedunder(G, E), movie(H, G)', 'true,false,false': 'movie(J, B)'}, {'true,false,true,false,false': [0.866, 3, 1], 'true,true': [1.46e-07, 0, 41], 'true,false,true,false,true': [0.309, 1, 8], 'true,false,true,true': [0.291, 6, 1], 'true,false,false,true': [0.334, 8, 53], 'true,false,false,false,true': [0.0, 0, 3], 'false': [6.99e-08, 91, 0], 'true,false,false,false,false,false': [0.495, 3, 4], 'true,false,false,false,false,true': [0.816, 1, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true,false,false': 'movie(D, L), workedunder(M, L)', 'true,false,true,false': 'movie(D, J), genre(J, K), genre(B, K)', 'true,false,true,true': 'movie(D, G), workedunder(H, G), movie(I, H)', 'true,false,true': 'workedunder(F, B)', 'true,false,false': 'movie(N, B), workedunder(P, B), movie(N, P)'}, {'true,true': [0.0, 0, 41], 'true,false,true,false,true': [0.911, 3, 2], 'true,false,false,false': [0.325, 10, 58], 'true,false,true,true,true': [0.068, 3, 0], 'true,false,false,true': [1.095, 2, 3], 'true,false,true,false,false,false': [0.282, 0, 4], 'false': [5.58e-08, 91, 0], 'true,false,true,false,false,true': [0.655, 2, 1], 'true,false,true,true,false': [1.144, 2, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'genre(B, M)', 'true,false,false,false,false,false': 'movie(R, A)', 'true,false,false,false,false': 'movie(N, A), movie(N, P), workedunder(Q, P)', 'true,false': 'movie(D, A), workedunder(E, B), movie(F, B)', 'true,false,true': 'movie(D, G), workedunder(H, G), movie(I, H)', 'true,false,false': 'movie(J, B), movie(J, K), workedunder(L, K)'}, {'true,true': [2.98e-08, 0, 41], 'true,false,false,false,false,false,false': [0.495, 4, 5], 'true,false,false,false,false,false,true': [0.615, 2, 1], 'true,false,false,true': [0.323, 9, 53], 'true,false,false,false,true': [0.078, 0, 6], 'false': [1.05e-08, 91, 0], 'true,false,true,true': [0.062, 3, 0], 'true,false,true,false': [1.144, 2, 4], 'true,false,false,false,false,true': [0.765, 2, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,false,true': 'movie(M, B)', 'true,false,true,false': 'movie(D, I), genre(I, J), genre(B, J)', 'true,false,true,true': 'movie(D, H), movie(E, H)', 'true,false,true': 'workedunder(F, B), movie(E, G), actor(G)', 'true,false,false': 'movie(K, B), movie(K, L), workedunder(L, B)'}, {'true,false,true,false,false': [0.277, 2, 7], 'true,true': [0.0, 0, 41], 'true,false,true,false,true': [0.896, 3, 2], 'true,false,false,false': [3.16e-08, 91, 0], 'true,false,false,true,false': [0.387, 6, 14], 'true,false,true,true,true': [0.447, 2, 1], 'true,false,true,true,false': [0.823, 3, 1], 'true,false,false,true,true': [0.276, 4, 44]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true,true,true,false': 'workedunder(L, B)', 'true,false,false,true': 'movie(H, A), movie(F, I), workedunder(J, I)', 'true,false,false,true,true': 'movie(K, J)', 'true,false,false,true,true,true': 'movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,false': 'movie(F, B), movie(F, G), movie(H, G)'}, {'true,false,false,true,true,true,false,true': [1.162, 3, 2], 'true,true': [5.96e-08, 0, 41], 'true,false,false,true,true,true,false,false': [0.884, 1, 4], 'true,false,false,true,false': [0.165, 1, 20], 'true,false,false,true,true,false': [0.0, 0, 5], 'true,false,false,true,true,true,true': [0.418, 3, 9], 'false': [4.71e-08, 91, 0], 'true,false,false,false': [0.327, 4, 22], 'true,false,true': [0.329, 10, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'workedunder(N, B)', 'true,false,false,true': 'movie(K, J), movie(K, L), workedunder(M, L)', 'true,false,false,false,false': 'movie(P, A)', 'true,false': 'movie(D, B), movie(E, A), workedunder(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'true,false,false': 'movie(H, B), movie(H, I), workedunder(J, I)'}, {'true,true': [0.0, 0, 41], 'true,false,true,true': [0.445, 3, 1], 'true,false,false,true,false': [0.152, 1, 34], 'true,false,false,false,true': [0.295, 2, 9], 'true,false,false,false,false,false': [1.225, 3, 3], 'false': [0.0, 91, 0], 'true,false,false,true,true': [0.404, 8, 19], 'true,false,true,false': [1.018, 2, 3], 'true,false,false,false,false,true': [0.838, 3, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'workedunder(J, E), movie(K, J)', 'true,false,false,false': 'workedunder(M, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(H, B), workedunder(I, E)', 'true,false,true': 'workedunder(F, E), movie(G, E), movie(G, F)', 'true,false,false': 'movie(L, B)'}, {'true,true': [0.0, 0, 41], 'true,false,true,false,false,false': [0.417, 4, 3], 'true,false,false,true': [0.302, 8, 53], 'true,false,true,false,true': [0.432, 2, 2], 'true,false,false,false,true': [0.853, 1, 5], 'false': [3.8e-08, 91, 0], 'true,false,false,false,false': [0.491, 3, 4], 'true,false,true,true': [0.491, 1, 5], 'true,false,true,false,false,true': [0.027, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,true': 'movie(K, J), movie(D, L), actor(L)', 'true,false,true': 'workedunder(F, B), movie(D, G), actor(G)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true,true': 'movie(D, H), movie(E, H)', 'true,false,true,false': 'movie(D, I), workedunder(J, I)', 'true,false,false': 'movie(M, B), movie(M, N), workedunder(N, B)'}, {'true,false,true,false,false': [0.518, 2, 1], 'true,true': [1.83e-08, 0, 41], 'true,false,false,false': [0.3, 10, 58], 'true,false,true,false,true,false': [0.868, 2, 4], 'true,false,false,true': [1.095, 2, 3], 'false': [0.0, 91, 0], 'true,false,true,true,true': [0.428, 2, 1], 'true,false,true,false,true,true': [0.588, 1, 4], 'true,false,true,true,false': [0.872, 3, 1]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- director(B), actor(A).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false,true,false,false,false;workedunder(L, E).;false;false', '0;true,false,true,false,false;workedunder(I, E), movie(J, I), movie(K, B).;false;true', '0;true,false;movie(D, A), movie(D, E), director(E).;true;true', '0;true,false,true,false;workedunder(G, E), movie(H, E), movie(H, G).;false;true', '0;true,false,true;genre(B, F).;false;true', '0;true,false,false;movie(M, B).;false;false', '1;;workedunder(A, B) :- director(B), actor(A).;true;false', '1;true;movie(C, B), movie(C, A).;false;true', '1;true,false,true,false,false,false;workedunder(L, E).;false;false', '1;true,false,true,false,false;workedunder(I, E), movie(J, I), movie(K, B).;false;true', '1;true,false;movie(D, A), movie(D, E), director(E).;true;true', '1;true,false,true,false;workedunder(G, E), movie(H, G), movie(H, A).;false;true', '1;true,false,true;genre(B, F).;false;true', '1;true,false,false;movie(M, A), workedunder(N, B).;false;false', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, B), movie(C, A).;false;true', '2;true,false,false,false;genre(B, K).;false;true', '2;true,false;movie(D, A), movie(D, E), director(E).;true;true', '2;true,false,false,false,false;workedunder(L, B).;false;false', '2;true,false,true,false;workedunder(I, E).;false;false', '2;true,false,true;movie(F, B), workedunder(G, E), movie(H, G).;false;true', '2;true,false,false;movie(J, B).;false;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B), movie(C, A).;false;true', '3;true,false;movie(D, A), movie(E, B).;true;true', '3;true,false,true,false,false;movie(D, L), workedunder(M, L).;false;false', '3;true,false,true,false;movie(D, J), genre(J, K), genre(B, K).;false;true', '3;true,false,true,true;movie(D, G), workedunder(H, G), movie(I, H).;false;false', '3;true,false,true;workedunder(F, B).;true;true', '3;true,false,false;movie(N, B), workedunder(P, B), movie(N, P).;false;false', '4;;workedunder(A, B) :- director(B), actor(A).;true;false', '4;true;movie(C, B), movie(C, A).;false;true', '4;true,false,false,false;genre(B, M).;false;true', '4;true,false,false,false,false,false;movie(R, A).;false;false', '4;true,false,false,false,false;movie(N, A), movie(N, P), workedunder(Q, P).;false;true', '4;true,false;movie(D, A), workedunder(E, B), movie(F, B).;true;true', '4;true,false,true;movie(D, G), workedunder(H, G), movie(I, H).;false;false', '4;true,false,false;movie(J, B), movie(J, K), workedunder(L, K).;false;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B), movie(C, A).;false;true', '5;true,false;movie(D, A), movie(E, B).;true;true', '5;true,false,false,true;movie(M, B).;false;false', '5;true,false,true,false;movie(D, I), genre(I, J), genre(B, J).;false;false', '5;true,false,true,true;movie(D, H), movie(E, H).;false;false', '5;true,false,true;workedunder(F, B), movie(E, G), actor(G).;true;true', '5;true,false,false;movie(K, B), movie(K, L), workedunder(L, B).;true;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;true', '6;true,false,false,true,true,true,false;workedunder(L, B).;false;false', '6;true,false,false,true;movie(H, A), movie(F, I), workedunder(J, I).;true;false', '6;true,false,false,true,true;movie(K, J).;true;false', '6;true,false,false,true,true,true;movie(K, B).;false;true', '6;true,false;movie(D, A), movie(D, E), director(E).;false;true', '6;true,false,false;movie(F, B), movie(F, G), movie(H, G).;true;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B), movie(C, A).;false;true', '7;true,false,false,false;workedunder(N, B).;false;true', '7;true,false,false,true;movie(K, J), movie(K, L), workedunder(M, L).;false;false', '7;true,false,false,false,false;movie(P, A).;false;false', '7;true,false;movie(D, B), movie(E, A), workedunder(F, B).;true;true', '7;true,false,true;movie(E, G), director(G).;false;false', '7;true,false,false;movie(H, B), movie(H, I), workedunder(J, I).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false,true,false,false;workedunder(J, E), movie(K, J).;false;false', '8;true,false,false,false;workedunder(M, B).;false;false', '8;true,false;movie(D, A), movie(D, E), director(E).;true;true', '8;true,false,true,false;workedunder(H, B), workedunder(I, E).;false;true', '8;true,false,true;workedunder(F, E), movie(G, E), movie(G, F).;false;true', '8;true,false,false;movie(L, B).;false;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;false', '9;true;movie(C, B), movie(C, A).;false;true', '9;true,false,true,false,true;movie(K, J), movie(D, L), actor(L).;false;false', '9;true,false,true;workedunder(F, B), movie(D, G), actor(G).;true;true', '9;true,false;movie(D, B), movie(E, A).;true;true', '9;true,false,true,true;movie(D, H), movie(E, H).;false;false', '9;true,false,true,false;movie(D, I), workedunder(J, I).;true;false', '9;true,false,false;movie(M, B), movie(M, N), workedunder(N, B).;false;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else if ( workedunder(G, E), movie(H, E), movie(H, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(I, E), movie(J, I), movie(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(L, E) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109577;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else if ( workedunder(G, E), movie(H, G), movie(H, A) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(I, E), movie(J, I), movie(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(L, E) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 2,38e-07, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( movie(F, B), workedunder(G, E), movie(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(I, E) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360676;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831125;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( workedunder(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, G), genre(G, H), genre(B, H) )
%   | | | | then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | | else if ( movie(D, I), workedunder(J, I) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.10159632948783633;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716015055;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, A), workedunder(E, B), movie(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B), movie(G, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( genre(B, J) )
%   | | | | then return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | | else if ( movie(K, A), movie(K, L), workedunder(M, L) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(N, A) )
%   | | | | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926049;  // std dev = 8,16e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25517224256948773;  // std dev = 3,58e-07, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( workedunder(F, B), movie(E, G), actor(G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, H), genre(H, I), genre(B, I) )
%   | | | | then return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8,82e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253479;  // std dev = 2,83e-07, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109144;  // std dev = 6,50e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527705;  // std dev = 1,33e-07, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, B), movie(E, A), workedunder(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B), movie(G, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(J, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(K, A) )
%   | | | | | then return -0.07324622576333704;  // std dev = 7,45e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333673;  // std dev = 1,24e-07, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( workedunder(F, E), movie(G, E), movie(G, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(H, B), workedunder(I, E) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(J, E), movie(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 4,21e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801142;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( workedunder(F, B), movie(D, G), actor(G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, H), workedunder(I, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.06419184008202622;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 1,49e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.027 seconds
Total inference time: 0.713 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.713 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'workedunder(L, E)', 'true,false,true,false,false': 'workedunder(I, E), movie(J, I), movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(G, E), movie(H, E), movie(H, G)', 'true,false,true': 'genre(B, F)'}, {'true,true': [1.07e-06, 0, 281], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 251, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [1.83e-08, 25, 0], 'true,false,true,false,false,false,false': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'workedunder(L, E)', 'true,false,true,false,false': 'workedunder(I, E), movie(J, I), movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(G, E), movie(H, G), movie(H, A)', 'true,false,true': 'genre(B, F)'}, {'true,true': [0.0, 0, 281], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 251, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 25, 0], 'true,false,true,false,false,false,false': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false': 'workedunder(I, E)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true': 'movie(F, B), workedunder(G, E), movie(H, G)'}, {'true,false,true,false,false': [0.0, 30, 0], 'true,true': [2.38e-07, 0, 281], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 251, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(D, I), workedunder(J, I)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true,false': 'movie(D, G), genre(G, H), genre(B, H)', 'true,false,true': 'workedunder(F, B)'}, {'true,true': [0.0, 0, 281], 'true,false,true,false,false,false': [0.0, 11, 0], 'false': [0.0, 251, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'genre(B, J)', 'true,false,false,false,false,false': 'movie(N, A)', 'true,false,false,false,false': 'movie(K, A), movie(K, L), workedunder(M, L)', 'true,false': 'movie(D, A), workedunder(E, B), movie(F, B)', 'true,false,false': 'movie(G, B), movie(G, H), workedunder(I, H)'}, {'true,true': [0.0, 0, 281], 'true,false,false,false,false,false,false': [0.0, 0, 0], 'true,false,false,false,false,false,true': [0.0, 5, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [9.13e-09, 25, 0], 'false': [8.16e-08, 251, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,false,false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false': 'movie(D, H), genre(H, I), genre(B, I)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'workedunder(F, B), movie(E, G), actor(G)'}, {'true,false,true,false,false': [5.27e-09, 11, 0], 'true,true': [3.58e-07, 0, 281], 'true,false,true,false,true': [1.29e-08, 19, 0], 'false': [8.82e-08, 251, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(D, E), director(E)'}, {'true,true': [2.83e-07, 0, 281], 'false': [6.5e-08, 251, 0], 'true,false,true': [0.0, 30, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'workedunder(J, B)', 'true,false,false,false,false': 'movie(K, A)', 'true,false': 'movie(D, B), movie(E, A), workedunder(F, B)', 'true,false,false': 'movie(G, B), movie(G, H), workedunder(I, H)'}, {'true,true': [1.33e-07, 0, 281], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [0.0, 0, 0], 'false': [1.24e-07, 251, 0], 'true,false,false,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,false,false,true': [7.45e-09, 30, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'workedunder(J, E), movie(K, J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(H, B), workedunder(I, E)', 'true,false,true': 'workedunder(F, E), movie(G, E), movie(G, F)'}, {'true,true': [0.0, 0, 281], 'true,false,true,false,false,false': [0.0, 30, 0], 'false': [4.21e-08, 251, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false': 'movie(D, H), workedunder(I, H)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'workedunder(F, B), movie(D, G), actor(G)'}, {'true,false,true,false,false': [0.0, 30, 0], 'true,true': [0.0, 0, 281], 'true,false,true,false,true': [0.0, 0, 0], 'false': [1.49e-08, 251, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false,true,false,false;workedunder(I, E), movie(J, I), movie(K, B).;false;false', '0;true,false;movie(D, A), movie(D, E), director(E).;true;false', '0;true,false,true,false;workedunder(G, E), movie(H, E), movie(H, G).;false;true', '0;true,false,true;genre(B, F).;false;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;false', '1;true;movie(C, B), movie(C, A).;false;true', '1;true,false,true,false,false;workedunder(I, E), movie(J, I), movie(K, B).;false;false', '1;true,false;movie(D, A), movie(D, E), director(E).;true;false', '1;true,false,true,false;workedunder(G, E), movie(H, G), movie(H, A).;false;true', '1;true,false,true;genre(B, F).;false;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, B), movie(C, A).;false;true', '2;true,false;movie(D, A), movie(D, E), director(E).;true;false', '2;true,false,true;movie(F, B), workedunder(G, E), movie(H, G).;false;false', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B), movie(C, A).;false;true', '3;true,false;movie(D, A), movie(E, B).;true;false', '3;true,false,true,false;movie(D, G), genre(G, H), genre(B, H).;false;false', '3;true,false,true;workedunder(F, B).;false;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;false', '4;true;movie(C, B), movie(C, A).;false;true', '4;true,false;movie(D, A), workedunder(E, B), movie(F, B).;false;false', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B), movie(C, A).;false;true', '5;true,false;movie(D, A), movie(E, B).;false;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B), movie(C, A).;false;true', '7;true,false;movie(D, B), movie(E, A), workedunder(F, B).;false;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false;movie(D, A), movie(D, E), director(E).;true;false', '8;true,false,true,false;workedunder(H, B), workedunder(I, E).;false;false', '8;true,false,true;workedunder(F, E), movie(G, E), movie(G, F).;false;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;false', '9;true;movie(C, B), movie(C, A).;false;true', '9;true,false;movie(D, B), movie(E, A).;true;false', '9;true,false,true;workedunder(F, B), movie(D, G), actor(G).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,false,false,false,true', 0), ('true,false,true,false,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #2: [('true,false,true,false,false,false,true', 0), ('true,false,true,false,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #3: [('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,false', 0)]
Tree #4: [('true,false,true,false,false,true', 0), ('true,false,true,true', 0), ('true,false,false', 0)]
Tree #5: [('true,false,false,true', 0), ('true,false,true', 0), ('true,false,false,false,false,false,false', 0), ('true,false,false,false,false,true', 0)]
Tree #6: [('true,false,true,true', 0), ('true,false,false', 0)]
Tree #7: [('true,false,false', 0)]
Tree #8: [('true,false,false,true', 0), ('true,false,false,false,false,false', 0), ('true,false,true', 0), ('true,false,false,false,true', 0)]
Tree #9: [('true,false,true,false,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,true', 0), ('true,false,false', 0)]
Tree #10: [('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,false', 0)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else if ( workedunder(G, E), movie(H, E), movie(H, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(I, E), movie(J, I), movie(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109577;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else if ( workedunder(G, E), movie(H, G), movie(H, A) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(I, E), movie(J, I), movie(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 2,38e-07, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( movie(F, B), workedunder(G, E), movie(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360676;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831125;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( workedunder(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, G), genre(G, H), genre(B, H) )
%   | | | | then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | | else return -0.10159632948783631;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716015055;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, A), workedunder(E, B), movie(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926097;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.09269127618926049;  // std dev = 8,16e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25517224256948773;  // std dev = 3,58e-07, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.0851847513883968;  // std dev = 2,04e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8,82e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253479;  // std dev = 2,83e-07, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07877675473109144;  // std dev = 6,50e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527705;  // std dev = 1,33e-07, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, B), movie(E, A), workedunder(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 7,45e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07324622576333673;  // std dev = 1,24e-07, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( workedunder(F, E), movie(G, E), movie(G, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(H, B), workedunder(I, E) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 4,21e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801142;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( workedunder(F, B), movie(D, G), actor(G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 1,49e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.294 seconds
Total inference time: 0.627 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 13.661
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.612 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 5, Type: transfer, Total folds for small set: 3, Time: 00:34:39
{'CLL': -0.094637, 'Recall': 1.0, 'Learning time': 13.661, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 60000, 'Total time': 26.450738191604614, 'Generating mappings time': 2.775759696960449, 'Finding best mapping': 20.905688524246216, 'Generating paths time': 2.7481322288513184, 'Knowledge compiling time': 0.021147727966308594}, 'Parameter Learning Results': {'CLL': -0.094637, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.612}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995106;  // std dev = 6,64e-07, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return 0.8398562521726805;  // std dev = 0,134, 164,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=161 */
%   else return -0.14185106490048827;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109553;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return 0.7048579019843266;  // std dev = 0,134, 164,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=161 */
%   else return -0.12544463852839174;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462834;  // std dev = 4,46e-07, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return 0.5451844143007764;  // std dev = 0,134, 164,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=161 */
%   else return -0.11231637819360671;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830936;  // std dev = 3,42e-07, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return 0.4097360164438934;  // std dev = 0,134, 164,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=161 */
%   else return -0.10159632948783653;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.32071184716014994;  // std dev = 2,06e-07, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return 0.313600567114988;  // std dev = 0,134, 164,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=161 */
%   else return -0.09269127618926051;  // std dev = 8,43e-08, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694898;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return 0.24805452085215762;  // std dev = 0,134, 164,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=161 */
%   else return -0.08518475138839678;  // std dev = 8,94e-08, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2097577156325354;  // std dev = 1,91e-07, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return 0.20245927918379353;  // std dev = 0,134, 164,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=161 */
%   else return -0.0787767547310915;  // std dev = 5,37e-08, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1770964977452781;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return 0.16960191941167602;  // std dev = 0,134, 164,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=161 */
%   else return -0.07324622576333677;  // std dev = 1,21e-07, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1527438580936714;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return 0.14507915943464142;  // std dev = 0,134, 164,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=161 */
%   else return -0.06842697784420264;  // std dev = 5,37e-08, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1340070300080111;  // std dev = 5,16e-08, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return 0.12620441881755584;  // std dev = 0,134, 164,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=161 */
%   else return -0.06419184008202626;  // std dev = 1,49e-08, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097535
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.897 seconds
Total inference time: 0.612 seconds
AUC ROC: 1.0


Dataset: uwcse,imdb, Run: 1, Fold: 5, Type: scratch, Total folds for small set: 3, Time: 00:34:48
{'CLL': -0.097535, 'Recall': 1.0, 'Learning time': 8.897, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.612}


Best mapping found: ['professor(A) -> director(A)', 'tempadvisedby(A,B) -> workedunder(A,B)', 'inphase(A,B) -> movie(B,A)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)'] 

Tranferred structured tree: [['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'workedunder(L, E)', 'true,false,true,false,false': 'workedunder(I, E), movie(J, I), movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(G, E), movie(H, E), movie(H, G)', 'true,false,true': 'genre(B, F)', 'true,false,false': 'movie(M, B)'}, {'true,true': [2.46e-07, 0, 41], 'true,false,true,false,true': [0.816, 1, 2], 'true,false,false,false': [0.462, 4, 9], 'true,false,false,true': [0.338, 8, 53], 'true,false,true,false,false,false,true': [0.894, 1, 4], 'false': [7.6e-08, 91, 0], 'true,false,true,true': [2.11e-08, 0, 3], 'true,false,true,false,false,true': [0.0, 5, 0], 'true,false,true,false,false,false,false': [0.866, 3, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'workedunder(L, E)', 'true,false,true,false,false': 'workedunder(I, E), movie(J, I), movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(G, E), movie(H, G), movie(H, A)', 'true,false,true': 'genre(B, F)', 'true,false,false': 'movie(M, A), workedunder(N, B)'}, {'true,true': [0.0, 0, 41], 'true,false,true,false,true': [0.741, 1, 2], 'true,false,false,false': [0.349, 10, 59], 'true,false,false,true': [1.095, 2, 3], 'true,false,true,false,false,false,true': [0.894, 1, 4], 'false': [0.0, 91, 0], 'true,false,true,true': [0.0, 0, 3], 'true,false,true,false,false,true': [0.083, 5, 0], 'true,false,true,false,false,false,false': [0.866, 3, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'genre(B, K)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,false,false,false': 'workedunder(L, B)', 'true,false,true,false': 'workedunder(I, E)', 'true,false,true': 'movie(F, B), workedunder(G, E), movie(H, G)', 'true,false,false': 'movie(J, B)'}, {'true,false,true,false,false': [0.866, 3, 1], 'true,true': [1.46e-07, 0, 41], 'true,false,true,false,true': [0.309, 1, 8], 'true,false,true,true': [0.291, 6, 1], 'true,false,false,true': [0.334, 8, 53], 'true,false,false,false,true': [0.0, 0, 3], 'false': [6.99e-08, 91, 0], 'true,false,false,false,false,false': [0.495, 3, 4], 'true,false,false,false,false,true': [0.816, 1, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true,false,false': 'movie(D, L), workedunder(M, L)', 'true,false,true,false': 'movie(D, J), genre(J, K), genre(B, K)', 'true,false,true,true': 'movie(D, G), workedunder(H, G), movie(I, H)', 'true,false,true': 'workedunder(F, B)', 'true,false,false': 'movie(N, B), workedunder(P, B), movie(N, P)'}, {'true,true': [0.0, 0, 41], 'true,false,true,false,true': [0.911, 3, 2], 'true,false,false,false': [0.325, 10, 58], 'true,false,true,true,true': [0.068, 3, 0], 'true,false,false,true': [1.095, 2, 3], 'true,false,true,false,false,false': [0.282, 0, 4], 'false': [5.58e-08, 91, 0], 'true,false,true,false,false,true': [0.655, 2, 1], 'true,false,true,true,false': [1.144, 2, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'genre(B, M)', 'true,false,false,false,false,false': 'movie(R, A)', 'true,false,false,false,false': 'movie(N, A), movie(N, P), workedunder(Q, P)', 'true,false': 'movie(D, A), workedunder(E, B), movie(F, B)', 'true,false,true': 'movie(D, G), workedunder(H, G), movie(I, H)', 'true,false,false': 'movie(J, B), movie(J, K), workedunder(L, K)'}, {'true,true': [2.98e-08, 0, 41], 'true,false,false,false,false,false,false': [0.495, 4, 5], 'true,false,false,false,false,false,true': [0.615, 2, 1], 'true,false,false,true': [0.323, 9, 53], 'true,false,false,false,true': [0.078, 0, 6], 'false': [1.05e-08, 91, 0], 'true,false,true,true': [0.062, 3, 0], 'true,false,true,false': [1.144, 2, 4], 'true,false,false,false,false,true': [0.765, 2, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,false,true': 'movie(M, B)', 'true,false,true,false': 'movie(D, I), genre(I, J), genre(B, J)', 'true,false,true,true': 'movie(D, H), movie(E, H)', 'true,false,true': 'workedunder(F, B), movie(E, G), actor(G)', 'true,false,false': 'movie(K, B), movie(K, L), workedunder(L, B)'}, {'true,false,true,false,false': [0.277, 2, 7], 'true,true': [0.0, 0, 41], 'true,false,true,false,true': [0.896, 3, 2], 'true,false,false,false': [3.16e-08, 91, 0], 'true,false,false,true,false': [0.387, 6, 14], 'true,false,true,true,true': [0.447, 2, 1], 'true,false,true,true,false': [0.823, 3, 1], 'true,false,false,true,true': [0.276, 4, 44]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,true,true,true,false': 'workedunder(L, B)', 'true,false,false,true': 'movie(H, A), movie(F, I), workedunder(J, I)', 'true,false,false,true,true': 'movie(K, J)', 'true,false,false,true,true,true': 'movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,false': 'movie(F, B), movie(F, G), movie(H, G)'}, {'true,false,false,true,true,true,false,true': [1.162, 3, 2], 'true,true': [5.96e-08, 0, 41], 'true,false,false,true,true,true,false,false': [0.884, 1, 4], 'true,false,false,true,false': [0.165, 1, 20], 'true,false,false,true,true,false': [0.0, 0, 5], 'true,false,false,true,true,true,true': [0.418, 3, 9], 'false': [4.71e-08, 91, 0], 'true,false,false,false': [0.327, 4, 22], 'true,false,true': [0.329, 10, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'workedunder(N, B)', 'true,false,false,true': 'movie(K, J), movie(K, L), workedunder(M, L)', 'true,false,false,false,false': 'movie(P, A)', 'true,false': 'movie(D, B), movie(E, A), workedunder(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'true,false,false': 'movie(H, B), movie(H, I), workedunder(J, I)'}, {'true,true': [0.0, 0, 41], 'true,false,true,true': [0.445, 3, 1], 'true,false,false,true,false': [0.152, 1, 34], 'true,false,false,false,true': [0.295, 2, 9], 'true,false,false,false,false,false': [1.225, 3, 3], 'false': [0.0, 91, 0], 'true,false,false,true,true': [0.404, 8, 19], 'true,false,true,false': [1.018, 2, 3], 'true,false,false,false,false,true': [0.838, 3, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'workedunder(J, E), movie(K, J)', 'true,false,false,false': 'workedunder(M, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(H, B), workedunder(I, E)', 'true,false,true': 'workedunder(F, E), movie(G, E), movie(G, F)', 'true,false,false': 'movie(L, B)'}, {'true,true': [0.0, 0, 41], 'true,false,true,false,false,false': [0.417, 4, 3], 'true,false,false,true': [0.302, 8, 53], 'true,false,true,false,true': [0.432, 2, 2], 'true,false,false,false,true': [0.853, 1, 5], 'false': [3.8e-08, 91, 0], 'true,false,false,false,false': [0.491, 3, 4], 'true,false,true,true': [0.491, 1, 5], 'true,false,true,false,false,true': [0.027, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,true': 'movie(K, J), movie(D, L), actor(L)', 'true,false,true': 'workedunder(F, B), movie(D, G), actor(G)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true,true': 'movie(D, H), movie(E, H)', 'true,false,true,false': 'movie(D, I), workedunder(J, I)', 'true,false,false': 'movie(M, B), movie(M, N), workedunder(N, B)'}, {'true,false,true,false,false': [0.518, 2, 1], 'true,true': [1.83e-08, 0, 41], 'true,false,false,false': [0.3, 10, 58], 'true,false,true,false,true,false': [0.868, 2, 4], 'true,false,false,true': [1.095, 2, 3], 'false': [0.0, 91, 0], 'true,false,true,true,true': [0.428, 2, 1], 'true,false,true,false,true,true': [0.588, 1, 4], 'true,false,true,true,false': [0.872, 3, 1]}]] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;workedunder(A, B) :- director(B), actor(A).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false,true,false,false,false;workedunder(L, E).;false;false', '0;true,false,true,false,false;workedunder(I, E), movie(J, I), movie(K, B).;false;true', '0;true,false;movie(D, A), movie(D, E), director(E).;true;true', '0;true,false,true,false;workedunder(G, E), movie(H, E), movie(H, G).;false;true', '0;true,false,true;genre(B, F).;false;true', '0;true,false,false;movie(M, B).;false;false', '1;;workedunder(A, B) :- director(B), actor(A).;true;false', '1;true;movie(C, B), movie(C, A).;false;true', '1;true,false,true,false,false,false;workedunder(L, E).;false;false', '1;true,false,true,false,false;workedunder(I, E), movie(J, I), movie(K, B).;false;true', '1;true,false;movie(D, A), movie(D, E), director(E).;true;true', '1;true,false,true,false;workedunder(G, E), movie(H, G), movie(H, A).;false;true', '1;true,false,true;genre(B, F).;false;true', '1;true,false,false;movie(M, A), workedunder(N, B).;false;false', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, B), movie(C, A).;false;true', '2;true,false,false,false;genre(B, K).;false;true', '2;true,false;movie(D, A), movie(D, E), director(E).;true;true', '2;true,false,false,false,false;workedunder(L, B).;false;false', '2;true,false,true,false;workedunder(I, E).;false;false', '2;true,false,true;movie(F, B), workedunder(G, E), movie(H, G).;false;true', '2;true,false,false;movie(J, B).;false;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B), movie(C, A).;false;true', '3;true,false;movie(D, A), movie(E, B).;true;true', '3;true,false,true,false,false;movie(D, L), workedunder(M, L).;false;false', '3;true,false,true,false;movie(D, J), genre(J, K), genre(B, K).;false;true', '3;true,false,true,true;movie(D, G), workedunder(H, G), movie(I, H).;false;false', '3;true,false,true;workedunder(F, B).;true;true', '3;true,false,false;movie(N, B), workedunder(P, B), movie(N, P).;false;false', '4;;workedunder(A, B) :- director(B), actor(A).;true;false', '4;true;movie(C, B), movie(C, A).;false;true', '4;true,false,false,false;genre(B, M).;false;true', '4;true,false,false,false,false,false;movie(R, A).;false;false', '4;true,false,false,false,false;movie(N, A), movie(N, P), workedunder(Q, P).;false;true', '4;true,false;movie(D, A), workedunder(E, B), movie(F, B).;true;true', '4;true,false,true;movie(D, G), workedunder(H, G), movie(I, H).;false;false', '4;true,false,false;movie(J, B), movie(J, K), workedunder(L, K).;false;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B), movie(C, A).;false;true', '5;true,false;movie(D, A), movie(E, B).;true;true', '5;true,false,false,true;movie(M, B).;false;false', '5;true,false,true,false;movie(D, I), genre(I, J), genre(B, J).;false;false', '5;true,false,true,true;movie(D, H), movie(E, H).;false;false', '5;true,false,true;workedunder(F, B), movie(E, G), actor(G).;true;true', '5;true,false,false;movie(K, B), movie(K, L), workedunder(L, B).;true;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;true', '6;true,false,false,true,true,true,false;workedunder(L, B).;false;false', '6;true,false,false,true;movie(H, A), movie(F, I), workedunder(J, I).;true;false', '6;true,false,false,true,true;movie(K, J).;true;false', '6;true,false,false,true,true,true;movie(K, B).;false;true', '6;true,false;movie(D, A), movie(D, E), director(E).;false;true', '6;true,false,false;movie(F, B), movie(F, G), movie(H, G).;true;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B), movie(C, A).;false;true', '7;true,false,false,false;workedunder(N, B).;false;true', '7;true,false,false,true;movie(K, J), movie(K, L), workedunder(M, L).;false;false', '7;true,false,false,false,false;movie(P, A).;false;false', '7;true,false;movie(D, B), movie(E, A), workedunder(F, B).;true;true', '7;true,false,true;movie(E, G), director(G).;false;false', '7;true,false,false;movie(H, B), movie(H, I), workedunder(J, I).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false,true,false,false;workedunder(J, E), movie(K, J).;false;false', '8;true,false,false,false;workedunder(M, B).;false;false', '8;true,false;movie(D, A), movie(D, E), director(E).;true;true', '8;true,false,true,false;workedunder(H, B), workedunder(I, E).;false;true', '8;true,false,true;workedunder(F, E), movie(G, E), movie(G, F).;false;true', '8;true,false,false;movie(L, B).;false;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;false', '9;true;movie(C, B), movie(C, A).;false;true', '9;true,false,true,false,true;movie(K, J), movie(D, L), actor(L).;false;false', '9;true,false,true;workedunder(F, B), movie(D, G), actor(G).;true;true', '9;true,false;movie(D, B), movie(E, A).;true;true', '9;true,false,true,true;movie(D, H), movie(E, H).;false;false', '9;true,false,true,false;movie(D, I), workedunder(J, I).;true;false', '9;true,false,false;movie(M, B), movie(M, N), workedunder(N, B).;false;false']
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else if ( workedunder(G, E), movie(H, E), movie(H, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(I, E), movie(J, I), movie(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(L, E) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 1,19e-07, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else if ( workedunder(G, E), movie(H, G), movie(H, A) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(I, E), movie(J, I), movie(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( workedunder(L, E) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.125444638528392;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( movie(F, B), workedunder(G, E), movie(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(I, E) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360679;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( workedunder(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, G), genre(G, H), genre(B, H) )
%   | | | | then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | | else if ( movie(D, I), workedunder(J, I) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.1015963294878363;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878366;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), workedunder(E, B), movie(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B), movie(G, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( genre(B, J) )
%   | | | | then return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | | else if ( movie(K, A), movie(K, L), workedunder(M, L) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( movie(N, A) )
%   | | | | | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926046;  // std dev = 1,76e-07, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( workedunder(F, B), movie(E, G), actor(G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, H), genre(H, I), genre(B, I) )
%   | | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | | else return -0.08518475138839687;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1,05e-07, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109144;  // std dev = 3,33e-08, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, B), movie(E, A), workedunder(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B), movie(G, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(J, B) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( movie(K, A) )
%   | | | | | then return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333699;  // std dev = 9,54e-08, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( workedunder(F, E), movie(G, E), movie(G, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(H, B), workedunder(I, E) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(J, E), movie(K, J) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420301;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( workedunder(F, B), movie(D, G), actor(G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, H), workedunder(I, H) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.0641918400820262;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202594;  // std dev = 1,21e-07, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.924 seconds
Total inference time: 0.868 seconds
AUC ROC: 1.0


Results in test set
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.868 seconds
AUC ROC: 1.0
Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'workedunder(L, E)', 'true,false,true,false,false': 'workedunder(I, E), movie(J, I), movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(G, E), movie(H, E), movie(H, G)', 'true,false,true': 'genre(B, F)'}, {'true,true': [1.04e-06, 0, 337], 'true,false,true,false,true': [0.0, 0, 0], 'false': [1.19e-07, 316, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 17, 0], 'true,false,true,false,false,false,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false,false': 'workedunder(L, E)', 'true,false,true,false,false': 'workedunder(I, E), movie(J, I), movie(K, B)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(G, E), movie(H, G), movie(H, A)', 'true,false,true': 'genre(B, F)'}, {'true,true': [0.0, 0, 337], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 316, 0], 'true,false,true,false,false,false,true': [0.0, 0, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 17, 0], 'true,false,true,false,false,false,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false': 'workedunder(I, E)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true': 'movie(F, B), workedunder(G, E), movie(H, G)'}, {'true,false,true,false,false': [1.29e-08, 21, 0], 'true,true': [0.0, 0, 337], 'true,false,true,false,true': [0.0, 0, 0], 'false': [0.0, 316, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'movie(D, I), workedunder(J, I)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true,false': 'movie(D, G), genre(G, H), genre(B, H)', 'true,false,true': 'workedunder(F, B)'}, {'true,true': [0.0, 0, 337], 'true,false,true,false,false,false': [0.0, 10, 0], 'false': [0.0, 316, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'genre(B, J)', 'true,false,false,false,false,false': 'movie(N, A)', 'true,false,false,false,false': 'movie(K, A), movie(K, L), workedunder(M, L)', 'true,false': 'movie(D, A), workedunder(E, B), movie(F, B)', 'true,false,false': 'movie(G, B), movie(G, H), workedunder(I, H)'}, {'true,true': [0.0, 0, 337], 'true,false,false,false,false,false,false': [0.0, 0, 0], 'true,false,false,false,false,false,true': [0.0, 4, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [9.13e-09, 17, 0], 'false': [1.76e-07, 316, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,false,false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false': 'movie(D, H), genre(H, I), genre(B, I)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'workedunder(F, B), movie(E, G), actor(G)'}, {'true,false,true,false,false': [0.0, 10, 0], 'true,true': [4e-07, 0, 337], 'true,false,true,false,true': [5.27e-09, 11, 0], 'false': [1.05e-07, 316, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(D, E), director(E)'}, {'true,true': [2.49e-07, 0, 337], 'false': [3.33e-08, 316, 0], 'true,false,true': [0.0, 21, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false,false': 'workedunder(J, B)', 'true,false,false,false,false': 'movie(K, A)', 'true,false': 'movie(D, B), movie(E, A), workedunder(F, B)', 'true,false,false': 'movie(G, B), movie(G, H), workedunder(I, H)'}, {'true,true': [2.92e-07, 0, 337], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,true': [0.0, 0, 0], 'false': [9.54e-08, 316, 0], 'true,false,false,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,false,false,true': [0.0, 21, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false,false': 'workedunder(J, E), movie(K, J)', 'true,false': 'movie(D, A), movie(D, E), director(E)', 'true,false,true,false': 'workedunder(H, B), workedunder(I, E)', 'true,false,true': 'workedunder(F, E), movie(G, E), movie(G, F)'}, {'true,true': [0.0, 0, 337], 'true,false,true,false,false,false': [0.0, 21, 0], 'false': [0.0, 316, 0], 'true,false,true,false,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true,false': 'movie(D, H), workedunder(I, H)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'workedunder(F, B), movie(D, G), actor(G)'}, {'true,false,true,false,false': [0.0, 21, 0], 'true,true': [0.0, 0, 337], 'true,false,true,false,true': [0.0, 0, 0], 'false': [1.21e-07, 316, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;false', '0;true;movie(C, B), movie(C, A).;false;true', '0;true,false,true,false,false;workedunder(I, E), movie(J, I), movie(K, B).;false;false', '0;true,false;movie(D, A), movie(D, E), director(E).;true;false', '0;true,false,true,false;workedunder(G, E), movie(H, E), movie(H, G).;false;true', '0;true,false,true;genre(B, F).;false;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;false', '1;true;movie(C, B), movie(C, A).;false;true', '1;true,false,true,false,false;workedunder(I, E), movie(J, I), movie(K, B).;false;false', '1;true,false;movie(D, A), movie(D, E), director(E).;true;false', '1;true,false,true,false;workedunder(G, E), movie(H, G), movie(H, A).;false;true', '1;true,false,true;genre(B, F).;false;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;false', '2;true;movie(C, B), movie(C, A).;false;true', '2;true,false;movie(D, A), movie(D, E), director(E).;true;false', '2;true,false,true;movie(F, B), workedunder(G, E), movie(H, G).;false;false', '3;;workedunder(A, B) :- director(B), actor(A).;true;false', '3;true;movie(C, B), movie(C, A).;false;true', '3;true,false;movie(D, A), movie(E, B).;true;false', '3;true,false,true,false;movie(D, G), genre(G, H), genre(B, H).;false;false', '3;true,false,true;workedunder(F, B).;false;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;false', '4;true;movie(C, B), movie(C, A).;false;true', '4;true,false;movie(D, A), workedunder(E, B), movie(F, B).;false;false', '5;;workedunder(A, B) :- director(B), actor(A).;true;false', '5;true;movie(C, B), movie(C, A).;false;true', '5;true,false;movie(D, A), movie(E, B).;false;false', '6;;workedunder(A, B) :- director(B), actor(A).;true;false', '6;true;movie(C, B), movie(C, A).;false;false', '7;;workedunder(A, B) :- director(B), actor(A).;true;false', '7;true;movie(C, B), movie(C, A).;false;true', '7;true,false;movie(D, B), movie(E, A), workedunder(F, B).;false;false', '8;;workedunder(A, B) :- director(B), actor(A).;true;false', '8;true;movie(C, B), movie(C, A).;false;true', '8;true,false;movie(D, A), movie(D, E), director(E).;true;false', '8;true,false,true,false;workedunder(H, B), workedunder(I, E).;false;false', '8;true,false,true;workedunder(F, E), movie(G, E), movie(G, F).;false;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;false', '9;true;movie(C, B), movie(C, A).;false;true', '9;true,false;movie(D, B), movie(E, A).;true;false', '9;true,false,true;workedunder(F, B), movie(D, G), actor(G).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,false,false,false,true', 0), ('true,false,true,false,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #2: [('true,false,true,false,false,false,true', 0), ('true,false,true,false,true', 0), ('true,false,true,false,false,true', 0), ('true,false,false', 0)]
Tree #3: [('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,false', 0)]
Tree #4: [('true,false,true,false,false,true', 0), ('true,false,true,true', 0), ('true,false,false', 0)]
Tree #5: [('true,false,false,true', 0), ('true,false,true', 0), ('true,false,false,false,false,false,false', 0), ('true,false,false,false,false,true', 0)]
Tree #6: [('true,false,true,true', 0), ('true,false,false', 0)]
Tree #7: [('true,false,false', 0)]
Tree #8: [('true,false,false,true', 0), ('true,false,false,false,false,false', 0), ('true,false,true', 0), ('true,false,false,false,true', 0)]
Tree #9: [('true,false,true,false,false,true', 0), ('true,false,true,true', 0), ('true,false,true,false,true', 0), ('true,false,false', 0)]
Tree #10: [('true,false,true,false,true', 0), ('true,false,true,true', 0), ('true,false,false', 0)]


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else if ( workedunder(G, E), movie(H, E), movie(H, G) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(I, E), movie(J, I), movie(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 1,19e-07, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else if ( workedunder(G, E), movie(H, G), movie(H, A) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( workedunder(I, E), movie(J, I), movie(K, B) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.125444638528392;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( movie(F, B), workedunder(G, E), movie(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360679;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( workedunder(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( movie(D, G), genre(G, H), genre(B, H) )
%   | | | | then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | | else return -0.1015963294878363;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878366;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), workedunder(E, B), movie(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926094;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.09269127618926046;  // std dev = 1,76e-07, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.08518475138839683;  // std dev = 1,49e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1,05e-07, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.07877675473109144;  // std dev = 3,33e-08, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, B), movie(E, A), workedunder(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.07324622576333699;  // std dev = 9,54e-08, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(D, E), director(E) )
%   | | then if ( workedunder(F, E), movie(G, E), movie(G, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( workedunder(H, B), workedunder(I, E) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420301;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( workedunder(F, B), movie(D, G), actor(G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202594;  // std dev = 1,21e-07, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.646 seconds
Total inference time: 0.662 seconds
AUC ROC: 1.0


Best model AUC ROC so far: 1.0


******************************************
Best model found
******************************************
Total revision time: 14.100000000000001
Best validation AUC ROC: 1.0


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 0.598 seconds
AUC ROC: 1.0
Dataset: uwcse,imdb, Run: 1, Fold: 5, Type: transfer, Total folds for small set: 4, Time: 00:35:32
{'CLL': -0.094637, 'Recall': 1.0, 'Learning time': 14.100000000000001, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 60000, 'Total time': 27.72430658340454, 'Generating mappings time': 2.8479554653167725, 'Finding best mapping': 21.35937476158142, 'Generating paths time': 3.477781057357788, 'Knowledge compiling time': 0.0391848087310791}, 'Parameter Learning Results': {'CLL': -0.094637, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.598}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.85814893509951;  // std dev = 9,00e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.8529133330052685;  // std dev = 0,072, 191,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=190 */
%   else return -0.1418510649004878;  // std dev = 1,26e-07, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109561;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.715293303875897;  // std dev = 0,072, 191,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=190 */
%   else return -0.12544463852839197;  // std dev = 0,000, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,20e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.5524546703249206;  // std dev = 0,072, 191,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=190 */
%   else return -0.11231637819360676;  // std dev = 0,000, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.4175135841583089;  // std dev = 4,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.41527898858308304;  // std dev = 0,072, 191,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=190 */
%   else return -0.1015963294878366;  // std dev = 0,000, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.32071184716014983;  // std dev = 2,63e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.3186569243297573;  // std dev = 0,072, 191,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=190 */
%   else return -0.09269127618926049;  // std dev = 1,75e-07, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.25517224256949034;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.2531076839062762;  // std dev = 0,072, 191,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=190 */
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2097577156325352;  // std dev = 2,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.20763554805681864;  // std dev = 0,072, 191,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=190 */
%   else return -0.07877675473109147;  // std dev = 0,000, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1770964977452782;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.17491308451116236;  // std dev = 0,072, 191,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=190 */
%   else return -0.07324622576333699;  // std dev = 9,54e-08, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.1505068984110009;  // std dev = 0,072, 191,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=190 */
%   else return -0.06842697784420299;  // std dev = 0,000, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.134007030008011;  // std dev = 6,32e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return 0.13172577999437735;  // std dev = 0,072, 191,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=190 */
%   else return -0.06419184008202594;  // std dev = 1,22e-07, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095449
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.833 seconds
Total inference time: 0.542 seconds
AUC ROC: 1.0


Dataset: uwcse,imdb, Run: 1, Fold: 5, Type: scratch, Total folds for small set: 4, Time: 00:35:42
{'CLL': -0.095449, 'Recall': 1.0, 'Learning time': 8.833, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 0.542}
ueee
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995096;  // std dev = 1,07e-06, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.8534540994187579;  // std dev = 0,068, 213,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=212 */
%   else return -0.1418510649004876;  // std dev = 2,15e-07, 381,000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109565;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.7157251647932854;  // std dev = 0,068, 213,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=212 */
%   else return -0.1254446385283921;  // std dev = 0,000, 381,000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,72e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.5527555035283851;  // std dev = 0,068, 213,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=212 */
%   else return -0.11231637819360651;  // std dev = 0,000, 381,000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830936;  // std dev = 4,13e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.4155094669476408;  // std dev = 0,068, 213,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=212 */
%   else return -0.10159632948783635;  // std dev = 7,88e-08, 381,000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601492;  // std dev = 3,82e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.3188684362090164;  // std dev = 0,068, 213,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=212 */
%   else return -0.09269127618926047;  // std dev = 2,02e-07, 381,000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694907;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.2533199027439133;  // std dev = 0,068, 213,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=212 */
%   else return -0.08518475138839678;  // std dev = 1,15e-07, 381,000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253512;  // std dev = 2,76e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.20785349866217487;  // std dev = 0,068, 213,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=212 */
%   else return -0.07877675473109146;  // std dev = 6,66e-08, 381,000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.17513717070407042;  // std dev = 0,068, 213,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=212 */
%   else return -0.07324622576333709;  // std dev = 7,88e-08, 381,000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.15073633389877866;  // std dev = 0,068, 213,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=212 */
%   else return -0.06842697784420314;  // std dev = 0,000, 381,000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1340070300080108;  // std dev = 9,66e-08, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.1319596099313001;  // std dev = 0,068, 213,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=212 */
%   else return -0.06419184008202582;  // std dev = 1,56e-07, 381,000 (wgt'ed) examples reached here.  /* #neg=381 */


Predicates from source: ['workedunder(person,person).', 'director(person).', 'female(person).', 'movie(movie,person).'] 

Source structured tree: [['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.15e-07, 381, 0], 'true,false': [0.068, 1, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 381, 0], 'true,false': [0.068, 1, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 381, 0], 'true,false': [0.068, 1, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [7.88e-08, 381, 0], 'true,false': [0.068, 1, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.02e-07, 381, 0], 'true,false': [0.068, 1, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.15e-07, 381, 0], 'true,false': [0.068, 1, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [6.66e-08, 381, 0], 'true,false': [0.068, 1, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [7.88e-08, 381, 0], 'true,false': [0.068, 1, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 381, 0], 'true,false': [0.068, 1, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [9.66e-08, 0, 170], 'false': [1.56e-07, 381, 0], 'true,false': [0.068, 1, 212]}]] 



Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Tranferred structured tree: [['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.15e-07, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [4.13e-07, 0, 170], 'false': [7.88e-08, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.02e-07, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [1.15e-07, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [2.76e-07, 0, 170], 'false': [6.66e-08, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [7.88e-08, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [9.66e-08, 0, 170], 'false': [1.56e-07, 381, 0], 'true,false': [0.068, 1, 212]}]] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false']
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7586724953089334;  // std dev = 4,136, 191,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=172 */
%   else return -0.1418510649004876;  // std dev = 2,02e-07, 338,000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6211573498329588;  // std dev = 4,504, 195,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=172 */
%   else return -0.12544463852839213;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.4901219038550977;  // std dev = 4,416, 194,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=172 */
%   else return -0.11231637819360674;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3512060590165894;  // std dev = 4,752, 198,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=172 */
%   else return -0.10159632948783642;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.28283766821273965;  // std dev = 4,416, 194,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=172 */
%   else return -0.09269127618926043;  // std dev = 1,94e-07, 329,000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.19524858341640747;  // std dev = 4,831, 199,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=172 */
%   else return -0.08518475138839678;  // std dev = 1,10e-07, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.17580380626391204;  // std dev = 4,416, 194,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=172 */
%   else return -0.07877675473109141;  // std dev = 8,69e-08, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.13649558754074165;  // std dev = 4,504, 195,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=172 */
%   else return -0.07324622576333707;  // std dev = 8,30e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.12061977843464598;  // std dev = 4,326, 193,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=172 */
%   else return -0.06842697784420308;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.13853149615005478;  // std dev = 3,477, 185,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=172 */
%   else return -0.06419184008202579;  // std dev = 1,52e-07, 339,000 (wgt'ed) examples reached here.  /* #neg=339 */
Results
   AUC ROC   = 0.970528
   AUC PR    = 0.747826
   CLL	      = -0.16488
   Precision = 0.747826 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.855721


Total learning time: 7.87 seconds
Total inference time: 1.206 seconds
AUC ROC: 0.970528


Results in test set
   AUC ROC   = 0.970528
   AUC PR    = 0.747826
   CLL	      = -0.16488
   Precision = 0.747826 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.855721


Total inference time: 1.206 seconds
AUC ROC: 0.970528
Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [4.136, 19, 172], 'false': [2.02e-07, 338, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [4.504, 23, 172], 'false': [0.0, 317, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [4.416, 22, 172], 'false': [0.0, 315, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [4.752, 26, 172], 'false': [0.0, 335, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [4.416, 22, 172], 'false': [1.94e-07, 329, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [4.831, 27, 172], 'false': [1.1e-07, 309, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [4.416, 22, 172], 'false': [8.69e-08, 363, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [4.504, 23, 172], 'false': [8.3e-08, 335, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [4.326, 21, 172], 'false': [0.0, 315, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.477, 13, 172], 'false': [1.52e-07, 339, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true', 0.900523560209424)]
Tree #2: [('true', 0.882051282051282)]
Tree #3: [('true', 0.8865979381443299)]
Tree #4: [('true', 0.8686868686868687)]
Tree #5: [('true', 0.8865979381443299)]
Tree #6: [('true', 0.864321608040201)]
Tree #7: [('true', 0.8865979381443299)]
Tree #8: [('true', 0.882051282051282)]
Tree #9: [('true', 0.8911917098445595)]
Tree #10: [('true', 0.9297297297297298)]


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.8581489350995096;  // std dev = 1,04e-06, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.4295775065280837;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.14185106490048763;  // std dev = 1,98e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.7194734122109565;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F) )
%   | | then return 0.29744840516913434;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else return 0.01502367304973022;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else return -0.12544463852839216;  // std dev = 0,000, 334,000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.5553664367462833;  // std dev = 5,59e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.4118287602953437;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return 0.012925306708537709;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else return -0.1123163781936067;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.41751358415830925;  // std dev = 4,30e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.45951762355184744;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else return 0.029285052021955672;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else return -0.1015963294878366;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.3207118471601493;  // std dev = 3,72e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.05023684837449838;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return 0.02509906064116597;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else return -0.09269127618926046;  // std dev = 1,66e-07, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.25517224256949067;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.3377755927287582;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else return 0.10716168111101267;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.20975771563253512;  // std dev = 2,70e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.12020490865617989;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return -0.028148131977039678;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   else return -0.07877675473109143;  // std dev = 2,11e-08, 314,000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, F) )
%   | | | then return -0.17605261471777595;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.00861913803805121;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else return -0.07324622576333711;  // std dev = 6,66e-08, 352,000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.13407867061076623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else return 0.09660224227361265;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else return -0.06842697784420317;  // std dev = 0,000, 340,000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.1340070300080108;  // std dev = 9,42e-08, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.005657978457875666;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | else return 0.017849914655737067;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else return -0.06419184008202586;  // std dev = 1,36e-07, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
Results
   AUC ROC   = 0.999693
   AUC PR    = 0.998375
   CLL	      = -0.084285
   Precision = 0.955056 at threshold = 0.5
   Recall    = 0.988372
   F1        = 0.971429


Total learning time: 16.792 seconds
Total inference time: 2.437 seconds
AUC ROC: 0.999693


Best model AUC ROC so far: 0.999693


Refining iteration 2
********************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '0;true;author(D, A), samebib(D, E), author(E, B).;false;true', '0;true,false,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;false', '0;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;true', '0;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '1;true;author(D, A), samebib(D, E), author(E, B).;false;true', '1;true,false,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;false', '1;true,false;haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F).;true;true', '1;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '2;true;author(D, A), samebib(D, E), author(E, B).;false;true', '2;true,false,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;false', '2;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;true', '2;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '3;true;author(D, A), samebib(D, E), author(E, B).;false;true', '3;true,false,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;true', '3;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;false;true', '3;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '4;true;author(D, A), samebib(D, E), author(E, B).;false;true', '4;true,false,false,false;haswordauthor(A, J), haswordvenue(K, J).;false;false', '4;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;true', '4;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '5;true;author(D, A), samebib(D, E), author(E, B).;false;true', '5;true,false,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;true', '5;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;false;true', '5;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '6;true;author(D, A), samebib(D, E), author(E, B).;false;true', '6;true,false,false,false;haswordauthor(A, J), haswordvenue(K, J).;false;false', '6;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;true', '6;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '7;true;author(D, A), samebib(D, E), author(E, B).;false;true', '7;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '7;true,false,true;haswordauthor(A, F).;true;false', '7;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '8;true;author(D, A), samebib(D, E), author(E, B).;false;true', '8;true,false,false,false;haswordauthor(A, J), haswordvenue(K, J).;false;false', '8;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;true', '8;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '9;true;author(D, A), samebib(D, E), author(E, B).;false;true', '9;true,false,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;false', '9;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;true', '9;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true', 0.5714285714285714), ('true,false,false,false,false', 0.6666666666666666)]
Tree #2: [('true,false,true', 0.5), ('true,false,false,false,false', 0.8181818181818182)]
Tree #3: [('true,false,true', 0.6666666666666666), ('true,false,false,false,false', 0.8181818181818182)]
Tree #4: [('true,false,false,false,false', 0.8), ('true,false,true', 0.8)]
Tree #5: [('true,false,true', 0.5), ('true,false,false,false,false', 0.8)]
Tree #6: [('true,false,false,false,false', 0.7142857142857143), ('true,false,true', 0.8)]
Tree #7: [('true,false,true', 0.6666666666666666), ('true,false,false,false,false', 0.8333333333333334)]
Tree #8: [('true,false,true,true', 0.6), ('true,false,false,false', 0.8181818181818182)]
Tree #9: [('true,false,true', 0.6666666666666666), ('true,false,false,false,false', 0.7142857142857143)]
Tree #10: [('true,false,true', 0.5714285714285714), ('true,false,false,false,false', 0.7777777777777778)]


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.8581489350995096;  // std dev = 1,04e-06, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else return -0.14185106490048766;  // std dev = 1,79e-07, 328,000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.7194734122109565;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F) )
%   | | then return 0.18162893957529533;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | else return 0.021536911553079626;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else return -0.1254446385283922;  // std dev = 0,000, 348,000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.5553664367462833;  // std dev = 5,59e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.41571731288272834;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return -0.009355045634611972;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   else return -0.11231637819360667;  // std dev = 0,000, 321,000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.41751358415830925;  // std dev = 4,30e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.1632560232719275;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | | else return 0.08807236500015758;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else return -0.10159632948783663;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.3207118471601493;  // std dev = 3,72e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.12588001513487754;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | else return 0.04798395353601283;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else return -0.09269127618926042;  // std dev = 1,97e-07, 332,000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.25517224256949067;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.16739879049207687;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | | else return 0.06874956986923743;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else return -0.08518475138839678;  // std dev = 1,17e-07, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.20975771563253512;  // std dev = 2,70e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.12652970178068948;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | else return 0.09403712418709177;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else return -0.07877675473109143;  // std dev = 2,11e-08, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, F) )
%   | | | then return 0.19034235176754502;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.04332933476464928;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else return -0.07324622576333706;  // std dev = 8,16e-08, 328,000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.04755455537386769;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else return 0.11946816644072378;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.06842697784420317;  // std dev = 0,000, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.1340070300080108;  // std dev = 9,42e-08, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return -0.09127542473332403;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | else return -0.052818134435291576;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else return -0.06419184008202576;  // std dev = 1,57e-07, 345,000 (wgt'ed) examples reached here.  /* #neg=345 */
Results
   AUC ROC   = 0.999693
   AUC PR    = 0.998375
   CLL	      = -0.084069
   Precision = 0.955056 at threshold = 0.5
   Recall    = 0.988372
   F1        = 0.971429


Total learning time: 9.557 seconds
Total inference time: 2.564 seconds
AUC ROC: 0.999693


Best model AUC ROC so far: 0.999693


******************************************
Best model found
******************************************
Total revision time: 40.426
Best validation AUC ROC: 0.999693


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077308
   Precision = 0.972093 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.985849


Total inference time: 2.382 seconds
AUC ROC: 1.0
Dataset: imdb,cora, Run: 1, Fold: 1, Type: transfer, Total folds for small set: 1, Time: 00:36:40
{'CLL': -0.077308, 'Recall': 1.0, 'Learning time': 40.426, 'Precision': [0.972093, 0.5], 'Mapping Results': {'Possible mappings': 42, 'Total time': 3.1506171226501465, 'Generating mappings time': 0.04879331588745117, 'Finding best mapping': 0.003177165985107422, 'Generating paths time': 3.0224857330322266, 'Knowledge compiling time': 0.07615375518798828}, 'Parameter Learning Results': {'CLL': -0.139824, 'Recall': 1.0, 'Precision': [0.749104, 0.5], 'AUC ROC': 0.978659, 'F1': 0.856557, 'AUC PR': 0.749104}, 'AUC ROC': 1.0, 'F1': 0.985849, 'AUC PR': 1.0, 'Inference time': 2.382}
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.8422759192264967;  // std dev = 0,125, 63,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=62 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.6498156017661788;  // std dev = 0,406, 24,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | else if ( author(I, A), samebib(I, J), author(J, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | else return 0.058148935099512175;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else return -0.14185106490048763;  // std dev = 1,98e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.5798087540044022;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.6881831382408554;  // std dev = 0,182, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( author(H, A), venue(H, G) )
%   | | | then return 0.7194734122109543;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(I, B), venue(I, G) )
%   | | | | then return 0.7194734122109543;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.5166930800335113;  // std dev = 0,361, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( author(J, A), samebib(J, K), author(K, B) )
%   | | | then return 0.7289903184624619;  // std dev = 0,153, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | | | else if ( haswordauthor(A, L), haswordvenue(M, L) )
%   | | | | then return -0.2404554035721734;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | else return 0.1842553658468876;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.1254446385283921;  // std dev = 0,000, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, B), venue(E, D) )
%   | | then return 0.43166306164589235;  // std dev = 0,353, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.5347724452219689;  // std dev = 0,181, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( author(H, B), venue(H, G) )
%   | | | then return 0.5530151625302793;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( author(I, A), venue(I, G) )
%   | | | | then return 0.5530151625302793;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.38755655956975626;  // std dev = 0,356, 26,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | else if ( author(J, A), samebib(J, K), author(K, B) )
%   | | | then return 0.5655588314526326;  // std dev = 0,196, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | | | else if ( haswordauthor(B, L), haswordvenue(M, L) )
%   | | | | then return -0.19385424757967554;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | else return 0.07600808069744414;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else return -0.11231637819360674;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), samebib(C, D), author(D, B) )
%   then return 0.43929929196839795;  // std dev = 0,399, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then if ( haswordauthor(B, E) )
%   | | then return 0.009333526504607883;  // std dev = 0,491, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.10478243117640594;  // std dev = 0,286, 157,000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then return -0.10459608529834981;  // std dev = 0,124, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else return -0.09079138449817198;  // std dev = 0,132, 100,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=2 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D), venue(F, E), author(F, A) )
%   | | then return 0.2339705588834589;  // std dev = 0,317, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.30837242552963867;  // std dev = 0,168, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else if ( author(G, A), venue(G, E) )
%   | | | | then return 0.31378553421061073;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( author(H, B), venue(H, E) )
%   | | | | | then return 0.31378553421061073;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return 0.2526664763961775;  // std dev = 0,207, 24,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | else if ( author(I, A), samebib(I, J), author(J, B) )
%   | | then return 0.3329939951294879;  // std dev = 0,334, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | | else if ( haswordauthor(A, K), haswordvenue(L, K) )
%   | | | then return -0.24826900709758545;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.05034471173519211;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else return -0.0927507814869895;  // std dev = 0,009, 329,000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, B), venue(E, D) )
%   | | then return 0.1688799868234321;  // std dev = 0,322, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.24399644947790794;  // std dev = 0,169, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | else if ( author(F, A), samebib(F, G), author(G, B) )
%   | | then return 0.26970015737467334;  // std dev = 0,339, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.2048692361950034;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.18679950093094366;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else return -0.012495488343523401;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   else return -0.08522877710480525;  // std dev = 0,008, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.26637790225753477;  // std dev = 0,041, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1978134084283253;  // std dev = 0,170, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | else if ( author(F, A), samebib(F, G), author(G, B) )
%   | | then return 0.2202053506373249;  // std dev = 0,297, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.17350263870207538;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0092263528048084;  // std dev = 0,372, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   else return -0.07883985172218096;  // std dev = 0,008, 325,000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, A), samebib(C, D), author(D, B) )
%   then return 0.18813388316789625;  // std dev = 0,283, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then if ( haswordauthor(B, G), haswordvenue(F, G) )
%   | | then if ( haswordauthor(A, H), haswordauthor(B, H) )
%   | | | then return -0.16446771489221532;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.07301896377129778;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07678785606237062;  // std dev = 0,199, 143,000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | then return -0.07801979339221954;  // std dev = 0,186, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return -0.06030276672961076;  // std dev = 0,122, 109,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=2 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.16114198470813665;  // std dev = 0,251, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( haswordvenue(F, C) )
%   | | then return -0.03198610557257975;  // std dev = 1,141, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | | then return -0.14048175716081288;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | | then return -0.148680538218439;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | else return 0.032584908008351024;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else return -0.06857531592534206;  // std dev = 0,016, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( author(C, A), samebib(C, D), author(D, B) )
%   then return 0.1405813455884936;  // std dev = 0,224, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then if ( haswordauthor(B, E) )
%   | | then return -0.24880602897475157;  // std dev = 0,495, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.0668887971771225;  // std dev = 0,167, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then return -0.06633979859406677;  // std dev = 0,132, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else return -0.05415827667130233;  // std dev = 0,135, 91,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=2 */
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077308
   Precision = 0.972093 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.985849


Total learning time: 22.225 seconds
Total inference time: 3.004 seconds
AUC ROC: 1.0


Dataset: imdb,cora, Run: 1, Fold: 1, Type: scratch, Total folds for small set: 1, Time: 00:37:06
{'CLL': -0.077308, 'Recall': 1.0, 'Learning time': 22.225, 'Precision': [0.972093, 0.5], 'AUC ROC': 1.0, 'F1': 0.985849, 'AUC PR': 1.0, 'Inference time': 3.004}


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Tranferred structured tree: [['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.15e-07, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [4.13e-07, 0, 170], 'false': [7.88e-08, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.02e-07, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [1.15e-07, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [2.76e-07, 0, 170], 'false': [6.66e-08, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [7.88e-08, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [9.66e-08, 0, 170], 'false': [1.56e-07, 381, 0], 'true,false': [0.068, 1, 212]}]] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false']
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7983198752704486;  // std dev = 4,443, 351,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=330 */
%   else return -0.14185106490048893;  // std dev = 0,000, 651,000 (wgt'ed) examples reached here.  /* #neg=651 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6480554496024618;  // std dev = 5,244, 360,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=330 */
%   else return -0.12544463852839235;  // std dev = 0,000, 604,000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5170737411437741;  // std dev = 4,821, 355,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=330 */
%   else return -0.11231637819360608;  // std dev = 0,000, 617,000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.36333805181028;  // std dev = 5,625, 365,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=330 */
%   else return -0.10159632948783484;  // std dev = 4,97e-07, 666,000 (wgt'ed) examples reached here.  /* #neg=666 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.31143749318801645;  // std dev = 4,443, 351,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=330 */
%   else return -0.09269127618926194;  // std dev = 0,000, 635,000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.21857549980345597;  // std dev = 5,244, 360,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=330 */
%   else return -0.08518475138839678;  // std dev = 1,60e-07, 620,000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1797091419036878;  // std dev = 5,080, 358,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=330 */
%   else return -0.07877675473109262;  // std dev = 0,000, 625,000 (wgt'ed) examples reached here.  /* #neg=625 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15201047737900528;  // std dev = 4,909, 356,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=330 */
%   else return -0.07324622576333635;  // std dev = 2,70e-07, 638,000 (wgt'ed) examples reached here.  /* #neg=638 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.11124638860473011;  // std dev = 5,401, 362,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=330 */
%   else return -0.06842697784420372;  // std dev = 0,000, 632,000 (wgt'ed) examples reached here.  /* #neg=632 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.10168046467281729;  // std dev = 5,163, 359,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=330 */
%   else return -0.06419184008202518;  // std dev = 2,54e-07, 631,000 (wgt'ed) examples reached here.  /* #neg=631 */
Results
   AUC ROC   = 0.978086
   AUC PR    = 0.771028
   CLL	      = -0.143742
   Precision = 0.771028 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.870712


Total learning time: 16.053 seconds
Total inference time: 1.829 seconds
AUC ROC: 0.978086


Results in test set
   AUC ROC   = 0.978086
   AUC PR    = 0.771028
   CLL	      = -0.143742
   Precision = 0.771028 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.870712


Total inference time: 1.829 seconds
AUC ROC: 0.978086
Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [4.443, 21, 330], 'false': [0.0, 651, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.244, 30, 330], 'false': [0.0, 604, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [4.821, 25, 330], 'false': [0.0, 617, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.625, 35, 330], 'false': [4.97e-07, 666, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [4.443, 21, 330], 'false': [0.0, 635, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.244, 30, 330], 'false': [1.6e-07, 620, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.08, 28, 330], 'false': [0.0, 625, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [4.909, 26, 330], 'false': [2.7e-07, 638, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.401, 32, 330], 'false': [0.0, 632, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.163, 29, 330], 'false': [2.54e-07, 631, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true', 0.9401709401709402)]
Tree #2: [('true', 0.9166666666666666)]
Tree #3: [('true', 0.9295774647887324)]
Tree #4: [('true', 0.9041095890410958)]
Tree #5: [('true', 0.9401709401709402)]
Tree #6: [('true', 0.9166666666666666)]
Tree #7: [('true', 0.9217877094972067)]
Tree #8: [('true', 0.9269662921348315)]
Tree #9: [('true', 0.9116022099447514)]
Tree #10: [('true', 0.9192200557103064)]


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.35814893509951234;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.016851064900487787;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.016851064900487787;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | | else return -0.0168510649004878;  // std dev = 0,331, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   else return -0.14185106490048902;  // std dev = 0,000, 663,000 (wgt'ed) examples reached here.  /* #neg=663 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.7194734122109578;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.3541956812401803;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 0.0268545172881101;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return 0.0268545172881101;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return -0.02216509055502712;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   else return -0.12544463852839238;  // std dev = 0,000, 651,000 (wgt'ed) examples reached here.  /* #neg=651 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.24793995799951826;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.023593519913263337;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return 0.05692685324659667;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else return 0.04465049012916455;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else return -0.11231637819360638;  // std dev = 0,000, 653,000 (wgt'ed) examples reached here.  /* #neg=653 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F) )
%   | | then return 0.36507194463946485;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.020990218111295655;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.025195353196865056;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | | else return 3.1882911125064424E-4;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   else return -0.10159632948783506;  // std dev = 4,24e-07, 583,000 (wgt'ed) examples reached here.  /* #neg=583 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.32071184716015105;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, F) )
%   | | | then return 0.016482215565392366;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.03589665241038969;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -5.354737507722465E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.07964493637668725;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else return -0.09269127618926191;  // std dev = 0,000, 628,000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.25517224256948756;  // std dev = 3,82e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, F) )
%   | | | then return 0.041149315228090115;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.10667314370283887;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 2.9389841505895423E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.014073026247332683;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   else return -0.08518475138839675;  // std dev = 1,49e-07, 647,000 (wgt'ed) examples reached here.  /* #neg=647 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.2097577156325347;  // std dev = 2,53e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.14822256062506603;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 0.024067492612132074;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.04581817040819786;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | | else return -0.03677525835985317;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   else return -0.07877675473109265;  // std dev = 0,000, 632,000 (wgt'ed) examples reached here.  /* #neg=632 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.17709649774527653;  // std dev = 2,67e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.06679567777238761;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.002710021369085975;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | then return -0.025962262506059056;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.07254108496924522;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else return -0.0732462257633363;  // std dev = 2,83e-07, 656,000 (wgt'ed) examples reached here.  /* #neg=656 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F) )
%   | | then return 0.21699409151062424;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.06433134429324165;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.05432133165374222;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | | else return -0.016293269882766415;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   else return -0.0684269778442025;  // std dev = 1,90e-07, 667,000 (wgt'ed) examples reached here.  /* #neg=667 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.13400703000801178;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return -0.04221156306534034;  // std dev = 0,499, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 0.028050521491381136;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return 0.026916596989996832;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return -0.014124968853731433;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   else return -0.06419184008202516;  // std dev = 2,52e-07, 663,000 (wgt'ed) examples reached here.  /* #neg=663 */
Results
   AUC ROC   = 0.999634
   AUC PR    = 0.997858
   CLL	      = -0.08177
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.969697
   F1        = 0.984615


Total learning time: 27.259 seconds
Total inference time: 2.934 seconds
AUC ROC: 0.999634


Best model AUC ROC so far: 0.999634


Refining iteration 2
********************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '0;true;author(D, A), samebib(D, E), author(E, B).;false;true', '0;true,false,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;false', '0;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;true', '0;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '1;true;author(D, A), samebib(D, E), author(E, B).;false;true', '1;true,false,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;false', '1;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;true', '1;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '2;true;author(D, A), samebib(D, E), author(E, B).;false;true', '2;true,false,false,false;haswordauthor(A, J), haswordvenue(K, J).;false;false', '2;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;true', '2;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '3;true;author(D, A), samebib(D, E), author(E, B).;false;true', '3;true,false,false,false;haswordauthor(A, J), haswordvenue(K, J).;false;false', '3;true,false;haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F).;true;true', '3;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '4;true;author(D, A), samebib(D, E), author(E, B).;false;true', '4;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '4;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '5;true;author(D, A), samebib(D, E), author(E, B).;false;true', '5;true,false;haswordauthor(B, F), haswordvenue(G, F).;false;true', '5;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '6;true;author(D, A), samebib(D, E), author(E, B).;false;true', '6;true,false,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;false', '6;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;true', '6;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '7;true;author(D, A), samebib(D, E), author(E, B).;false;true', '7;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '7;true,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '8;true;author(D, A), samebib(D, E), author(E, B).;false;true', '8;true,false,false,false;haswordauthor(A, J), haswordvenue(K, J).;false;false', '8;true,false;haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F).;true;true', '8;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '9;true;author(D, A), samebib(D, E), author(E, B).;false;true', '9;true,false,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;false', '9;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;true', '9;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true', 0.5), ('true,false,false,true', 0.875), ('true,false,false,false,false', 0.875), ('true,false,false,false,true', 0.875)]
Tree #2: [('true,false,true', 0.5454545454545454), ('true,false,false,true', 0.8333333333333334), ('true,false,false,false,true', 0.8333333333333334), ('true,false,false,false,false', 0.8823529411764706)]
Tree #3: [('true,false,true', 0.5), ('true,false,false,false,true', 0.8), ('true,false,false,false,false', 0.8181818181818182), ('true,false,false,true', 0.8333333333333334)]
Tree #4: [('true,false,true', 0.6666666666666666), ('true,false,false,false,true', 0.875), ('true,false,false,true', 0.875)]
Tree #5: [('true,false,true,true', 0.6), ('true,false,false,true', 0.7777777777777778), ('true,false,true,false', 0.8888888888888888)]
Tree #6: [('true,false,true,true', 0.5714285714285714), ('true,false,true,false', 0.75), ('true,false,false,true', 0.8333333333333334)]
Tree #7: [('true,false,true', 0.5454545454545454), ('true,false,false,true', 0.8333333333333334), ('true,false,false,false,false', 0.8823529411764706), ('true,false,false,false,true', 0.8888888888888888)]
Tree #8: [('true,false,true,true', 0.5), ('true,false,false,false', 0.7777777777777778), ('true,false,true,false', 0.8571428571428571), ('true,false,false,true', 0.875)]
Tree #9: [('true,false,true', 0.6666666666666666), ('true,false,false,false,false', 0.8571428571428571), ('true,false,false,false,true', 0.9090909090909091), ('true,false,false,true', 0.9166666666666666)]
Tree #10: [('true,false,true', 0.5384615384615384), ('true,false,false,true', 0.8333333333333334), ('true,false,false,false,true', 0.8333333333333334), ('true,false,false,false,false', 0.8571428571428571)]


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.40360348055405776;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.050941973991396876;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | | else return -0.024204006076958388;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   else return -0.1418510649004889;  // std dev = 0,000, 644,000 (wgt'ed) examples reached here.  /* #neg=644 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.7194734122109578;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.30161144789714894;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.02870103826744545;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return 0.06423766359552878;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else return -0.04802109890528154;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   else return -0.1254446385283924;  // std dev = 0,000, 668,000 (wgt'ed) examples reached here.  /* #neg=668 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.24928171040433636;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.05652273985440022;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return 0.0636040226432036;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else return 4.886411105596844E-5;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   else return -0.11231637819360593;  // std dev = 0,000, 601,000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F) )
%   | | then return 0.24507756541665368;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.007707213499755621;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.03295164114640498;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | | else return 0.020556039754323734;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   else return -0.10159632948783491;  // std dev = 4,79e-07, 645,000 (wgt'ed) examples reached here.  /* #neg=645 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.32071184716015105;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.1709180467896476;  // std dev = 1,776, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.10041870322221669;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.0023494457121121656;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   else return -0.09269127618926204;  // std dev = 0,000, 671,000 (wgt'ed) examples reached here.  /* #neg=671 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.25517224256948756;  // std dev = 3,82e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.1128172912380201;  // std dev = 1,862, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.01906686043520506;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.046410693471741364;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else return -0.08518475138839678;  // std dev = 1,55e-07, 579,000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.2097577156325347;  // std dev = 2,53e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.24518414693285637;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.016496048834622138;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.03592025117424496;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | | else return 0.059066592824016204;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else return -0.07877675473109262;  // std dev = 0,000, 622,000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.17709649774527653;  // std dev = 2,67e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.11452573218680054;  // std dev = 1,716, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.06245332366765848;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.018429210318733708;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   else return -0.0732462257633364;  // std dev = 2,56e-07, 621,000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F) )
%   | | then return -0.08218176844911909;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.08521207967180489;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.04792765360216933;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | | else return 0.1827538310138491;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.06842697784420369;  // std dev = 0,000, 611,000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.13400703000801178;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.055243881093879385;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 4.867348509112653E-4;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return 0.07314676187186042;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.024524774130129146;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else return -0.06419184008202518;  // std dev = 2,54e-07, 632,000 (wgt'ed) examples reached here.  /* #neg=632 */
Results
   AUC ROC   = 0.999626
   AUC PR    = 0.997815
   CLL	      = -0.082705
   Precision = 0.953216 at threshold = 0.5
   Recall    = 0.987879
   F1        = 0.970238


Total learning time: 71.189 seconds
Total inference time: 2.789 seconds
AUC ROC: 0.999626


Best model AUC ROC so far: 0.999634


******************************************
Best model found
******************************************
Total revision time: 122.053
Best validation AUC ROC: 0.999634


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075261
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 2.4 seconds
AUC ROC: 1.0
Dataset: imdb,cora, Run: 1, Fold: 1, Type: transfer, Total folds for small set: 2, Time: 00:39:17
{'CLL': -0.075261, 'Recall': 1.0, 'Learning time': 122.053, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 42, 'Total time': 4.431741714477539, 'Generating mappings time': 0.04678034782409668, 'Finding best mapping': 0.0029823780059814453, 'Generating paths time': 4.133729457855225, 'Knowledge compiling time': 0.2482433319091797}, 'Parameter Learning Results': {'CLL': -0.141279, 'Recall': 1.0, 'Precision': [0.749104, 0.5], 'AUC ROC': 0.978659, 'F1': 0.856557, 'AUC PR': 0.749104}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 2.4}
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, B), venue(E, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.8232652141692794;  // std dev = 0,183, 86,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=83 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( author(H, B), venue(H, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else if ( author(I, A), venue(I, G) )
%   | | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else return 0.6676727446233209;  // std dev = 0,393, 42,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( author(J, A), samebib(J, K), author(K, B) )
%   | | | then return 0.8581489350995094;  // std dev = 1,08e-06, 182,000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | | | else if ( haswordauthor(A, L), haswordvenue(M, L) )
%   | | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.001006077956655051;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   else return -0.14185106490048857;  // std dev = 0,000, 595,000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.6760556517709151;  // std dev = 0,217, 101,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=96 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else return 0.5469658044904466;  // std dev = 0,407, 43,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=34 */
%   | | else if ( author(I, A), samebib(I, J), author(J, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0,000, 182,000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | | | else if ( haswordauthor(A, K), haswordvenue(L, K) )
%   | | | | then return 0.011134104502422276;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return 0.0118725756053479;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   else return -0.12544463852839238;  // std dev = 0,000, 663,000 (wgt'ed) examples reached here.  /* #neg=663 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.5007376332045272;  // std dev = 0,257, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.53883023537841;  // std dev = 0,183, 86,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=83 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( author(H, A), venue(H, G) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( author(I, B), venue(I, G) )
%   | | | | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | else return 0.47156843349424277;  // std dev = 0,376, 41,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | else if ( author(J, A), samebib(J, K), author(K, B) )
%   | | | then return 0.5553664367462833;  // std dev = 5,90e-07, 182,000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | | | else if ( haswordauthor(A, L), haswordvenue(M, L) )
%   | | | | then return 0.009666111816663575;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return -0.010092684232130325;  // std dev = 0,340, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   else return -0.11231637819360654;  // std dev = 0,000, 675,000 (wgt'ed) examples reached here.  /* #neg=675 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then if ( author(F, B), venue(F, D) )
%   | | | then return 0.4415331349815541;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3501515232219293;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( author(G, B), venue(G, D) )
%   | | | then return 0.33216220283988174;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.37745089368736195;  // std dev = 0,243, 79,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=74 */
%   | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | then if ( author(J, A), venue(J, I) )
%   | | | then return 0.4175135841583104;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | | then return 0.4914495922944458;  // std dev = 0,091, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.335550364541236;  // std dev = 0,224, 44,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | else return 0.40139116227694654;  // std dev = 0,186, 195,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=185 */
%   else return -0.101596329487835;  // std dev = 4,48e-07, 604,000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C), venue(E, D), author(E, A) )
%   | then return 0.35696421793925676;  // std dev = 0,048, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( haswordvenue(F, C) )
%   | | then return 0.3050781421846522;  // std dev = 0,209, 87,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=83 */
%   | | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | | then if ( author(I, B), venue(I, H) )
%   | | | | then return 0.3220774278329629;  // std dev = 0,018, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | else if ( author(J, A), venue(J, H) )
%   | | | | | then return 0.32364723719879285;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | | else return 0.23707294640471832;  // std dev = 0,392, 42,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | | else if ( author(K, A), samebib(K, L), author(L, B) )
%   | | | | then return 0.32696535850447483;  // std dev = 0,080, 182,000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | | | | else if ( haswordauthor(A, M), haswordvenue(N, M) )
%   | | | | | then return -0.08325097615743604;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | | | else return 0.02374242630135738;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else return -0.09269127618926185;  // std dev = 0,000, 599,000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.27983669736203154;  // std dev = 0,042, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( author(F, B), venue(F, D) )
%   | | | then return 0.18694353281287535;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.22152819268909776;  // std dev = 0,243, 79,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=74 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then if ( author(I, B), venue(I, H) )
%   | | | then return 0.25611359516976784;  // std dev = 0,016, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3295880685796297;  // std dev = 0,157, 41,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | else if ( author(J, A), samebib(J, K), author(K, B) )
%   | | | then return 0.25944431656238554;  // std dev = 0,070, 182,000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | | | else if ( haswordauthor(A, L), haswordvenue(M, L) )
%   | | | | then return 0.005142610135773151;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else return -0.0772839276605992;  // std dev = 0,331, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   else return -0.08518475138839678;  // std dev = 1,69e-07, 653,000 (wgt'ed) examples reached here.  /* #neg=653 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), samebib(C, D), author(D, B) )
%   then return 0.22901457087615346;  // std dev = 0,482, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | then if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordvenue(F, G) )
%   | | | then if ( haswordauthor(A, I), haswordauthor(B, I) )
%   | | | | then return -0.09141819360853608;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | | else return -0.07877675473109168;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07877675473109165;  // std dev = 2,47e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( author(J, B), venue(J, F) )
%   | | | then return -0.07877675473109165;  // std dev = 1,18e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.094548511439891;  // std dev = 0,111, 134,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=1 */
%   | else if ( haswordauthor(A, K), haswordvenue(L, K) )
%   | | then return -0.07769473691078727;  // std dev = 0,072, 168,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=1 */
%   | | else if ( haswordauthor(A, M), haswordauthor(B, M) )
%   | | | then return -0.06509940940376137;  // std dev = 0,331, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.07877675473109143;  // std dev = 5,77e-08, 258,000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, E), haswordauthor(B, E) )
%   | then if ( haswordauthor(B, C) )
%   | | then if ( author(F, B), venue(F, D) )
%   | | | then return 0.19945061407448533;  // std dev = 0,056, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else if ( author(G, A), venue(G, D) )
%   | | | | then return 0.10081353242035429;  // std dev = 0,283, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | | else return 0.13591999950235445;  // std dev = 0,250, 80,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=74 */
%   | | else if ( author(H, B), venue(H, D) )
%   | | | then return 0.18129214486828013;  // std dev = 0,019, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( author(I, A), venue(I, D) )
%   | | | | then return 0.1717596183645472;  // std dev = 0,009, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | else return 0.13981493432944228;  // std dev = 0,176, 41,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | else return -0.07329582652466304;  // std dev = 0,000533, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
%   else if ( author(J, A), samebib(J, K), author(K, B) )
%   | then return 0.18815436774105954;  // std dev = 0,396, 182,000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | else return -0.07621049883554154;  // std dev = 0,089, 427,000 (wgt'ed) examples reached here.  /* #neg=424 #pos=3 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C), venue(E, D), author(E, B) )
%   | then return 0.16953861961472175;  // std dev = 0,049, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( haswordvenue(F, C) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.17992745839637914;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1253795334386393;  // std dev = 0,232, 79,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=74 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then if ( author(J, B), venue(J, I) )
%   | | | | then return 0.1494722727881458;  // std dev = 0,010, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | else if ( haswordauthor(A, K), haswordvenue(L, K) )
%   | | | | | then return 0.18840804041796125;  // std dev = 0,058, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.07226345994861262;  // std dev = 0,322, 44,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | | else if ( author(M, A), samebib(M, N), author(N, B) )
%   | | | | then return 0.1524085573148375;  // std dev = 0,078, 182,000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | | | | else return -0.040274975695353155;  // std dev = 0,351, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   else return -0.06809880979780872;  // std dev = 0,012, 671,000 (wgt'ed) examples reached here.  /* #neg=671 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, B), venue(E, D) )
%   | | then if ( author(F, A), venue(F, D) )
%   | | | then return 0.12883711068243675;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.059765946988565376;  // std dev = 0,286, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( author(G, A), venue(G, D) )
%   | | | then return 0.15488805085441415;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1184405253897911;  // std dev = 0,211, 78,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=74 */
%   | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | then if ( author(J, B), venue(J, I) )
%   | | | then return 0.13144908482086073;  // std dev = 0,009, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else if ( author(K, A), venue(K, I) )
%   | | | | then return 0.13059834441824353;  // std dev = 0,012, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else return 0.07538418387104502;  // std dev = 0,318, 40,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=34 */
%   | | else return 0.11897151561014296;  // std dev = 0,122, 201,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=185 */
%   else return -0.06387201713219233;  // std dev = 0,011, 602,000 (wgt'ed) examples reached here.  /* #neg=602 */
Results
   AUC ROC   = 0.999755
   AUC PR    = 0.998086
   CLL	      = -0.082587
   Precision = 0.954338 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.976636


Total learning time: 54.4 seconds
Total inference time: 2.91 seconds
AUC ROC: 0.999755


Dataset: imdb,cora, Run: 1, Fold: 1, Type: scratch, Total folds for small set: 2, Time: 00:40:15
{'CLL': -0.082587, 'Recall': 1.0, 'Learning time': 54.4, 'Precision': [0.954338, 0.5], 'AUC ROC': 0.999755, 'F1': 0.976636, 'AUC PR': 0.998086, 'Inference time': 2.91}


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Tranferred structured tree: [['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.15e-07, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [4.13e-07, 0, 170], 'false': [7.88e-08, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.02e-07, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [1.15e-07, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [2.76e-07, 0, 170], 'false': [6.66e-08, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [7.88e-08, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [9.66e-08, 0, 170], 'false': [1.56e-07, 381, 0], 'true,false': [0.068, 1, 212]}]] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false']
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7849312087025908;  // std dev = 5,934, 519,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=481 */
%   else return -0.1418510649004901;  // std dev = 0,000, 924,000 (wgt'ed) examples reached here.  /* #neg=924 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6432737073977789;  // std dev = 6,606, 529,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=481 */
%   else return -0.12544463852839247;  // std dev = 0,000, 915,000 (wgt'ed) examples reached here.  /* #neg=915 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.525873245196125;  // std dev = 5,635, 515,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=481 */
%   else return -0.11231637819360706;  // std dev = 0,000, 874,000 (wgt'ed) examples reached here.  /* #neg=874 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.365691822291349;  // std dev = 6,791, 532,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=481 */
%   else return -0.10159632948783442;  // std dev = 6,42e-07, 898,000 (wgt'ed) examples reached here.  /* #neg=898 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.30688660331407946;  // std dev = 5,635, 515,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=481 */
%   else return -0.09269127618926076;  // std dev = 3,38e-07, 910,000 (wgt'ed) examples reached here.  /* #neg=910 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2240465537054561;  // std dev = 6,215, 523,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=481 */
%   else return -0.08518475138839675;  // std dev = 1,91e-07, 907,000 (wgt'ed) examples reached here.  /* #neg=907 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.16322543972812126;  // std dev = 6,791, 532,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=481 */
%   else return -0.0787767547310934;  // std dev = 0,000, 949,000 (wgt'ed) examples reached here.  /* #neg=949 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15400667217530575;  // std dev = 6,006, 520,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=481 */
%   else return -0.07324622576333585;  // std dev = 4,11e-07, 879,000 (wgt'ed) examples reached here.  /* #neg=879 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.13152507085909593;  // std dev = 5,861, 518,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=481 */
%   else return -0.06842697784420303;  // std dev = 0,000, 931,000 (wgt'ed) examples reached here.  /* #neg=931 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.09695469765806077;  // std dev = 6,415, 526,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=481 */
%   else return -0.06419184008202497;  // std dev = 2,68e-07, 898,000 (wgt'ed) examples reached here.  /* #neg=898 */
Results
   AUC ROC   = 0.978597
   AUC PR    = 0.718984
   CLL	      = -0.140706
   Precision = 0.718984 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.836522


Total learning time: 39.368 seconds
Total inference time: 2.859 seconds
AUC ROC: 0.978597


Results in test set
   AUC ROC   = 0.978597
   AUC PR    = 0.718984
   CLL	      = -0.140706
   Precision = 0.718984 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.836522


Total inference time: 2.859 seconds
AUC ROC: 0.978597
Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.934, 38, 481], 'false': [0.0, 924, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [6.606, 48, 481], 'false': [0.0, 915, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.635, 34, 481], 'false': [0.0, 874, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [6.791, 51, 481], 'false': [6.42e-07, 898, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.635, 34, 481], 'false': [3.38e-07, 910, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [6.215, 42, 481], 'false': [1.91e-07, 907, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [6.791, 51, 481], 'false': [0.0, 949, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [6.006, 39, 481], 'false': [4.11e-07, 879, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.861, 37, 481], 'false': [0.0, 931, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [6.415, 45, 481], 'false': [2.68e-07, 898, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true', 0.9267822736030829)]
Tree #2: [('true', 0.9092627599243857)]
Tree #3: [('true', 0.9339805825242719)]
Tree #4: [('true', 0.9041353383458647)]
Tree #5: [('true', 0.9339805825242719)]
Tree #6: [('true', 0.9196940726577438)]
Tree #7: [('true', 0.9041353383458647)]
Tree #8: [('true', 0.925)]
Tree #9: [('true', 0.9285714285714286)]
Tree #10: [('true', 0.9144486692015209)]


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.8581489350995081;  // std dev = 2,12e-06, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, F) )
%   | | | then return 0.10814893509951236;  // std dev = 0,433, 40,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.016851064900487787;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   else return -0.14185106490049007;  // std dev = 0,000, 913,000 (wgt'ed) examples reached here.  /* #neg=913 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.7194734122109583;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, F) )
%   | | | then return 0.10762533257259782;  // std dev = 0,440, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.17780077116908896;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 0.11018785062144343;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.13981214937855654;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839247;  // std dev = 0,000, 909,000 (wgt'ed) examples reached here.  /* #neg=909 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.0805567358217524;  // std dev = 0,433, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.06922820424725074;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.1238286182573222;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360735;  // std dev = 0,000, 937,000 (wgt'ed) examples reached here.  /* #neg=937 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.4175135841583124;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.10851655707886479;  // std dev = 0,454, 38,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else return 0.02966833223022795;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.10159632948783441;  // std dev = 6,52e-07, 915,000 (wgt'ed) examples reached here.  /* #neg=915 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.3207118471601501;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, F) )
%   | | | then return 0.05782378335697034;  // std dev = 0,437, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.025434540456340794;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.013150023272279729;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.11396919759893956;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926058;  // std dev = 3,67e-07, 952,000 (wgt'ed) examples reached here.  /* #neg=952 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.2551722425694871;  // std dev = 5,23e-07, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, F) )
%   | | | then return 0.07776458237155569;  // std dev = 0,452, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.07211455115214738;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.021739229595117253;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.1029569700062096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839675;  // std dev = 1,91e-07, 907,000 (wgt'ed) examples reached here.  /* #neg=907 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.20975771563253462;  // std dev = 2,67e-07, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, F) )
%   | | | then return 0.0228534953913613;  // std dev = 0,429, 41,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return 0.15186581360815296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.022010991065910594;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.09382937286736333;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109332;  // std dev = 0,000, 900,000 (wgt'ed) examples reached here.  /* #neg=900 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.1770964977452778;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.01072189235292352;  // std dev = 0,425, 47,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.04487585794667826;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.08614979849133832;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333607;  // std dev = 3,84e-07, 914,000 (wgt'ed) examples reached here.  /* #neg=914 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.023115729450486653;  // std dev = 0,433, 40,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.06304438892149156;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | then return -0.012537932303682674;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.07960479349483503;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.068426977844203;  // std dev = 0,000, 912,000 (wgt'ed) examples reached here.  /* #neg=912 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.1340070300080125;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, F) )
%   | | | then return -0.008742305615634108;  // std dev = 0,416, 45,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | | else return -0.010447077454199783;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.053271807358964744;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.06419184008202496;  // std dev = 2,43e-07, 931,000 (wgt'ed) examples reached here.  /* #neg=931 */
Results
   AUC ROC   = 0.999528
   AUC PR    = 0.996456
   CLL	      = -0.078872
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.975052
   F1        = 0.987368


Total learning time: 65.935 seconds
Total inference time: 3.666 seconds
AUC ROC: 0.999528


Best model AUC ROC so far: 0.999528


Refining iteration 2
********************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '0;true;author(D, A), samebib(D, E), author(E, B).;false;true', '0;true,false;haswordauthor(B, F), haswordvenue(G, F).;false;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '1;true;author(D, A), samebib(D, E), author(E, B).;false;true', '1;true,false;haswordauthor(B, F), haswordvenue(G, F).;false;true', '1;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '2;true;author(D, A), samebib(D, E), author(E, B).;false;true', '2;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true', '2;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;false', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '3;true;author(D, A), samebib(D, E), author(E, B).;false;false', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '4;true;author(D, A), samebib(D, E), author(E, B).;false;true', '4;true,false;haswordauthor(B, F), haswordvenue(G, F).;false;true', '4;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '5;true;author(D, A), samebib(D, E), author(E, B).;false;true', '5;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '5;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '6;true;author(D, A), samebib(D, E), author(E, B).;false;true', '6;true,false;haswordauthor(B, F), haswordvenue(G, F).;false;true', '6;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '7;true;author(D, A), samebib(D, E), author(E, B).;false;true', '7;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '7;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;true;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '8;true;author(D, A), samebib(D, E), author(E, B).;false;true', '8;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '8;true,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;false', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '9;true;author(D, A), samebib(D, E), author(E, B).;false;true', '9;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '9;true,false,true;haswordauthor(A, F).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,false', 0.75), ('true,false,true,true', 0.75), ('true,false,false', 0.875)]
Tree #2: [('true,false,true,false', 0.6666666666666666), ('true,false,true,true', 0.7368421052631579), ('true,false,false,true', 0.75)]
Tree #3: [('true,false,true', 0.75), ('true,false,false,true', 0.8888888888888888)]
Tree #4: [('true,false,true', 0.7105263157894737), ('true,false,false', 0.8)]
Tree #5: [('true,false,true,true', 0.7435897435897436), ('true,false,true,false', 0.8), ('true,false,false,true', 0.8333333333333334)]
Tree #6: [('true,false,true,true', 0.7142857142857143), ('true,false,true,false', 0.75), ('true,false,false,true', 0.8)]
Tree #7: [('true,false,true,false', 0.6666666666666666), ('true,false,true,true', 0.7560975609756098), ('true,false,false,true', 0.8333333333333334)]
Tree #8: [('true,false,false,true', 0.75), ('true,false,true', 0.7659574468085106)]
Tree #9: [('true,false,true,true', 0.75), ('true,false,true,false', 0.75), ('true,false,false,true', 0.8)]
Tree #10: [('true,false,false', 0.75), ('true,false,true,true', 0.7777777777777778), ('true,false,true,false', 0.8)]


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.8581489350995081;  // std dev = 2,12e-06, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.15544623239680966;  // std dev = 2,780, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else return -0.14185106490049004;  // std dev = 0,000, 907,000 (wgt'ed) examples reached here.  /* #neg=907 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.7194734122109583;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.1524393316042449;  // std dev = 2,746, 35,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 0.3580264217591941;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.14197357824080592;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839247;  // std dev = 0,000, 919,000 (wgt'ed) examples reached here.  /* #neg=919 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.03861764799060809;  // std dev = 0,416, 45,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | | else return -0.04853842745347776;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | then return 0.8163954257683859;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12554160496791236;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360737;  // std dev = 0,000, 943,000 (wgt'ed) examples reached here.  /* #neg=943 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.4175135841583124;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else return 0.09198257383491712;  // std dev = 2,911, 42,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   else return -0.10159632948783436;  // std dev = 6,74e-07, 956,000 (wgt'ed) examples reached here.  /* #neg=956 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.3207118471601501;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.023330244691750268;  // std dev = 2,913, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.03154274525287807;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.12190352322064993;  // std dev = 6,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09269127618926064;  // std dev = 3,67e-07, 940,000 (wgt'ed) examples reached here.  /* #neg=940 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.2551722425694871;  // std dev = 5,23e-07, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.06154952439153546;  // std dev = 2,838, 41,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.03012014667279424;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10944428549970028;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839675;  // std dev = 1,95e-07, 950,000 (wgt'ed) examples reached here.  /* #neg=950 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.20975771563253462;  // std dev = 2,67e-07, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.05683067651987388;  // std dev = 2,795, 39,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 0.046978622527808385;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.09922421034342908;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.0787767547310933;  // std dev = 0,000, 894,000 (wgt'ed) examples reached here.  /* #neg=894 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.1770964977452778;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.029446891644031095;  // std dev = 2,861, 43,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.16965534682814726;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.09070158062792726;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07324622576333605;  // std dev = 3,87e-07, 909,000 (wgt'ed) examples reached here.  /* #neg=909 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return -0.002933015530037142;  // std dev = 2,914, 48,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.16440301859206266;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.08349351865836124;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06842697784420289;  // std dev = 0,000, 960,000 (wgt'ed) examples reached here.  /* #neg=960 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.1340070300080125;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #pos=469 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, F) )
%   | | | then return -0.005398330271958932;  // std dev = 2,780, 44,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return -0.09572185701757226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.039967483863163275;  // std dev = 0,844, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.064191840082025;  // std dev = 2,38e-07, 857,000 (wgt'ed) examples reached here.  /* #neg=857 */
Results
   AUC ROC   = 0.999517
   AUC PR    = 0.996384
   CLL	      = -0.079235
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.975052
   F1        = 0.987368


Total learning time: 580.438 seconds
Total inference time: 3.136 seconds
AUC ROC: 0.999517


Best model AUC ROC so far: 0.999528


******************************************
Best model found
******************************************
Total revision time: 695.4019999999999
Best validation AUC ROC: 0.999528


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071584
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 2.233 seconds
AUC ROC: 1.0
Dataset: imdb,cora, Run: 1, Fold: 1, Type: transfer, Total folds for small set: 3, Time: 00:52:03
{'CLL': -0.071584, 'Recall': 1.0, 'Learning time': 695.4019999999999, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 42, 'Total time': 4.344253301620483, 'Generating mappings time': 0.0477137565612793, 'Finding best mapping': 0.0029730796813964844, 'Generating paths time': 4.018609046936035, 'Knowledge compiling time': 0.2749512195587158}, 'Parameter Learning Results': {'CLL': -0.141216, 'Recall': 1.0, 'Precision': [0.749104, 0.5], 'AUC ROC': 0.978659, 'F1': 0.856557, 'AUC PR': 0.749104}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 2.233}
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.7228832346164173;  // std dev = 0,342, 207,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=179 */
%   | else if ( author(F, A), samebib(F, G), author(G, B) )
%   | | then return 0.8581489350995086;  // std dev = 1,07e-06, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490049018;  // std dev = 0,000, 956,000 (wgt'ed) examples reached here.  /* #neg=956 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.7194734122109542;  // std dev = 7,30e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( author(F, B), venue(F, D) )
%   | | | then if ( samebib(F, G), author(G, A) )
%   | | | | then return 0.7459479702807218;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | | else return 0.4126146369473886;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6016180733735071;  // std dev = 0,351, 194,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=166 */
%   | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | then if ( author(J, A), venue(J, I) )
%   | | | then return 0.7194734122109551;  // std dev = 5,96e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | | then return 0.7194734122109554;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | | else return 0.6344726952859315;  // std dev = 0,264, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0.6921188434177467;  // std dev = 0,152, 214,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=207 */
%   else return -0.12544463852839247;  // std dev = 0,000, 923,000 (wgt'ed) examples reached here.  /* #neg=923 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.49409995156645087;  // std dev = 0,318, 224,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=198 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.555366436746285;  // std dev = 2,98e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | | then return 0.5553664367462849;  // std dev = 6,66e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | | else return 0.5617210486594255;  // std dev = 0,125, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else if ( author(J, A), samebib(J, K), author(K, B) )
%   | | | then return 0.5621105903690905;  // std dev = 0,000, 206,000 (wgt'ed) examples reached here.  /* #pos=206 */
%   | | | else if ( haswordauthor(B, L), haswordvenue(M, L) )
%   | | | | then return -0.09260985829168793;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return -0.22274649601047333;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360736;  // std dev = 0,000, 941,000 (wgt'ed) examples reached here.  /* #neg=941 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.4324843221288177;  // std dev = 5,16e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.30761516361351976;  // std dev = 0,389, 220,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=179 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( author(H, A), venue(H, G) )
%   | | | then return 0.4175135841583106;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | | then return 0.4175135841583105;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | | else return 0.3739674933187065;  // std dev = 0,226, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | then if ( author(M, B), venue(M, L) )
%   | | | | then return 0.42253431241280204;  // std dev = 2,11e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | else return 0.3879989020547842;  // std dev = 0,170, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | | else return 0.41857911458258457;  // std dev = 0,607, 154,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=153 */
%   else return -0.10159632948783427;  // std dev = 6,64e-07, 897,000 (wgt'ed) examples reached here.  /* #neg=897 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.33088022656911964;  // std dev = 3,65e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( author(F, B), venue(F, D) )
%   | | | then return 0.39698902622557675;  // std dev = 0,106, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.30686204421468;  // std dev = 0,316, 187,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=166 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then return 0.32071184716015;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.302344096845499;  // std dev = 0,154, 57,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=54 */
%   | | else if ( author(K, A), samebib(K, L), author(L, B) )
%   | | | then return 0.32969119018468546;  // std dev = 0,137, 206,000 (wgt'ed) examples reached here.  /* #pos=206 */
%   | | | else if ( haswordauthor(A, M), haswordvenue(N, M) )
%   | | | | then return -0.30294836327490604;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return -0.2584769734077086;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926062;  // std dev = 3,67e-07, 942,000 (wgt'ed) examples reached here.  /* #neg=942 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.21351366668435767;  // std dev = 0,327, 226,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=198 */
%   | else if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | | then return 0.2551722425694897;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else if ( author(I, B), venue(I, F) )
%   | | | | then return 0.2616796471297673;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | else return 0.24772847413305937;  // std dev = 0,143, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | else if ( author(J, A), samebib(J, K), author(K, B) )
%   | | | then return 0.26131487039268253;  // std dev = 0,120, 206,000 (wgt'ed) examples reached here.  /* #pos=206 */
%   | | | else if ( haswordauthor(A, L), haswordvenue(M, L) )
%   | | | | then return -0.14540740623360926;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return -0.21208942864743693;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839675;  // std dev = 1,93e-07, 921,000 (wgt'ed) examples reached here.  /* #neg=921 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C), venue(E, D), author(E, B) )
%   | then return 0.25087771095817174;  // std dev = 0,121, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( haswordvenue(F, C) )
%   | | then return 0.18131815152088746;  // std dev = 0,316, 202,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=179 */
%   | | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | | then if ( author(I, B), venue(I, H) )
%   | | | | then return 0.21351018678094633;  // std dev = 0,006, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | | then return 0.20975771563253595;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | | | else return 0.17448641527858713;  // std dev = 0,192, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else if ( author(L, A), samebib(L, M), author(M, B) )
%   | | | | then return 0.2141024425324909;  // std dev = 0,105, 206,000 (wgt'ed) examples reached here.  /* #pos=206 */
%   | | | | else return -0.1641560561210513;  // std dev = 0,895, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.07877675473109334;  // std dev = 0,000, 913,000 (wgt'ed) examples reached here.  /* #neg=913 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.14248145621171723;  // std dev = 0,313, 223,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=198 */
%   | else if ( author(E, A), samebib(E, F), author(F, B) )
%   | | then return 0.18217175662628077;  // std dev = 0,126, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | | then return -0.2425545025334349;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | | then return -0.07427338158717056;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return -0.15595713845980133;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333602;  // std dev = 3,92e-07, 904,000 (wgt'ed) examples reached here.  /* #neg=904 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.1688189508971862;  // std dev = 0,020, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( author(F, B), venue(F, D) )
%   | | | then return 0.1948657560938671;  // std dev = 0,073, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.06265482916673575;  // std dev = 0,379, 201,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=166 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then return 0.15204427536899967;  // std dev = 0,000652, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else if ( author(K, B), venue(K, H) )
%   | | | | then return 0.15516944481299355;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | else return 0.10433826248691183;  // std dev = 0,204, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | else if ( author(L, A), samebib(L, M), author(M, B) )
%   | | | then return 0.15491846441794982;  // std dev = 0,082, 206,000 (wgt'ed) examples reached here.  /* #pos=206 */
%   | | | else return -0.11293139612345364;  // std dev = 0,895, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.06842697784420296;  // std dev = 0,000, 950,000 (wgt'ed) examples reached here.  /* #neg=950 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.0913352022273897;  // std dev = 0,328, 226,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=198 */
%   | else if ( author(E, A), samebib(E, F), author(F, B) )
%   | | then return 0.1382411044680644;  // std dev = 0,130, 281,000 (wgt'ed) examples reached here.  /* #pos=281 */
%   | | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | | then return -0.29143173219973906;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | | then return -0.08467141098508653;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else return -0.12373671083768363;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202494;  // std dev = 2,46e-07, 966,000 (wgt'ed) examples reached here.  /* #neg=966 */
Results
   AUC ROC   = 0.999912
   AUC PR    = 0.999315
   CLL	      = -0.078302
   Precision = 0.972093 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.985849


Total learning time: 98.435 seconds
Total inference time: 2.267 seconds
AUC ROC: 0.999912


Dataset: imdb,cora, Run: 1, Fold: 1, Type: scratch, Total folds for small set: 3, Time: 00:53:44
{'CLL': -0.078302, 'Recall': 1.0, 'Learning time': 98.435, 'Precision': [0.972093, 0.5], 'AUC ROC': 0.999912, 'F1': 0.985849, 'AUC PR': 0.999315, 'Inference time': 2.267}


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Tranferred structured tree: [['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.15e-07, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [4.13e-07, 0, 170], 'false': [7.88e-08, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.02e-07, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [1.15e-07, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [2.76e-07, 0, 170], 'false': [6.66e-08, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [7.88e-08, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 381, 0], 'true,false': [0.068, 1, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [9.66e-08, 0, 170], 'false': [1.56e-07, 381, 0], 'true,false': [0.068, 1, 212]}]] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false']
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7690250680300214;  // std dev = 7,331, 662,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=603 */
%   else return -0.14185106490049074;  // std dev = 0,000, 1.198,000 (wgt'ed) examples reached here.  /* #neg=1.198 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6479809959997055;  // std dev = 7,331, 662,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=603 */
%   else return -0.12544463852839252;  // std dev = 0,000, 1.097,000 (wgt'ed) examples reached here.  /* #neg=1.097 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5054711333874868;  // std dev = 7,331, 662,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=603 */
%   else return -0.11231637819360803;  // std dev = 0,000, 1.125,000 (wgt'ed) examples reached here.  /* #neg=1.125 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.38029505206513864;  // std dev = 7,331, 662,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=603 */
%   else return -0.10159632948783409;  // std dev = 7,08e-07, 1.094,000 (wgt'ed) examples reached here.  /* #neg=1.094 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2822948067985043;  // std dev = 7,553, 666,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=603 */
%   else return -0.09269127618926006;  // std dev = 3,77e-07, 1.099,000 (wgt'ed) examples reached here.  /* #neg=1.099 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.21322884826052949;  // std dev = 7,765, 670,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=603 */
%   else return -0.08518475138839675;  // std dev = 2,19e-07, 1.165,000 (wgt'ed) examples reached here.  /* #neg=1.165 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.18708481794422505;  // std dev = 7,040, 657,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=603 */
%   else return -0.07877675473109359;  // std dev = 0,000, 1.091,000 (wgt'ed) examples reached here.  /* #neg=1.091 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.14910886937100495;  // std dev = 7,158, 659,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=603 */
%   else return -0.07324622576333734;  // std dev = 0,000, 1.191,000 (wgt'ed) examples reached here.  /* #neg=1.191 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.11655023387377746;  // std dev = 7,443, 664,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=603 */
%   else return -0.06842697784420206;  // std dev = 2,23e-07, 1.129,000 (wgt'ed) examples reached here.  /* #neg=1.129 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.10347795104478744;  // std dev = 7,216, 660,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=603 */
%   else return -0.0641918400820258;  // std dev = 0,000, 1.149,000 (wgt'ed) examples reached here.  /* #neg=1.149 */
Results
   AUC ROC   = 0.976157
   AUC PR    = 0.690722
   CLL	      = -0.147363
   Precision = 0.690722 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.817073


Total learning time: 106.826 seconds
Total inference time: 2.46 seconds
AUC ROC: 0.976157


Results in test set
   AUC ROC   = 0.976157
   AUC PR    = 0.690722
   CLL	      = -0.147363
   Precision = 0.690722 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.817073


Total inference time: 2.46 seconds
AUC ROC: 0.976157
Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [7.331, 59, 603], 'false': [0.0, 1198, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [7.331, 59, 603], 'false': [0.0, 1097, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [7.331, 59, 603], 'false': [0.0, 1125, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [7.331, 59, 603], 'false': [7.08e-07, 1094, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [7.553, 63, 603], 'false': [3.77e-07, 1099, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [7.765, 67, 603], 'false': [2.19e-07, 1165, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [7.04, 54, 603], 'false': [0.0, 1091, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [7.158, 56, 603], 'false': [0.0, 1191, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [7.443, 61, 603], 'false': [2.23e-07, 1129, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [7.216, 57, 603], 'false': [0.0, 1149, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true', 0.9108761329305136)]
Tree #2: [('true', 0.9108761329305136)]
Tree #3: [('true', 0.9108761329305136)]
Tree #4: [('true', 0.9108761329305136)]
Tree #5: [('true', 0.9054054054054054)]
Tree #6: [('true', 0.9)]
Tree #7: [('true', 0.9178082191780822)]
Tree #8: [('true', 0.9150227617602428)]
Tree #9: [('true', 0.9081325301204819)]
Tree #10: [('true', 0.9136363636363637)]


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.8581489350995078;  // std dev = 2,82e-06, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, F) )
%   | | | then return 0.11455919150976876;  // std dev = 0,437, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.050941973991396876;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.14185106490049068;  // std dev = 0,000, 1.157,000 (wgt'ed) examples reached here.  /* #neg=1.157 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.7194734122109585;  // std dev = 0,000, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, F) )
%   | | | then return 0.07618177997158287;  // std dev = 0,422, 43,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.01758869918022089;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.010762336404471228;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.12544463852839252;  // std dev = 0,000, 1.190,000 (wgt'ed) examples reached here.  /* #neg=1.190 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.555366436746283;  // std dev = 1,05e-06, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, F) )
%   | | | then return 0.06586662639848162;  // std dev = 0,422, 43,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.015343708338623557;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.05117119101664861;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.11231637819360807;  // std dev = 0,000, 1.145,000 (wgt'ed) examples reached here.  /* #neg=1.145 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.4175135841583128;  // std dev = 0,000, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, F) )
%   | | | then return 0.05651547916159644;  // std dev = 0,422, 43,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.1800293098566131;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.014198993815425498;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783408;  // std dev = 7,14e-07, 1.106,000 (wgt'ed) examples reached here.  /* #neg=1.106 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.32071184716014783;  // std dev = 2,06e-07, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, F) )
%   | | | then return 0.11863935604132463;  // std dev = 0,460, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.03640832574528489;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.03529910276099928;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.09269127618926;  // std dev = 3,77e-07, 1.116,000 (wgt'ed) examples reached here.  /* #neg=1.116 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.2551722425694891;  // std dev = 0,000, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, F) )
%   | | | then return 0.014486561093393495;  // std dev = 0,412, 46,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.03222777078951037;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.04804645296553832;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839675;  // std dev = 2,15e-07, 1.111,000 (wgt'ed) examples reached here.  /* #neg=1.111 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.20975771563253456;  // std dev = 2,53e-07, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return -1.1042528851309552E-4;  // std dev = 0,404, 54,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.013233459135536418;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.07877675473109362;  // std dev = 0,000, 1.109,000 (wgt'ed) examples reached here.  /* #neg=1.109 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.1770964977452787;  // std dev = 0,000, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 0.022032935230131542;  // std dev = 0,419, 44,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return 0.006192585252072209;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | then return -0.023406107267785727;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.07324622576333724;  // std dev = 0,000, 1.165,000 (wgt'ed) examples reached here.  /* #neg=1.165 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.023701068135795277;  // std dev = 0,422, 43,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.17028933857725567;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | then return -0.012396849674141463;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06842697784420178;  // std dev = 2,83e-07, 1.198,000 (wgt'ed) examples reached here.  /* #neg=1.198 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.13400703000801148;  // std dev = 0,000, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, F) )
%   | | | then return 0.025294876172310205;  // std dev = 0,426, 42,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return -0.05260084829247807;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.08763333289754568;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06419184008202568;  // std dev = 0,000, 1.125,000 (wgt'ed) examples reached here.  /* #neg=1.125 */
Results
   AUC ROC   = 0.999667
   AUC PR    = 0.997398
   CLL	      = -0.076832
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9801
   F1        = 0.98995


Total learning time: 136.61599999999999 seconds
Total inference time: 4.661 seconds
AUC ROC: 0.999667


Best model AUC ROC so far: 0.999667


Refining iteration 2
********************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '0;true;author(D, A), samebib(D, E), author(E, B).;false;true', '0;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '0;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '1;true;author(D, A), samebib(D, E), author(E, B).;false;true', '1;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '1;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '2;true;author(D, A), samebib(D, E), author(E, B).;false;true', '2;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '2;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;false', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '3;true;author(D, A), samebib(D, E), author(E, B).;false;true', '3;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '3;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;false', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '4;true;author(D, A), samebib(D, E), author(E, B).;false;true', '4;true,false;haswordauthor(B, F), haswordvenue(G, F).;false;true', '4;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '5;true;author(D, A), samebib(D, E), author(E, B).;false;true', '5;true,false;haswordauthor(B, F), haswordvenue(G, F).;false;true', '5;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '6;true;author(D, A), samebib(D, E), author(E, B).;false;true', '6;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;false', '6;true,false,true;haswordauthor(B, H), haswordvenue(I, H).;true;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '7;true;author(D, A), samebib(D, E), author(E, B).;false;true', '7;true,false;haswordauthor(B, F), haswordvenue(G, F).;false;true', '7;true,false,false;haswordauthor(A, J), haswordvenue(K, J).;false;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '8;true;author(D, A), samebib(D, E), author(E, B).;false;true', '8;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '8;true,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;false', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '9;true;author(D, A), samebib(D, E), author(E, B).;false;true', '9;true,false;haswordauthor(B, F), haswordvenue(G, F).;false;true', '9;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,true', 0.7435897435897436), ('true,false,true,false', 0.8), ('true,false,false,true', 0.9090909090909091)]
Tree #2: [('true,false,true,true', 0.7674418604651163), ('true,false,true,false', 0.8333333333333334), ('true,false,false,true', 0.875)]
Tree #3: [('true,false,true,true', 0.7674418604651163), ('true,false,true,false', 0.8333333333333334), ('true,false,false,true', 0.9166666666666666)]
Tree #4: [('true,false,true,false', 0.6666666666666666), ('true,false,true,true', 0.7674418604651163), ('true,false,false,true', 0.8571428571428571)]
Tree #5: [('true,false,true,true', 0.696969696969697), ('true,false,true,false', 0.8333333333333334), ('true,false,false,true', 0.8571428571428571)]
Tree #6: [('true,false,true,true', 0.782608695652174), ('true,false,true,false', 0.8333333333333334), ('true,false,false,true', 0.875)]
Tree #7: [('true,false,true,true', 0.875)]
Tree #8: [('true,false,true,true', 0.7727272727272727), ('true,false,false,true', 0.8571428571428571), ('true,false,true,false', 0.8571428571428571)]
Tree #9: [('true,false,true,false', 0.6666666666666666), ('true,false,true,true', 0.7674418604651163), ('true,false,false,true', 0.875)]
Tree #10: [('true,false,true,true', 0.7619047619047619), ('true,false,false,true', 0.9), ('true,false,true,false', 0.9166666666666666)]


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.8581489350995078;  // std dev = 2,82e-06, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.06185263880321607;  // std dev = 2,960, 54,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490049054;  // std dev = 0,000, 1.100,000 (wgt'ed) examples reached here.  /* #neg=1.100 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.7194734122109585;  // std dev = 0,000, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.0844941461884117;  // std dev = 2,903, 47,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.0030449934785862936;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.12544463852839252;  // std dev = 0,000, 1.187,000 (wgt'ed) examples reached here.  /* #neg=1.187 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.555366436746283;  // std dev = 1,05e-06, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.0685508484661016;  // std dev = 2,912, 48,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.002678386413796347;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.11231637819360797;  // std dev = 0,000, 1.108,000 (wgt'ed) examples reached here.  /* #neg=1.108 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.4175135841583128;  // std dev = 0,000, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.09821860710275306;  // std dev = 2,837, 41,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.02616477664023423;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.10159632948783404;  // std dev = 7,47e-07, 1.173,000 (wgt'ed) examples reached here.  /* #neg=1.173 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.32071184716014783;  // std dev = 2,06e-07, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.07300981246960264;  // std dev = 2,860, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.08438991884649885;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.09269127618926;  // std dev = 3,79e-07, 1.119,000 (wgt'ed) examples reached here.  /* #neg=1.119 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.2551722425694891;  // std dev = 0,000, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.0061439680387210495;  // std dev = 2,970, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.005368227955567545;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.08518475138839675;  // std dev = 2,15e-07, 1.126,000 (wgt'ed) examples reached here.  /* #neg=1.126 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.20975771563253456;  // std dev = 2,53e-07, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.04150289290945232;  // std dev = 0,426, 42,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.028728404116884758;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.02666480758906874;  // std dev = 0,920, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   else return -0.07877675473109365;  // std dev = 0,000, 1.134,000 (wgt'ed) examples reached here.  /* #neg=1.134 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.1770964977452787;  // std dev = 0,000, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.03531957446573418;  // std dev = 2,906, 47,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.06427671649440453;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.07686326891066239;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.07324622576333718;  // std dev = 5,16e-08, 1.149,000 (wgt'ed) examples reached here.  /* #neg=1.149 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.030838509694934443;  // std dev = 2,889, 48,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.04516271256072939;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.07158372138185104;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06842697784420208;  // std dev = 2,15e-07, 1.121,000 (wgt'ed) examples reached here.  /* #neg=1.121 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.13400703000801148;  // std dev = 0,000, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.031232436146541136;  // std dev = 2,882, 47,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.04560413225444261;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.0669697725661187;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06419184008202586;  // std dev = 0,000, 1.159,000 (wgt'ed) examples reached here.  /* #neg=1.159 */
Results
   AUC ROC   = 0.999667
   AUC PR    = 0.997398
   CLL	      = -0.077023
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9801
   F1        = 0.98995


Total learning time: 192.79 seconds
Total inference time: 4.484 seconds
AUC ROC: 0.999667


Best model AUC ROC so far: 0.999667


******************************************
Best model found
******************************************
Total revision time: 447.837
Best validation AUC ROC: 0.999667


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070684
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total inference time: 2.417 seconds
AUC ROC: 1.0
Dataset: imdb,cora, Run: 1, Fold: 1, Type: transfer, Total folds for small set: 4, Time: 01:01:22
{'CLL': -0.070684, 'Recall': 1.0, 'Learning time': 447.837, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 42, 'Total time': 4.818535804748535, 'Generating mappings time': 0.048706769943237305, 'Finding best mapping': 0.0029952526092529297, 'Generating paths time': 4.37458062171936, 'Knowledge compiling time': 0.3922457695007324}, 'Parameter Learning Results': {'CLL': -0.140714, 'Recall': 1.0, 'Precision': [0.749104, 0.5], 'AUC ROC': 0.978659, 'F1': 0.856557, 'AUC PR': 0.749104}, 'AUC ROC': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Inference time': 2.417}
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C), venue(E, D), author(E, A) )
%   | then return 0.8581489350995118;  // std dev = 1,46e-07, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( haswordvenue(F, C) )
%   | | then return 0.7321326749369071;  // std dev = 0,332, 246,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=215 */
%   | | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | | then return 0.8581489350995117;  // std dev = 1,69e-07, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | | else if ( author(K, A), venue(K, H) )
%   | | | | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | | | else if ( author(L, B), venue(L, H) )
%   | | | | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | | | else return 0.6945125714631487;  // std dev = 0,370, 55,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=46 */
%   | | | else if ( author(M, A), samebib(M, N), author(N, B) )
%   | | | | then return 0.8581489350995086;  // std dev = 1,07e-06, 270,000 (wgt'ed) examples reached here.  /* #pos=270 */
%   | | | | else return -0.10185106490048777;  // std dev = 0,196, 25,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   else return -0.14185106490049068;  // std dev = 0,000, 1.170,000 (wgt'ed) examples reached here.  /* #neg=1.170 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C), venue(E, D), author(E, B) )
%   | then return 0.7365856773356296;  // std dev = 0,058, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( haswordvenue(F, C) )
%   | | then return 0.6271338491060926;  // std dev = 0,319, 243,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=215 */
%   | | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | | then if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | | then return 0.7194734122109546;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | | else if ( author(K, B), venue(K, H) )
%   | | | | | then return 0.7194734122109551;  // std dev = 5,96e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | | | else if ( author(L, A), venue(L, H) )
%   | | | | | | then return 0.7194734122109551;  // std dev = 2,98e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | | | else return 0.5582020032335167;  // std dev = 0,337, 57,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=46 */
%   | | | else if ( author(M, A), samebib(M, N), author(N, B) )
%   | | | | then return 0.7247756554758888;  // std dev = 0,195, 270,000 (wgt'ed) examples reached here.  /* #pos=270 */
%   | | | | else return -0.1278371185766253;  // std dev = 0,191, 24,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   else return -0.12544463852839252;  // std dev = 0,000, 1.133,000 (wgt'ed) examples reached here.  /* #neg=1.133 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.569759541242247;  // std dev = 0,063, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( author(F, B), venue(F, D) )
%   | | | then return 0.5820711887603819;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.47627519919154304;  // std dev = 0,339, 227,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=197 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( author(I, B), venue(I, H) )
%   | | | then return 0.5545244941343695;  // std dev = 0,002, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | | else if ( author(L, A), venue(L, H) )
%   | | | | | then return 0.5540567482388613;  // std dev = 4,21e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | | else return 0.5029387257131518;  // std dev = 0,264, 52,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=46 */
%   | | else return 0.5173574358570633;  // std dev = 0,174, 289,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=271 */
%   else return -0.11231637819360825;  // std dev = 0,000, 1.209,000 (wgt'ed) examples reached here.  /* #neg=1.209 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then if ( samebib(E, F), author(F, B) )
%   | | | then return 0.42729212169702896;  // std dev = 0,061, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.18658280256988583;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.364736917007362;  // std dev = 0,327, 245,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=215 */
%   | else if ( haswordauthor(A, G), haswordauthor(B, G) )
%   | | then if ( author(H, B), venue(H, D) )
%   | | | then return 0.4248422836400651;  // std dev = 0,014, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | | then return 0.4175299658604755;  // std dev = 0,000278, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | | else return 0.3866848372231882;  // std dev = 0,237, 58,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | else return -0.10159632948783512;  // std dev = 2,19e-07, 486,000 (wgt'ed) examples reached here.  /* #neg=486 */
%   else if ( author(K, A), samebib(K, L), author(L, B) )
%   | then return 0.428328260046776;  // std dev = 0,801, 272,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=270 */
%   | else return -0.10456370734789529;  // std dev = 1,038, 687,000 (wgt'ed) examples reached here.  /* #neg=686 #pos=1 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, B), venue(E, D) )
%   | | then if ( samebib(E, F), author(F, A) )
%   | | | then return 0.33722937258570346;  // std dev = 0,089, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.10079957119016392;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.27820383745526917;  // std dev = 0,323, 244,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=215 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( author(I, A), venue(I, H) )
%   | | | then return 0.31816153301577293;  // std dev = 0,005, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.31930017360523266;  // std dev = 0,149, 81,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=77 */
%   | | else if ( author(J, A), samebib(J, K), author(K, B) )
%   | | | then return 0.33368613804988406;  // std dev = 0,288, 270,000 (wgt'ed) examples reached here.  /* #pos=270 */
%   | | | else if ( haswordauthor(B, L), haswordvenue(M, L) )
%   | | | | then return -0.22516800098281087;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return -0.1656336082270884;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.09254896862174374;  // std dev = 0,004, 1.156,000 (wgt'ed) examples reached here.  /* #neg=1.156 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.2726381114551377;  // std dev = 0,125, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.19296957259840292;  // std dev = 0,346, 250,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=215 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.25534052980208954;  // std dev = 0,002, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else if ( author(J, A), venue(J, G) )
%   | | | | then return 0.25282560262663656;  // std dev = 0,000131, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | | else if ( author(K, B), venue(K, G) )
%   | | | | | then return 0.25254634661458825;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | | else return 0.20227715994286444;  // std dev = 0,244, 54,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=46 */
%   | | else if ( author(L, A), samebib(L, M), author(M, B) )
%   | | | then return 0.26409190633158725;  // std dev = 0,254, 270,000 (wgt'ed) examples reached here.  /* #pos=270 */
%   | | | else return -0.1737498135901657;  // std dev = 0,217, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   else return -0.08515836685785616;  // std dev = 0,073, 1.146,000 (wgt'ed) examples reached here.  /* #neg=1.146 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.2221575073448833;  // std dev = 0,110, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.1516064266608245;  // std dev = 0,346, 250,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=215 */
%   | else if ( author(F, A), samebib(F, G), author(G, B) )
%   | | then return 0.22009034083072052;  // std dev = 0,338, 360,000 (wgt'ed) examples reached here.  /* #pos=360 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.2794346955495025;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.13517894391634203;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return -0.123870431544439;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.0786693293996724;  // std dev = 0,004, 1.163,000 (wgt'ed) examples reached here.  /* #neg=1.163 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, B), venue(E, D) )
%   | | then return 0.20415641635627574;  // std dev = 0,150, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.1626026818706311;  // std dev = 0,294, 238,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=215 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 0.1756995748399373;  // std dev = 0,002, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else if ( author(J, A), venue(J, G) )
%   | | | | then return 0.1806205451105308;  // std dev = 0,008, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | else if ( author(K, B), venue(K, G) )
%   | | | | | then return 0.17687126594429992;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | | else return 0.16215044826603545;  // std dev = 0,173, 52,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=46 */
%   | | else if ( author(L, A), samebib(L, M), author(M, B) )
%   | | | then return 0.18214732441080617;  // std dev = 0,245, 270,000 (wgt'ed) examples reached here.  /* #pos=270 */
%   | | | else return -0.16208763301830567;  // std dev = 0,253, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   else return -0.07315647267642514;  // std dev = 0,003, 1.148,000 (wgt'ed) examples reached here.  /* #neg=1.148 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.1613289640062559;  // std dev = 0,096, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( author(F, B), venue(F, D) )
%   | | | then if ( samebib(F, G), author(G, A) )
%   | | | | then return 0.18220366205888144;  // std dev = 1,83e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | | else return -0.02989566171467084;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10187724167579028;  // std dev = 0,339, 227,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=197 */
%   | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | then if ( author(J, A), venue(J, I) )
%   | | | then return 0.14999995130432148;  // std dev = 0,004, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | | then return 0.15165787208335113;  // std dev = 0,001, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | | else return 0.14666694575428255;  // std dev = 0,159, 57,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | else return 0.14285544610469714;  // std dev = 0,081, 284,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=271 */
%   else return -0.06838519284412696;  // std dev = 0,043, 1.126,000 (wgt'ed) examples reached here.  /* #neg=1.126 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.06672813110767922;  // std dev = 0,343, 280,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=241 */
%   | else if ( author(E, A), samebib(E, F), author(F, B) )
%   | | then return 0.14095226844953457;  // std dev = 0,248, 360,000 (wgt'ed) examples reached here.  /* #pos=360 */
%   | | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | | then return -0.23878851945251575;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | | then return -0.18579695060763782;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return -0.10915704836063644;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06411291763277804;  // std dev = 0,003, 1.171,000 (wgt'ed) examples reached here.  /* #neg=1.171 */
Results
   AUC ROC   = 0.999912
   AUC PR    = 0.999315
   CLL	      = -0.077892
   Precision = 0.972093 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.985849


Total learning time: 252.673 seconds
Total inference time: 2.922 seconds
AUC ROC: 0.999912


Dataset: imdb,cora, Run: 1, Fold: 1, Type: scratch, Total folds for small set: 4, Time: 01:05:40
{'CLL': -0.077892, 'Recall': 1.0, 'Learning time': 252.673, 'Precision': [0.972093, 0.5], 'AUC ROC': 0.999912, 'F1': 0.985849, 'AUC PR': 0.999315, 'Inference time': 2.922}
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995096;  // std dev = 1,07e-06, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.8488031407069857;  // std dev = 0,096, 214,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=212 */
%   else return -0.1418510649004876;  // std dev = 2,15e-07, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109565;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.7120100179913443;  // std dev = 0,096, 214,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=212 */
%   else return -0.1254446385283921;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462833;  // std dev = 5,72e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.5501674549765377;  // std dev = 0,096, 214,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=212 */
%   else return -0.11231637819360651;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830936;  // std dev = 4,13e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.413529605864917;  // std dev = 0,096, 214,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=212 */
%   else return -0.10159632948783637;  // std dev = 7,60e-08, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3207118471601492;  // std dev = 3,82e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.31705478171450535;  // std dev = 0,096, 214,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=212 */
%   else return -0.09269127618926047;  // std dev = 2,04e-07, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694907;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.2515023443707063;  // std dev = 0,096, 214,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=212 */
%   else return -0.08518475138839678;  // std dev = 1,15e-07, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253512;  // std dev = 2,76e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.20598828887765344;  // std dev = 0,096, 214,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=212 */
%   else return -0.07877675473109146;  // std dev = 6,66e-08, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.17322062042086106;  // std dev = 0,096, 214,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=212 */
%   else return -0.0732462257633371;  // std dev = 7,88e-08, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.14877513649354818;  // std dev = 0,096, 214,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=212 */
%   else return -0.06842697784420314;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1340070300080108;  // std dev = 9,66e-08, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return 0.12996196775841934;  // std dev = 0,096, 214,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=212 */
%   else return -0.06419184008202583;  // std dev = 1,55e-07, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */


Predicates from source: ['workedunder(person,person).', 'director(person).', 'female(person).', 'movie(movie,person).'] 

Source structured tree: [['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.15e-07, 380, 0], 'true,false': [0.096, 2, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 380, 0], 'true,false': [0.096, 2, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 380, 0], 'true,false': [0.096, 2, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [4.13e-07, 0, 170], 'false': [7.6e-08, 380, 0], 'true,false': [0.096, 2, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.04e-07, 380, 0], 'true,false': [0.096, 2, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [1.15e-07, 380, 0], 'true,false': [0.096, 2, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [2.76e-07, 0, 170], 'false': [6.66e-08, 380, 0], 'true,false': [0.096, 2, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [7.88e-08, 380, 0], 'true,false': [0.096, 2, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 380, 0], 'true,false': [0.096, 2, 212]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A), movie(C, B)', 'true': 'female(A)'}, {'true,true': [9.66e-08, 0, 170], 'false': [1.55e-07, 380, 0], 'true,false': [0.096, 2, 212]}]] 



Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Tranferred structured tree: [['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.15e-07, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [4.13e-07, 0, 170], 'false': [7.6e-08, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.04e-07, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [1.15e-07, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [2.76e-07, 0, 170], 'false': [6.66e-08, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [7.88e-08, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [9.66e-08, 0, 170], 'false': [1.55e-07, 380, 0], 'true,false': [0.096, 2, 212]}]] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false']
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.8274740884737428;  // std dev = 2,202, 163,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=158 */
%   else return -0.14185106490048788;  // std dev = 7,30e-08, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6949478325176323;  // std dev = 2,202, 163,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=158 */
%   else return -0.12544463852839205;  // std dev = 0,000, 314,000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5265281155795419;  // std dev = 2,589, 165,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=158 */
%   else return -0.11231637819360693;  // std dev = 0,000, 289,000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3841897321794381;  // std dev = 2,918, 167,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=158 */
%   else return -0.10159632948783663;  // std dev = 0,000, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.31021358020369577;  // std dev = 2,404, 164,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=158 */
%   else return -0.0926912761892604;  // std dev = 1,85e-07, 334,000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.23779923723424118;  // std dev = 2,589, 165,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=158 */
%   else return -0.08518475138839678;  // std dev = 1,10e-07, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.19825965560753592;  // std dev = 2,404, 164,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=158 */
%   else return -0.07877675473109141;  // std dev = 3,94e-08, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1645180470288011;  // std dev = 2,404, 164,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=158 */
%   else return -0.07324622576333707;  // std dev = 7,88e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.12207243704959242;  // std dev = 2,918, 167,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=158 */
%   else return -0.06842697784420311;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.10506563162524472;  // std dev = 2,918, 167,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=158 */
%   else return -0.06419184008202584;  // std dev = 1,38e-07, 326,000 (wgt'ed) examples reached here.  /* #neg=326 */
Results
   AUC ROC   = 0.98998
   AUC PR    = 0.88764
   CLL	      = -0.107582
   Precision = 0.88764 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.940476


Total learning time: 10.227 seconds
Total inference time: 1.193 seconds
AUC ROC: 0.98998


Results in test set
   AUC ROC   = 0.98998
   AUC PR    = 0.88764
   CLL	      = -0.107582
   Precision = 0.88764 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.940476


Total inference time: 1.193 seconds
AUC ROC: 0.98998
Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.202, 5, 158], 'false': [7.3e-08, 295, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.202, 5, 158], 'false': [0.0, 314, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.589, 7, 158], 'false': [0.0, 289, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.918, 9, 158], 'false': [0.0, 307, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.404, 6, 158], 'false': [1.85e-07, 334, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.589, 7, 158], 'false': [1.1e-07, 323, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.404, 6, 158], 'false': [3.94e-08, 304, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.404, 6, 158], 'false': [7.88e-08, 335, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.918, 9, 158], 'false': [0.0, 326, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.918, 9, 158], 'false': [1.38e-07, 326, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true', 0.9693251533742331)]
Tree #2: [('true', 0.9693251533742331)]
Tree #3: [('true', 0.9575757575757575)]
Tree #4: [('true', 0.9461077844311377)]
Tree #5: [('true', 0.9634146341463414)]
Tree #6: [('true', 0.9575757575757575)]
Tree #7: [('true', 0.9634146341463414)]
Tree #8: [('true', 0.9634146341463414)]
Tree #9: [('true', 0.9461077844311377)]
Tree #10: [('true', 0.9461077844311377)]


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.8581489350995098;  // std dev = 9,39e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.31968739663797385;  // std dev = 0,499, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else return -0.1418510649004878;  // std dev = 1,26e-07, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.7194734122109562;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.24319122152618414;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else return -0.12544463852839202;  // std dev = 0,000, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.5553664367462833;  // std dev = 5,33e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.27506255167666543;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else return -0.11231637819360674;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.41751358415830886;  // std dev = 4,62e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.15210525637759856;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else return -0.10159632948783663;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.3207118471601498;  // std dev = 2,83e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.04504078753841465;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   else return -0.09269127618926044;  // std dev = 1,66e-07, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.25517224256949045;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.22787394670717076;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 314,000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.20975771563253517;  // std dev = 2,49e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.13112330787421334;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else return -0.07877675473109143;  // std dev = 2,11e-08, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.1770964977452782;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.20010809678210642;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else return -0.07324622576333702;  // std dev = 9,31e-08, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.09672555922230024;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else return -0.06842697784420305;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.134007030008011;  // std dev = 6,66e-08, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.12724346043657975;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else return -0.06419184008202583;  // std dev = 1,44e-07, 329,000 (wgt'ed) examples reached here.  /* #neg=329 */
Results
   AUC ROC   = 0.999619
   AUC PR    = 0.997758
   CLL	      = -0.085136
   Precision = 0.88764 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.940476


Total learning time: 11.593 seconds
Total inference time: 3.069 seconds
AUC ROC: 0.999619


Best model AUC ROC so far: 0.999619


Refining iteration 2
********************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '0;true;author(D, A), samebib(D, E), author(E, B).;false;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '1;true;author(D, A), samebib(D, E), author(E, B).;false;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '2;true;author(D, A), samebib(D, E), author(E, B).;false;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '3;true;author(D, A), samebib(D, E), author(E, B).;false;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '4;true;author(D, A), samebib(D, E), author(E, B).;false;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '5;true;author(D, A), samebib(D, E), author(E, B).;false;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '6;true;author(D, A), samebib(D, E), author(E, B).;false;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '7;true;author(D, A), samebib(D, E), author(E, B).;false;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '8;true;author(D, A), samebib(D, E), author(E, B).;false;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '9;true;author(D, A), samebib(D, E), author(E, B).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false', 0.5384615384615384)]
Tree #2: [('true,false', 0.5714285714285714)]
Tree #3: [('true,false', 0.5)]
Tree #4: [('true,false', 0.5714285714285714)]
Tree #5: [('true,false', 0.6470588235294118)]
Tree #6: [('true,false', 0.5454545454545454)]
Tree #7: [('true,false', 0.5)]
Tree #8: [('true,false', 0.6)]
Tree #9: [('true,false', 0.5454545454545454)]
Tree #10: [('true,false', 0.6)]


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.8581489350995098;  // std dev = 9,39e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.5248156017661789;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.14185106490048774;  // std dev = 1,46e-07, 314,000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.7194734122109562;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.18162893957529533;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   else return -0.12544463852839202;  // std dev = 0,000, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.5553664367462833;  // std dev = 5,33e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.12405064621606161;  // std dev = 0,484, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   else return -0.11231637819360676;  // std dev = 0,000, 310,000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.41751358415830886;  // std dev = 4,62e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.3250207854037471;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else return -0.10159632948783627;  // std dev = 1,10e-07, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.3207118471601498;  // std dev = 2,83e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.08433780503851943;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else return -0.09269127618926042;  // std dev = 2,01e-07, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.25517224256949045;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.06505780112728346;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.20975771563253517;  // std dev = 2,49e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.16675894499528304;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else return -0.07877675473109143;  // std dev = 3,94e-08, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.1770964977452782;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.08135285716128049;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else return -0.07324622576333703;  // std dev = 9,19e-08, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return 0.02297066589690566;  // std dev = 0,499, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else return -0.068426977844203;  // std dev = 0,000, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.134007030008011;  // std dev = 6,66e-08, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return -0.01566008744460026;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else return -0.06419184008202593;  // std dev = 1,25e-07, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
Results
   AUC ROC   = 0.999619
   AUC PR    = 0.997758
   CLL	      = -0.083735
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.962025
   F1        = 0.980645


Total learning time: 13.722 seconds
Total inference time: 3.141 seconds
AUC ROC: 0.999619


Best model AUC ROC so far: 0.999619


******************************************
Best model found
******************************************
Total revision time: 42.945
Best validation AUC ROC: 0.999619


Results
   AUC ROC   = 0.99943
   AUC PR    = 0.997569
   CLL	      = -0.111364
   Precision = 0.72619 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.841379


Total inference time: 2.618 seconds
AUC ROC: 0.99943
Dataset: imdb,cora, Run: 1, Fold: 2, Type: transfer, Total folds for small set: 1, Time: 01:06:41
{'CLL': -0.111364, 'Recall': 1.0, 'Learning time': 42.945, 'Precision': [0.72619, 0.5], 'Mapping Results': {'Possible mappings': 42, 'Total time': 3.0932435989379883, 'Generating mappings time': 0.038324594497680664, 'Finding best mapping': 0.0023393630981445312, 'Generating paths time': 2.9346230030059814, 'Knowledge compiling time': 0.11794638633728027}, 'Parameter Learning Results': {'CLL': -0.186572, 'Recall': 1.0, 'Precision': [0.72619, 0.5], 'AUC ROC': 0.965257, 'F1': 0.841379, 'AUC PR': 0.72619}, 'AUC ROC': 0.99943, 'F1': 0.841379, 'AUC PR': 0.997569, 'Inference time': 2.618}
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( author(G, A), samebib(G, H), author(H, B) )
%   | | | then return 0.858148935099511;  // std dev = 5,33e-07, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | | | else return 0.31968739663797385;  // std dev = 0,499, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else return -0.14185106490048788;  // std dev = 7,88e-08, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( author(F, A), samebib(F, G), author(G, B) )
%   | | then return 0.7194734122109548;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | | else return 0.31461979295475556;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else return -0.12544463852839205;  // std dev = 0,000, 321,000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( author(E, A), samebib(E, F), author(F, B) )
%   | | then return 0.5553664367462834;  // std dev = 4,77e-07, 127,000 (wgt'ed) examples reached here.  /* #pos=127 */
%   | | else return 0.3623655887515638;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else return -0.1123163781936068;  // std dev = 0,000, 302,000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( author(E, A), samebib(E, F), author(F, B) )
%   | | then return 0.4175135841583092;  // std dev = 3,67e-07, 127,000 (wgt'ed) examples reached here.  /* #pos=127 */
%   | | else return 0.29068575585840717;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else return -0.10159632948783663;  // std dev = 0,000, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( author(E, A), samebib(E, F), author(F, B) )
%   | | then return 0.3207118471601498;  // std dev = 2,35e-07, 127,000 (wgt'ed) examples reached here.  /* #pos=127 */
%   | | else return 0.2254254912810553;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else return -0.09269127618926043;  // std dev = 1,52e-07, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.2551722425694891;  // std dev = 3,33e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( author(G, A), samebib(G, H), author(H, B) )
%   | | | then return 0.2551722425694898;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | | | else return 0.11676896665162023;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else return -0.08518475138839678;  // std dev = 1,10e-07, 325,000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( author(E, A), samebib(E, F), author(F, B) )
%   | | then return 0.20975771563253534;  // std dev = 1,88e-07, 127,000 (wgt'ed) examples reached here.  /* #pos=127 */
%   | | else return 0.14250888710117807;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else return -0.07877675473109141;  // std dev = 3,33e-08, 317,000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( author(E, A), samebib(E, F), author(F, B) )
%   | | then return 0.17709649774527791;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #pos=127 */
%   | | else return 0.052438621372918034;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else return -0.07324622576333696;  // std dev = 9,88e-08, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.1527438580936709;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( author(F, A), samebib(F, G), author(G, B) )
%   | | then return 0.15274385809367136;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | | else return 0.03932972668017158;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else return -0.06842697784420297;  // std dev = 0,000, 294,000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( author(E, A), samebib(E, F), author(F, B) )
%   | | then return 0.13400703000801104;  // std dev = 5,96e-08, 127,000 (wgt'ed) examples reached here.  /* #pos=127 */
%   | | else return -0.11595214104224186;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   else return -0.06419184008202584;  // std dev = 1,39e-07, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
Results
   AUC ROC   = 0.984869
   AUC PR    = 0.838021
   CLL	      = -0.131749
   Precision = 0.909091 at threshold = 0.5
   Recall    = 0.983607
   F1        = 0.944882


Total learning time: 24.727 seconds
Total inference time: 3.84 seconds
AUC ROC: 0.984869


Dataset: imdb,cora, Run: 1, Fold: 2, Type: scratch, Total folds for small set: 1, Time: 01:07:10
{'CLL': -0.131749, 'Recall': 0.983607, 'Learning time': 24.727, 'Precision': [0.909091, 0.5], 'AUC ROC': 0.984869, 'F1': 0.944882, 'AUC PR': 0.838021, 'Inference time': 3.84}


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Tranferred structured tree: [['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.15e-07, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [4.13e-07, 0, 170], 'false': [7.6e-08, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.04e-07, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [1.15e-07, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [2.76e-07, 0, 170], 'false': [6.66e-08, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [7.88e-08, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [9.66e-08, 0, 170], 'false': [1.55e-07, 380, 0], 'true,false': [0.096, 2, 212]}]] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false']
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7773689908098147;  // std dev = 5,163, 359,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=330 */
%   else return -0.14185106490048874;  // std dev = 0,000, 619,000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6624510633694409;  // std dev = 4,909, 356,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=330 */
%   else return -0.12544463852839235;  // std dev = 0,000, 582,000 (wgt'ed) examples reached here.  /* #neg=582 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5057506598362134;  // std dev = 5,244, 360,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=330 */
%   else return -0.1123163781936061;  // std dev = 0,000, 620,000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3677810405741472;  // std dev = 5,625, 365,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=330 */
%   else return -0.10159632948783502;  // std dev = 4,45e-07, 602,000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2936281810073838;  // std dev = 5,163, 359,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=330 */
%   else return -0.09269127618926187;  // std dev = 0,000, 611,000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.22266185004681505;  // std dev = 5,323, 361,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=330 */
%   else return -0.08518475138839678;  // std dev = 1,58e-07, 596,000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1875233052839518;  // std dev = 4,996, 357,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=330 */
%   else return -0.0787767547310927;  // std dev = 0,000, 649,000 (wgt'ed) examples reached here.  /* #neg=649 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1276182879645994;  // std dev = 5,768, 367,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=330 */
%   else return -0.07324622576333648;  // std dev = 2,39e-07, 601,000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.11581544325893221;  // std dev = 5,477, 363,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=330 */
%   else return -0.06842697784420368;  // std dev = 0,000, 591,000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.10759580972307559;  // std dev = 5,163, 359,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=330 */
%   else return -0.06419184008202518;  // std dev = 2,54e-07, 633,000 (wgt'ed) examples reached here.  /* #neg=633 */
Results
   AUC ROC   = 0.978086
   AUC PR    = 0.771028
   CLL	      = -0.143416
   Precision = 0.771028 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.870712


Total learning time: 67.705 seconds
Total inference time: 1.718 seconds
AUC ROC: 0.978086


Results in test set
   AUC ROC   = 0.978086
   AUC PR    = 0.771028
   CLL	      = -0.143416
   Precision = 0.771028 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.870712


Total inference time: 1.718 seconds
AUC ROC: 0.978086
Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.163, 29, 330], 'false': [0.0, 619, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [4.909, 26, 330], 'false': [0.0, 582, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.244, 30, 330], 'false': [0.0, 620, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.625, 35, 330], 'false': [4.45e-07, 602, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.163, 29, 330], 'false': [0.0, 611, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.323, 31, 330], 'false': [1.58e-07, 596, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [4.996, 27, 330], 'false': [0.0, 649, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.768, 37, 330], 'false': [2.39e-07, 601, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.477, 33, 330], 'false': [0.0, 591, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [5.163, 29, 330], 'false': [2.54e-07, 633, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true', 0.9192200557103064)]
Tree #2: [('true', 0.9269662921348315)]
Tree #3: [('true', 0.9166666666666666)]
Tree #4: [('true', 0.9041095890410958)]
Tree #5: [('true', 0.9192200557103064)]
Tree #6: [('true', 0.9141274238227147)]
Tree #7: [('true', 0.9243697478991597)]
Tree #8: [('true', 0.8991825613079019)]
Tree #9: [('true', 0.9090909090909091)]
Tree #10: [('true', 0.9192200557103064)]


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F) )
%   | | then return 0.4581489350995123;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.04185106490048778;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else return 0.024815601766178853;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   else return -0.14185106490048885;  // std dev = 0,000, 637,000 (wgt'ed) examples reached here.  /* #neg=637 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.7194734122109578;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, F) )
%   | | | then return 0.2213656121484773;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.011832517440074974;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.024077967486445785;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.07732343974796131;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else return -0.1254446385283924;  // std dev = 0,000, 693,000 (wgt'ed) examples reached here.  /* #neg=693 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.18265018041811557;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.010440982067239646;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.04604932437692742;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | | else return -0.037097783907664494;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   else return -0.11231637819360606;  // std dev = 0,000, 615,000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F) )
%   | | then return 0.31866218519686057;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.029288082263122975;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.009223024331104335;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | | else return 0.05004559938409718;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else return -0.10159632948783492;  // std dev = 4,69e-07, 631,000 (wgt'ed) examples reached here.  /* #neg=631 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.32071184716015105;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.15003045679958626;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.011901581900898517;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return 0.03351181308550325;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return 0.04355401670987229;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else return -0.09269127618926189;  // std dev = 0,000, 613,000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.25517224256948756;  // std dev = 3,82e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, F) )
%   | | | then return 0.1151808084259391;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.007355778890664577;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.012070716256908708;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.008434057022978282;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   else return -0.08518475138839678;  // std dev = 1,55e-07, 586,000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.2097577156325347;  // std dev = 2,53e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, F) )
%   | | | then return 0.13303252503437515;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.031017458289038045;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.030301328719124453;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.007290749554184619;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   else return -0.07877675473109272;  // std dev = 0,000, 651,000 (wgt'ed) examples reached here.  /* #neg=651 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.17709649774527653;  // std dev = 2,67e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F) )
%   | | then return 0.15500875902462533;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.002883742721513316;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return 0.027339436495836266;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return -0.06924474183331236;  // std dev = 0,287, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   else return -0.07324622576333639;  // std dev = 2,62e-07, 627,000 (wgt'ed) examples reached here.  /* #neg=627 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F) )
%   | | then return 0.1831408358295457;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.02634575858827186;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return 0.05736191636729273;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else return 0.0027883687014257233;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   else return -0.06842697784420373;  // std dev = 0,000, 639,000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.13400703000801178;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, F) )
%   | | | then return -0.029271564766581715;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.05888872667435634;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.03241812750306309;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.026415711704037413;  // std dev = 0,331, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   else return -0.06419184008202514;  // std dev = 2,56e-07, 661,000 (wgt'ed) examples reached here.  /* #neg=661 */
Results
   AUC ROC   = 0.999634
   AUC PR    = 0.997858
   CLL	      = -0.081893
   Precision = 0.953216 at threshold = 0.5
   Recall    = 0.987879
   F1        = 0.970238


Total learning time: 32.326 seconds
Total inference time: 3.03 seconds
AUC ROC: 0.999634


Best model AUC ROC so far: 0.999634


Refining iteration 2
********************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '0;true;author(D, A), samebib(D, E), author(E, B).;false;true', '0;true,false,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;false', '0;true,false;haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F).;true;true', '0;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '1;true;author(D, A), samebib(D, E), author(E, B).;false;true', '1;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '1;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '2;true;author(D, A), samebib(D, E), author(E, B).;false;true', '2;true,false,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;false', '2;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;true', '2;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '3;true;author(D, A), samebib(D, E), author(E, B).;false;true', '3;true,false,false,false;haswordauthor(A, J), haswordvenue(K, J).;false;false', '3;true,false;haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F).;true;true', '3;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '4;true;author(D, A), samebib(D, E), author(E, B).;false;true', '4;true,false,false,false;haswordauthor(A, J), haswordvenue(K, J).;false;false', '4;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;true', '4;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '5;true;author(D, A), samebib(D, E), author(E, B).;false;true', '5;true,false;haswordauthor(B, F), haswordvenue(G, F).;false;true', '5;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '6;true;author(D, A), samebib(D, E), author(E, B).;false;true', '6;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '6;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '7;true;author(D, A), samebib(D, E), author(E, B).;false;true', '7;true,false,false,false;haswordauthor(A, J), haswordvenue(K, J).;false;false', '7;true,false;haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F).;true;true', '7;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '8;true;author(D, A), samebib(D, E), author(E, B).;false;true', '8;true,false,false,false;haswordauthor(A, J), haswordvenue(K, J).;false;false', '8;true,false;haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F).;true;true', '8;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '9;true;author(D, A), samebib(D, E), author(E, B).;false;true', '9;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '9;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true', 0.6), ('true,false,false,false,true', 0.8), ('true,false,false,false,false', 0.8333333333333334), ('true,false,false,true', 0.9)]
Tree #2: [('true,false,true,true', 0.5714285714285714), ('true,false,false,false', 0.7777777777777778), ('true,false,false,true', 0.875), ('true,false,true,false', 0.875)]
Tree #3: [('true,false,true', 0.5714285714285714), ('true,false,false,true', 0.875), ('true,false,false,false,false', 0.8823529411764706), ('true,false,false,false,true', 0.9)]
Tree #4: [('true,false,true', 0.6), ('true,false,false,false,false', 0.8), ('true,false,false,false,true', 0.875), ('true,false,false,true', 0.8888888888888888)]
Tree #5: [('true,false,true', 0.5), ('true,false,false,false,false', 0.8), ('true,false,false,false,true', 0.8333333333333334), ('true,false,false,true', 0.875)]
Tree #6: [('true,false,true,true', 0.5), ('true,false,false,false', 0.8461538461538461), ('true,false,true,false', 0.8571428571428571), ('true,false,false,true', 0.875)]
Tree #7: [('true,false,true,true', 0.5454545454545454), ('true,false,false,true', 0.8333333333333334), ('true,false,true,false', 0.8333333333333334), ('true,false,false,false', 0.8461538461538461)]
Tree #8: [('true,false,true', 0.6), ('true,false,false,false,true', 0.8333333333333334), ('true,false,false,true', 0.8571428571428571), ('true,false,false,false,false', 0.9090909090909091)]
Tree #9: [('true,false,true', 0.6666666666666666), ('true,false,false,false,true', 0.8), ('true,false,false,true', 0.8333333333333334), ('true,false,false,false,false', 0.8461538461538461)]
Tree #10: [('true,false,true,true', 0.5), ('true,false,false,false', 0.875), ('true,false,false,true', 0.8888888888888888), ('true,false,true,false', 0.9090909090909091)]


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F) )
%   | | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | | else return -0.00851773156715447;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   else return -0.14185106490048874;  // std dev = 0,000, 622,000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.7194734122109578;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.1637694264453476;  // std dev = 1,975, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.024693088425860748;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.02970625561138235;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   else return -0.12544463852839238;  // std dev = 0,000, 640,000 (wgt'ed) examples reached here.  /* #neg=640 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.3152333502421592;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.0520048030168238;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.03389718213294184;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | | else return 0.06273852609345835;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else return -0.11231637819360585;  // std dev = 0,000, 592,000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F) )
%   | | then return 0.3136271982153996;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.02974494177841733;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.0652314710168255;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | | else return 0.036956697984310206;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else return -0.1015963294878349;  // std dev = 4,83e-07, 651,000 (wgt'ed) examples reached here.  /* #neg=651 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.32071184716015105;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.23917150911137844;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.012294757044388527;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.022737091796356933;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | | else return -0.006642762531313183;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   else return -0.09269127618926197;  // std dev = 0,000, 645,000 (wgt'ed) examples reached here.  /* #neg=645 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.25517224256948756;  // std dev = 3,82e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.09013249745802641;  // std dev = 1,740, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.03378600323928888;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.05134275471137055;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else return -0.08518475138839678;  // std dev = 1,66e-07, 641,000 (wgt'ed) examples reached here.  /* #neg=641 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.2097577156325347;  // std dev = 2,53e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return -0.02360337380645479;  // std dev = 1,976, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.35322283740931126;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.0302729828600942;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   else return -0.07877675473109268;  // std dev = 0,000, 638,000 (wgt'ed) examples reached here.  /* #neg=638 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.17709649774527653;  // std dev = 2,67e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F) )
%   | | then return -0.07483411874190214;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.053869109795637145;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.026819236723209565;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | | else return 0.002502567883765213;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   else return -0.07324622576333635;  // std dev = 2,90e-07, 643,000 (wgt'ed) examples reached here.  /* #neg=643 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F) )
%   | | then return 0.1819648199849443;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.021685747095106015;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return 0.11522775290067333;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | | else return 0.1816680402596567;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.0684269778442037;  // std dev = 0,000, 624,000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.13400703000801178;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return -0.014139854403711473;  // std dev = 1,960, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.0183929046455354;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.05154528440009307;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   else return -0.06419184008202519;  // std dev = 2,52e-07, 609,000 (wgt'ed) examples reached here.  /* #neg=609 */
Results
   AUC ROC   = 0.999626
   AUC PR    = 0.997815
   CLL	      = -0.082567
   Precision = 0.953216 at threshold = 0.5
   Recall    = 0.987879
   F1        = 0.970238


Total learning time: 62.949 seconds
Total inference time: 2.577 seconds
AUC ROC: 0.999626


Best model AUC ROC so far: 0.999634


******************************************
Best model found
******************************************
Total revision time: 170.305
Best validation AUC ROC: 0.999634


Results
   AUC ROC   = 0.999282
   AUC PR    = 0.996921
   CLL	      = -0.091533
   Precision = 0.909091 at threshold = 0.5
   Recall    = 0.983607
   F1        = 0.944882


Total inference time: 1.525 seconds
AUC ROC: 0.999282
Dataset: imdb,cora, Run: 1, Fold: 2, Type: transfer, Total folds for small set: 2, Time: 01:10:09
{'CLL': -0.091533, 'Recall': 0.983607, 'Learning time': 170.305, 'Precision': [0.909091, 0.5], 'Mapping Results': {'Possible mappings': 42, 'Total time': 3.8227832317352295, 'Generating mappings time': 0.04696178436279297, 'Finding best mapping': 0.003017902374267578, 'Generating paths time': 3.5240111351013184, 'Knowledge compiling time': 0.24878549575805664}, 'Parameter Learning Results': {'CLL': -0.181565, 'Recall': 1.0, 'Precision': [0.72619, 0.5], 'AUC ROC': 0.965257, 'F1': 0.841379, 'AUC PR': 0.72619}, 'AUC ROC': 0.999282, 'F1': 0.944882, 'AUC PR': 0.996921, 'Inference time': 1.525}
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C), venue(E, D), author(E, A) )
%   | then if ( author(F, B), venue(F, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( haswordvenue(G, C) )
%   | | then if ( author(H, B), venue(H, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.7717291820130932;  // std dev = 0,281, 81,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=74 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then if ( author(K, A), venue(K, J) )
%   | | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | else if ( author(L, B), venue(L, J) )
%   | | | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | | else return 0.7081489350995114;  // std dev = 0,357, 40,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=34 */
%   | | | else return 0.7877971763055394;  // std dev = 0,256, 199,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=185 */
%   else return -0.1418510649004889;  // std dev = 0,000, 648,000 (wgt'ed) examples reached here.  /* #neg=648 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.662140269461352;  // std dev = 0,256, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( author(F, B), venue(F, D) )
%   | | | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.6615805205225086;  // std dev = 0,263, 80,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=74 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then if ( author(I, B), venue(I, H) )
%   | | | then return 0.7318979560583333;  // std dev = 0,013, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.6033766892113033;  // std dev = 0,337, 46,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | | else if ( author(J, A), samebib(J, K), author(K, B) )
%   | | | then return 0.7350551080900294;  // std dev = 0,096, 182,000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | | | else if ( haswordauthor(A, L), haswordvenue(M, L) )
%   | | | | then return -0.10841272823234835;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | | else return -0.0847307941425624;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else return -0.12544463852839238;  // std dev = 0,000, 645,000 (wgt'ed) examples reached here.  /* #neg=645 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, B), venue(E, D) )
%   | | then return 0.4879689748652142;  // std dev = 0,259, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.5561408976115826;  // std dev = 0,183, 86,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=83 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( author(H, A), venue(H, G) )
%   | | | then return 0.5551049054848046;  // std dev = 0,030, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | | then return 0.5972634173156863;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.44246501745185235;  // std dev = 0,315, 45,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=37 */
%   | | else if ( author(K, A), samebib(K, L), author(L, B) )
%   | | | then return 0.5752025110035457;  // std dev = 0,172, 182,000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | | | else if ( haswordauthor(B, M), haswordvenue(N, M) )
%   | | | | then return -0.19919362545371405;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else return -0.09646872900689675;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   else return -0.11231637819360603;  // std dev = 0,000, 611,000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.38232547169033254;  // std dev = 0,257, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( author(F, B), venue(F, D) )
%   | | | then return 0.43398973749535863;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4138174642340728;  // std dev = 0,194, 77,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=74 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( author(I, B), venue(I, H) )
%   | | | then return 0.43518909031658226;  // std dev = 0,034, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3597105660417696;  // std dev = 0,277, 50,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=43 */
%   | | else if ( author(J, A), samebib(J, K), author(K, B) )
%   | | | then return 0.43248935962363844;  // std dev = 0,174, 182,000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | | | else if ( haswordauthor(B, L), haswordvenue(M, L) )
%   | | | | then return -0.2525110496748405;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | | else return -0.13741288583945915;  // std dev = 0,294, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   else return -0.10159632948783494;  // std dev = 4,64e-07, 624,000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D), venue(F, E), author(F, A) )
%   | | then return 0.3615786767993612;  // std dev = 0,012, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.28398714105077294;  // std dev = 0,250, 89,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=83 */
%   | | | else if ( author(G, A), venue(G, E) )
%   | | | | then return 0.33334086248574407;  // std dev = 0,028, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | else if ( author(H, B), venue(H, E) )
%   | | | | | then return 0.33279282167090846;  // std dev = 0,030, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | | else return 0.26000059787460383;  // std dev = 0,302, 41,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | else if ( author(I, A), samebib(I, J), author(J, B) )
%   | | then return 0.33094647774363667;  // std dev = 0,158, 182,000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | then return -0.17222845624625907;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.06616740528432923;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   else return -0.0926912761892619;  // std dev = 0,000, 617,000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.28290837025215143;  // std dev = 0,011, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( author(F, B), venue(F, D) )
%   | | | then return 0.2721843486747342;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.22838544203690805;  // std dev = 0,243, 79,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=74 */
%   | else if ( haswordauthor(A, G), haswordauthor(B, G) )
%   | | then return 0.25721392807761423;  // std dev = 0,144, 52,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | else return -0.08518475138839678;  // std dev = 9,06e-08, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
%   else if ( haswordauthor(A, H), haswordauthor(B, H) )
%   | then if ( author(I, A), samebib(I, J), author(J, B) )
%   | | then return 0.270037711880295;  // std dev = 0,371, 182,000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | | else if ( haswordauthor(A, K), haswordvenue(L, K) )
%   | | | then return -0.34053284850624527;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.04444920399245722;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else return -0.08518475138839678;  // std dev = 1,19e-07, 385,000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.19280660046793702;  // std dev = 0,216, 101,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=96 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.2148285653666513;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( author(H, A), venue(H, F) )
%   | | | | then return 0.21504893597709865;  // std dev = 0,024, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | else return 0.19835667972226753;  // std dev = 0,229, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | | else if ( author(I, A), samebib(I, J), author(J, B) )
%   | | | then return 0.21394552347810122;  // std dev = 0,133, 182,000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | | then return -0.14861409428537867;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return -0.05799038422204461;  // std dev = 0,340, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   else return -0.07877675473109276;  // std dev = 0,000, 666,000 (wgt'ed) examples reached here.  /* #neg=666 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, B), venue(E, D) )
%   | | then return 0.19120994495472043;  // std dev = 0,005, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.1877029443674807;  // std dev = 0,151, 85,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=83 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.20838368145218658;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( author(J, A), venue(J, G) )
%   | | | | then return 0.17851412329473304;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | else return 0.1193021068365041;  // std dev = 0,261, 45,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=37 */
%   | | else if ( author(K, A), samebib(K, L), author(L, B) )
%   | | | then return 0.1801792538934933;  // std dev = 0,117, 182,000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | | | else if ( haswordauthor(B, M), haswordvenue(N, M) )
%   | | | | then return -0.08411113994837789;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else return -0.02866555868727093;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   else return -0.07324622576333645;  // std dev = 2,45e-07, 609,000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.12963072006386092;  // std dev = 0,217, 101,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=96 */
%   | else if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( author(G, A), venue(G, F) )
%   | | | then return 0.15554278333047403;  // std dev = 0,015, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.10222375234889645;  // std dev = 0,256, 48,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=40 */
%   | | else if ( author(H, A), samebib(H, I), author(I, B) )
%   | | | then return 0.15508985713529447;  // std dev = 0,104, 182,000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.1423184389662443;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | | else return -0.06062657914988594;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   else return -0.06842697784420372;  // std dev = 0,000, 628,000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( author(E, A), venue(E, D) )
%   | | then return 0.1513357680147611;  // std dev = 0,008, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( author(F, B), venue(F, D) )
%   | | | then return 0.1456169836935457;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.08940915398827505;  // std dev = 0,263, 80,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=74 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( author(I, B), venue(I, H) )
%   | | | then return 0.14861078823059007;  // std dev = 0,025, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else if ( author(J, A), venue(J, H) )
%   | | | | then return 0.13619147887181343;  // std dev = 0,013, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | else return 0.1340866529445129;  // std dev = 0,218, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | else if ( author(K, A), samebib(K, L), author(L, B) )
%   | | | then return 0.1358437391405038;  // std dev = 0,094, 182,000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | | | else return -0.03403327288375226;  // std dev = 0,366, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   else return -0.0641918400820252;  // std dev = 2,52e-07, 602,000 (wgt'ed) examples reached here.  /* #neg=602 */
Results
   AUC ROC   = 0.99579
   AUC PR    = 0.976899
   CLL	      = -0.112053
   Precision = 0.909091 at threshold = 0.5
   Recall    = 0.983607
   F1        = 0.944882


Total learning time: 41.529 seconds
Total inference time: 1.971 seconds
AUC ROC: 0.99579


Dataset: imdb,cora, Run: 1, Fold: 2, Type: scratch, Total folds for small set: 2, Time: 01:10:52
{'CLL': -0.112053, 'Recall': 0.983607, 'Learning time': 41.529, 'Precision': [0.909091, 0.5], 'AUC ROC': 0.99579, 'F1': 0.944882, 'AUC PR': 0.976899, 'Inference time': 1.971}


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Tranferred structured tree: [['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [1.07e-06, 0, 170], 'false': [2.15e-07, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [5.72e-07, 0, 170], 'false': [0.0, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [4.13e-07, 0, 170], 'false': [7.6e-08, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [3.82e-07, 0, 170], 'false': [2.04e-07, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [1.15e-07, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [2.76e-07, 0, 170], 'false': [6.66e-08, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [7.88e-08, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [0.0, 0, 170], 'false': [0.0, 380, 0], 'true,false': [0.096, 2, 212]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true,true': [9.66e-08, 0, 170], 'false': [1.55e-07, 380, 0], 'true,false': [0.096, 2, 212]}]] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false']
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7732592916360104;  // std dev = 6,764, 589,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=539 */
%   else return -0.1418510649004906;  // std dev = 0,000, 1.115,000 (wgt'ed) examples reached here.  /* #neg=1.115 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6391310976138245;  // std dev = 7,236, 597,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=539 */
%   else return -0.1254446385283925;  // std dev = 0,000, 1.029,000 (wgt'ed) examples reached here.  /* #neg=1.029 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5202354314405605;  // std dev = 6,378, 583,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=539 */
%   else return -0.11231637819360776;  // std dev = 0,000, 1.045,000 (wgt'ed) examples reached here.  /* #neg=1.045 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.39142036213422277;  // std dev = 6,378, 583,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=539 */
%   else return -0.10159632948783415;  // std dev = 7,31e-07, 1.024,000 (wgt'ed) examples reached here.  /* #neg=1.024 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.28857325527202893;  // std dev = 6,702, 588,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=539 */
%   else return -0.09269127618926026;  // std dev = 3,75e-07, 1.037,000 (wgt'ed) examples reached here.  /* #neg=1.037 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.23186089227223688;  // std dev = 6,378, 583,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=539 */
%   else return -0.08518475138839675;  // std dev = 2,06e-07, 1.032,000 (wgt'ed) examples reached here.  /* #neg=1.032 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.18640327519701236;  // std dev = 6,311, 582,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=539 */
%   else return -0.07877675473109355;  // std dev = 0,000, 1.051,000 (wgt'ed) examples reached here.  /* #neg=1.051 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1553371563365984;  // std dev = 6,173, 580,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=539 */
%   else return -0.07324622576333654;  // std dev = 3,07e-07, 1.001,000 (wgt'ed) examples reached here.  /* #neg=1.001 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.10894938153108029;  // std dev = 7,006, 593,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=539 */
%   else return -0.06842697784420264;  // std dev = 0,000, 1.005,000 (wgt'ed) examples reached here.  /* #neg=1.005 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.10609219045961726;  // std dev = 6,445, 584,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=539 */
%   else return -0.06419184008202493;  // std dev = 2,48e-07, 994,000 (wgt'ed) examples reached here.  /* #neg=994 */
Results
   AUC ROC   = 0.978917
   AUC PR    = 0.784571
   CLL	      = -0.141464
   Precision = 0.784571 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.879282


Total learning time: 40.66 seconds
Total inference time: 1.919 seconds
AUC ROC: 0.978917


Results in test set
   AUC ROC   = 0.978917
   AUC PR    = 0.784571
   CLL	      = -0.141464
   Precision = 0.784571 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.879282


Total inference time: 1.919 seconds
AUC ROC: 0.978917
Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [6.764, 50, 539], 'false': [0.0, 1115, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [7.236, 58, 539], 'false': [0.0, 1029, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [6.378, 44, 539], 'false': [0.0, 1045, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [6.378, 44, 539], 'false': [7.31e-07, 1024, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [6.702, 49, 539], 'false': [3.75e-07, 1037, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [6.378, 44, 539], 'false': [2.06e-07, 1032, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [6.311, 43, 539], 'false': [0.0, 1051, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [6.173, 41, 539], 'false': [3.07e-07, 1001, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [7.006, 54, 539], 'false': [0.0, 1005, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [6.445, 45, 539], 'false': [2.48e-07, 994, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true', 0.9151103565365025)]
Tree #2: [('true', 0.9028475711892797)]
Tree #3: [('true', 0.9245283018867925)]
Tree #4: [('true', 0.9245283018867925)]
Tree #5: [('true', 0.9166666666666666)]
Tree #6: [('true', 0.9245283018867925)]
Tree #7: [('true', 0.9261168384879725)]
Tree #8: [('true', 0.9293103448275862)]
Tree #9: [('true', 0.9089376053962901)]
Tree #10: [('true', 0.922945205479452)]


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.858148935099508;  // std dev = 2,50e-06, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, F) )
%   | | | then return 0.17393840878372288;  // std dev = 0,465, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.04185106490048778;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.050941973991396876;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490049035;  // std dev = 0,000, 1.013,000 (wgt'ed) examples reached here.  /* #neg=1.013 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.7194734122109584;  // std dev = 0,000, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, F) )
%   | | | then return 0.1356294016986479;  // std dev = 0,458, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.06316748255992503;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.010762336404471228;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1254446385283925;  // std dev = 0,000, 1.046,000 (wgt'ed) examples reached here.  /* #neg=1.046 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.555366436746283;  // std dev = 7,35e-07, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.14947646633313438;  // std dev = 0,471, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.010749678947009407;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.044465761126201646;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.11231637819360776;  // std dev = 0,000, 1.043,000 (wgt'ed) examples reached here.  /* #neg=1.043 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.41751358415831263;  // std dev = 0,000, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.12598039916732104;  // std dev = 0,471, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 0.00380073718733559;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.03325803078437926;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.10159632948783413;  // std dev = 7,42e-07, 1.044,000 (wgt'ed) examples reached here.  /* #neg=1.044 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.32071184716014894;  // std dev = 0,000, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.17117809120074529;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.039840230569870023;  // std dev = 0,288, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.06808348197222866;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | | else return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.09269127618926026;  // std dev = 3,72e-07, 1.035,000 (wgt'ed) examples reached here.  /* #neg=1.035 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.25517224256948784;  // std dev = 3,48e-07, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, F) )
%   | | | then return 0.07291535325760701;  // std dev = 0,471, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.03153753844449149;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.03413005947786503;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08518475138839675;  // std dev = 2,02e-07, 999,000 (wgt'ed) examples reached here.  /* #neg=999 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.2097577156325346;  // std dev = 2,60e-07, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, F) )
%   | | | then return 0.01100952590513262;  // std dev = 0,452, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return -0.05159769476981629;  // std dev = 0,267, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.04442963096184243;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109351;  // std dev = 0,000, 1.029,000 (wgt'ed) examples reached here.  /* #neg=1.029 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.1770964977452783;  // std dev = 0,000, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F) )
%   | | then return 0.03888572115560597;  // std dev = 0,465, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.03899463063068857;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.045265904910608556;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07324622576333677;  // std dev = 2,55e-07, 1.049,000 (wgt'ed) examples reached here.  /* #neg=1.049 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 9.573819274314126E-4;  // std dev = 0,452, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.041788195578556106;  // std dev = 0,267, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.028775619817709628;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06842697784420242;  // std dev = 1,15e-07, 1.049,000 (wgt'ed) examples reached here.  /* #neg=1.049 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.134007030008012;  // std dev = 0,000, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, F) )
%   | | | then return -0.012224661603838883;  // std dev = 0,445, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | | then return -0.12032132629247533;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | else return 0.015723575874999396;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | then return -0.023006936533703025;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.06419184008202529;  // std dev = 1,03e-07, 1.056,000 (wgt'ed) examples reached here.  /* #neg=1.056 */
Results
   AUC ROC   = 0.999849
   AUC PR    = 0.999102
   CLL	      = -0.077533
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.985158
   F1        = 0.992523


Total learning time: 137.87 seconds
Total inference time: 3.656 seconds
AUC ROC: 0.999849


Best model AUC ROC so far: 0.999849


Refining iteration 2
********************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '0;true;author(D, A), samebib(D, E), author(E, B).;false;true', '0;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '0;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;false', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '1;true;author(D, A), samebib(D, E), author(E, B).;false;true', '1;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '1;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;false', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '2;true;author(D, A), samebib(D, E), author(E, B).;false;true', '2;true,false,false,false;haswordauthor(A, J), haswordvenue(K, J).;false;false', '2;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;true', '2;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '3;true;author(D, A), samebib(D, E), author(E, B).;false;true', '3;true,false,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;false', '3;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;true', '3;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '4;true;author(D, A), samebib(D, E), author(E, B).;false;true', '4;true,false,false,false;haswordauthor(A, J), haswordvenue(K, J).;false;false', '4;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;true', '4;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '5;true;author(D, A), samebib(D, E), author(E, B).;false;true', '5;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '5;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;false', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '6;true;author(D, A), samebib(D, E), author(E, B).;false;true', '6;true,false;haswordauthor(A, F), haswordvenue(G, F).;false;true', '6;true,false,false;haswordauthor(B, H), haswordvenue(I, H).;false;false', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '7;true;author(D, A), samebib(D, E), author(E, B).;false;true', '7;true,false,false,false;haswordauthor(B, J), haswordvenue(K, J).;false;false', '7;true,false;haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F).;true;true', '7;true,false,false;haswordauthor(A, H), haswordvenue(I, H).;false;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '8;true;author(D, A), samebib(D, E), author(E, B).;false;true', '8;true,false,true,false;haswordauthor(B, J), haswordvenue(K, J).;true;false', '8;true,false;haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F).;true;false', '8;true,false,true;haswordauthor(A, H), haswordvenue(I, H).;false;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;false', '9;true;author(D, A), samebib(D, E), author(E, B).;false;true', '9;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true', '9;true,false,true,false;haswordauthor(A, H), haswordvenue(I, H).;false;false', '9;true,false,true;haswordauthor(A, F).;true;true', '9;true,false,false;haswordauthor(A, J), haswordvenue(K, J).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,false,true,true', 0.6842105263157895), ('true,false,true,false', 0.9), ('true,false,false,true', 0.9090909090909091)]
Tree #2: [('true,false,true,true', 0.7), ('true,false,true,false', 0.8), ('true,false,false,true', 0.875)]
Tree #3: [('true,false,true', 0.6666666666666666), ('true,false,false,true', 0.875), ('true,false,false,false,true', 0.9)]
Tree #4: [('true,false,true', 0.6666666666666666), ('true,false,false,true', 0.8571428571428571), ('true,false,false,false,true', 0.9)]
Tree #5: [('true,false,true', 0.6), ('true,false,false,true', 0.9090909090909091), ('true,false,false,false,true', 0.9285714285714286)]
Tree #6: [('true,false,true,true', 0.6666666666666666), ('true,false,true,false', 0.9), ('true,false,false,true', 0.9090909090909091)]
Tree #7: [('true,false,true,true', 0.7142857142857143), ('true,false,false,true', 0.9230769230769231), ('true,false,true,false', 0.9230769230769231)]
Tree #8: [('true,false,true', 0.6842105263157895), ('true,false,false,true', 0.9166666666666666), ('true,false,false,false,true', 0.9285714285714286)]
Tree #9: [('true,false,true,false,true', 0.9166666666666666), ('true,false,true,true', 0.9230769230769231)]
Tree #10: [('true,false,true,true', 0.7272727272727273), ('true,false,true,false,false', 0.875), ('true,false,false,true', 0.9090909090909091)]


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.858148935099508;  // std dev = 2,50e-06, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.0702701472207245;  // std dev = 2,348, 33,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.06492798797741087;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490049043;  // std dev = 0,000, 1.045,000 (wgt'ed) examples reached here.  /* #neg=1.045 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.7194734122109584;  // std dev = 0,000, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.1086371214610957;  // std dev = 2,277, 27,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.023018577047365072;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.1254446385283925;  // std dev = 0,000, 1.024,000 (wgt'ed) examples reached here.  /* #neg=1.024 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.555366436746283;  // std dev = 7,35e-07, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.07494577568504629;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.04056968720823142;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.07414513340586262;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360762;  // std dev = 0,000, 1.007,000 (wgt'ed) examples reached here.  /* #neg=1.007 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.41751358415831263;  // std dev = 0,000, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.0852261008763031;  // std dev = 0,439, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.06498838070632959;  // std dev = 0,954, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return -0.015803788411815907;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | | else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.10159632948783413;  // std dev = 7,36e-07, 1.034,000 (wgt'ed) examples reached here.  /* #neg=1.034 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.32071184716014894;  // std dev = 0,000, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then return 0.21167347671745315;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.052226707825448866;  // std dev = 0,965, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | | then return -0.021762006423738812;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | | else return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.0926912761892604;  // std dev = 3,70e-07, 998,000 (wgt'ed) examples reached here.  /* #neg=998 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.25517224256948784;  // std dev = 3,48e-07, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.14047494226149024;  // std dev = 2,106, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.03623263498897658;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08518475138839675;  // std dev = 1,98e-07, 970,000 (wgt'ed) examples reached here.  /* #neg=970 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.2097577156325346;  // std dev = 2,60e-07, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.008138882086445367;  // std dev = 2,284, 31,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return -0.00469291624868581;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.0787767547310935;  // std dev = 0,000, 1.010,000 (wgt'ed) examples reached here.  /* #neg=1.010 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.1770964977452783;  // std dev = 0,000, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F), haswordauthor(A, F) )
%   | | then return 0.05037879565130998;  // std dev = 0,458, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return -0.08007075769769637;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | | then return 0.05134229750993217;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.0732462257633366;  // std dev = 2,95e-07, 1.013,000 (wgt'ed) examples reached here.  /* #neg=1.013 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F), haswordauthor(B, F) )
%   | | then if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 0.056613290401815015;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06168091663425885;  // std dev = 1,360, 38,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=2 */
%   else return -0.06842697784420239;  // std dev = 1,30e-07, 1.054,000 (wgt'ed) examples reached here.  /* #neg=1.054 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( author(D, A), samebib(D, E), author(E, B) )
%   | then return 0.134007030008012;  // std dev = 0,000, 531,000 (wgt'ed) examples reached here.  /* #pos=531 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(A, F) )
%   | | | then return 0.045596053764223946;  // std dev = 0,465, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | | then return -0.14529187861619342;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | | else return -0.03735068577806194;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | then return -0.044906005729408824;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.06459827777706507;  // std dev = 5,89e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06419184008202501;  // std dev = 2,23e-07, 1.011,000 (wgt'ed) examples reached here.  /* #neg=1.011 */
Results
   AUC ROC   = 0.999847
   AUC PR    = 0.999092
   CLL	      = -0.077689
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.985158
   F1        = 0.992523


Total learning time: 153.24 seconds
Total inference time: 3.807 seconds
AUC ROC: 0.999847


Best model AUC ROC so far: 0.999849


******************************************
Best model found
******************************************
Total revision time: 341.15200000000004
Best validation AUC ROC: 0.999849


Results
   AUC ROC   = 0.999282
   AUC PR    = 0.996921
   CLL	      = -0.083357
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.983607
   F1        = 0.991736


Total inference time: 1.899 seconds
AUC ROC: 0.999282
Dataset: imdb,cora, Run: 1, Fold: 2, Type: transfer, Total folds for small set: 3, Time: 01:16:42
{'CLL': -0.083357, 'Recall': 0.983607, 'Learning time': 341.15200000000004, 'Precision': [1.0, 0.5], 'Mapping Results': {'Possible mappings': 42, 'Total time': 4.335874080657959, 'Generating mappings time': 0.04840207099914551, 'Finding best mapping': 0.0030989646911621094, 'Generating paths time': 4.008845329284668, 'Knowledge compiling time': 0.27552056312561035}, 'Parameter Learning Results': {'CLL': -0.182299, 'Recall': 1.0, 'Precision': [0.72619, 0.5], 'AUC ROC': 0.965257, 'F1': 0.841379, 'AUC PR': 0.72619}, 'AUC ROC': 0.999282, 'F1': 0.991736, 'AUC PR': 0.996921, 'Inference time': 1.899}
